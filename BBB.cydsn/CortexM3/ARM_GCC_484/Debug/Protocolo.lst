ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Protocolo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	count_teclas1,1,1
  19              		.comm	comas1,1,1
  20              		.comm	comas2,1,1
  21              		.comm	id_coma1,1,1
  22              		.comm	id_teclado1,1,1
  23              		.comm	count_teclas2,1,1
  24              		.comm	id_coma2,1,1
  25              		.comm	id_teclado2,1,1
  26              		.comm	posx1,2,2
  27              		.comm	posy1,2,2
  28              		.comm	sizeletra1,2,2
  29              		.comm	posx2,2,2
  30              		.comm	posy2,2,2
  31              		.comm	sizeletra2,2,2
  32              		.comm	teclas1,1,1
  33              		.comm	teclas2,1,1
  34              		.comm	flujo_LCD1,1,1
  35              		.comm	flujo_LCD2,1,1
  36              		.comm	Buffer_LCD1,30,4
  37              		.comm	Buffer_LCD2,30,4
  38              		.comm	count_protector,1,1
  39              		.comm	count_protector2,1,1
  40              		.comm	password_lcd,9,4
  41              		.comm	imagen_grado,2,2
  42              		.comm	prox_caso,8,4
  43              		.comm	bloqueo_LCD,3,4
  44              		.comm	id_estacion,5,4
  45              		.comm	id_venta,8,4
  46              		.comm	trama_totales,200,4
  47              		.comm	ppux10,1,1
  48              		.comm	nombre_pro1,17,4
  49              		.comm	nombre_pro2,17,4
  50              		.comm	nombre_pro3,17,4
  51              		.comm	version,4,4
  52              		.comm	lado1,93,4
  53              		.comm	lado2,93,4
  54              		.comm	nombre,33,4
  55              		.comm	nit,15,4
  56              		.comm	telefono,20,4
  57              		.comm	direccion,33,4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 2


  58              		.comm	lema1,32,4
  59              		.comm	lema2,32,4
  60              		.comm	id_logo,2,4
  61              		.comm	km,2,4
  62              		.comm	fecha,3,4
  63              		.comm	hora,2,4
  64              		.comm	rventa1,97,4
  65              		.comm	rventa2,97,4
  66              		.comm	ok_RF,1,1
  67              		.comm	ok_datosRF,1,1
  68              		.comm	rf_mod,200,4
  69              		.comm	buffer_i2c,64,4
  70              		.comm	crc_total,1,1
  71              		.comm	print1,2,4
  72              		.comm	print2,2,4
  73              		.comm	rx_timeout,1,1
  74              		.global	msn_tc
  75              		.data
  76              		.align	2
  77              		.type	msn_tc, %object
  78              		.size	msn_tc, 17
  79              	msn_tc:
  80 0000 544F5441 		.ascii	"TOTALES CORRIENTE"
  80      4C455320 
  80      434F5252 
  80      49454E54 
  80      45
  81              		.global	msn_te
  82 0011 000000   		.align	2
  83              		.type	msn_te, %object
  84              		.size	msn_te, 13
  85              	msn_te:
  86 0014 544F5441 		.ascii	"TOTALES EXTRA"
  86      4C455320 
  86      45585452 
  86      41
  87              		.global	msn_td
  88 0021 000000   		.align	2
  89              		.type	msn_td, %object
  90              		.size	msn_td, 14
  91              	msn_td:
  92 0024 544F5441 		.ascii	"TOTALES DIESEL"
  92      4C455320 
  92      44494553 
  92      454C
  93              		.global	msn_lecact
  94 0032 0000     		.align	2
  95              		.type	msn_lecact, %object
  96              		.size	msn_lecact, 15
  97              	msn_lecact:
  98 0034 4C656374 		.ascii	"Lectura Actual:"
  98      75726120 
  98      41637475 
  98      616C3A
  99              		.global	msn_lecaan
 100 0043 00       		.align	2
 101              		.type	msn_lecaan, %object
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 3


 102              		.size	msn_lecaan, 17
 103              	msn_lecaan:
 104 0044 4C656374 		.ascii	"Lectura Anterior:"
 104      75726120 
 104      416E7465 
 104      72696F72 
 104      3A
 105              		.global	msn_tventas
 106 0055 000000   		.align	2
 107              		.type	msn_tventas, %object
 108              		.size	msn_tventas, 18
 109              	msn_tventas:
 110 0058 546F7461 		.ascii	"Total de Ventas: $"
 110      6C206465 
 110      2056656E 
 110      7461733A 
 110      2024
 111 006a 0000     		.section	.text.Rx_Surtidor,"ax",%progbits
 112              		.align	2
 113              		.global	Rx_Surtidor
 114              		.thumb
 115              		.thumb_func
 116              		.type	Rx_Surtidor, %function
 117              	Rx_Surtidor:
 118              	.LFB63:
 119              		.file 1 ".\\Protocolo.c"
   1:.\Protocolo.c **** /*
   2:.\Protocolo.c **** ***************************************************************************************************
   3:.\Protocolo.c **** *                                           GRP550/700 CODE
   4:.\Protocolo.c **** 
   5:.\Protocolo.c **** *
   6:.\Protocolo.c **** *                             (c) Copyright 2013; Sistemas Insepet LTDA
   7:.\Protocolo.c **** *
   8:.\Protocolo.c **** *               All rights reserved.  Protected by international copyright laws.
   9:.\Protocolo.c **** *               Knowledge of the source code may NOT be used to develop a similar product.
  10:.\Protocolo.c **** *               Please help us continue to provide the Embedded community with the finest
  11:.\Protocolo.c **** *               software available.  Your honesty is greatly appreciated.
  12:.\Protocolo.c **** ***************************************************************************************************
  13:.\Protocolo.c **** */
  14:.\Protocolo.c **** 
  15:.\Protocolo.c **** /*
  16:.\Protocolo.c **** ***************************************************************************************************
  17:.\Protocolo.c **** *
  18:.\Protocolo.c **** *                                             GRP550/700 CODE
  19:.\Protocolo.c **** *
  20:.\Protocolo.c **** *                                             CYPRESS PSoC5LP
  21:.\Protocolo.c **** *                                                with the
  22:.\Protocolo.c **** *                                            CY8C5969AXI-LP035
  23:.\Protocolo.c **** *
  24:.\Protocolo.c **** * Filename      : Protocolo.c
  25:.\Protocolo.c **** * Version       : V1.00
  26:.\Protocolo.c **** * Programmer(s) : 
  27:.\Protocolo.c ****                   
  28:.\Protocolo.c **** ***************************************************************************************************
  29:.\Protocolo.c **** */
  30:.\Protocolo.c **** 
  31:.\Protocolo.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 4


  32:.\Protocolo.c **** /*
  33:.\Protocolo.c **** ***************************************************************************************************
  34:.\Protocolo.c **** *                                             INCLUDE FILES
  35:.\Protocolo.c **** ***************************************************************************************************
  36:.\Protocolo.c **** */
  37:.\Protocolo.c **** #include <device.h>
  38:.\Protocolo.c **** #include "VariablesG.h"
  39:.\Protocolo.c **** #include "i2c.h"
  40:.\Protocolo.c **** #include "Print.h"
  41:.\Protocolo.c **** 
  42:.\Protocolo.c **** /*
  43:.\Protocolo.c **** ***************************************************************************************************
  44:.\Protocolo.c **** *                                            	MENSAJES
  45:.\Protocolo.c **** ***************************************************************************************************
  46:.\Protocolo.c **** */
  47:.\Protocolo.c **** uint8 rx_timeout;								//0 inicia espera  1 se cumplio el tiempo
  48:.\Protocolo.c **** uint8 msn_tc[17]="TOTALES CORRIENTE";
  49:.\Protocolo.c **** uint8 msn_te[13]="TOTALES EXTRA";
  50:.\Protocolo.c **** uint8 msn_td[14]="TOTALES DIESEL";
  51:.\Protocolo.c **** uint8 msn_lecact[15]="Lectura Actual:";
  52:.\Protocolo.c **** uint8 msn_lecaan[17]="Lectura Anterior:";
  53:.\Protocolo.c **** uint8 msn_tventas[18]="Total de Ventas: $";
  54:.\Protocolo.c **** 
  55:.\Protocolo.c **** /*
  56:.\Protocolo.c **** ***************************************************************************************************
  57:.\Protocolo.c **** *                                        CY_ISR(modo_mux)
  58:.\Protocolo.c **** *
  59:.\Protocolo.c **** * Description : 
  60:.\Protocolo.c **** *               
  61:.\Protocolo.c **** ***************************************************************************************************
  62:.\Protocolo.c **** */
  63:.\Protocolo.c **** CY_ISR(Rx_Surtidor){
 120              		.loc 1 63 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 00AF     		add	r7, sp, #0
 129              		.cfi_def_cfa_register 7
  64:.\Protocolo.c ****     Timer_RxSurtidor_ReadStatusRegister();
 130              		.loc 1 64 0
 131 0004 FFF7FEFF 		bl	Timer_RxSurtidor_ReadStatusRegister
  65:.\Protocolo.c **** 	rx_timeout=1;	
 132              		.loc 1 65 0
 133 0008 014B     		ldr	r3, .L2
 134 000a 0122     		movs	r2, #1
 135 000c 1A70     		strb	r2, [r3]
  66:.\Protocolo.c **** }
 136              		.loc 1 66 0
 137 000e 80BD     		pop	{r7, pc}
 138              	.L3:
 139              		.align	2
 140              	.L2:
 141 0010 00000000 		.word	rx_timeout
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 5


 142              		.cfi_endproc
 143              	.LFE63:
 144              		.size	Rx_Surtidor, .-Rx_Surtidor
 145              		.section	.text.get_estado,"ax",%progbits
 146              		.align	2
 147              		.global	get_estado
 148              		.thumb
 149              		.thumb_func
 150              		.type	get_estado, %function
 151              	get_estado:
 152              	.LFB64:
  67:.\Protocolo.c **** 
  68:.\Protocolo.c **** 
  69:.\Protocolo.c **** /*
  70:.\Protocolo.c **** ***************************************************************************************************
  71:.\Protocolo.c **** *                                         ver_estado( void )
  72:.\Protocolo.c **** *
  73:.\Protocolo.c **** * Description : 
  74:.\Protocolo.c **** *               
  75:.\Protocolo.c **** *
  76:.\Protocolo.c **** * Argument(s) : none
  77:.\Protocolo.c **** *
  78:.\Protocolo.c **** * Return(s)   : none
  79:.\Protocolo.c **** *
  80:.\Protocolo.c **** * Caller(s)   : 
  81:.\Protocolo.c **** *
  82:.\Protocolo.c **** * Note(s)     : none.
  83:.\Protocolo.c **** ***************************************************************************************************
  84:.\Protocolo.c **** */
  85:.\Protocolo.c **** 
  86:.\Protocolo.c **** uint8 get_estado(uint8 dir){
 153              		.loc 1 86 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 16
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157 0000 80B5     		push	{r7, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 84B0     		sub	sp, sp, #16
 162              		.cfi_def_cfa_offset 24
 163 0004 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 165 0006 0346     		mov	r3, r0
 166 0008 FB71     		strb	r3, [r7, #7]
  87:.\Protocolo.c ****     uint8 estado;
  88:.\Protocolo.c ****     Surtidor_ClearRxBuffer();	
 167              		.loc 1 88 0
 168 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  89:.\Protocolo.c ****     Surtidor_PutChar(dir);
 169              		.loc 1 89 0
 170 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 171 0010 1846     		mov	r0, r3
 172 0012 FFF7FEFF 		bl	Surtidor_PutChar
  90:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 173              		.loc 1 90 0
 174 0016 1E48     		ldr	r0, .L9
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 6


 175 0018 FFF7FEFF 		bl	isr_1_StartEx
  91:.\Protocolo.c ****     Timer_RxSurtidor_Start();
 176              		.loc 1 91 0
 177 001c FFF7FEFF 		bl	Timer_RxSurtidor_Start
  92:.\Protocolo.c **** 	rx_timeout=0;
 178              		.loc 1 92 0
 179 0020 1C4B     		ldr	r3, .L9+4
 180 0022 0022     		movs	r2, #0
 181 0024 1A70     		strb	r2, [r3]
  93:.\Protocolo.c ****     CyDelay(10);
 182              		.loc 1 93 0
 183 0026 0A20     		movs	r0, #10
 184 0028 FFF7FEFF 		bl	CyDelay
  94:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 185              		.loc 1 94 0
 186 002c 0BE0     		b	.L5
 187              	.L7:
  95:.\Protocolo.c **** 		if(rx_timeout==1){
 188              		.loc 1 95 0
 189 002e 194B     		ldr	r3, .L9+4
 190 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 191 0032 012B     		cmp	r3, #1
 192 0034 07D1     		bne	.L5
  96:.\Protocolo.c **** 			isr_1_Stop();
 193              		.loc 1 96 0
 194 0036 FFF7FEFF 		bl	isr_1_Stop
  97:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 195              		.loc 1 97 0
 196 003a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  98:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 197              		.loc 1 98 0
 198 003e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  99:.\Protocolo.c **** 			return 0;
 199              		.loc 1 99 0
 200 0042 0023     		movs	r3, #0
 201 0044 20E0     		b	.L6
 202              	.L5:
  94:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 203              		.loc 1 94 0 discriminator 1
 204 0046 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 205 004a 0346     		mov	r3, r0
 206 004c 002B     		cmp	r3, #0
 207 004e EED0     		beq	.L7
 100:.\Protocolo.c **** 		}
 101:.\Protocolo.c **** 	}
 102:.\Protocolo.c ****     estado=Surtidor_ReadRxData();
 208              		.loc 1 102 0
 209 0050 FFF7FEFF 		bl	Surtidor_ReadRxData
 210 0054 0346     		mov	r3, r0
 211 0056 FB73     		strb	r3, [r7, #15]
 103:.\Protocolo.c **** 	if((estado&0x0F)==dir){
 212              		.loc 1 103 0
 213 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 214 005a 03F00F02 		and	r2, r3, #15
 215 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 216 0060 9A42     		cmp	r2, r3
 217 0062 0AD1     		bne	.L8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 7


 104:.\Protocolo.c **** 		estado=(estado&0xF0)>>4;
 218              		.loc 1 104 0
 219 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 220 0066 1B09     		lsrs	r3, r3, #4
 221 0068 FB73     		strb	r3, [r7, #15]
 105:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 222              		.loc 1 105 0
 223 006a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 106:.\Protocolo.c **** 		isr_1_Stop();
 224              		.loc 1 106 0
 225 006e FFF7FEFF 		bl	isr_1_Stop
 107:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 226              		.loc 1 107 0
 227 0072 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 108:.\Protocolo.c **** 	    return estado;
 228              		.loc 1 108 0
 229 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 230 0078 06E0     		b	.L6
 231              	.L8:
 109:.\Protocolo.c **** 	}
 110:.\Protocolo.c **** 	else{
 111:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 232              		.loc 1 111 0
 233 007a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 112:.\Protocolo.c **** 		isr_1_Stop();
 234              		.loc 1 112 0
 235 007e FFF7FEFF 		bl	isr_1_Stop
 113:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 236              		.loc 1 113 0
 237 0082 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 114:.\Protocolo.c **** 	    return 0;	
 238              		.loc 1 114 0
 239 0086 0023     		movs	r3, #0
 240              	.L6:
 115:.\Protocolo.c **** 	}
 116:.\Protocolo.c **** }
 241              		.loc 1 116 0
 242 0088 1846     		mov	r0, r3
 243 008a 1037     		adds	r7, r7, #16
 244 008c BD46     		mov	sp, r7
 245              		@ sp needed
 246 008e 80BD     		pop	{r7, pc}
 247              	.L10:
 248              		.align	2
 249              	.L9:
 250 0090 00000000 		.word	Rx_Surtidor
 251 0094 00000000 		.word	rx_timeout
 252              		.cfi_endproc
 253              	.LFE64:
 254              		.size	get_estado, .-get_estado
 255              		.section	.text.ver_pos,"ax",%progbits
 256              		.align	2
 257              		.global	ver_pos
 258              		.thumb
 259              		.thumb_func
 260              		.type	ver_pos, %function
 261              	ver_pos:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 8


 262              	.LFB65:
 117:.\Protocolo.c **** 
 118:.\Protocolo.c **** /*
 119:.\Protocolo.c **** ***************************************************************************************************
 120:.\Protocolo.c **** *                                         ver_pos( void )
 121:.\Protocolo.c **** *
 122:.\Protocolo.c **** * Description : 
 123:.\Protocolo.c **** *               
 124:.\Protocolo.c **** *
 125:.\Protocolo.c **** * Argument(s) : none
 126:.\Protocolo.c **** *
 127:.\Protocolo.c **** * Return(s)   : none
 128:.\Protocolo.c **** *
 129:.\Protocolo.c **** * Caller(s)   : 
 130:.\Protocolo.c **** *
 131:.\Protocolo.c **** * Note(s)     : none.
 132:.\Protocolo.c **** ***************************************************************************************************
 133:.\Protocolo.c **** */
 134:.\Protocolo.c **** uint8 ver_pos (void){
 263              		.loc 1 134 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 8
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267 0000 80B5     		push	{r7, lr}
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 7, -8
 270              		.cfi_offset 14, -4
 271 0002 82B0     		sub	sp, sp, #8
 272              		.cfi_def_cfa_offset 16
 273 0004 00AF     		add	r7, sp, #0
 274              		.cfi_def_cfa_register 7
 135:.\Protocolo.c **** uint8 x;
 136:.\Protocolo.c **** lado1.dir=0xff;
 275              		.loc 1 136 0
 276 0006 244B     		ldr	r3, .L19
 277 0008 FF22     		movs	r2, #255
 278 000a 1A70     		strb	r2, [r3]
 137:.\Protocolo.c **** lado2.dir=0xff;
 279              		.loc 1 137 0
 280 000c 234B     		ldr	r3, .L19+4
 281 000e FF22     		movs	r2, #255
 282 0010 1A70     		strb	r2, [r3]
 138:.\Protocolo.c **** 	CyDelay(5);
 283              		.loc 1 138 0
 284 0012 0520     		movs	r0, #5
 285 0014 FFF7FEFF 		bl	CyDelay
 139:.\Protocolo.c ****     if(get_estado(0)!=0){
 286              		.loc 1 139 0
 287 0018 0020     		movs	r0, #0
 288 001a FFF7FEFF 		bl	get_estado
 289 001e 0346     		mov	r3, r0
 290 0020 002B     		cmp	r3, #0
 291 0022 02D0     		beq	.L12
 140:.\Protocolo.c **** 		lado2.dir=0;
 292              		.loc 1 140 0
 293 0024 1D4B     		ldr	r3, .L19+4
 294 0026 0022     		movs	r2, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 9


 295 0028 1A70     		strb	r2, [r3]
 296              	.L12:
 141:.\Protocolo.c **** 	}	
 142:.\Protocolo.c ****     for(x=1;x<=15;x++){
 297              		.loc 1 142 0
 298 002a 0123     		movs	r3, #1
 299 002c FB71     		strb	r3, [r7, #7]
 300 002e 1FE0     		b	.L13
 301              	.L17:
 143:.\Protocolo.c **** 		CyDelay(5);
 302              		.loc 1 143 0
 303 0030 0520     		movs	r0, #5
 304 0032 FFF7FEFF 		bl	CyDelay
 144:.\Protocolo.c ****         if(get_estado(x)!=0){
 305              		.loc 1 144 0
 306 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 307 0038 1846     		mov	r0, r3
 308 003a FFF7FEFF 		bl	get_estado
 309 003e 0346     		mov	r3, r0
 310 0040 002B     		cmp	r3, #0
 311 0042 12D0     		beq	.L14
 145:.\Protocolo.c **** 			if(lado1.dir==0xFF){
 312              		.loc 1 145 0
 313 0044 144B     		ldr	r3, .L19
 314 0046 1B78     		ldrb	r3, [r3]
 315 0048 DBB2     		uxtb	r3, r3
 316 004a FF2B     		cmp	r3, #255
 317 004c 03D1     		bne	.L15
 146:.\Protocolo.c **** 				lado1.dir=x;
 318              		.loc 1 146 0
 319 004e 124B     		ldr	r3, .L19
 320 0050 FA79     		ldrb	r2, [r7, #7]
 321 0052 1A70     		strb	r2, [r3]
 322 0054 09E0     		b	.L14
 323              	.L15:
 147:.\Protocolo.c **** 			}
 148:.\Protocolo.c **** 			else if(lado2.dir==0xFF){
 324              		.loc 1 148 0
 325 0056 114B     		ldr	r3, .L19+4
 326 0058 1B78     		ldrb	r3, [r3]
 327 005a DBB2     		uxtb	r3, r3
 328 005c FF2B     		cmp	r3, #255
 329 005e 04D1     		bne	.L14
 149:.\Protocolo.c **** 				lado2.dir=x;
 330              		.loc 1 149 0
 331 0060 0E4B     		ldr	r3, .L19+4
 332 0062 FA79     		ldrb	r2, [r7, #7]
 333 0064 1A70     		strb	r2, [r3]
 150:.\Protocolo.c **** 				return 1;
 334              		.loc 1 150 0
 335 0066 0123     		movs	r3, #1
 336 0068 12E0     		b	.L16
 337              	.L14:
 142:.\Protocolo.c ****     for(x=1;x<=15;x++){
 338              		.loc 1 142 0
 339 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 340 006c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 10


 341 006e FB71     		strb	r3, [r7, #7]
 342              	.L13:
 142:.\Protocolo.c ****     for(x=1;x<=15;x++){
 343              		.loc 1 142 0 is_stmt 0 discriminator 1
 344 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 345 0072 0F2B     		cmp	r3, #15
 346 0074 DCD9     		bls	.L17
 151:.\Protocolo.c **** 			}
 152:.\Protocolo.c **** 		}
 153:.\Protocolo.c **** 	}
 154:.\Protocolo.c **** 	if((lado1.dir!=0xFF)&&(lado2.dir!=0xFF)){
 347              		.loc 1 154 0 is_stmt 1
 348 0076 084B     		ldr	r3, .L19
 349 0078 1B78     		ldrb	r3, [r3]
 350 007a DBB2     		uxtb	r3, r3
 351 007c FF2B     		cmp	r3, #255
 352 007e 06D0     		beq	.L18
 353              		.loc 1 154 0 is_stmt 0 discriminator 1
 354 0080 064B     		ldr	r3, .L19+4
 355 0082 1B78     		ldrb	r3, [r3]
 356 0084 DBB2     		uxtb	r3, r3
 357 0086 FF2B     		cmp	r3, #255
 358 0088 01D0     		beq	.L18
 155:.\Protocolo.c **** 		return 1;
 359              		.loc 1 155 0 is_stmt 1
 360 008a 0123     		movs	r3, #1
 361 008c 00E0     		b	.L16
 362              	.L18:
 156:.\Protocolo.c **** 	}
 157:.\Protocolo.c **** 	else{
 158:.\Protocolo.c **** 		return 0;
 363              		.loc 1 158 0
 364 008e 0023     		movs	r3, #0
 365              	.L16:
 159:.\Protocolo.c **** 	}
 160:.\Protocolo.c **** }
 366              		.loc 1 160 0
 367 0090 1846     		mov	r0, r3
 368 0092 0837     		adds	r7, r7, #8
 369 0094 BD46     		mov	sp, r7
 370              		@ sp needed
 371 0096 80BD     		pop	{r7, pc}
 372              	.L20:
 373              		.align	2
 374              	.L19:
 375 0098 00000000 		.word	lado1
 376 009c 00000000 		.word	lado2
 377              		.cfi_endproc
 378              	.LFE65:
 379              		.size	ver_pos, .-ver_pos
 380              		.section	.text.ver_error,"ax",%progbits
 381              		.align	2
 382              		.global	ver_error
 383              		.thumb
 384              		.thumb_func
 385              		.type	ver_error, %function
 386              	ver_error:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 11


 387              	.LFB66:
 161:.\Protocolo.c **** 
 162:.\Protocolo.c **** /*
 163:.\Protocolo.c **** ***************************************************************************************************
 164:.\Protocolo.c **** *                                         void ver_error(uint8 val)
 165:.\Protocolo.c **** *
 166:.\Protocolo.c **** * Description : 
 167:.\Protocolo.c **** *               
 168:.\Protocolo.c **** *
 169:.\Protocolo.c **** * Argument(s) : none
 170:.\Protocolo.c **** *
 171:.\Protocolo.c **** * Return(s)   : none
 172:.\Protocolo.c **** *
 173:.\Protocolo.c **** * Caller(s)   : 
 174:.\Protocolo.c **** *
 175:.\Protocolo.c **** * Note(s)     : none.
 176:.\Protocolo.c **** ***************************************************************************************************
 177:.\Protocolo.c **** */
 178:.\Protocolo.c **** void ver_error(uint8 val){
 388              		.loc 1 178 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 16
 391              		@ frame_needed = 1, uses_anonymous_args = 0
 392 0000 80B5     		push	{r7, lr}
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 7, -8
 395              		.cfi_offset 14, -4
 396 0002 84B0     		sub	sp, sp, #16
 397              		.cfi_def_cfa_offset 24
 398 0004 00AF     		add	r7, sp, #0
 399              		.cfi_def_cfa_register 7
 400 0006 0346     		mov	r3, r0
 401 0008 FB71     		strb	r3, [r7, #7]
 179:.\Protocolo.c ****     uint8 estado;
 180:.\Protocolo.c ****     Surtidor_PutChar(val);
 402              		.loc 1 180 0
 403 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 404 000c 1846     		mov	r0, r3
 405 000e FFF7FEFF 		bl	Surtidor_PutChar
 181:.\Protocolo.c ****     CyDelay(200);
 406              		.loc 1 181 0
 407 0012 C820     		movs	r0, #200
 408 0014 FFF7FEFF 		bl	CyDelay
 182:.\Protocolo.c ****     if(Surtidor_GetRxBufferSize()>=1){
 409              		.loc 1 182 0
 410 0018 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 411 001c 0346     		mov	r3, r0
 412 001e 002B     		cmp	r3, #0
 413 0020 06D0     		beq	.L21
 183:.\Protocolo.c ****        estado=(Surtidor_ReadRxData()&0xF0)>>4;
 414              		.loc 1 183 0
 415 0022 FFF7FEFF 		bl	Surtidor_ReadRxData
 416 0026 0346     		mov	r3, r0
 417 0028 1B09     		lsrs	r3, r3, #4
 418 002a FB73     		strb	r3, [r7, #15]
 184:.\Protocolo.c ****        Surtidor_ClearRxBuffer();
 419              		.loc 1 184 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 12


 420 002c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 421              	.L21:
 185:.\Protocolo.c ****        if(estado==0){
 186:.\Protocolo.c **** 
 187:.\Protocolo.c ****        }
 188:.\Protocolo.c ****     }    
 189:.\Protocolo.c **** }
 422              		.loc 1 189 0
 423 0030 1037     		adds	r7, r7, #16
 424 0032 BD46     		mov	sp, r7
 425              		@ sp needed
 426 0034 80BD     		pop	{r7, pc}
 427              		.cfi_endproc
 428              	.LFE66:
 429              		.size	ver_error, .-ver_error
 430 0036 00BF     		.section	.rodata
 431              		.align	2
 432              	.LC0:
 433 0000 FF       		.byte	-1
 434 0001 E9       		.byte	-23
 435 0002 FE       		.byte	-2
 436 0003 E0       		.byte	-32
 437 0004 E1       		.byte	-31
 438 0005 E0       		.byte	-32
 439 0006 FB       		.byte	-5
 440 0007 EE       		.byte	-18
 441 0008 F0       		.byte	-16
 442 0009 000000   		.section	.text.estado_ex,"ax",%progbits
 443              		.align	2
 444              		.global	estado_ex
 445              		.thumb
 446              		.thumb_func
 447              		.type	estado_ex, %function
 448              	estado_ex:
 449              	.LFB67:
 190:.\Protocolo.c **** 
 191:.\Protocolo.c **** /*
 192:.\Protocolo.c **** ***************************************************************************************************
 193:.\Protocolo.c **** *                                         estado_ex(uint8 val)
 194:.\Protocolo.c **** *
 195:.\Protocolo.c **** * Description : 
 196:.\Protocolo.c **** *               
 197:.\Protocolo.c **** *
 198:.\Protocolo.c **** * Argument(s) : none
 199:.\Protocolo.c **** *
 200:.\Protocolo.c **** * Return(s)   : none
 201:.\Protocolo.c **** *
 202:.\Protocolo.c **** * Caller(s)   : 
 203:.\Protocolo.c **** *
 204:.\Protocolo.c **** * Note(s)     : none.
 205:.\Protocolo.c **** ***************************************************************************************************
 206:.\Protocolo.c **** */
 207:.\Protocolo.c **** uint8 estado_ex(uint8 val){
 450              		.loc 1 207 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 40
 453              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 13


 454 0000 90B5     		push	{r4, r7, lr}
 455              		.cfi_def_cfa_offset 12
 456              		.cfi_offset 4, -12
 457              		.cfi_offset 7, -8
 458              		.cfi_offset 14, -4
 459 0002 8BB0     		sub	sp, sp, #44
 460              		.cfi_def_cfa_offset 56
 461 0004 00AF     		add	r7, sp, #0
 462              		.cfi_def_cfa_register 7
 463 0006 0346     		mov	r3, r0
 464 0008 FB71     		strb	r3, [r7, #7]
 208:.\Protocolo.c ****     uint8 rx_extend[19],x,comand_exten[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0};
 465              		.loc 1 208 0
 466 000a 594A     		ldr	r2, .L41
 467 000c 07F10803 		add	r3, r7, #8
 468 0010 1068     		ldr	r0, [r2]	@ unaligned
 469 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
 470 0014 03C3     		stmia	r3!, {r0, r1}
 471 0016 127A     		ldrb	r2, [r2, #8]
 472 0018 1A70     		strb	r2, [r3]
 209:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 473              		.loc 1 209 0
 474 001a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 210:.\Protocolo.c ****     Surtidor_PutChar(0x20|val);
 475              		.loc 1 210 0
 476 001e FB79     		ldrb	r3, [r7, #7]
 477 0020 43F02003 		orr	r3, r3, #32
 478 0024 DBB2     		uxtb	r3, r3
 479 0026 1846     		mov	r0, r3
 480 0028 FFF7FEFF 		bl	Surtidor_PutChar
 211:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 481              		.loc 1 211 0
 482 002c 5148     		ldr	r0, .L41+4
 483 002e FFF7FEFF 		bl	isr_1_StartEx
 212:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 484              		.loc 1 212 0
 485 0032 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 213:.\Protocolo.c ****     rx_timeout=0;
 486              		.loc 1 213 0
 487 0036 504B     		ldr	r3, .L41+8
 488 0038 0022     		movs	r2, #0
 489 003a 1A70     		strb	r2, [r3]
 214:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 490              		.loc 1 214 0
 491 003c 0BE0     		b	.L24
 492              	.L26:
 215:.\Protocolo.c **** 		if(rx_timeout==1){
 493              		.loc 1 215 0
 494 003e 4E4B     		ldr	r3, .L41+8
 495 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 496 0042 012B     		cmp	r3, #1
 497 0044 07D1     		bne	.L24
 216:.\Protocolo.c **** 			isr_1_Stop();
 498              		.loc 1 216 0
 499 0046 FFF7FEFF 		bl	isr_1_Stop
 217:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 500              		.loc 1 217 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 14


 501 004a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 218:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 502              		.loc 1 218 0
 503 004e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 219:.\Protocolo.c **** 			return 0;
 504              		.loc 1 219 0
 505 0052 0023     		movs	r3, #0
 506 0054 88E0     		b	.L39
 507              	.L24:
 214:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 508              		.loc 1 214 0 discriminator 1
 509 0056 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 510 005a 0346     		mov	r3, r0
 511 005c 002B     		cmp	r3, #0
 512 005e EED0     		beq	.L26
 220:.\Protocolo.c **** 		}
 221:.\Protocolo.c **** 	}
 222:.\Protocolo.c **** 	isr_1_Stop();
 513              		.loc 1 222 0
 514 0060 FFF7FEFF 		bl	isr_1_Stop
 223:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 515              		.loc 1 223 0
 516 0064 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 224:.\Protocolo.c ****     if(Surtidor_ReadRxData()==(0xD0|val)){
 517              		.loc 1 224 0
 518 0068 FFF7FEFF 		bl	Surtidor_ReadRxData
 519 006c 0346     		mov	r3, r0
 520 006e 1A46     		mov	r2, r3
 521 0070 FB79     		ldrb	r3, [r7, #7]
 522 0072 63F02F03 		orn	r3, r3, #47
 523 0076 DBB2     		uxtb	r3, r3
 524 0078 9A42     		cmp	r2, r3
 525 007a 74D1     		bne	.L27
 225:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 526              		.loc 1 225 0
 527 007c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 226:.\Protocolo.c **** 		CyDelay(5);
 528              		.loc 1 226 0
 529 0080 0520     		movs	r0, #5
 530 0082 FFF7FEFF 		bl	CyDelay
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 531              		.loc 1 227 0
 532 0086 0023     		movs	r3, #0
 533 0088 87F82730 		strb	r3, [r7, #39]
 534 008c 0EE0     		b	.L28
 535              	.L29:
 228:.\Protocolo.c ****            Surtidor_PutChar(comand_exten[x]); 
 536              		.loc 1 228 0 discriminator 2
 537 008e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 538 0092 07F12802 		add	r2, r7, #40
 539 0096 1344     		add	r3, r3, r2
 540 0098 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 541 009c 1846     		mov	r0, r3
 542 009e FFF7FEFF 		bl	Surtidor_PutChar
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 543              		.loc 1 227 0 discriminator 2
 544 00a2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 15


 545 00a6 0133     		adds	r3, r3, #1
 546 00a8 87F82730 		strb	r3, [r7, #39]
 547              	.L28:
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 548              		.loc 1 227 0 is_stmt 0 discriminator 1
 549 00ac 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 550 00b0 082B     		cmp	r3, #8
 551 00b2 ECD9     		bls	.L29
 229:.\Protocolo.c ****         }
 230:.\Protocolo.c **** 		isr_1_StartEx(Rx_Surtidor);
 552              		.loc 1 230 0 is_stmt 1
 553 00b4 2F48     		ldr	r0, .L41+4
 554 00b6 FFF7FEFF 		bl	isr_1_StartEx
 231:.\Protocolo.c **** 	    Timer_RxSurtidor_Start();	
 555              		.loc 1 231 0
 556 00ba FFF7FEFF 		bl	Timer_RxSurtidor_Start
 232:.\Protocolo.c **** 	    rx_timeout=0;
 557              		.loc 1 232 0
 558 00be 2E4B     		ldr	r3, .L41+8
 559 00c0 0022     		movs	r2, #0
 560 00c2 1A70     		strb	r2, [r3]
 233:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 561              		.loc 1 233 0
 562 00c4 0BE0     		b	.L30
 563              	.L31:
 234:.\Protocolo.c **** 			if(rx_timeout==1){
 564              		.loc 1 234 0
 565 00c6 2C4B     		ldr	r3, .L41+8
 566 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 567 00ca 012B     		cmp	r3, #1
 568 00cc 07D1     		bne	.L30
 235:.\Protocolo.c **** 				isr_1_Stop();
 569              		.loc 1 235 0
 570 00ce FFF7FEFF 		bl	isr_1_Stop
 236:.\Protocolo.c **** 				Timer_RxSurtidor_Stop();
 571              		.loc 1 236 0
 572 00d2 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 237:.\Protocolo.c **** 	    		Surtidor_ClearRxBuffer();			
 573              		.loc 1 237 0
 574 00d6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 238:.\Protocolo.c **** 				return 0;
 575              		.loc 1 238 0
 576 00da 0023     		movs	r3, #0
 577 00dc 44E0     		b	.L39
 578              	.L30:
 233:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 579              		.loc 1 233 0 discriminator 1
 580 00de FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 581 00e2 0346     		mov	r3, r0
 582 00e4 132B     		cmp	r3, #19
 583 00e6 EED1     		bne	.L31
 239:.\Protocolo.c **** 			}
 240:.\Protocolo.c **** 		}       
 241:.\Protocolo.c **** 		isr_1_Stop();
 584              		.loc 1 241 0
 585 00e8 FFF7FEFF 		bl	isr_1_Stop
 242:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();		
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 16


 586              		.loc 1 242 0
 587 00ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 588              		.loc 1 243 0
 589 00f0 0023     		movs	r3, #0
 590 00f2 87F82730 		strb	r3, [r7, #39]
 591 00f6 0FE0     		b	.L32
 592              	.L33:
 244:.\Protocolo.c ****            rx_extend[x]=Surtidor_ReadRxData(); 
 593              		.loc 1 244 0 discriminator 2
 594 00f8 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 595 00fc FFF7FEFF 		bl	Surtidor_ReadRxData
 596 0100 0346     		mov	r3, r0
 597 0102 1A46     		mov	r2, r3
 598 0104 07F12803 		add	r3, r7, #40
 599 0108 2344     		add	r3, r3, r4
 600 010a 03F8142C 		strb	r2, [r3, #-20]
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 601              		.loc 1 243 0 discriminator 2
 602 010e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 603 0112 0133     		adds	r3, r3, #1
 604 0114 87F82730 		strb	r3, [r7, #39]
 605              	.L32:
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 606              		.loc 1 243 0 is_stmt 0 discriminator 1
 607 0118 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 608 011c 122B     		cmp	r3, #18
 609 011e EBD9     		bls	.L33
 245:.\Protocolo.c ****         }
 246:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 610              		.loc 1 246 0 is_stmt 1
 611 0120 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 247:.\Protocolo.c ****         if((rx_extend[0]==0xBA)&&(rx_extend[17]==0x8D)&&(rx_extend[18]==0x8A)&&(rx_extend[12]==0xB1
 612              		.loc 1 247 0
 613 0124 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 614 0126 BA2B     		cmp	r3, #186
 615 0128 1BD1     		bne	.L34
 616              		.loc 1 247 0 is_stmt 0 discriminator 1
 617 012a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 618 012e 8D2B     		cmp	r3, #141
 619 0130 17D1     		bne	.L34
 620 0132 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 621 0136 8A2B     		cmp	r3, #138
 622 0138 13D1     		bne	.L34
 623 013a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 624 013e B12B     		cmp	r3, #177
 625 0140 0FD1     		bne	.L34
 248:.\Protocolo.c ****             switch(rx_extend[14]){
 626              		.loc 1 248 0 is_stmt 1
 627 0142 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 628 0146 B22B     		cmp	r3, #178
 629 0148 05D0     		beq	.L36
 630 014a B32B     		cmp	r3, #179
 631 014c 05D0     		beq	.L37
 632 014e B12B     		cmp	r3, #177
 633 0150 05D1     		bne	.L40
 249:.\Protocolo.c ****                 case 0xB1:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 17


 250:.\Protocolo.c ****                     return 1;
 634              		.loc 1 250 0
 635 0152 0123     		movs	r3, #1
 636 0154 08E0     		b	.L39
 637              	.L36:
 251:.\Protocolo.c ****                 break;
 252:.\Protocolo.c ****                 case 0xB2:
 253:.\Protocolo.c ****                     return 2;
 638              		.loc 1 253 0
 639 0156 0223     		movs	r3, #2
 640 0158 06E0     		b	.L39
 641              	.L37:
 254:.\Protocolo.c ****                 break;
 255:.\Protocolo.c ****                 case 0xB3:
 256:.\Protocolo.c ****                     return 3;
 642              		.loc 1 256 0
 643 015a 0323     		movs	r3, #3
 644 015c 04E0     		b	.L39
 645              	.L40:
 257:.\Protocolo.c ****                 break;
 258:.\Protocolo.c ****                 default:
 259:.\Protocolo.c ****                 	return 0;
 646              		.loc 1 259 0
 647 015e 0023     		movs	r3, #0
 648 0160 02E0     		b	.L39
 649              	.L34:
 260:.\Protocolo.c **** 				break;
 261:.\Protocolo.c ****             }
 262:.\Protocolo.c ****         }
 263:.\Protocolo.c ****         else{
 264:.\Protocolo.c ****             return 0;
 650              		.loc 1 264 0
 651 0162 0023     		movs	r3, #0
 652 0164 00E0     		b	.L39
 653              	.L27:
 265:.\Protocolo.c ****         }
 266:.\Protocolo.c ****     }
 267:.\Protocolo.c ****     else{
 268:.\Protocolo.c ****         return 0;
 654              		.loc 1 268 0
 655 0166 0023     		movs	r3, #0
 656              	.L39:
 269:.\Protocolo.c ****     }
 270:.\Protocolo.c **** }
 657              		.loc 1 270 0
 658 0168 1846     		mov	r0, r3
 659 016a 2C37     		adds	r7, r7, #44
 660 016c BD46     		mov	sp, r7
 661              		@ sp needed
 662 016e 90BD     		pop	{r4, r7, pc}
 663              	.L42:
 664              		.align	2
 665              	.L41:
 666 0170 00000000 		.word	.LC0
 667 0174 00000000 		.word	Rx_Surtidor
 668 0178 00000000 		.word	rx_timeout
 669              		.cfi_endproc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 18


 670              	.LFE67:
 671              		.size	estado_ex, .-estado_ex
 672              		.section	.text.detener,"ax",%progbits
 673              		.align	2
 674              		.global	detener
 675              		.thumb
 676              		.thumb_func
 677              		.type	detener, %function
 678              	detener:
 679              	.LFB68:
 271:.\Protocolo.c **** 
 272:.\Protocolo.c **** /*
 273:.\Protocolo.c **** ***************************************************************************************************
 274:.\Protocolo.c **** *                                         void detener(uint8 val)
 275:.\Protocolo.c **** *
 276:.\Protocolo.c **** * Description : 
 277:.\Protocolo.c **** *               
 278:.\Protocolo.c **** *
 279:.\Protocolo.c **** * Argument(s) : none
 280:.\Protocolo.c **** *
 281:.\Protocolo.c **** * Return(s)   : none
 282:.\Protocolo.c **** *
 283:.\Protocolo.c **** * Caller(s)   : 
 284:.\Protocolo.c **** *
 285:.\Protocolo.c **** * Note(s)     : none.
 286:.\Protocolo.c **** ***************************************************************************************************
 287:.\Protocolo.c **** */
 288:.\Protocolo.c **** void detener(uint8 val){
 680              		.loc 1 288 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 8
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684 0000 80B5     		push	{r7, lr}
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 688 0002 82B0     		sub	sp, sp, #8
 689              		.cfi_def_cfa_offset 16
 690 0004 00AF     		add	r7, sp, #0
 691              		.cfi_def_cfa_register 7
 692 0006 0346     		mov	r3, r0
 693 0008 FB71     		strb	r3, [r7, #7]
 289:.\Protocolo.c ****     Surtidor_PutChar(0x30|val);
 694              		.loc 1 289 0
 695 000a FB79     		ldrb	r3, [r7, #7]
 696 000c 43F03003 		orr	r3, r3, #48
 697 0010 DBB2     		uxtb	r3, r3
 698 0012 1846     		mov	r0, r3
 699 0014 FFF7FEFF 		bl	Surtidor_PutChar
 290:.\Protocolo.c ****     CyDelay(200);
 700              		.loc 1 290 0
 701 0018 C820     		movs	r0, #200
 702 001a FFF7FEFF 		bl	CyDelay
 291:.\Protocolo.c **** }
 703              		.loc 1 291 0
 704 001e 0837     		adds	r7, r7, #8
 705 0020 BD46     		mov	sp, r7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 19


 706              		@ sp needed
 707 0022 80BD     		pop	{r7, pc}
 708              		.cfi_endproc
 709              	.LFE68:
 710              		.size	detener, .-detener
 711              		.section	.text.venta,"ax",%progbits
 712              		.align	2
 713              		.global	venta
 714              		.thumb
 715              		.thumb_func
 716              		.type	venta, %function
 717              	venta:
 718              	.LFB69:
 292:.\Protocolo.c **** 
 293:.\Protocolo.c **** /*
 294:.\Protocolo.c **** ***************************************************************************************************
 295:.\Protocolo.c **** *                                         void venta(uint8 val)
 296:.\Protocolo.c **** *
 297:.\Protocolo.c **** * Description : 
 298:.\Protocolo.c **** *               
 299:.\Protocolo.c **** *
 300:.\Protocolo.c **** * Argument(s) : none
 301:.\Protocolo.c **** *
 302:.\Protocolo.c **** * Return(s)   : none
 303:.\Protocolo.c **** *
 304:.\Protocolo.c **** * Caller(s)   : 
 305:.\Protocolo.c **** *
 306:.\Protocolo.c **** * Note(s)     : none.
 307:.\Protocolo.c **** ***************************************************************************************************
 308:.\Protocolo.c **** */
 309:.\Protocolo.c **** uint8 venta(uint8 dir){
 719              		.loc 1 309 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 16
 722              		@ frame_needed = 1, uses_anonymous_args = 0
 723 0000 80B5     		push	{r7, lr}
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 84B0     		sub	sp, sp, #16
 728              		.cfi_def_cfa_offset 24
 729 0004 00AF     		add	r7, sp, #0
 730              		.cfi_def_cfa_register 7
 731 0006 0346     		mov	r3, r0
 732 0008 FB71     		strb	r3, [r7, #7]
 310:.\Protocolo.c **** 	uint8 x;
 311:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 733              		.loc 1 311 0
 734 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 312:.\Protocolo.c **** 	Surtidor_PutChar(0x40|dir);
 735              		.loc 1 312 0
 736 000e FB79     		ldrb	r3, [r7, #7]
 737 0010 43F04003 		orr	r3, r3, #64
 738 0014 DBB2     		uxtb	r3, r3
 739 0016 1846     		mov	r0, r3
 740 0018 FFF7FEFF 		bl	Surtidor_PutChar
 313:.\Protocolo.c ****     CyDelay(300);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 20


 741              		.loc 1 313 0
 742 001c 4FF49670 		mov	r0, #300
 743 0020 FFF7FEFF 		bl	CyDelay
 314:.\Protocolo.c **** 	if((version[1]!=7)&&(Surtidor_GetRxBufferSize()==33)){
 744              		.loc 1 314 0
 745 0024 A64B     		ldr	r3, .L78
 746 0026 5B78     		ldrb	r3, [r3, #1]
 747 0028 DBB2     		uxtb	r3, r3
 748 002a 072B     		cmp	r3, #7
 749 002c 00F0B680 		beq	.L45
 750              		.loc 1 314 0 is_stmt 0 discriminator 1
 751 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 752 0034 0346     		mov	r3, r0
 753 0036 212B     		cmp	r3, #33
 754 0038 40F0B080 		bne	.L45
 315:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[32]==0xF0)){
 755              		.loc 1 315 0 is_stmt 1
 756 003c A14B     		ldr	r3, .L78+4
 757 003e 1B78     		ldrb	r3, [r3]
 758 0040 DBB2     		uxtb	r3, r3
 759 0042 FF2B     		cmp	r3, #255
 760 0044 40F0A880 		bne	.L46
 761              		.loc 1 315 0 is_stmt 0 discriminator 1
 762 0048 9E4B     		ldr	r3, .L78+4
 763 004a 9B78     		ldrb	r3, [r3, #2]
 764 004c DBB2     		uxtb	r3, r3
 765 004e F82B     		cmp	r3, #248
 766 0050 40F0A280 		bne	.L46
 767 0054 9B4B     		ldr	r3, .L78+4
 768 0056 93F82030 		ldrb	r3, [r3, #32]
 769 005a DBB2     		uxtb	r3, r3
 770 005c F02B     		cmp	r3, #240
 771 005e 40F09B80 		bne	.L46
 316:.\Protocolo.c **** 			if(dir==lado1.dir){
 772              		.loc 1 316 0 is_stmt 1
 773 0062 994B     		ldr	r3, .L78+8
 774 0064 1B78     		ldrb	r3, [r3]
 775 0066 DBB2     		uxtb	r3, r3
 776 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 777 006a 9A42     		cmp	r2, r3
 778 006c 49D1     		bne	.L47
 317:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 779              		.loc 1 317 0
 780 006e 954B     		ldr	r3, .L78+4
 781 0070 5B7A     		ldrb	r3, [r3, #9]
 782 0072 DBB2     		uxtb	r3, r3
 783 0074 03F00F03 		and	r3, r3, #15
 784 0078 DBB2     		uxtb	r3, r3
 785 007a 0133     		adds	r3, r3, #1
 786 007c DAB2     		uxtb	r2, r3
 787 007e 934B     		ldr	r3, .L78+12
 788 0080 5A76     		strb	r2, [r3, #25]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 789              		.loc 1 318 0
 790 0082 0023     		movs	r3, #0
 791 0084 FB73     		strb	r3, [r7, #15]
 792 0086 0EE0     		b	.L48
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 21


 793              	.L49:
 319:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 794              		.loc 1 319 0 discriminator 2
 795 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 796 008a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 797 008c 0C32     		adds	r2, r2, #12
 798 008e 8D49     		ldr	r1, .L78+4
 799 0090 8A5C     		ldrb	r2, [r1, r2]
 800 0092 D2B2     		uxtb	r2, r2
 801 0094 02F00F02 		and	r2, r2, #15
 802 0098 D2B2     		uxtb	r2, r2
 803 009a 8C49     		ldr	r1, .L78+12
 804 009c 0B44     		add	r3, r3, r1
 805 009e 9A70     		strb	r2, [r3, #2]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 806              		.loc 1 318 0 discriminator 2
 807 00a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 808 00a2 0133     		adds	r3, r3, #1
 809 00a4 FB73     		strb	r3, [r7, #15]
 810              	.L48:
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 811              		.loc 1 318 0 is_stmt 0 discriminator 1
 812 00a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 813 00a8 032B     		cmp	r3, #3
 814 00aa EDD9     		bls	.L49
 320:.\Protocolo.c **** 				}
 321:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 815              		.loc 1 321 0 is_stmt 1
 816 00ac 0023     		movs	r3, #0
 817 00ae FB73     		strb	r3, [r7, #15]
 818 00b0 0EE0     		b	.L50
 819              	.L51:
 322:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 820              		.loc 1 322 0 discriminator 2
 821 00b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 822 00b4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 823 00b6 1132     		adds	r2, r2, #17
 824 00b8 8249     		ldr	r1, .L78+4
 825 00ba 8A5C     		ldrb	r2, [r1, r2]
 826 00bc D2B2     		uxtb	r2, r2
 827 00be 02F00F02 		and	r2, r2, #15
 828 00c2 D2B2     		uxtb	r2, r2
 829 00c4 8149     		ldr	r1, .L78+12
 830 00c6 0B44     		add	r3, r3, r1
 831 00c8 1A74     		strb	r2, [r3, #16]
 321:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 832              		.loc 1 321 0 discriminator 2
 833 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 834 00cc 0133     		adds	r3, r3, #1
 835 00ce FB73     		strb	r3, [r7, #15]
 836              	.L50:
 321:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 837              		.loc 1 321 0 is_stmt 0 discriminator 1
 838 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 839 00d2 052B     		cmp	r3, #5
 840 00d4 EDD9     		bls	.L51
 323:.\Protocolo.c **** 				}			
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 22


 324:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 841              		.loc 1 324 0 is_stmt 1
 842 00d6 0023     		movs	r3, #0
 843 00d8 FB73     		strb	r3, [r7, #15]
 844 00da 0EE0     		b	.L52
 845              	.L53:
 325:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 846              		.loc 1 325 0 discriminator 2
 847 00dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 848 00de FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 849 00e0 1832     		adds	r2, r2, #24
 850 00e2 7849     		ldr	r1, .L78+4
 851 00e4 8A5C     		ldrb	r2, [r1, r2]
 852 00e6 D2B2     		uxtb	r2, r2
 853 00e8 02F00F02 		and	r2, r2, #15
 854 00ec D2B2     		uxtb	r2, r2
 855 00ee 7749     		ldr	r1, .L78+12
 856 00f0 0B44     		add	r3, r3, r1
 857 00f2 DA71     		strb	r2, [r3, #7]
 324:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 858              		.loc 1 324 0 discriminator 2
 859 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 860 00f6 0133     		adds	r3, r3, #1
 861 00f8 FB73     		strb	r3, [r7, #15]
 862              	.L52:
 324:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 863              		.loc 1 324 0 is_stmt 0 discriminator 1
 864 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 865 00fc 052B     		cmp	r3, #5
 866 00fe EDD9     		bls	.L53
 867 0100 48E0     		b	.L54
 868              	.L47:
 326:.\Protocolo.c **** 				}
 327:.\Protocolo.c **** 			}
 328:.\Protocolo.c **** 			else{
 329:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 869              		.loc 1 329 0 is_stmt 1
 870 0102 704B     		ldr	r3, .L78+4
 871 0104 5B7A     		ldrb	r3, [r3, #9]
 872 0106 DBB2     		uxtb	r3, r3
 873 0108 03F00F03 		and	r3, r3, #15
 874 010c DBB2     		uxtb	r3, r3
 875 010e 0133     		adds	r3, r3, #1
 876 0110 DAB2     		uxtb	r2, r3
 877 0112 6F4B     		ldr	r3, .L78+16
 878 0114 5A76     		strb	r2, [r3, #25]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 879              		.loc 1 330 0
 880 0116 0023     		movs	r3, #0
 881 0118 FB73     		strb	r3, [r7, #15]
 882 011a 0EE0     		b	.L55
 883              	.L56:
 331:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 884              		.loc 1 331 0 discriminator 2
 885 011c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 886 011e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 887 0120 0C32     		adds	r2, r2, #12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 23


 888 0122 6849     		ldr	r1, .L78+4
 889 0124 8A5C     		ldrb	r2, [r1, r2]
 890 0126 D2B2     		uxtb	r2, r2
 891 0128 02F00F02 		and	r2, r2, #15
 892 012c D2B2     		uxtb	r2, r2
 893 012e 6849     		ldr	r1, .L78+16
 894 0130 0B44     		add	r3, r3, r1
 895 0132 9A70     		strb	r2, [r3, #2]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 896              		.loc 1 330 0 discriminator 2
 897 0134 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 898 0136 0133     		adds	r3, r3, #1
 899 0138 FB73     		strb	r3, [r7, #15]
 900              	.L55:
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 901              		.loc 1 330 0 is_stmt 0 discriminator 1
 902 013a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 903 013c 032B     		cmp	r3, #3
 904 013e EDD9     		bls	.L56
 332:.\Protocolo.c **** 				}
 333:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 905              		.loc 1 333 0 is_stmt 1
 906 0140 0023     		movs	r3, #0
 907 0142 FB73     		strb	r3, [r7, #15]
 908 0144 0EE0     		b	.L57
 909              	.L58:
 334:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 910              		.loc 1 334 0 discriminator 2
 911 0146 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 912 0148 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 913 014a 1132     		adds	r2, r2, #17
 914 014c 5D49     		ldr	r1, .L78+4
 915 014e 8A5C     		ldrb	r2, [r1, r2]
 916 0150 D2B2     		uxtb	r2, r2
 917 0152 02F00F02 		and	r2, r2, #15
 918 0156 D2B2     		uxtb	r2, r2
 919 0158 5D49     		ldr	r1, .L78+16
 920 015a 0B44     		add	r3, r3, r1
 921 015c 1A74     		strb	r2, [r3, #16]
 333:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 922              		.loc 1 333 0 discriminator 2
 923 015e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 924 0160 0133     		adds	r3, r3, #1
 925 0162 FB73     		strb	r3, [r7, #15]
 926              	.L57:
 333:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 927              		.loc 1 333 0 is_stmt 0 discriminator 1
 928 0164 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 929 0166 052B     		cmp	r3, #5
 930 0168 EDD9     		bls	.L58
 335:.\Protocolo.c **** 				}			
 336:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 931              		.loc 1 336 0 is_stmt 1
 932 016a 0023     		movs	r3, #0
 933 016c FB73     		strb	r3, [r7, #15]
 934 016e 0EE0     		b	.L59
 935              	.L60:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 24


 337:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 936              		.loc 1 337 0 discriminator 2
 937 0170 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 938 0172 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 939 0174 1832     		adds	r2, r2, #24
 940 0176 5349     		ldr	r1, .L78+4
 941 0178 8A5C     		ldrb	r2, [r1, r2]
 942 017a D2B2     		uxtb	r2, r2
 943 017c 02F00F02 		and	r2, r2, #15
 944 0180 D2B2     		uxtb	r2, r2
 945 0182 5349     		ldr	r1, .L78+16
 946 0184 0B44     		add	r3, r3, r1
 947 0186 DA71     		strb	r2, [r3, #7]
 336:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 948              		.loc 1 336 0 discriminator 2
 949 0188 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 950 018a 0133     		adds	r3, r3, #1
 951 018c FB73     		strb	r3, [r7, #15]
 952              	.L59:
 336:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 953              		.loc 1 336 0 is_stmt 0 discriminator 1
 954 018e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 955 0190 052B     		cmp	r3, #5
 956 0192 EDD9     		bls	.L60
 957              	.L54:
 338:.\Protocolo.c **** 				}			
 339:.\Protocolo.c **** 			}
 340:.\Protocolo.c **** 			return 1;
 958              		.loc 1 340 0 is_stmt 1
 959 0194 0123     		movs	r3, #1
 960 0196 C9E0     		b	.L61
 961              	.L46:
 341:.\Protocolo.c **** 		}
 342:.\Protocolo.c **** 		else{
 343:.\Protocolo.c **** 			return 0;
 962              		.loc 1 343 0
 963 0198 0023     		movs	r3, #0
 964 019a C7E0     		b	.L61
 965              	.L45:
 344:.\Protocolo.c **** 		}
 345:.\Protocolo.c **** 	}
 346:.\Protocolo.c **** 	else if((version[1]==7)&&(Surtidor_GetRxBufferSize()==39)){
 966              		.loc 1 346 0
 967 019c 484B     		ldr	r3, .L78
 968 019e 5B78     		ldrb	r3, [r3, #1]
 969 01a0 DBB2     		uxtb	r3, r3
 970 01a2 072B     		cmp	r3, #7
 971 01a4 40F0C180 		bne	.L62
 972              		.loc 1 346 0 is_stmt 0 discriminator 1
 973 01a8 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 974 01ac 0346     		mov	r3, r0
 975 01ae 272B     		cmp	r3, #39
 976 01b0 40F0BB80 		bne	.L62
 347:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[38]==0xF0)){
 977              		.loc 1 347 0 is_stmt 1
 978 01b4 434B     		ldr	r3, .L78+4
 979 01b6 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 25


 980 01b8 DBB2     		uxtb	r3, r3
 981 01ba FF2B     		cmp	r3, #255
 982 01bc 40F0B380 		bne	.L63
 983              		.loc 1 347 0 is_stmt 0 discriminator 1
 984 01c0 404B     		ldr	r3, .L78+4
 985 01c2 9B78     		ldrb	r3, [r3, #2]
 986 01c4 DBB2     		uxtb	r3, r3
 987 01c6 F82B     		cmp	r3, #248
 988 01c8 40F0AD80 		bne	.L63
 989 01cc 3D4B     		ldr	r3, .L78+4
 990 01ce 93F82630 		ldrb	r3, [r3, #38]
 991 01d2 DBB2     		uxtb	r3, r3
 992 01d4 F02B     		cmp	r3, #240
 993 01d6 40F0A680 		bne	.L63
 348:.\Protocolo.c **** 			if(dir==lado1.dir){
 994              		.loc 1 348 0 is_stmt 1
 995 01da 3B4B     		ldr	r3, .L78+8
 996 01dc 1B78     		ldrb	r3, [r3]
 997 01de DBB2     		uxtb	r3, r3
 998 01e0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 999 01e2 9A42     		cmp	r2, r3
 1000 01e4 49D1     		bne	.L64
 349:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1001              		.loc 1 349 0
 1002 01e6 374B     		ldr	r3, .L78+4
 1003 01e8 5B7A     		ldrb	r3, [r3, #9]
 1004 01ea DBB2     		uxtb	r3, r3
 1005 01ec 03F00F03 		and	r3, r3, #15
 1006 01f0 DBB2     		uxtb	r3, r3
 1007 01f2 0133     		adds	r3, r3, #1
 1008 01f4 DAB2     		uxtb	r2, r3
 1009 01f6 354B     		ldr	r3, .L78+12
 1010 01f8 5A76     		strb	r2, [r3, #25]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1011              		.loc 1 350 0
 1012 01fa 0023     		movs	r3, #0
 1013 01fc FB73     		strb	r3, [r7, #15]
 1014 01fe 0EE0     		b	.L65
 1015              	.L66:
 351:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1016              		.loc 1 351 0 discriminator 2
 1017 0200 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1018 0202 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1019 0204 0C32     		adds	r2, r2, #12
 1020 0206 2F49     		ldr	r1, .L78+4
 1021 0208 8A5C     		ldrb	r2, [r1, r2]
 1022 020a D2B2     		uxtb	r2, r2
 1023 020c 02F00F02 		and	r2, r2, #15
 1024 0210 D2B2     		uxtb	r2, r2
 1025 0212 2E49     		ldr	r1, .L78+12
 1026 0214 0B44     		add	r3, r3, r1
 1027 0216 9A70     		strb	r2, [r3, #2]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1028              		.loc 1 350 0 discriminator 2
 1029 0218 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1030 021a 0133     		adds	r3, r3, #1
 1031 021c FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 26


 1032              	.L65:
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1033              		.loc 1 350 0 is_stmt 0 discriminator 1
 1034 021e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1035 0220 052B     		cmp	r3, #5
 1036 0222 EDD9     		bls	.L66
 352:.\Protocolo.c **** 				}
 353:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1037              		.loc 1 353 0 is_stmt 1
 1038 0224 0023     		movs	r3, #0
 1039 0226 FB73     		strb	r3, [r7, #15]
 1040 0228 0EE0     		b	.L67
 1041              	.L68:
 354:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1042              		.loc 1 354 0 discriminator 2
 1043 022a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1044 022c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1045 022e 1332     		adds	r2, r2, #19
 1046 0230 2449     		ldr	r1, .L78+4
 1047 0232 8A5C     		ldrb	r2, [r1, r2]
 1048 0234 D2B2     		uxtb	r2, r2
 1049 0236 02F00F02 		and	r2, r2, #15
 1050 023a D2B2     		uxtb	r2, r2
 1051 023c 2349     		ldr	r1, .L78+12
 1052 023e 0B44     		add	r3, r3, r1
 1053 0240 1A74     		strb	r2, [r3, #16]
 353:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1054              		.loc 1 353 0 discriminator 2
 1055 0242 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1056 0244 0133     		adds	r3, r3, #1
 1057 0246 FB73     		strb	r3, [r7, #15]
 1058              	.L67:
 353:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1059              		.loc 1 353 0 is_stmt 0 discriminator 1
 1060 0248 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1061 024a 072B     		cmp	r3, #7
 1062 024c EDD9     		bls	.L68
 355:.\Protocolo.c **** 				}			
 356:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1063              		.loc 1 356 0 is_stmt 1
 1064 024e 0023     		movs	r3, #0
 1065 0250 FB73     		strb	r3, [r7, #15]
 1066 0252 0EE0     		b	.L69
 1067              	.L70:
 357:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1068              		.loc 1 357 0 discriminator 2
 1069 0254 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1070 0256 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1071 0258 1C32     		adds	r2, r2, #28
 1072 025a 1A49     		ldr	r1, .L78+4
 1073 025c 8A5C     		ldrb	r2, [r1, r2]
 1074 025e D2B2     		uxtb	r2, r2
 1075 0260 02F00F02 		and	r2, r2, #15
 1076 0264 D2B2     		uxtb	r2, r2
 1077 0266 1949     		ldr	r1, .L78+12
 1078 0268 0B44     		add	r3, r3, r1
 1079 026a DA71     		strb	r2, [r3, #7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 27


 356:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1080              		.loc 1 356 0 discriminator 2
 1081 026c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1082 026e 0133     		adds	r3, r3, #1
 1083 0270 FB73     		strb	r3, [r7, #15]
 1084              	.L69:
 356:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1085              		.loc 1 356 0 is_stmt 0 discriminator 1
 1086 0272 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1087 0274 072B     		cmp	r3, #7
 1088 0276 EDD9     		bls	.L70
 1089 0278 53E0     		b	.L71
 1090              	.L64:
 358:.\Protocolo.c **** 				}
 359:.\Protocolo.c **** 			}
 360:.\Protocolo.c **** 			else{
 361:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1091              		.loc 1 361 0 is_stmt 1
 1092 027a 124B     		ldr	r3, .L78+4
 1093 027c 5B7A     		ldrb	r3, [r3, #9]
 1094 027e DBB2     		uxtb	r3, r3
 1095 0280 03F00F03 		and	r3, r3, #15
 1096 0284 DBB2     		uxtb	r3, r3
 1097 0286 0133     		adds	r3, r3, #1
 1098 0288 DAB2     		uxtb	r2, r3
 1099 028a 114B     		ldr	r3, .L78+16
 1100 028c 5A76     		strb	r2, [r3, #25]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1101              		.loc 1 362 0
 1102 028e 0023     		movs	r3, #0
 1103 0290 FB73     		strb	r3, [r7, #15]
 1104 0292 0EE0     		b	.L72
 1105              	.L73:
 363:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1106              		.loc 1 363 0 discriminator 2
 1107 0294 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1108 0296 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1109 0298 0C32     		adds	r2, r2, #12
 1110 029a 0A49     		ldr	r1, .L78+4
 1111 029c 8A5C     		ldrb	r2, [r1, r2]
 1112 029e D2B2     		uxtb	r2, r2
 1113 02a0 02F00F02 		and	r2, r2, #15
 1114 02a4 D2B2     		uxtb	r2, r2
 1115 02a6 0A49     		ldr	r1, .L78+16
 1116 02a8 0B44     		add	r3, r3, r1
 1117 02aa 9A70     		strb	r2, [r3, #2]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1118              		.loc 1 362 0 discriminator 2
 1119 02ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1120 02ae 0133     		adds	r3, r3, #1
 1121 02b0 FB73     		strb	r3, [r7, #15]
 1122              	.L72:
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1123              		.loc 1 362 0 is_stmt 0 discriminator 1
 1124 02b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1125 02b4 052B     		cmp	r3, #5
 1126 02b6 EDD9     		bls	.L73
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 28


 364:.\Protocolo.c **** 				}
 365:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1127              		.loc 1 365 0 is_stmt 1
 1128 02b8 0023     		movs	r3, #0
 1129 02ba FB73     		strb	r3, [r7, #15]
 1130 02bc 19E0     		b	.L74
 1131              	.L79:
 1132 02be 00BF     		.align	2
 1133              	.L78:
 1134 02c0 00000000 		.word	version
 1135 02c4 00000000 		.word	Surtidor_rxBuffer
 1136 02c8 00000000 		.word	lado1
 1137 02cc 00000000 		.word	rventa1
 1138 02d0 00000000 		.word	rventa2
 1139              	.L75:
 366:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1140              		.loc 1 366 0 discriminator 2
 1141 02d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1142 02d6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1143 02d8 1332     		adds	r2, r2, #19
 1144 02da 1649     		ldr	r1, .L80
 1145 02dc 8A5C     		ldrb	r2, [r1, r2]
 1146 02de D2B2     		uxtb	r2, r2
 1147 02e0 02F00F02 		and	r2, r2, #15
 1148 02e4 D2B2     		uxtb	r2, r2
 1149 02e6 1449     		ldr	r1, .L80+4
 1150 02e8 0B44     		add	r3, r3, r1
 1151 02ea 1A74     		strb	r2, [r3, #16]
 365:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1152              		.loc 1 365 0 discriminator 2
 1153 02ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1154 02ee 0133     		adds	r3, r3, #1
 1155 02f0 FB73     		strb	r3, [r7, #15]
 1156              	.L74:
 365:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1157              		.loc 1 365 0 is_stmt 0 discriminator 1
 1158 02f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1159 02f4 072B     		cmp	r3, #7
 1160 02f6 EDD9     		bls	.L75
 367:.\Protocolo.c **** 				}			
 368:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1161              		.loc 1 368 0 is_stmt 1
 1162 02f8 0023     		movs	r3, #0
 1163 02fa FB73     		strb	r3, [r7, #15]
 1164 02fc 0EE0     		b	.L76
 1165              	.L77:
 369:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1166              		.loc 1 369 0 discriminator 2
 1167 02fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1168 0300 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1169 0302 1C32     		adds	r2, r2, #28
 1170 0304 0B49     		ldr	r1, .L80
 1171 0306 8A5C     		ldrb	r2, [r1, r2]
 1172 0308 D2B2     		uxtb	r2, r2
 1173 030a 02F00F02 		and	r2, r2, #15
 1174 030e D2B2     		uxtb	r2, r2
 1175 0310 0949     		ldr	r1, .L80+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 29


 1176 0312 0B44     		add	r3, r3, r1
 1177 0314 DA71     		strb	r2, [r3, #7]
 368:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1178              		.loc 1 368 0 discriminator 2
 1179 0316 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1180 0318 0133     		adds	r3, r3, #1
 1181 031a FB73     		strb	r3, [r7, #15]
 1182              	.L76:
 368:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1183              		.loc 1 368 0 is_stmt 0 discriminator 1
 1184 031c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1185 031e 072B     		cmp	r3, #7
 1186 0320 EDD9     		bls	.L77
 1187              	.L71:
 370:.\Protocolo.c **** 				}			
 371:.\Protocolo.c **** 			}
 372:.\Protocolo.c **** 			return 1;
 1188              		.loc 1 372 0 is_stmt 1
 1189 0322 0123     		movs	r3, #1
 1190 0324 02E0     		b	.L61
 1191              	.L63:
 373:.\Protocolo.c **** 		}
 374:.\Protocolo.c **** 		else{
 375:.\Protocolo.c **** 			return 0;
 1192              		.loc 1 375 0
 1193 0326 0023     		movs	r3, #0
 1194 0328 00E0     		b	.L61
 1195              	.L62:
 376:.\Protocolo.c **** 		}
 377:.\Protocolo.c **** 	}
 378:.\Protocolo.c **** 	return 0;
 1196              		.loc 1 378 0
 1197 032a 0023     		movs	r3, #0
 1198              	.L61:
 379:.\Protocolo.c **** }
 1199              		.loc 1 379 0
 1200 032c 1846     		mov	r0, r3
 1201 032e 1037     		adds	r7, r7, #16
 1202 0330 BD46     		mov	sp, r7
 1203              		@ sp needed
 1204 0332 80BD     		pop	{r7, pc}
 1205              	.L81:
 1206              		.align	2
 1207              	.L80:
 1208 0334 00000000 		.word	Surtidor_rxBuffer
 1209 0338 00000000 		.word	rventa2
 1210              		.cfi_endproc
 1211              	.LFE69:
 1212              		.size	venta, .-venta
 1213              		.section	.text.programar,"ax",%progbits
 1214              		.align	2
 1215              		.global	programar
 1216              		.thumb
 1217              		.thumb_func
 1218              		.type	programar, %function
 1219              	programar:
 1220              	.LFB70:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 30


 380:.\Protocolo.c **** 
 381:.\Protocolo.c **** /*
 382:.\Protocolo.c **** ***************************************************************************************************
 383:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 384:.\Protocolo.c **** *
 385:.\Protocolo.c **** * Description : 
 386:.\Protocolo.c **** *               
 387:.\Protocolo.c **** *
 388:.\Protocolo.c **** * Argument(s) : none
 389:.\Protocolo.c **** *
 390:.\Protocolo.c **** * Return(s)   : none
 391:.\Protocolo.c **** *
 392:.\Protocolo.c **** * Caller(s)   : 
 393:.\Protocolo.c **** *
 394:.\Protocolo.c **** * Note(s)     : none.
 395:.\Protocolo.c **** ***************************************************************************************************
 396:.\Protocolo.c **** */
 397:.\Protocolo.c **** uint8 programar(uint8 dir, uint8 grado, uint8 *valor, uint8 preset){
 1221              		.loc 1 397 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 32
 1224              		@ frame_needed = 1, uses_anonymous_args = 0
 1225 0000 80B5     		push	{r7, lr}
 1226              		.cfi_def_cfa_offset 8
 1227              		.cfi_offset 7, -8
 1228              		.cfi_offset 14, -4
 1229 0002 88B0     		sub	sp, sp, #32
 1230              		.cfi_def_cfa_offset 40
 1231 0004 00AF     		add	r7, sp, #0
 1232              		.cfi_def_cfa_register 7
 1233 0006 3A60     		str	r2, [r7]
 1234 0008 0246     		mov	r2, r0
 1235 000a FA71     		strb	r2, [r7, #7]
 1236 000c 0A46     		mov	r2, r1
 1237 000e BA71     		strb	r2, [r7, #6]
 1238 0010 7B71     		strb	r3, [r7, #5]
 398:.\Protocolo.c **** 	uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,temp,i,decimal;
 1239              		.loc 1 398 0
 1240 0012 07F10803 		add	r3, r7, #8
 1241 0016 0022     		movs	r2, #0
 1242 0018 1A60     		str	r2, [r3]
 1243 001a 0433     		adds	r3, r3, #4
 1244 001c 0022     		movs	r2, #0
 1245 001e 1A60     		str	r2, [r3]
 1246 0020 0433     		adds	r3, r3, #4
 1247 0022 0022     		movs	r2, #0
 1248 0024 1A60     		str	r2, [r3]
 1249 0026 0433     		adds	r3, r3, #4
 1250 0028 0022     		movs	r2, #0
 1251 002a 1A60     		str	r2, [r3]
 1252 002c 0433     		adds	r3, r3, #4
 1253 002e 0022     		movs	r2, #0
 1254 0030 1A80     		strh	r2, [r3]	@ movhi
 1255 0032 0233     		adds	r3, r3, #2
 399:.\Protocolo.c **** 	temp=4;
 1256              		.loc 1 399 0
 1257 0034 0423     		movs	r3, #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 31


 1258 0036 BB77     		strb	r3, [r7, #30]
 400:.\Protocolo.c **** 	if(preset==3){
 1259              		.loc 1 400 0
 1260 0038 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1261 003a 032B     		cmp	r3, #3
 1262 003c 01D1     		bne	.L83
 401:.\Protocolo.c **** 		preset=2;
 1263              		.loc 1 401 0
 1264 003e 0223     		movs	r3, #2
 1265 0040 7B71     		strb	r3, [r7, #5]
 1266              	.L83:
 402:.\Protocolo.c **** 	}
 403:.\Protocolo.c **** 	if(((version[1]==5)||(version[1]==6))&&(preset==1)){
 1267              		.loc 1 403 0
 1268 0042 B34B     		ldr	r3, .L126
 1269 0044 5B78     		ldrb	r3, [r3, #1]
 1270 0046 DBB2     		uxtb	r3, r3
 1271 0048 052B     		cmp	r3, #5
 1272 004a 04D0     		beq	.L84
 1273              		.loc 1 403 0 is_stmt 0 discriminator 2
 1274 004c B04B     		ldr	r3, .L126
 1275 004e 5B78     		ldrb	r3, [r3, #1]
 1276 0050 DBB2     		uxtb	r3, r3
 1277 0052 062B     		cmp	r3, #6
 1278 0054 04D1     		bne	.L85
 1279              	.L84:
 1280              		.loc 1 403 0 discriminator 1
 1281 0056 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1282 0058 012B     		cmp	r3, #1
 1283 005a 01D1     		bne	.L85
 404:.\Protocolo.c **** 		temp=3;
 1284              		.loc 1 404 0 is_stmt 1
 1285 005c 0323     		movs	r3, #3
 1286 005e BB77     		strb	r3, [r7, #30]
 1287              	.L85:
 405:.\Protocolo.c **** 	}
 406:.\Protocolo.c **** 	if((version[1]==5)&&(preset==2)){
 1288              		.loc 1 406 0
 1289 0060 AB4B     		ldr	r3, .L126
 1290 0062 5B78     		ldrb	r3, [r3, #1]
 1291 0064 DBB2     		uxtb	r3, r3
 1292 0066 052B     		cmp	r3, #5
 1293 0068 04D1     		bne	.L86
 1294              		.loc 1 406 0 is_stmt 0 discriminator 1
 1295 006a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1296 006c 022B     		cmp	r3, #2
 1297 006e 01D1     		bne	.L86
 407:.\Protocolo.c **** 		temp=5;
 1298              		.loc 1 407 0 is_stmt 1
 1299 0070 0523     		movs	r3, #5
 1300 0072 BB77     		strb	r3, [r7, #30]
 1301              	.L86:
 408:.\Protocolo.c **** 	}
 409:.\Protocolo.c **** 	if((version[1]==7)&&(preset==1)){
 1302              		.loc 1 409 0
 1303 0074 A64B     		ldr	r3, .L126
 1304 0076 5B78     		ldrb	r3, [r3, #1]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 32


 1305 0078 DBB2     		uxtb	r3, r3
 1306 007a 072B     		cmp	r3, #7
 1307 007c 04D1     		bne	.L87
 1308              		.loc 1 409 0 is_stmt 0 discriminator 1
 1309 007e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1310 0080 012B     		cmp	r3, #1
 1311 0082 01D1     		bne	.L87
 410:.\Protocolo.c **** 		temp=0;
 1312              		.loc 1 410 0 is_stmt 1
 1313 0084 0023     		movs	r3, #0
 1314 0086 BB77     		strb	r3, [r7, #30]
 1315              	.L87:
 411:.\Protocolo.c **** 	}
 412:.\Protocolo.c **** 	if((version[1]==7)&&(preset==2)){
 1316              		.loc 1 412 0
 1317 0088 A14B     		ldr	r3, .L126
 1318 008a 5B78     		ldrb	r3, [r3, #1]
 1319 008c DBB2     		uxtb	r3, r3
 1320 008e 072B     		cmp	r3, #7
 1321 0090 04D1     		bne	.L88
 1322              		.loc 1 412 0 is_stmt 0 discriminator 1
 1323 0092 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1324 0094 022B     		cmp	r3, #2
 1325 0096 01D1     		bne	.L88
 413:.\Protocolo.c **** 		temp=2;
 1326              		.loc 1 413 0 is_stmt 1
 1327 0098 0223     		movs	r3, #2
 1328 009a BB77     		strb	r3, [r7, #30]
 1329              	.L88:
 414:.\Protocolo.c **** 	}	
 415:.\Protocolo.c **** 	decimal=0;
 1330              		.loc 1 415 0
 1331 009c 0023     		movs	r3, #0
 1332 009e 3B77     		strb	r3, [r7, #28]
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1333              		.loc 1 416 0
 1334 00a0 0123     		movs	r3, #1
 1335 00a2 7B77     		strb	r3, [r7, #29]
 1336 00a4 0AE0     		b	.L89
 1337              	.L91:
 417:.\Protocolo.c **** 		if(valor[i]==','){
 1338              		.loc 1 417 0
 1339 00a6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1340 00a8 3A68     		ldr	r2, [r7]
 1341 00aa 1344     		add	r3, r3, r2
 1342 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1343 00ae 2C2B     		cmp	r3, #44
 1344 00b0 01D1     		bne	.L90
 418:.\Protocolo.c **** 			decimal=i;	
 1345              		.loc 1 418 0
 1346 00b2 7B7F     		ldrb	r3, [r7, #29]
 1347 00b4 3B77     		strb	r3, [r7, #28]
 1348              	.L90:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1349              		.loc 1 416 0
 1350 00b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1351 00b8 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 33


 1352 00ba 7B77     		strb	r3, [r7, #29]
 1353              	.L89:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1354              		.loc 1 416 0 is_stmt 0 discriminator 1
 1355 00bc 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1356 00be 072B     		cmp	r3, #7
 1357 00c0 F1D9     		bls	.L91
 419:.\Protocolo.c **** 		}
 420:.\Protocolo.c **** 	}
 421:.\Protocolo.c **** 	if(decimal>4){
 1358              		.loc 1 421 0 is_stmt 1
 1359 00c2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1360 00c4 042B     		cmp	r3, #4
 1361 00c6 01D9     		bls	.L92
 422:.\Protocolo.c **** 		return 0;
 1362              		.loc 1 422 0
 1363 00c8 0023     		movs	r3, #0
 1364 00ca CFE3     		b	.L125
 1365              	.L92:
 423:.\Protocolo.c **** 	}
 424:.\Protocolo.c **** 	if(version[1]!=7){		
 1366              		.loc 1 424 0
 1367 00cc 904B     		ldr	r3, .L126
 1368 00ce 5B78     		ldrb	r3, [r3, #1]
 1369 00d0 DBB2     		uxtb	r3, r3
 1370 00d2 072B     		cmp	r3, #7
 1371 00d4 00F00582 		beq	.L94
 425:.\Protocolo.c **** 		buffer[0]=0xFF;
 1372              		.loc 1 425 0
 1373 00d8 FF23     		movs	r3, #255
 1374 00da 3B72     		strb	r3, [r7, #8]
 426:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1375              		.loc 1 426 0
 1376 00dc BB7F     		ldrb	r3, [r7, #30]
 1377 00de 63F01F03 		orn	r3, r3, #31
 1378 00e2 DBB2     		uxtb	r3, r3
 1379 00e4 7B72     		strb	r3, [r7, #9]
 427:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1380              		.loc 1 427 0
 1381 00e6 7B79     		ldrb	r3, [r7, #5]
 1382 00e8 63F00F03 		orn	r3, r3, #15
 1383 00ec DBB2     		uxtb	r3, r3
 1384 00ee BB72     		strb	r3, [r7, #10]
 428:.\Protocolo.c **** 		buffer[3]=0xF4;
 1385              		.loc 1 428 0
 1386 00f0 F423     		movs	r3, #244
 1387 00f2 FB72     		strb	r3, [r7, #11]
 429:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1388              		.loc 1 429 0
 1389 00f4 F823     		movs	r3, #248
 1390 00f6 3B73     		strb	r3, [r7, #12]
 430:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1391              		.loc 1 430 0
 1392 00f8 3B68     		ldr	r3, [r7]
 1393 00fa 0133     		adds	r3, r3, #1
 1394 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1395 00fe 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 34


 1396 0102 DBB2     		uxtb	r3, r3
 1397 0104 7B73     		strb	r3, [r7, #13]
 431:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1398              		.loc 1 431 0
 1399 0106 3B68     		ldr	r3, [r7]
 1400 0108 0233     		adds	r3, r3, #2
 1401 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 010c 63F01F03 		orn	r3, r3, #31
 1403 0110 DBB2     		uxtb	r3, r3
 1404 0112 BB73     		strb	r3, [r7, #14]
 432:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1405              		.loc 1 432 0
 1406 0114 3B68     		ldr	r3, [r7]
 1407 0116 0333     		adds	r3, r3, #3
 1408 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1409 011a 63F01F03 		orn	r3, r3, #31
 1410 011e DBB2     		uxtb	r3, r3
 1411 0120 FB73     		strb	r3, [r7, #15]
 433:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1412              		.loc 1 433 0
 1413 0122 3B68     		ldr	r3, [r7]
 1414 0124 0433     		adds	r3, r3, #4
 1415 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1416 0128 63F01F03 		orn	r3, r3, #31
 1417 012c DBB2     		uxtb	r3, r3
 1418 012e 3B74     		strb	r3, [r7, #16]
 434:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1419              		.loc 1 434 0
 1420 0130 3B68     		ldr	r3, [r7]
 1421 0132 0533     		adds	r3, r3, #5
 1422 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1423 0136 63F01F03 		orn	r3, r3, #31
 1424 013a DBB2     		uxtb	r3, r3
 1425 013c 7B74     		strb	r3, [r7, #17]
 435:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);
 1426              		.loc 1 435 0
 1427 013e 3B68     		ldr	r3, [r7]
 1428 0140 0633     		adds	r3, r3, #6
 1429 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1430 0144 63F01F03 		orn	r3, r3, #31
 1431 0148 DBB2     		uxtb	r3, r3
 1432 014a BB74     		strb	r3, [r7, #18]
 436:.\Protocolo.c **** 		if(version[2]==2){
 1433              		.loc 1 436 0
 1434 014c 704B     		ldr	r3, .L126
 1435 014e 9B78     		ldrb	r3, [r3, #2]
 1436 0150 DBB2     		uxtb	r3, r3
 1437 0152 022B     		cmp	r3, #2
 1438 0154 40F0A580 		bne	.L95
 437:.\Protocolo.c **** 			if(decimal==4){
 1439              		.loc 1 437 0
 1440 0158 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1441 015a 042B     		cmp	r3, #4
 1442 015c 29D1     		bne	.L96
 438:.\Protocolo.c **** 				buffer[5]=(valor[2]|0xE0);
 1443              		.loc 1 438 0
 1444 015e 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 35


 1445 0160 0233     		adds	r3, r3, #2
 1446 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 0164 63F01F03 		orn	r3, r3, #31
 1448 0168 DBB2     		uxtb	r3, r3
 1449 016a 7B73     		strb	r3, [r7, #13]
 439:.\Protocolo.c **** 				buffer[6]=(valor[3]|0xE0);
 1450              		.loc 1 439 0
 1451 016c 3B68     		ldr	r3, [r7]
 1452 016e 0333     		adds	r3, r3, #3
 1453 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1454 0172 63F01F03 		orn	r3, r3, #31
 1455 0176 DBB2     		uxtb	r3, r3
 1456 0178 BB73     		strb	r3, [r7, #14]
 440:.\Protocolo.c **** 				buffer[7]=(valor[5]|0xE0);
 1457              		.loc 1 440 0
 1458 017a 3B68     		ldr	r3, [r7]
 1459 017c 0533     		adds	r3, r3, #5
 1460 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1461 0180 63F01F03 		orn	r3, r3, #31
 1462 0184 DBB2     		uxtb	r3, r3
 1463 0186 FB73     		strb	r3, [r7, #15]
 441:.\Protocolo.c **** 				buffer[8]=(valor[6]|0xE0);
 1464              		.loc 1 441 0
 1465 0188 3B68     		ldr	r3, [r7]
 1466 018a 0633     		adds	r3, r3, #6
 1467 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1468 018e 63F01F03 		orn	r3, r3, #31
 1469 0192 DBB2     		uxtb	r3, r3
 1470 0194 3B74     		strb	r3, [r7, #16]
 442:.\Protocolo.c **** 				buffer[9]=(valor[7]|0xE0);
 1471              		.loc 1 442 0
 1472 0196 3B68     		ldr	r3, [r7]
 1473 0198 0733     		adds	r3, r3, #7
 1474 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1475 019c 63F01F03 		orn	r3, r3, #31
 1476 01a0 DBB2     		uxtb	r3, r3
 1477 01a2 7B74     		strb	r3, [r7, #17]
 443:.\Protocolo.c **** 				buffer[10]=(valor[8]|0xE0);
 1478              		.loc 1 443 0
 1479 01a4 3B68     		ldr	r3, [r7]
 1480 01a6 0833     		adds	r3, r3, #8
 1481 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1482 01aa 63F01F03 		orn	r3, r3, #31
 1483 01ae DBB2     		uxtb	r3, r3
 1484 01b0 BB74     		strb	r3, [r7, #18]
 1485              	.L96:
 444:.\Protocolo.c **** 			}
 445:.\Protocolo.c **** 			if(decimal==3){
 1486              		.loc 1 445 0
 1487 01b2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1488 01b4 032B     		cmp	r3, #3
 1489 01b6 29D1     		bne	.L97
 446:.\Protocolo.c **** 				buffer[5]=(valor[1]|0xE0);
 1490              		.loc 1 446 0
 1491 01b8 3B68     		ldr	r3, [r7]
 1492 01ba 0133     		adds	r3, r3, #1
 1493 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 36


 1494 01be 63F01F03 		orn	r3, r3, #31
 1495 01c2 DBB2     		uxtb	r3, r3
 1496 01c4 7B73     		strb	r3, [r7, #13]
 447:.\Protocolo.c **** 				buffer[6]=(valor[2]|0xE0);
 1497              		.loc 1 447 0
 1498 01c6 3B68     		ldr	r3, [r7]
 1499 01c8 0233     		adds	r3, r3, #2
 1500 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1501 01cc 63F01F03 		orn	r3, r3, #31
 1502 01d0 DBB2     		uxtb	r3, r3
 1503 01d2 BB73     		strb	r3, [r7, #14]
 448:.\Protocolo.c **** 				buffer[7]=(valor[4]|0xE0);
 1504              		.loc 1 448 0
 1505 01d4 3B68     		ldr	r3, [r7]
 1506 01d6 0433     		adds	r3, r3, #4
 1507 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1508 01da 63F01F03 		orn	r3, r3, #31
 1509 01de DBB2     		uxtb	r3, r3
 1510 01e0 FB73     		strb	r3, [r7, #15]
 449:.\Protocolo.c **** 				buffer[8]=(valor[5]|0xE0);
 1511              		.loc 1 449 0
 1512 01e2 3B68     		ldr	r3, [r7]
 1513 01e4 0533     		adds	r3, r3, #5
 1514 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1515 01e8 63F01F03 		orn	r3, r3, #31
 1516 01ec DBB2     		uxtb	r3, r3
 1517 01ee 3B74     		strb	r3, [r7, #16]
 450:.\Protocolo.c **** 				buffer[9]=(valor[6]|0xE0);
 1518              		.loc 1 450 0
 1519 01f0 3B68     		ldr	r3, [r7]
 1520 01f2 0633     		adds	r3, r3, #6
 1521 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1522 01f6 63F01F03 		orn	r3, r3, #31
 1523 01fa DBB2     		uxtb	r3, r3
 1524 01fc 7B74     		strb	r3, [r7, #17]
 451:.\Protocolo.c **** 				buffer[10]=(valor[7]|0xE0);
 1525              		.loc 1 451 0
 1526 01fe 3B68     		ldr	r3, [r7]
 1527 0200 0733     		adds	r3, r3, #7
 1528 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1529 0204 63F01F03 		orn	r3, r3, #31
 1530 0208 DBB2     		uxtb	r3, r3
 1531 020a BB74     		strb	r3, [r7, #18]
 1532              	.L97:
 452:.\Protocolo.c **** 			}
 453:.\Protocolo.c **** 			if(decimal==2){
 1533              		.loc 1 453 0
 1534 020c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1535 020e 022B     		cmp	r3, #2
 1536 0210 24D1     		bne	.L98
 454:.\Protocolo.c **** 				buffer[5]=0xE0;
 1537              		.loc 1 454 0
 1538 0212 E023     		movs	r3, #224
 1539 0214 7B73     		strb	r3, [r7, #13]
 455:.\Protocolo.c **** 				buffer[6]=(valor[1]|0xE0);
 1540              		.loc 1 455 0
 1541 0216 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 37


 1542 0218 0133     		adds	r3, r3, #1
 1543 021a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1544 021c 63F01F03 		orn	r3, r3, #31
 1545 0220 DBB2     		uxtb	r3, r3
 1546 0222 BB73     		strb	r3, [r7, #14]
 456:.\Protocolo.c **** 				buffer[7]=(valor[3]|0xE0);
 1547              		.loc 1 456 0
 1548 0224 3B68     		ldr	r3, [r7]
 1549 0226 0333     		adds	r3, r3, #3
 1550 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1551 022a 63F01F03 		orn	r3, r3, #31
 1552 022e DBB2     		uxtb	r3, r3
 1553 0230 FB73     		strb	r3, [r7, #15]
 457:.\Protocolo.c **** 				buffer[8]=(valor[4]|0xE0);
 1554              		.loc 1 457 0
 1555 0232 3B68     		ldr	r3, [r7]
 1556 0234 0433     		adds	r3, r3, #4
 1557 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1558 0238 63F01F03 		orn	r3, r3, #31
 1559 023c DBB2     		uxtb	r3, r3
 1560 023e 3B74     		strb	r3, [r7, #16]
 458:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);	
 1561              		.loc 1 458 0
 1562 0240 3B68     		ldr	r3, [r7]
 1563 0242 0533     		adds	r3, r3, #5
 1564 0244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1565 0246 63F01F03 		orn	r3, r3, #31
 1566 024a DBB2     		uxtb	r3, r3
 1567 024c 7B74     		strb	r3, [r7, #17]
 459:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1568              		.loc 1 459 0
 1569 024e 3B68     		ldr	r3, [r7]
 1570 0250 0633     		adds	r3, r3, #6
 1571 0252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1572 0254 63F01F03 		orn	r3, r3, #31
 1573 0258 DBB2     		uxtb	r3, r3
 1574 025a BB74     		strb	r3, [r7, #18]
 1575              	.L98:
 460:.\Protocolo.c **** 			}
 461:.\Protocolo.c **** 			if(decimal==0){
 1576              		.loc 1 461 0
 1577 025c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1578 025e 002B     		cmp	r3, #0
 1579 0260 1FD1     		bne	.L95
 462:.\Protocolo.c **** 				buffer[5]=0xE0;
 1580              		.loc 1 462 0
 1581 0262 E023     		movs	r3, #224
 1582 0264 7B73     		strb	r3, [r7, #13]
 463:.\Protocolo.c **** 				buffer[6]=0xE0;
 1583              		.loc 1 463 0
 1584 0266 E023     		movs	r3, #224
 1585 0268 BB73     		strb	r3, [r7, #14]
 464:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1586              		.loc 1 464 0
 1587 026a 3B68     		ldr	r3, [r7]
 1588 026c 0133     		adds	r3, r3, #1
 1589 026e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 38


 1590 0270 63F01F03 		orn	r3, r3, #31
 1591 0274 DBB2     		uxtb	r3, r3
 1592 0276 FB73     		strb	r3, [r7, #15]
 465:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1593              		.loc 1 465 0
 1594 0278 3B68     		ldr	r3, [r7]
 1595 027a 0233     		adds	r3, r3, #2
 1596 027c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1597 027e 63F01F03 		orn	r3, r3, #31
 1598 0282 DBB2     		uxtb	r3, r3
 1599 0284 3B74     		strb	r3, [r7, #16]
 466:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1600              		.loc 1 466 0
 1601 0286 3B68     		ldr	r3, [r7]
 1602 0288 0333     		adds	r3, r3, #3
 1603 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1604 028c 63F01F03 		orn	r3, r3, #31
 1605 0290 DBB2     		uxtb	r3, r3
 1606 0292 7B74     		strb	r3, [r7, #17]
 467:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1607              		.loc 1 467 0
 1608 0294 3B68     		ldr	r3, [r7]
 1609 0296 0433     		adds	r3, r3, #4
 1610 0298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1611 029a 63F01F03 		orn	r3, r3, #31
 1612 029e DBB2     		uxtb	r3, r3
 1613 02a0 BB74     		strb	r3, [r7, #18]
 1614              	.L95:
 468:.\Protocolo.c **** 			}			
 469:.\Protocolo.c **** 		}
 470:.\Protocolo.c **** 		buffer[11]=0xFB;
 1615              		.loc 1 470 0
 1616 02a2 FB23     		movs	r3, #251
 1617 02a4 FB74     		strb	r3, [r7, #19]
 471:.\Protocolo.c **** 		buffer[12]=0;
 1618              		.loc 1 471 0
 1619 02a6 0023     		movs	r3, #0
 1620 02a8 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1621              		.loc 1 472 0
 1622 02aa 0023     		movs	r3, #0
 1623 02ac 7B77     		strb	r3, [r7, #29]
 1624 02ae 0FE0     		b	.L99
 1625              	.L100:
 473:.\Protocolo.c **** 			buffer[12]+=(buffer[i]&0x0F);	
 1626              		.loc 1 473 0 discriminator 2
 1627 02b0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1628 02b2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1629 02b4 07F12001 		add	r1, r7, #32
 1630 02b8 0B44     		add	r3, r3, r1
 1631 02ba 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1632 02be 03F00F03 		and	r3, r3, #15
 1633 02c2 DBB2     		uxtb	r3, r3
 1634 02c4 1344     		add	r3, r3, r2
 1635 02c6 DBB2     		uxtb	r3, r3
 1636 02c8 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 39


 1637              		.loc 1 472 0 discriminator 2
 1638 02ca 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1639 02cc 0133     		adds	r3, r3, #1
 1640 02ce 7B77     		strb	r3, [r7, #29]
 1641              	.L99:
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1642              		.loc 1 472 0 is_stmt 0 discriminator 1
 1643 02d0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1644 02d2 0B2B     		cmp	r3, #11
 1645 02d4 ECD9     		bls	.L100
 474:.\Protocolo.c **** 		}
 475:.\Protocolo.c **** 		buffer[12]=(((~buffer[12])+1)&0x0F)|0xE0;
 1646              		.loc 1 475 0 is_stmt 1
 1647 02d6 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1648 02d8 5B42     		negs	r3, r3
 1649 02da DBB2     		uxtb	r3, r3
 1650 02dc DBB2     		uxtb	r3, r3
 1651 02de 03F00F03 		and	r3, r3, #15
 1652 02e2 DBB2     		uxtb	r3, r3
 1653 02e4 63F01F03 		orn	r3, r3, #31
 1654 02e8 DBB2     		uxtb	r3, r3
 1655 02ea DBB2     		uxtb	r3, r3
 1656 02ec 3B75     		strb	r3, [r7, #20]
 476:.\Protocolo.c **** 		buffer[13]=0xF0;
 1657              		.loc 1 476 0
 1658 02ee F023     		movs	r3, #240
 1659 02f0 7B75     		strb	r3, [r7, #21]
 477:.\Protocolo.c **** 		size=13;
 1660              		.loc 1 477 0
 1661 02f2 0D23     		movs	r3, #13
 1662 02f4 FB77     		strb	r3, [r7, #31]
 478:.\Protocolo.c **** 		if(version[1]==5){
 1663              		.loc 1 478 0
 1664 02f6 064B     		ldr	r3, .L126
 1665 02f8 5B78     		ldrb	r3, [r3, #1]
 1666 02fa DBB2     		uxtb	r3, r3
 1667 02fc 052B     		cmp	r3, #5
 1668 02fe 2CD1     		bne	.L101
 479:.\Protocolo.c **** 			buffer[10]=0xFB;
 1669              		.loc 1 479 0
 1670 0300 FB23     		movs	r3, #251
 1671 0302 BB74     		strb	r3, [r7, #18]
 480:.\Protocolo.c **** 			buffer[11]=0;
 1672              		.loc 1 480 0
 1673 0304 0023     		movs	r3, #0
 1674 0306 FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1675              		.loc 1 481 0
 1676 0308 0023     		movs	r3, #0
 1677 030a 7B77     		strb	r3, [r7, #29]
 1678 030c 12E0     		b	.L102
 1679              	.L127:
 1680 030e 00BF     		.align	2
 1681              	.L126:
 1682 0310 00000000 		.word	version
 1683              	.L103:
 482:.\Protocolo.c **** 				buffer[11]+=(buffer[i]&0x0F);	
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 40


 1684              		.loc 1 482 0 discriminator 2
 1685 0314 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 1686 0316 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1687 0318 07F12001 		add	r1, r7, #32
 1688 031c 0B44     		add	r3, r3, r1
 1689 031e 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1690 0322 03F00F03 		and	r3, r3, #15
 1691 0326 DBB2     		uxtb	r3, r3
 1692 0328 1344     		add	r3, r3, r2
 1693 032a DBB2     		uxtb	r3, r3
 1694 032c FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1695              		.loc 1 481 0 discriminator 2
 1696 032e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1697 0330 0133     		adds	r3, r3, #1
 1698 0332 7B77     		strb	r3, [r7, #29]
 1699              	.L102:
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1700              		.loc 1 481 0 is_stmt 0 discriminator 1
 1701 0334 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1702 0336 0A2B     		cmp	r3, #10
 1703 0338 ECD9     		bls	.L103
 483:.\Protocolo.c **** 			}
 484:.\Protocolo.c **** 			buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 1704              		.loc 1 484 0 is_stmt 1
 1705 033a FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1706 033c 5B42     		negs	r3, r3
 1707 033e DBB2     		uxtb	r3, r3
 1708 0340 DBB2     		uxtb	r3, r3
 1709 0342 03F00F03 		and	r3, r3, #15
 1710 0346 DBB2     		uxtb	r3, r3
 1711 0348 63F01F03 		orn	r3, r3, #31
 1712 034c DBB2     		uxtb	r3, r3
 1713 034e DBB2     		uxtb	r3, r3
 1714 0350 FB74     		strb	r3, [r7, #19]
 485:.\Protocolo.c **** 			buffer[12]=0xF0;
 1715              		.loc 1 485 0
 1716 0352 F023     		movs	r3, #240
 1717 0354 3B75     		strb	r3, [r7, #20]
 486:.\Protocolo.c **** 			size=12;		
 1718              		.loc 1 486 0
 1719 0356 0C23     		movs	r3, #12
 1720 0358 FB77     		strb	r3, [r7, #31]
 1721              	.L101:
 487:.\Protocolo.c **** 		}
 488:.\Protocolo.c **** 		if(preset==1){
 1722              		.loc 1 488 0
 1723 035a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1724 035c 012B     		cmp	r3, #1
 1725 035e 40F0C080 		bne	.L94
 489:.\Protocolo.c **** 			buffer[4]=0xF6;
 1726              		.loc 1 489 0
 1727 0362 F623     		movs	r3, #246
 1728 0364 3B73     		strb	r3, [r7, #12]
 490:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 1729              		.loc 1 490 0
 1730 0366 BB79     		ldrb	r3, [r7, #6]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 41


 1731 0368 013B     		subs	r3, r3, #1
 1732 036a DBB2     		uxtb	r3, r3
 1733 036c DBB2     		uxtb	r3, r3
 1734 036e 63F01F03 		orn	r3, r3, #31
 1735 0372 DBB2     		uxtb	r3, r3
 1736 0374 DBB2     		uxtb	r3, r3
 1737 0376 7B73     		strb	r3, [r7, #13]
 491:.\Protocolo.c **** 			buffer[6]=0xF8;
 1738              		.loc 1 491 0
 1739 0378 F823     		movs	r3, #248
 1740 037a BB73     		strb	r3, [r7, #14]
 492:.\Protocolo.c **** 			if(decimal==4){
 1741              		.loc 1 492 0
 1742 037c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1743 037e 042B     		cmp	r3, #4
 1744 0380 22D1     		bne	.L104
 493:.\Protocolo.c **** 				buffer[7]=(valor[2]|0xE0);
 1745              		.loc 1 493 0
 1746 0382 3B68     		ldr	r3, [r7]
 1747 0384 0233     		adds	r3, r3, #2
 1748 0386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1749 0388 63F01F03 		orn	r3, r3, #31
 1750 038c DBB2     		uxtb	r3, r3
 1751 038e FB73     		strb	r3, [r7, #15]
 494:.\Protocolo.c **** 				buffer[8]=(valor[3]|0xE0);
 1752              		.loc 1 494 0
 1753 0390 3B68     		ldr	r3, [r7]
 1754 0392 0333     		adds	r3, r3, #3
 1755 0394 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1756 0396 63F01F03 		orn	r3, r3, #31
 1757 039a DBB2     		uxtb	r3, r3
 1758 039c 3B74     		strb	r3, [r7, #16]
 495:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);
 1759              		.loc 1 495 0
 1760 039e 3B68     		ldr	r3, [r7]
 1761 03a0 0533     		adds	r3, r3, #5
 1762 03a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1763 03a4 63F01F03 		orn	r3, r3, #31
 1764 03a8 DBB2     		uxtb	r3, r3
 1765 03aa 7B74     		strb	r3, [r7, #17]
 496:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1766              		.loc 1 496 0
 1767 03ac 3B68     		ldr	r3, [r7]
 1768 03ae 0633     		adds	r3, r3, #6
 1769 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1770 03b2 63F01F03 		orn	r3, r3, #31
 1771 03b6 DBB2     		uxtb	r3, r3
 1772 03b8 BB74     		strb	r3, [r7, #18]
 497:.\Protocolo.c **** 				buffer[11]=(valor[7]|0xE0);
 1773              		.loc 1 497 0
 1774 03ba 3B68     		ldr	r3, [r7]
 1775 03bc 0733     		adds	r3, r3, #7
 1776 03be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1777 03c0 63F01F03 		orn	r3, r3, #31
 1778 03c4 DBB2     		uxtb	r3, r3
 1779 03c6 FB74     		strb	r3, [r7, #19]
 1780              	.L104:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 42


 498:.\Protocolo.c **** 			}
 499:.\Protocolo.c **** 			if(decimal==3){
 1781              		.loc 1 499 0
 1782 03c8 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1783 03ca 032B     		cmp	r3, #3
 1784 03cc 22D1     		bne	.L105
 500:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1785              		.loc 1 500 0
 1786 03ce 3B68     		ldr	r3, [r7]
 1787 03d0 0133     		adds	r3, r3, #1
 1788 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1789 03d4 63F01F03 		orn	r3, r3, #31
 1790 03d8 DBB2     		uxtb	r3, r3
 1791 03da FB73     		strb	r3, [r7, #15]
 501:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1792              		.loc 1 501 0
 1793 03dc 3B68     		ldr	r3, [r7]
 1794 03de 0233     		adds	r3, r3, #2
 1795 03e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1796 03e2 63F01F03 		orn	r3, r3, #31
 1797 03e6 DBB2     		uxtb	r3, r3
 1798 03e8 3B74     		strb	r3, [r7, #16]
 502:.\Protocolo.c **** 				buffer[9]=(valor[4]|0xE0);
 1799              		.loc 1 502 0
 1800 03ea 3B68     		ldr	r3, [r7]
 1801 03ec 0433     		adds	r3, r3, #4
 1802 03ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1803 03f0 63F01F03 		orn	r3, r3, #31
 1804 03f4 DBB2     		uxtb	r3, r3
 1805 03f6 7B74     		strb	r3, [r7, #17]
 503:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 1806              		.loc 1 503 0
 1807 03f8 3B68     		ldr	r3, [r7]
 1808 03fa 0533     		adds	r3, r3, #5
 1809 03fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1810 03fe 63F01F03 		orn	r3, r3, #31
 1811 0402 DBB2     		uxtb	r3, r3
 1812 0404 BB74     		strb	r3, [r7, #18]
 504:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);		
 1813              		.loc 1 504 0
 1814 0406 3B68     		ldr	r3, [r7]
 1815 0408 0633     		adds	r3, r3, #6
 1816 040a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1817 040c 63F01F03 		orn	r3, r3, #31
 1818 0410 DBB2     		uxtb	r3, r3
 1819 0412 FB74     		strb	r3, [r7, #19]
 1820              	.L105:
 505:.\Protocolo.c **** 			}
 506:.\Protocolo.c **** 			if(decimal==2){
 1821              		.loc 1 506 0
 1822 0414 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1823 0416 022B     		cmp	r3, #2
 1824 0418 1DD1     		bne	.L106
 507:.\Protocolo.c **** 				buffer[7]=0xE0;
 1825              		.loc 1 507 0
 1826 041a E023     		movs	r3, #224
 1827 041c FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 43


 508:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 1828              		.loc 1 508 0
 1829 041e 3B68     		ldr	r3, [r7]
 1830 0420 0133     		adds	r3, r3, #1
 1831 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1832 0424 63F01F03 		orn	r3, r3, #31
 1833 0428 DBB2     		uxtb	r3, r3
 1834 042a 3B74     		strb	r3, [r7, #16]
 509:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1835              		.loc 1 509 0
 1836 042c 3B68     		ldr	r3, [r7]
 1837 042e 0333     		adds	r3, r3, #3
 1838 0430 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1839 0432 63F01F03 		orn	r3, r3, #31
 1840 0436 DBB2     		uxtb	r3, r3
 1841 0438 7B74     		strb	r3, [r7, #17]
 510:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1842              		.loc 1 510 0
 1843 043a 3B68     		ldr	r3, [r7]
 1844 043c 0433     		adds	r3, r3, #4
 1845 043e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1846 0440 63F01F03 		orn	r3, r3, #31
 1847 0444 DBB2     		uxtb	r3, r3
 1848 0446 BB74     		strb	r3, [r7, #18]
 511:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);		
 1849              		.loc 1 511 0
 1850 0448 3B68     		ldr	r3, [r7]
 1851 044a 0533     		adds	r3, r3, #5
 1852 044c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1853 044e 63F01F03 		orn	r3, r3, #31
 1854 0452 DBB2     		uxtb	r3, r3
 1855 0454 FB74     		strb	r3, [r7, #19]
 1856              	.L106:
 512:.\Protocolo.c **** 			}
 513:.\Protocolo.c **** 			if(decimal==0){
 1857              		.loc 1 513 0
 1858 0456 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1859 0458 002B     		cmp	r3, #0
 1860 045a 18D1     		bne	.L107
 514:.\Protocolo.c **** 				buffer[7]=0xE0;
 1861              		.loc 1 514 0
 1862 045c E023     		movs	r3, #224
 1863 045e FB73     		strb	r3, [r7, #15]
 515:.\Protocolo.c **** 				buffer[8]=0xE0;
 1864              		.loc 1 515 0
 1865 0460 E023     		movs	r3, #224
 1866 0462 3B74     		strb	r3, [r7, #16]
 516:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 1867              		.loc 1 516 0
 1868 0464 3B68     		ldr	r3, [r7]
 1869 0466 0133     		adds	r3, r3, #1
 1870 0468 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1871 046a 63F01F03 		orn	r3, r3, #31
 1872 046e DBB2     		uxtb	r3, r3
 1873 0470 7B74     		strb	r3, [r7, #17]
 517:.\Protocolo.c **** 				buffer[10]=(valor[2]|0xE0);
 1874              		.loc 1 517 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 44


 1875 0472 3B68     		ldr	r3, [r7]
 1876 0474 0233     		adds	r3, r3, #2
 1877 0476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1878 0478 63F01F03 		orn	r3, r3, #31
 1879 047c DBB2     		uxtb	r3, r3
 1880 047e BB74     		strb	r3, [r7, #18]
 518:.\Protocolo.c **** 				buffer[11]=(valor[3]|0xE0);		
 1881              		.loc 1 518 0
 1882 0480 3B68     		ldr	r3, [r7]
 1883 0482 0333     		adds	r3, r3, #3
 1884 0484 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1885 0486 63F01F03 		orn	r3, r3, #31
 1886 048a DBB2     		uxtb	r3, r3
 1887 048c FB74     		strb	r3, [r7, #19]
 1888              	.L107:
 519:.\Protocolo.c **** 			}			
 520:.\Protocolo.c **** 			buffer[12]=0xFB;
 1889              		.loc 1 520 0
 1890 048e FB23     		movs	r3, #251
 1891 0490 3B75     		strb	r3, [r7, #20]
 521:.\Protocolo.c **** 			buffer[13]=0;
 1892              		.loc 1 521 0
 1893 0492 0023     		movs	r3, #0
 1894 0494 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1895              		.loc 1 522 0
 1896 0496 0023     		movs	r3, #0
 1897 0498 7B77     		strb	r3, [r7, #29]
 1898 049a 0FE0     		b	.L108
 1899              	.L109:
 523:.\Protocolo.c **** 				buffer[13]+=(buffer[i]&0x0F);	
 1900              		.loc 1 523 0 discriminator 2
 1901 049c 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1902 049e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1903 04a0 07F12001 		add	r1, r7, #32
 1904 04a4 0B44     		add	r3, r3, r1
 1905 04a6 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1906 04aa 03F00F03 		and	r3, r3, #15
 1907 04ae DBB2     		uxtb	r3, r3
 1908 04b0 1344     		add	r3, r3, r2
 1909 04b2 DBB2     		uxtb	r3, r3
 1910 04b4 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1911              		.loc 1 522 0 discriminator 2
 1912 04b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1913 04b8 0133     		adds	r3, r3, #1
 1914 04ba 7B77     		strb	r3, [r7, #29]
 1915              	.L108:
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1916              		.loc 1 522 0 is_stmt 0 discriminator 1
 1917 04bc 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1918 04be 0C2B     		cmp	r3, #12
 1919 04c0 ECD9     		bls	.L109
 524:.\Protocolo.c **** 			}
 525:.\Protocolo.c **** 			buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;			
 1920              		.loc 1 525 0 is_stmt 1
 1921 04c2 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 45


 1922 04c4 5B42     		negs	r3, r3
 1923 04c6 DBB2     		uxtb	r3, r3
 1924 04c8 DBB2     		uxtb	r3, r3
 1925 04ca 03F00F03 		and	r3, r3, #15
 1926 04ce DBB2     		uxtb	r3, r3
 1927 04d0 63F01F03 		orn	r3, r3, #31
 1928 04d4 DBB2     		uxtb	r3, r3
 1929 04d6 DBB2     		uxtb	r3, r3
 1930 04d8 7B75     		strb	r3, [r7, #21]
 526:.\Protocolo.c **** 			buffer[14]=0xF0;
 1931              		.loc 1 526 0
 1932 04da F023     		movs	r3, #240
 1933 04dc BB75     		strb	r3, [r7, #22]
 527:.\Protocolo.c **** 			size=14;
 1934              		.loc 1 527 0
 1935 04de 0E23     		movs	r3, #14
 1936 04e0 FB77     		strb	r3, [r7, #31]
 1937              	.L94:
 528:.\Protocolo.c **** 		}	
 529:.\Protocolo.c **** 	}	
 530:.\Protocolo.c **** 	if(version[1]==7){
 1938              		.loc 1 530 0
 1939 04e2 A24B     		ldr	r3, .L128
 1940 04e4 5B78     		ldrb	r3, [r3, #1]
 1941 04e6 DBB2     		uxtb	r3, r3
 1942 04e8 072B     		cmp	r3, #7
 1943 04ea 40F06481 		bne	.L110
 531:.\Protocolo.c **** 		buffer[0]=0xFF;
 1944              		.loc 1 531 0
 1945 04ee FF23     		movs	r3, #255
 1946 04f0 3B72     		strb	r3, [r7, #8]
 532:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1947              		.loc 1 532 0
 1948 04f2 BB7F     		ldrb	r3, [r7, #30]
 1949 04f4 63F01F03 		orn	r3, r3, #31
 1950 04f8 DBB2     		uxtb	r3, r3
 1951 04fa 7B72     		strb	r3, [r7, #9]
 533:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1952              		.loc 1 533 0
 1953 04fc 7B79     		ldrb	r3, [r7, #5]
 1954 04fe 63F00F03 		orn	r3, r3, #15
 1955 0502 DBB2     		uxtb	r3, r3
 1956 0504 BB72     		strb	r3, [r7, #10]
 534:.\Protocolo.c **** 		buffer[3]=0xF4;
 1957              		.loc 1 534 0
 1958 0506 F423     		movs	r3, #244
 1959 0508 FB72     		strb	r3, [r7, #11]
 535:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1960              		.loc 1 535 0
 1961 050a F823     		movs	r3, #248
 1962 050c 3B73     		strb	r3, [r7, #12]
 536:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1963              		.loc 1 536 0
 1964 050e 3B68     		ldr	r3, [r7]
 1965 0510 0133     		adds	r3, r3, #1
 1966 0512 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1967 0514 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 46


 1968 0518 DBB2     		uxtb	r3, r3
 1969 051a 7B73     		strb	r3, [r7, #13]
 537:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1970              		.loc 1 537 0
 1971 051c 3B68     		ldr	r3, [r7]
 1972 051e 0233     		adds	r3, r3, #2
 1973 0520 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1974 0522 63F01F03 		orn	r3, r3, #31
 1975 0526 DBB2     		uxtb	r3, r3
 1976 0528 BB73     		strb	r3, [r7, #14]
 538:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1977              		.loc 1 538 0
 1978 052a 3B68     		ldr	r3, [r7]
 1979 052c 0333     		adds	r3, r3, #3
 1980 052e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1981 0530 63F01F03 		orn	r3, r3, #31
 1982 0534 DBB2     		uxtb	r3, r3
 1983 0536 FB73     		strb	r3, [r7, #15]
 539:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1984              		.loc 1 539 0
 1985 0538 3B68     		ldr	r3, [r7]
 1986 053a 0433     		adds	r3, r3, #4
 1987 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1988 053e 63F01F03 		orn	r3, r3, #31
 1989 0542 DBB2     		uxtb	r3, r3
 1990 0544 3B74     		strb	r3, [r7, #16]
 540:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1991              		.loc 1 540 0
 1992 0546 3B68     		ldr	r3, [r7]
 1993 0548 0533     		adds	r3, r3, #5
 1994 054a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1995 054c 63F01F03 		orn	r3, r3, #31
 1996 0550 DBB2     		uxtb	r3, r3
 1997 0552 7B74     		strb	r3, [r7, #17]
 541:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);	
 1998              		.loc 1 541 0
 1999 0554 3B68     		ldr	r3, [r7]
 2000 0556 0633     		adds	r3, r3, #6
 2001 0558 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2002 055a 63F01F03 		orn	r3, r3, #31
 2003 055e DBB2     		uxtb	r3, r3
 2004 0560 BB74     		strb	r3, [r7, #18]
 542:.\Protocolo.c **** 		buffer[11]=(valor[7]|0xE0);
 2005              		.loc 1 542 0
 2006 0562 3B68     		ldr	r3, [r7]
 2007 0564 0733     		adds	r3, r3, #7
 2008 0566 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2009 0568 63F01F03 		orn	r3, r3, #31
 2010 056c DBB2     		uxtb	r3, r3
 2011 056e FB74     		strb	r3, [r7, #19]
 543:.\Protocolo.c **** 		buffer[12]=0xE0;
 2012              		.loc 1 543 0
 2013 0570 E023     		movs	r3, #224
 2014 0572 3B75     		strb	r3, [r7, #20]
 544:.\Protocolo.c **** 		buffer[13]=0xFB;
 2015              		.loc 1 544 0
 2016 0574 FB23     		movs	r3, #251
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 47


 2017 0576 7B75     		strb	r3, [r7, #21]
 545:.\Protocolo.c **** 		buffer[14]=0;
 2018              		.loc 1 545 0
 2019 0578 0023     		movs	r3, #0
 2020 057a BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2021              		.loc 1 546 0
 2022 057c 0023     		movs	r3, #0
 2023 057e 7B77     		strb	r3, [r7, #29]
 2024 0580 0FE0     		b	.L111
 2025              	.L112:
 547:.\Protocolo.c **** 			buffer[14]+=(buffer[i]&0x0F);	
 2026              		.loc 1 547 0 discriminator 2
 2027 0582 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2028 0584 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2029 0586 07F12001 		add	r1, r7, #32
 2030 058a 0B44     		add	r3, r3, r1
 2031 058c 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2032 0590 03F00F03 		and	r3, r3, #15
 2033 0594 DBB2     		uxtb	r3, r3
 2034 0596 1344     		add	r3, r3, r2
 2035 0598 DBB2     		uxtb	r3, r3
 2036 059a BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2037              		.loc 1 546 0 discriminator 2
 2038 059c 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2039 059e 0133     		adds	r3, r3, #1
 2040 05a0 7B77     		strb	r3, [r7, #29]
 2041              	.L111:
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2042              		.loc 1 546 0 is_stmt 0 discriminator 1
 2043 05a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2044 05a4 0D2B     		cmp	r3, #13
 2045 05a6 ECD9     		bls	.L112
 548:.\Protocolo.c **** 		}
 549:.\Protocolo.c **** 		buffer[14]=(((~buffer[14])+1)&0x0F)|0xE0;
 2046              		.loc 1 549 0 is_stmt 1
 2047 05a8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2048 05aa 5B42     		negs	r3, r3
 2049 05ac DBB2     		uxtb	r3, r3
 2050 05ae DBB2     		uxtb	r3, r3
 2051 05b0 03F00F03 		and	r3, r3, #15
 2052 05b4 DBB2     		uxtb	r3, r3
 2053 05b6 63F01F03 		orn	r3, r3, #31
 2054 05ba DBB2     		uxtb	r3, r3
 2055 05bc DBB2     		uxtb	r3, r3
 2056 05be BB75     		strb	r3, [r7, #22]
 550:.\Protocolo.c **** 		buffer[15]=0xF0;
 2057              		.loc 1 550 0
 2058 05c0 F023     		movs	r3, #240
 2059 05c2 FB75     		strb	r3, [r7, #23]
 551:.\Protocolo.c **** 		size=15;
 2060              		.loc 1 551 0
 2061 05c4 0F23     		movs	r3, #15
 2062 05c6 FB77     		strb	r3, [r7, #31]
 552:.\Protocolo.c **** 		if(preset==1){
 2063              		.loc 1 552 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 48


 2064 05c8 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2065 05ca 012B     		cmp	r3, #1
 2066 05cc 40F0F380 		bne	.L110
 553:.\Protocolo.c **** 			buffer[4]=0xF6;
 2067              		.loc 1 553 0
 2068 05d0 F623     		movs	r3, #246
 2069 05d2 3B73     		strb	r3, [r7, #12]
 554:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2070              		.loc 1 554 0
 2071 05d4 BB79     		ldrb	r3, [r7, #6]
 2072 05d6 013B     		subs	r3, r3, #1
 2073 05d8 DBB2     		uxtb	r3, r3
 2074 05da DBB2     		uxtb	r3, r3
 2075 05dc 63F01F03 		orn	r3, r3, #31
 2076 05e0 DBB2     		uxtb	r3, r3
 2077 05e2 DBB2     		uxtb	r3, r3
 2078 05e4 7B73     		strb	r3, [r7, #13]
 555:.\Protocolo.c **** 			buffer[6]=0xF8;
 2079              		.loc 1 555 0
 2080 05e6 F823     		movs	r3, #248
 2081 05e8 BB73     		strb	r3, [r7, #14]
 556:.\Protocolo.c **** 			if(decimal==4){
 2082              		.loc 1 556 0
 2083 05ea 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2084 05ec 042B     		cmp	r3, #4
 2085 05ee 2DD1     		bne	.L113
 557:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2086              		.loc 1 557 0
 2087 05f0 3B68     		ldr	r3, [r7]
 2088 05f2 0133     		adds	r3, r3, #1
 2089 05f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2090 05f6 63F01F03 		orn	r3, r3, #31
 2091 05fa DBB2     		uxtb	r3, r3
 2092 05fc FB73     		strb	r3, [r7, #15]
 558:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2093              		.loc 1 558 0
 2094 05fe 3B68     		ldr	r3, [r7]
 2095 0600 0233     		adds	r3, r3, #2
 2096 0602 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2097 0604 63F01F03 		orn	r3, r3, #31
 2098 0608 DBB2     		uxtb	r3, r3
 2099 060a 3B74     		strb	r3, [r7, #16]
 559:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2100              		.loc 1 559 0
 2101 060c 3B68     		ldr	r3, [r7]
 2102 060e 0333     		adds	r3, r3, #3
 2103 0610 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2104 0612 63F01F03 		orn	r3, r3, #31
 2105 0616 DBB2     		uxtb	r3, r3
 2106 0618 7B74     		strb	r3, [r7, #17]
 560:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2107              		.loc 1 560 0
 2108 061a 3B68     		ldr	r3, [r7]
 2109 061c 0533     		adds	r3, r3, #5
 2110 061e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2111 0620 63F01F03 		orn	r3, r3, #31
 2112 0624 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 49


 2113 0626 BB74     		strb	r3, [r7, #18]
 561:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);
 2114              		.loc 1 561 0
 2115 0628 3B68     		ldr	r3, [r7]
 2116 062a 0633     		adds	r3, r3, #6
 2117 062c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2118 062e 63F01F03 		orn	r3, r3, #31
 2119 0632 DBB2     		uxtb	r3, r3
 2120 0634 FB74     		strb	r3, [r7, #19]
 562:.\Protocolo.c **** 				buffer[12]=(valor[7]|0xE0);	
 2121              		.loc 1 562 0
 2122 0636 3B68     		ldr	r3, [r7]
 2123 0638 0733     		adds	r3, r3, #7
 2124 063a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2125 063c 63F01F03 		orn	r3, r3, #31
 2126 0640 DBB2     		uxtb	r3, r3
 2127 0642 3B75     		strb	r3, [r7, #20]
 563:.\Protocolo.c **** 				buffer[13]=0xE0;	
 2128              		.loc 1 563 0
 2129 0644 E023     		movs	r3, #224
 2130 0646 7B75     		strb	r3, [r7, #21]
 564:.\Protocolo.c **** 				buffer[14]=0xE0;
 2131              		.loc 1 564 0
 2132 0648 E023     		movs	r3, #224
 2133 064a BB75     		strb	r3, [r7, #22]
 2134              	.L113:
 565:.\Protocolo.c **** 			}
 566:.\Protocolo.c **** 			if(decimal==3){
 2135              		.loc 1 566 0
 2136 064c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2137 064e 032B     		cmp	r3, #3
 2138 0650 2DD1     		bne	.L114
 567:.\Protocolo.c **** 				buffer[7]=0xE0;
 2139              		.loc 1 567 0
 2140 0652 E023     		movs	r3, #224
 2141 0654 FB73     		strb	r3, [r7, #15]
 568:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2142              		.loc 1 568 0
 2143 0656 3B68     		ldr	r3, [r7]
 2144 0658 0133     		adds	r3, r3, #1
 2145 065a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2146 065c 63F01F03 		orn	r3, r3, #31
 2147 0660 DBB2     		uxtb	r3, r3
 2148 0662 3B74     		strb	r3, [r7, #16]
 569:.\Protocolo.c **** 				buffer[9]=(valor[2]|0xE0);
 2149              		.loc 1 569 0
 2150 0664 3B68     		ldr	r3, [r7]
 2151 0666 0233     		adds	r3, r3, #2
 2152 0668 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2153 066a 63F01F03 		orn	r3, r3, #31
 2154 066e DBB2     		uxtb	r3, r3
 2155 0670 7B74     		strb	r3, [r7, #17]
 570:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2156              		.loc 1 570 0
 2157 0672 3B68     		ldr	r3, [r7]
 2158 0674 0433     		adds	r3, r3, #4
 2159 0676 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 50


 2160 0678 63F01F03 		orn	r3, r3, #31
 2161 067c DBB2     		uxtb	r3, r3
 2162 067e BB74     		strb	r3, [r7, #18]
 571:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);
 2163              		.loc 1 571 0
 2164 0680 3B68     		ldr	r3, [r7]
 2165 0682 0533     		adds	r3, r3, #5
 2166 0684 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2167 0686 63F01F03 		orn	r3, r3, #31
 2168 068a DBB2     		uxtb	r3, r3
 2169 068c FB74     		strb	r3, [r7, #19]
 572:.\Protocolo.c **** 				buffer[12]=(valor[6]|0xE0);
 2170              		.loc 1 572 0
 2171 068e 3B68     		ldr	r3, [r7]
 2172 0690 0633     		adds	r3, r3, #6
 2173 0692 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2174 0694 63F01F03 		orn	r3, r3, #31
 2175 0698 DBB2     		uxtb	r3, r3
 2176 069a 3B75     		strb	r3, [r7, #20]
 573:.\Protocolo.c **** 				buffer[13]=(valor[7]|0xE0);	
 2177              		.loc 1 573 0
 2178 069c 3B68     		ldr	r3, [r7]
 2179 069e 0733     		adds	r3, r3, #7
 2180 06a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2181 06a2 63F01F03 		orn	r3, r3, #31
 2182 06a6 DBB2     		uxtb	r3, r3
 2183 06a8 7B75     		strb	r3, [r7, #21]
 574:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2184              		.loc 1 574 0
 2185 06aa E023     		movs	r3, #224
 2186 06ac BB75     		strb	r3, [r7, #22]
 2187              	.L114:
 575:.\Protocolo.c **** 			}
 576:.\Protocolo.c **** 			if(decimal==2){
 2188              		.loc 1 576 0
 2189 06ae 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2190 06b0 022B     		cmp	r3, #2
 2191 06b2 2DD1     		bne	.L115
 577:.\Protocolo.c **** 				buffer[7]=0xE0;
 2192              		.loc 1 577 0
 2193 06b4 E023     		movs	r3, #224
 2194 06b6 FB73     		strb	r3, [r7, #15]
 578:.\Protocolo.c **** 				buffer[8]=0xE0;
 2195              		.loc 1 578 0
 2196 06b8 E023     		movs	r3, #224
 2197 06ba 3B74     		strb	r3, [r7, #16]
 579:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2198              		.loc 1 579 0
 2199 06bc 3B68     		ldr	r3, [r7]
 2200 06be 0133     		adds	r3, r3, #1
 2201 06c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2202 06c2 63F01F03 		orn	r3, r3, #31
 2203 06c6 DBB2     		uxtb	r3, r3
 2204 06c8 7B74     		strb	r3, [r7, #17]
 580:.\Protocolo.c **** 				buffer[10]=(valor[3]|0xE0);
 2205              		.loc 1 580 0
 2206 06ca 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 51


 2207 06cc 0333     		adds	r3, r3, #3
 2208 06ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 06d0 63F01F03 		orn	r3, r3, #31
 2210 06d4 DBB2     		uxtb	r3, r3
 2211 06d6 BB74     		strb	r3, [r7, #18]
 581:.\Protocolo.c **** 				buffer[11]=(valor[4]|0xE0);
 2212              		.loc 1 581 0
 2213 06d8 3B68     		ldr	r3, [r7]
 2214 06da 0433     		adds	r3, r3, #4
 2215 06dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2216 06de 63F01F03 		orn	r3, r3, #31
 2217 06e2 DBB2     		uxtb	r3, r3
 2218 06e4 FB74     		strb	r3, [r7, #19]
 582:.\Protocolo.c **** 				buffer[12]=(valor[5]|0xE0);
 2219              		.loc 1 582 0
 2220 06e6 3B68     		ldr	r3, [r7]
 2221 06e8 0533     		adds	r3, r3, #5
 2222 06ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2223 06ec 63F01F03 		orn	r3, r3, #31
 2224 06f0 DBB2     		uxtb	r3, r3
 2225 06f2 3B75     		strb	r3, [r7, #20]
 583:.\Protocolo.c **** 				buffer[13]=(valor[6]|0xE0);	
 2226              		.loc 1 583 0
 2227 06f4 3B68     		ldr	r3, [r7]
 2228 06f6 0633     		adds	r3, r3, #6
 2229 06f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2230 06fa 63F01F03 		orn	r3, r3, #31
 2231 06fe DBB2     		uxtb	r3, r3
 2232 0700 7B75     		strb	r3, [r7, #21]
 584:.\Protocolo.c **** 				buffer[14]=(valor[7]|0xE0);	
 2233              		.loc 1 584 0
 2234 0702 3B68     		ldr	r3, [r7]
 2235 0704 0733     		adds	r3, r3, #7
 2236 0706 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2237 0708 63F01F03 		orn	r3, r3, #31
 2238 070c DBB2     		uxtb	r3, r3
 2239 070e BB75     		strb	r3, [r7, #22]
 2240              	.L115:
 585:.\Protocolo.c **** 			}
 586:.\Protocolo.c **** 			if(decimal==0){
 2241              		.loc 1 586 0
 2242 0710 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2243 0712 002B     		cmp	r3, #0
 2244 0714 23D1     		bne	.L116
 587:.\Protocolo.c **** 				buffer[7]=0xE0;
 2245              		.loc 1 587 0
 2246 0716 E023     		movs	r3, #224
 2247 0718 FB73     		strb	r3, [r7, #15]
 588:.\Protocolo.c **** 				buffer[8]=0xE0;
 2248              		.loc 1 588 0
 2249 071a E023     		movs	r3, #224
 2250 071c 3B74     		strb	r3, [r7, #16]
 589:.\Protocolo.c **** 				buffer[9]=0xE0;
 2251              		.loc 1 589 0
 2252 071e E023     		movs	r3, #224
 2253 0720 7B74     		strb	r3, [r7, #17]
 590:.\Protocolo.c **** 				buffer[10]=(valor[1]|0xE0);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 52


 2254              		.loc 1 590 0
 2255 0722 3B68     		ldr	r3, [r7]
 2256 0724 0133     		adds	r3, r3, #1
 2257 0726 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2258 0728 63F01F03 		orn	r3, r3, #31
 2259 072c DBB2     		uxtb	r3, r3
 2260 072e BB74     		strb	r3, [r7, #18]
 591:.\Protocolo.c **** 				buffer[11]=(valor[2]|0xE0);
 2261              		.loc 1 591 0
 2262 0730 3B68     		ldr	r3, [r7]
 2263 0732 0233     		adds	r3, r3, #2
 2264 0734 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2265 0736 63F01F03 		orn	r3, r3, #31
 2266 073a DBB2     		uxtb	r3, r3
 2267 073c FB74     		strb	r3, [r7, #19]
 592:.\Protocolo.c **** 				buffer[12]=(valor[3]|0xE0);
 2268              		.loc 1 592 0
 2269 073e 3B68     		ldr	r3, [r7]
 2270 0740 0333     		adds	r3, r3, #3
 2271 0742 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2272 0744 63F01F03 		orn	r3, r3, #31
 2273 0748 DBB2     		uxtb	r3, r3
 2274 074a 3B75     		strb	r3, [r7, #20]
 593:.\Protocolo.c **** 				buffer[13]=(valor[4]|0xE0);	
 2275              		.loc 1 593 0
 2276 074c 3B68     		ldr	r3, [r7]
 2277 074e 0433     		adds	r3, r3, #4
 2278 0750 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2279 0752 63F01F03 		orn	r3, r3, #31
 2280 0756 DBB2     		uxtb	r3, r3
 2281 0758 7B75     		strb	r3, [r7, #21]
 594:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2282              		.loc 1 594 0
 2283 075a E023     		movs	r3, #224
 2284 075c BB75     		strb	r3, [r7, #22]
 2285              	.L116:
 595:.\Protocolo.c **** 			}			
 596:.\Protocolo.c **** 			buffer[15]=0xFB;
 2286              		.loc 1 596 0
 2287 075e FB23     		movs	r3, #251
 2288 0760 FB75     		strb	r3, [r7, #23]
 597:.\Protocolo.c **** 			buffer[16]=0;
 2289              		.loc 1 597 0
 2290 0762 0023     		movs	r3, #0
 2291 0764 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2292              		.loc 1 598 0
 2293 0766 0023     		movs	r3, #0
 2294 0768 7B77     		strb	r3, [r7, #29]
 2295 076a 11E0     		b	.L117
 2296              	.L129:
 2297              		.align	2
 2298              	.L128:
 2299 076c 00000000 		.word	version
 2300              	.L118:
 599:.\Protocolo.c **** 				buffer[16]+=(buffer[i]&0x0F);	
 2301              		.loc 1 599 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 53


 2302 0770 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 2303 0772 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2304 0774 07F12001 		add	r1, r7, #32
 2305 0778 0B44     		add	r3, r3, r1
 2306 077a 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2307 077e 03F00F03 		and	r3, r3, #15
 2308 0782 DBB2     		uxtb	r3, r3
 2309 0784 1344     		add	r3, r3, r2
 2310 0786 DBB2     		uxtb	r3, r3
 2311 0788 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2312              		.loc 1 598 0 discriminator 2
 2313 078a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2314 078c 0133     		adds	r3, r3, #1
 2315 078e 7B77     		strb	r3, [r7, #29]
 2316              	.L117:
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2317              		.loc 1 598 0 is_stmt 0 discriminator 1
 2318 0790 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2319 0792 0F2B     		cmp	r3, #15
 2320 0794 ECD9     		bls	.L118
 600:.\Protocolo.c **** 			}
 601:.\Protocolo.c **** 			buffer[16]=(((~buffer[16])+1)&0x0F)|0xE0;			
 2321              		.loc 1 601 0 is_stmt 1
 2322 0796 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 2323 0798 5B42     		negs	r3, r3
 2324 079a DBB2     		uxtb	r3, r3
 2325 079c DBB2     		uxtb	r3, r3
 2326 079e 03F00F03 		and	r3, r3, #15
 2327 07a2 DBB2     		uxtb	r3, r3
 2328 07a4 63F01F03 		orn	r3, r3, #31
 2329 07a8 DBB2     		uxtb	r3, r3
 2330 07aa DBB2     		uxtb	r3, r3
 2331 07ac 3B76     		strb	r3, [r7, #24]
 602:.\Protocolo.c **** 			buffer[17]=0xF0;
 2332              		.loc 1 602 0
 2333 07ae F023     		movs	r3, #240
 2334 07b0 7B76     		strb	r3, [r7, #25]
 603:.\Protocolo.c **** 			size=17;
 2335              		.loc 1 603 0
 2336 07b2 1123     		movs	r3, #17
 2337 07b4 FB77     		strb	r3, [r7, #31]
 2338              	.L110:
 604:.\Protocolo.c **** 		}		
 605:.\Protocolo.c **** 	}
 606:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2339              		.loc 1 606 0
 2340 07b6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 607:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2341              		.loc 1 607 0
 2342 07ba FB79     		ldrb	r3, [r7, #7]
 2343 07bc 43F02003 		orr	r3, r3, #32
 2344 07c0 DBB2     		uxtb	r3, r3
 2345 07c2 1846     		mov	r0, r3
 2346 07c4 FFF7FEFF 		bl	Surtidor_PutChar
 608:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2347              		.loc 1 608 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 54


 2348 07c8 2A48     		ldr	r0, .L130
 2349 07ca FFF7FEFF 		bl	isr_1_StartEx
 609:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2350              		.loc 1 609 0
 2351 07ce FFF7FEFF 		bl	Timer_RxSurtidor_Start
 610:.\Protocolo.c ****     rx_timeout=0;
 2352              		.loc 1 610 0
 2353 07d2 294B     		ldr	r3, .L130+4
 2354 07d4 0022     		movs	r2, #0
 2355 07d6 1A70     		strb	r2, [r3]
 611:.\Protocolo.c ****     CyDelay(10);
 2356              		.loc 1 611 0
 2357 07d8 0A20     		movs	r0, #10
 2358 07da FFF7FEFF 		bl	CyDelay
 612:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2359              		.loc 1 612 0
 2360 07de 0BE0     		b	.L119
 2361              	.L120:
 613:.\Protocolo.c **** 		if(rx_timeout==1){
 2362              		.loc 1 613 0
 2363 07e0 254B     		ldr	r3, .L130+4
 2364 07e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2365 07e4 012B     		cmp	r3, #1
 2366 07e6 07D1     		bne	.L119
 614:.\Protocolo.c **** 			isr_1_Stop();
 2367              		.loc 1 614 0
 2368 07e8 FFF7FEFF 		bl	isr_1_Stop
 615:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2369              		.loc 1 615 0
 2370 07ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 616:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2371              		.loc 1 616 0
 2372 07f0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 617:.\Protocolo.c **** 			return 0;
 2373              		.loc 1 617 0
 2374 07f4 0023     		movs	r3, #0
 2375 07f6 39E0     		b	.L125
 2376              	.L119:
 612:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2377              		.loc 1 612 0 discriminator 1
 2378 07f8 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2379 07fc 0346     		mov	r3, r0
 2380 07fe 002B     		cmp	r3, #0
 2381 0800 EED0     		beq	.L120
 618:.\Protocolo.c **** 		}
 619:.\Protocolo.c **** 	}
 620:.\Protocolo.c **** 	isr_1_Stop();
 2382              		.loc 1 620 0
 2383 0802 FFF7FEFF 		bl	isr_1_Stop
 621:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 2384              		.loc 1 621 0
 2385 0806 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 622:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2386              		.loc 1 622 0
 2387 080a FFF7FEFF 		bl	Surtidor_ReadRxData
 2388 080e 0346     		mov	r3, r0
 2389 0810 1A46     		mov	r2, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 55


 2390 0812 FB79     		ldrb	r3, [r7, #7]
 2391 0814 63F02F03 		orn	r3, r3, #47
 2392 0818 DBB2     		uxtb	r3, r3
 2393 081a 9A42     		cmp	r2, r3
 2394 081c 25D1     		bne	.L121
 623:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2395              		.loc 1 623 0
 2396 081e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 624:.\Protocolo.c **** 		CyDelay(10);
 2397              		.loc 1 624 0
 2398 0822 0A20     		movs	r0, #10
 2399 0824 FFF7FEFF 		bl	CyDelay
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2400              		.loc 1 625 0
 2401 0828 0023     		movs	r3, #0
 2402 082a 7B77     		strb	r3, [r7, #29]
 2403 082c 0BE0     		b	.L122
 2404              	.L123:
 626:.\Protocolo.c ****            	Surtidor_PutChar(buffer[i]);
 2405              		.loc 1 626 0 discriminator 2
 2406 082e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2407 0830 07F12002 		add	r2, r7, #32
 2408 0834 1344     		add	r3, r3, r2
 2409 0836 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2410 083a 1846     		mov	r0, r3
 2411 083c FFF7FEFF 		bl	Surtidor_PutChar
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2412              		.loc 1 625 0 discriminator 2
 2413 0840 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2414 0842 0133     		adds	r3, r3, #1
 2415 0844 7B77     		strb	r3, [r7, #29]
 2416              	.L122:
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2417              		.loc 1 625 0 is_stmt 0 discriminator 1
 2418 0846 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2419 0848 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2420 084a 9A42     		cmp	r2, r3
 2421 084c EFD9     		bls	.L123
 627:.\Protocolo.c ****         }
 628:.\Protocolo.c **** 		CyDelay(50);		
 2422              		.loc 1 628 0 is_stmt 1
 2423 084e 3220     		movs	r0, #50
 2424 0850 FFF7FEFF 		bl	CyDelay
 629:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2425              		.loc 1 629 0
 2426 0854 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2427 0856 1846     		mov	r0, r3
 2428 0858 FFF7FEFF 		bl	get_estado
 2429 085c 0346     		mov	r3, r0
 2430 085e 002B     		cmp	r3, #0
 2431 0860 01D1     		bne	.L124
 630:.\Protocolo.c **** 			return 0;
 2432              		.loc 1 630 0
 2433 0862 0023     		movs	r3, #0
 2434 0864 02E0     		b	.L125
 2435              	.L124:
 631:.\Protocolo.c **** 		}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 56


 632:.\Protocolo.c **** 		else{
 633:.\Protocolo.c **** 			return 1;
 2436              		.loc 1 633 0
 2437 0866 0123     		movs	r3, #1
 2438 0868 00E0     		b	.L125
 2439              	.L121:
 634:.\Protocolo.c **** 		}
 635:.\Protocolo.c **** 	}
 636:.\Protocolo.c **** 	else{
 637:.\Protocolo.c **** 		return 0;
 2440              		.loc 1 637 0
 2441 086a 0023     		movs	r3, #0
 2442              	.L125:
 638:.\Protocolo.c **** 	}
 639:.\Protocolo.c **** }
 2443              		.loc 1 639 0
 2444 086c 1846     		mov	r0, r3
 2445 086e 2037     		adds	r7, r7, #32
 2446 0870 BD46     		mov	sp, r7
 2447              		@ sp needed
 2448 0872 80BD     		pop	{r7, pc}
 2449              	.L131:
 2450              		.align	2
 2451              	.L130:
 2452 0874 00000000 		.word	Rx_Surtidor
 2453 0878 00000000 		.word	rx_timeout
 2454              		.cfi_endproc
 2455              	.LFE70:
 2456              		.size	programar, .-programar
 2457              		.section	.text.cambiar_precio,"ax",%progbits
 2458              		.align	2
 2459              		.global	cambiar_precio
 2460              		.thumb
 2461              		.thumb_func
 2462              		.type	cambiar_precio, %function
 2463              	cambiar_precio:
 2464              	.LFB71:
 640:.\Protocolo.c **** 
 641:.\Protocolo.c **** /*
 642:.\Protocolo.c **** ***************************************************************************************************
 643:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 644:.\Protocolo.c **** *
 645:.\Protocolo.c **** * Description : 
 646:.\Protocolo.c **** *               
 647:.\Protocolo.c **** *
 648:.\Protocolo.c **** * Argument(s) : none
 649:.\Protocolo.c **** *
 650:.\Protocolo.c **** * Return(s)   : none
 651:.\Protocolo.c **** *
 652:.\Protocolo.c **** * Caller(s)   : 
 653:.\Protocolo.c **** *
 654:.\Protocolo.c **** * Note(s)     : none.
 655:.\Protocolo.c **** ***************************************************************************************************
 656:.\Protocolo.c **** */
 657:.\Protocolo.c **** uint8 cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man){
 2465              		.loc 1 657 0
 2466              		.cfi_startproc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 57


 2467              		@ args = 0, pretend = 0, frame = 32
 2468              		@ frame_needed = 1, uses_anonymous_args = 0
 2469 0000 80B5     		push	{r7, lr}
 2470              		.cfi_def_cfa_offset 8
 2471              		.cfi_offset 7, -8
 2472              		.cfi_offset 14, -4
 2473 0002 88B0     		sub	sp, sp, #32
 2474              		.cfi_def_cfa_offset 40
 2475 0004 00AF     		add	r7, sp, #0
 2476              		.cfi_def_cfa_register 7
 2477 0006 3960     		str	r1, [r7]
 2478 0008 1346     		mov	r3, r2
 2479 000a 0246     		mov	r2, r0
 2480 000c FA71     		strb	r2, [r7, #7]
 2481 000e BB71     		strb	r3, [r7, #6]
 658:.\Protocolo.c **** 	uint8 buffer[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,x;
 2482              		.loc 1 658 0
 2483 0010 0023     		movs	r3, #0
 2484 0012 3B73     		strb	r3, [r7, #12]
 2485 0014 0023     		movs	r3, #0
 2486 0016 7B73     		strb	r3, [r7, #13]
 2487 0018 0023     		movs	r3, #0
 2488 001a BB73     		strb	r3, [r7, #14]
 2489 001c 0023     		movs	r3, #0
 2490 001e FB73     		strb	r3, [r7, #15]
 2491 0020 0023     		movs	r3, #0
 2492 0022 3B74     		strb	r3, [r7, #16]
 2493 0024 0023     		movs	r3, #0
 2494 0026 7B74     		strb	r3, [r7, #17]
 2495 0028 0023     		movs	r3, #0
 2496 002a BB74     		strb	r3, [r7, #18]
 2497 002c 0023     		movs	r3, #0
 2498 002e FB74     		strb	r3, [r7, #19]
 2499 0030 0023     		movs	r3, #0
 2500 0032 3B75     		strb	r3, [r7, #20]
 2501 0034 0023     		movs	r3, #0
 2502 0036 7B75     		strb	r3, [r7, #21]
 2503 0038 0023     		movs	r3, #0
 2504 003a BB75     		strb	r3, [r7, #22]
 2505 003c 0023     		movs	r3, #0
 2506 003e FB75     		strb	r3, [r7, #23]
 2507 0040 0023     		movs	r3, #0
 2508 0042 3B76     		strb	r3, [r7, #24]
 2509 0044 0023     		movs	r3, #0
 2510 0046 7B76     		strb	r3, [r7, #25]
 2511 0048 0023     		movs	r3, #0
 2512 004a BB76     		strb	r3, [r7, #26]
 659:.\Protocolo.c **** 	if(version[1]!=7){
 2513              		.loc 1 659 0
 2514 004c 884B     		ldr	r3, .L151
 2515 004e 5B78     		ldrb	r3, [r3, #1]
 2516 0050 DBB2     		uxtb	r3, r3
 2517 0052 072B     		cmp	r3, #7
 2518 0054 56D0     		beq	.L133
 660:.\Protocolo.c **** 		buffer[0]=0xFF;
 2519              		.loc 1 660 0
 2520 0056 FF23     		movs	r3, #255
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 58


 2521 0058 3B73     		strb	r3, [r7, #12]
 661:.\Protocolo.c **** 		buffer[1]=0xE5;
 2522              		.loc 1 661 0
 2523 005a E523     		movs	r3, #229
 2524 005c 7B73     		strb	r3, [r7, #13]
 662:.\Protocolo.c **** 		buffer[2]=0xF4;
 2525              		.loc 1 662 0
 2526 005e F423     		movs	r3, #244
 2527 0060 BB73     		strb	r3, [r7, #14]
 663:.\Protocolo.c **** 		buffer[3]=0xF6;
 2528              		.loc 1 663 0
 2529 0062 F623     		movs	r3, #246
 2530 0064 FB73     		strb	r3, [r7, #15]
 664:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2531              		.loc 1 664 0
 2532 0066 BB79     		ldrb	r3, [r7, #6]
 2533 0068 013B     		subs	r3, r3, #1
 2534 006a DBB2     		uxtb	r3, r3
 2535 006c DBB2     		uxtb	r3, r3
 2536 006e 63F01F03 		orn	r3, r3, #31
 2537 0072 DBB2     		uxtb	r3, r3
 2538 0074 DBB2     		uxtb	r3, r3
 2539 0076 3B74     		strb	r3, [r7, #16]
 665:.\Protocolo.c **** 		buffer[5]=0xF7;	
 2540              		.loc 1 665 0
 2541 0078 F723     		movs	r3, #247
 2542 007a 7B74     		strb	r3, [r7, #17]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2543              		.loc 1 666 0
 2544 007c 0623     		movs	r3, #6
 2545 007e BB77     		strb	r3, [r7, #30]
 2546 0080 15E0     		b	.L134
 2547              	.L135:
 667:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 2548              		.loc 1 667 0 discriminator 2
 2549 0082 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2550 0084 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2551 0086 063A     		subs	r2, r2, #6
 2552 0088 3968     		ldr	r1, [r7]
 2553 008a 0A44     		add	r2, r2, r1
 2554 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2555 008e D2B2     		uxtb	r2, r2
 2556 0090 02F00F02 		and	r2, r2, #15
 2557 0094 D2B2     		uxtb	r2, r2
 2558 0096 62F01F02 		orn	r2, r2, #31
 2559 009a D2B2     		uxtb	r2, r2
 2560 009c D2B2     		uxtb	r2, r2
 2561 009e 07F12001 		add	r1, r7, #32
 2562 00a2 0B44     		add	r3, r3, r1
 2563 00a4 03F8142C 		strb	r2, [r3, #-20]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2564              		.loc 1 666 0 discriminator 2
 2565 00a8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2566 00aa 0133     		adds	r3, r3, #1
 2567 00ac BB77     		strb	r3, [r7, #30]
 2568              	.L134:
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 59


 2569              		.loc 1 666 0 is_stmt 0 discriminator 1
 2570 00ae BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2571 00b0 092B     		cmp	r3, #9
 2572 00b2 E6D9     		bls	.L135
 668:.\Protocolo.c **** 		}
 669:.\Protocolo.c **** 		buffer[10]=0xFB;
 2573              		.loc 1 669 0 is_stmt 1
 2574 00b4 FB23     		movs	r3, #251
 2575 00b6 BB75     		strb	r3, [r7, #22]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2576              		.loc 1 670 0
 2577 00b8 0023     		movs	r3, #0
 2578 00ba BB77     		strb	r3, [r7, #30]
 2579 00bc 0FE0     		b	.L136
 2580              	.L137:
 671:.\Protocolo.c **** 			buffer[11]+=(buffer[x]&0x0F);	
 2581              		.loc 1 671 0 discriminator 2
 2582 00be FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2583 00c0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2584 00c2 07F12001 		add	r1, r7, #32
 2585 00c6 0B44     		add	r3, r3, r1
 2586 00c8 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2587 00cc 03F00F03 		and	r3, r3, #15
 2588 00d0 DBB2     		uxtb	r3, r3
 2589 00d2 1344     		add	r3, r3, r2
 2590 00d4 DBB2     		uxtb	r3, r3
 2591 00d6 FB75     		strb	r3, [r7, #23]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2592              		.loc 1 670 0 discriminator 2
 2593 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2594 00da 0133     		adds	r3, r3, #1
 2595 00dc BB77     		strb	r3, [r7, #30]
 2596              	.L136:
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2597              		.loc 1 670 0 is_stmt 0 discriminator 1
 2598 00de BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2599 00e0 0A2B     		cmp	r3, #10
 2600 00e2 ECD9     		bls	.L137
 672:.\Protocolo.c **** 		}
 673:.\Protocolo.c **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 2601              		.loc 1 673 0 is_stmt 1
 2602 00e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2603 00e6 5B42     		negs	r3, r3
 2604 00e8 DBB2     		uxtb	r3, r3
 2605 00ea DBB2     		uxtb	r3, r3
 2606 00ec 03F00F03 		and	r3, r3, #15
 2607 00f0 DBB2     		uxtb	r3, r3
 2608 00f2 63F01F03 		orn	r3, r3, #31
 2609 00f6 DBB2     		uxtb	r3, r3
 2610 00f8 DBB2     		uxtb	r3, r3
 2611 00fa FB75     		strb	r3, [r7, #23]
 674:.\Protocolo.c **** 		buffer[12]=0xF0;
 2612              		.loc 1 674 0
 2613 00fc F023     		movs	r3, #240
 2614 00fe 3B76     		strb	r3, [r7, #24]
 675:.\Protocolo.c **** 		size=12;
 2615              		.loc 1 675 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 60


 2616 0100 0C23     		movs	r3, #12
 2617 0102 FB77     		strb	r3, [r7, #31]
 2618              	.L133:
 676:.\Protocolo.c **** 	}
 677:.\Protocolo.c **** 	if(version[1]==7){
 2619              		.loc 1 677 0
 2620 0104 5A4B     		ldr	r3, .L151
 2621 0106 5B78     		ldrb	r3, [r3, #1]
 2622 0108 DBB2     		uxtb	r3, r3
 2623 010a 072B     		cmp	r3, #7
 2624 010c 53D1     		bne	.L138
 678:.\Protocolo.c **** 		buffer[0]=0xFF;
 2625              		.loc 1 678 0
 2626 010e FF23     		movs	r3, #255
 2627 0110 3B73     		strb	r3, [r7, #12]
 679:.\Protocolo.c **** 		buffer[1]=0xE3;
 2628              		.loc 1 679 0
 2629 0112 E323     		movs	r3, #227
 2630 0114 7B73     		strb	r3, [r7, #13]
 680:.\Protocolo.c **** 		buffer[2]=0xF4;
 2631              		.loc 1 680 0
 2632 0116 F423     		movs	r3, #244
 2633 0118 BB73     		strb	r3, [r7, #14]
 681:.\Protocolo.c **** 		buffer[3]=0xF6;
 2634              		.loc 1 681 0
 2635 011a F623     		movs	r3, #246
 2636 011c FB73     		strb	r3, [r7, #15]
 682:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2637              		.loc 1 682 0
 2638 011e BB79     		ldrb	r3, [r7, #6]
 2639 0120 013B     		subs	r3, r3, #1
 2640 0122 DBB2     		uxtb	r3, r3
 2641 0124 DBB2     		uxtb	r3, r3
 2642 0126 63F01F03 		orn	r3, r3, #31
 2643 012a DBB2     		uxtb	r3, r3
 2644 012c DBB2     		uxtb	r3, r3
 2645 012e 3B74     		strb	r3, [r7, #16]
 683:.\Protocolo.c **** 		buffer[5]=0xF7;		
 2646              		.loc 1 683 0
 2647 0130 F723     		movs	r3, #247
 2648 0132 7B74     		strb	r3, [r7, #17]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2649              		.loc 1 684 0
 2650 0134 0623     		movs	r3, #6
 2651 0136 BB77     		strb	r3, [r7, #30]
 2652 0138 10E0     		b	.L139
 2653              	.L140:
 685:.\Protocolo.c **** 			buffer[x]=(0xE0|precio[x-6]);
 2654              		.loc 1 685 0 discriminator 2
 2655 013a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2656 013c BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2657 013e 063A     		subs	r2, r2, #6
 2658 0140 3968     		ldr	r1, [r7]
 2659 0142 0A44     		add	r2, r2, r1
 2660 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2661 0146 62F01F02 		orn	r2, r2, #31
 2662 014a D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 61


 2663 014c 07F12001 		add	r1, r7, #32
 2664 0150 0B44     		add	r3, r3, r1
 2665 0152 03F8142C 		strb	r2, [r3, #-20]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2666              		.loc 1 684 0 discriminator 2
 2667 0156 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2668 0158 0133     		adds	r3, r3, #1
 2669 015a BB77     		strb	r3, [r7, #30]
 2670              	.L139:
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2671              		.loc 1 684 0 is_stmt 0 discriminator 1
 2672 015c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2673 015e 0A2B     		cmp	r3, #10
 2674 0160 EBD9     		bls	.L140
 686:.\Protocolo.c **** 		}
 687:.\Protocolo.c **** 		buffer[11]=0xE0;
 2675              		.loc 1 687 0 is_stmt 1
 2676 0162 E023     		movs	r3, #224
 2677 0164 FB75     		strb	r3, [r7, #23]
 688:.\Protocolo.c **** 		buffer[12]=0xFB;
 2678              		.loc 1 688 0
 2679 0166 FB23     		movs	r3, #251
 2680 0168 3B76     		strb	r3, [r7, #24]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2681              		.loc 1 689 0
 2682 016a 0023     		movs	r3, #0
 2683 016c BB77     		strb	r3, [r7, #30]
 2684 016e 0FE0     		b	.L141
 2685              	.L142:
 690:.\Protocolo.c **** 			buffer[13]+=(buffer[x]&0x0F);	
 2686              		.loc 1 690 0 discriminator 2
 2687 0170 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 2688 0172 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2689 0174 07F12001 		add	r1, r7, #32
 2690 0178 0B44     		add	r3, r3, r1
 2691 017a 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2692 017e 03F00F03 		and	r3, r3, #15
 2693 0182 DBB2     		uxtb	r3, r3
 2694 0184 1344     		add	r3, r3, r2
 2695 0186 DBB2     		uxtb	r3, r3
 2696 0188 7B76     		strb	r3, [r7, #25]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2697              		.loc 1 689 0 discriminator 2
 2698 018a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2699 018c 0133     		adds	r3, r3, #1
 2700 018e BB77     		strb	r3, [r7, #30]
 2701              	.L141:
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2702              		.loc 1 689 0 is_stmt 0 discriminator 1
 2703 0190 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2704 0192 0C2B     		cmp	r3, #12
 2705 0194 ECD9     		bls	.L142
 691:.\Protocolo.c **** 		}
 692:.\Protocolo.c **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 2706              		.loc 1 692 0 is_stmt 1
 2707 0196 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2708 0198 5B42     		negs	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 62


 2709 019a DBB2     		uxtb	r3, r3
 2710 019c DBB2     		uxtb	r3, r3
 2711 019e 03F00F03 		and	r3, r3, #15
 2712 01a2 DBB2     		uxtb	r3, r3
 2713 01a4 63F01F03 		orn	r3, r3, #31
 2714 01a8 DBB2     		uxtb	r3, r3
 2715 01aa DBB2     		uxtb	r3, r3
 2716 01ac 7B76     		strb	r3, [r7, #25]
 693:.\Protocolo.c **** 		buffer[14]=0xF0;
 2717              		.loc 1 693 0
 2718 01ae F023     		movs	r3, #240
 2719 01b0 BB76     		strb	r3, [r7, #26]
 694:.\Protocolo.c **** 		size=14;
 2720              		.loc 1 694 0
 2721 01b2 0E23     		movs	r3, #14
 2722 01b4 FB77     		strb	r3, [r7, #31]
 2723              	.L138:
 695:.\Protocolo.c **** 	}
 696:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2724              		.loc 1 696 0
 2725 01b6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 697:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2726              		.loc 1 697 0
 2727 01ba FB79     		ldrb	r3, [r7, #7]
 2728 01bc 43F02003 		orr	r3, r3, #32
 2729 01c0 DBB2     		uxtb	r3, r3
 2730 01c2 1846     		mov	r0, r3
 2731 01c4 FFF7FEFF 		bl	Surtidor_PutChar
 698:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2732              		.loc 1 698 0
 2733 01c8 2A48     		ldr	r0, .L151+4
 2734 01ca FFF7FEFF 		bl	isr_1_StartEx
 699:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2735              		.loc 1 699 0
 2736 01ce FFF7FEFF 		bl	Timer_RxSurtidor_Start
 700:.\Protocolo.c ****     rx_timeout=0;
 2737              		.loc 1 700 0
 2738 01d2 294B     		ldr	r3, .L151+8
 2739 01d4 0022     		movs	r2, #0
 2740 01d6 1A70     		strb	r2, [r3]
 701:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2741              		.loc 1 701 0
 2742 01d8 0BE0     		b	.L143
 2743              	.L145:
 702:.\Protocolo.c **** 		if(rx_timeout==1){
 2744              		.loc 1 702 0
 2745 01da 274B     		ldr	r3, .L151+8
 2746 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2747 01de 012B     		cmp	r3, #1
 2748 01e0 07D1     		bne	.L143
 703:.\Protocolo.c **** 			isr_1_Stop();
 2749              		.loc 1 703 0
 2750 01e2 FFF7FEFF 		bl	isr_1_Stop
 704:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2751              		.loc 1 704 0
 2752 01e6 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 705:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 63


 2753              		.loc 1 705 0
 2754 01ea FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 706:.\Protocolo.c **** 			return 0;
 2755              		.loc 1 706 0
 2756 01ee 0023     		movs	r3, #0
 2757 01f0 39E0     		b	.L150
 2758              	.L143:
 701:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2759              		.loc 1 701 0 discriminator 1
 2760 01f2 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2761 01f6 0346     		mov	r3, r0
 2762 01f8 002B     		cmp	r3, #0
 2763 01fa EED0     		beq	.L145
 707:.\Protocolo.c **** 		}
 708:.\Protocolo.c **** 	}
 709:.\Protocolo.c **** 	isr_1_Stop();
 2764              		.loc 1 709 0
 2765 01fc FFF7FEFF 		bl	isr_1_Stop
 710:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();
 2766              		.loc 1 710 0
 2767 0200 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 711:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2768              		.loc 1 711 0
 2769 0204 FFF7FEFF 		bl	Surtidor_ReadRxData
 2770 0208 0346     		mov	r3, r0
 2771 020a 1A46     		mov	r2, r3
 2772 020c FB79     		ldrb	r3, [r7, #7]
 2773 020e 63F02F03 		orn	r3, r3, #47
 2774 0212 DBB2     		uxtb	r3, r3
 2775 0214 9A42     		cmp	r2, r3
 2776 0216 25D1     		bne	.L146
 712:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2777              		.loc 1 712 0
 2778 0218 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 713:.\Protocolo.c **** 		CyDelay(10);
 2779              		.loc 1 713 0
 2780 021c 0A20     		movs	r0, #10
 2781 021e FFF7FEFF 		bl	CyDelay
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2782              		.loc 1 714 0
 2783 0222 0023     		movs	r3, #0
 2784 0224 BB77     		strb	r3, [r7, #30]
 2785 0226 0BE0     		b	.L147
 2786              	.L148:
 715:.\Protocolo.c ****            	Surtidor_PutChar(buffer[x]);
 2787              		.loc 1 715 0 discriminator 2
 2788 0228 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2789 022a 07F12002 		add	r2, r7, #32
 2790 022e 1344     		add	r3, r3, r2
 2791 0230 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2792 0234 1846     		mov	r0, r3
 2793 0236 FFF7FEFF 		bl	Surtidor_PutChar
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2794              		.loc 1 714 0 discriminator 2
 2795 023a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2796 023c 0133     		adds	r3, r3, #1
 2797 023e BB77     		strb	r3, [r7, #30]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 64


 2798              	.L147:
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2799              		.loc 1 714 0 is_stmt 0 discriminator 1
 2800 0240 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2801 0242 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2802 0244 9A42     		cmp	r2, r3
 2803 0246 EFD9     		bls	.L148
 716:.\Protocolo.c ****         }
 717:.\Protocolo.c **** 		CyDelay(50);		
 2804              		.loc 1 717 0 is_stmt 1
 2805 0248 3220     		movs	r0, #50
 2806 024a FFF7FEFF 		bl	CyDelay
 718:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2807              		.loc 1 718 0
 2808 024e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2809 0250 1846     		mov	r0, r3
 2810 0252 FFF7FEFF 		bl	get_estado
 2811 0256 0346     		mov	r3, r0
 2812 0258 002B     		cmp	r3, #0
 2813 025a 01D1     		bne	.L149
 719:.\Protocolo.c **** 			return 0;
 2814              		.loc 1 719 0
 2815 025c 0023     		movs	r3, #0
 2816 025e 02E0     		b	.L150
 2817              	.L149:
 720:.\Protocolo.c **** 		}
 721:.\Protocolo.c **** 		else{
 722:.\Protocolo.c **** 			return 1;
 2818              		.loc 1 722 0
 2819 0260 0123     		movs	r3, #1
 2820 0262 00E0     		b	.L150
 2821              	.L146:
 723:.\Protocolo.c **** 		}
 724:.\Protocolo.c **** 	}
 725:.\Protocolo.c **** 	else{
 726:.\Protocolo.c **** 		return 0;
 2822              		.loc 1 726 0
 2823 0264 0023     		movs	r3, #0
 2824              	.L150:
 727:.\Protocolo.c **** 	}
 728:.\Protocolo.c **** }
 2825              		.loc 1 728 0
 2826 0266 1846     		mov	r0, r3
 2827 0268 2037     		adds	r7, r7, #32
 2828 026a BD46     		mov	sp, r7
 2829              		@ sp needed
 2830 026c 80BD     		pop	{r7, pc}
 2831              	.L152:
 2832 026e 00BF     		.align	2
 2833              	.L151:
 2834 0270 00000000 		.word	version
 2835 0274 00000000 		.word	Rx_Surtidor
 2836 0278 00000000 		.word	rx_timeout
 2837              		.cfi_endproc
 2838              	.LFE71:
 2839              		.size	cambiar_precio, .-cambiar_precio
 2840              		.section	.text.totales,"ax",%progbits
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 65


 2841              		.align	2
 2842              		.global	totales
 2843              		.thumb
 2844              		.thumb_func
 2845              		.type	totales, %function
 2846              	totales:
 2847              	.LFB72:
 729:.\Protocolo.c **** 
 730:.\Protocolo.c **** /*
 731:.\Protocolo.c **** ***************************************************************************************************
 732:.\Protocolo.c **** *                                         uint8 totales(uint8 dir)
 733:.\Protocolo.c **** *
 734:.\Protocolo.c **** * Description : 
 735:.\Protocolo.c **** *               
 736:.\Protocolo.c **** *
 737:.\Protocolo.c **** * Argument(s) : none
 738:.\Protocolo.c **** *
 739:.\Protocolo.c **** * Return(s)   : none
 740:.\Protocolo.c **** *
 741:.\Protocolo.c **** * Caller(s)   : 
 742:.\Protocolo.c **** *
 743:.\Protocolo.c **** * Note(s)     : none.
 744:.\Protocolo.c **** ***************************************************************************************************
 745:.\Protocolo.c **** */
 746:.\Protocolo.c **** uint8 totales(uint8 dir, uint8 nmangueras){
 2848              		.loc 1 746 0
 2849              		.cfi_startproc
 2850              		@ args = 0, pretend = 0, frame = 16
 2851              		@ frame_needed = 1, uses_anonymous_args = 0
 2852 0000 80B5     		push	{r7, lr}
 2853              		.cfi_def_cfa_offset 8
 2854              		.cfi_offset 7, -8
 2855              		.cfi_offset 14, -4
 2856 0002 84B0     		sub	sp, sp, #16
 2857              		.cfi_def_cfa_offset 24
 2858 0004 00AF     		add	r7, sp, #0
 2859              		.cfi_def_cfa_register 7
 2860 0006 0246     		mov	r2, r0
 2861 0008 0B46     		mov	r3, r1
 2862 000a FA71     		strb	r2, [r7, #7]
 2863 000c BB71     		strb	r3, [r7, #6]
 747:.\Protocolo.c **** 	uint8 x,y;
 748:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2864              		.loc 1 748 0
 2865 000e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 749:.\Protocolo.c ****     Surtidor_PutChar(0x50|dir);
 2866              		.loc 1 749 0
 2867 0012 FB79     		ldrb	r3, [r7, #7]
 2868 0014 43F05003 		orr	r3, r3, #80
 2869 0018 DBB2     		uxtb	r3, r3
 2870 001a 1846     		mov	r0, r3
 2871 001c FFF7FEFF 		bl	Surtidor_PutChar
 750:.\Protocolo.c ****     rx_timeout=0;
 2872              		.loc 1 750 0
 2873 0020 AF4B     		ldr	r3, .L307
 2874 0022 0022     		movs	r2, #0
 2875 0024 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 66


 751:.\Protocolo.c **** 	CyDelay(100);
 2876              		.loc 1 751 0
 2877 0026 6420     		movs	r0, #100
 2878 0028 FFF7FEFF 		bl	CyDelay
 752:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 2879              		.loc 1 752 0
 2880 002c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2881 0030 0346     		mov	r3, r0
 2882 0032 002B     		cmp	r3, #0
 2883 0034 00F0BE85 		beq	.L154
 753:.\Protocolo.c **** 		if(dir==lado1.dir){
 2884              		.loc 1 753 0
 2885 0038 AA4B     		ldr	r3, .L307+4
 2886 003a 1B78     		ldrb	r3, [r3]
 2887 003c DBB2     		uxtb	r3, r3
 2888 003e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2889 0040 9A42     		cmp	r2, r3
 2890 0042 40F0DF82 		bne	.L155
 754:.\Protocolo.c **** 			if(version[1]!=7){
 2891              		.loc 1 754 0
 2892 0046 A84B     		ldr	r3, .L307+8
 2893 0048 5B78     		ldrb	r3, [r3, #1]
 2894 004a DBB2     		uxtb	r3, r3
 2895 004c 072B     		cmp	r3, #7
 2896 004e 00F07381 		beq	.L156
 755:.\Protocolo.c **** 				CyDelay(900);
 2897              		.loc 1 755 0
 2898 0052 4FF46170 		mov	r0, #900
 2899 0056 FFF7FEFF 		bl	CyDelay
 756:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 2900              		.loc 1 756 0
 2901 005a FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2902 005e 0346     		mov	r3, r0
 2903 0060 FB73     		strb	r3, [r7, #15]
 757:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 2904              		.loc 1 757 0
 2905 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2906 0064 222B     		cmp	r3, #34
 2907 0066 06D0     		beq	.L157
 2908              		.loc 1 757 0 is_stmt 0 discriminator 1
 2909 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2910 006a 402B     		cmp	r3, #64
 2911 006c 03D0     		beq	.L157
 2912 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2913 0070 5E2B     		cmp	r3, #94
 2914 0072 40F05C81 		bne	.L158
 2915              	.L157:
 758:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 2916              		.loc 1 758 0 is_stmt 1
 2917 0076 9D4B     		ldr	r3, .L307+12
 2918 0078 1B78     		ldrb	r3, [r3]
 2919 007a DBB2     		uxtb	r3, r3
 2920 007c FF2B     		cmp	r3, #255
 2921 007e 40F05181 		bne	.L159
 2922              		.loc 1 758 0 is_stmt 0 discriminator 1
 2923 0082 9A4B     		ldr	r3, .L307+12
 2924 0084 5B78     		ldrb	r3, [r3, #1]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 67


 2925 0086 DBB2     		uxtb	r3, r3
 2926 0088 F62B     		cmp	r3, #246
 2927 008a 40F04B81 		bne	.L159
 2928 008e 974B     		ldr	r3, .L307+12
 2929 0090 DB78     		ldrb	r3, [r3, #3]
 2930 0092 DBB2     		uxtb	r3, r3
 2931 0094 F92B     		cmp	r3, #249
 2932 0096 40F04581 		bne	.L159
 759:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 2933              		.loc 1 759 0 is_stmt 1
 2934 009a 0023     		movs	r3, #0
 2935 009c BB73     		strb	r3, [r7, #14]
 2936 009e 16E0     		b	.L160
 2937              	.L163:
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2938              		.loc 1 760 0
 2939 00a0 0023     		movs	r3, #0
 2940 00a2 FB73     		strb	r3, [r7, #15]
 2941 00a4 0DE0     		b	.L161
 2942              	.L162:
 761:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 2943              		.loc 1 761 0 discriminator 2
 2944 00a6 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2945 00a8 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 2946 00aa 8E49     		ldr	r1, .L307+4
 2947 00ac 1346     		mov	r3, r2
 2948 00ae 5B00     		lsls	r3, r3, #1
 2949 00b0 1344     		add	r3, r3, r2
 2950 00b2 DB00     		lsls	r3, r3, #3
 2951 00b4 0344     		add	r3, r3, r0
 2952 00b6 0B44     		add	r3, r3, r1
 2953 00b8 0022     		movs	r2, #0
 2954 00ba 9A70     		strb	r2, [r3, #2]
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2955              		.loc 1 760 0 discriminator 2
 2956 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2957 00be 0133     		adds	r3, r3, #1
 2958 00c0 FB73     		strb	r3, [r7, #15]
 2959              	.L161:
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2960              		.loc 1 760 0 is_stmt 0 discriminator 1
 2961 00c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2962 00c4 172B     		cmp	r3, #23
 2963 00c6 EED9     		bls	.L162
 759:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 2964              		.loc 1 759 0 is_stmt 1
 2965 00c8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2966 00ca 0133     		adds	r3, r3, #1
 2967 00cc BB73     		strb	r3, [r7, #14]
 2968              	.L160:
 759:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 2969              		.loc 1 759 0 is_stmt 0 discriminator 1
 2970 00ce BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2971 00d0 022B     		cmp	r3, #2
 2972 00d2 E5D9     		bls	.L163
 762:.\Protocolo.c ****                     		}
 763:.\Protocolo.c ****                     	}                        
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 68


 764:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 2973              		.loc 1 764 0 is_stmt 1
 2974 00d4 0023     		movs	r3, #0
 2975 00d6 FB73     		strb	r3, [r7, #15]
 2976 00d8 0BE0     		b	.L164
 2977              	.L165:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 2978              		.loc 1 765 0 discriminator 2
 2979 00da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2980 00dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2981 00de 0432     		adds	r2, r2, #4
 2982 00e0 8249     		ldr	r1, .L307+12
 2983 00e2 8A5C     		ldrb	r2, [r1, r2]
 2984 00e4 D2B2     		uxtb	r2, r2
 2985 00e6 7F49     		ldr	r1, .L307+4
 2986 00e8 0B44     		add	r3, r3, r1
 2987 00ea 9A70     		strb	r2, [r3, #2]
 764:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 2988              		.loc 1 764 0 discriminator 2
 2989 00ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2990 00ee 0133     		adds	r3, r3, #1
 2991 00f0 FB73     		strb	r3, [r7, #15]
 2992              	.L164:
 764:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 2993              		.loc 1 764 0 is_stmt 0 discriminator 1
 2994 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2995 00f4 072B     		cmp	r3, #7
 2996 00f6 F0D9     		bls	.L165
 766:.\Protocolo.c **** 						}
 767:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 2997              		.loc 1 767 0 is_stmt 1
 2998 00f8 0023     		movs	r3, #0
 2999 00fa FB73     		strb	r3, [r7, #15]
 3000 00fc 16E0     		b	.L166
 3001              	.L169:
 768:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 3002              		.loc 1 768 0
 3003 00fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3004 0100 0D33     		adds	r3, r3, #13
 3005 0102 7A4A     		ldr	r2, .L307+12
 3006 0104 D35C     		ldrb	r3, [r2, r3]
 3007 0106 DBB2     		uxtb	r3, r3
 3008 0108 002B     		cmp	r3, #0
 3009 010a 02D1     		bne	.L167
 769:.\Protocolo.c ****                                 return 0;
 3010              		.loc 1 769 0
 3011 010c 0023     		movs	r3, #0
 3012 010e 00F052BD 		b	.L168
 3013              	.L167:
 770:.\Protocolo.c ****                             }
 771:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3014              		.loc 1 771 0
 3015 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3016 0114 0C33     		adds	r3, r3, #12
 3017 0116 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3018 0118 0D32     		adds	r2, r2, #13
 3019 011a 7449     		ldr	r1, .L307+12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 69


 3020 011c 8A5C     		ldrb	r2, [r1, r2]
 3021 011e D2B2     		uxtb	r2, r2
 3022 0120 7049     		ldr	r1, .L307+4
 3023 0122 0B44     		add	r3, r3, r1
 3024 0124 9A70     		strb	r2, [r3, #2]
 767:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3025              		.loc 1 767 0
 3026 0126 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3027 0128 0133     		adds	r3, r3, #1
 3028 012a FB73     		strb	r3, [r7, #15]
 3029              	.L166:
 767:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3030              		.loc 1 767 0 is_stmt 0 discriminator 1
 3031 012c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3032 012e 072B     		cmp	r3, #7
 3033 0130 E5D9     		bls	.L169
 772:.\Protocolo.c **** 						}
 773:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3034              		.loc 1 773 0 is_stmt 1
 3035 0132 0023     		movs	r3, #0
 3036 0134 FB73     		strb	r3, [r7, #15]
 3037 0136 0CE0     		b	.L170
 3038              	.L171:
 774:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];
 3039              		.loc 1 774 0 discriminator 2
 3040 0138 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3041 013a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3042 013c 1632     		adds	r2, r2, #22
 3043 013e 6B49     		ldr	r1, .L307+12
 3044 0140 8A5C     		ldrb	r2, [r1, r2]
 3045 0142 D2B2     		uxtb	r2, r2
 3046 0144 6749     		ldr	r1, .L307+4
 3047 0146 0B44     		add	r3, r3, r1
 3048 0148 83F84A20 		strb	r2, [r3, #74]
 773:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3049              		.loc 1 773 0 discriminator 2
 3050 014c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3051 014e 0133     		adds	r3, r3, #1
 3052 0150 FB73     		strb	r3, [r7, #15]
 3053              	.L170:
 773:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3054              		.loc 1 773 0 is_stmt 0 discriminator 1
 3055 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3056 0154 032B     		cmp	r3, #3
 3057 0156 EFD9     		bls	.L171
 775:.\Protocolo.c **** 						}				
 776:.\Protocolo.c **** 						if(nmangueras==2){
 3058              		.loc 1 776 0 is_stmt 1
 3059 0158 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3060 015a 022B     		cmp	r3, #2
 3061 015c 46D1     		bne	.L172
 777:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3062              		.loc 1 777 0
 3063 015e 0023     		movs	r3, #0
 3064 0160 FB73     		strb	r3, [r7, #15]
 3065 0162 0BE0     		b	.L173
 3066              	.L174:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 70


 778:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3067              		.loc 1 778 0 discriminator 2
 3068 0164 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3069 0166 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3070 0168 2232     		adds	r2, r2, #34
 3071 016a 6049     		ldr	r1, .L307+12
 3072 016c 8A5C     		ldrb	r2, [r1, r2]
 3073 016e D2B2     		uxtb	r2, r2
 3074 0170 5C49     		ldr	r1, .L307+4
 3075 0172 0B44     		add	r3, r3, r1
 3076 0174 9A76     		strb	r2, [r3, #26]
 777:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3077              		.loc 1 777 0 discriminator 2
 3078 0176 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3079 0178 0133     		adds	r3, r3, #1
 3080 017a FB73     		strb	r3, [r7, #15]
 3081              	.L173:
 777:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3082              		.loc 1 777 0 is_stmt 0 discriminator 1
 3083 017c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3084 017e 072B     		cmp	r3, #7
 3085 0180 F0D9     		bls	.L174
 779:.\Protocolo.c **** 							}
 780:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3086              		.loc 1 780 0 is_stmt 1
 3087 0182 0023     		movs	r3, #0
 3088 0184 FB73     		strb	r3, [r7, #15]
 3089 0186 16E0     		b	.L175
 3090              	.L177:
 781:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 3091              		.loc 1 781 0
 3092 0188 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3093 018a 2B33     		adds	r3, r3, #43
 3094 018c 574A     		ldr	r2, .L307+12
 3095 018e D35C     		ldrb	r3, [r2, r3]
 3096 0190 DBB2     		uxtb	r3, r3
 3097 0192 002B     		cmp	r3, #0
 3098 0194 02D1     		bne	.L176
 782:.\Protocolo.c ****                                     return 0;
 3099              		.loc 1 782 0
 3100 0196 0023     		movs	r3, #0
 3101 0198 00F00DBD 		b	.L168
 3102              	.L176:
 783:.\Protocolo.c ****                                 }                                
 784:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3103              		.loc 1 784 0
 3104 019c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3105 019e 0C33     		adds	r3, r3, #12
 3106 01a0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3107 01a2 2B32     		adds	r2, r2, #43
 3108 01a4 5149     		ldr	r1, .L307+12
 3109 01a6 8A5C     		ldrb	r2, [r1, r2]
 3110 01a8 D2B2     		uxtb	r2, r2
 3111 01aa 4E49     		ldr	r1, .L307+4
 3112 01ac 0B44     		add	r3, r3, r1
 3113 01ae 9A76     		strb	r2, [r3, #26]
 780:.\Protocolo.c **** 							for(x=0;x<=7;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 71


 3114              		.loc 1 780 0
 3115 01b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3116 01b2 0133     		adds	r3, r3, #1
 3117 01b4 FB73     		strb	r3, [r7, #15]
 3118              	.L175:
 780:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3119              		.loc 1 780 0 is_stmt 0 discriminator 1
 3120 01b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3121 01b8 072B     		cmp	r3, #7
 3122 01ba E5D9     		bls	.L177
 785:.\Protocolo.c **** 							}
 786:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3123              		.loc 1 786 0 is_stmt 1
 3124 01bc 0023     		movs	r3, #0
 3125 01be FB73     		strb	r3, [r7, #15]
 3126 01c0 0CE0     		b	.L178
 3127              	.L179:
 787:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3128              		.loc 1 787 0 discriminator 2
 3129 01c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3130 01c4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3131 01c6 3432     		adds	r2, r2, #52
 3132 01c8 4849     		ldr	r1, .L307+12
 3133 01ca 8A5C     		ldrb	r2, [r1, r2]
 3134 01cc D2B2     		uxtb	r2, r2
 3135 01ce 4549     		ldr	r1, .L307+4
 3136 01d0 0B44     		add	r3, r3, r1
 3137 01d2 83F84F20 		strb	r2, [r3, #79]
 786:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3138              		.loc 1 786 0 discriminator 2
 3139 01d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3140 01d8 0133     		adds	r3, r3, #1
 3141 01da FB73     		strb	r3, [r7, #15]
 3142              	.L178:
 786:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3143              		.loc 1 786 0 is_stmt 0 discriminator 1
 3144 01dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3145 01de 032B     		cmp	r3, #3
 3146 01e0 EFD9     		bls	.L179
 788:.\Protocolo.c **** 							}	
 789:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3147              		.loc 1 789 0 is_stmt 1
 3148 01e2 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 790:.\Protocolo.c ****     						return 2;                            
 3149              		.loc 1 790 0
 3150 01e6 0223     		movs	r3, #2
 3151 01e8 00F0E5BC 		b	.L168
 3152              	.L172:
 791:.\Protocolo.c **** 						}
 792:.\Protocolo.c **** 						if(nmangueras==3){
 3153              		.loc 1 792 0
 3154 01ec BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3155 01ee 032B     		cmp	r3, #3
 3156 01f0 40F09380 		bne	.L180
 793:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3157              		.loc 1 793 0
 3158 01f4 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 72


 3159 01f6 FB73     		strb	r3, [r7, #15]
 3160 01f8 0BE0     		b	.L181
 3161              	.L182:
 794:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3162              		.loc 1 794 0 discriminator 2
 3163 01fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3164 01fc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3165 01fe 2232     		adds	r2, r2, #34
 3166 0200 3A49     		ldr	r1, .L307+12
 3167 0202 8A5C     		ldrb	r2, [r1, r2]
 3168 0204 D2B2     		uxtb	r2, r2
 3169 0206 3749     		ldr	r1, .L307+4
 3170 0208 0B44     		add	r3, r3, r1
 3171 020a 9A76     		strb	r2, [r3, #26]
 793:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3172              		.loc 1 793 0 discriminator 2
 3173 020c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3174 020e 0133     		adds	r3, r3, #1
 3175 0210 FB73     		strb	r3, [r7, #15]
 3176              	.L181:
 793:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3177              		.loc 1 793 0 is_stmt 0 discriminator 1
 3178 0212 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3179 0214 072B     		cmp	r3, #7
 3180 0216 F0D9     		bls	.L182
 795:.\Protocolo.c **** 							}
 796:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3181              		.loc 1 796 0 is_stmt 1
 3182 0218 0023     		movs	r3, #0
 3183 021a FB73     		strb	r3, [r7, #15]
 3184 021c 16E0     		b	.L183
 3185              	.L185:
 797:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 3186              		.loc 1 797 0
 3187 021e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3188 0220 2B33     		adds	r3, r3, #43
 3189 0222 324A     		ldr	r2, .L307+12
 3190 0224 D35C     		ldrb	r3, [r2, r3]
 3191 0226 DBB2     		uxtb	r3, r3
 3192 0228 002B     		cmp	r3, #0
 3193 022a 02D1     		bne	.L184
 798:.\Protocolo.c ****                                     return 0;
 3194              		.loc 1 798 0
 3195 022c 0023     		movs	r3, #0
 3196 022e 00F0C2BC 		b	.L168
 3197              	.L184:
 799:.\Protocolo.c ****                                 }                                 
 800:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3198              		.loc 1 800 0
 3199 0232 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3200 0234 0C33     		adds	r3, r3, #12
 3201 0236 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3202 0238 2B32     		adds	r2, r2, #43
 3203 023a 2C49     		ldr	r1, .L307+12
 3204 023c 8A5C     		ldrb	r2, [r1, r2]
 3205 023e D2B2     		uxtb	r2, r2
 3206 0240 2849     		ldr	r1, .L307+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 73


 3207 0242 0B44     		add	r3, r3, r1
 3208 0244 9A76     		strb	r2, [r3, #26]
 796:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3209              		.loc 1 796 0
 3210 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3211 0248 0133     		adds	r3, r3, #1
 3212 024a FB73     		strb	r3, [r7, #15]
 3213              	.L183:
 796:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3214              		.loc 1 796 0 is_stmt 0 discriminator 1
 3215 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3216 024e 072B     		cmp	r3, #7
 3217 0250 E5D9     		bls	.L185
 801:.\Protocolo.c **** 							}
 802:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3218              		.loc 1 802 0 is_stmt 1
 3219 0252 0023     		movs	r3, #0
 3220 0254 FB73     		strb	r3, [r7, #15]
 3221 0256 0CE0     		b	.L186
 3222              	.L187:
 803:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3223              		.loc 1 803 0 discriminator 2
 3224 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3225 025a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3226 025c 3432     		adds	r2, r2, #52
 3227 025e 2349     		ldr	r1, .L307+12
 3228 0260 8A5C     		ldrb	r2, [r1, r2]
 3229 0262 D2B2     		uxtb	r2, r2
 3230 0264 1F49     		ldr	r1, .L307+4
 3231 0266 0B44     		add	r3, r3, r1
 3232 0268 83F84F20 		strb	r2, [r3, #79]
 802:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3233              		.loc 1 802 0 discriminator 2
 3234 026c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3235 026e 0133     		adds	r3, r3, #1
 3236 0270 FB73     		strb	r3, [r7, #15]
 3237              	.L186:
 802:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3238              		.loc 1 802 0 is_stmt 0 discriminator 1
 3239 0272 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3240 0274 032B     		cmp	r3, #3
 3241 0276 EFD9     		bls	.L187
 804:.\Protocolo.c **** 							}						
 805:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3242              		.loc 1 805 0 is_stmt 1
 3243 0278 0023     		movs	r3, #0
 3244 027a FB73     		strb	r3, [r7, #15]
 3245 027c 0CE0     		b	.L188
 3246              	.L189:
 806:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3247              		.loc 1 806 0 discriminator 2
 3248 027e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3249 0280 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3250 0282 4032     		adds	r2, r2, #64
 3251 0284 1949     		ldr	r1, .L307+12
 3252 0286 8A5C     		ldrb	r2, [r1, r2]
 3253 0288 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 74


 3254 028a 1649     		ldr	r1, .L307+4
 3255 028c 0B44     		add	r3, r3, r1
 3256 028e 83F83220 		strb	r2, [r3, #50]
 805:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3257              		.loc 1 805 0 discriminator 2
 3258 0292 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3259 0294 0133     		adds	r3, r3, #1
 3260 0296 FB73     		strb	r3, [r7, #15]
 3261              	.L188:
 805:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3262              		.loc 1 805 0 is_stmt 0 discriminator 1
 3263 0298 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3264 029a 072B     		cmp	r3, #7
 3265 029c EFD9     		bls	.L189
 807:.\Protocolo.c **** 							}
 808:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3266              		.loc 1 808 0 is_stmt 1
 3267 029e 0023     		movs	r3, #0
 3268 02a0 FB73     		strb	r3, [r7, #15]
 3269 02a2 17E0     		b	.L190
 3270              	.L192:
 809:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 3271              		.loc 1 809 0
 3272 02a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3273 02a6 4933     		adds	r3, r3, #73
 3274 02a8 104A     		ldr	r2, .L307+12
 3275 02aa D35C     		ldrb	r3, [r2, r3]
 3276 02ac DBB2     		uxtb	r3, r3
 3277 02ae 002B     		cmp	r3, #0
 3278 02b0 02D1     		bne	.L191
 810:.\Protocolo.c ****                                     return 0;
 3279              		.loc 1 810 0
 3280 02b2 0023     		movs	r3, #0
 3281 02b4 00F07FBC 		b	.L168
 3282              	.L191:
 811:.\Protocolo.c ****                                 }                                 
 812:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3283              		.loc 1 812 0
 3284 02b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3285 02ba 0C33     		adds	r3, r3, #12
 3286 02bc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3287 02be 4932     		adds	r2, r2, #73
 3288 02c0 0A49     		ldr	r1, .L307+12
 3289 02c2 8A5C     		ldrb	r2, [r1, r2]
 3290 02c4 D2B2     		uxtb	r2, r2
 3291 02c6 0749     		ldr	r1, .L307+4
 3292 02c8 0B44     		add	r3, r3, r1
 3293 02ca 83F83220 		strb	r2, [r3, #50]
 808:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3294              		.loc 1 808 0
 3295 02ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3296 02d0 0133     		adds	r3, r3, #1
 3297 02d2 FB73     		strb	r3, [r7, #15]
 3298              	.L190:
 808:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3299              		.loc 1 808 0 is_stmt 0 discriminator 1
 3300 02d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 75


 3301 02d6 072B     		cmp	r3, #7
 3302 02d8 E4D9     		bls	.L192
 813:.\Protocolo.c **** 							}
 814:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3303              		.loc 1 814 0 is_stmt 1
 3304 02da 0023     		movs	r3, #0
 3305 02dc FB73     		strb	r3, [r7, #15]
 3306 02de 14E0     		b	.L193
 3307              	.L308:
 3308              		.align	2
 3309              	.L307:
 3310 02e0 00000000 		.word	rx_timeout
 3311 02e4 00000000 		.word	lado1
 3312 02e8 00000000 		.word	version
 3313 02ec 00000000 		.word	Surtidor_rxBuffer
 3314              	.L194:
 815:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3315              		.loc 1 815 0 discriminator 2
 3316 02f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3317 02f2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3318 02f4 5232     		adds	r2, r2, #82
 3319 02f6 A749     		ldr	r1, .L309
 3320 02f8 8A5C     		ldrb	r2, [r1, r2]
 3321 02fa D2B2     		uxtb	r2, r2
 3322 02fc A649     		ldr	r1, .L309+4
 3323 02fe 0B44     		add	r3, r3, r1
 3324 0300 83F85420 		strb	r2, [r3, #84]
 814:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3325              		.loc 1 814 0 discriminator 2
 3326 0304 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3327 0306 0133     		adds	r3, r3, #1
 3328 0308 FB73     		strb	r3, [r7, #15]
 3329              	.L193:
 814:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3330              		.loc 1 814 0 is_stmt 0 discriminator 1
 3331 030a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3332 030c 032B     		cmp	r3, #3
 3333 030e EFD9     		bls	.L194
 816:.\Protocolo.c **** 							}
 817:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3334              		.loc 1 817 0 is_stmt 1
 3335 0310 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 818:.\Protocolo.c ****     						return 3;                            
 3336              		.loc 1 818 0
 3337 0314 0323     		movs	r3, #3
 3338 0316 00F04EBC 		b	.L168
 3339              	.L180:
 819:.\Protocolo.c **** 						}
 820:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3340              		.loc 1 820 0
 3341 031a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 821:.\Protocolo.c **** 						return 1;
 3342              		.loc 1 821 0
 3343 031e 0123     		movs	r3, #1
 3344 0320 00F049BC 		b	.L168
 3345              	.L159:
 822:.\Protocolo.c **** 					}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 76


 823:.\Protocolo.c **** 					else{
 824:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3346              		.loc 1 824 0
 3347 0324 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 825:.\Protocolo.c **** 						return 0;
 3348              		.loc 1 825 0
 3349 0328 0023     		movs	r3, #0
 3350 032a 00F044BC 		b	.L168
 3351              	.L158:
 826:.\Protocolo.c **** 					}					
 827:.\Protocolo.c **** 				}
 828:.\Protocolo.c **** 				else{
 829:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 3352              		.loc 1 829 0
 3353 032e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 830:.\Protocolo.c **** 					return 0;		
 3354              		.loc 1 830 0
 3355 0332 0023     		movs	r3, #0
 3356 0334 00F03FBC 		b	.L168
 3357              	.L156:
 831:.\Protocolo.c **** 				}
 832:.\Protocolo.c **** 			}
 833:.\Protocolo.c **** 			else{
 834:.\Protocolo.c **** 				CyDelay(900);
 3358              		.loc 1 834 0
 3359 0338 4FF46170 		mov	r0, #900
 3360 033c FFF7FEFF 		bl	CyDelay
 835:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3361              		.loc 1 835 0
 3362 0340 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3363 0344 0346     		mov	r3, r0
 3364 0346 FB73     		strb	r3, [r7, #15]
 836:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){
 3365              		.loc 1 836 0
 3366 0348 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3367 034a 2E2B     		cmp	r3, #46
 3368 034c 06D0     		beq	.L195
 3369              		.loc 1 836 0 is_stmt 0 discriminator 1
 3370 034e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3371 0350 582B     		cmp	r3, #88
 3372 0352 03D0     		beq	.L195
 3373 0354 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3374 0356 822B     		cmp	r3, #130
 3375 0358 40F05081 		bne	.L196
 3376              	.L195:
 837:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3377              		.loc 1 837 0 is_stmt 1
 3378 035c 8D4B     		ldr	r3, .L309
 3379 035e 1B78     		ldrb	r3, [r3]
 3380 0360 DBB2     		uxtb	r3, r3
 3381 0362 FF2B     		cmp	r3, #255
 3382 0364 40F04681 		bne	.L197
 3383              		.loc 1 837 0 is_stmt 0 discriminator 1
 3384 0368 8A4B     		ldr	r3, .L309
 3385 036a 5B78     		ldrb	r3, [r3, #1]
 3386 036c DBB2     		uxtb	r3, r3
 3387 036e F62B     		cmp	r3, #246
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 77


 3388 0370 40F04081 		bne	.L197
 3389 0374 874B     		ldr	r3, .L309
 3390 0376 DB78     		ldrb	r3, [r3, #3]
 3391 0378 DBB2     		uxtb	r3, r3
 3392 037a F92B     		cmp	r3, #249
 3393 037c 40F03A81 		bne	.L197
 838:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3394              		.loc 1 838 0 is_stmt 1
 3395 0380 0023     		movs	r3, #0
 3396 0382 BB73     		strb	r3, [r7, #14]
 3397 0384 16E0     		b	.L198
 3398              	.L201:
 839:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3399              		.loc 1 839 0
 3400 0386 0023     		movs	r3, #0
 3401 0388 FB73     		strb	r3, [r7, #15]
 3402 038a 0DE0     		b	.L199
 3403              	.L200:
 840:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3404              		.loc 1 840 0 discriminator 2
 3405 038c BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3406 038e F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 3407 0390 8149     		ldr	r1, .L309+4
 3408 0392 1346     		mov	r3, r2
 3409 0394 5B00     		lsls	r3, r3, #1
 3410 0396 1344     		add	r3, r3, r2
 3411 0398 DB00     		lsls	r3, r3, #3
 3412 039a 0344     		add	r3, r3, r0
 3413 039c 0B44     		add	r3, r3, r1
 3414 039e 0022     		movs	r2, #0
 3415 03a0 9A70     		strb	r2, [r3, #2]
 839:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3416              		.loc 1 839 0 discriminator 2
 3417 03a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3418 03a4 0133     		adds	r3, r3, #1
 3419 03a6 FB73     		strb	r3, [r7, #15]
 3420              	.L199:
 839:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3421              		.loc 1 839 0 is_stmt 0 discriminator 1
 3422 03a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3423 03aa 172B     		cmp	r3, #23
 3424 03ac EED9     		bls	.L200
 838:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3425              		.loc 1 838 0 is_stmt 1
 3426 03ae BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3427 03b0 0133     		adds	r3, r3, #1
 3428 03b2 BB73     		strb	r3, [r7, #14]
 3429              	.L198:
 838:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3430              		.loc 1 838 0 is_stmt 0 discriminator 1
 3431 03b4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3432 03b6 022B     		cmp	r3, #2
 3433 03b8 E5D9     		bls	.L201
 841:.\Protocolo.c ****                     		}
 842:.\Protocolo.c ****                     	}                        
 843:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3434              		.loc 1 843 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 78


 3435 03ba 0023     		movs	r3, #0
 3436 03bc FB73     		strb	r3, [r7, #15]
 3437 03be 0BE0     		b	.L202
 3438              	.L203:
 844:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3439              		.loc 1 844 0 discriminator 2
 3440 03c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3441 03c2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3442 03c4 0432     		adds	r2, r2, #4
 3443 03c6 7349     		ldr	r1, .L309
 3444 03c8 8A5C     		ldrb	r2, [r1, r2]
 3445 03ca D2B2     		uxtb	r2, r2
 3446 03cc 7249     		ldr	r1, .L309+4
 3447 03ce 0B44     		add	r3, r3, r1
 3448 03d0 9A70     		strb	r2, [r3, #2]
 843:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3449              		.loc 1 843 0 discriminator 2
 3450 03d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3451 03d4 0133     		adds	r3, r3, #1
 3452 03d6 FB73     		strb	r3, [r7, #15]
 3453              	.L202:
 843:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3454              		.loc 1 843 0 is_stmt 0 discriminator 1
 3455 03d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3456 03da 0B2B     		cmp	r3, #11
 3457 03dc F0D9     		bls	.L203
 845:.\Protocolo.c **** 						}
 846:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3458              		.loc 1 846 0 is_stmt 1
 3459 03de 0023     		movs	r3, #0
 3460 03e0 FB73     		strb	r3, [r7, #15]
 3461 03e2 15E0     		b	.L204
 3462              	.L206:
 847:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 3463              		.loc 1 847 0
 3464 03e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3465 03e6 1133     		adds	r3, r3, #17
 3466 03e8 6A4A     		ldr	r2, .L309
 3467 03ea D35C     		ldrb	r3, [r2, r3]
 3468 03ec DBB2     		uxtb	r3, r3
 3469 03ee 002B     		cmp	r3, #0
 3470 03f0 01D1     		bne	.L205
 848:.\Protocolo.c ****                                 return 0;
 3471              		.loc 1 848 0
 3472 03f2 0023     		movs	r3, #0
 3473 03f4 DFE3     		b	.L168
 3474              	.L205:
 849:.\Protocolo.c ****                             }                             
 850:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3475              		.loc 1 850 0
 3476 03f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3477 03f8 0C33     		adds	r3, r3, #12
 3478 03fa FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3479 03fc 1132     		adds	r2, r2, #17
 3480 03fe 6549     		ldr	r1, .L309
 3481 0400 8A5C     		ldrb	r2, [r1, r2]
 3482 0402 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 79


 3483 0404 6449     		ldr	r1, .L309+4
 3484 0406 0B44     		add	r3, r3, r1
 3485 0408 9A70     		strb	r2, [r3, #2]
 846:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3486              		.loc 1 846 0
 3487 040a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3488 040c 0133     		adds	r3, r3, #1
 3489 040e FB73     		strb	r3, [r7, #15]
 3490              	.L204:
 846:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3491              		.loc 1 846 0 is_stmt 0 discriminator 1
 3492 0410 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3493 0412 0B2B     		cmp	r3, #11
 3494 0414 E6D9     		bls	.L206
 851:.\Protocolo.c **** 						}
 852:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3495              		.loc 1 852 0 is_stmt 1
 3496 0416 0023     		movs	r3, #0
 3497 0418 FB73     		strb	r3, [r7, #15]
 3498 041a 0CE0     		b	.L207
 3499              	.L208:
 853:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3500              		.loc 1 853 0 discriminator 2
 3501 041c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3502 041e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3503 0420 1E32     		adds	r2, r2, #30
 3504 0422 5C49     		ldr	r1, .L309
 3505 0424 8A5C     		ldrb	r2, [r1, r2]
 3506 0426 D2B2     		uxtb	r2, r2
 3507 0428 5B49     		ldr	r1, .L309+4
 3508 042a 0B44     		add	r3, r3, r1
 3509 042c 83F84A20 		strb	r2, [r3, #74]
 852:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3510              		.loc 1 852 0 discriminator 2
 3511 0430 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3512 0432 0133     		adds	r3, r3, #1
 3513 0434 FB73     		strb	r3, [r7, #15]
 3514              	.L207:
 852:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3515              		.loc 1 852 0 is_stmt 0 discriminator 1
 3516 0436 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3517 0438 042B     		cmp	r3, #4
 3518 043a EFD9     		bls	.L208
 854:.\Protocolo.c **** 						}				
 855:.\Protocolo.c **** 						if(nmangueras==2){
 3519              		.loc 1 855 0 is_stmt 1
 3520 043c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3521 043e 022B     		cmp	r3, #2
 3522 0440 44D1     		bne	.L209
 856:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3523              		.loc 1 856 0
 3524 0442 0023     		movs	r3, #0
 3525 0444 FB73     		strb	r3, [r7, #15]
 3526 0446 0BE0     		b	.L210
 3527              	.L211:
 857:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3528              		.loc 1 857 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 80


 3529 0448 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3530 044a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3531 044c 2E32     		adds	r2, r2, #46
 3532 044e 5149     		ldr	r1, .L309
 3533 0450 8A5C     		ldrb	r2, [r1, r2]
 3534 0452 D2B2     		uxtb	r2, r2
 3535 0454 5049     		ldr	r1, .L309+4
 3536 0456 0B44     		add	r3, r3, r1
 3537 0458 9A76     		strb	r2, [r3, #26]
 856:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3538              		.loc 1 856 0 discriminator 2
 3539 045a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3540 045c 0133     		adds	r3, r3, #1
 3541 045e FB73     		strb	r3, [r7, #15]
 3542              	.L210:
 856:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3543              		.loc 1 856 0 is_stmt 0 discriminator 1
 3544 0460 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3545 0462 0B2B     		cmp	r3, #11
 3546 0464 F0D9     		bls	.L211
 858:.\Protocolo.c **** 							}
 859:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3547              		.loc 1 859 0 is_stmt 1
 3548 0466 0023     		movs	r3, #0
 3549 0468 FB73     		strb	r3, [r7, #15]
 3550 046a 15E0     		b	.L212
 3551              	.L214:
 860:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 3552              		.loc 1 860 0
 3553 046c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3554 046e 3B33     		adds	r3, r3, #59
 3555 0470 484A     		ldr	r2, .L309
 3556 0472 D35C     		ldrb	r3, [r2, r3]
 3557 0474 DBB2     		uxtb	r3, r3
 3558 0476 002B     		cmp	r3, #0
 3559 0478 01D1     		bne	.L213
 861:.\Protocolo.c ****                                     return 0;
 3560              		.loc 1 861 0
 3561 047a 0023     		movs	r3, #0
 3562 047c 9BE3     		b	.L168
 3563              	.L213:
 862:.\Protocolo.c ****                                 }                                 
 863:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3564              		.loc 1 863 0
 3565 047e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3566 0480 0C33     		adds	r3, r3, #12
 3567 0482 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3568 0484 3B32     		adds	r2, r2, #59
 3569 0486 4349     		ldr	r1, .L309
 3570 0488 8A5C     		ldrb	r2, [r1, r2]
 3571 048a D2B2     		uxtb	r2, r2
 3572 048c 4249     		ldr	r1, .L309+4
 3573 048e 0B44     		add	r3, r3, r1
 3574 0490 9A76     		strb	r2, [r3, #26]
 859:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3575              		.loc 1 859 0
 3576 0492 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 81


 3577 0494 0133     		adds	r3, r3, #1
 3578 0496 FB73     		strb	r3, [r7, #15]
 3579              	.L212:
 859:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3580              		.loc 1 859 0 is_stmt 0 discriminator 1
 3581 0498 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3582 049a 0B2B     		cmp	r3, #11
 3583 049c E6D9     		bls	.L214
 864:.\Protocolo.c **** 							}
 865:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3584              		.loc 1 865 0 is_stmt 1
 3585 049e 0023     		movs	r3, #0
 3586 04a0 FB73     		strb	r3, [r7, #15]
 3587 04a2 0CE0     		b	.L215
 3588              	.L216:
 866:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3589              		.loc 1 866 0 discriminator 2
 3590 04a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3591 04a6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3592 04a8 4832     		adds	r2, r2, #72
 3593 04aa 3A49     		ldr	r1, .L309
 3594 04ac 8A5C     		ldrb	r2, [r1, r2]
 3595 04ae D2B2     		uxtb	r2, r2
 3596 04b0 3949     		ldr	r1, .L309+4
 3597 04b2 0B44     		add	r3, r3, r1
 3598 04b4 83F84F20 		strb	r2, [r3, #79]
 865:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3599              		.loc 1 865 0 discriminator 2
 3600 04b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3601 04ba 0133     		adds	r3, r3, #1
 3602 04bc FB73     		strb	r3, [r7, #15]
 3603              	.L215:
 865:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3604              		.loc 1 865 0 is_stmt 0 discriminator 1
 3605 04be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3606 04c0 042B     		cmp	r3, #4
 3607 04c2 EFD9     		bls	.L216
 867:.\Protocolo.c **** 							}
 868:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3608              		.loc 1 868 0 is_stmt 1
 3609 04c4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 869:.\Protocolo.c ****     						return 2;                            
 3610              		.loc 1 869 0
 3611 04c8 0223     		movs	r3, #2
 3612 04ca 74E3     		b	.L168
 3613              	.L209:
 870:.\Protocolo.c **** 						}
 871:.\Protocolo.c **** 						if(nmangueras==3){
 3614              		.loc 1 871 0
 3615 04cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3616 04ce 032B     		cmp	r3, #3
 3617 04d0 40F08C80 		bne	.L217
 872:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3618              		.loc 1 872 0
 3619 04d4 0023     		movs	r3, #0
 3620 04d6 FB73     		strb	r3, [r7, #15]
 3621 04d8 0BE0     		b	.L218
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 82


 3622              	.L219:
 873:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3623              		.loc 1 873 0 discriminator 2
 3624 04da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3625 04dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3626 04de 2E32     		adds	r2, r2, #46
 3627 04e0 2C49     		ldr	r1, .L309
 3628 04e2 8A5C     		ldrb	r2, [r1, r2]
 3629 04e4 D2B2     		uxtb	r2, r2
 3630 04e6 2C49     		ldr	r1, .L309+4
 3631 04e8 0B44     		add	r3, r3, r1
 3632 04ea 9A76     		strb	r2, [r3, #26]
 872:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3633              		.loc 1 872 0 discriminator 2
 3634 04ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3635 04ee 0133     		adds	r3, r3, #1
 3636 04f0 FB73     		strb	r3, [r7, #15]
 3637              	.L218:
 872:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3638              		.loc 1 872 0 is_stmt 0 discriminator 1
 3639 04f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3640 04f4 0B2B     		cmp	r3, #11
 3641 04f6 F0D9     		bls	.L219
 874:.\Protocolo.c **** 							}
 875:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3642              		.loc 1 875 0 is_stmt 1
 3643 04f8 0023     		movs	r3, #0
 3644 04fa FB73     		strb	r3, [r7, #15]
 3645 04fc 15E0     		b	.L220
 3646              	.L222:
 876:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 3647              		.loc 1 876 0
 3648 04fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3649 0500 3B33     		adds	r3, r3, #59
 3650 0502 244A     		ldr	r2, .L309
 3651 0504 D35C     		ldrb	r3, [r2, r3]
 3652 0506 DBB2     		uxtb	r3, r3
 3653 0508 002B     		cmp	r3, #0
 3654 050a 01D1     		bne	.L221
 877:.\Protocolo.c ****                                     return 0;
 3655              		.loc 1 877 0
 3656 050c 0023     		movs	r3, #0
 3657 050e 52E3     		b	.L168
 3658              	.L221:
 878:.\Protocolo.c ****                                 }                                 
 879:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3659              		.loc 1 879 0
 3660 0510 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3661 0512 0C33     		adds	r3, r3, #12
 3662 0514 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3663 0516 3B32     		adds	r2, r2, #59
 3664 0518 1E49     		ldr	r1, .L309
 3665 051a 8A5C     		ldrb	r2, [r1, r2]
 3666 051c D2B2     		uxtb	r2, r2
 3667 051e 1E49     		ldr	r1, .L309+4
 3668 0520 0B44     		add	r3, r3, r1
 3669 0522 9A76     		strb	r2, [r3, #26]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 83


 875:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3670              		.loc 1 875 0
 3671 0524 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3672 0526 0133     		adds	r3, r3, #1
 3673 0528 FB73     		strb	r3, [r7, #15]
 3674              	.L220:
 875:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3675              		.loc 1 875 0 is_stmt 0 discriminator 1
 3676 052a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3677 052c 0B2B     		cmp	r3, #11
 3678 052e E6D9     		bls	.L222
 880:.\Protocolo.c **** 							}
 881:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3679              		.loc 1 881 0 is_stmt 1
 3680 0530 0023     		movs	r3, #0
 3681 0532 FB73     		strb	r3, [r7, #15]
 3682 0534 0CE0     		b	.L223
 3683              	.L224:
 882:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3684              		.loc 1 882 0 discriminator 2
 3685 0536 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3686 0538 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3687 053a 4832     		adds	r2, r2, #72
 3688 053c 1549     		ldr	r1, .L309
 3689 053e 8A5C     		ldrb	r2, [r1, r2]
 3690 0540 D2B2     		uxtb	r2, r2
 3691 0542 1549     		ldr	r1, .L309+4
 3692 0544 0B44     		add	r3, r3, r1
 3693 0546 83F84F20 		strb	r2, [r3, #79]
 881:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3694              		.loc 1 881 0 discriminator 2
 3695 054a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3696 054c 0133     		adds	r3, r3, #1
 3697 054e FB73     		strb	r3, [r7, #15]
 3698              	.L223:
 881:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3699              		.loc 1 881 0 is_stmt 0 discriminator 1
 3700 0550 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3701 0552 042B     		cmp	r3, #4
 3702 0554 EFD9     		bls	.L224
 883:.\Protocolo.c **** 							}					
 884:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3703              		.loc 1 884 0 is_stmt 1
 3704 0556 0023     		movs	r3, #0
 3705 0558 FB73     		strb	r3, [r7, #15]
 3706 055a 0CE0     		b	.L225
 3707              	.L226:
 885:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 3708              		.loc 1 885 0 discriminator 2
 3709 055c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3710 055e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3711 0560 5832     		adds	r2, r2, #88
 3712 0562 0C49     		ldr	r1, .L309
 3713 0564 8A5C     		ldrb	r2, [r1, r2]
 3714 0566 D2B2     		uxtb	r2, r2
 3715 0568 0B49     		ldr	r1, .L309+4
 3716 056a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 84


 3717 056c 83F83220 		strb	r2, [r3, #50]
 884:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3718              		.loc 1 884 0 discriminator 2
 3719 0570 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3720 0572 0133     		adds	r3, r3, #1
 3721 0574 FB73     		strb	r3, [r7, #15]
 3722              	.L225:
 884:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3723              		.loc 1 884 0 is_stmt 0 discriminator 1
 3724 0576 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3725 0578 0B2B     		cmp	r3, #11
 3726 057a EFD9     		bls	.L226
 886:.\Protocolo.c **** 							}
 887:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3727              		.loc 1 887 0 is_stmt 1
 3728 057c 0023     		movs	r3, #0
 3729 057e FB73     		strb	r3, [r7, #15]
 3730 0580 1AE0     		b	.L227
 3731              	.L229:
 888:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 3732              		.loc 1 888 0
 3733 0582 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3734 0584 6533     		adds	r3, r3, #101
 3735 0586 034A     		ldr	r2, .L309
 3736 0588 D35C     		ldrb	r3, [r2, r3]
 3737 058a DBB2     		uxtb	r3, r3
 3738 058c 002B     		cmp	r3, #0
 3739 058e 05D1     		bne	.L228
 889:.\Protocolo.c ****                                     return 0;
 3740              		.loc 1 889 0
 3741 0590 0023     		movs	r3, #0
 3742 0592 10E3     		b	.L168
 3743              	.L310:
 3744              		.align	2
 3745              	.L309:
 3746 0594 00000000 		.word	Surtidor_rxBuffer
 3747 0598 00000000 		.word	lado1
 3748              	.L228:
 890:.\Protocolo.c ****                                 }                                
 891:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 3749              		.loc 1 891 0
 3750 059c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3751 059e 0C33     		adds	r3, r3, #12
 3752 05a0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3753 05a2 6532     		adds	r2, r2, #101
 3754 05a4 AD49     		ldr	r1, .L311
 3755 05a6 8A5C     		ldrb	r2, [r1, r2]
 3756 05a8 D2B2     		uxtb	r2, r2
 3757 05aa AD49     		ldr	r1, .L311+4
 3758 05ac 0B44     		add	r3, r3, r1
 3759 05ae 83F83220 		strb	r2, [r3, #50]
 887:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3760              		.loc 1 887 0
 3761 05b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3762 05b4 0133     		adds	r3, r3, #1
 3763 05b6 FB73     		strb	r3, [r7, #15]
 3764              	.L227:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 85


 887:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3765              		.loc 1 887 0 is_stmt 0 discriminator 1
 3766 05b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3767 05ba 0B2B     		cmp	r3, #11
 3768 05bc E1D9     		bls	.L229
 892:.\Protocolo.c **** 							}
 893:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3769              		.loc 1 893 0 is_stmt 1
 3770 05be 0023     		movs	r3, #0
 3771 05c0 FB73     		strb	r3, [r7, #15]
 3772 05c2 0CE0     		b	.L230
 3773              	.L231:
 894:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 3774              		.loc 1 894 0 discriminator 2
 3775 05c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3776 05c6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3777 05c8 7232     		adds	r2, r2, #114
 3778 05ca A449     		ldr	r1, .L311
 3779 05cc 8A5C     		ldrb	r2, [r1, r2]
 3780 05ce D2B2     		uxtb	r2, r2
 3781 05d0 A349     		ldr	r1, .L311+4
 3782 05d2 0B44     		add	r3, r3, r1
 3783 05d4 83F85420 		strb	r2, [r3, #84]
 893:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3784              		.loc 1 893 0 discriminator 2
 3785 05d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3786 05da 0133     		adds	r3, r3, #1
 3787 05dc FB73     		strb	r3, [r7, #15]
 3788              	.L230:
 893:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3789              		.loc 1 893 0 is_stmt 0 discriminator 1
 3790 05de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3791 05e0 042B     		cmp	r3, #4
 3792 05e2 EFD9     		bls	.L231
 895:.\Protocolo.c **** 							}
 896:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3793              		.loc 1 896 0 is_stmt 1
 3794 05e4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 897:.\Protocolo.c ****     						return 3;                            
 3795              		.loc 1 897 0
 3796 05e8 0323     		movs	r3, #3
 3797 05ea E4E2     		b	.L168
 3798              	.L217:
 898:.\Protocolo.c **** 						}
 899:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3799              		.loc 1 899 0
 3800 05ec FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 900:.\Protocolo.c **** 						return 1;			
 3801              		.loc 1 900 0
 3802 05f0 0123     		movs	r3, #1
 3803 05f2 E0E2     		b	.L168
 3804              	.L197:
 901:.\Protocolo.c **** 					}
 902:.\Protocolo.c **** 					else{
 903:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3805              		.loc 1 903 0
 3806 05f4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 86


 904:.\Protocolo.c **** 						return 0;					
 3807              		.loc 1 904 0
 3808 05f8 0023     		movs	r3, #0
 3809 05fa DCE2     		b	.L168
 3810              	.L196:
 905:.\Protocolo.c **** 					}
 906:.\Protocolo.c **** 				}
 907:.\Protocolo.c **** 				else{
 908:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 3811              		.loc 1 908 0
 3812 05fc FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 909:.\Protocolo.c **** 					return 0;		
 3813              		.loc 1 909 0
 3814 0600 0023     		movs	r3, #0
 3815 0602 D8E2     		b	.L168
 3816              	.L155:
 910:.\Protocolo.c **** 				}	
 911:.\Protocolo.c **** 			}
 912:.\Protocolo.c **** 		}
 913:.\Protocolo.c **** 		else{
 914:.\Protocolo.c **** 			if(version[1]!=7){
 3817              		.loc 1 914 0
 3818 0604 974B     		ldr	r3, .L311+8
 3819 0606 5B78     		ldrb	r3, [r3, #1]
 3820 0608 DBB2     		uxtb	r3, r3
 3821 060a 072B     		cmp	r3, #7
 3822 060c 00F06B81 		beq	.L232
 915:.\Protocolo.c **** 				CyDelay(900);
 3823              		.loc 1 915 0
 3824 0610 4FF46170 		mov	r0, #900
 3825 0614 FFF7FEFF 		bl	CyDelay
 916:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3826              		.loc 1 916 0
 3827 0618 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3828 061c 0346     		mov	r3, r0
 3829 061e FB73     		strb	r3, [r7, #15]
 917:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){				
 3830              		.loc 1 917 0
 3831 0620 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3832 0622 222B     		cmp	r3, #34
 3833 0624 06D0     		beq	.L233
 3834              		.loc 1 917 0 is_stmt 0 discriminator 1
 3835 0626 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3836 0628 402B     		cmp	r3, #64
 3837 062a 03D0     		beq	.L233
 3838 062c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3839 062e 5E2B     		cmp	r3, #94
 3840 0630 40F05581 		bne	.L234
 3841              	.L233:
 918:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3842              		.loc 1 918 0 is_stmt 1
 3843 0634 894B     		ldr	r3, .L311
 3844 0636 1B78     		ldrb	r3, [r3]
 3845 0638 DBB2     		uxtb	r3, r3
 3846 063a FF2B     		cmp	r3, #255
 3847 063c 40F04B81 		bne	.L235
 3848              		.loc 1 918 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 87


 3849 0640 864B     		ldr	r3, .L311
 3850 0642 5B78     		ldrb	r3, [r3, #1]
 3851 0644 DBB2     		uxtb	r3, r3
 3852 0646 F62B     		cmp	r3, #246
 3853 0648 40F04581 		bne	.L235
 3854 064c 834B     		ldr	r3, .L311
 3855 064e DB78     		ldrb	r3, [r3, #3]
 3856 0650 DBB2     		uxtb	r3, r3
 3857 0652 F92B     		cmp	r3, #249
 3858 0654 40F03F81 		bne	.L235
 919:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3859              		.loc 1 919 0 is_stmt 1
 3860 0658 0023     		movs	r3, #0
 3861 065a BB73     		strb	r3, [r7, #14]
 3862 065c 16E0     		b	.L236
 3863              	.L239:
 920:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3864              		.loc 1 920 0
 3865 065e 0023     		movs	r3, #0
 3866 0660 FB73     		strb	r3, [r7, #15]
 3867 0662 0DE0     		b	.L237
 3868              	.L238:
 921:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 3869              		.loc 1 921 0 discriminator 2
 3870 0664 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3871 0666 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 3872 0668 7F49     		ldr	r1, .L311+12
 3873 066a 1346     		mov	r3, r2
 3874 066c 5B00     		lsls	r3, r3, #1
 3875 066e 1344     		add	r3, r3, r2
 3876 0670 DB00     		lsls	r3, r3, #3
 3877 0672 0344     		add	r3, r3, r0
 3878 0674 0B44     		add	r3, r3, r1
 3879 0676 0022     		movs	r2, #0
 3880 0678 9A70     		strb	r2, [r3, #2]
 920:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3881              		.loc 1 920 0 discriminator 2
 3882 067a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3883 067c 0133     		adds	r3, r3, #1
 3884 067e FB73     		strb	r3, [r7, #15]
 3885              	.L237:
 920:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3886              		.loc 1 920 0 is_stmt 0 discriminator 1
 3887 0680 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3888 0682 172B     		cmp	r3, #23
 3889 0684 EED9     		bls	.L238
 919:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3890              		.loc 1 919 0 is_stmt 1
 3891 0686 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3892 0688 0133     		adds	r3, r3, #1
 3893 068a BB73     		strb	r3, [r7, #14]
 3894              	.L236:
 919:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3895              		.loc 1 919 0 is_stmt 0 discriminator 1
 3896 068c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3897 068e 022B     		cmp	r3, #2
 3898 0690 E5D9     		bls	.L239
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 88


 922:.\Protocolo.c ****                     		}
 923:.\Protocolo.c ****                     	}                        
 924:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3899              		.loc 1 924 0 is_stmt 1
 3900 0692 0023     		movs	r3, #0
 3901 0694 FB73     		strb	r3, [r7, #15]
 3902 0696 0BE0     		b	.L240
 3903              	.L241:
 925:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 3904              		.loc 1 925 0 discriminator 2
 3905 0698 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3906 069a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3907 069c 0432     		adds	r2, r2, #4
 3908 069e 6F49     		ldr	r1, .L311
 3909 06a0 8A5C     		ldrb	r2, [r1, r2]
 3910 06a2 D2B2     		uxtb	r2, r2
 3911 06a4 7049     		ldr	r1, .L311+12
 3912 06a6 0B44     		add	r3, r3, r1
 3913 06a8 9A70     		strb	r2, [r3, #2]
 924:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3914              		.loc 1 924 0 discriminator 2
 3915 06aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3916 06ac 0133     		adds	r3, r3, #1
 3917 06ae FB73     		strb	r3, [r7, #15]
 3918              	.L240:
 924:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3919              		.loc 1 924 0 is_stmt 0 discriminator 1
 3920 06b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3921 06b2 072B     		cmp	r3, #7
 3922 06b4 F0D9     		bls	.L241
 926:.\Protocolo.c **** 						}
 927:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3923              		.loc 1 927 0 is_stmt 1
 3924 06b6 0023     		movs	r3, #0
 3925 06b8 FB73     		strb	r3, [r7, #15]
 3926 06ba 15E0     		b	.L242
 3927              	.L244:
 928:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 3928              		.loc 1 928 0
 3929 06bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3930 06be 0D33     		adds	r3, r3, #13
 3931 06c0 664A     		ldr	r2, .L311
 3932 06c2 D35C     		ldrb	r3, [r2, r3]
 3933 06c4 DBB2     		uxtb	r3, r3
 3934 06c6 002B     		cmp	r3, #0
 3935 06c8 01D1     		bne	.L243
 929:.\Protocolo.c ****                                 return 0;
 3936              		.loc 1 929 0
 3937 06ca 0023     		movs	r3, #0
 3938 06cc 73E2     		b	.L168
 3939              	.L243:
 930:.\Protocolo.c ****                             }                             
 931:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3940              		.loc 1 931 0
 3941 06ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3942 06d0 0C33     		adds	r3, r3, #12
 3943 06d2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 89


 3944 06d4 0D32     		adds	r2, r2, #13
 3945 06d6 6149     		ldr	r1, .L311
 3946 06d8 8A5C     		ldrb	r2, [r1, r2]
 3947 06da D2B2     		uxtb	r2, r2
 3948 06dc 6249     		ldr	r1, .L311+12
 3949 06de 0B44     		add	r3, r3, r1
 3950 06e0 9A70     		strb	r2, [r3, #2]
 927:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3951              		.loc 1 927 0
 3952 06e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3953 06e4 0133     		adds	r3, r3, #1
 3954 06e6 FB73     		strb	r3, [r7, #15]
 3955              	.L242:
 927:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3956              		.loc 1 927 0 is_stmt 0 discriminator 1
 3957 06e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3958 06ea 072B     		cmp	r3, #7
 3959 06ec E6D9     		bls	.L244
 932:.\Protocolo.c **** 						}
 933:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3960              		.loc 1 933 0 is_stmt 1
 3961 06ee 0023     		movs	r3, #0
 3962 06f0 FB73     		strb	r3, [r7, #15]
 3963 06f2 0CE0     		b	.L245
 3964              	.L246:
 934:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 3965              		.loc 1 934 0 discriminator 2
 3966 06f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3967 06f6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3968 06f8 1632     		adds	r2, r2, #22
 3969 06fa 5849     		ldr	r1, .L311
 3970 06fc 8A5C     		ldrb	r2, [r1, r2]
 3971 06fe D2B2     		uxtb	r2, r2
 3972 0700 5949     		ldr	r1, .L311+12
 3973 0702 0B44     		add	r3, r3, r1
 3974 0704 83F84A20 		strb	r2, [r3, #74]
 933:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3975              		.loc 1 933 0 discriminator 2
 3976 0708 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3977 070a 0133     		adds	r3, r3, #1
 3978 070c FB73     		strb	r3, [r7, #15]
 3979              	.L245:
 933:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3980              		.loc 1 933 0 is_stmt 0 discriminator 1
 3981 070e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3982 0710 032B     		cmp	r3, #3
 3983 0712 EFD9     		bls	.L246
 935:.\Protocolo.c **** 						}				
 936:.\Protocolo.c **** 						if(nmangueras==2){
 3984              		.loc 1 936 0 is_stmt 1
 3985 0714 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3986 0716 022B     		cmp	r3, #2
 3987 0718 44D1     		bne	.L247
 937:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3988              		.loc 1 937 0
 3989 071a 0023     		movs	r3, #0
 3990 071c FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 90


 3991 071e 0BE0     		b	.L248
 3992              	.L249:
 938:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 3993              		.loc 1 938 0 discriminator 2
 3994 0720 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3995 0722 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3996 0724 2232     		adds	r2, r2, #34
 3997 0726 4D49     		ldr	r1, .L311
 3998 0728 8A5C     		ldrb	r2, [r1, r2]
 3999 072a D2B2     		uxtb	r2, r2
 4000 072c 4E49     		ldr	r1, .L311+12
 4001 072e 0B44     		add	r3, r3, r1
 4002 0730 9A76     		strb	r2, [r3, #26]
 937:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4003              		.loc 1 937 0 discriminator 2
 4004 0732 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4005 0734 0133     		adds	r3, r3, #1
 4006 0736 FB73     		strb	r3, [r7, #15]
 4007              	.L248:
 937:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4008              		.loc 1 937 0 is_stmt 0 discriminator 1
 4009 0738 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4010 073a 072B     		cmp	r3, #7
 4011 073c F0D9     		bls	.L249
 939:.\Protocolo.c **** 							}
 940:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4012              		.loc 1 940 0 is_stmt 1
 4013 073e 0023     		movs	r3, #0
 4014 0740 FB73     		strb	r3, [r7, #15]
 4015 0742 15E0     		b	.L250
 4016              	.L252:
 941:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 4017              		.loc 1 941 0
 4018 0744 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4019 0746 2B33     		adds	r3, r3, #43
 4020 0748 444A     		ldr	r2, .L311
 4021 074a D35C     		ldrb	r3, [r2, r3]
 4022 074c DBB2     		uxtb	r3, r3
 4023 074e 002B     		cmp	r3, #0
 4024 0750 01D1     		bne	.L251
 942:.\Protocolo.c ****                                     return 0;
 4025              		.loc 1 942 0
 4026 0752 0023     		movs	r3, #0
 4027 0754 2FE2     		b	.L168
 4028              	.L251:
 943:.\Protocolo.c ****                                 }                                 
 944:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4029              		.loc 1 944 0
 4030 0756 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4031 0758 0C33     		adds	r3, r3, #12
 4032 075a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4033 075c 2B32     		adds	r2, r2, #43
 4034 075e 3F49     		ldr	r1, .L311
 4035 0760 8A5C     		ldrb	r2, [r1, r2]
 4036 0762 D2B2     		uxtb	r2, r2
 4037 0764 4049     		ldr	r1, .L311+12
 4038 0766 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 91


 4039 0768 9A76     		strb	r2, [r3, #26]
 940:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4040              		.loc 1 940 0
 4041 076a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4042 076c 0133     		adds	r3, r3, #1
 4043 076e FB73     		strb	r3, [r7, #15]
 4044              	.L250:
 940:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4045              		.loc 1 940 0 is_stmt 0 discriminator 1
 4046 0770 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4047 0772 072B     		cmp	r3, #7
 4048 0774 E6D9     		bls	.L252
 945:.\Protocolo.c **** 							}
 946:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4049              		.loc 1 946 0 is_stmt 1
 4050 0776 0023     		movs	r3, #0
 4051 0778 FB73     		strb	r3, [r7, #15]
 4052 077a 0CE0     		b	.L253
 4053              	.L254:
 947:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4054              		.loc 1 947 0 discriminator 2
 4055 077c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4056 077e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4057 0780 3432     		adds	r2, r2, #52
 4058 0782 3649     		ldr	r1, .L311
 4059 0784 8A5C     		ldrb	r2, [r1, r2]
 4060 0786 D2B2     		uxtb	r2, r2
 4061 0788 3749     		ldr	r1, .L311+12
 4062 078a 0B44     		add	r3, r3, r1
 4063 078c 83F84F20 		strb	r2, [r3, #79]
 946:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4064              		.loc 1 946 0 discriminator 2
 4065 0790 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4066 0792 0133     		adds	r3, r3, #1
 4067 0794 FB73     		strb	r3, [r7, #15]
 4068              	.L253:
 946:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4069              		.loc 1 946 0 is_stmt 0 discriminator 1
 4070 0796 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4071 0798 032B     		cmp	r3, #3
 4072 079a EFD9     		bls	.L254
 948:.\Protocolo.c **** 							}
 949:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4073              		.loc 1 949 0 is_stmt 1
 4074 079c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 950:.\Protocolo.c ****     						return 2;                            
 4075              		.loc 1 950 0
 4076 07a0 0223     		movs	r3, #2
 4077 07a2 08E2     		b	.L168
 4078              	.L247:
 951:.\Protocolo.c **** 						}
 952:.\Protocolo.c **** 						if(nmangueras==3){
 4079              		.loc 1 952 0
 4080 07a4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4081 07a6 032B     		cmp	r3, #3
 4082 07a8 40F09180 		bne	.L255
 953:.\Protocolo.c **** 							for(x=0;x<=7;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 92


 4083              		.loc 1 953 0
 4084 07ac 0023     		movs	r3, #0
 4085 07ae FB73     		strb	r3, [r7, #15]
 4086 07b0 0BE0     		b	.L256
 4087              	.L257:
 954:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4088              		.loc 1 954 0 discriminator 2
 4089 07b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4090 07b4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4091 07b6 2232     		adds	r2, r2, #34
 4092 07b8 2849     		ldr	r1, .L311
 4093 07ba 8A5C     		ldrb	r2, [r1, r2]
 4094 07bc D2B2     		uxtb	r2, r2
 4095 07be 2A49     		ldr	r1, .L311+12
 4096 07c0 0B44     		add	r3, r3, r1
 4097 07c2 9A76     		strb	r2, [r3, #26]
 953:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4098              		.loc 1 953 0 discriminator 2
 4099 07c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4100 07c6 0133     		adds	r3, r3, #1
 4101 07c8 FB73     		strb	r3, [r7, #15]
 4102              	.L256:
 953:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4103              		.loc 1 953 0 is_stmt 0 discriminator 1
 4104 07ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4105 07cc 072B     		cmp	r3, #7
 4106 07ce F0D9     		bls	.L257
 955:.\Protocolo.c **** 							}
 956:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4107              		.loc 1 956 0 is_stmt 1
 4108 07d0 0023     		movs	r3, #0
 4109 07d2 FB73     		strb	r3, [r7, #15]
 4110 07d4 15E0     		b	.L258
 4111              	.L260:
 957:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 4112              		.loc 1 957 0
 4113 07d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4114 07d8 2B33     		adds	r3, r3, #43
 4115 07da 204A     		ldr	r2, .L311
 4116 07dc D35C     		ldrb	r3, [r2, r3]
 4117 07de DBB2     		uxtb	r3, r3
 4118 07e0 002B     		cmp	r3, #0
 4119 07e2 01D1     		bne	.L259
 958:.\Protocolo.c ****                                     return 0;
 4120              		.loc 1 958 0
 4121 07e4 0023     		movs	r3, #0
 4122 07e6 E6E1     		b	.L168
 4123              	.L259:
 959:.\Protocolo.c ****                                 }                                 
 960:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4124              		.loc 1 960 0
 4125 07e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4126 07ea 0C33     		adds	r3, r3, #12
 4127 07ec FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4128 07ee 2B32     		adds	r2, r2, #43
 4129 07f0 1A49     		ldr	r1, .L311
 4130 07f2 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 93


 4131 07f4 D2B2     		uxtb	r2, r2
 4132 07f6 1C49     		ldr	r1, .L311+12
 4133 07f8 0B44     		add	r3, r3, r1
 4134 07fa 9A76     		strb	r2, [r3, #26]
 956:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4135              		.loc 1 956 0
 4136 07fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4137 07fe 0133     		adds	r3, r3, #1
 4138 0800 FB73     		strb	r3, [r7, #15]
 4139              	.L258:
 956:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4140              		.loc 1 956 0 is_stmt 0 discriminator 1
 4141 0802 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4142 0804 072B     		cmp	r3, #7
 4143 0806 E6D9     		bls	.L260
 961:.\Protocolo.c **** 							}
 962:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4144              		.loc 1 962 0 is_stmt 1
 4145 0808 0023     		movs	r3, #0
 4146 080a FB73     		strb	r3, [r7, #15]
 4147 080c 0CE0     		b	.L261
 4148              	.L262:
 963:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4149              		.loc 1 963 0 discriminator 2
 4150 080e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4151 0810 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4152 0812 3432     		adds	r2, r2, #52
 4153 0814 1149     		ldr	r1, .L311
 4154 0816 8A5C     		ldrb	r2, [r1, r2]
 4155 0818 D2B2     		uxtb	r2, r2
 4156 081a 1349     		ldr	r1, .L311+12
 4157 081c 0B44     		add	r3, r3, r1
 4158 081e 83F84F20 		strb	r2, [r3, #79]
 962:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4159              		.loc 1 962 0 discriminator 2
 4160 0822 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4161 0824 0133     		adds	r3, r3, #1
 4162 0826 FB73     		strb	r3, [r7, #15]
 4163              	.L261:
 962:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4164              		.loc 1 962 0 is_stmt 0 discriminator 1
 4165 0828 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4166 082a 032B     		cmp	r3, #3
 4167 082c EFD9     		bls	.L262
 964:.\Protocolo.c **** 							}						
 965:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4168              		.loc 1 965 0 is_stmt 1
 4169 082e 0023     		movs	r3, #0
 4170 0830 FB73     		strb	r3, [r7, #15]
 4171 0832 0CE0     		b	.L263
 4172              	.L264:
 966:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4173              		.loc 1 966 0 discriminator 2
 4174 0834 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4175 0836 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4176 0838 4032     		adds	r2, r2, #64
 4177 083a 0849     		ldr	r1, .L311
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 94


 4178 083c 8A5C     		ldrb	r2, [r1, r2]
 4179 083e D2B2     		uxtb	r2, r2
 4180 0840 0949     		ldr	r1, .L311+12
 4181 0842 0B44     		add	r3, r3, r1
 4182 0844 83F83220 		strb	r2, [r3, #50]
 965:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4183              		.loc 1 965 0 discriminator 2
 4184 0848 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4185 084a 0133     		adds	r3, r3, #1
 4186 084c FB73     		strb	r3, [r7, #15]
 4187              	.L263:
 965:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4188              		.loc 1 965 0 is_stmt 0 discriminator 1
 4189 084e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4190 0850 072B     		cmp	r3, #7
 4191 0852 EFD9     		bls	.L264
 967:.\Protocolo.c **** 							}
 968:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4192              		.loc 1 968 0 is_stmt 1
 4193 0854 0023     		movs	r3, #0
 4194 0856 FB73     		strb	r3, [r7, #15]
 4195 0858 1FE0     		b	.L265
 4196              	.L312:
 4197 085a 00BF     		.align	2
 4198              	.L311:
 4199 085c 00000000 		.word	Surtidor_rxBuffer
 4200 0860 00000000 		.word	lado1
 4201 0864 00000000 		.word	version
 4202 0868 00000000 		.word	lado2
 4203              	.L267:
 969:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 4204              		.loc 1 969 0
 4205 086c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4206 086e 4933     		adds	r3, r3, #73
 4207 0870 A64A     		ldr	r2, .L313
 4208 0872 D35C     		ldrb	r3, [r2, r3]
 4209 0874 DBB2     		uxtb	r3, r3
 4210 0876 002B     		cmp	r3, #0
 4211 0878 01D1     		bne	.L266
 970:.\Protocolo.c ****                                     return 0;
 4212              		.loc 1 970 0
 4213 087a 0023     		movs	r3, #0
 4214 087c 9BE1     		b	.L168
 4215              	.L266:
 971:.\Protocolo.c ****                                 }                                 
 972:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4216              		.loc 1 972 0
 4217 087e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4218 0880 0C33     		adds	r3, r3, #12
 4219 0882 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4220 0884 4932     		adds	r2, r2, #73
 4221 0886 A149     		ldr	r1, .L313
 4222 0888 8A5C     		ldrb	r2, [r1, r2]
 4223 088a D2B2     		uxtb	r2, r2
 4224 088c A049     		ldr	r1, .L313+4
 4225 088e 0B44     		add	r3, r3, r1
 4226 0890 83F83220 		strb	r2, [r3, #50]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 95


 968:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4227              		.loc 1 968 0
 4228 0894 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4229 0896 0133     		adds	r3, r3, #1
 4230 0898 FB73     		strb	r3, [r7, #15]
 4231              	.L265:
 968:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4232              		.loc 1 968 0 is_stmt 0 discriminator 1
 4233 089a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4234 089c 072B     		cmp	r3, #7
 4235 089e E5D9     		bls	.L267
 973:.\Protocolo.c **** 							}
 974:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4236              		.loc 1 974 0 is_stmt 1
 4237 08a0 0023     		movs	r3, #0
 4238 08a2 FB73     		strb	r3, [r7, #15]
 4239 08a4 0CE0     		b	.L268
 4240              	.L269:
 975:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4241              		.loc 1 975 0 discriminator 2
 4242 08a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4243 08a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4244 08aa 5232     		adds	r2, r2, #82
 4245 08ac 9749     		ldr	r1, .L313
 4246 08ae 8A5C     		ldrb	r2, [r1, r2]
 4247 08b0 D2B2     		uxtb	r2, r2
 4248 08b2 9749     		ldr	r1, .L313+4
 4249 08b4 0B44     		add	r3, r3, r1
 4250 08b6 83F85420 		strb	r2, [r3, #84]
 974:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4251              		.loc 1 974 0 discriminator 2
 4252 08ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4253 08bc 0133     		adds	r3, r3, #1
 4254 08be FB73     		strb	r3, [r7, #15]
 4255              	.L268:
 974:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4256              		.loc 1 974 0 is_stmt 0 discriminator 1
 4257 08c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4258 08c2 032B     		cmp	r3, #3
 4259 08c4 EFD9     		bls	.L269
 976:.\Protocolo.c **** 							}
 977:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4260              		.loc 1 977 0 is_stmt 1
 4261 08c6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 978:.\Protocolo.c ****     						return 3;                            
 4262              		.loc 1 978 0
 4263 08ca 0323     		movs	r3, #3
 4264 08cc 73E1     		b	.L168
 4265              	.L255:
 979:.\Protocolo.c **** 						}
 980:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4266              		.loc 1 980 0
 4267 08ce FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 981:.\Protocolo.c **** 						return 1;			
 4268              		.loc 1 981 0
 4269 08d2 0123     		movs	r3, #1
 4270 08d4 6FE1     		b	.L168
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 96


 4271              	.L235:
 982:.\Protocolo.c **** 					}
 983:.\Protocolo.c **** 					else{
 984:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4272              		.loc 1 984 0
 4273 08d6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 985:.\Protocolo.c **** 						return 0;		
 4274              		.loc 1 985 0
 4275 08da 0023     		movs	r3, #0
 4276 08dc 6BE1     		b	.L168
 4277              	.L234:
 986:.\Protocolo.c **** 					}
 987:.\Protocolo.c **** 				}
 988:.\Protocolo.c **** 				else{
 989:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4278              		.loc 1 989 0
 4279 08de FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 990:.\Protocolo.c **** 					return 0;		
 4280              		.loc 1 990 0
 4281 08e2 0023     		movs	r3, #0
 4282 08e4 67E1     		b	.L168
 4283              	.L232:
 991:.\Protocolo.c **** 				}				
 992:.\Protocolo.c **** 			}
 993:.\Protocolo.c **** 			else{
 994:.\Protocolo.c **** 				CyDelay(900);
 4284              		.loc 1 994 0
 4285 08e6 4FF46170 		mov	r0, #900
 4286 08ea FFF7FEFF 		bl	CyDelay
 995:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4287              		.loc 1 995 0
 4288 08ee FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4289 08f2 0346     		mov	r3, r0
 4290 08f4 FB73     		strb	r3, [r7, #15]
 996:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){					
 4291              		.loc 1 996 0
 4292 08f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4293 08f8 2E2B     		cmp	r3, #46
 4294 08fa 06D0     		beq	.L270
 4295              		.loc 1 996 0 is_stmt 0 discriminator 1
 4296 08fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4297 08fe 582B     		cmp	r3, #88
 4298 0900 03D0     		beq	.L270
 4299 0902 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4300 0904 822B     		cmp	r3, #130
 4301 0906 40F05181 		bne	.L271
 4302              	.L270:
 997:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4303              		.loc 1 997 0 is_stmt 1
 4304 090a 804B     		ldr	r3, .L313
 4305 090c 1B78     		ldrb	r3, [r3]
 4306 090e DBB2     		uxtb	r3, r3
 4307 0910 FF2B     		cmp	r3, #255
 4308 0912 40F04781 		bne	.L272
 4309              		.loc 1 997 0 is_stmt 0 discriminator 1
 4310 0916 7D4B     		ldr	r3, .L313
 4311 0918 5B78     		ldrb	r3, [r3, #1]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 97


 4312 091a DBB2     		uxtb	r3, r3
 4313 091c F62B     		cmp	r3, #246
 4314 091e 40F04181 		bne	.L272
 4315 0922 7A4B     		ldr	r3, .L313
 4316 0924 DB78     		ldrb	r3, [r3, #3]
 4317 0926 DBB2     		uxtb	r3, r3
 4318 0928 F92B     		cmp	r3, #249
 4319 092a 40F03B81 		bne	.L272
 998:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4320              		.loc 1 998 0 is_stmt 1
 4321 092e 0023     		movs	r3, #0
 4322 0930 BB73     		strb	r3, [r7, #14]
 4323 0932 16E0     		b	.L273
 4324              	.L276:
 999:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4325              		.loc 1 999 0
 4326 0934 0023     		movs	r3, #0
 4327 0936 FB73     		strb	r3, [r7, #15]
 4328 0938 0DE0     		b	.L274
 4329              	.L275:
1000:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4330              		.loc 1 1000 0 discriminator 2
 4331 093a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4332 093c F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 4333 093e 7449     		ldr	r1, .L313+4
 4334 0940 1346     		mov	r3, r2
 4335 0942 5B00     		lsls	r3, r3, #1
 4336 0944 1344     		add	r3, r3, r2
 4337 0946 DB00     		lsls	r3, r3, #3
 4338 0948 0344     		add	r3, r3, r0
 4339 094a 0B44     		add	r3, r3, r1
 4340 094c 0022     		movs	r2, #0
 4341 094e 9A70     		strb	r2, [r3, #2]
 999:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4342              		.loc 1 999 0 discriminator 2
 4343 0950 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4344 0952 0133     		adds	r3, r3, #1
 4345 0954 FB73     		strb	r3, [r7, #15]
 4346              	.L274:
 999:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4347              		.loc 1 999 0 is_stmt 0 discriminator 1
 4348 0956 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4349 0958 172B     		cmp	r3, #23
 4350 095a EED9     		bls	.L275
 998:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4351              		.loc 1 998 0 is_stmt 1
 4352 095c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4353 095e 0133     		adds	r3, r3, #1
 4354 0960 BB73     		strb	r3, [r7, #14]
 4355              	.L273:
 998:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4356              		.loc 1 998 0 is_stmt 0 discriminator 1
 4357 0962 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4358 0964 022B     		cmp	r3, #2
 4359 0966 E5D9     		bls	.L276
1001:.\Protocolo.c ****                     		}
1002:.\Protocolo.c ****                     	}                         
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 98


1003:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4360              		.loc 1 1003 0 is_stmt 1
 4361 0968 0023     		movs	r3, #0
 4362 096a FB73     		strb	r3, [r7, #15]
 4363 096c 0BE0     		b	.L277
 4364              	.L278:
1004:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4365              		.loc 1 1004 0 discriminator 2
 4366 096e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4367 0970 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4368 0972 0432     		adds	r2, r2, #4
 4369 0974 6549     		ldr	r1, .L313
 4370 0976 8A5C     		ldrb	r2, [r1, r2]
 4371 0978 D2B2     		uxtb	r2, r2
 4372 097a 6549     		ldr	r1, .L313+4
 4373 097c 0B44     		add	r3, r3, r1
 4374 097e 9A70     		strb	r2, [r3, #2]
1003:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4375              		.loc 1 1003 0 discriminator 2
 4376 0980 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4377 0982 0133     		adds	r3, r3, #1
 4378 0984 FB73     		strb	r3, [r7, #15]
 4379              	.L277:
1003:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4380              		.loc 1 1003 0 is_stmt 0 discriminator 1
 4381 0986 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4382 0988 0B2B     		cmp	r3, #11
 4383 098a F0D9     		bls	.L278
1005:.\Protocolo.c **** 						}
1006:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4384              		.loc 1 1006 0 is_stmt 1
 4385 098c 0023     		movs	r3, #0
 4386 098e FB73     		strb	r3, [r7, #15]
 4387 0990 15E0     		b	.L279
 4388              	.L281:
1007:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 4389              		.loc 1 1007 0
 4390 0992 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4391 0994 1133     		adds	r3, r3, #17
 4392 0996 5D4A     		ldr	r2, .L313
 4393 0998 D35C     		ldrb	r3, [r2, r3]
 4394 099a DBB2     		uxtb	r3, r3
 4395 099c 002B     		cmp	r3, #0
 4396 099e 01D1     		bne	.L280
1008:.\Protocolo.c ****                                 return 0;
 4397              		.loc 1 1008 0
 4398 09a0 0023     		movs	r3, #0
 4399 09a2 08E1     		b	.L168
 4400              	.L280:
1009:.\Protocolo.c ****                             }                             
1010:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4401              		.loc 1 1010 0
 4402 09a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4403 09a6 0C33     		adds	r3, r3, #12
 4404 09a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4405 09aa 1132     		adds	r2, r2, #17
 4406 09ac 5749     		ldr	r1, .L313
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 99


 4407 09ae 8A5C     		ldrb	r2, [r1, r2]
 4408 09b0 D2B2     		uxtb	r2, r2
 4409 09b2 5749     		ldr	r1, .L313+4
 4410 09b4 0B44     		add	r3, r3, r1
 4411 09b6 9A70     		strb	r2, [r3, #2]
1006:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4412              		.loc 1 1006 0
 4413 09b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4414 09ba 0133     		adds	r3, r3, #1
 4415 09bc FB73     		strb	r3, [r7, #15]
 4416              	.L279:
1006:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4417              		.loc 1 1006 0 is_stmt 0 discriminator 1
 4418 09be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4419 09c0 0B2B     		cmp	r3, #11
 4420 09c2 E6D9     		bls	.L281
1011:.\Protocolo.c **** 						}
1012:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 4421              		.loc 1 1012 0 is_stmt 1
 4422 09c4 0023     		movs	r3, #0
 4423 09c6 FB73     		strb	r3, [r7, #15]
 4424 09c8 0CE0     		b	.L282
 4425              	.L283:
1013:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 4426              		.loc 1 1013 0 discriminator 2
 4427 09ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4428 09cc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4429 09ce 1E32     		adds	r2, r2, #30
 4430 09d0 4E49     		ldr	r1, .L313
 4431 09d2 8A5C     		ldrb	r2, [r1, r2]
 4432 09d4 D2B2     		uxtb	r2, r2
 4433 09d6 4E49     		ldr	r1, .L313+4
 4434 09d8 0B44     		add	r3, r3, r1
 4435 09da 83F84A20 		strb	r2, [r3, #74]
1012:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 4436              		.loc 1 1012 0 discriminator 2
 4437 09de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4438 09e0 0133     		adds	r3, r3, #1
 4439 09e2 FB73     		strb	r3, [r7, #15]
 4440              	.L282:
1012:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 4441              		.loc 1 1012 0 is_stmt 0 discriminator 1
 4442 09e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4443 09e6 042B     		cmp	r3, #4
 4444 09e8 EFD9     		bls	.L283
1014:.\Protocolo.c **** 						}				
1015:.\Protocolo.c **** 						if(nmangueras==2){
 4445              		.loc 1 1015 0 is_stmt 1
 4446 09ea BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4447 09ec 022B     		cmp	r3, #2
 4448 09ee 44D1     		bne	.L284
1016:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4449              		.loc 1 1016 0
 4450 09f0 0023     		movs	r3, #0
 4451 09f2 FB73     		strb	r3, [r7, #15]
 4452 09f4 0BE0     		b	.L285
 4453              	.L286:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 100


1017:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 4454              		.loc 1 1017 0 discriminator 2
 4455 09f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4456 09f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4457 09fa 2E32     		adds	r2, r2, #46
 4458 09fc 4349     		ldr	r1, .L313
 4459 09fe 8A5C     		ldrb	r2, [r1, r2]
 4460 0a00 D2B2     		uxtb	r2, r2
 4461 0a02 4349     		ldr	r1, .L313+4
 4462 0a04 0B44     		add	r3, r3, r1
 4463 0a06 9A76     		strb	r2, [r3, #26]
1016:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4464              		.loc 1 1016 0 discriminator 2
 4465 0a08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4466 0a0a 0133     		adds	r3, r3, #1
 4467 0a0c FB73     		strb	r3, [r7, #15]
 4468              	.L285:
1016:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4469              		.loc 1 1016 0 is_stmt 0 discriminator 1
 4470 0a0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4471 0a10 0B2B     		cmp	r3, #11
 4472 0a12 F0D9     		bls	.L286
1018:.\Protocolo.c **** 							}
1019:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4473              		.loc 1 1019 0 is_stmt 1
 4474 0a14 0023     		movs	r3, #0
 4475 0a16 FB73     		strb	r3, [r7, #15]
 4476 0a18 15E0     		b	.L287
 4477              	.L289:
1020:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 4478              		.loc 1 1020 0
 4479 0a1a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4480 0a1c 3B33     		adds	r3, r3, #59
 4481 0a1e 3B4A     		ldr	r2, .L313
 4482 0a20 D35C     		ldrb	r3, [r2, r3]
 4483 0a22 DBB2     		uxtb	r3, r3
 4484 0a24 002B     		cmp	r3, #0
 4485 0a26 01D1     		bne	.L288
1021:.\Protocolo.c ****                                     return 0;
 4486              		.loc 1 1021 0
 4487 0a28 0023     		movs	r3, #0
 4488 0a2a C4E0     		b	.L168
 4489              	.L288:
1022:.\Protocolo.c ****                                 }                                 
1023:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4490              		.loc 1 1023 0
 4491 0a2c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4492 0a2e 0C33     		adds	r3, r3, #12
 4493 0a30 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4494 0a32 3B32     		adds	r2, r2, #59
 4495 0a34 3549     		ldr	r1, .L313
 4496 0a36 8A5C     		ldrb	r2, [r1, r2]
 4497 0a38 D2B2     		uxtb	r2, r2
 4498 0a3a 3549     		ldr	r1, .L313+4
 4499 0a3c 0B44     		add	r3, r3, r1
 4500 0a3e 9A76     		strb	r2, [r3, #26]
1019:.\Protocolo.c **** 							for(x=0;x<=11;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 101


 4501              		.loc 1 1019 0
 4502 0a40 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4503 0a42 0133     		adds	r3, r3, #1
 4504 0a44 FB73     		strb	r3, [r7, #15]
 4505              	.L287:
1019:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4506              		.loc 1 1019 0 is_stmt 0 discriminator 1
 4507 0a46 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4508 0a48 0B2B     		cmp	r3, #11
 4509 0a4a E6D9     		bls	.L289
1024:.\Protocolo.c **** 							}
1025:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4510              		.loc 1 1025 0 is_stmt 1
 4511 0a4c 0023     		movs	r3, #0
 4512 0a4e FB73     		strb	r3, [r7, #15]
 4513 0a50 0CE0     		b	.L290
 4514              	.L291:
1026:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4515              		.loc 1 1026 0 discriminator 2
 4516 0a52 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4517 0a54 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4518 0a56 4832     		adds	r2, r2, #72
 4519 0a58 2C49     		ldr	r1, .L313
 4520 0a5a 8A5C     		ldrb	r2, [r1, r2]
 4521 0a5c D2B2     		uxtb	r2, r2
 4522 0a5e 2C49     		ldr	r1, .L313+4
 4523 0a60 0B44     		add	r3, r3, r1
 4524 0a62 83F84F20 		strb	r2, [r3, #79]
1025:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4525              		.loc 1 1025 0 discriminator 2
 4526 0a66 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4527 0a68 0133     		adds	r3, r3, #1
 4528 0a6a FB73     		strb	r3, [r7, #15]
 4529              	.L290:
1025:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4530              		.loc 1 1025 0 is_stmt 0 discriminator 1
 4531 0a6c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4532 0a6e 042B     		cmp	r3, #4
 4533 0a70 EFD9     		bls	.L291
1027:.\Protocolo.c **** 							}
1028:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4534              		.loc 1 1028 0 is_stmt 1
 4535 0a72 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1029:.\Protocolo.c ****     						return 2;                            
 4536              		.loc 1 1029 0
 4537 0a76 0223     		movs	r3, #2
 4538 0a78 9DE0     		b	.L168
 4539              	.L284:
1030:.\Protocolo.c **** 						}
1031:.\Protocolo.c **** 						if(nmangueras==3){
 4540              		.loc 1 1031 0
 4541 0a7a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4542 0a7c 032B     		cmp	r3, #3
 4543 0a7e 40F08D80 		bne	.L292
1032:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4544              		.loc 1 1032 0
 4545 0a82 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 102


 4546 0a84 FB73     		strb	r3, [r7, #15]
 4547 0a86 0BE0     		b	.L293
 4548              	.L294:
1033:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 4549              		.loc 1 1033 0 discriminator 2
 4550 0a88 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4551 0a8a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4552 0a8c 2E32     		adds	r2, r2, #46
 4553 0a8e 1F49     		ldr	r1, .L313
 4554 0a90 8A5C     		ldrb	r2, [r1, r2]
 4555 0a92 D2B2     		uxtb	r2, r2
 4556 0a94 1E49     		ldr	r1, .L313+4
 4557 0a96 0B44     		add	r3, r3, r1
 4558 0a98 9A76     		strb	r2, [r3, #26]
1032:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4559              		.loc 1 1032 0 discriminator 2
 4560 0a9a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4561 0a9c 0133     		adds	r3, r3, #1
 4562 0a9e FB73     		strb	r3, [r7, #15]
 4563              	.L293:
1032:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4564              		.loc 1 1032 0 is_stmt 0 discriminator 1
 4565 0aa0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4566 0aa2 0B2B     		cmp	r3, #11
 4567 0aa4 F0D9     		bls	.L294
1034:.\Protocolo.c **** 							}
1035:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4568              		.loc 1 1035 0 is_stmt 1
 4569 0aa6 0023     		movs	r3, #0
 4570 0aa8 FB73     		strb	r3, [r7, #15]
 4571 0aaa 15E0     		b	.L295
 4572              	.L297:
1036:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 4573              		.loc 1 1036 0
 4574 0aac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4575 0aae 3B33     		adds	r3, r3, #59
 4576 0ab0 164A     		ldr	r2, .L313
 4577 0ab2 D35C     		ldrb	r3, [r2, r3]
 4578 0ab4 DBB2     		uxtb	r3, r3
 4579 0ab6 002B     		cmp	r3, #0
 4580 0ab8 01D1     		bne	.L296
1037:.\Protocolo.c ****                                     return 0;
 4581              		.loc 1 1037 0
 4582 0aba 0023     		movs	r3, #0
 4583 0abc 7BE0     		b	.L168
 4584              	.L296:
1038:.\Protocolo.c ****                                 }                                 
1039:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4585              		.loc 1 1039 0
 4586 0abe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4587 0ac0 0C33     		adds	r3, r3, #12
 4588 0ac2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4589 0ac4 3B32     		adds	r2, r2, #59
 4590 0ac6 1149     		ldr	r1, .L313
 4591 0ac8 8A5C     		ldrb	r2, [r1, r2]
 4592 0aca D2B2     		uxtb	r2, r2
 4593 0acc 1049     		ldr	r1, .L313+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 103


 4594 0ace 0B44     		add	r3, r3, r1
 4595 0ad0 9A76     		strb	r2, [r3, #26]
1035:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4596              		.loc 1 1035 0
 4597 0ad2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4598 0ad4 0133     		adds	r3, r3, #1
 4599 0ad6 FB73     		strb	r3, [r7, #15]
 4600              	.L295:
1035:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4601              		.loc 1 1035 0 is_stmt 0 discriminator 1
 4602 0ad8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4603 0ada 0B2B     		cmp	r3, #11
 4604 0adc E6D9     		bls	.L297
1040:.\Protocolo.c **** 							}
1041:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4605              		.loc 1 1041 0 is_stmt 1
 4606 0ade 0023     		movs	r3, #0
 4607 0ae0 FB73     		strb	r3, [r7, #15]
 4608 0ae2 0CE0     		b	.L298
 4609              	.L299:
1042:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4610              		.loc 1 1042 0 discriminator 2
 4611 0ae4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4612 0ae6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4613 0ae8 4832     		adds	r2, r2, #72
 4614 0aea 0849     		ldr	r1, .L313
 4615 0aec 8A5C     		ldrb	r2, [r1, r2]
 4616 0aee D2B2     		uxtb	r2, r2
 4617 0af0 0749     		ldr	r1, .L313+4
 4618 0af2 0B44     		add	r3, r3, r1
 4619 0af4 83F84F20 		strb	r2, [r3, #79]
1041:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4620              		.loc 1 1041 0 discriminator 2
 4621 0af8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4622 0afa 0133     		adds	r3, r3, #1
 4623 0afc FB73     		strb	r3, [r7, #15]
 4624              	.L298:
1041:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4625              		.loc 1 1041 0 is_stmt 0 discriminator 1
 4626 0afe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4627 0b00 042B     		cmp	r3, #4
 4628 0b02 EFD9     		bls	.L299
1043:.\Protocolo.c **** 							}					
1044:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4629              		.loc 1 1044 0 is_stmt 1
 4630 0b04 0023     		movs	r3, #0
 4631 0b06 FB73     		strb	r3, [r7, #15]
 4632 0b08 11E0     		b	.L300
 4633              	.L314:
 4634 0b0a 00BF     		.align	2
 4635              	.L313:
 4636 0b0c 00000000 		.word	Surtidor_rxBuffer
 4637 0b10 00000000 		.word	lado2
 4638              	.L301:
1045:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 4639              		.loc 1 1045 0 discriminator 2
 4640 0b14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 104


 4641 0b16 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4642 0b18 5832     		adds	r2, r2, #88
 4643 0b1a 2949     		ldr	r1, .L315
 4644 0b1c 8A5C     		ldrb	r2, [r1, r2]
 4645 0b1e D2B2     		uxtb	r2, r2
 4646 0b20 2849     		ldr	r1, .L315+4
 4647 0b22 0B44     		add	r3, r3, r1
 4648 0b24 83F83220 		strb	r2, [r3, #50]
1044:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4649              		.loc 1 1044 0 discriminator 2
 4650 0b28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4651 0b2a 0133     		adds	r3, r3, #1
 4652 0b2c FB73     		strb	r3, [r7, #15]
 4653              	.L300:
1044:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4654              		.loc 1 1044 0 is_stmt 0 discriminator 1
 4655 0b2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4656 0b30 0B2B     		cmp	r3, #11
 4657 0b32 EFD9     		bls	.L301
1046:.\Protocolo.c **** 							}
1047:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4658              		.loc 1 1047 0 is_stmt 1
 4659 0b34 0023     		movs	r3, #0
 4660 0b36 FB73     		strb	r3, [r7, #15]
 4661 0b38 16E0     		b	.L302
 4662              	.L304:
1048:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+101]==0){
 4663              		.loc 1 1048 0
 4664 0b3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4665 0b3c 6533     		adds	r3, r3, #101
 4666 0b3e 204A     		ldr	r2, .L315
 4667 0b40 D35C     		ldrb	r3, [r2, r3]
 4668 0b42 DBB2     		uxtb	r3, r3
 4669 0b44 002B     		cmp	r3, #0
 4670 0b46 01D1     		bne	.L303
1049:.\Protocolo.c ****                                     return 0;
 4671              		.loc 1 1049 0
 4672 0b48 0023     		movs	r3, #0
 4673 0b4a 34E0     		b	.L168
 4674              	.L303:
1050:.\Protocolo.c ****                                 }                                 
1051:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4675              		.loc 1 1051 0
 4676 0b4c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4677 0b4e 0C33     		adds	r3, r3, #12
 4678 0b50 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4679 0b52 6532     		adds	r2, r2, #101
 4680 0b54 1A49     		ldr	r1, .L315
 4681 0b56 8A5C     		ldrb	r2, [r1, r2]
 4682 0b58 D2B2     		uxtb	r2, r2
 4683 0b5a 1A49     		ldr	r1, .L315+4
 4684 0b5c 0B44     		add	r3, r3, r1
 4685 0b5e 83F83220 		strb	r2, [r3, #50]
1047:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4686              		.loc 1 1047 0
 4687 0b62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4688 0b64 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 105


 4689 0b66 FB73     		strb	r3, [r7, #15]
 4690              	.L302:
1047:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4691              		.loc 1 1047 0 is_stmt 0 discriminator 1
 4692 0b68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4693 0b6a 0B2B     		cmp	r3, #11
 4694 0b6c E5D9     		bls	.L304
1052:.\Protocolo.c **** 							}
1053:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4695              		.loc 1 1053 0 is_stmt 1
 4696 0b6e 0023     		movs	r3, #0
 4697 0b70 FB73     		strb	r3, [r7, #15]
 4698 0b72 0CE0     		b	.L305
 4699              	.L306:
1054:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4700              		.loc 1 1054 0 discriminator 2
 4701 0b74 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4702 0b76 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4703 0b78 7232     		adds	r2, r2, #114
 4704 0b7a 1149     		ldr	r1, .L315
 4705 0b7c 8A5C     		ldrb	r2, [r1, r2]
 4706 0b7e D2B2     		uxtb	r2, r2
 4707 0b80 1049     		ldr	r1, .L315+4
 4708 0b82 0B44     		add	r3, r3, r1
 4709 0b84 83F85420 		strb	r2, [r3, #84]
1053:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4710              		.loc 1 1053 0 discriminator 2
 4711 0b88 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4712 0b8a 0133     		adds	r3, r3, #1
 4713 0b8c FB73     		strb	r3, [r7, #15]
 4714              	.L305:
1053:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4715              		.loc 1 1053 0 is_stmt 0 discriminator 1
 4716 0b8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4717 0b90 042B     		cmp	r3, #4
 4718 0b92 EFD9     		bls	.L306
1055:.\Protocolo.c **** 							}
1056:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4719              		.loc 1 1056 0 is_stmt 1
 4720 0b94 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1057:.\Protocolo.c ****     						return 3;                            
 4721              		.loc 1 1057 0
 4722 0b98 0323     		movs	r3, #3
 4723 0b9a 0CE0     		b	.L168
 4724              	.L292:
1058:.\Protocolo.c **** 						}
1059:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4725              		.loc 1 1059 0
 4726 0b9c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1060:.\Protocolo.c **** 						return 1;			
 4727              		.loc 1 1060 0
 4728 0ba0 0123     		movs	r3, #1
 4729 0ba2 08E0     		b	.L168
 4730              	.L272:
1061:.\Protocolo.c **** 					}
1062:.\Protocolo.c **** 					else{
1063:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 106


 4731              		.loc 1 1063 0
 4732 0ba4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1064:.\Protocolo.c **** 						return 0;		
 4733              		.loc 1 1064 0
 4734 0ba8 0023     		movs	r3, #0
 4735 0baa 04E0     		b	.L168
 4736              	.L271:
1065:.\Protocolo.c **** 					}
1066:.\Protocolo.c **** 				}
1067:.\Protocolo.c **** 				else{
1068:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4737              		.loc 1 1068 0
 4738 0bac FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1069:.\Protocolo.c **** 					return 0;		
 4739              		.loc 1 1069 0
 4740 0bb0 0023     		movs	r3, #0
 4741 0bb2 00E0     		b	.L168
 4742              	.L154:
1070:.\Protocolo.c **** 				}				
1071:.\Protocolo.c **** 			}		
1072:.\Protocolo.c **** 		}
1073:.\Protocolo.c **** 	}
1074:.\Protocolo.c **** 	else{
1075:.\Protocolo.c **** 		return 0;
 4743              		.loc 1 1075 0
 4744 0bb4 0023     		movs	r3, #0
 4745              	.L168:
1076:.\Protocolo.c **** 	}
1077:.\Protocolo.c **** }
 4746              		.loc 1 1077 0
 4747 0bb6 1846     		mov	r0, r3
 4748 0bb8 1037     		adds	r7, r7, #16
 4749 0bba BD46     		mov	sp, r7
 4750              		@ sp needed
 4751 0bbc 80BD     		pop	{r7, pc}
 4752              	.L316:
 4753 0bbe 00BF     		.align	2
 4754              	.L315:
 4755 0bc0 00000000 		.word	Surtidor_rxBuffer
 4756 0bc4 00000000 		.word	lado2
 4757              		.cfi_endproc
 4758              	.LFE72:
 4759              		.size	totales, .-totales
 4760              		.text
 4761              	.Letext0:
 4762              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 4763              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 4764              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4765              		.file 5 ".\\VariablesG.h"
 4766              		.file 6 "Generated_Source\\PSoC5/Surtidor.h"
 4767              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 4768              		.section	.debug_info,"",%progbits
 4769              	.Ldebug_info0:
 4770 0000 F80A0000 		.4byte	0xaf8
 4771 0004 0400     		.2byte	0x4
 4772 0006 00000000 		.4byte	.Ldebug_abbrev0
 4773 000a 04       		.byte	0x4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 107


 4774 000b 01       		.uleb128 0x1
 4775 000c FD030000 		.4byte	.LASF116
 4776 0010 01       		.byte	0x1
 4777 0011 31010000 		.4byte	.LASF117
 4778 0015 A0030000 		.4byte	.LASF118
 4779 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4780 001d 00000000 		.4byte	0
 4781 0021 00000000 		.4byte	.Ldebug_line0
 4782 0025 02       		.uleb128 0x2
 4783 0026 01       		.byte	0x1
 4784 0027 06       		.byte	0x6
 4785 0028 A0040000 		.4byte	.LASF0
 4786 002c 02       		.uleb128 0x2
 4787 002d 01       		.byte	0x1
 4788 002e 08       		.byte	0x8
 4789 002f E4030000 		.4byte	.LASF1
 4790 0033 02       		.uleb128 0x2
 4791 0034 02       		.byte	0x2
 4792 0035 05       		.byte	0x5
 4793 0036 0A030000 		.4byte	.LASF2
 4794 003a 02       		.uleb128 0x2
 4795 003b 02       		.byte	0x2
 4796 003c 07       		.byte	0x7
 4797 003d C2040000 		.4byte	.LASF3
 4798 0041 03       		.uleb128 0x3
 4799 0042 6C000000 		.4byte	.LASF9
 4800 0046 02       		.byte	0x2
 4801 0047 37       		.byte	0x37
 4802 0048 4C000000 		.4byte	0x4c
 4803 004c 02       		.uleb128 0x2
 4804 004d 04       		.byte	0x4
 4805 004e 05       		.byte	0x5
 4806 004f 14030000 		.4byte	.LASF4
 4807 0053 02       		.uleb128 0x2
 4808 0054 04       		.byte	0x4
 4809 0055 07       		.byte	0x7
 4810 0056 7B030000 		.4byte	.LASF5
 4811 005a 02       		.uleb128 0x2
 4812 005b 08       		.byte	0x8
 4813 005c 05       		.byte	0x5
 4814 005d 75020000 		.4byte	.LASF6
 4815 0061 02       		.uleb128 0x2
 4816 0062 08       		.byte	0x8
 4817 0063 07       		.byte	0x7
 4818 0064 1A010000 		.4byte	.LASF7
 4819 0068 04       		.uleb128 0x4
 4820 0069 04       		.byte	0x4
 4821 006a 05       		.byte	0x5
 4822 006b 696E7400 		.ascii	"int\000"
 4823 006f 02       		.uleb128 0x2
 4824 0070 04       		.byte	0x4
 4825 0071 07       		.byte	0x7
 4826 0072 57000000 		.4byte	.LASF8
 4827 0076 03       		.uleb128 0x3
 4828 0077 8D030000 		.4byte	.LASF10
 4829 007b 03       		.byte	0x3
 4830 007c 41       		.byte	0x41
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 108


 4831 007d 41000000 		.4byte	0x41
 4832 0081 03       		.uleb128 0x3
 4833 0082 D5040000 		.4byte	.LASF11
 4834 0086 04       		.byte	0x4
 4835 0087 B4       		.byte	0xb4
 4836 0088 2C000000 		.4byte	0x2c
 4837 008c 03       		.uleb128 0x3
 4838 008d 12020000 		.4byte	.LASF12
 4839 0091 04       		.byte	0x4
 4840 0092 B5       		.byte	0xb5
 4841 0093 3A000000 		.4byte	0x3a
 4842 0097 02       		.uleb128 0x2
 4843 0098 04       		.byte	0x4
 4844 0099 04       		.byte	0x4
 4845 009a DC000000 		.4byte	.LASF13
 4846 009e 02       		.uleb128 0x2
 4847 009f 08       		.byte	0x8
 4848 00a0 04       		.byte	0x4
 4849 00a1 DB040000 		.4byte	.LASF14
 4850 00a5 02       		.uleb128 0x2
 4851 00a6 01       		.byte	0x1
 4852 00a7 08       		.byte	0x8
 4853 00a8 F7010000 		.4byte	.LASF15
 4854 00ac 05       		.uleb128 0x5
 4855 00ad 81000000 		.4byte	0x81
 4856 00b1 05       		.uleb128 0x5
 4857 00b2 8C000000 		.4byte	0x8c
 4858 00b6 02       		.uleb128 0x2
 4859 00b7 04       		.byte	0x4
 4860 00b8 07       		.byte	0x7
 4861 00b9 72030000 		.4byte	.LASF16
 4862 00bd 06       		.uleb128 0x6
 4863 00be 81000000 		.4byte	0x81
 4864 00c2 CD000000 		.4byte	0xcd
 4865 00c6 07       		.uleb128 0x7
 4866 00c7 B6000000 		.4byte	0xb6
 4867 00cb 03       		.byte	0x3
 4868 00cc 00       		.byte	0
 4869 00cd 08       		.uleb128 0x8
 4870 00ce 2A030000 		.4byte	.LASF21
 4871 00d2 5D       		.byte	0x5d
 4872 00d3 05       		.byte	0x5
 4873 00d4 55       		.byte	0x55
 4874 00d5 22010000 		.4byte	0x122
 4875 00d9 09       		.uleb128 0x9
 4876 00da 64697200 		.ascii	"dir\000"
 4877 00de 05       		.byte	0x5
 4878 00df 56       		.byte	0x56
 4879 00e0 AC000000 		.4byte	0xac
 4880 00e4 00       		.byte	0
 4881 00e5 0A       		.uleb128 0xa
 4882 00e6 D8020000 		.4byte	.LASF17
 4883 00ea 05       		.byte	0x5
 4884 00eb 57       		.byte	0x57
 4885 00ec AC000000 		.4byte	0xac
 4886 00f0 01       		.byte	0x1
 4887 00f1 0A       		.uleb128 0xa
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 109


 4888 00f2 38020000 		.4byte	.LASF18
 4889 00f6 05       		.byte	0x5
 4890 00f7 58       		.byte	0x58
 4891 00f8 38010000 		.4byte	0x138
 4892 00fc 02       		.byte	0x2
 4893 00fd 09       		.uleb128 0x9
 4894 00fe 70707500 		.ascii	"ppu\000"
 4895 0102 05       		.byte	0x5
 4896 0103 59       		.byte	0x59
 4897 0104 53010000 		.4byte	0x153
 4898 0108 4A       		.byte	0x4a
 4899 0109 0A       		.uleb128 0xa
 4900 010a 01050000 		.4byte	.LASF19
 4901 010e 05       		.byte	0x5
 4902 010f 5A       		.byte	0x5a
 4903 0110 6E010000 		.4byte	0x16e
 4904 0114 59       		.byte	0x59
 4905 0115 0A       		.uleb128 0xa
 4906 0116 08020000 		.4byte	.LASF20
 4907 011a 05       		.byte	0x5
 4908 011b 5B       		.byte	0x5b
 4909 011c AC000000 		.4byte	0xac
 4910 0120 5C       		.byte	0x5c
 4911 0121 00       		.byte	0
 4912 0122 06       		.uleb128 0x6
 4913 0123 81000000 		.4byte	0x81
 4914 0127 38010000 		.4byte	0x138
 4915 012b 07       		.uleb128 0x7
 4916 012c B6000000 		.4byte	0xb6
 4917 0130 02       		.byte	0x2
 4918 0131 07       		.uleb128 0x7
 4919 0132 B6000000 		.4byte	0xb6
 4920 0136 17       		.byte	0x17
 4921 0137 00       		.byte	0
 4922 0138 05       		.uleb128 0x5
 4923 0139 22010000 		.4byte	0x122
 4924 013d 06       		.uleb128 0x6
 4925 013e 81000000 		.4byte	0x81
 4926 0142 53010000 		.4byte	0x153
 4927 0146 07       		.uleb128 0x7
 4928 0147 B6000000 		.4byte	0xb6
 4929 014b 02       		.byte	0x2
 4930 014c 07       		.uleb128 0x7
 4931 014d B6000000 		.4byte	0xb6
 4932 0151 04       		.byte	0x4
 4933 0152 00       		.byte	0
 4934 0153 05       		.uleb128 0x5
 4935 0154 3D010000 		.4byte	0x13d
 4936 0158 06       		.uleb128 0x6
 4937 0159 81000000 		.4byte	0x81
 4938 015d 6E010000 		.4byte	0x16e
 4939 0161 07       		.uleb128 0x7
 4940 0162 B6000000 		.4byte	0xb6
 4941 0166 02       		.byte	0x2
 4942 0167 07       		.uleb128 0x7
 4943 0168 B6000000 		.4byte	0xb6
 4944 016c 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 110


 4945 016d 00       		.byte	0
 4946 016e 05       		.uleb128 0x5
 4947 016f 58010000 		.4byte	0x158
 4948 0173 08       		.uleb128 0x8
 4949 0174 BE020000 		.4byte	.LASF22
 4950 0178 61       		.byte	0x61
 4951 0179 05       		.byte	0x5
 4952 017a 6C       		.byte	0x6c
 4953 017b 4A020000 		.4byte	0x24a
 4954 017f 0A       		.uleb128 0xa
 4955 0180 A8000000 		.4byte	.LASF23
 4956 0184 05       		.byte	0x5
 4957 0185 6D       		.byte	0x6d
 4958 0186 81000000 		.4byte	0x81
 4959 018a 00       		.byte	0
 4960 018b 0A       		.uleb128 0xa
 4961 018c 01050000 		.4byte	.LASF19
 4962 0190 05       		.byte	0x5
 4963 0191 6E       		.byte	0x6e
 4964 0192 81000000 		.4byte	0x81
 4965 0196 01       		.byte	0x1
 4966 0197 09       		.uleb128 0x9
 4967 0198 70707500 		.ascii	"ppu\000"
 4968 019c 05       		.byte	0x5
 4969 019d 6F       		.byte	0x6f
 4970 019e 4A020000 		.4byte	0x24a
 4971 01a2 02       		.byte	0x2
 4972 01a3 0A       		.uleb128 0xa
 4973 01a4 C5020000 		.4byte	.LASF24
 4974 01a8 05       		.byte	0x5
 4975 01a9 70       		.byte	0x70
 4976 01aa 5A020000 		.4byte	0x25a
 4977 01ae 07       		.byte	0x7
 4978 01af 0A       		.uleb128 0xa
 4979 01b0 8C010000 		.4byte	.LASF25
 4980 01b4 05       		.byte	0x5
 4981 01b5 71       		.byte	0x71
 4982 01b6 5A020000 		.4byte	0x25a
 4983 01ba 10       		.byte	0x10
 4984 01bb 0A       		.uleb128 0xa
 4985 01bc 83020000 		.4byte	.LASF26
 4986 01c0 05       		.byte	0x5
 4987 01c1 72       		.byte	0x72
 4988 01c2 81000000 		.4byte	0x81
 4989 01c6 19       		.byte	0x19
 4990 01c7 0A       		.uleb128 0xa
 4991 01c8 F8040000 		.4byte	.LASF27
 4992 01cc 05       		.byte	0x5
 4993 01cd 73       		.byte	0x73
 4994 01ce 81000000 		.4byte	0x81
 4995 01d2 1A       		.byte	0x1a
 4996 01d3 0A       		.uleb128 0xa
 4997 01d4 D5000000 		.4byte	.LASF28
 4998 01d8 05       		.byte	0x5
 4999 01d9 74       		.byte	0x74
 5000 01da 6A020000 		.4byte	0x26a
 5001 01de 1B       		.byte	0x1b
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 111


 5002 01df 09       		.uleb128 0x9
 5003 01e0 696400   		.ascii	"id\000"
 5004 01e3 05       		.byte	0x5
 5005 01e4 75       		.byte	0x75
 5006 01e5 7A020000 		.4byte	0x27a
 5007 01e9 23       		.byte	0x23
 5008 01ea 09       		.uleb128 0x9
 5009 01eb 6B6D00   		.ascii	"km\000"
 5010 01ee 05       		.byte	0x5
 5011 01ef 76       		.byte	0x76
 5012 01f0 8A020000 		.4byte	0x28a
 5013 01f4 33       		.byte	0x33
 5014 01f5 0A       		.uleb128 0xa
 5015 01f6 7E010000 		.4byte	.LASF29
 5016 01fa 05       		.byte	0x5
 5017 01fb 77       		.byte	0x77
 5018 01fc 5A020000 		.4byte	0x25a
 5019 0200 3E       		.byte	0x3e
 5020 0201 0A       		.uleb128 0xa
 5021 0202 11010000 		.4byte	.LASF30
 5022 0206 05       		.byte	0x5
 5023 0207 78       		.byte	0x78
 5024 0208 81000000 		.4byte	0x81
 5025 020c 47       		.byte	0x47
 5026 020d 0A       		.uleb128 0xa
 5027 020e 27020000 		.4byte	.LASF31
 5028 0212 05       		.byte	0x5
 5029 0213 79       		.byte	0x79
 5030 0214 81000000 		.4byte	0x81
 5031 0218 48       		.byte	0x48
 5032 0219 0A       		.uleb128 0xa
 5033 021a 9B020000 		.4byte	.LASF32
 5034 021e 05       		.byte	0x5
 5035 021f 7A       		.byte	0x7a
 5036 0220 8A020000 		.4byte	0x28a
 5037 0224 49       		.byte	0x49
 5038 0225 0A       		.uleb128 0xa
 5039 0226 00000000 		.4byte	.LASF33
 5040 022a 05       		.byte	0x5
 5041 022b 7B       		.byte	0x7b
 5042 022c 8A020000 		.4byte	0x28a
 5043 0230 54       		.byte	0x54
 5044 0231 0A       		.uleb128 0xa
 5045 0232 32020000 		.4byte	.LASF34
 5046 0236 05       		.byte	0x5
 5047 0237 7C       		.byte	0x7c
 5048 0238 81000000 		.4byte	0x81
 5049 023c 5F       		.byte	0x5f
 5050 023d 0A       		.uleb128 0xa
 5051 023e 95030000 		.4byte	.LASF35
 5052 0242 05       		.byte	0x5
 5053 0243 7D       		.byte	0x7d
 5054 0244 81000000 		.4byte	0x81
 5055 0248 60       		.byte	0x60
 5056 0249 00       		.byte	0
 5057 024a 06       		.uleb128 0x6
 5058 024b 81000000 		.4byte	0x81
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 112


 5059 024f 5A020000 		.4byte	0x25a
 5060 0253 07       		.uleb128 0x7
 5061 0254 B6000000 		.4byte	0xb6
 5062 0258 04       		.byte	0x4
 5063 0259 00       		.byte	0
 5064 025a 06       		.uleb128 0x6
 5065 025b 81000000 		.4byte	0x81
 5066 025f 6A020000 		.4byte	0x26a
 5067 0263 07       		.uleb128 0x7
 5068 0264 B6000000 		.4byte	0xb6
 5069 0268 08       		.byte	0x8
 5070 0269 00       		.byte	0
 5071 026a 06       		.uleb128 0x6
 5072 026b 81000000 		.4byte	0x81
 5073 026f 7A020000 		.4byte	0x27a
 5074 0273 07       		.uleb128 0x7
 5075 0274 B6000000 		.4byte	0xb6
 5076 0278 07       		.byte	0x7
 5077 0279 00       		.byte	0
 5078 027a 06       		.uleb128 0x6
 5079 027b 81000000 		.4byte	0x81
 5080 027f 8A020000 		.4byte	0x28a
 5081 0283 07       		.uleb128 0x7
 5082 0284 B6000000 		.4byte	0xb6
 5083 0288 0F       		.byte	0xf
 5084 0289 00       		.byte	0
 5085 028a 06       		.uleb128 0x6
 5086 028b 81000000 		.4byte	0x81
 5087 028f 9A020000 		.4byte	0x29a
 5088 0293 07       		.uleb128 0x7
 5089 0294 B6000000 		.4byte	0xb6
 5090 0298 0A       		.byte	0xa
 5091 0299 00       		.byte	0
 5092 029a 0B       		.uleb128 0xb
 5093 029b 07050000 		.4byte	.LASF119
 5094 029f 01       		.byte	0x1
 5095 02a0 3F       		.byte	0x3f
 5096 02a1 00000000 		.4byte	.LFB63
 5097 02a5 14000000 		.4byte	.LFE63-.LFB63
 5098 02a9 01       		.uleb128 0x1
 5099 02aa 9C       		.byte	0x9c
 5100 02ab 0C       		.uleb128 0xc
 5101 02ac F2030000 		.4byte	.LASF36
 5102 02b0 01       		.byte	0x1
 5103 02b1 56       		.byte	0x56
 5104 02b2 81000000 		.4byte	0x81
 5105 02b6 00000000 		.4byte	.LFB64
 5106 02ba 98000000 		.4byte	.LFE64-.LFB64
 5107 02be 01       		.uleb128 0x1
 5108 02bf 9C       		.byte	0x9c
 5109 02c0 E1020000 		.4byte	0x2e1
 5110 02c4 0D       		.uleb128 0xd
 5111 02c5 64697200 		.ascii	"dir\000"
 5112 02c9 01       		.byte	0x1
 5113 02ca 56       		.byte	0x56
 5114 02cb 81000000 		.4byte	0x81
 5115 02cf 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 113


 5116 02d0 91       		.byte	0x91
 5117 02d1 6F       		.sleb128 -17
 5118 02d2 0E       		.uleb128 0xe
 5119 02d3 D8020000 		.4byte	.LASF17
 5120 02d7 01       		.byte	0x1
 5121 02d8 57       		.byte	0x57
 5122 02d9 81000000 		.4byte	0x81
 5123 02dd 02       		.uleb128 0x2
 5124 02de 91       		.byte	0x91
 5125 02df 77       		.sleb128 -9
 5126 02e0 00       		.byte	0
 5127 02e1 0C       		.uleb128 0xc
 5128 02e2 84010000 		.4byte	.LASF37
 5129 02e6 01       		.byte	0x1
 5130 02e7 86       		.byte	0x86
 5131 02e8 81000000 		.4byte	0x81
 5132 02ec 00000000 		.4byte	.LFB65
 5133 02f0 A0000000 		.4byte	.LFE65-.LFB65
 5134 02f4 01       		.uleb128 0x1
 5135 02f5 9C       		.byte	0x9c
 5136 02f6 07030000 		.4byte	0x307
 5137 02fa 0F       		.uleb128 0xf
 5138 02fb 7800     		.ascii	"x\000"
 5139 02fd 01       		.byte	0x1
 5140 02fe 87       		.byte	0x87
 5141 02ff 81000000 		.4byte	0x81
 5142 0303 02       		.uleb128 0x2
 5143 0304 91       		.byte	0x91
 5144 0305 77       		.sleb128 -9
 5145 0306 00       		.byte	0
 5146 0307 10       		.uleb128 0x10
 5147 0308 7F040000 		.4byte	.LASF41
 5148 030c 01       		.byte	0x1
 5149 030d B2       		.byte	0xb2
 5150 030e 00000000 		.4byte	.LFB66
 5151 0312 36000000 		.4byte	.LFE66-.LFB66
 5152 0316 01       		.uleb128 0x1
 5153 0317 9C       		.byte	0x9c
 5154 0318 39030000 		.4byte	0x339
 5155 031c 0D       		.uleb128 0xd
 5156 031d 76616C00 		.ascii	"val\000"
 5157 0321 01       		.byte	0x1
 5158 0322 B2       		.byte	0xb2
 5159 0323 81000000 		.4byte	0x81
 5160 0327 02       		.uleb128 0x2
 5161 0328 91       		.byte	0x91
 5162 0329 6F       		.sleb128 -17
 5163 032a 0E       		.uleb128 0xe
 5164 032b D8020000 		.4byte	.LASF17
 5165 032f 01       		.byte	0x1
 5166 0330 B3       		.byte	0xb3
 5167 0331 81000000 		.4byte	0x81
 5168 0335 02       		.uleb128 0x2
 5169 0336 91       		.byte	0x91
 5170 0337 77       		.sleb128 -9
 5171 0338 00       		.byte	0
 5172 0339 0C       		.uleb128 0xc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 114


 5173 033a 5E030000 		.4byte	.LASF38
 5174 033e 01       		.byte	0x1
 5175 033f CF       		.byte	0xcf
 5176 0340 81000000 		.4byte	0x81
 5177 0344 00000000 		.4byte	.LFB67
 5178 0348 7C010000 		.4byte	.LFE67-.LFB67
 5179 034c 01       		.uleb128 0x1
 5180 034d 9C       		.byte	0x9c
 5181 034e 89030000 		.4byte	0x389
 5182 0352 0D       		.uleb128 0xd
 5183 0353 76616C00 		.ascii	"val\000"
 5184 0357 01       		.byte	0x1
 5185 0358 CF       		.byte	0xcf
 5186 0359 81000000 		.4byte	0x81
 5187 035d 02       		.uleb128 0x2
 5188 035e 91       		.byte	0x91
 5189 035f 4F       		.sleb128 -49
 5190 0360 0E       		.uleb128 0xe
 5191 0361 E2040000 		.4byte	.LASF39
 5192 0365 01       		.byte	0x1
 5193 0366 D0       		.byte	0xd0
 5194 0367 89030000 		.4byte	0x389
 5195 036b 02       		.uleb128 0x2
 5196 036c 91       		.byte	0x91
 5197 036d 5C       		.sleb128 -36
 5198 036e 0F       		.uleb128 0xf
 5199 036f 7800     		.ascii	"x\000"
 5200 0371 01       		.byte	0x1
 5201 0372 D0       		.byte	0xd0
 5202 0373 81000000 		.4byte	0x81
 5203 0377 02       		.uleb128 0x2
 5204 0378 91       		.byte	0x91
 5205 0379 6F       		.sleb128 -17
 5206 037a 0E       		.uleb128 0xe
 5207 037b DE010000 		.4byte	.LASF40
 5208 037f 01       		.byte	0x1
 5209 0380 D0       		.byte	0xd0
 5210 0381 5A020000 		.4byte	0x25a
 5211 0385 02       		.uleb128 0x2
 5212 0386 91       		.byte	0x91
 5213 0387 50       		.sleb128 -48
 5214 0388 00       		.byte	0
 5215 0389 06       		.uleb128 0x6
 5216 038a 81000000 		.4byte	0x81
 5217 038e 99030000 		.4byte	0x399
 5218 0392 07       		.uleb128 0x7
 5219 0393 B6000000 		.4byte	0xb6
 5220 0397 12       		.byte	0x12
 5221 0398 00       		.byte	0
 5222 0399 11       		.uleb128 0x11
 5223 039a D6010000 		.4byte	.LASF42
 5224 039e 01       		.byte	0x1
 5225 039f 2001     		.2byte	0x120
 5226 03a1 00000000 		.4byte	.LFB68
 5227 03a5 24000000 		.4byte	.LFE68-.LFB68
 5228 03a9 01       		.uleb128 0x1
 5229 03aa 9C       		.byte	0x9c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 115


 5230 03ab BF030000 		.4byte	0x3bf
 5231 03af 12       		.uleb128 0x12
 5232 03b0 76616C00 		.ascii	"val\000"
 5233 03b4 01       		.byte	0x1
 5234 03b5 2001     		.2byte	0x120
 5235 03b7 81000000 		.4byte	0x81
 5236 03bb 02       		.uleb128 0x2
 5237 03bc 91       		.byte	0x91
 5238 03bd 77       		.sleb128 -9
 5239 03be 00       		.byte	0
 5240 03bf 13       		.uleb128 0x13
 5241 03c0 94010000 		.4byte	.LASF43
 5242 03c4 01       		.byte	0x1
 5243 03c5 3501     		.2byte	0x135
 5244 03c7 81000000 		.4byte	0x81
 5245 03cb 00000000 		.4byte	.LFB69
 5246 03cf 3C030000 		.4byte	.LFE69-.LFB69
 5247 03d3 01       		.uleb128 0x1
 5248 03d4 9C       		.byte	0x9c
 5249 03d5 F6030000 		.4byte	0x3f6
 5250 03d9 12       		.uleb128 0x12
 5251 03da 64697200 		.ascii	"dir\000"
 5252 03de 01       		.byte	0x1
 5253 03df 3501     		.2byte	0x135
 5254 03e1 81000000 		.4byte	0x81
 5255 03e5 02       		.uleb128 0x2
 5256 03e6 91       		.byte	0x91
 5257 03e7 6F       		.sleb128 -17
 5258 03e8 14       		.uleb128 0x14
 5259 03e9 7800     		.ascii	"x\000"
 5260 03eb 01       		.byte	0x1
 5261 03ec 3601     		.2byte	0x136
 5262 03ee 81000000 		.4byte	0x81
 5263 03f2 02       		.uleb128 0x2
 5264 03f3 91       		.byte	0x91
 5265 03f4 77       		.sleb128 -9
 5266 03f5 00       		.byte	0
 5267 03f6 13       		.uleb128 0x13
 5268 03f7 68030000 		.4byte	.LASF44
 5269 03fb 01       		.byte	0x1
 5270 03fc 8D01     		.2byte	0x18d
 5271 03fe 81000000 		.4byte	0x81
 5272 0402 00000000 		.4byte	.LFB70
 5273 0406 7C080000 		.4byte	.LFE70-.LFB70
 5274 040a 01       		.uleb128 0x1
 5275 040b 9C       		.byte	0x9c
 5276 040c 96040000 		.4byte	0x496
 5277 0410 12       		.uleb128 0x12
 5278 0411 64697200 		.ascii	"dir\000"
 5279 0415 01       		.byte	0x1
 5280 0416 8D01     		.2byte	0x18d
 5281 0418 81000000 		.4byte	0x81
 5282 041c 02       		.uleb128 0x2
 5283 041d 91       		.byte	0x91
 5284 041e 5F       		.sleb128 -33
 5285 041f 15       		.uleb128 0x15
 5286 0420 01050000 		.4byte	.LASF19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 116


 5287 0424 01       		.byte	0x1
 5288 0425 8D01     		.2byte	0x18d
 5289 0427 81000000 		.4byte	0x81
 5290 042b 02       		.uleb128 0x2
 5291 042c 91       		.byte	0x91
 5292 042d 5E       		.sleb128 -34
 5293 042e 15       		.uleb128 0x15
 5294 042f AC040000 		.4byte	.LASF45
 5295 0433 01       		.byte	0x1
 5296 0434 8D01     		.2byte	0x18d
 5297 0436 96040000 		.4byte	0x496
 5298 043a 02       		.uleb128 0x2
 5299 043b 91       		.byte	0x91
 5300 043c 58       		.sleb128 -40
 5301 043d 15       		.uleb128 0x15
 5302 043e D5000000 		.4byte	.LASF28
 5303 0442 01       		.byte	0x1
 5304 0443 8D01     		.2byte	0x18d
 5305 0445 81000000 		.4byte	0x81
 5306 0449 02       		.uleb128 0x2
 5307 044a 91       		.byte	0x91
 5308 044b 5D       		.sleb128 -35
 5309 044c 16       		.uleb128 0x16
 5310 044d 50000000 		.4byte	.LASF46
 5311 0451 01       		.byte	0x1
 5312 0452 8E01     		.2byte	0x18e
 5313 0454 9C040000 		.4byte	0x49c
 5314 0458 02       		.uleb128 0x2
 5315 0459 91       		.byte	0x91
 5316 045a 60       		.sleb128 -32
 5317 045b 16       		.uleb128 0x16
 5318 045c B9020000 		.4byte	.LASF47
 5319 0460 01       		.byte	0x1
 5320 0461 8E01     		.2byte	0x18e
 5321 0463 81000000 		.4byte	0x81
 5322 0467 02       		.uleb128 0x2
 5323 0468 91       		.byte	0x91
 5324 0469 77       		.sleb128 -9
 5325 046a 16       		.uleb128 0x16
 5326 046b 41030000 		.4byte	.LASF48
 5327 046f 01       		.byte	0x1
 5328 0470 8E01     		.2byte	0x18e
 5329 0472 81000000 		.4byte	0x81
 5330 0476 02       		.uleb128 0x2
 5331 0477 91       		.byte	0x91
 5332 0478 76       		.sleb128 -10
 5333 0479 14       		.uleb128 0x14
 5334 047a 6900     		.ascii	"i\000"
 5335 047c 01       		.byte	0x1
 5336 047d 8E01     		.2byte	0x18e
 5337 047f 81000000 		.4byte	0x81
 5338 0483 02       		.uleb128 0x2
 5339 0484 91       		.byte	0x91
 5340 0485 75       		.sleb128 -11
 5341 0486 16       		.uleb128 0x16
 5342 0487 8B000000 		.4byte	.LASF49
 5343 048b 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 117


 5344 048c 8E01     		.2byte	0x18e
 5345 048e 81000000 		.4byte	0x81
 5346 0492 02       		.uleb128 0x2
 5347 0493 91       		.byte	0x91
 5348 0494 74       		.sleb128 -12
 5349 0495 00       		.byte	0
 5350 0496 17       		.uleb128 0x17
 5351 0497 04       		.byte	0x4
 5352 0498 81000000 		.4byte	0x81
 5353 049c 06       		.uleb128 0x6
 5354 049d 81000000 		.4byte	0x81
 5355 04a1 AC040000 		.4byte	0x4ac
 5356 04a5 07       		.uleb128 0x7
 5357 04a6 B6000000 		.4byte	0xb6
 5358 04aa 11       		.byte	0x11
 5359 04ab 00       		.byte	0
 5360 04ac 13       		.uleb128 0x13
 5361 04ad 8C020000 		.4byte	.LASF50
 5362 04b1 01       		.byte	0x1
 5363 04b2 9102     		.2byte	0x291
 5364 04b4 81000000 		.4byte	0x81
 5365 04b8 00000000 		.4byte	.LFB71
 5366 04bc 7C020000 		.4byte	.LFE71-.LFB71
 5367 04c0 01       		.uleb128 0x1
 5368 04c1 9C       		.byte	0x9c
 5369 04c2 1F050000 		.4byte	0x51f
 5370 04c6 12       		.uleb128 0x12
 5371 04c7 64697200 		.ascii	"dir\000"
 5372 04cb 01       		.byte	0x1
 5373 04cc 9102     		.2byte	0x291
 5374 04ce 81000000 		.4byte	0x81
 5375 04d2 02       		.uleb128 0x2
 5376 04d3 91       		.byte	0x91
 5377 04d4 5F       		.sleb128 -33
 5378 04d5 15       		.uleb128 0x15
 5379 04d6 76000000 		.4byte	.LASF51
 5380 04da 01       		.byte	0x1
 5381 04db 9102     		.2byte	0x291
 5382 04dd 96040000 		.4byte	0x496
 5383 04e1 02       		.uleb128 0x2
 5384 04e2 91       		.byte	0x91
 5385 04e3 58       		.sleb128 -40
 5386 04e4 15       		.uleb128 0x15
 5387 04e5 83000000 		.4byte	.LASF52
 5388 04e9 01       		.byte	0x1
 5389 04ea 9102     		.2byte	0x291
 5390 04ec 81000000 		.4byte	0x81
 5391 04f0 02       		.uleb128 0x2
 5392 04f1 91       		.byte	0x91
 5393 04f2 5E       		.sleb128 -34
 5394 04f3 16       		.uleb128 0x16
 5395 04f4 50000000 		.4byte	.LASF46
 5396 04f8 01       		.byte	0x1
 5397 04f9 9202     		.2byte	0x292
 5398 04fb 1F050000 		.4byte	0x51f
 5399 04ff 02       		.uleb128 0x2
 5400 0500 91       		.byte	0x91
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 118


 5401 0501 64       		.sleb128 -28
 5402 0502 16       		.uleb128 0x16
 5403 0503 B9020000 		.4byte	.LASF47
 5404 0507 01       		.byte	0x1
 5405 0508 9202     		.2byte	0x292
 5406 050a 81000000 		.4byte	0x81
 5407 050e 02       		.uleb128 0x2
 5408 050f 91       		.byte	0x91
 5409 0510 77       		.sleb128 -9
 5410 0511 14       		.uleb128 0x14
 5411 0512 7800     		.ascii	"x\000"
 5412 0514 01       		.byte	0x1
 5413 0515 9202     		.2byte	0x292
 5414 0517 81000000 		.4byte	0x81
 5415 051b 02       		.uleb128 0x2
 5416 051c 91       		.byte	0x91
 5417 051d 76       		.sleb128 -10
 5418 051e 00       		.byte	0
 5419 051f 06       		.uleb128 0x6
 5420 0520 81000000 		.4byte	0x81
 5421 0524 2F050000 		.4byte	0x52f
 5422 0528 07       		.uleb128 0x7
 5423 0529 B6000000 		.4byte	0xb6
 5424 052d 0E       		.byte	0xe
 5425 052e 00       		.byte	0
 5426 052f 13       		.uleb128 0x13
 5427 0530 38020000 		.4byte	.LASF18
 5428 0534 01       		.byte	0x1
 5429 0535 EA02     		.2byte	0x2ea
 5430 0537 81000000 		.4byte	0x81
 5431 053b 00000000 		.4byte	.LFB72
 5432 053f C80B0000 		.4byte	.LFE72-.LFB72
 5433 0543 01       		.uleb128 0x1
 5434 0544 9C       		.byte	0x9c
 5435 0545 82050000 		.4byte	0x582
 5436 0549 12       		.uleb128 0x12
 5437 054a 64697200 		.ascii	"dir\000"
 5438 054e 01       		.byte	0x1
 5439 054f EA02     		.2byte	0x2ea
 5440 0551 81000000 		.4byte	0x81
 5441 0555 02       		.uleb128 0x2
 5442 0556 91       		.byte	0x91
 5443 0557 6F       		.sleb128 -17
 5444 0558 15       		.uleb128 0x15
 5445 0559 F7020000 		.4byte	.LASF53
 5446 055d 01       		.byte	0x1
 5447 055e EA02     		.2byte	0x2ea
 5448 0560 81000000 		.4byte	0x81
 5449 0564 02       		.uleb128 0x2
 5450 0565 91       		.byte	0x91
 5451 0566 6E       		.sleb128 -18
 5452 0567 14       		.uleb128 0x14
 5453 0568 7800     		.ascii	"x\000"
 5454 056a 01       		.byte	0x1
 5455 056b EB02     		.2byte	0x2eb
 5456 056d 81000000 		.4byte	0x81
 5457 0571 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 119


 5458 0572 91       		.byte	0x91
 5459 0573 77       		.sleb128 -9
 5460 0574 14       		.uleb128 0x14
 5461 0575 7900     		.ascii	"y\000"
 5462 0577 01       		.byte	0x1
 5463 0578 EB02     		.2byte	0x2eb
 5464 057a 81000000 		.4byte	0x81
 5465 057e 02       		.uleb128 0x2
 5466 057f 91       		.byte	0x91
 5467 0580 76       		.sleb128 -10
 5468 0581 00       		.byte	0
 5469 0582 06       		.uleb128 0x6
 5470 0583 81000000 		.4byte	0x81
 5471 0587 92050000 		.4byte	0x592
 5472 058b 07       		.uleb128 0x7
 5473 058c B6000000 		.4byte	0xb6
 5474 0590 FF       		.byte	0xff
 5475 0591 00       		.byte	0
 5476 0592 18       		.uleb128 0x18
 5477 0593 6C010000 		.4byte	.LASF54
 5478 0597 06       		.byte	0x6
 5479 0598 3E01     		.2byte	0x13e
 5480 059a 9E050000 		.4byte	0x59e
 5481 059e 05       		.uleb128 0x5
 5482 059f 82050000 		.4byte	0x582
 5483 05a3 18       		.uleb128 0x18
 5484 05a4 1D030000 		.4byte	.LASF55
 5485 05a8 07       		.byte	0x7
 5486 05a9 2A06     		.2byte	0x62a
 5487 05ab AF050000 		.4byte	0x5af
 5488 05af 05       		.uleb128 0x5
 5489 05b0 76000000 		.4byte	0x76
 5490 05b4 19       		.uleb128 0x19
 5491 05b5 4D020000 		.4byte	.LASF56
 5492 05b9 05       		.byte	0x5
 5493 05ba 40       		.byte	0x40
 5494 05bb AC000000 		.4byte	0xac
 5495 05bf 05       		.uleb128 0x5
 5496 05c0 03       		.byte	0x3
 5497 05c1 00000000 		.4byte	count_teclas1
 5498 05c5 19       		.uleb128 0x19
 5499 05c6 33030000 		.4byte	.LASF57
 5500 05ca 05       		.byte	0x5
 5501 05cb 40       		.byte	0x40
 5502 05cc AC000000 		.4byte	0xac
 5503 05d0 05       		.uleb128 0x5
 5504 05d1 03       		.byte	0x3
 5505 05d2 00000000 		.4byte	comas1
 5506 05d6 19       		.uleb128 0x19
 5507 05d7 3A030000 		.4byte	.LASF58
 5508 05db 05       		.byte	0x5
 5509 05dc 40       		.byte	0x40
 5510 05dd AC000000 		.4byte	0xac
 5511 05e1 05       		.uleb128 0x5
 5512 05e2 03       		.byte	0x3
 5513 05e3 00000000 		.4byte	comas2
 5514 05e7 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 120


 5515 05e8 3E000000 		.4byte	.LASF59
 5516 05ec 05       		.byte	0x5
 5517 05ed 40       		.byte	0x40
 5518 05ee AC000000 		.4byte	0xac
 5519 05f2 05       		.uleb128 0x5
 5520 05f3 03       		.byte	0x3
 5521 05f4 00000000 		.4byte	id_coma1
 5522 05f8 19       		.uleb128 0x19
 5523 05f9 A3010000 		.4byte	.LASF60
 5524 05fd 05       		.byte	0x5
 5525 05fe 40       		.byte	0x40
 5526 05ff AC000000 		.4byte	0xac
 5527 0603 05       		.uleb128 0x5
 5528 0604 03       		.byte	0x3
 5529 0605 00000000 		.4byte	id_teclado1
 5530 0609 19       		.uleb128 0x19
 5531 060a 5B020000 		.4byte	.LASF61
 5532 060e 05       		.byte	0x5
 5533 060f 40       		.byte	0x40
 5534 0610 AC000000 		.4byte	0xac
 5535 0614 05       		.uleb128 0x5
 5536 0615 03       		.byte	0x3
 5537 0616 00000000 		.4byte	count_teclas2
 5538 061a 19       		.uleb128 0x19
 5539 061b 47000000 		.4byte	.LASF62
 5540 061f 05       		.byte	0x5
 5541 0620 40       		.byte	0x40
 5542 0621 AC000000 		.4byte	0xac
 5543 0625 05       		.uleb128 0x5
 5544 0626 03       		.byte	0x3
 5545 0627 00000000 		.4byte	id_coma2
 5546 062b 19       		.uleb128 0x19
 5547 062c AF010000 		.4byte	.LASF63
 5548 0630 05       		.byte	0x5
 5549 0631 40       		.byte	0x40
 5550 0632 AC000000 		.4byte	0xac
 5551 0636 05       		.uleb128 0x5
 5552 0637 03       		.byte	0x3
 5553 0638 00000000 		.4byte	id_teclado2
 5554 063c 19       		.uleb128 0x19
 5555 063d 69020000 		.4byte	.LASF64
 5556 0641 05       		.byte	0x5
 5557 0642 41       		.byte	0x41
 5558 0643 B1000000 		.4byte	0xb1
 5559 0647 05       		.uleb128 0x5
 5560 0648 03       		.byte	0x3
 5561 0649 00000000 		.4byte	posx1
 5562 064d 19       		.uleb128 0x19
 5563 064e AD020000 		.4byte	.LASF65
 5564 0652 05       		.byte	0x5
 5565 0653 41       		.byte	0x41
 5566 0654 B1000000 		.4byte	0xb1
 5567 0658 05       		.uleb128 0x5
 5568 0659 03       		.byte	0x3
 5569 065a 00000000 		.4byte	posy1
 5570 065e 19       		.uleb128 0x19
 5571 065f 13050000 		.4byte	.LASF66
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 121


 5572 0663 05       		.byte	0x5
 5573 0664 41       		.byte	0x41
 5574 0665 B1000000 		.4byte	0xb1
 5575 0669 05       		.uleb128 0x5
 5576 066a 03       		.byte	0x3
 5577 066b 00000000 		.4byte	sizeletra1
 5578 066f 19       		.uleb128 0x19
 5579 0670 6F020000 		.4byte	.LASF67
 5580 0674 05       		.byte	0x5
 5581 0675 41       		.byte	0x41
 5582 0676 B1000000 		.4byte	0xb1
 5583 067a 05       		.uleb128 0x5
 5584 067b 03       		.byte	0x3
 5585 067c 00000000 		.4byte	posx2
 5586 0680 19       		.uleb128 0x19
 5587 0681 B3020000 		.4byte	.LASF68
 5588 0685 05       		.byte	0x5
 5589 0686 41       		.byte	0x41
 5590 0687 B1000000 		.4byte	0xb1
 5591 068b 05       		.uleb128 0x5
 5592 068c 03       		.byte	0x3
 5593 068d 00000000 		.4byte	posy2
 5594 0691 19       		.uleb128 0x19
 5595 0692 1E050000 		.4byte	.LASF69
 5596 0696 05       		.byte	0x5
 5597 0697 41       		.byte	0x41
 5598 0698 B1000000 		.4byte	0xb1
 5599 069c 05       		.uleb128 0x5
 5600 069d 03       		.byte	0x3
 5601 069e 00000000 		.4byte	sizeletra2
 5602 06a2 19       		.uleb128 0x19
 5603 06a3 98000000 		.4byte	.LASF70
 5604 06a7 05       		.byte	0x5
 5605 06a8 42       		.byte	0x42
 5606 06a9 AC000000 		.4byte	0xac
 5607 06ad 05       		.uleb128 0x5
 5608 06ae 03       		.byte	0x3
 5609 06af 00000000 		.4byte	teclas1
 5610 06b3 19       		.uleb128 0x19
 5611 06b4 A0000000 		.4byte	.LASF71
 5612 06b8 05       		.byte	0x5
 5613 06b9 42       		.byte	0x42
 5614 06ba AC000000 		.4byte	0xac
 5615 06be 05       		.uleb128 0x5
 5616 06bf 03       		.byte	0x3
 5617 06c0 00000000 		.4byte	teclas2
 5618 06c4 19       		.uleb128 0x19
 5619 06c5 09000000 		.4byte	.LASF72
 5620 06c9 05       		.byte	0x5
 5621 06ca 43       		.byte	0x43
 5622 06cb AC000000 		.4byte	0xac
 5623 06cf 05       		.uleb128 0x5
 5624 06d0 03       		.byte	0x3
 5625 06d1 00000000 		.4byte	flujo_LCD1
 5626 06d5 19       		.uleb128 0x19
 5627 06d6 14000000 		.4byte	.LASF73
 5628 06da 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 122


 5629 06db 43       		.byte	0x43
 5630 06dc AC000000 		.4byte	0xac
 5631 06e0 05       		.uleb128 0x5
 5632 06e1 03       		.byte	0x3
 5633 06e2 00000000 		.4byte	flujo_LCD2
 5634 06e6 06       		.uleb128 0x6
 5635 06e7 81000000 		.4byte	0x81
 5636 06eb F6060000 		.4byte	0x6f6
 5637 06ef 07       		.uleb128 0x7
 5638 06f0 B6000000 		.4byte	0xb6
 5639 06f4 1D       		.byte	0x1d
 5640 06f5 00       		.byte	0
 5641 06f6 19       		.uleb128 0x19
 5642 06f7 CC020000 		.4byte	.LASF74
 5643 06fb 05       		.byte	0x5
 5644 06fc 44       		.byte	0x44
 5645 06fd 07070000 		.4byte	0x707
 5646 0701 05       		.uleb128 0x5
 5647 0702 03       		.byte	0x3
 5648 0703 00000000 		.4byte	Buffer_LCD1
 5649 0707 05       		.uleb128 0x5
 5650 0708 E6060000 		.4byte	0x6e6
 5651 070c 19       		.uleb128 0x19
 5652 070d EB010000 		.4byte	.LASF75
 5653 0711 05       		.byte	0x5
 5654 0712 45       		.byte	0x45
 5655 0713 1D070000 		.4byte	0x71d
 5656 0717 05       		.uleb128 0x5
 5657 0718 03       		.byte	0x3
 5658 0719 00000000 		.4byte	Buffer_LCD2
 5659 071d 05       		.uleb128 0x5
 5660 071e E6060000 		.4byte	0x6e6
 5661 0722 19       		.uleb128 0x19
 5662 0723 B2040000 		.4byte	.LASF76
 5663 0727 05       		.byte	0x5
 5664 0728 46       		.byte	0x46
 5665 0729 AC000000 		.4byte	0xac
 5666 072d 05       		.uleb128 0x5
 5667 072e 03       		.byte	0x3
 5668 072f 00000000 		.4byte	count_protector
 5669 0733 19       		.uleb128 0x19
 5670 0734 1F000000 		.4byte	.LASF77
 5671 0738 05       		.byte	0x5
 5672 0739 46       		.byte	0x46
 5673 073a AC000000 		.4byte	0xac
 5674 073e 05       		.uleb128 0x5
 5675 073f 03       		.byte	0x3
 5676 0740 00000000 		.4byte	count_protector2
 5677 0744 19       		.uleb128 0x19
 5678 0745 40020000 		.4byte	.LASF78
 5679 0749 05       		.byte	0x5
 5680 074a 47       		.byte	0x47
 5681 074b 55070000 		.4byte	0x755
 5682 074f 05       		.uleb128 0x5
 5683 0750 03       		.byte	0x3
 5684 0751 00000000 		.4byte	password_lcd
 5685 0755 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 123


 5686 0756 5A020000 		.4byte	0x25a
 5687 075a 19       		.uleb128 0x19
 5688 075b 04010000 		.4byte	.LASF79
 5689 075f 05       		.byte	0x5
 5690 0760 48       		.byte	0x48
 5691 0761 B1000000 		.4byte	0xb1
 5692 0765 05       		.uleb128 0x5
 5693 0766 03       		.byte	0x3
 5694 0767 00000000 		.4byte	imagen_grado
 5695 076b 06       		.uleb128 0x6
 5696 076c 8C000000 		.4byte	0x8c
 5697 0770 81070000 		.4byte	0x781
 5698 0774 07       		.uleb128 0x7
 5699 0775 B6000000 		.4byte	0xb6
 5700 0779 01       		.byte	0x1
 5701 077a 07       		.uleb128 0x7
 5702 077b B6000000 		.4byte	0xb6
 5703 077f 01       		.byte	0x1
 5704 0780 00       		.byte	0
 5705 0781 19       		.uleb128 0x19
 5706 0782 CB000000 		.4byte	.LASF80
 5707 0786 05       		.byte	0x5
 5708 0787 49       		.byte	0x49
 5709 0788 92070000 		.4byte	0x792
 5710 078c 05       		.uleb128 0x5
 5711 078d 03       		.byte	0x3
 5712 078e 00000000 		.4byte	prox_caso
 5713 0792 05       		.uleb128 0x5
 5714 0793 6B070000 		.4byte	0x76b
 5715 0797 06       		.uleb128 0x6
 5716 0798 81000000 		.4byte	0x81
 5717 079c A7070000 		.4byte	0x7a7
 5718 07a0 07       		.uleb128 0x7
 5719 07a1 B6000000 		.4byte	0xb6
 5720 07a5 02       		.byte	0x2
 5721 07a6 00       		.byte	0
 5722 07a7 19       		.uleb128 0x19
 5723 07a8 FC010000 		.4byte	.LASF81
 5724 07ac 05       		.byte	0x5
 5725 07ad 4A       		.byte	0x4a
 5726 07ae B8070000 		.4byte	0x7b8
 5727 07b2 05       		.uleb128 0x5
 5728 07b3 03       		.byte	0x3
 5729 07b4 00000000 		.4byte	bloqueo_LCD
 5730 07b8 05       		.uleb128 0x5
 5731 07b9 97070000 		.4byte	0x797
 5732 07bd 19       		.uleb128 0x19
 5733 07be EC040000 		.4byte	.LASF82
 5734 07c2 05       		.byte	0x5
 5735 07c3 4B       		.byte	0x4b
 5736 07c4 CE070000 		.4byte	0x7ce
 5737 07c8 05       		.uleb128 0x5
 5738 07c9 03       		.byte	0x3
 5739 07ca 00000000 		.4byte	id_estacion
 5740 07ce 05       		.uleb128 0x5
 5741 07cf 4A020000 		.4byte	0x24a
 5742 07d3 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 124


 5743 07d4 BB010000 		.4byte	.LASF83
 5744 07d8 05       		.byte	0x5
 5745 07d9 4C       		.byte	0x4c
 5746 07da E4070000 		.4byte	0x7e4
 5747 07de 05       		.uleb128 0x5
 5748 07df 03       		.byte	0x3
 5749 07e0 00000000 		.4byte	id_venta
 5750 07e4 05       		.uleb128 0x5
 5751 07e5 6A020000 		.4byte	0x26a
 5752 07e9 06       		.uleb128 0x6
 5753 07ea 81000000 		.4byte	0x81
 5754 07ee F9070000 		.4byte	0x7f9
 5755 07f2 07       		.uleb128 0x7
 5756 07f3 B6000000 		.4byte	0xb6
 5757 07f7 C7       		.byte	0xc7
 5758 07f8 00       		.byte	0
 5759 07f9 19       		.uleb128 0x19
 5760 07fa 30000000 		.4byte	.LASF84
 5761 07fe 05       		.byte	0x5
 5762 07ff 4D       		.byte	0x4d
 5763 0800 0A080000 		.4byte	0x80a
 5764 0804 05       		.uleb128 0x5
 5765 0805 03       		.byte	0x3
 5766 0806 00000000 		.4byte	trama_totales
 5767 080a 05       		.uleb128 0x5
 5768 080b E9070000 		.4byte	0x7e9
 5769 080f 19       		.uleb128 0x19
 5770 0810 DF020000 		.4byte	.LASF85
 5771 0814 05       		.byte	0x5
 5772 0815 51       		.byte	0x51
 5773 0816 AC000000 		.4byte	0xac
 5774 081a 05       		.uleb128 0x5
 5775 081b 03       		.byte	0x3
 5776 081c 00000000 		.4byte	ppux10
 5777 0820 06       		.uleb128 0x6
 5778 0821 81000000 		.4byte	0x81
 5779 0825 30080000 		.4byte	0x830
 5780 0829 07       		.uleb128 0x7
 5781 082a B6000000 		.4byte	0xb6
 5782 082e 10       		.byte	0x10
 5783 082f 00       		.byte	0
 5784 0830 19       		.uleb128 0x19
 5785 0831 46030000 		.4byte	.LASF86
 5786 0835 05       		.byte	0x5
 5787 0836 52       		.byte	0x52
 5788 0837 41080000 		.4byte	0x841
 5789 083b 05       		.uleb128 0x5
 5790 083c 03       		.byte	0x3
 5791 083d 00000000 		.4byte	nombre_pro1
 5792 0841 05       		.uleb128 0x5
 5793 0842 20080000 		.4byte	0x820
 5794 0846 19       		.uleb128 0x19
 5795 0847 94040000 		.4byte	.LASF87
 5796 084b 05       		.byte	0x5
 5797 084c 52       		.byte	0x52
 5798 084d 57080000 		.4byte	0x857
 5799 0851 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 125


 5800 0852 03       		.byte	0x3
 5801 0853 00000000 		.4byte	nombre_pro2
 5802 0857 05       		.uleb128 0x5
 5803 0858 20080000 		.4byte	0x820
 5804 085c 19       		.uleb128 0x19
 5805 085d 52030000 		.4byte	.LASF88
 5806 0861 05       		.byte	0x5
 5807 0862 52       		.byte	0x52
 5808 0863 6D080000 		.4byte	0x86d
 5809 0867 05       		.uleb128 0x5
 5810 0868 03       		.byte	0x3
 5811 0869 00000000 		.4byte	nombre_pro3
 5812 086d 05       		.uleb128 0x5
 5813 086e 20080000 		.4byte	0x820
 5814 0872 19       		.uleb128 0x19
 5815 0873 64000000 		.4byte	.LASF89
 5816 0877 05       		.byte	0x5
 5817 0878 53       		.byte	0x53
 5818 0879 83080000 		.4byte	0x883
 5819 087d 05       		.uleb128 0x5
 5820 087e 03       		.byte	0x3
 5821 087f 00000000 		.4byte	version
 5822 0883 05       		.uleb128 0x5
 5823 0884 BD000000 		.4byte	0xbd
 5824 0888 19       		.uleb128 0x19
 5825 0889 3F010000 		.4byte	.LASF90
 5826 088d 05       		.byte	0x5
 5827 088e 5D       		.byte	0x5d
 5828 088f CD000000 		.4byte	0xcd
 5829 0893 05       		.uleb128 0x5
 5830 0894 03       		.byte	0x3
 5831 0895 00000000 		.4byte	lado1
 5832 0899 19       		.uleb128 0x19
 5833 089a 45010000 		.4byte	.LASF91
 5834 089e 05       		.byte	0x5
 5835 089f 5E       		.byte	0x5e
 5836 08a0 CD000000 		.4byte	0xcd
 5837 08a4 05       		.uleb128 0x5
 5838 08a5 03       		.byte	0x3
 5839 08a6 00000000 		.4byte	lado2
 5840 08aa 06       		.uleb128 0x6
 5841 08ab 81000000 		.4byte	0x81
 5842 08af BA080000 		.4byte	0x8ba
 5843 08b3 07       		.uleb128 0x7
 5844 08b4 B6000000 		.4byte	0xb6
 5845 08b8 20       		.byte	0x20
 5846 08b9 00       		.byte	0
 5847 08ba 19       		.uleb128 0x19
 5848 08bb E6020000 		.4byte	.LASF92
 5849 08bf 05       		.byte	0x5
 5850 08c0 62       		.byte	0x62
 5851 08c1 CB080000 		.4byte	0x8cb
 5852 08c5 05       		.uleb128 0x5
 5853 08c6 03       		.byte	0x3
 5854 08c7 00000000 		.4byte	nombre
 5855 08cb 05       		.uleb128 0x5
 5856 08cc AA080000 		.4byte	0x8aa
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 126


 5857 08d0 1A       		.uleb128 0x1a
 5858 08d1 6E697400 		.ascii	"nit\000"
 5859 08d5 05       		.byte	0x5
 5860 08d6 63       		.byte	0x63
 5861 08d7 E1080000 		.4byte	0x8e1
 5862 08db 05       		.uleb128 0x5
 5863 08dc 03       		.byte	0x3
 5864 08dd 00000000 		.4byte	nit
 5865 08e1 05       		.uleb128 0x5
 5866 08e2 1F050000 		.4byte	0x51f
 5867 08e6 06       		.uleb128 0x6
 5868 08e7 81000000 		.4byte	0x81
 5869 08eb F6080000 		.4byte	0x8f6
 5870 08ef 07       		.uleb128 0x7
 5871 08f0 B6000000 		.4byte	0xb6
 5872 08f4 13       		.byte	0x13
 5873 08f5 00       		.byte	0
 5874 08f6 19       		.uleb128 0x19
 5875 08f7 9A010000 		.4byte	.LASF93
 5876 08fb 05       		.byte	0x5
 5877 08fc 64       		.byte	0x64
 5878 08fd 07090000 		.4byte	0x907
 5879 0901 05       		.uleb128 0x5
 5880 0902 03       		.byte	0x3
 5881 0903 00000000 		.4byte	telefono
 5882 0907 05       		.uleb128 0x5
 5883 0908 E6080000 		.4byte	0x8e6
 5884 090c 19       		.uleb128 0x19
 5885 090d C1000000 		.4byte	.LASF94
 5886 0911 05       		.byte	0x5
 5887 0912 65       		.byte	0x65
 5888 0913 1D090000 		.4byte	0x91d
 5889 0917 05       		.uleb128 0x5
 5890 0918 03       		.byte	0x3
 5891 0919 00000000 		.4byte	direccion
 5892 091d 05       		.uleb128 0x5
 5893 091e AA080000 		.4byte	0x8aa
 5894 0922 06       		.uleb128 0x6
 5895 0923 81000000 		.4byte	0x81
 5896 0927 32090000 		.4byte	0x932
 5897 092b 07       		.uleb128 0x7
 5898 092c B6000000 		.4byte	0xb6
 5899 0930 1F       		.byte	0x1f
 5900 0931 00       		.byte	0
 5901 0932 19       		.uleb128 0x19
 5902 0933 F8000000 		.4byte	.LASF95
 5903 0937 05       		.byte	0x5
 5904 0938 66       		.byte	0x66
 5905 0939 43090000 		.4byte	0x943
 5906 093d 05       		.uleb128 0x5
 5907 093e 03       		.byte	0x3
 5908 093f 00000000 		.4byte	lema1
 5909 0943 05       		.uleb128 0x5
 5910 0944 22090000 		.4byte	0x922
 5911 0948 19       		.uleb128 0x19
 5912 0949 FE000000 		.4byte	.LASF96
 5913 094d 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 127


 5914 094e 67       		.byte	0x67
 5915 094f 59090000 		.4byte	0x959
 5916 0953 05       		.uleb128 0x5
 5917 0954 03       		.byte	0x3
 5918 0955 00000000 		.4byte	lema2
 5919 0959 05       		.uleb128 0x5
 5920 095a 22090000 		.4byte	0x922
 5921 095e 06       		.uleb128 0x6
 5922 095f 81000000 		.4byte	0x81
 5923 0963 6E090000 		.4byte	0x96e
 5924 0967 07       		.uleb128 0x7
 5925 0968 B6000000 		.4byte	0xb6
 5926 096c 01       		.byte	0x1
 5927 096d 00       		.byte	0
 5928 096e 19       		.uleb128 0x19
 5929 096f 02030000 		.4byte	.LASF97
 5930 0973 05       		.byte	0x5
 5931 0974 68       		.byte	0x68
 5932 0975 7F090000 		.4byte	0x97f
 5933 0979 05       		.uleb128 0x5
 5934 097a 03       		.byte	0x3
 5935 097b 00000000 		.4byte	id_logo
 5936 097f 05       		.uleb128 0x5
 5937 0980 5E090000 		.4byte	0x95e
 5938 0984 1A       		.uleb128 0x1a
 5939 0985 6B6D00   		.ascii	"km\000"
 5940 0988 05       		.byte	0x5
 5941 0989 69       		.byte	0x69
 5942 098a 94090000 		.4byte	0x994
 5943 098e 05       		.uleb128 0x5
 5944 098f 03       		.byte	0x3
 5945 0990 00000000 		.4byte	km
 5946 0994 05       		.uleb128 0x5
 5947 0995 5E090000 		.4byte	0x95e
 5948 0999 19       		.uleb128 0x19
 5949 099a 79040000 		.4byte	.LASF98
 5950 099e 05       		.byte	0x5
 5951 099f 6A       		.byte	0x6a
 5952 09a0 97070000 		.4byte	0x797
 5953 09a4 05       		.uleb128 0x5
 5954 09a5 03       		.byte	0x3
 5955 09a6 00000000 		.4byte	fecha
 5956 09aa 19       		.uleb128 0x19
 5957 09ab 93000000 		.4byte	.LASF99
 5958 09af 05       		.byte	0x5
 5959 09b0 6B       		.byte	0x6b
 5960 09b1 5E090000 		.4byte	0x95e
 5961 09b5 05       		.uleb128 0x5
 5962 09b6 03       		.byte	0x3
 5963 09b7 00000000 		.4byte	hora
 5964 09bb 19       		.uleb128 0x19
 5965 09bc B1000000 		.4byte	.LASF100
 5966 09c0 05       		.byte	0x5
 5967 09c1 7F       		.byte	0x7f
 5968 09c2 73010000 		.4byte	0x173
 5969 09c6 05       		.uleb128 0x5
 5970 09c7 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 128


 5971 09c8 00000000 		.4byte	rventa1
 5972 09cc 19       		.uleb128 0x19
 5973 09cd B9000000 		.4byte	.LASF101
 5974 09d1 05       		.byte	0x5
 5975 09d2 80       		.byte	0x80
 5976 09d3 73010000 		.4byte	0x173
 5977 09d7 05       		.uleb128 0x5
 5978 09d8 03       		.byte	0x3
 5979 09d9 00000000 		.4byte	rventa2
 5980 09dd 19       		.uleb128 0x19
 5981 09de 7D000000 		.4byte	.LASF102
 5982 09e2 05       		.byte	0x5
 5983 09e3 85       		.byte	0x85
 5984 09e4 81000000 		.4byte	0x81
 5985 09e8 05       		.uleb128 0x5
 5986 09e9 03       		.byte	0x3
 5987 09ea 00000000 		.4byte	ok_RF
 5988 09ee 19       		.uleb128 0x19
 5989 09ef 89040000 		.4byte	.LASF103
 5990 09f3 05       		.byte	0x5
 5991 09f4 86       		.byte	0x86
 5992 09f5 81000000 		.4byte	0x81
 5993 09f9 05       		.uleb128 0x5
 5994 09fa 03       		.byte	0x3
 5995 09fb 00000000 		.4byte	ok_datosRF
 5996 09ff 19       		.uleb128 0x19
 5997 0a00 CF010000 		.4byte	.LASF104
 5998 0a04 05       		.byte	0x5
 5999 0a05 87       		.byte	0x87
 6000 0a06 E9070000 		.4byte	0x7e9
 6001 0a0a 05       		.uleb128 0x5
 6002 0a0b 03       		.byte	0x3
 6003 0a0c 00000000 		.4byte	rf_mod
 6004 0a10 06       		.uleb128 0x6
 6005 0a11 81000000 		.4byte	0x81
 6006 0a15 200A0000 		.4byte	0xa20
 6007 0a19 07       		.uleb128 0x7
 6008 0a1a B6000000 		.4byte	0xb6
 6009 0a1e 3F       		.byte	0x3f
 6010 0a1f 00       		.byte	0
 6011 0a20 19       		.uleb128 0x19
 6012 0a21 ED000000 		.4byte	.LASF105
 6013 0a25 05       		.byte	0x5
 6014 0a26 8C       		.byte	0x8c
 6015 0a27 100A0000 		.4byte	0xa10
 6016 0a2b 05       		.uleb128 0x5
 6017 0a2c 03       		.byte	0x3
 6018 0a2d 00000000 		.4byte	buffer_i2c
 6019 0a31 19       		.uleb128 0x19
 6020 0a32 ED020000 		.4byte	.LASF106
 6021 0a36 05       		.byte	0x5
 6022 0a37 91       		.byte	0x91
 6023 0a38 81000000 		.4byte	0x81
 6024 0a3c 05       		.uleb128 0x5
 6025 0a3d 03       		.byte	0x3
 6026 0a3e 00000000 		.4byte	crc_total
 6027 0a42 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 129


 6028 0a43 19020000 		.4byte	.LASF107
 6029 0a47 05       		.byte	0x5
 6030 0a48 95       		.byte	0x95
 6031 0a49 5E090000 		.4byte	0x95e
 6032 0a4d 05       		.uleb128 0x5
 6033 0a4e 03       		.byte	0x3
 6034 0a4f 00000000 		.4byte	print1
 6035 0a53 19       		.uleb128 0x19
 6036 0a54 20020000 		.4byte	.LASF108
 6037 0a58 05       		.byte	0x5
 6038 0a59 96       		.byte	0x96
 6039 0a5a 5E090000 		.4byte	0x95e
 6040 0a5e 05       		.uleb128 0x5
 6041 0a5f 03       		.byte	0x3
 6042 0a60 00000000 		.4byte	print2
 6043 0a64 19       		.uleb128 0x19
 6044 0a65 A2020000 		.4byte	.LASF109
 6045 0a69 01       		.byte	0x1
 6046 0a6a 2F       		.byte	0x2f
 6047 0a6b 81000000 		.4byte	0x81
 6048 0a6f 05       		.uleb128 0x5
 6049 0a70 03       		.byte	0x3
 6050 0a71 00000000 		.4byte	rx_timeout
 6051 0a75 19       		.uleb128 0x19
 6052 0a76 57010000 		.4byte	.LASF110
 6053 0a7a 01       		.byte	0x1
 6054 0a7b 30       		.byte	0x30
 6055 0a7c 20080000 		.4byte	0x820
 6056 0a80 05       		.uleb128 0x5
 6057 0a81 03       		.byte	0x3
 6058 0a82 00000000 		.4byte	msn_tc
 6059 0a86 06       		.uleb128 0x6
 6060 0a87 81000000 		.4byte	0x81
 6061 0a8b 960A0000 		.4byte	0xa96
 6062 0a8f 07       		.uleb128 0x7
 6063 0a90 B6000000 		.4byte	0xb6
 6064 0a94 0C       		.byte	0xc
 6065 0a95 00       		.byte	0
 6066 0a96 19       		.uleb128 0x19
 6067 0a97 65010000 		.4byte	.LASF111
 6068 0a9b 01       		.byte	0x1
 6069 0a9c 31       		.byte	0x31
 6070 0a9d 860A0000 		.4byte	0xa86
 6071 0aa1 05       		.uleb128 0x5
 6072 0aa2 03       		.byte	0x3
 6073 0aa3 00000000 		.4byte	msn_te
 6074 0aa7 06       		.uleb128 0x6
 6075 0aa8 81000000 		.4byte	0x81
 6076 0aac B70A0000 		.4byte	0xab7
 6077 0ab0 07       		.uleb128 0x7
 6078 0ab1 B6000000 		.4byte	0xb6
 6079 0ab5 0D       		.byte	0xd
 6080 0ab6 00       		.byte	0
 6081 0ab7 19       		.uleb128 0x19
 6082 0ab8 5E010000 		.4byte	.LASF112
 6083 0abc 01       		.byte	0x1
 6084 0abd 32       		.byte	0x32
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 130


 6085 0abe A70A0000 		.4byte	0xaa7
 6086 0ac2 05       		.uleb128 0x5
 6087 0ac3 03       		.byte	0x3
 6088 0ac4 00000000 		.4byte	msn_td
 6089 0ac8 19       		.uleb128 0x19
 6090 0ac9 C4010000 		.4byte	.LASF113
 6091 0acd 01       		.byte	0x1
 6092 0ace 33       		.byte	0x33
 6093 0acf 1F050000 		.4byte	0x51f
 6094 0ad3 05       		.uleb128 0x5
 6095 0ad4 03       		.byte	0x3
 6096 0ad5 00000000 		.4byte	msn_lecact
 6097 0ad9 19       		.uleb128 0x19
 6098 0ada E2000000 		.4byte	.LASF114
 6099 0ade 01       		.byte	0x1
 6100 0adf 34       		.byte	0x34
 6101 0ae0 20080000 		.4byte	0x820
 6102 0ae4 05       		.uleb128 0x5
 6103 0ae5 03       		.byte	0x3
 6104 0ae6 00000000 		.4byte	msn_lecaan
 6105 0aea 19       		.uleb128 0x19
 6106 0aeb 4B010000 		.4byte	.LASF115
 6107 0aef 01       		.byte	0x1
 6108 0af0 35       		.byte	0x35
 6109 0af1 9C040000 		.4byte	0x49c
 6110 0af5 05       		.uleb128 0x5
 6111 0af6 03       		.byte	0x3
 6112 0af7 00000000 		.4byte	msn_tventas
 6113 0afb 00       		.byte	0
 6114              		.section	.debug_abbrev,"",%progbits
 6115              	.Ldebug_abbrev0:
 6116 0000 01       		.uleb128 0x1
 6117 0001 11       		.uleb128 0x11
 6118 0002 01       		.byte	0x1
 6119 0003 25       		.uleb128 0x25
 6120 0004 0E       		.uleb128 0xe
 6121 0005 13       		.uleb128 0x13
 6122 0006 0B       		.uleb128 0xb
 6123 0007 03       		.uleb128 0x3
 6124 0008 0E       		.uleb128 0xe
 6125 0009 1B       		.uleb128 0x1b
 6126 000a 0E       		.uleb128 0xe
 6127 000b 55       		.uleb128 0x55
 6128 000c 17       		.uleb128 0x17
 6129 000d 11       		.uleb128 0x11
 6130 000e 01       		.uleb128 0x1
 6131 000f 10       		.uleb128 0x10
 6132 0010 17       		.uleb128 0x17
 6133 0011 00       		.byte	0
 6134 0012 00       		.byte	0
 6135 0013 02       		.uleb128 0x2
 6136 0014 24       		.uleb128 0x24
 6137 0015 00       		.byte	0
 6138 0016 0B       		.uleb128 0xb
 6139 0017 0B       		.uleb128 0xb
 6140 0018 3E       		.uleb128 0x3e
 6141 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 131


 6142 001a 03       		.uleb128 0x3
 6143 001b 0E       		.uleb128 0xe
 6144 001c 00       		.byte	0
 6145 001d 00       		.byte	0
 6146 001e 03       		.uleb128 0x3
 6147 001f 16       		.uleb128 0x16
 6148 0020 00       		.byte	0
 6149 0021 03       		.uleb128 0x3
 6150 0022 0E       		.uleb128 0xe
 6151 0023 3A       		.uleb128 0x3a
 6152 0024 0B       		.uleb128 0xb
 6153 0025 3B       		.uleb128 0x3b
 6154 0026 0B       		.uleb128 0xb
 6155 0027 49       		.uleb128 0x49
 6156 0028 13       		.uleb128 0x13
 6157 0029 00       		.byte	0
 6158 002a 00       		.byte	0
 6159 002b 04       		.uleb128 0x4
 6160 002c 24       		.uleb128 0x24
 6161 002d 00       		.byte	0
 6162 002e 0B       		.uleb128 0xb
 6163 002f 0B       		.uleb128 0xb
 6164 0030 3E       		.uleb128 0x3e
 6165 0031 0B       		.uleb128 0xb
 6166 0032 03       		.uleb128 0x3
 6167 0033 08       		.uleb128 0x8
 6168 0034 00       		.byte	0
 6169 0035 00       		.byte	0
 6170 0036 05       		.uleb128 0x5
 6171 0037 35       		.uleb128 0x35
 6172 0038 00       		.byte	0
 6173 0039 49       		.uleb128 0x49
 6174 003a 13       		.uleb128 0x13
 6175 003b 00       		.byte	0
 6176 003c 00       		.byte	0
 6177 003d 06       		.uleb128 0x6
 6178 003e 01       		.uleb128 0x1
 6179 003f 01       		.byte	0x1
 6180 0040 49       		.uleb128 0x49
 6181 0041 13       		.uleb128 0x13
 6182 0042 01       		.uleb128 0x1
 6183 0043 13       		.uleb128 0x13
 6184 0044 00       		.byte	0
 6185 0045 00       		.byte	0
 6186 0046 07       		.uleb128 0x7
 6187 0047 21       		.uleb128 0x21
 6188 0048 00       		.byte	0
 6189 0049 49       		.uleb128 0x49
 6190 004a 13       		.uleb128 0x13
 6191 004b 2F       		.uleb128 0x2f
 6192 004c 0B       		.uleb128 0xb
 6193 004d 00       		.byte	0
 6194 004e 00       		.byte	0
 6195 004f 08       		.uleb128 0x8
 6196 0050 13       		.uleb128 0x13
 6197 0051 01       		.byte	0x1
 6198 0052 03       		.uleb128 0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 132


 6199 0053 0E       		.uleb128 0xe
 6200 0054 0B       		.uleb128 0xb
 6201 0055 0B       		.uleb128 0xb
 6202 0056 3A       		.uleb128 0x3a
 6203 0057 0B       		.uleb128 0xb
 6204 0058 3B       		.uleb128 0x3b
 6205 0059 0B       		.uleb128 0xb
 6206 005a 01       		.uleb128 0x1
 6207 005b 13       		.uleb128 0x13
 6208 005c 00       		.byte	0
 6209 005d 00       		.byte	0
 6210 005e 09       		.uleb128 0x9
 6211 005f 0D       		.uleb128 0xd
 6212 0060 00       		.byte	0
 6213 0061 03       		.uleb128 0x3
 6214 0062 08       		.uleb128 0x8
 6215 0063 3A       		.uleb128 0x3a
 6216 0064 0B       		.uleb128 0xb
 6217 0065 3B       		.uleb128 0x3b
 6218 0066 0B       		.uleb128 0xb
 6219 0067 49       		.uleb128 0x49
 6220 0068 13       		.uleb128 0x13
 6221 0069 38       		.uleb128 0x38
 6222 006a 0B       		.uleb128 0xb
 6223 006b 00       		.byte	0
 6224 006c 00       		.byte	0
 6225 006d 0A       		.uleb128 0xa
 6226 006e 0D       		.uleb128 0xd
 6227 006f 00       		.byte	0
 6228 0070 03       		.uleb128 0x3
 6229 0071 0E       		.uleb128 0xe
 6230 0072 3A       		.uleb128 0x3a
 6231 0073 0B       		.uleb128 0xb
 6232 0074 3B       		.uleb128 0x3b
 6233 0075 0B       		.uleb128 0xb
 6234 0076 49       		.uleb128 0x49
 6235 0077 13       		.uleb128 0x13
 6236 0078 38       		.uleb128 0x38
 6237 0079 0B       		.uleb128 0xb
 6238 007a 00       		.byte	0
 6239 007b 00       		.byte	0
 6240 007c 0B       		.uleb128 0xb
 6241 007d 2E       		.uleb128 0x2e
 6242 007e 00       		.byte	0
 6243 007f 3F       		.uleb128 0x3f
 6244 0080 19       		.uleb128 0x19
 6245 0081 03       		.uleb128 0x3
 6246 0082 0E       		.uleb128 0xe
 6247 0083 3A       		.uleb128 0x3a
 6248 0084 0B       		.uleb128 0xb
 6249 0085 3B       		.uleb128 0x3b
 6250 0086 0B       		.uleb128 0xb
 6251 0087 27       		.uleb128 0x27
 6252 0088 19       		.uleb128 0x19
 6253 0089 11       		.uleb128 0x11
 6254 008a 01       		.uleb128 0x1
 6255 008b 12       		.uleb128 0x12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 133


 6256 008c 06       		.uleb128 0x6
 6257 008d 40       		.uleb128 0x40
 6258 008e 18       		.uleb128 0x18
 6259 008f 9642     		.uleb128 0x2116
 6260 0091 19       		.uleb128 0x19
 6261 0092 00       		.byte	0
 6262 0093 00       		.byte	0
 6263 0094 0C       		.uleb128 0xc
 6264 0095 2E       		.uleb128 0x2e
 6265 0096 01       		.byte	0x1
 6266 0097 3F       		.uleb128 0x3f
 6267 0098 19       		.uleb128 0x19
 6268 0099 03       		.uleb128 0x3
 6269 009a 0E       		.uleb128 0xe
 6270 009b 3A       		.uleb128 0x3a
 6271 009c 0B       		.uleb128 0xb
 6272 009d 3B       		.uleb128 0x3b
 6273 009e 0B       		.uleb128 0xb
 6274 009f 27       		.uleb128 0x27
 6275 00a0 19       		.uleb128 0x19
 6276 00a1 49       		.uleb128 0x49
 6277 00a2 13       		.uleb128 0x13
 6278 00a3 11       		.uleb128 0x11
 6279 00a4 01       		.uleb128 0x1
 6280 00a5 12       		.uleb128 0x12
 6281 00a6 06       		.uleb128 0x6
 6282 00a7 40       		.uleb128 0x40
 6283 00a8 18       		.uleb128 0x18
 6284 00a9 9642     		.uleb128 0x2116
 6285 00ab 19       		.uleb128 0x19
 6286 00ac 01       		.uleb128 0x1
 6287 00ad 13       		.uleb128 0x13
 6288 00ae 00       		.byte	0
 6289 00af 00       		.byte	0
 6290 00b0 0D       		.uleb128 0xd
 6291 00b1 05       		.uleb128 0x5
 6292 00b2 00       		.byte	0
 6293 00b3 03       		.uleb128 0x3
 6294 00b4 08       		.uleb128 0x8
 6295 00b5 3A       		.uleb128 0x3a
 6296 00b6 0B       		.uleb128 0xb
 6297 00b7 3B       		.uleb128 0x3b
 6298 00b8 0B       		.uleb128 0xb
 6299 00b9 49       		.uleb128 0x49
 6300 00ba 13       		.uleb128 0x13
 6301 00bb 02       		.uleb128 0x2
 6302 00bc 18       		.uleb128 0x18
 6303 00bd 00       		.byte	0
 6304 00be 00       		.byte	0
 6305 00bf 0E       		.uleb128 0xe
 6306 00c0 34       		.uleb128 0x34
 6307 00c1 00       		.byte	0
 6308 00c2 03       		.uleb128 0x3
 6309 00c3 0E       		.uleb128 0xe
 6310 00c4 3A       		.uleb128 0x3a
 6311 00c5 0B       		.uleb128 0xb
 6312 00c6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 134


 6313 00c7 0B       		.uleb128 0xb
 6314 00c8 49       		.uleb128 0x49
 6315 00c9 13       		.uleb128 0x13
 6316 00ca 02       		.uleb128 0x2
 6317 00cb 18       		.uleb128 0x18
 6318 00cc 00       		.byte	0
 6319 00cd 00       		.byte	0
 6320 00ce 0F       		.uleb128 0xf
 6321 00cf 34       		.uleb128 0x34
 6322 00d0 00       		.byte	0
 6323 00d1 03       		.uleb128 0x3
 6324 00d2 08       		.uleb128 0x8
 6325 00d3 3A       		.uleb128 0x3a
 6326 00d4 0B       		.uleb128 0xb
 6327 00d5 3B       		.uleb128 0x3b
 6328 00d6 0B       		.uleb128 0xb
 6329 00d7 49       		.uleb128 0x49
 6330 00d8 13       		.uleb128 0x13
 6331 00d9 02       		.uleb128 0x2
 6332 00da 18       		.uleb128 0x18
 6333 00db 00       		.byte	0
 6334 00dc 00       		.byte	0
 6335 00dd 10       		.uleb128 0x10
 6336 00de 2E       		.uleb128 0x2e
 6337 00df 01       		.byte	0x1
 6338 00e0 3F       		.uleb128 0x3f
 6339 00e1 19       		.uleb128 0x19
 6340 00e2 03       		.uleb128 0x3
 6341 00e3 0E       		.uleb128 0xe
 6342 00e4 3A       		.uleb128 0x3a
 6343 00e5 0B       		.uleb128 0xb
 6344 00e6 3B       		.uleb128 0x3b
 6345 00e7 0B       		.uleb128 0xb
 6346 00e8 27       		.uleb128 0x27
 6347 00e9 19       		.uleb128 0x19
 6348 00ea 11       		.uleb128 0x11
 6349 00eb 01       		.uleb128 0x1
 6350 00ec 12       		.uleb128 0x12
 6351 00ed 06       		.uleb128 0x6
 6352 00ee 40       		.uleb128 0x40
 6353 00ef 18       		.uleb128 0x18
 6354 00f0 9642     		.uleb128 0x2116
 6355 00f2 19       		.uleb128 0x19
 6356 00f3 01       		.uleb128 0x1
 6357 00f4 13       		.uleb128 0x13
 6358 00f5 00       		.byte	0
 6359 00f6 00       		.byte	0
 6360 00f7 11       		.uleb128 0x11
 6361 00f8 2E       		.uleb128 0x2e
 6362 00f9 01       		.byte	0x1
 6363 00fa 3F       		.uleb128 0x3f
 6364 00fb 19       		.uleb128 0x19
 6365 00fc 03       		.uleb128 0x3
 6366 00fd 0E       		.uleb128 0xe
 6367 00fe 3A       		.uleb128 0x3a
 6368 00ff 0B       		.uleb128 0xb
 6369 0100 3B       		.uleb128 0x3b
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 135


 6370 0101 05       		.uleb128 0x5
 6371 0102 27       		.uleb128 0x27
 6372 0103 19       		.uleb128 0x19
 6373 0104 11       		.uleb128 0x11
 6374 0105 01       		.uleb128 0x1
 6375 0106 12       		.uleb128 0x12
 6376 0107 06       		.uleb128 0x6
 6377 0108 40       		.uleb128 0x40
 6378 0109 18       		.uleb128 0x18
 6379 010a 9642     		.uleb128 0x2116
 6380 010c 19       		.uleb128 0x19
 6381 010d 01       		.uleb128 0x1
 6382 010e 13       		.uleb128 0x13
 6383 010f 00       		.byte	0
 6384 0110 00       		.byte	0
 6385 0111 12       		.uleb128 0x12
 6386 0112 05       		.uleb128 0x5
 6387 0113 00       		.byte	0
 6388 0114 03       		.uleb128 0x3
 6389 0115 08       		.uleb128 0x8
 6390 0116 3A       		.uleb128 0x3a
 6391 0117 0B       		.uleb128 0xb
 6392 0118 3B       		.uleb128 0x3b
 6393 0119 05       		.uleb128 0x5
 6394 011a 49       		.uleb128 0x49
 6395 011b 13       		.uleb128 0x13
 6396 011c 02       		.uleb128 0x2
 6397 011d 18       		.uleb128 0x18
 6398 011e 00       		.byte	0
 6399 011f 00       		.byte	0
 6400 0120 13       		.uleb128 0x13
 6401 0121 2E       		.uleb128 0x2e
 6402 0122 01       		.byte	0x1
 6403 0123 3F       		.uleb128 0x3f
 6404 0124 19       		.uleb128 0x19
 6405 0125 03       		.uleb128 0x3
 6406 0126 0E       		.uleb128 0xe
 6407 0127 3A       		.uleb128 0x3a
 6408 0128 0B       		.uleb128 0xb
 6409 0129 3B       		.uleb128 0x3b
 6410 012a 05       		.uleb128 0x5
 6411 012b 27       		.uleb128 0x27
 6412 012c 19       		.uleb128 0x19
 6413 012d 49       		.uleb128 0x49
 6414 012e 13       		.uleb128 0x13
 6415 012f 11       		.uleb128 0x11
 6416 0130 01       		.uleb128 0x1
 6417 0131 12       		.uleb128 0x12
 6418 0132 06       		.uleb128 0x6
 6419 0133 40       		.uleb128 0x40
 6420 0134 18       		.uleb128 0x18
 6421 0135 9642     		.uleb128 0x2116
 6422 0137 19       		.uleb128 0x19
 6423 0138 01       		.uleb128 0x1
 6424 0139 13       		.uleb128 0x13
 6425 013a 00       		.byte	0
 6426 013b 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 136


 6427 013c 14       		.uleb128 0x14
 6428 013d 34       		.uleb128 0x34
 6429 013e 00       		.byte	0
 6430 013f 03       		.uleb128 0x3
 6431 0140 08       		.uleb128 0x8
 6432 0141 3A       		.uleb128 0x3a
 6433 0142 0B       		.uleb128 0xb
 6434 0143 3B       		.uleb128 0x3b
 6435 0144 05       		.uleb128 0x5
 6436 0145 49       		.uleb128 0x49
 6437 0146 13       		.uleb128 0x13
 6438 0147 02       		.uleb128 0x2
 6439 0148 18       		.uleb128 0x18
 6440 0149 00       		.byte	0
 6441 014a 00       		.byte	0
 6442 014b 15       		.uleb128 0x15
 6443 014c 05       		.uleb128 0x5
 6444 014d 00       		.byte	0
 6445 014e 03       		.uleb128 0x3
 6446 014f 0E       		.uleb128 0xe
 6447 0150 3A       		.uleb128 0x3a
 6448 0151 0B       		.uleb128 0xb
 6449 0152 3B       		.uleb128 0x3b
 6450 0153 05       		.uleb128 0x5
 6451 0154 49       		.uleb128 0x49
 6452 0155 13       		.uleb128 0x13
 6453 0156 02       		.uleb128 0x2
 6454 0157 18       		.uleb128 0x18
 6455 0158 00       		.byte	0
 6456 0159 00       		.byte	0
 6457 015a 16       		.uleb128 0x16
 6458 015b 34       		.uleb128 0x34
 6459 015c 00       		.byte	0
 6460 015d 03       		.uleb128 0x3
 6461 015e 0E       		.uleb128 0xe
 6462 015f 3A       		.uleb128 0x3a
 6463 0160 0B       		.uleb128 0xb
 6464 0161 3B       		.uleb128 0x3b
 6465 0162 05       		.uleb128 0x5
 6466 0163 49       		.uleb128 0x49
 6467 0164 13       		.uleb128 0x13
 6468 0165 02       		.uleb128 0x2
 6469 0166 18       		.uleb128 0x18
 6470 0167 00       		.byte	0
 6471 0168 00       		.byte	0
 6472 0169 17       		.uleb128 0x17
 6473 016a 0F       		.uleb128 0xf
 6474 016b 00       		.byte	0
 6475 016c 0B       		.uleb128 0xb
 6476 016d 0B       		.uleb128 0xb
 6477 016e 49       		.uleb128 0x49
 6478 016f 13       		.uleb128 0x13
 6479 0170 00       		.byte	0
 6480 0171 00       		.byte	0
 6481 0172 18       		.uleb128 0x18
 6482 0173 34       		.uleb128 0x34
 6483 0174 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 137


 6484 0175 03       		.uleb128 0x3
 6485 0176 0E       		.uleb128 0xe
 6486 0177 3A       		.uleb128 0x3a
 6487 0178 0B       		.uleb128 0xb
 6488 0179 3B       		.uleb128 0x3b
 6489 017a 05       		.uleb128 0x5
 6490 017b 49       		.uleb128 0x49
 6491 017c 13       		.uleb128 0x13
 6492 017d 3F       		.uleb128 0x3f
 6493 017e 19       		.uleb128 0x19
 6494 017f 3C       		.uleb128 0x3c
 6495 0180 19       		.uleb128 0x19
 6496 0181 00       		.byte	0
 6497 0182 00       		.byte	0
 6498 0183 19       		.uleb128 0x19
 6499 0184 34       		.uleb128 0x34
 6500 0185 00       		.byte	0
 6501 0186 03       		.uleb128 0x3
 6502 0187 0E       		.uleb128 0xe
 6503 0188 3A       		.uleb128 0x3a
 6504 0189 0B       		.uleb128 0xb
 6505 018a 3B       		.uleb128 0x3b
 6506 018b 0B       		.uleb128 0xb
 6507 018c 49       		.uleb128 0x49
 6508 018d 13       		.uleb128 0x13
 6509 018e 3F       		.uleb128 0x3f
 6510 018f 19       		.uleb128 0x19
 6511 0190 02       		.uleb128 0x2
 6512 0191 18       		.uleb128 0x18
 6513 0192 00       		.byte	0
 6514 0193 00       		.byte	0
 6515 0194 1A       		.uleb128 0x1a
 6516 0195 34       		.uleb128 0x34
 6517 0196 00       		.byte	0
 6518 0197 03       		.uleb128 0x3
 6519 0198 08       		.uleb128 0x8
 6520 0199 3A       		.uleb128 0x3a
 6521 019a 0B       		.uleb128 0xb
 6522 019b 3B       		.uleb128 0x3b
 6523 019c 0B       		.uleb128 0xb
 6524 019d 49       		.uleb128 0x49
 6525 019e 13       		.uleb128 0x13
 6526 019f 3F       		.uleb128 0x3f
 6527 01a0 19       		.uleb128 0x19
 6528 01a1 02       		.uleb128 0x2
 6529 01a2 18       		.uleb128 0x18
 6530 01a3 00       		.byte	0
 6531 01a4 00       		.byte	0
 6532 01a5 00       		.byte	0
 6533              		.section	.debug_aranges,"",%progbits
 6534 0000 64000000 		.4byte	0x64
 6535 0004 0200     		.2byte	0x2
 6536 0006 00000000 		.4byte	.Ldebug_info0
 6537 000a 04       		.byte	0x4
 6538 000b 00       		.byte	0
 6539 000c 0000     		.2byte	0
 6540 000e 0000     		.2byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 138


 6541 0010 00000000 		.4byte	.LFB63
 6542 0014 14000000 		.4byte	.LFE63-.LFB63
 6543 0018 00000000 		.4byte	.LFB64
 6544 001c 98000000 		.4byte	.LFE64-.LFB64
 6545 0020 00000000 		.4byte	.LFB65
 6546 0024 A0000000 		.4byte	.LFE65-.LFB65
 6547 0028 00000000 		.4byte	.LFB66
 6548 002c 36000000 		.4byte	.LFE66-.LFB66
 6549 0030 00000000 		.4byte	.LFB67
 6550 0034 7C010000 		.4byte	.LFE67-.LFB67
 6551 0038 00000000 		.4byte	.LFB68
 6552 003c 24000000 		.4byte	.LFE68-.LFB68
 6553 0040 00000000 		.4byte	.LFB69
 6554 0044 3C030000 		.4byte	.LFE69-.LFB69
 6555 0048 00000000 		.4byte	.LFB70
 6556 004c 7C080000 		.4byte	.LFE70-.LFB70
 6557 0050 00000000 		.4byte	.LFB71
 6558 0054 7C020000 		.4byte	.LFE71-.LFB71
 6559 0058 00000000 		.4byte	.LFB72
 6560 005c C80B0000 		.4byte	.LFE72-.LFB72
 6561 0060 00000000 		.4byte	0
 6562 0064 00000000 		.4byte	0
 6563              		.section	.debug_ranges,"",%progbits
 6564              	.Ldebug_ranges0:
 6565 0000 00000000 		.4byte	.LFB63
 6566 0004 14000000 		.4byte	.LFE63
 6567 0008 00000000 		.4byte	.LFB64
 6568 000c 98000000 		.4byte	.LFE64
 6569 0010 00000000 		.4byte	.LFB65
 6570 0014 A0000000 		.4byte	.LFE65
 6571 0018 00000000 		.4byte	.LFB66
 6572 001c 36000000 		.4byte	.LFE66
 6573 0020 00000000 		.4byte	.LFB67
 6574 0024 7C010000 		.4byte	.LFE67
 6575 0028 00000000 		.4byte	.LFB68
 6576 002c 24000000 		.4byte	.LFE68
 6577 0030 00000000 		.4byte	.LFB69
 6578 0034 3C030000 		.4byte	.LFE69
 6579 0038 00000000 		.4byte	.LFB70
 6580 003c 7C080000 		.4byte	.LFE70
 6581 0040 00000000 		.4byte	.LFB71
 6582 0044 7C020000 		.4byte	.LFE71
 6583 0048 00000000 		.4byte	.LFB72
 6584 004c C80B0000 		.4byte	.LFE72
 6585 0050 00000000 		.4byte	0
 6586 0054 00000000 		.4byte	0
 6587              		.section	.debug_line,"",%progbits
 6588              	.Ldebug_line0:
 6589 0000 98090000 		.section	.debug_str,"MS",%progbits,1
 6589      02006E01 
 6589      00000201 
 6589      FB0E0D00 
 6589      01010101 
 6590              	.LASF33:
 6591 0000 70617373 		.ascii	"password\000"
 6591      776F7264 
 6591      00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 139


 6592              	.LASF72:
 6593 0009 666C756A 		.ascii	"flujo_LCD1\000"
 6593      6F5F4C43 
 6593      443100
 6594              	.LASF73:
 6595 0014 666C756A 		.ascii	"flujo_LCD2\000"
 6595      6F5F4C43 
 6595      443200
 6596              	.LASF77:
 6597 001f 636F756E 		.ascii	"count_protector2\000"
 6597      745F7072 
 6597      6F746563 
 6597      746F7232 
 6597      00
 6598              	.LASF84:
 6599 0030 7472616D 		.ascii	"trama_totales\000"
 6599      615F746F 
 6599      74616C65 
 6599      7300
 6600              	.LASF59:
 6601 003e 69645F63 		.ascii	"id_coma1\000"
 6601      6F6D6131 
 6601      00
 6602              	.LASF62:
 6603 0047 69645F63 		.ascii	"id_coma2\000"
 6603      6F6D6132 
 6603      00
 6604              	.LASF46:
 6605 0050 62756666 		.ascii	"buffer\000"
 6605      657200
 6606              	.LASF8:
 6607 0057 756E7369 		.ascii	"unsigned int\000"
 6607      676E6564 
 6607      20696E74 
 6607      00
 6608              	.LASF89:
 6609 0064 76657273 		.ascii	"version\000"
 6609      696F6E00 
 6610              	.LASF9:
 6611 006c 5F5F696E 		.ascii	"__int32_t\000"
 6611      7433325F 
 6611      7400
 6612              	.LASF51:
 6613 0076 70726563 		.ascii	"precio\000"
 6613      696F00
 6614              	.LASF102:
 6615 007d 6F6B5F52 		.ascii	"ok_RF\000"
 6615      4600
 6616              	.LASF52:
 6617 0083 6E756D5F 		.ascii	"num_man\000"
 6617      6D616E00 
 6618              	.LASF49:
 6619 008b 64656369 		.ascii	"decimal\000"
 6619      6D616C00 
 6620              	.LASF99:
 6621 0093 686F7261 		.ascii	"hora\000"
 6621      00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 140


 6622              	.LASF70:
 6623 0098 7465636C 		.ascii	"teclas1\000"
 6623      61733100 
 6624              	.LASF71:
 6625 00a0 7465636C 		.ascii	"teclas2\000"
 6625      61733200 
 6626              	.LASF23:
 6627 00a8 706F7369 		.ascii	"posicion\000"
 6627      63696F6E 
 6627      00
 6628              	.LASF100:
 6629 00b1 7276656E 		.ascii	"rventa1\000"
 6629      74613100 
 6630              	.LASF101:
 6631 00b9 7276656E 		.ascii	"rventa2\000"
 6631      74613200 
 6632              	.LASF94:
 6633 00c1 64697265 		.ascii	"direccion\000"
 6633      6363696F 
 6633      6E00
 6634              	.LASF80:
 6635 00cb 70726F78 		.ascii	"prox_caso\000"
 6635      5F636173 
 6635      6F00
 6636              	.LASF28:
 6637 00d5 70726573 		.ascii	"preset\000"
 6637      657400
 6638              	.LASF13:
 6639 00dc 666C6F61 		.ascii	"float\000"
 6639      7400
 6640              	.LASF114:
 6641 00e2 6D736E5F 		.ascii	"msn_lecaan\000"
 6641      6C656361 
 6641      616E00
 6642              	.LASF105:
 6643 00ed 62756666 		.ascii	"buffer_i2c\000"
 6643      65725F69 
 6643      326300
 6644              	.LASF95:
 6645 00f8 6C656D61 		.ascii	"lema1\000"
 6645      3100
 6646              	.LASF96:
 6647 00fe 6C656D61 		.ascii	"lema2\000"
 6647      3200
 6648              	.LASF79:
 6649 0104 696D6167 		.ascii	"imagen_grado\000"
 6649      656E5F67 
 6649      7261646F 
 6649      00
 6650              	.LASF30:
 6651 0111 696D7072 		.ascii	"imprimir\000"
 6651      696D6972 
 6651      00
 6652              	.LASF7:
 6653 011a 6C6F6E67 		.ascii	"long long unsigned int\000"
 6653      206C6F6E 
 6653      6720756E 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 141


 6653      7369676E 
 6653      65642069 
 6654              	.LASF117:
 6655 0131 2E5C5072 		.ascii	".\\Protocolo.c\000"
 6655      6F746F63 
 6655      6F6C6F2E 
 6655      6300
 6656              	.LASF90:
 6657 013f 6C61646F 		.ascii	"lado1\000"
 6657      3100
 6658              	.LASF91:
 6659 0145 6C61646F 		.ascii	"lado2\000"
 6659      3200
 6660              	.LASF115:
 6661 014b 6D736E5F 		.ascii	"msn_tventas\000"
 6661      7476656E 
 6661      74617300 
 6662              	.LASF110:
 6663 0157 6D736E5F 		.ascii	"msn_tc\000"
 6663      746300
 6664              	.LASF112:
 6665 015e 6D736E5F 		.ascii	"msn_td\000"
 6665      746400
 6666              	.LASF111:
 6667 0165 6D736E5F 		.ascii	"msn_te\000"
 6667      746500
 6668              	.LASF54:
 6669 016c 53757274 		.ascii	"Surtidor_rxBuffer\000"
 6669      69646F72 
 6669      5F727842 
 6669      75666665 
 6669      7200
 6670              	.LASF29:
 6671 017e 706C6163 		.ascii	"placa\000"
 6671      6100
 6672              	.LASF37:
 6673 0184 7665725F 		.ascii	"ver_pos\000"
 6673      706F7300 
 6674              	.LASF25:
 6675 018c 766F6C75 		.ascii	"volumen\000"
 6675      6D656E00 
 6676              	.LASF43:
 6677 0194 76656E74 		.ascii	"venta\000"
 6677      6100
 6678              	.LASF93:
 6679 019a 74656C65 		.ascii	"telefono\000"
 6679      666F6E6F 
 6679      00
 6680              	.LASF60:
 6681 01a3 69645F74 		.ascii	"id_teclado1\000"
 6681      65636C61 
 6681      646F3100 
 6682              	.LASF63:
 6683 01af 69645F74 		.ascii	"id_teclado2\000"
 6683      65636C61 
 6683      646F3200 
 6684              	.LASF83:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 142


 6685 01bb 69645F76 		.ascii	"id_venta\000"
 6685      656E7461 
 6685      00
 6686              	.LASF113:
 6687 01c4 6D736E5F 		.ascii	"msn_lecact\000"
 6687      6C656361 
 6687      637400
 6688              	.LASF104:
 6689 01cf 72665F6D 		.ascii	"rf_mod\000"
 6689      6F6400
 6690              	.LASF42:
 6691 01d6 64657465 		.ascii	"detener\000"
 6691      6E657200 
 6692              	.LASF40:
 6693 01de 636F6D61 		.ascii	"comand_exten\000"
 6693      6E645F65 
 6693      7874656E 
 6693      00
 6694              	.LASF75:
 6695 01eb 42756666 		.ascii	"Buffer_LCD2\000"
 6695      65725F4C 
 6695      43443200 
 6696              	.LASF15:
 6697 01f7 63686172 		.ascii	"char\000"
 6697      00
 6698              	.LASF81:
 6699 01fc 626C6F71 		.ascii	"bloqueo_LCD\000"
 6699      75656F5F 
 6699      4C434400 
 6700              	.LASF20:
 6701 0208 6D616E67 		.ascii	"mangueras\000"
 6701      75657261 
 6701      7300
 6702              	.LASF12:
 6703 0212 75696E74 		.ascii	"uint16\000"
 6703      313600
 6704              	.LASF107:
 6705 0219 7072696E 		.ascii	"print1\000"
 6705      743100
 6706              	.LASF108:
 6707 0220 7072696E 		.ascii	"print2\000"
 6707      743200
 6708              	.LASF31:
 6709 0227 7469706F 		.ascii	"tipo_venta\000"
 6709      5F76656E 
 6709      746100
 6710              	.LASF34:
 6711 0232 7475726E 		.ascii	"turno\000"
 6711      6F00
 6712              	.LASF18:
 6713 0238 746F7461 		.ascii	"totales\000"
 6713      6C657300 
 6714              	.LASF78:
 6715 0240 70617373 		.ascii	"password_lcd\000"
 6715      776F7264 
 6715      5F6C6364 
 6715      00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 143


 6716              	.LASF56:
 6717 024d 636F756E 		.ascii	"count_teclas1\000"
 6717      745F7465 
 6717      636C6173 
 6717      3100
 6718              	.LASF61:
 6719 025b 636F756E 		.ascii	"count_teclas2\000"
 6719      745F7465 
 6719      636C6173 
 6719      3200
 6720              	.LASF64:
 6721 0269 706F7378 		.ascii	"posx1\000"
 6721      3100
 6722              	.LASF67:
 6723 026f 706F7378 		.ascii	"posx2\000"
 6723      3200
 6724              	.LASF6:
 6725 0275 6C6F6E67 		.ascii	"long long int\000"
 6725      206C6F6E 
 6725      6720696E 
 6725      7400
 6726              	.LASF26:
 6727 0283 70726F64 		.ascii	"producto\000"
 6727      7563746F 
 6727      00
 6728              	.LASF50:
 6729 028c 63616D62 		.ascii	"cambiar_precio\000"
 6729      6961725F 
 6729      70726563 
 6729      696F00
 6730              	.LASF32:
 6731 029b 63656475 		.ascii	"cedula\000"
 6731      6C6100
 6732              	.LASF109:
 6733 02a2 72785F74 		.ascii	"rx_timeout\000"
 6733      696D656F 
 6733      757400
 6734              	.LASF65:
 6735 02ad 706F7379 		.ascii	"posy1\000"
 6735      3100
 6736              	.LASF68:
 6737 02b3 706F7379 		.ascii	"posy2\000"
 6737      3200
 6738              	.LASF47:
 6739 02b9 73697A65 		.ascii	"size\000"
 6739      00
 6740              	.LASF22:
 6741 02be 72656369 		.ascii	"recibo\000"
 6741      626F00
 6742              	.LASF24:
 6743 02c5 64696E65 		.ascii	"dinero\000"
 6743      726F00
 6744              	.LASF74:
 6745 02cc 42756666 		.ascii	"Buffer_LCD1\000"
 6745      65725F4C 
 6745      43443100 
 6746              	.LASF17:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 144


 6747 02d8 65737461 		.ascii	"estado\000"
 6747      646F00
 6748              	.LASF85:
 6749 02df 70707578 		.ascii	"ppux10\000"
 6749      313000
 6750              	.LASF92:
 6751 02e6 6E6F6D62 		.ascii	"nombre\000"
 6751      726500
 6752              	.LASF106:
 6753 02ed 6372635F 		.ascii	"crc_total\000"
 6753      746F7461 
 6753      6C00
 6754              	.LASF53:
 6755 02f7 6E6D616E 		.ascii	"nmangueras\000"
 6755      67756572 
 6755      617300
 6756              	.LASF97:
 6757 0302 69645F6C 		.ascii	"id_logo\000"
 6757      6F676F00 
 6758              	.LASF2:
 6759 030a 73686F72 		.ascii	"short int\000"
 6759      7420696E 
 6759      7400
 6760              	.LASF4:
 6761 0314 6C6F6E67 		.ascii	"long int\000"
 6761      20696E74 
 6761      00
 6762              	.LASF55:
 6763 031d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6763      52784275 
 6763      66666572 
 6763      00
 6764              	.LASF21:
 6765 032a 73757274 		.ascii	"surtidor\000"
 6765      69646F72 
 6765      00
 6766              	.LASF57:
 6767 0333 636F6D61 		.ascii	"comas1\000"
 6767      733100
 6768              	.LASF58:
 6769 033a 636F6D61 		.ascii	"comas2\000"
 6769      733200
 6770              	.LASF48:
 6771 0341 74656D70 		.ascii	"temp\000"
 6771      00
 6772              	.LASF86:
 6773 0346 6E6F6D62 		.ascii	"nombre_pro1\000"
 6773      72655F70 
 6773      726F3100 
 6774              	.LASF88:
 6775 0352 6E6F6D62 		.ascii	"nombre_pro3\000"
 6775      72655F70 
 6775      726F3300 
 6776              	.LASF38:
 6777 035e 65737461 		.ascii	"estado_ex\000"
 6777      646F5F65 
 6777      7800
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 145


 6778              	.LASF44:
 6779 0368 70726F67 		.ascii	"programar\000"
 6779      72616D61 
 6779      7200
 6780              	.LASF16:
 6781 0372 73697A65 		.ascii	"sizetype\000"
 6781      74797065 
 6781      00
 6782              	.LASF5:
 6783 037b 6C6F6E67 		.ascii	"long unsigned int\000"
 6783      20756E73 
 6783      69676E65 
 6783      6420696E 
 6783      7400
 6784              	.LASF10:
 6785 038d 696E7433 		.ascii	"int32_t\000"
 6785      325F7400 
 6786              	.LASF35:
 6787 0395 6175746F 		.ascii	"autorizado\000"
 6787      72697A61 
 6787      646F00
 6788              	.LASF118:
 6789 03a0 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Desktop\\BEAGLE\\Programa\\Pr"
 6789      73657273 
 6789      5C526563 
 6789      65706369 
 6789      6F6E5C44 
 6790 03cd 75656261 		.ascii	"ueba_Autogas\\BBB.cydsn\000"
 6790      5F417574 
 6790      6F676173 
 6790      5C424242 
 6790      2E637964 
 6791              	.LASF1:
 6792 03e4 756E7369 		.ascii	"unsigned char\000"
 6792      676E6564 
 6792      20636861 
 6792      7200
 6793              	.LASF36:
 6794 03f2 6765745F 		.ascii	"get_estado\000"
 6794      65737461 
 6794      646F00
 6795              	.LASF116:
 6796 03fd 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 6796      4320342E 
 6796      382E3420 
 6796      32303134 
 6796      30353236 
 6797 0430 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 6797      20726576 
 6797      6973696F 
 6797      6E203231 
 6797      31333538 
 6798 0463 30202D66 		.ascii	"0 -ffunction-sections\000"
 6798      66756E63 
 6798      74696F6E 
 6798      2D736563 
 6798      74696F6E 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 146


 6799              	.LASF98:
 6800 0479 66656368 		.ascii	"fecha\000"
 6800      6100
 6801              	.LASF41:
 6802 047f 7665725F 		.ascii	"ver_error\000"
 6802      6572726F 
 6802      7200
 6803              	.LASF103:
 6804 0489 6F6B5F64 		.ascii	"ok_datosRF\000"
 6804      61746F73 
 6804      524600
 6805              	.LASF87:
 6806 0494 6E6F6D62 		.ascii	"nombre_pro2\000"
 6806      72655F70 
 6806      726F3200 
 6807              	.LASF0:
 6808 04a0 7369676E 		.ascii	"signed char\000"
 6808      65642063 
 6808      68617200 
 6809              	.LASF45:
 6810 04ac 76616C6F 		.ascii	"valor\000"
 6810      7200
 6811              	.LASF76:
 6812 04b2 636F756E 		.ascii	"count_protector\000"
 6812      745F7072 
 6812      6F746563 
 6812      746F7200 
 6813              	.LASF3:
 6814 04c2 73686F72 		.ascii	"short unsigned int\000"
 6814      7420756E 
 6814      7369676E 
 6814      65642069 
 6814      6E7400
 6815              	.LASF11:
 6816 04d5 75696E74 		.ascii	"uint8\000"
 6816      3800
 6817              	.LASF14:
 6818 04db 646F7562 		.ascii	"double\000"
 6818      6C6500
 6819              	.LASF39:
 6820 04e2 72785F65 		.ascii	"rx_extend\000"
 6820      7874656E 
 6820      6400
 6821              	.LASF82:
 6822 04ec 69645F65 		.ascii	"id_estacion\000"
 6822      73746163 
 6822      696F6E00 
 6823              	.LASF27:
 6824 04f8 6D616E67 		.ascii	"manguera\000"
 6824      75657261 
 6824      00
 6825              	.LASF19:
 6826 0501 67726164 		.ascii	"grado\000"
 6826      6F00
 6827              	.LASF119:
 6828 0507 52785F53 		.ascii	"Rx_Surtidor\000"
 6828      75727469 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfAv5zm.s 			page 147


 6828      646F7200 
 6829              	.LASF66:
 6830 0513 73697A65 		.ascii	"sizeletra1\000"
 6830      6C657472 
 6830      613100
 6831              	.LASF69:
 6832 051e 73697A65 		.ascii	"sizeletra2\000"
 6832      6C657472 
 6832      613200
 6833              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
