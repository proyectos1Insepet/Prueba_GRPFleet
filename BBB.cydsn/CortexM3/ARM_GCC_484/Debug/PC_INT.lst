ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PC_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PC_RXISR,"ax",%progbits
  19              		.align	2
  20              		.global	PC_RXISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	PC_RXISR, %function
  24              	PC_RXISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\PC_INT.c"
   1:.\Generated_Source\PSoC5/PC_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PC_INT.c **** * File Name: PCINT.c
   3:.\Generated_Source\PSoC5/PC_INT.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/PC_INT.c **** *
   5:.\Generated_Source\PSoC5/PC_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/PC_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:.\Generated_Source\PSoC5/PC_INT.c **** *
   8:.\Generated_Source\PSoC5/PC_INT.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/PC_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:.\Generated_Source\PSoC5/PC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:.\Generated_Source\PSoC5/PC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:.\Generated_Source\PSoC5/PC_INT.c **** * the software package with which this file was provided.
  13:.\Generated_Source\PSoC5/PC_INT.c **** *******************************************************************************/
  14:.\Generated_Source\PSoC5/PC_INT.c **** 
  15:.\Generated_Source\PSoC5/PC_INT.c **** #include "PC.h"
  16:.\Generated_Source\PSoC5/PC_INT.c **** 
  17:.\Generated_Source\PSoC5/PC_INT.c **** 
  18:.\Generated_Source\PSoC5/PC_INT.c **** /***************************************
  19:.\Generated_Source\PSoC5/PC_INT.c **** * Custom Declarations
  20:.\Generated_Source\PSoC5/PC_INT.c **** ***************************************/
  21:.\Generated_Source\PSoC5/PC_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  22:.\Generated_Source\PSoC5/PC_INT.c **** 
  23:.\Generated_Source\PSoC5/PC_INT.c **** /* `#END` */
  24:.\Generated_Source\PSoC5/PC_INT.c **** 
  25:.\Generated_Source\PSoC5/PC_INT.c **** #if (PC_RX_INTERRUPT_ENABLED && (PC_RX_ENABLED || PC_HD_ENABLED))
  26:.\Generated_Source\PSoC5/PC_INT.c ****     /*******************************************************************************
  27:.\Generated_Source\PSoC5/PC_INT.c ****     * Function Name: PC_RXISR
  28:.\Generated_Source\PSoC5/PC_INT.c ****     ********************************************************************************
  29:.\Generated_Source\PSoC5/PC_INT.c ****     *
  30:.\Generated_Source\PSoC5/PC_INT.c ****     * Summary:
  31:.\Generated_Source\PSoC5/PC_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 2


  32:.\Generated_Source\PSoC5/PC_INT.c ****     *
  33:.\Generated_Source\PSoC5/PC_INT.c ****     * Parameters:
  34:.\Generated_Source\PSoC5/PC_INT.c ****     *  None.
  35:.\Generated_Source\PSoC5/PC_INT.c ****     *
  36:.\Generated_Source\PSoC5/PC_INT.c ****     * Return:
  37:.\Generated_Source\PSoC5/PC_INT.c ****     *  None.
  38:.\Generated_Source\PSoC5/PC_INT.c ****     *
  39:.\Generated_Source\PSoC5/PC_INT.c ****     * Global Variables:
  40:.\Generated_Source\PSoC5/PC_INT.c ****     *  PC_rxBuffer - RAM buffer pointer for save received data.
  41:.\Generated_Source\PSoC5/PC_INT.c ****     *  PC_rxBufferWrite - cyclic index for write to rxBuffer,
  42:.\Generated_Source\PSoC5/PC_INT.c ****     *     increments after each byte saved to buffer.
  43:.\Generated_Source\PSoC5/PC_INT.c ****     *  PC_rxBufferRead - cyclic index for read from rxBuffer,
  44:.\Generated_Source\PSoC5/PC_INT.c ****     *     checked to detect overflow condition.
  45:.\Generated_Source\PSoC5/PC_INT.c ****     *  PC_rxBufferOverflow - software overflow flag. Set to one
  46:.\Generated_Source\PSoC5/PC_INT.c ****     *     when PC_rxBufferWrite index overtakes
  47:.\Generated_Source\PSoC5/PC_INT.c ****     *     PC_rxBufferRead index.
  48:.\Generated_Source\PSoC5/PC_INT.c ****     *  PC_rxBufferLoopDetect - additional variable to detect overflow.
  49:.\Generated_Source\PSoC5/PC_INT.c ****     *     Set to one when PC_rxBufferWrite is equal to
  50:.\Generated_Source\PSoC5/PC_INT.c ****     *    PC_rxBufferRead
  51:.\Generated_Source\PSoC5/PC_INT.c ****     *  PC_rxAddressMode - this variable contains the Address mode,
  52:.\Generated_Source\PSoC5/PC_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  53:.\Generated_Source\PSoC5/PC_INT.c ****     *  PC_rxAddressDetected - set to 1 when correct address received,
  54:.\Generated_Source\PSoC5/PC_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  55:.\Generated_Source\PSoC5/PC_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  56:.\Generated_Source\PSoC5/PC_INT.c ****     *
  57:.\Generated_Source\PSoC5/PC_INT.c ****     *******************************************************************************/
  58:.\Generated_Source\PSoC5/PC_INT.c ****     CY_ISR(PC_RXISR)
  59:.\Generated_Source\PSoC5/PC_INT.c ****     {
  27              		.loc 1 59 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  60:.\Generated_Source\PSoC5/PC_INT.c ****         uint8 readData;
  61:.\Generated_Source\PSoC5/PC_INT.c ****         uint8 readStatus;
  62:.\Generated_Source\PSoC5/PC_INT.c ****         uint8 increment_pointer = 0u;
  39              		.loc 1 62 0
  40 0006 0023     		movs	r3, #0
  41 0008 FB71     		strb	r3, [r7, #7]
  42              	.L6:
  63:.\Generated_Source\PSoC5/PC_INT.c **** 
  64:.\Generated_Source\PSoC5/PC_INT.c ****     #if(CY_PSOC3)
  65:.\Generated_Source\PSoC5/PC_INT.c ****         uint8 int_en;
  66:.\Generated_Source\PSoC5/PC_INT.c ****     #endif /* (CY_PSOC3) */
  67:.\Generated_Source\PSoC5/PC_INT.c **** 
  68:.\Generated_Source\PSoC5/PC_INT.c ****         /* User code required at start of ISR */
  69:.\Generated_Source\PSoC5/PC_INT.c ****         /* `#START PC_RXISR_START` */
  70:.\Generated_Source\PSoC5/PC_INT.c **** 
  71:.\Generated_Source\PSoC5/PC_INT.c ****         /* `#END` */
  72:.\Generated_Source\PSoC5/PC_INT.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 3


  73:.\Generated_Source\PSoC5/PC_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  74:.\Generated_Source\PSoC5/PC_INT.c ****         int_en = EA;
  75:.\Generated_Source\PSoC5/PC_INT.c ****         CyGlobalIntEnable;
  76:.\Generated_Source\PSoC5/PC_INT.c ****     #endif /* (CY_PSOC3) */
  77:.\Generated_Source\PSoC5/PC_INT.c **** 
  78:.\Generated_Source\PSoC5/PC_INT.c ****         do
  79:.\Generated_Source\PSoC5/PC_INT.c ****         {
  80:.\Generated_Source\PSoC5/PC_INT.c ****             /* Read receiver status register */
  81:.\Generated_Source\PSoC5/PC_INT.c ****             readStatus = PC_RXSTATUS_REG;
  43              		.loc 1 81 0
  44 000a 2B4B     		ldr	r3, .L7
  45 000c 1B78     		ldrb	r3, [r3]
  46 000e BB71     		strb	r3, [r7, #6]
  82:.\Generated_Source\PSoC5/PC_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  83:.\Generated_Source\PSoC5/PC_INT.c ****             *  of the user code in PC_RXISR_ERROR` section. 
  84:.\Generated_Source\PSoC5/PC_INT.c ****             */
  85:.\Generated_Source\PSoC5/PC_INT.c ****             readData = readStatus;
  47              		.loc 1 85 0
  48 0010 BB79     		ldrb	r3, [r7, #6]
  49 0012 7B71     		strb	r3, [r7, #5]
  86:.\Generated_Source\PSoC5/PC_INT.c **** 
  87:.\Generated_Source\PSoC5/PC_INT.c ****             if((readStatus & (PC_RX_STS_BREAK | 
  88:.\Generated_Source\PSoC5/PC_INT.c ****                             PC_RX_STS_PAR_ERROR |
  89:.\Generated_Source\PSoC5/PC_INT.c ****                             PC_RX_STS_STOP_ERROR | 
  90:.\Generated_Source\PSoC5/PC_INT.c ****                             PC_RX_STS_OVERRUN)) != 0u)
  50              		.loc 1 90 0
  51 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  52 0016 03F01E03 		and	r3, r3, #30
  87:.\Generated_Source\PSoC5/PC_INT.c ****             if((readStatus & (PC_RX_STS_BREAK | 
  53              		.loc 1 87 0
  54 001a 002B     		cmp	r3, #0
  55 001c 0BD0     		beq	.L2
  91:.\Generated_Source\PSoC5/PC_INT.c ****             {
  92:.\Generated_Source\PSoC5/PC_INT.c ****                 /* ERROR handling. */
  93:.\Generated_Source\PSoC5/PC_INT.c ****                 PC_errorStatus |= readStatus & ( PC_RX_STS_BREAK | 
  56              		.loc 1 93 0
  57 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  58 0020 03F01E03 		and	r3, r3, #30
  59 0024 DAB2     		uxtb	r2, r3
  60 0026 254B     		ldr	r3, .L7+4
  61 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62 002a DBB2     		uxtb	r3, r3
  63 002c 1343     		orrs	r3, r3, r2
  64 002e DBB2     		uxtb	r3, r3
  65 0030 DAB2     		uxtb	r2, r3
  66 0032 224B     		ldr	r3, .L7+4
  67 0034 1A70     		strb	r2, [r3]
  68              	.L2:
  94:.\Generated_Source\PSoC5/PC_INT.c ****                                                             PC_RX_STS_PAR_ERROR | 
  95:.\Generated_Source\PSoC5/PC_INT.c ****                                                             PC_RX_STS_STOP_ERROR | 
  96:.\Generated_Source\PSoC5/PC_INT.c ****                                                             PC_RX_STS_OVERRUN);
  97:.\Generated_Source\PSoC5/PC_INT.c ****                 /* `#START PC_RXISR_ERROR` */
  98:.\Generated_Source\PSoC5/PC_INT.c **** 
  99:.\Generated_Source\PSoC5/PC_INT.c ****                 /* `#END` */
 100:.\Generated_Source\PSoC5/PC_INT.c ****             }
 101:.\Generated_Source\PSoC5/PC_INT.c ****             
 102:.\Generated_Source\PSoC5/PC_INT.c ****             if((readStatus & PC_RX_STS_FIFO_NOTEMPTY) != 0u)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 4


  69              		.loc 1 102 0
  70 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  71 0038 03F02003 		and	r3, r3, #32
  72 003c 002B     		cmp	r3, #0
  73 003e 31D0     		beq	.L3
 103:.\Generated_Source\PSoC5/PC_INT.c ****             {
 104:.\Generated_Source\PSoC5/PC_INT.c ****                 /* Read data from the RX data register */
 105:.\Generated_Source\PSoC5/PC_INT.c ****                 readData = PC_RXDATA_REG;
  74              		.loc 1 105 0
  75 0040 1F4B     		ldr	r3, .L7+8
  76 0042 1B78     		ldrb	r3, [r3]
  77 0044 7B71     		strb	r3, [r7, #5]
 106:.\Generated_Source\PSoC5/PC_INT.c ****             #if (PC_RXHW_ADDRESS_ENABLED)
 107:.\Generated_Source\PSoC5/PC_INT.c ****                 if(PC_rxAddressMode == (uint8)PC__B_UART__AM_SW_DETECT_TO_BUFFER)
 108:.\Generated_Source\PSoC5/PC_INT.c ****                 {
 109:.\Generated_Source\PSoC5/PC_INT.c ****                     if((readStatus & PC_RX_STS_MRKSPC) != 0u)
 110:.\Generated_Source\PSoC5/PC_INT.c ****                     {
 111:.\Generated_Source\PSoC5/PC_INT.c ****                         if ((readStatus & PC_RX_STS_ADDR_MATCH) != 0u)
 112:.\Generated_Source\PSoC5/PC_INT.c ****                         {
 113:.\Generated_Source\PSoC5/PC_INT.c ****                             PC_rxAddressDetected = 1u;
 114:.\Generated_Source\PSoC5/PC_INT.c ****                         }
 115:.\Generated_Source\PSoC5/PC_INT.c ****                         else
 116:.\Generated_Source\PSoC5/PC_INT.c ****                         {
 117:.\Generated_Source\PSoC5/PC_INT.c ****                             PC_rxAddressDetected = 0u;
 118:.\Generated_Source\PSoC5/PC_INT.c ****                         }
 119:.\Generated_Source\PSoC5/PC_INT.c ****                     }
 120:.\Generated_Source\PSoC5/PC_INT.c ****                     if(PC_rxAddressDetected != 0u)
 121:.\Generated_Source\PSoC5/PC_INT.c ****                     {   /* Store only addressed data */
 122:.\Generated_Source\PSoC5/PC_INT.c ****                         PC_rxBuffer[PC_rxBufferWrite] = readData;
 123:.\Generated_Source\PSoC5/PC_INT.c ****                         increment_pointer = 1u;
 124:.\Generated_Source\PSoC5/PC_INT.c ****                     }
 125:.\Generated_Source\PSoC5/PC_INT.c ****                 }
 126:.\Generated_Source\PSoC5/PC_INT.c ****                 else /* Without software addressing */
 127:.\Generated_Source\PSoC5/PC_INT.c ****                 {
 128:.\Generated_Source\PSoC5/PC_INT.c ****                     PC_rxBuffer[PC_rxBufferWrite] = readData;
 129:.\Generated_Source\PSoC5/PC_INT.c ****                     increment_pointer = 1u;
 130:.\Generated_Source\PSoC5/PC_INT.c ****                 }
 131:.\Generated_Source\PSoC5/PC_INT.c ****             #else  /* Without addressing */
 132:.\Generated_Source\PSoC5/PC_INT.c ****                 PC_rxBuffer[PC_rxBufferWrite] = readData;
  78              		.loc 1 132 0
  79 0046 1F4B     		ldr	r3, .L7+12
  80 0048 1B88     		ldrh	r3, [r3]	@ movhi
  81 004a 9BB2     		uxth	r3, r3
  82 004c 1E4A     		ldr	r2, .L7+16
  83 004e 7979     		ldrb	r1, [r7, #5]
  84 0050 D154     		strb	r1, [r2, r3]
 133:.\Generated_Source\PSoC5/PC_INT.c ****                 increment_pointer = 1u;
  85              		.loc 1 133 0
  86 0052 0123     		movs	r3, #1
  87 0054 FB71     		strb	r3, [r7, #7]
 134:.\Generated_Source\PSoC5/PC_INT.c ****             #endif /* (PC_RXHW_ADDRESS_ENABLED) */
 135:.\Generated_Source\PSoC5/PC_INT.c **** 
 136:.\Generated_Source\PSoC5/PC_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 137:.\Generated_Source\PSoC5/PC_INT.c ****                 if(increment_pointer != 0u)
  88              		.loc 1 137 0
  89 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  90 0058 002B     		cmp	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 5


  91 005a 23D0     		beq	.L3
 138:.\Generated_Source\PSoC5/PC_INT.c ****                 {
 139:.\Generated_Source\PSoC5/PC_INT.c ****                     if(PC_rxBufferLoopDetect != 0u)
  92              		.loc 1 139 0
  93 005c 1B4B     		ldr	r3, .L7+20
  94 005e 1B78     		ldrb	r3, [r3]
  95 0060 DBB2     		uxtb	r3, r3
  96 0062 002B     		cmp	r3, #0
  97 0064 02D0     		beq	.L4
 140:.\Generated_Source\PSoC5/PC_INT.c ****                     {   /* Set Software Buffer status Overflow */
 141:.\Generated_Source\PSoC5/PC_INT.c ****                         PC_rxBufferOverflow = 1u;
  98              		.loc 1 141 0
  99 0066 1A4B     		ldr	r3, .L7+24
 100 0068 0122     		movs	r2, #1
 101 006a 1A70     		strb	r2, [r3]
 102              	.L4:
 142:.\Generated_Source\PSoC5/PC_INT.c ****                     }
 143:.\Generated_Source\PSoC5/PC_INT.c ****                     /* Set next pointer. */
 144:.\Generated_Source\PSoC5/PC_INT.c ****                     PC_rxBufferWrite++;
 103              		.loc 1 144 0
 104 006c 154B     		ldr	r3, .L7+12
 105 006e 1B88     		ldrh	r3, [r3]	@ movhi
 106 0070 9BB2     		uxth	r3, r3
 107 0072 0133     		adds	r3, r3, #1
 108 0074 9AB2     		uxth	r2, r3
 109 0076 134B     		ldr	r3, .L7+12
 110 0078 1A80     		strh	r2, [r3]	@ movhi
 145:.\Generated_Source\PSoC5/PC_INT.c **** 
 146:.\Generated_Source\PSoC5/PC_INT.c ****                     /* Check pointer for a loop condition */
 147:.\Generated_Source\PSoC5/PC_INT.c ****                     if(PC_rxBufferWrite >= PC_RX_BUFFER_SIZE)
 111              		.loc 1 147 0
 112 007a 124B     		ldr	r3, .L7+12
 113 007c 1B88     		ldrh	r3, [r3]	@ movhi
 114 007e 9AB2     		uxth	r2, r3
 115 0080 40F2DB53 		movw	r3, #1499
 116 0084 9A42     		cmp	r2, r3
 117 0086 02D9     		bls	.L5
 148:.\Generated_Source\PSoC5/PC_INT.c ****                     {
 149:.\Generated_Source\PSoC5/PC_INT.c ****                         PC_rxBufferWrite = 0u;
 118              		.loc 1 149 0
 119 0088 0E4B     		ldr	r3, .L7+12
 120 008a 0022     		movs	r2, #0
 121 008c 1A80     		strh	r2, [r3]	@ movhi
 122              	.L5:
 150:.\Generated_Source\PSoC5/PC_INT.c ****                     }
 151:.\Generated_Source\PSoC5/PC_INT.c **** 
 152:.\Generated_Source\PSoC5/PC_INT.c ****                     /* Detect pre-overload condition and set flag */
 153:.\Generated_Source\PSoC5/PC_INT.c ****                     if(PC_rxBufferWrite == PC_rxBufferRead)
 123              		.loc 1 153 0
 124 008e 0D4B     		ldr	r3, .L7+12
 125 0090 1B88     		ldrh	r3, [r3]	@ movhi
 126 0092 9AB2     		uxth	r2, r3
 127 0094 0F4B     		ldr	r3, .L7+28
 128 0096 1B88     		ldrh	r3, [r3]	@ movhi
 129 0098 9BB2     		uxth	r3, r3
 130 009a 9A42     		cmp	r2, r3
 131 009c 02D1     		bne	.L3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 6


 154:.\Generated_Source\PSoC5/PC_INT.c ****                     {
 155:.\Generated_Source\PSoC5/PC_INT.c ****                         PC_rxBufferLoopDetect = 1u;
 132              		.loc 1 155 0
 133 009e 0B4B     		ldr	r3, .L7+20
 134 00a0 0122     		movs	r2, #1
 135 00a2 1A70     		strb	r2, [r3]
 136              	.L3:
 156:.\Generated_Source\PSoC5/PC_INT.c ****                         /* When Hardware Flow Control selected */
 157:.\Generated_Source\PSoC5/PC_INT.c ****                         #if (PC_FLOW_CONTROL != 0u)
 158:.\Generated_Source\PSoC5/PC_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 159:.\Generated_Source\PSoC5/PC_INT.c ****                             PC_RXSTATUS_MASK_REG  &= (uint8)~PC_RX_STS_FIFO_NOTEMPTY;
 160:.\Generated_Source\PSoC5/PC_INT.c ****                             CyIntClearPending(PC_RX_VECT_NUM);
 161:.\Generated_Source\PSoC5/PC_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 162:.\Generated_Source\PSoC5/PC_INT.c ****                         #endif /* (PC_FLOW_CONTROL != 0u) */
 163:.\Generated_Source\PSoC5/PC_INT.c ****                     }
 164:.\Generated_Source\PSoC5/PC_INT.c ****                 }
 165:.\Generated_Source\PSoC5/PC_INT.c ****             }
 166:.\Generated_Source\PSoC5/PC_INT.c ****         }while((readStatus & PC_RX_STS_FIFO_NOTEMPTY) != 0u);
 137              		.loc 1 166 0
 138 00a4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 139 00a6 03F02003 		and	r3, r3, #32
 140 00aa 002B     		cmp	r3, #0
 141 00ac ADD1     		bne	.L6
 167:.\Generated_Source\PSoC5/PC_INT.c **** 
 168:.\Generated_Source\PSoC5/PC_INT.c ****         /* User code required at end of ISR (Optional) */
 169:.\Generated_Source\PSoC5/PC_INT.c ****         /* `#START PC_RXISR_END` */
 170:.\Generated_Source\PSoC5/PC_INT.c **** 
 171:.\Generated_Source\PSoC5/PC_INT.c ****         /* `#END` */
 172:.\Generated_Source\PSoC5/PC_INT.c **** 
 173:.\Generated_Source\PSoC5/PC_INT.c ****     #if(CY_PSOC3)
 174:.\Generated_Source\PSoC5/PC_INT.c ****         EA = int_en;
 175:.\Generated_Source\PSoC5/PC_INT.c ****     #endif /* (CY_PSOC3) */
 176:.\Generated_Source\PSoC5/PC_INT.c ****     }
 142              		.loc 1 176 0
 143 00ae 0C37     		adds	r7, r7, #12
 144 00b0 BD46     		mov	sp, r7
 145              		@ sp needed
 146 00b2 5DF8047B 		ldr	r7, [sp], #4
 147 00b6 7047     		bx	lr
 148              	.L8:
 149              		.align	2
 150              	.L7:
 151 00b8 63640040 		.word	1073767523
 152 00bc 00000000 		.word	PC_errorStatus
 153 00c0 40640040 		.word	1073767488
 154 00c4 00000000 		.word	PC_rxBufferWrite
 155 00c8 00000000 		.word	PC_rxBuffer
 156 00cc 00000000 		.word	PC_rxBufferLoopDetect
 157 00d0 00000000 		.word	PC_rxBufferOverflow
 158 00d4 00000000 		.word	PC_rxBufferRead
 159              		.cfi_endproc
 160              	.LFE0:
 161              		.size	PC_RXISR, .-PC_RXISR
 162              		.text
 163              	.Letext0:
 164              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 165              		.file 3 ".\\Generated_Source\\PSoC5\\PC.h"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 7


 166              		.section	.debug_info,"",%progbits
 167              	.Ldebug_info0:
 168 0000 4E010000 		.4byte	0x14e
 169 0004 0400     		.2byte	0x4
 170 0006 00000000 		.4byte	.Ldebug_abbrev0
 171 000a 04       		.byte	0x4
 172 000b 01       		.uleb128 0x1
 173 000c 80010000 		.4byte	.LASF25
 174 0010 01       		.byte	0x1
 175 0011 B6000000 		.4byte	.LASF26
 176 0015 55000000 		.4byte	.LASF27
 177 0019 00000000 		.4byte	.Ldebug_ranges0+0
 178 001d 00000000 		.4byte	0
 179 0021 00000000 		.4byte	.Ldebug_line0
 180 0025 02       		.uleb128 0x2
 181 0026 01       		.byte	0x1
 182 0027 06       		.byte	0x6
 183 0028 57010000 		.4byte	.LASF0
 184 002c 02       		.uleb128 0x2
 185 002d 01       		.byte	0x1
 186 002e 08       		.byte	0x8
 187 002f 01010000 		.4byte	.LASF1
 188 0033 02       		.uleb128 0x2
 189 0034 02       		.byte	0x2
 190 0035 05       		.byte	0x5
 191 0036 FC010000 		.4byte	.LASF2
 192 003a 02       		.uleb128 0x2
 193 003b 02       		.byte	0x2
 194 003c 07       		.byte	0x7
 195 003d 44010000 		.4byte	.LASF3
 196 0041 02       		.uleb128 0x2
 197 0042 04       		.byte	0x4
 198 0043 05       		.byte	0x5
 199 0044 25010000 		.4byte	.LASF4
 200 0048 02       		.uleb128 0x2
 201 0049 04       		.byte	0x4
 202 004a 07       		.byte	0x7
 203 004b A4000000 		.4byte	.LASF5
 204 004f 02       		.uleb128 0x2
 205 0050 08       		.byte	0x8
 206 0051 05       		.byte	0x5
 207 0052 00000000 		.4byte	.LASF6
 208 0056 02       		.uleb128 0x2
 209 0057 08       		.byte	0x8
 210 0058 07       		.byte	0x7
 211 0059 D8000000 		.4byte	.LASF7
 212 005d 03       		.uleb128 0x3
 213 005e 04       		.byte	0x4
 214 005f 05       		.byte	0x5
 215 0060 696E7400 		.ascii	"int\000"
 216 0064 02       		.uleb128 0x2
 217 0065 04       		.byte	0x4
 218 0066 07       		.byte	0x7
 219 0067 24000000 		.4byte	.LASF8
 220 006b 04       		.uleb128 0x4
 221 006c 9E000000 		.4byte	.LASF9
 222 0070 02       		.byte	0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 8


 223 0071 B4       		.byte	0xb4
 224 0072 2C000000 		.4byte	0x2c
 225 0076 04       		.uleb128 0x4
 226 0077 06020000 		.4byte	.LASF10
 227 007b 02       		.byte	0x2
 228 007c B5       		.byte	0xb5
 229 007d 3A000000 		.4byte	0x3a
 230 0081 02       		.uleb128 0x2
 231 0082 04       		.byte	0x4
 232 0083 04       		.byte	0x4
 233 0084 EF000000 		.4byte	.LASF11
 234 0088 02       		.uleb128 0x2
 235 0089 08       		.byte	0x8
 236 008a 04       		.byte	0x4
 237 008b 2E010000 		.4byte	.LASF12
 238 008f 02       		.uleb128 0x2
 239 0090 01       		.byte	0x1
 240 0091 08       		.byte	0x8
 241 0092 20010000 		.4byte	.LASF13
 242 0096 05       		.uleb128 0x5
 243 0097 99000000 		.4byte	.LASF14
 244 009b 02       		.byte	0x2
 245 009c 5E01     		.2byte	0x15e
 246 009e A2000000 		.4byte	0xa2
 247 00a2 06       		.uleb128 0x6
 248 00a3 6B000000 		.4byte	0x6b
 249 00a7 06       		.uleb128 0x6
 250 00a8 76000000 		.4byte	0x76
 251 00ac 02       		.uleb128 0x2
 252 00ad 04       		.byte	0x4
 253 00ae 07       		.byte	0x7
 254 00af 16020000 		.4byte	.LASF15
 255 00b3 07       		.uleb128 0x7
 256 00b4 1F020000 		.4byte	.LASF28
 257 00b8 01       		.byte	0x1
 258 00b9 3A       		.byte	0x3a
 259 00ba 00000000 		.4byte	.LFB0
 260 00be D8000000 		.4byte	.LFE0-.LFB0
 261 00c2 01       		.uleb128 0x1
 262 00c3 9C       		.byte	0x9c
 263 00c4 F3000000 		.4byte	0xf3
 264 00c8 08       		.uleb128 0x8
 265 00c9 0D020000 		.4byte	.LASF16
 266 00cd 01       		.byte	0x1
 267 00ce 3C       		.byte	0x3c
 268 00cf 6B000000 		.4byte	0x6b
 269 00d3 02       		.uleb128 0x2
 270 00d4 91       		.byte	0x91
 271 00d5 75       		.sleb128 -11
 272 00d6 08       		.uleb128 0x8
 273 00d7 75010000 		.4byte	.LASF17
 274 00db 01       		.byte	0x1
 275 00dc 3D       		.byte	0x3d
 276 00dd 6B000000 		.4byte	0x6b
 277 00e1 02       		.uleb128 0x2
 278 00e2 91       		.byte	0x91
 279 00e3 76       		.sleb128 -10
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 9


 280 00e4 08       		.uleb128 0x8
 281 00e5 63010000 		.4byte	.LASF18
 282 00e9 01       		.byte	0x1
 283 00ea 3E       		.byte	0x3e
 284 00eb 6B000000 		.4byte	0x6b
 285 00ef 02       		.uleb128 0x2
 286 00f0 91       		.byte	0x91
 287 00f1 77       		.sleb128 -9
 288 00f2 00       		.byte	0
 289 00f3 09       		.uleb128 0x9
 290 00f4 35010000 		.4byte	.LASF19
 291 00f8 03       		.byte	0x3
 292 00f9 3D01     		.2byte	0x13d
 293 00fb 6B000000 		.4byte	0x6b
 294 00ff 0A       		.uleb128 0xa
 295 0100 6B000000 		.4byte	0x6b
 296 0104 10010000 		.4byte	0x110
 297 0108 0B       		.uleb128 0xb
 298 0109 AC000000 		.4byte	0xac
 299 010d DB05     		.2byte	0x5db
 300 010f 00       		.byte	0
 301 0110 09       		.uleb128 0x9
 302 0111 F5000000 		.4byte	.LASF20
 303 0115 03       		.byte	0x3
 304 0116 3E01     		.2byte	0x13e
 305 0118 1C010000 		.4byte	0x11c
 306 011c 06       		.uleb128 0x6
 307 011d FF000000 		.4byte	0xff
 308 0121 09       		.uleb128 0x9
 309 0122 31000000 		.4byte	.LASF21
 310 0126 03       		.byte	0x3
 311 0127 3F01     		.2byte	0x13f
 312 0129 A7000000 		.4byte	0xa7
 313 012d 09       		.uleb128 0x9
 314 012e 0F010000 		.4byte	.LASF22
 315 0132 03       		.byte	0x3
 316 0133 4001     		.2byte	0x140
 317 0135 A7000000 		.4byte	0xa7
 318 0139 09       		.uleb128 0x9
 319 013a 0E000000 		.4byte	.LASF23
 320 013e 03       		.byte	0x3
 321 013f 4101     		.2byte	0x141
 322 0141 A2000000 		.4byte	0xa2
 323 0145 09       		.uleb128 0x9
 324 0146 41000000 		.4byte	.LASF24
 325 014a 03       		.byte	0x3
 326 014b 4201     		.2byte	0x142
 327 014d A2000000 		.4byte	0xa2
 328 0151 00       		.byte	0
 329              		.section	.debug_abbrev,"",%progbits
 330              	.Ldebug_abbrev0:
 331 0000 01       		.uleb128 0x1
 332 0001 11       		.uleb128 0x11
 333 0002 01       		.byte	0x1
 334 0003 25       		.uleb128 0x25
 335 0004 0E       		.uleb128 0xe
 336 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 10


 337 0006 0B       		.uleb128 0xb
 338 0007 03       		.uleb128 0x3
 339 0008 0E       		.uleb128 0xe
 340 0009 1B       		.uleb128 0x1b
 341 000a 0E       		.uleb128 0xe
 342 000b 55       		.uleb128 0x55
 343 000c 17       		.uleb128 0x17
 344 000d 11       		.uleb128 0x11
 345 000e 01       		.uleb128 0x1
 346 000f 10       		.uleb128 0x10
 347 0010 17       		.uleb128 0x17
 348 0011 00       		.byte	0
 349 0012 00       		.byte	0
 350 0013 02       		.uleb128 0x2
 351 0014 24       		.uleb128 0x24
 352 0015 00       		.byte	0
 353 0016 0B       		.uleb128 0xb
 354 0017 0B       		.uleb128 0xb
 355 0018 3E       		.uleb128 0x3e
 356 0019 0B       		.uleb128 0xb
 357 001a 03       		.uleb128 0x3
 358 001b 0E       		.uleb128 0xe
 359 001c 00       		.byte	0
 360 001d 00       		.byte	0
 361 001e 03       		.uleb128 0x3
 362 001f 24       		.uleb128 0x24
 363 0020 00       		.byte	0
 364 0021 0B       		.uleb128 0xb
 365 0022 0B       		.uleb128 0xb
 366 0023 3E       		.uleb128 0x3e
 367 0024 0B       		.uleb128 0xb
 368 0025 03       		.uleb128 0x3
 369 0026 08       		.uleb128 0x8
 370 0027 00       		.byte	0
 371 0028 00       		.byte	0
 372 0029 04       		.uleb128 0x4
 373 002a 16       		.uleb128 0x16
 374 002b 00       		.byte	0
 375 002c 03       		.uleb128 0x3
 376 002d 0E       		.uleb128 0xe
 377 002e 3A       		.uleb128 0x3a
 378 002f 0B       		.uleb128 0xb
 379 0030 3B       		.uleb128 0x3b
 380 0031 0B       		.uleb128 0xb
 381 0032 49       		.uleb128 0x49
 382 0033 13       		.uleb128 0x13
 383 0034 00       		.byte	0
 384 0035 00       		.byte	0
 385 0036 05       		.uleb128 0x5
 386 0037 16       		.uleb128 0x16
 387 0038 00       		.byte	0
 388 0039 03       		.uleb128 0x3
 389 003a 0E       		.uleb128 0xe
 390 003b 3A       		.uleb128 0x3a
 391 003c 0B       		.uleb128 0xb
 392 003d 3B       		.uleb128 0x3b
 393 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 11


 394 003f 49       		.uleb128 0x49
 395 0040 13       		.uleb128 0x13
 396 0041 00       		.byte	0
 397 0042 00       		.byte	0
 398 0043 06       		.uleb128 0x6
 399 0044 35       		.uleb128 0x35
 400 0045 00       		.byte	0
 401 0046 49       		.uleb128 0x49
 402 0047 13       		.uleb128 0x13
 403 0048 00       		.byte	0
 404 0049 00       		.byte	0
 405 004a 07       		.uleb128 0x7
 406 004b 2E       		.uleb128 0x2e
 407 004c 01       		.byte	0x1
 408 004d 3F       		.uleb128 0x3f
 409 004e 19       		.uleb128 0x19
 410 004f 03       		.uleb128 0x3
 411 0050 0E       		.uleb128 0xe
 412 0051 3A       		.uleb128 0x3a
 413 0052 0B       		.uleb128 0xb
 414 0053 3B       		.uleb128 0x3b
 415 0054 0B       		.uleb128 0xb
 416 0055 27       		.uleb128 0x27
 417 0056 19       		.uleb128 0x19
 418 0057 11       		.uleb128 0x11
 419 0058 01       		.uleb128 0x1
 420 0059 12       		.uleb128 0x12
 421 005a 06       		.uleb128 0x6
 422 005b 40       		.uleb128 0x40
 423 005c 18       		.uleb128 0x18
 424 005d 9742     		.uleb128 0x2117
 425 005f 19       		.uleb128 0x19
 426 0060 01       		.uleb128 0x1
 427 0061 13       		.uleb128 0x13
 428 0062 00       		.byte	0
 429 0063 00       		.byte	0
 430 0064 08       		.uleb128 0x8
 431 0065 34       		.uleb128 0x34
 432 0066 00       		.byte	0
 433 0067 03       		.uleb128 0x3
 434 0068 0E       		.uleb128 0xe
 435 0069 3A       		.uleb128 0x3a
 436 006a 0B       		.uleb128 0xb
 437 006b 3B       		.uleb128 0x3b
 438 006c 0B       		.uleb128 0xb
 439 006d 49       		.uleb128 0x49
 440 006e 13       		.uleb128 0x13
 441 006f 02       		.uleb128 0x2
 442 0070 18       		.uleb128 0x18
 443 0071 00       		.byte	0
 444 0072 00       		.byte	0
 445 0073 09       		.uleb128 0x9
 446 0074 34       		.uleb128 0x34
 447 0075 00       		.byte	0
 448 0076 03       		.uleb128 0x3
 449 0077 0E       		.uleb128 0xe
 450 0078 3A       		.uleb128 0x3a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 12


 451 0079 0B       		.uleb128 0xb
 452 007a 3B       		.uleb128 0x3b
 453 007b 05       		.uleb128 0x5
 454 007c 49       		.uleb128 0x49
 455 007d 13       		.uleb128 0x13
 456 007e 3F       		.uleb128 0x3f
 457 007f 19       		.uleb128 0x19
 458 0080 3C       		.uleb128 0x3c
 459 0081 19       		.uleb128 0x19
 460 0082 00       		.byte	0
 461 0083 00       		.byte	0
 462 0084 0A       		.uleb128 0xa
 463 0085 01       		.uleb128 0x1
 464 0086 01       		.byte	0x1
 465 0087 49       		.uleb128 0x49
 466 0088 13       		.uleb128 0x13
 467 0089 01       		.uleb128 0x1
 468 008a 13       		.uleb128 0x13
 469 008b 00       		.byte	0
 470 008c 00       		.byte	0
 471 008d 0B       		.uleb128 0xb
 472 008e 21       		.uleb128 0x21
 473 008f 00       		.byte	0
 474 0090 49       		.uleb128 0x49
 475 0091 13       		.uleb128 0x13
 476 0092 2F       		.uleb128 0x2f
 477 0093 05       		.uleb128 0x5
 478 0094 00       		.byte	0
 479 0095 00       		.byte	0
 480 0096 00       		.byte	0
 481              		.section	.debug_aranges,"",%progbits
 482 0000 1C000000 		.4byte	0x1c
 483 0004 0200     		.2byte	0x2
 484 0006 00000000 		.4byte	.Ldebug_info0
 485 000a 04       		.byte	0x4
 486 000b 00       		.byte	0
 487 000c 0000     		.2byte	0
 488 000e 0000     		.2byte	0
 489 0010 00000000 		.4byte	.LFB0
 490 0014 D8000000 		.4byte	.LFE0-.LFB0
 491 0018 00000000 		.4byte	0
 492 001c 00000000 		.4byte	0
 493              		.section	.debug_ranges,"",%progbits
 494              	.Ldebug_ranges0:
 495 0000 00000000 		.4byte	.LFB0
 496 0004 D8000000 		.4byte	.LFE0
 497 0008 00000000 		.4byte	0
 498 000c 00000000 		.4byte	0
 499              		.section	.debug_line,"",%progbits
 500              	.Ldebug_line0:
 501 0000 80000000 		.section	.debug_str,"MS",%progbits,1
 501      02004D00 
 501      00000201 
 501      FB0E0D00 
 501      01010101 
 502              	.LASF6:
 503 0000 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 13


 503      206C6F6E 
 503      6720696E 
 503      7400
 504              	.LASF23:
 505 000e 50435F72 		.ascii	"PC_rxBufferLoopDetect\000"
 505      78427566 
 505      6665724C 
 505      6F6F7044 
 505      65746563 
 506              	.LASF8:
 507 0024 756E7369 		.ascii	"unsigned int\000"
 507      676E6564 
 507      20696E74 
 507      00
 508              	.LASF21:
 509 0031 50435F72 		.ascii	"PC_rxBufferRead\000"
 509      78427566 
 509      66657252 
 509      65616400 
 510              	.LASF24:
 511 0041 50435F72 		.ascii	"PC_rxBufferOverflow\000"
 511      78427566 
 511      6665724F 
 511      76657266 
 511      6C6F7700 
 512              	.LASF27:
 513 0055 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Desktop\\BEAGLE\\Programa\\Pr"
 513      73657273 
 513      5C526563 
 513      65706369 
 513      6F6E5C44 
 514 0082 75656261 		.ascii	"ueba_Autogas\\BBB.cydsn\000"
 514      5F417574 
 514      6F676173 
 514      5C424242 
 514      2E637964 
 515              	.LASF14:
 516 0099 72656738 		.ascii	"reg8\000"
 516      00
 517              	.LASF9:
 518 009e 75696E74 		.ascii	"uint8\000"
 518      3800
 519              	.LASF5:
 520 00a4 6C6F6E67 		.ascii	"long unsigned int\000"
 520      20756E73 
 520      69676E65 
 520      6420696E 
 520      7400
 521              	.LASF26:
 522 00b6 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PC_INT.c\000"
 522      6E657261 
 522      7465645F 
 522      536F7572 
 522      63655C50 
 523              	.LASF7:
 524 00d8 6C6F6E67 		.ascii	"long long unsigned int\000"
 524      206C6F6E 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 14


 524      6720756E 
 524      7369676E 
 524      65642069 
 525              	.LASF11:
 526 00ef 666C6F61 		.ascii	"float\000"
 526      7400
 527              	.LASF20:
 528 00f5 50435F72 		.ascii	"PC_rxBuffer\000"
 528      78427566 
 528      66657200 
 529              	.LASF1:
 530 0101 756E7369 		.ascii	"unsigned char\000"
 530      676E6564 
 530      20636861 
 530      7200
 531              	.LASF22:
 532 010f 50435F72 		.ascii	"PC_rxBufferWrite\000"
 532      78427566 
 532      66657257 
 532      72697465 
 532      00
 533              	.LASF13:
 534 0120 63686172 		.ascii	"char\000"
 534      00
 535              	.LASF4:
 536 0125 6C6F6E67 		.ascii	"long int\000"
 536      20696E74 
 536      00
 537              	.LASF12:
 538 012e 646F7562 		.ascii	"double\000"
 538      6C6500
 539              	.LASF19:
 540 0135 50435F65 		.ascii	"PC_errorStatus\000"
 540      72726F72 
 540      53746174 
 540      757300
 541              	.LASF3:
 542 0144 73686F72 		.ascii	"short unsigned int\000"
 542      7420756E 
 542      7369676E 
 542      65642069 
 542      6E7400
 543              	.LASF0:
 544 0157 7369676E 		.ascii	"signed char\000"
 544      65642063 
 544      68617200 
 545              	.LASF18:
 546 0163 696E6372 		.ascii	"increment_pointer\000"
 546      656D656E 
 546      745F706F 
 546      696E7465 
 546      7200
 547              	.LASF17:
 548 0175 72656164 		.ascii	"readStatus\000"
 548      53746174 
 548      757300
 549              	.LASF25:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSSBsxe.s 			page 15


 550 0180 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 550      4320342E 
 550      382E3420 
 550      32303134 
 550      30353236 
 551 01b3 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 551      20726576 
 551      6973696F 
 551      6E203231 
 551      31333538 
 552 01e6 30202D66 		.ascii	"0 -ffunction-sections\000"
 552      66756E63 
 552      74696F6E 
 552      2D736563 
 552      74696F6E 
 553              	.LASF2:
 554 01fc 73686F72 		.ascii	"short int\000"
 554      7420696E 
 554      7400
 555              	.LASF10:
 556 0206 75696E74 		.ascii	"uint16\000"
 556      313600
 557              	.LASF16:
 558 020d 72656164 		.ascii	"readData\000"
 558      44617461 
 558      00
 559              	.LASF15:
 560 0216 73697A65 		.ascii	"sizetype\000"
 560      74797065 
 560      00
 561              	.LASF28:
 562 021f 50435F52 		.ascii	"PC_RXISR\000"
 562      58495352 
 562      00
 563              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
