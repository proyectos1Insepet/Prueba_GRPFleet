ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Surtidor.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Surtidor_initVar
  19              		.bss
  20              		.type	Surtidor_initVar, %object
  21              		.size	Surtidor_initVar, 1
  22              	Surtidor_initVar:
  23 0000 00       		.space	1
  24              		.global	Surtidor_errorStatus
  25              		.type	Surtidor_errorStatus, %object
  26              		.size	Surtidor_errorStatus, 1
  27              	Surtidor_errorStatus:
  28 0001 00       		.space	1
  29              		.comm	Surtidor_rxBuffer,256,4
  30              		.global	Surtidor_rxBufferRead
  31              		.align	1
  32              		.type	Surtidor_rxBufferRead, %object
  33              		.size	Surtidor_rxBufferRead, 2
  34              	Surtidor_rxBufferRead:
  35 0002 0000     		.space	2
  36              		.global	Surtidor_rxBufferWrite
  37              		.align	1
  38              		.type	Surtidor_rxBufferWrite, %object
  39              		.size	Surtidor_rxBufferWrite, 2
  40              	Surtidor_rxBufferWrite:
  41 0004 0000     		.space	2
  42              		.global	Surtidor_rxBufferLoopDetect
  43              		.type	Surtidor_rxBufferLoopDetect, %object
  44              		.size	Surtidor_rxBufferLoopDetect, 1
  45              	Surtidor_rxBufferLoopDetect:
  46 0006 00       		.space	1
  47              		.global	Surtidor_rxBufferOverflow
  48              		.type	Surtidor_rxBufferOverflow, %object
  49              		.size	Surtidor_rxBufferOverflow, 1
  50              	Surtidor_rxBufferOverflow:
  51 0007 00       		.space	1
  52              		.section	.text.Surtidor_Start,"ax",%progbits
  53              		.align	2
  54              		.global	Surtidor_Start
  55              		.thumb
  56              		.thumb_func
  57              		.type	Surtidor_Start, %function
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 2


  58              	Surtidor_Start:
  59              	.LFB0:
  60              		.file 1 ".\\Generated_Source\\PSoC5\\Surtidor.c"
   1:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Surtidor.c **** * File Name: Surtidor.c
   3:.\Generated_Source\PSoC5/Surtidor.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/Surtidor.c **** *
   5:.\Generated_Source\PSoC5/Surtidor.c **** * Description:
   6:.\Generated_Source\PSoC5/Surtidor.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/Surtidor.c **** *
   8:.\Generated_Source\PSoC5/Surtidor.c **** * Note:
   9:.\Generated_Source\PSoC5/Surtidor.c **** *
  10:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/Surtidor.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/Surtidor.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/Surtidor.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/Surtidor.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/Surtidor.c **** 
  17:.\Generated_Source\PSoC5/Surtidor.c **** #include "Surtidor.h"
  18:.\Generated_Source\PSoC5/Surtidor.c **** #if (Surtidor_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/Surtidor.c ****     #include "Surtidor_IntClock.h"
  20:.\Generated_Source\PSoC5/Surtidor.c **** #endif /* End Surtidor_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/Surtidor.c **** 
  22:.\Generated_Source\PSoC5/Surtidor.c **** 
  23:.\Generated_Source\PSoC5/Surtidor.c **** /***************************************
  24:.\Generated_Source\PSoC5/Surtidor.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/Surtidor.c **** ***************************************/
  26:.\Generated_Source\PSoC5/Surtidor.c **** 
  27:.\Generated_Source\PSoC5/Surtidor.c **** uint8 Surtidor_initVar = 0u;
  28:.\Generated_Source\PSoC5/Surtidor.c **** 
  29:.\Generated_Source\PSoC5/Surtidor.c **** #if (Surtidor_TX_INTERRUPT_ENABLED && Surtidor_TX_ENABLED)
  30:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint8 Surtidor_txBuffer[Surtidor_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint8 Surtidor_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/Surtidor.c **** #endif /* (Surtidor_TX_INTERRUPT_ENABLED && Surtidor_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/Surtidor.c **** 
  35:.\Generated_Source\PSoC5/Surtidor.c **** #if (Surtidor_RX_INTERRUPT_ENABLED && (Surtidor_RX_ENABLED || Surtidor_HD_ENABLED))
  36:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint8 Surtidor_rxBuffer[Surtidor_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint16 Surtidor_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint16 Surtidor_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint8 Surtidor_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint8 Surtidor_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/Surtidor.c ****         volatile uint8 Surtidor_rxAddressMode = Surtidor_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/Surtidor.c ****         volatile uint8 Surtidor_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/Surtidor.c **** #endif /* (Surtidor_RX_INTERRUPT_ENABLED && (Surtidor_RX_ENABLED || Surtidor_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/Surtidor.c **** 
  48:.\Generated_Source\PSoC5/Surtidor.c **** 
  49:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_Start
  51:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/Surtidor.c **** *
  53:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
  54:.\Generated_Source\PSoC5/Surtidor.c **** *  This is the preferred method to begin component operation.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 3


  55:.\Generated_Source\PSoC5/Surtidor.c **** *  Surtidor_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/Surtidor.c **** *  Surtidor_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/Surtidor.c **** *  Surtidor_Enable() function.
  58:.\Generated_Source\PSoC5/Surtidor.c **** *
  59:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
  60:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
  61:.\Generated_Source\PSoC5/Surtidor.c **** *
  62:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
  63:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
  64:.\Generated_Source\PSoC5/Surtidor.c **** *
  65:.\Generated_Source\PSoC5/Surtidor.c **** * Global variables:
  66:.\Generated_Source\PSoC5/Surtidor.c **** *  The Surtidor_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/Surtidor.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/Surtidor.c **** *  and set to one (1u) the first time Surtidor_Start() is called. This
  69:.\Generated_Source\PSoC5/Surtidor.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/Surtidor.c **** *  subsequent calls to the Surtidor_Start() routine.
  71:.\Generated_Source\PSoC5/Surtidor.c **** *
  72:.\Generated_Source\PSoC5/Surtidor.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/Surtidor.c **** *  No.
  74:.\Generated_Source\PSoC5/Surtidor.c **** *
  75:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/Surtidor.c **** void Surtidor_Start(void) 
  77:.\Generated_Source\PSoC5/Surtidor.c **** {
  61              		.loc 1 77 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC5/Surtidor.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/Surtidor.c ****     if(Surtidor_initVar == 0u)
  71              		.loc 1 79 0
  72 0004 054B     		ldr	r3, .L3
  73 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  74 0008 002B     		cmp	r3, #0
  75 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC5/Surtidor.c ****     {
  81:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_Init();
  76              		.loc 1 81 0
  77 000c FFF7FEFF 		bl	Surtidor_Init
  82:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_initVar = 1u;
  78              		.loc 1 82 0
  79 0010 024B     		ldr	r3, .L3
  80 0012 0122     		movs	r2, #1
  81 0014 1A70     		strb	r2, [r3]
  82              	.L2:
  83:.\Generated_Source\PSoC5/Surtidor.c ****     }
  84:.\Generated_Source\PSoC5/Surtidor.c **** 
  85:.\Generated_Source\PSoC5/Surtidor.c ****     Surtidor_Enable();
  83              		.loc 1 85 0
  84 0016 FFF7FEFF 		bl	Surtidor_Enable
  86:.\Generated_Source\PSoC5/Surtidor.c **** }
  85              		.loc 1 86 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 4


  86 001a 80BD     		pop	{r7, pc}
  87              	.L4:
  88              		.align	2
  89              	.L3:
  90 001c 00000000 		.word	Surtidor_initVar
  91              		.cfi_endproc
  92              	.LFE0:
  93              		.size	Surtidor_Start, .-Surtidor_Start
  94              		.section	.text.Surtidor_Init,"ax",%progbits
  95              		.align	2
  96              		.global	Surtidor_Init
  97              		.thumb
  98              		.thumb_func
  99              		.type	Surtidor_Init, %function
 100              	Surtidor_Init:
 101              	.LFB1:
  87:.\Generated_Source\PSoC5/Surtidor.c **** 
  88:.\Generated_Source\PSoC5/Surtidor.c **** 
  89:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_Init
  91:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/Surtidor.c **** *
  93:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
  94:.\Generated_Source\PSoC5/Surtidor.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/Surtidor.c **** *  dialog settings. It is not necessary to call Surtidor_Init() because
  96:.\Generated_Source\PSoC5/Surtidor.c **** *  the Surtidor_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/Surtidor.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/Surtidor.c **** *
  99:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
 100:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 101:.\Generated_Source\PSoC5/Surtidor.c **** *
 102:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
 103:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 104:.\Generated_Source\PSoC5/Surtidor.c **** *
 105:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/Surtidor.c **** void Surtidor_Init(void) 
 107:.\Generated_Source\PSoC5/Surtidor.c **** {
 102              		.loc 1 107 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_RX_ENABLED || Surtidor_HD_ENABLED)
 109:.\Generated_Source\PSoC5/Surtidor.c **** 
 110:.\Generated_Source\PSoC5/Surtidor.c ****         #if (Surtidor_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/Surtidor.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/Surtidor.c ****             (void) CyIntSetVector(Surtidor_RX_VECT_NUM, &Surtidor_RXISR);
 112              		.loc 1 112 0
 113 0004 0520     		movs	r0, #5
 114 0006 0D49     		ldr	r1, .L6
 115 0008 FFF7FEFF 		bl	CyIntSetVector
 113:.\Generated_Source\PSoC5/Surtidor.c ****             CyIntSetPriority(Surtidor_RX_VECT_NUM, Surtidor_RX_PRIOR_NUM);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 5


 116              		.loc 1 113 0
 117 000c 0520     		movs	r0, #5
 118 000e 0121     		movs	r1, #1
 119 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_errorStatus = 0u;
 120              		.loc 1 114 0
 121 0014 0A4B     		ldr	r3, .L6+4
 122 0016 0022     		movs	r2, #0
 123 0018 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* (Surtidor_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/Surtidor.c **** 
 117:.\Generated_Source\PSoC5/Surtidor.c ****         #if (Surtidor_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_SetRxAddressMode(Surtidor_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_SetRxAddress1(Surtidor_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_SetRxAddress2(Surtidor_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/Surtidor.c **** 
 123:.\Generated_Source\PSoC5/Surtidor.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXBITCTR_PERIOD_REG = Surtidor_RXBITCTR_INIT;
 124              		.loc 1 124 0
 125 001a 0A4B     		ldr	r3, .L6+8
 126 001c 7222     		movs	r2, #114
 127 001e 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/Surtidor.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXSTATUS_MASK_REG  = Surtidor_INIT_RX_INTERRUPTS_MASK;
 128              		.loc 1 126 0
 129 0020 094B     		ldr	r3, .L6+12
 130 0022 2022     		movs	r2, #32
 131 0024 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_RX_ENABLED || Surtidor_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/Surtidor.c **** 
 129:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_TX_ENABLED)
 130:.\Generated_Source\PSoC5/Surtidor.c ****         #if (Surtidor_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/Surtidor.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/Surtidor.c ****             (void) CyIntSetVector(Surtidor_TX_VECT_NUM, &Surtidor_TXISR);
 133:.\Generated_Source\PSoC5/Surtidor.c ****             CyIntSetPriority(Surtidor_TX_VECT_NUM, Surtidor_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* (Surtidor_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/Surtidor.c **** 
 136:.\Generated_Source\PSoC5/Surtidor.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/Surtidor.c ****         #if (Surtidor_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXBITCLKGEN_CTR_REG = Surtidor_BIT_CENTER;
 132              		.loc 1 138 0
 133 0026 094B     		ldr	r3, .L6+16
 134 0028 0622     		movs	r2, #6
 135 002a 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXBITCLKTX_COMPLETE_REG = ((Surtidor_NUMBER_OF_DATA_BITS +
 136              		.loc 1 139 0
 137 002c 084B     		ldr	r3, .L6+20
 138 002e 4722     		movs	r2, #71
 139 0030 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_NUMBER_OF_START_BIT) * Surtidor_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/Surtidor.c ****         #else
 142:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXBITCTR_PERIOD_REG = ((Surtidor_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_NUMBER_OF_START_BIT) * Surtidor_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/Surtidor.c **** 
 146:.\Generated_Source\PSoC5/Surtidor.c ****         /* Configure the Initial TX interrupt mask */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 6


 147:.\Generated_Source\PSoC5/Surtidor.c ****         #if (Surtidor_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXSTATUS_MASK_REG = Surtidor_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/Surtidor.c ****         #else
 150:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXSTATUS_MASK_REG = Surtidor_INIT_TX_INTERRUPTS_MASK;
 140              		.loc 1 150 0
 141 0032 084B     		ldr	r3, .L6+24
 142 0034 0022     		movs	r2, #0
 143 0036 1A70     		strb	r2, [r3]
 151:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /*End Surtidor_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/Surtidor.c **** 
 153:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_TX_ENABLED */
 154:.\Generated_Source\PSoC5/Surtidor.c **** 
 155:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/Surtidor.c ****             (Surtidor_ReadControlRegister() & (uint8)~Surtidor_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/Surtidor.c ****             (uint8)(Surtidor_PARITY_TYPE << Surtidor_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/Surtidor.c **** }
 144              		.loc 1 160 0
 145 0038 80BD     		pop	{r7, pc}
 146              	.L7:
 147 003a 00BF     		.align	2
 148              	.L6:
 149 003c 00000000 		.word	Surtidor_RXISR
 150 0040 00000000 		.word	Surtidor_errorStatus
 151 0044 88640040 		.word	1073767560
 152 0048 87650040 		.word	1073767815
 153 004c 24650040 		.word	1073767716
 154 0050 34650040 		.word	1073767732
 155 0054 85650040 		.word	1073767813
 156              		.cfi_endproc
 157              	.LFE1:
 158              		.size	Surtidor_Init, .-Surtidor_Init
 159              		.section	.text.Surtidor_Enable,"ax",%progbits
 160              		.align	2
 161              		.global	Surtidor_Enable
 162              		.thumb
 163              		.thumb_func
 164              		.type	Surtidor_Enable, %function
 165              	Surtidor_Enable:
 166              	.LFB2:
 161:.\Generated_Source\PSoC5/Surtidor.c **** 
 162:.\Generated_Source\PSoC5/Surtidor.c **** 
 163:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_Enable
 165:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/Surtidor.c **** *
 167:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
 168:.\Generated_Source\PSoC5/Surtidor.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/Surtidor.c **** *  to call Surtidor_Enable() because the Surtidor_Start() API
 170:.\Generated_Source\PSoC5/Surtidor.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/Surtidor.c **** *  operation.
 172:.\Generated_Source\PSoC5/Surtidor.c **** 
 173:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
 174:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 175:.\Generated_Source\PSoC5/Surtidor.c **** *
 176:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 7


 177:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 178:.\Generated_Source\PSoC5/Surtidor.c **** *
 179:.\Generated_Source\PSoC5/Surtidor.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/Surtidor.c **** *  Surtidor_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/Surtidor.c **** *
 182:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/Surtidor.c **** void Surtidor_Enable(void) 
 184:.\Generated_Source\PSoC5/Surtidor.c **** {
 167              		.loc 1 184 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171 0000 80B5     		push	{r7, lr}
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 175 0002 82B0     		sub	sp, sp, #8
 176              		.cfi_def_cfa_offset 16
 177 0004 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/Surtidor.c ****     enableInterrupts = CyEnterCriticalSection();
 179              		.loc 1 186 0
 180 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 181 000a 0346     		mov	r3, r0
 182 000c FB71     		strb	r3, [r7, #7]
 187:.\Generated_Source\PSoC5/Surtidor.c **** 
 188:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_RX_ENABLED || Surtidor_HD_ENABLED)
 189:.\Generated_Source\PSoC5/Surtidor.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXBITCTR_CONTROL_REG |= Surtidor_CNTR_ENABLE;
 183              		.loc 1 190 0
 184 000e 114B     		ldr	r3, .L9
 185 0010 104A     		ldr	r2, .L9
 186 0012 1278     		ldrb	r2, [r2]
 187 0014 D2B2     		uxtb	r2, r2
 188 0016 42F02002 		orr	r2, r2, #32
 189 001a D2B2     		uxtb	r2, r2
 190 001c 1A70     		strb	r2, [r3]
 191:.\Generated_Source\PSoC5/Surtidor.c **** 
 192:.\Generated_Source\PSoC5/Surtidor.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXSTATUS_ACTL_REG  |= Surtidor_INT_ENABLE;
 191              		.loc 1 193 0
 192 001e 0E4B     		ldr	r3, .L9+4
 193 0020 0D4A     		ldr	r2, .L9+4
 194 0022 1278     		ldrb	r2, [r2]
 195 0024 D2B2     		uxtb	r2, r2
 196 0026 42F01002 		orr	r2, r2, #16
 197 002a D2B2     		uxtb	r2, r2
 198 002c 1A70     		strb	r2, [r3]
 194:.\Generated_Source\PSoC5/Surtidor.c **** 
 195:.\Generated_Source\PSoC5/Surtidor.c ****         #if (Surtidor_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_EnableRxInt();
 199              		.loc 1 196 0
 200 002e 0B4B     		ldr	r3, .L9+8
 201 0030 2022     		movs	r2, #32
 202 0032 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC5/Surtidor.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 8


 198:.\Generated_Source\PSoC5/Surtidor.c ****             #if (Surtidor_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* (Surtidor_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* (Surtidor_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_RX_ENABLED || Surtidor_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/Surtidor.c **** 
 204:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_TX_ENABLED)
 205:.\Generated_Source\PSoC5/Surtidor.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/Surtidor.c ****         #if(!Surtidor_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXBITCTR_CONTROL_REG |= Surtidor_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/Surtidor.c **** 
 210:.\Generated_Source\PSoC5/Surtidor.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_TXSTATUS_ACTL_REG |= Surtidor_INT_ENABLE;
 203              		.loc 1 211 0
 204 0034 0A4B     		ldr	r3, .L9+12
 205 0036 0A4A     		ldr	r2, .L9+12
 206 0038 1278     		ldrb	r2, [r2]
 207 003a D2B2     		uxtb	r2, r2
 208 003c 42F01002 		orr	r2, r2, #16
 209 0040 D2B2     		uxtb	r2, r2
 210 0042 1A70     		strb	r2, [r3]
 212:.\Generated_Source\PSoC5/Surtidor.c ****         #if (Surtidor_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_EnableTxInt();
 215:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* (Surtidor_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/Surtidor.c ****      #endif /* (Surtidor_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/Surtidor.c **** 
 218:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_IntClock_Start();  /* Enable the clock */
 220:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/Surtidor.c **** 
 222:.\Generated_Source\PSoC5/Surtidor.c ****     CyExitCriticalSection(enableInterrupts);
 211              		.loc 1 222 0
 212 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 213 0046 1846     		mov	r0, r3
 214 0048 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/Surtidor.c **** }
 215              		.loc 1 223 0
 216 004c 0837     		adds	r7, r7, #8
 217 004e BD46     		mov	sp, r7
 218              		@ sp needed
 219 0050 80BD     		pop	{r7, pc}
 220              	.L10:
 221 0052 00BF     		.align	2
 222              	.L9:
 223 0054 98640040 		.word	1073767576
 224 0058 97650040 		.word	1073767831
 225 005c 00E100E0 		.word	-536813312
 226 0060 95650040 		.word	1073767829
 227              		.cfi_endproc
 228              	.LFE2:
 229              		.size	Surtidor_Enable, .-Surtidor_Enable
 230              		.section	.text.Surtidor_Stop,"ax",%progbits
 231              		.align	2
 232              		.global	Surtidor_Stop
 233              		.thumb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 9


 234              		.thumb_func
 235              		.type	Surtidor_Stop, %function
 236              	Surtidor_Stop:
 237              	.LFB3:
 224:.\Generated_Source\PSoC5/Surtidor.c **** 
 225:.\Generated_Source\PSoC5/Surtidor.c **** 
 226:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_Stop
 228:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/Surtidor.c **** *
 230:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
 231:.\Generated_Source\PSoC5/Surtidor.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/Surtidor.c **** *
 233:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
 234:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 235:.\Generated_Source\PSoC5/Surtidor.c **** *
 236:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
 237:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 238:.\Generated_Source\PSoC5/Surtidor.c **** *
 239:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/Surtidor.c **** void Surtidor_Stop(void) 
 241:.\Generated_Source\PSoC5/Surtidor.c **** {
 238              		.loc 1 241 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242 0000 80B5     		push	{r7, lr}
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 7, -8
 245              		.cfi_offset 14, -4
 246 0002 82B0     		sub	sp, sp, #8
 247              		.cfi_def_cfa_offset 16
 248 0004 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/Surtidor.c ****     enableInterrupts = CyEnterCriticalSection();
 250              		.loc 1 243 0
 251 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 252 000a 0346     		mov	r3, r0
 253 000c FB71     		strb	r3, [r7, #7]
 244:.\Generated_Source\PSoC5/Surtidor.c **** 
 245:.\Generated_Source\PSoC5/Surtidor.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_RX_ENABLED || Surtidor_HD_ENABLED)
 247:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXBITCTR_CONTROL_REG &= (uint8) ~Surtidor_CNTR_ENABLE;
 254              		.loc 1 247 0
 255 000e 114B     		ldr	r3, .L12
 256 0010 104A     		ldr	r2, .L12
 257 0012 1278     		ldrb	r2, [r2]
 258 0014 D2B2     		uxtb	r2, r2
 259 0016 22F02002 		bic	r2, r2, #32
 260 001a D2B2     		uxtb	r2, r2
 261 001c 1A70     		strb	r2, [r3]
 248:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_RX_ENABLED || Surtidor_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/Surtidor.c **** 
 250:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_TX_ENABLED)
 251:.\Generated_Source\PSoC5/Surtidor.c ****         #if(!Surtidor_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXBITCTR_CONTROL_REG &= (uint8) ~Surtidor_CNTR_ENABLE;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 10


 253:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* (!Surtidor_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/Surtidor.c **** 
 256:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_IntClock_Stop();   /* Disable the clock */
 258:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/Surtidor.c **** 
 260:.\Generated_Source\PSoC5/Surtidor.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_RX_ENABLED || Surtidor_HD_ENABLED)
 262:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXSTATUS_ACTL_REG  &= (uint8) ~Surtidor_INT_ENABLE;
 262              		.loc 1 262 0
 263 001e 0E4B     		ldr	r3, .L12+4
 264 0020 0D4A     		ldr	r2, .L12+4
 265 0022 1278     		ldrb	r2, [r2]
 266 0024 D2B2     		uxtb	r2, r2
 267 0026 22F01002 		bic	r2, r2, #16
 268 002a D2B2     		uxtb	r2, r2
 269 002c 1A70     		strb	r2, [r3]
 263:.\Generated_Source\PSoC5/Surtidor.c **** 
 264:.\Generated_Source\PSoC5/Surtidor.c ****         #if (Surtidor_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_DisableRxInt();
 270              		.loc 1 265 0
 271 002e 0B4B     		ldr	r3, .L12+8
 272 0030 2022     		movs	r2, #32
 273 0032 1A60     		str	r2, [r3]
 266:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* (Surtidor_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_RX_ENABLED || Surtidor_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/Surtidor.c **** 
 269:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_TX_ENABLED)
 270:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_TXSTATUS_ACTL_REG &= (uint8) ~Surtidor_INT_ENABLE;
 274              		.loc 1 270 0
 275 0034 0A4B     		ldr	r3, .L12+12
 276 0036 0A4A     		ldr	r2, .L12+12
 277 0038 1278     		ldrb	r2, [r2]
 278 003a D2B2     		uxtb	r2, r2
 279 003c 22F01002 		bic	r2, r2, #16
 280 0040 D2B2     		uxtb	r2, r2
 281 0042 1A70     		strb	r2, [r3]
 271:.\Generated_Source\PSoC5/Surtidor.c **** 
 272:.\Generated_Source\PSoC5/Surtidor.c ****         #if (Surtidor_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_DisableTxInt();
 274:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* (Surtidor_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/Surtidor.c **** 
 277:.\Generated_Source\PSoC5/Surtidor.c ****     CyExitCriticalSection(enableInterrupts);
 282              		.loc 1 277 0
 283 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 284 0046 1846     		mov	r0, r3
 285 0048 FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC5/Surtidor.c **** }
 286              		.loc 1 278 0
 287 004c 0837     		adds	r7, r7, #8
 288 004e BD46     		mov	sp, r7
 289              		@ sp needed
 290 0050 80BD     		pop	{r7, pc}
 291              	.L13:
 292 0052 00BF     		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 11


 293              	.L12:
 294 0054 98640040 		.word	1073767576
 295 0058 97650040 		.word	1073767831
 296 005c 80E100E0 		.word	-536813184
 297 0060 95650040 		.word	1073767829
 298              		.cfi_endproc
 299              	.LFE3:
 300              		.size	Surtidor_Stop, .-Surtidor_Stop
 301              		.section	.text.Surtidor_ReadControlRegister,"ax",%progbits
 302              		.align	2
 303              		.global	Surtidor_ReadControlRegister
 304              		.thumb
 305              		.thumb_func
 306              		.type	Surtidor_ReadControlRegister, %function
 307              	Surtidor_ReadControlRegister:
 308              	.LFB4:
 279:.\Generated_Source\PSoC5/Surtidor.c **** 
 280:.\Generated_Source\PSoC5/Surtidor.c **** 
 281:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_ReadControlRegister
 283:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/Surtidor.c **** *
 285:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
 286:.\Generated_Source\PSoC5/Surtidor.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/Surtidor.c **** *
 288:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
 289:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 290:.\Generated_Source\PSoC5/Surtidor.c **** *
 291:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
 292:.\Generated_Source\PSoC5/Surtidor.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/Surtidor.c **** *
 294:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/Surtidor.c **** uint8 Surtidor_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/Surtidor.c **** {
 309              		.loc 1 296 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 0000 80B4     		push	{r7}
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 00AF     		add	r7, sp, #0
 318              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/Surtidor.c ****         return(0u);
 319              		.loc 1 298 0
 320 0004 0023     		movs	r3, #0
 299:.\Generated_Source\PSoC5/Surtidor.c ****     #else
 300:.\Generated_Source\PSoC5/Surtidor.c ****         return(Surtidor_CONTROL_REG);
 301:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/Surtidor.c **** }
 321              		.loc 1 302 0
 322 0006 1846     		mov	r0, r3
 323 0008 BD46     		mov	sp, r7
 324              		@ sp needed
 325 000a 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 12


 326 000e 7047     		bx	lr
 327              		.cfi_endproc
 328              	.LFE4:
 329              		.size	Surtidor_ReadControlRegister, .-Surtidor_ReadControlRegister
 330              		.section	.text.Surtidor_WriteControlRegister,"ax",%progbits
 331              		.align	2
 332              		.global	Surtidor_WriteControlRegister
 333              		.thumb
 334              		.thumb_func
 335              		.type	Surtidor_WriteControlRegister, %function
 336              	Surtidor_WriteControlRegister:
 337              	.LFB5:
 303:.\Generated_Source\PSoC5/Surtidor.c **** 
 304:.\Generated_Source\PSoC5/Surtidor.c **** 
 305:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_WriteControlRegister
 307:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/Surtidor.c **** *
 309:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
 310:.\Generated_Source\PSoC5/Surtidor.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/Surtidor.c **** *
 312:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
 313:.\Generated_Source\PSoC5/Surtidor.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/Surtidor.c **** *
 315:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
 316:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 317:.\Generated_Source\PSoC5/Surtidor.c **** *
 318:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/Surtidor.c **** void  Surtidor_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/Surtidor.c **** {
 338              		.loc 1 320 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 8
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343 0000 80B4     		push	{r7}
 344              		.cfi_def_cfa_offset 4
 345              		.cfi_offset 7, -4
 346 0002 83B0     		sub	sp, sp, #12
 347              		.cfi_def_cfa_offset 16
 348 0004 00AF     		add	r7, sp, #0
 349              		.cfi_def_cfa_register 7
 350 0006 0346     		mov	r3, r0
 351 0008 FB71     		strb	r3, [r7, #7]
 321:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/Surtidor.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/Surtidor.c ****         {
 324:.\Generated_Source\PSoC5/Surtidor.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/Surtidor.c ****         }
 326:.\Generated_Source\PSoC5/Surtidor.c ****     #else
 327:.\Generated_Source\PSoC5/Surtidor.c ****        Surtidor_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/Surtidor.c **** }
 352              		.loc 1 329 0
 353 000a 0C37     		adds	r7, r7, #12
 354 000c BD46     		mov	sp, r7
 355              		@ sp needed
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 13


 356 000e 5DF8047B 		ldr	r7, [sp], #4
 357 0012 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE5:
 360              		.size	Surtidor_WriteControlRegister, .-Surtidor_WriteControlRegister
 361              		.section	.text.Surtidor_SetRxInterruptMode,"ax",%progbits
 362              		.align	2
 363              		.global	Surtidor_SetRxInterruptMode
 364              		.thumb
 365              		.thumb_func
 366              		.type	Surtidor_SetRxInterruptMode, %function
 367              	Surtidor_SetRxInterruptMode:
 368              	.LFB6:
 330:.\Generated_Source\PSoC5/Surtidor.c **** 
 331:.\Generated_Source\PSoC5/Surtidor.c **** 
 332:.\Generated_Source\PSoC5/Surtidor.c **** #if(Surtidor_RX_ENABLED || Surtidor_HD_ENABLED)
 333:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/Surtidor.c ****     *
 337:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 338:.\Generated_Source\PSoC5/Surtidor.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/Surtidor.c ****     *
 340:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/Surtidor.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/Surtidor.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/Surtidor.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/Surtidor.c ****     *      Surtidor_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/Surtidor.c ****     *      Surtidor_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/Surtidor.c ****     *      Surtidor_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/Surtidor.c ****     *      Surtidor_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/Surtidor.c ****     *      Surtidor_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/Surtidor.c ****     *      Surtidor_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/Surtidor.c ****     *      Surtidor_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/Surtidor.c ****     *
 352:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 353:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 354:.\Generated_Source\PSoC5/Surtidor.c ****     *
 355:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
 356:.\Generated_Source\PSoC5/Surtidor.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/Surtidor.c ****     *
 358:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/Surtidor.c ****     {
 369              		.loc 1 360 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 8
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374 0000 80B4     		push	{r7}
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 7, -4
 377 0002 83B0     		sub	sp, sp, #12
 378              		.cfi_def_cfa_offset 16
 379 0004 00AF     		add	r7, sp, #0
 380              		.cfi_def_cfa_register 7
 381 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 14


 382 0008 FB71     		strb	r3, [r7, #7]
 361:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXSTATUS_MASK_REG  = intSrc;
 383              		.loc 1 361 0
 384 000a 044B     		ldr	r3, .L18
 385 000c FA79     		ldrb	r2, [r7, #7]
 386 000e 1A70     		strb	r2, [r3]
 362:.\Generated_Source\PSoC5/Surtidor.c ****     }
 387              		.loc 1 362 0
 388 0010 0C37     		adds	r7, r7, #12
 389 0012 BD46     		mov	sp, r7
 390              		@ sp needed
 391 0014 5DF8047B 		ldr	r7, [sp], #4
 392 0018 7047     		bx	lr
 393              	.L19:
 394 001a 00BF     		.align	2
 395              	.L18:
 396 001c 87650040 		.word	1073767815
 397              		.cfi_endproc
 398              	.LFE6:
 399              		.size	Surtidor_SetRxInterruptMode, .-Surtidor_SetRxInterruptMode
 400              		.section	.text.Surtidor_ReadRxData,"ax",%progbits
 401              		.align	2
 402              		.global	Surtidor_ReadRxData
 403              		.thumb
 404              		.thumb_func
 405              		.type	Surtidor_ReadRxData, %function
 406              	Surtidor_ReadRxData:
 407              	.LFB7:
 363:.\Generated_Source\PSoC5/Surtidor.c **** 
 364:.\Generated_Source\PSoC5/Surtidor.c **** 
 365:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_ReadRxData
 367:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/Surtidor.c ****     *
 369:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 370:.\Generated_Source\PSoC5/Surtidor.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/Surtidor.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/Surtidor.c ****     *
 373:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 375:.\Generated_Source\PSoC5/Surtidor.c ****     *
 376:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 377:.\Generated_Source\PSoC5/Surtidor.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/Surtidor.c ****     *
 379:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/Surtidor.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/Surtidor.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/Surtidor.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/Surtidor.c ****     *
 388:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
 390:.\Generated_Source\PSoC5/Surtidor.c ****     *
 391:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 15


 392:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/Surtidor.c ****     {
 408              		.loc 1 393 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 8
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413 0000 80B4     		push	{r7}
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 7, -4
 416 0002 83B0     		sub	sp, sp, #12
 417              		.cfi_def_cfa_offset 16
 418 0004 00AF     		add	r7, sp, #0
 419              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/Surtidor.c **** 
 396:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/Surtidor.c **** 
 398:.\Generated_Source\PSoC5/Surtidor.c ****         uint16 locRxBufferRead;
 399:.\Generated_Source\PSoC5/Surtidor.c ****         uint16 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/Surtidor.c **** 
 401:.\Generated_Source\PSoC5/Surtidor.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_DisableRxInt();
 420              		.loc 1 402 0
 421 0006 1C4B     		ldr	r3, .L27
 422 0008 2022     		movs	r2, #32
 423 000a 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC5/Surtidor.c **** 
 404:.\Generated_Source\PSoC5/Surtidor.c ****         locRxBufferRead  = Surtidor_rxBufferRead;
 424              		.loc 1 404 0
 425 000c 1B4B     		ldr	r3, .L27+4
 426 000e 1B88     		ldrh	r3, [r3]	@ movhi
 427 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 405:.\Generated_Source\PSoC5/Surtidor.c ****         locRxBufferWrite = Surtidor_rxBufferWrite;
 428              		.loc 1 405 0
 429 0012 1B4B     		ldr	r3, .L27+8
 430 0014 1B88     		ldrh	r3, [r3]	@ movhi
 431 0016 7B80     		strh	r3, [r7, #2]	@ movhi
 406:.\Generated_Source\PSoC5/Surtidor.c **** 
 407:.\Generated_Source\PSoC5/Surtidor.c ****         if( (Surtidor_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 432              		.loc 1 407 0
 433 0018 1A4B     		ldr	r3, .L27+12
 434 001a 1B78     		ldrb	r3, [r3]
 435 001c DBB2     		uxtb	r3, r3
 436 001e 002B     		cmp	r3, #0
 437 0020 03D1     		bne	.L21
 438              		.loc 1 407 0 is_stmt 0 discriminator 1
 439 0022 BA88     		ldrh	r2, [r7, #4]
 440 0024 7B88     		ldrh	r3, [r7, #2]
 441 0026 9A42     		cmp	r2, r3
 442 0028 18D0     		beq	.L22
 443              	.L21:
 408:.\Generated_Source\PSoC5/Surtidor.c ****         {
 409:.\Generated_Source\PSoC5/Surtidor.c ****             rxData = Surtidor_rxBuffer[locRxBufferRead];
 444              		.loc 1 409 0 is_stmt 1
 445 002a BB88     		ldrh	r3, [r7, #4]
 446 002c 164A     		ldr	r2, .L27+16
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 16


 447 002e D35C     		ldrb	r3, [r2, r3]
 448 0030 FB71     		strb	r3, [r7, #7]
 410:.\Generated_Source\PSoC5/Surtidor.c ****             locRxBufferRead++;
 449              		.loc 1 410 0
 450 0032 BB88     		ldrh	r3, [r7, #4]
 451 0034 0133     		adds	r3, r3, #1
 452 0036 BB80     		strh	r3, [r7, #4]	@ movhi
 411:.\Generated_Source\PSoC5/Surtidor.c **** 
 412:.\Generated_Source\PSoC5/Surtidor.c ****             if(locRxBufferRead >= Surtidor_RX_BUFFER_SIZE)
 453              		.loc 1 412 0
 454 0038 BB88     		ldrh	r3, [r7, #4]
 455 003a FF2B     		cmp	r3, #255
 456 003c 01D9     		bls	.L23
 413:.\Generated_Source\PSoC5/Surtidor.c ****             {
 414:.\Generated_Source\PSoC5/Surtidor.c ****                 locRxBufferRead = 0u;
 457              		.loc 1 414 0
 458 003e 0023     		movs	r3, #0
 459 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 460              	.L23:
 415:.\Generated_Source\PSoC5/Surtidor.c ****             }
 416:.\Generated_Source\PSoC5/Surtidor.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_rxBufferRead = locRxBufferRead;
 461              		.loc 1 417 0
 462 0042 0E4B     		ldr	r3, .L27+4
 463 0044 BA88     		ldrh	r2, [r7, #4]	@ movhi
 464 0046 1A80     		strh	r2, [r3]	@ movhi
 418:.\Generated_Source\PSoC5/Surtidor.c **** 
 419:.\Generated_Source\PSoC5/Surtidor.c ****             if(Surtidor_rxBufferLoopDetect != 0u)
 465              		.loc 1 419 0
 466 0048 0E4B     		ldr	r3, .L27+12
 467 004a 1B78     		ldrb	r3, [r3]
 468 004c DBB2     		uxtb	r3, r3
 469 004e 002B     		cmp	r3, #0
 470 0050 03D0     		beq	.L24
 420:.\Generated_Source\PSoC5/Surtidor.c ****             {
 421:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_rxBufferLoopDetect = 0u;
 471              		.loc 1 421 0
 472 0052 0C4B     		ldr	r3, .L27+12
 473 0054 0022     		movs	r2, #0
 474 0056 1A70     		strb	r2, [r3]
 419:.\Generated_Source\PSoC5/Surtidor.c ****             if(Surtidor_rxBufferLoopDetect != 0u)
 475              		.loc 1 419 0
 476 0058 03E0     		b	.L25
 477              	.L24:
 419:.\Generated_Source\PSoC5/Surtidor.c ****             if(Surtidor_rxBufferLoopDetect != 0u)
 478              		.loc 1 419 0 is_stmt 0 discriminator 1
 479 005a 02E0     		b	.L25
 480              	.L22:
 422:.\Generated_Source\PSoC5/Surtidor.c ****                 #if ((Surtidor_RX_INTERRUPT_ENABLED) && (Surtidor_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/Surtidor.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/Surtidor.c ****                     #if( Surtidor_HD_ENABLED )
 425:.\Generated_Source\PSoC5/Surtidor.c ****                         if((Surtidor_CONTROL_REG & Surtidor_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/Surtidor.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/Surtidor.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/Surtidor.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/Surtidor.c ****                             */
 430:.\Generated_Source\PSoC5/Surtidor.c ****                             Surtidor_RXSTATUS_MASK_REG  |= Surtidor_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 17


 431:.\Generated_Source\PSoC5/Surtidor.c ****                         }
 432:.\Generated_Source\PSoC5/Surtidor.c ****                     #else
 433:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_RXSTATUS_MASK_REG  |= Surtidor_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* end Surtidor_HD_ENABLED */
 435:.\Generated_Source\PSoC5/Surtidor.c ****                 #endif /* ((Surtidor_RX_INTERRUPT_ENABLED) && (Surtidor_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/Surtidor.c ****             }
 437:.\Generated_Source\PSoC5/Surtidor.c ****         }
 438:.\Generated_Source\PSoC5/Surtidor.c ****         else
 439:.\Generated_Source\PSoC5/Surtidor.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/Surtidor.c ****             rxData = Surtidor_RXDATA_REG;
 481              		.loc 1 440 0 is_stmt 1
 482 005c 0B4B     		ldr	r3, .L27+20
 483 005e 1B78     		ldrb	r3, [r3]
 484 0060 FB71     		strb	r3, [r7, #7]
 485              	.L25:
 441:.\Generated_Source\PSoC5/Surtidor.c ****         }
 442:.\Generated_Source\PSoC5/Surtidor.c **** 
 443:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_EnableRxInt();
 486              		.loc 1 443 0
 487 0062 0B4B     		ldr	r3, .L27+24
 488 0064 2022     		movs	r2, #32
 489 0066 1A60     		str	r2, [r3]
 444:.\Generated_Source\PSoC5/Surtidor.c **** 
 445:.\Generated_Source\PSoC5/Surtidor.c ****     #else
 446:.\Generated_Source\PSoC5/Surtidor.c **** 
 447:.\Generated_Source\PSoC5/Surtidor.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/Surtidor.c ****         rxData = Surtidor_RXDATA_REG;
 449:.\Generated_Source\PSoC5/Surtidor.c **** 
 450:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/Surtidor.c **** 
 452:.\Generated_Source\PSoC5/Surtidor.c ****         return(rxData);
 490              		.loc 1 452 0
 491 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:.\Generated_Source\PSoC5/Surtidor.c ****     }
 492              		.loc 1 453 0
 493 006a 1846     		mov	r0, r3
 494 006c 0C37     		adds	r7, r7, #12
 495 006e BD46     		mov	sp, r7
 496              		@ sp needed
 497 0070 5DF8047B 		ldr	r7, [sp], #4
 498 0074 7047     		bx	lr
 499              	.L28:
 500 0076 00BF     		.align	2
 501              	.L27:
 502 0078 80E100E0 		.word	-536813184
 503 007c 00000000 		.word	Surtidor_rxBufferRead
 504 0080 00000000 		.word	Surtidor_rxBufferWrite
 505 0084 00000000 		.word	Surtidor_rxBufferLoopDetect
 506 0088 00000000 		.word	Surtidor_rxBuffer
 507 008c 48640040 		.word	1073767496
 508 0090 00E100E0 		.word	-536813312
 509              		.cfi_endproc
 510              	.LFE7:
 511              		.size	Surtidor_ReadRxData, .-Surtidor_ReadRxData
 512              		.section	.text.Surtidor_ReadRxStatus,"ax",%progbits
 513              		.align	2
 514              		.global	Surtidor_ReadRxStatus
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 18


 515              		.thumb
 516              		.thumb_func
 517              		.type	Surtidor_ReadRxStatus, %function
 518              	Surtidor_ReadRxStatus:
 519              	.LFB8:
 454:.\Generated_Source\PSoC5/Surtidor.c **** 
 455:.\Generated_Source\PSoC5/Surtidor.c **** 
 456:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_ReadRxStatus
 458:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/Surtidor.c ****     *
 460:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 461:.\Generated_Source\PSoC5/Surtidor.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/Surtidor.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/Surtidor.c ****     *
 464:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 466:.\Generated_Source\PSoC5/Surtidor.c ****     *
 467:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 468:.\Generated_Source\PSoC5/Surtidor.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/Surtidor.c ****     *
 470:.\Generated_Source\PSoC5/Surtidor.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/Surtidor.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/Surtidor.c ****     *  register read.
 475:.\Generated_Source\PSoC5/Surtidor.c ****     *
 476:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/Surtidor.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/Surtidor.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/Surtidor.c ****     *   bits.
 483:.\Generated_Source\PSoC5/Surtidor.c ****     *
 484:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/Surtidor.c ****     {
 520              		.loc 1 486 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 8
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525 0000 80B4     		push	{r7}
 526              		.cfi_def_cfa_offset 4
 527              		.cfi_offset 7, -4
 528 0002 83B0     		sub	sp, sp, #12
 529              		.cfi_def_cfa_offset 16
 530 0004 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 487:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/Surtidor.c **** 
 489:.\Generated_Source\PSoC5/Surtidor.c ****         status = Surtidor_RXSTATUS_REG & Surtidor_RX_HW_MASK;
 532              		.loc 1 489 0
 533 0006 0C4B     		ldr	r3, .L32
 534 0008 1B78     		ldrb	r3, [r3]
 535 000a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 19


 536 000c 03F07F03 		and	r3, r3, #127
 537 0010 FB71     		strb	r3, [r7, #7]
 490:.\Generated_Source\PSoC5/Surtidor.c **** 
 491:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_rxBufferOverflow != 0u)
 538              		.loc 1 492 0
 539 0012 0A4B     		ldr	r3, .L32+4
 540 0014 1B78     		ldrb	r3, [r3]
 541 0016 DBB2     		uxtb	r3, r3
 542 0018 002B     		cmp	r3, #0
 543 001a 06D0     		beq	.L30
 493:.\Generated_Source\PSoC5/Surtidor.c ****         {
 494:.\Generated_Source\PSoC5/Surtidor.c ****             status |= Surtidor_RX_STS_SOFT_BUFF_OVER;
 544              		.loc 1 494 0
 545 001c FB79     		ldrb	r3, [r7, #7]
 546 001e 63F07F03 		orn	r3, r3, #127
 547 0022 FB71     		strb	r3, [r7, #7]
 495:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_rxBufferOverflow = 0u;
 548              		.loc 1 495 0
 549 0024 054B     		ldr	r3, .L32+4
 550 0026 0022     		movs	r2, #0
 551 0028 1A70     		strb	r2, [r3]
 552              	.L30:
 496:.\Generated_Source\PSoC5/Surtidor.c ****         }
 497:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/Surtidor.c **** 
 499:.\Generated_Source\PSoC5/Surtidor.c ****         return(status);
 553              		.loc 1 499 0
 554 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:.\Generated_Source\PSoC5/Surtidor.c ****     }
 555              		.loc 1 500 0
 556 002c 1846     		mov	r0, r3
 557 002e 0C37     		adds	r7, r7, #12
 558 0030 BD46     		mov	sp, r7
 559              		@ sp needed
 560 0032 5DF8047B 		ldr	r7, [sp], #4
 561 0036 7047     		bx	lr
 562              	.L33:
 563              		.align	2
 564              	.L32:
 565 0038 67650040 		.word	1073767783
 566 003c 00000000 		.word	Surtidor_rxBufferOverflow
 567              		.cfi_endproc
 568              	.LFE8:
 569              		.size	Surtidor_ReadRxStatus, .-Surtidor_ReadRxStatus
 570              		.section	.text.Surtidor_GetChar,"ax",%progbits
 571              		.align	2
 572              		.global	Surtidor_GetChar
 573              		.thumb
 574              		.thumb_func
 575              		.type	Surtidor_GetChar, %function
 576              	Surtidor_GetChar:
 577              	.LFB9:
 501:.\Generated_Source\PSoC5/Surtidor.c **** 
 502:.\Generated_Source\PSoC5/Surtidor.c **** 
 503:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_GetChar
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 20


 505:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/Surtidor.c ****     *
 507:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 508:.\Generated_Source\PSoC5/Surtidor.c ****     *  Returns the last received byte of data. Surtidor_GetChar() is
 509:.\Generated_Source\PSoC5/Surtidor.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/Surtidor.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/Surtidor.c ****     *
 512:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 514:.\Generated_Source\PSoC5/Surtidor.c ****     *
 515:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 516:.\Generated_Source\PSoC5/Surtidor.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/Surtidor.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/Surtidor.c ****     *
 519:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/Surtidor.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/Surtidor.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/Surtidor.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/Surtidor.c ****     *
 528:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
 530:.\Generated_Source\PSoC5/Surtidor.c ****     *
 531:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_GetChar(void) 
 533:.\Generated_Source\PSoC5/Surtidor.c ****     {
 578              		.loc 1 533 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 8
 581              		@ frame_needed = 1, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 583 0000 80B4     		push	{r7}
 584              		.cfi_def_cfa_offset 4
 585              		.cfi_offset 7, -4
 586 0002 83B0     		sub	sp, sp, #12
 587              		.cfi_def_cfa_offset 16
 588 0004 00AF     		add	r7, sp, #0
 589              		.cfi_def_cfa_register 7
 534:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 rxData = 0u;
 590              		.loc 1 534 0
 591 0006 0023     		movs	r3, #0
 592 0008 FB71     		strb	r3, [r7, #7]
 535:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/Surtidor.c **** 
 537:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/Surtidor.c ****         uint16 locRxBufferRead;
 539:.\Generated_Source\PSoC5/Surtidor.c ****         uint16 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/Surtidor.c **** 
 541:.\Generated_Source\PSoC5/Surtidor.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_DisableRxInt();
 593              		.loc 1 542 0
 594 000a 234B     		ldr	r3, .L41
 595 000c 2022     		movs	r2, #32
 596 000e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 21


 543:.\Generated_Source\PSoC5/Surtidor.c **** 
 544:.\Generated_Source\PSoC5/Surtidor.c ****         locRxBufferRead  = Surtidor_rxBufferRead;
 597              		.loc 1 544 0
 598 0010 224B     		ldr	r3, .L41+4
 599 0012 1B88     		ldrh	r3, [r3]	@ movhi
 600 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 545:.\Generated_Source\PSoC5/Surtidor.c ****         locRxBufferWrite = Surtidor_rxBufferWrite;
 601              		.loc 1 545 0
 602 0016 224B     		ldr	r3, .L41+8
 603 0018 1B88     		ldrh	r3, [r3]	@ movhi
 604 001a 7B80     		strh	r3, [r7, #2]	@ movhi
 546:.\Generated_Source\PSoC5/Surtidor.c **** 
 547:.\Generated_Source\PSoC5/Surtidor.c ****         if( (Surtidor_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 605              		.loc 1 547 0
 606 001c 214B     		ldr	r3, .L41+12
 607 001e 1B78     		ldrb	r3, [r3]
 608 0020 DBB2     		uxtb	r3, r3
 609 0022 002B     		cmp	r3, #0
 610 0024 03D1     		bne	.L35
 611              		.loc 1 547 0 is_stmt 0 discriminator 1
 612 0026 BA88     		ldrh	r2, [r7, #4]
 613 0028 7B88     		ldrh	r3, [r7, #2]
 614 002a 9A42     		cmp	r2, r3
 615 002c 18D0     		beq	.L36
 616              	.L35:
 548:.\Generated_Source\PSoC5/Surtidor.c ****         {
 549:.\Generated_Source\PSoC5/Surtidor.c ****             rxData = Surtidor_rxBuffer[locRxBufferRead];
 617              		.loc 1 549 0 is_stmt 1
 618 002e BB88     		ldrh	r3, [r7, #4]
 619 0030 1D4A     		ldr	r2, .L41+16
 620 0032 D35C     		ldrb	r3, [r2, r3]
 621 0034 FB71     		strb	r3, [r7, #7]
 550:.\Generated_Source\PSoC5/Surtidor.c ****             locRxBufferRead++;
 622              		.loc 1 550 0
 623 0036 BB88     		ldrh	r3, [r7, #4]
 624 0038 0133     		adds	r3, r3, #1
 625 003a BB80     		strh	r3, [r7, #4]	@ movhi
 551:.\Generated_Source\PSoC5/Surtidor.c ****             if(locRxBufferRead >= Surtidor_RX_BUFFER_SIZE)
 626              		.loc 1 551 0
 627 003c BB88     		ldrh	r3, [r7, #4]
 628 003e FF2B     		cmp	r3, #255
 629 0040 01D9     		bls	.L37
 552:.\Generated_Source\PSoC5/Surtidor.c ****             {
 553:.\Generated_Source\PSoC5/Surtidor.c ****                 locRxBufferRead = 0u;
 630              		.loc 1 553 0
 631 0042 0023     		movs	r3, #0
 632 0044 BB80     		strh	r3, [r7, #4]	@ movhi
 633              	.L37:
 554:.\Generated_Source\PSoC5/Surtidor.c ****             }
 555:.\Generated_Source\PSoC5/Surtidor.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_rxBufferRead = locRxBufferRead;
 634              		.loc 1 556 0
 635 0046 154B     		ldr	r3, .L41+4
 636 0048 BA88     		ldrh	r2, [r7, #4]	@ movhi
 637 004a 1A80     		strh	r2, [r3]	@ movhi
 557:.\Generated_Source\PSoC5/Surtidor.c **** 
 558:.\Generated_Source\PSoC5/Surtidor.c ****             if(Surtidor_rxBufferLoopDetect != 0u)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 22


 638              		.loc 1 558 0
 639 004c 154B     		ldr	r3, .L41+12
 640 004e 1B78     		ldrb	r3, [r3]
 641 0050 DBB2     		uxtb	r3, r3
 642 0052 002B     		cmp	r3, #0
 643 0054 03D0     		beq	.L38
 559:.\Generated_Source\PSoC5/Surtidor.c ****             {
 560:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_rxBufferLoopDetect = 0u;
 644              		.loc 1 560 0
 645 0056 134B     		ldr	r3, .L41+12
 646 0058 0022     		movs	r2, #0
 647 005a 1A70     		strb	r2, [r3]
 558:.\Generated_Source\PSoC5/Surtidor.c ****             if(Surtidor_rxBufferLoopDetect != 0u)
 648              		.loc 1 558 0
 649 005c 12E0     		b	.L39
 650              	.L38:
 558:.\Generated_Source\PSoC5/Surtidor.c ****             if(Surtidor_rxBufferLoopDetect != 0u)
 651              		.loc 1 558 0 is_stmt 0 discriminator 1
 652 005e 11E0     		b	.L39
 653              	.L36:
 561:.\Generated_Source\PSoC5/Surtidor.c ****                 #if( (Surtidor_RX_INTERRUPT_ENABLED) && (Surtidor_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/Surtidor.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/Surtidor.c ****                     #if( Surtidor_HD_ENABLED )
 564:.\Generated_Source\PSoC5/Surtidor.c ****                         if((Surtidor_CONTROL_REG & Surtidor_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/Surtidor.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/Surtidor.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/Surtidor.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/Surtidor.c ****                             */
 569:.\Generated_Source\PSoC5/Surtidor.c ****                             Surtidor_RXSTATUS_MASK_REG |= Surtidor_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/Surtidor.c ****                         }
 571:.\Generated_Source\PSoC5/Surtidor.c ****                     #else
 572:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_RXSTATUS_MASK_REG |= Surtidor_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* end Surtidor_HD_ENABLED */
 574:.\Generated_Source\PSoC5/Surtidor.c ****                 #endif /* Surtidor_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/Surtidor.c ****             }
 576:.\Generated_Source\PSoC5/Surtidor.c **** 
 577:.\Generated_Source\PSoC5/Surtidor.c ****         }
 578:.\Generated_Source\PSoC5/Surtidor.c ****         else
 579:.\Generated_Source\PSoC5/Surtidor.c ****         {   rxStatus = Surtidor_RXSTATUS_REG;
 654              		.loc 1 579 0 is_stmt 1
 655 0060 124B     		ldr	r3, .L41+20
 656 0062 1B78     		ldrb	r3, [r3]
 657 0064 7B70     		strb	r3, [r7, #1]
 580:.\Generated_Source\PSoC5/Surtidor.c ****             if((rxStatus & Surtidor_RX_STS_FIFO_NOTEMPTY) != 0u)
 658              		.loc 1 580 0
 659 0066 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 660 0068 03F02003 		and	r3, r3, #32
 661 006c 002B     		cmp	r3, #0
 662 006e 09D0     		beq	.L39
 581:.\Generated_Source\PSoC5/Surtidor.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/Surtidor.c ****                 rxData = Surtidor_RXDATA_REG;
 663              		.loc 1 582 0
 664 0070 0F4B     		ldr	r3, .L41+24
 665 0072 1B78     		ldrb	r3, [r3]
 666 0074 FB71     		strb	r3, [r7, #7]
 583:.\Generated_Source\PSoC5/Surtidor.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/Surtidor.c ****                 if((rxStatus & (Surtidor_RX_STS_BREAK | Surtidor_RX_STS_PAR_ERROR |
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 23


 585:.\Generated_Source\PSoC5/Surtidor.c ****                                 Surtidor_RX_STS_STOP_ERROR | Surtidor_RX_STS_OVERRUN)) != 0u)
 667              		.loc 1 585 0
 668 0076 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 669 0078 03F01E03 		and	r3, r3, #30
 584:.\Generated_Source\PSoC5/Surtidor.c ****                 if((rxStatus & (Surtidor_RX_STS_BREAK | Surtidor_RX_STS_PAR_ERROR |
 670              		.loc 1 584 0
 671 007c 002B     		cmp	r3, #0
 672 007e 01D0     		beq	.L39
 586:.\Generated_Source\PSoC5/Surtidor.c ****                 {
 587:.\Generated_Source\PSoC5/Surtidor.c ****                     rxData = 0u;
 673              		.loc 1 587 0
 674 0080 0023     		movs	r3, #0
 675 0082 FB71     		strb	r3, [r7, #7]
 676              	.L39:
 588:.\Generated_Source\PSoC5/Surtidor.c ****                 }
 589:.\Generated_Source\PSoC5/Surtidor.c ****             }
 590:.\Generated_Source\PSoC5/Surtidor.c ****         }
 591:.\Generated_Source\PSoC5/Surtidor.c **** 
 592:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_EnableRxInt();
 677              		.loc 1 592 0
 678 0084 0B4B     		ldr	r3, .L41+28
 679 0086 2022     		movs	r2, #32
 680 0088 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC5/Surtidor.c **** 
 594:.\Generated_Source\PSoC5/Surtidor.c ****     #else
 595:.\Generated_Source\PSoC5/Surtidor.c **** 
 596:.\Generated_Source\PSoC5/Surtidor.c ****         rxStatus =Surtidor_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/Surtidor.c ****         if((rxStatus & Surtidor_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/Surtidor.c ****         {
 599:.\Generated_Source\PSoC5/Surtidor.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/Surtidor.c ****             rxData = Surtidor_RXDATA_REG;
 601:.\Generated_Source\PSoC5/Surtidor.c **** 
 602:.\Generated_Source\PSoC5/Surtidor.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/Surtidor.c ****             if((rxStatus & (Surtidor_RX_STS_BREAK | Surtidor_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/Surtidor.c ****                             Surtidor_RX_STS_STOP_ERROR | Surtidor_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/Surtidor.c ****             {
 606:.\Generated_Source\PSoC5/Surtidor.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/Surtidor.c ****             }
 608:.\Generated_Source\PSoC5/Surtidor.c ****         }
 609:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/Surtidor.c **** 
 611:.\Generated_Source\PSoC5/Surtidor.c ****         return(rxData);
 681              		.loc 1 611 0
 682 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:.\Generated_Source\PSoC5/Surtidor.c ****     }
 683              		.loc 1 612 0
 684 008c 1846     		mov	r0, r3
 685 008e 0C37     		adds	r7, r7, #12
 686 0090 BD46     		mov	sp, r7
 687              		@ sp needed
 688 0092 5DF8047B 		ldr	r7, [sp], #4
 689 0096 7047     		bx	lr
 690              	.L42:
 691              		.align	2
 692              	.L41:
 693 0098 80E100E0 		.word	-536813184
 694 009c 00000000 		.word	Surtidor_rxBufferRead
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 24


 695 00a0 00000000 		.word	Surtidor_rxBufferWrite
 696 00a4 00000000 		.word	Surtidor_rxBufferLoopDetect
 697 00a8 00000000 		.word	Surtidor_rxBuffer
 698 00ac 67650040 		.word	1073767783
 699 00b0 48640040 		.word	1073767496
 700 00b4 00E100E0 		.word	-536813312
 701              		.cfi_endproc
 702              	.LFE9:
 703              		.size	Surtidor_GetChar, .-Surtidor_GetChar
 704              		.section	.text.Surtidor_GetByte,"ax",%progbits
 705              		.align	2
 706              		.global	Surtidor_GetByte
 707              		.thumb
 708              		.thumb_func
 709              		.type	Surtidor_GetByte, %function
 710              	Surtidor_GetByte:
 711              	.LFB10:
 613:.\Generated_Source\PSoC5/Surtidor.c **** 
 614:.\Generated_Source\PSoC5/Surtidor.c **** 
 615:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_GetByte
 617:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/Surtidor.c ****     *
 619:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 620:.\Generated_Source\PSoC5/Surtidor.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/Surtidor.c ****     *  condition.
 622:.\Generated_Source\PSoC5/Surtidor.c ****     *
 623:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 625:.\Generated_Source\PSoC5/Surtidor.c ****     *
 626:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 627:.\Generated_Source\PSoC5/Surtidor.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/Surtidor.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/Surtidor.c ****     *
 630:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
 632:.\Generated_Source\PSoC5/Surtidor.c ****     *
 633:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/Surtidor.c ****     uint16 Surtidor_GetByte(void) 
 635:.\Generated_Source\PSoC5/Surtidor.c ****     {
 712              		.loc 1 635 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 8
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716 0000 90B5     		push	{r4, r7, lr}
 717              		.cfi_def_cfa_offset 12
 718              		.cfi_offset 4, -12
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 83B0     		sub	sp, sp, #12
 722              		.cfi_def_cfa_offset 24
 723 0004 00AF     		add	r7, sp, #0
 724              		.cfi_def_cfa_register 7
 636:.\Generated_Source\PSoC5/Surtidor.c ****         
 637:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/Surtidor.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/Surtidor.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 25


 640:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_DisableRxInt();
 725              		.loc 1 640 0
 726 0006 0C4B     		ldr	r3, .L45
 727 0008 2022     		movs	r2, #32
 728 000a 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC5/Surtidor.c ****         locErrorStatus = (uint16)Surtidor_errorStatus;
 729              		.loc 1 641 0
 730 000c 0B4B     		ldr	r3, .L45+4
 731 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 732 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_errorStatus = 0u;
 733              		.loc 1 642 0
 734 0012 0A4B     		ldr	r3, .L45+4
 735 0014 0022     		movs	r2, #0
 736 0016 1A70     		strb	r2, [r3]
 643:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_EnableRxInt();
 737              		.loc 1 643 0
 738 0018 094B     		ldr	r3, .L45+8
 739 001a 2022     		movs	r2, #32
 740 001c 1A60     		str	r2, [r3]
 644:.\Generated_Source\PSoC5/Surtidor.c ****         return ( (uint16)(locErrorStatus << 8u) | Surtidor_ReadRxData() );
 741              		.loc 1 644 0
 742 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 743 0020 1B02     		lsls	r3, r3, #8
 744 0022 9CB2     		uxth	r4, r3
 745 0024 FFF7FEFF 		bl	Surtidor_ReadRxData
 746 0028 0346     		mov	r3, r0
 747 002a 2343     		orrs	r3, r3, r4
 748 002c 9BB2     		uxth	r3, r3
 645:.\Generated_Source\PSoC5/Surtidor.c ****     #else
 646:.\Generated_Source\PSoC5/Surtidor.c ****         return ( ((uint16)Surtidor_ReadRxStatus() << 8u) | Surtidor_ReadRxData() );
 647:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* Surtidor_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/Surtidor.c ****         
 649:.\Generated_Source\PSoC5/Surtidor.c ****     }
 749              		.loc 1 649 0
 750 002e 1846     		mov	r0, r3
 751 0030 0C37     		adds	r7, r7, #12
 752 0032 BD46     		mov	sp, r7
 753              		@ sp needed
 754 0034 90BD     		pop	{r4, r7, pc}
 755              	.L46:
 756 0036 00BF     		.align	2
 757              	.L45:
 758 0038 80E100E0 		.word	-536813184
 759 003c 00000000 		.word	Surtidor_errorStatus
 760 0040 00E100E0 		.word	-536813312
 761              		.cfi_endproc
 762              	.LFE10:
 763              		.size	Surtidor_GetByte, .-Surtidor_GetByte
 764              		.section	.text.Surtidor_GetRxBufferSize,"ax",%progbits
 765              		.align	2
 766              		.global	Surtidor_GetRxBufferSize
 767              		.thumb
 768              		.thumb_func
 769              		.type	Surtidor_GetRxBufferSize, %function
 770              	Surtidor_GetRxBufferSize:
 771              	.LFB11:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 26


 650:.\Generated_Source\PSoC5/Surtidor.c **** 
 651:.\Generated_Source\PSoC5/Surtidor.c **** 
 652:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_GetRxBufferSize
 654:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/Surtidor.c ****     *
 656:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 657:.\Generated_Source\PSoC5/Surtidor.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/Surtidor.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/Surtidor.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/Surtidor.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/Surtidor.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/Surtidor.c ****     *    account.
 663:.\Generated_Source\PSoC5/Surtidor.c ****     *
 664:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 666:.\Generated_Source\PSoC5/Surtidor.c ****     *
 667:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 668:.\Generated_Source\PSoC5/Surtidor.c ****     *  uint16: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/Surtidor.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/Surtidor.c ****     *
 671:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/Surtidor.c ****     *
 676:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
 678:.\Generated_Source\PSoC5/Surtidor.c ****     *
 679:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
 680:.\Generated_Source\PSoC5/Surtidor.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/Surtidor.c ****     *
 682:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/Surtidor.c ****     uint16 Surtidor_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/Surtidor.c ****                                                             
 685:.\Generated_Source\PSoC5/Surtidor.c ****     {
 772              		.loc 1 685 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 8
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777 0000 80B4     		push	{r7}
 778              		.cfi_def_cfa_offset 4
 779              		.cfi_offset 7, -4
 780 0002 83B0     		sub	sp, sp, #12
 781              		.cfi_def_cfa_offset 16
 782 0004 00AF     		add	r7, sp, #0
 783              		.cfi_def_cfa_register 7
 686:.\Generated_Source\PSoC5/Surtidor.c ****         uint16 size;
 687:.\Generated_Source\PSoC5/Surtidor.c **** 
 688:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/Surtidor.c **** 
 690:.\Generated_Source\PSoC5/Surtidor.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_DisableRxInt();
 784              		.loc 1 691 0
 785 0006 1E4B     		ldr	r3, .L54
 786 0008 2022     		movs	r2, #32
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 27


 787 000a 1A60     		str	r2, [r3]
 692:.\Generated_Source\PSoC5/Surtidor.c **** 
 693:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_rxBufferRead == Surtidor_rxBufferWrite)
 788              		.loc 1 693 0
 789 000c 1D4B     		ldr	r3, .L54+4
 790 000e 1B88     		ldrh	r3, [r3]	@ movhi
 791 0010 9AB2     		uxth	r2, r3
 792 0012 1D4B     		ldr	r3, .L54+8
 793 0014 1B88     		ldrh	r3, [r3]	@ movhi
 794 0016 9BB2     		uxth	r3, r3
 795 0018 9A42     		cmp	r2, r3
 796 001a 0BD1     		bne	.L48
 694:.\Generated_Source\PSoC5/Surtidor.c ****         {
 695:.\Generated_Source\PSoC5/Surtidor.c ****             if(Surtidor_rxBufferLoopDetect != 0u)
 797              		.loc 1 695 0
 798 001c 1B4B     		ldr	r3, .L54+12
 799 001e 1B78     		ldrb	r3, [r3]
 800 0020 DBB2     		uxtb	r3, r3
 801 0022 002B     		cmp	r3, #0
 802 0024 03D0     		beq	.L49
 696:.\Generated_Source\PSoC5/Surtidor.c ****             {
 697:.\Generated_Source\PSoC5/Surtidor.c ****                 size = Surtidor_RX_BUFFER_SIZE;
 803              		.loc 1 697 0
 804 0026 4FF48073 		mov	r3, #256
 805 002a FB80     		strh	r3, [r7, #6]	@ movhi
 806 002c 1EE0     		b	.L51
 807              	.L49:
 698:.\Generated_Source\PSoC5/Surtidor.c ****             }
 699:.\Generated_Source\PSoC5/Surtidor.c ****             else
 700:.\Generated_Source\PSoC5/Surtidor.c ****             {
 701:.\Generated_Source\PSoC5/Surtidor.c ****                 size = 0u;
 808              		.loc 1 701 0
 809 002e 0023     		movs	r3, #0
 810 0030 FB80     		strh	r3, [r7, #6]	@ movhi
 811 0032 1BE0     		b	.L51
 812              	.L48:
 702:.\Generated_Source\PSoC5/Surtidor.c ****             }
 703:.\Generated_Source\PSoC5/Surtidor.c ****         }
 704:.\Generated_Source\PSoC5/Surtidor.c ****         else if(Surtidor_rxBufferRead < Surtidor_rxBufferWrite)
 813              		.loc 1 704 0
 814 0034 134B     		ldr	r3, .L54+4
 815 0036 1B88     		ldrh	r3, [r3]	@ movhi
 816 0038 9AB2     		uxth	r2, r3
 817 003a 134B     		ldr	r3, .L54+8
 818 003c 1B88     		ldrh	r3, [r3]	@ movhi
 819 003e 9BB2     		uxth	r3, r3
 820 0040 9A42     		cmp	r2, r3
 821 0042 08D2     		bcs	.L52
 705:.\Generated_Source\PSoC5/Surtidor.c ****         {
 706:.\Generated_Source\PSoC5/Surtidor.c ****             size = (Surtidor_rxBufferWrite - Surtidor_rxBufferRead);
 822              		.loc 1 706 0
 823 0044 104B     		ldr	r3, .L54+8
 824 0046 1B88     		ldrh	r3, [r3]	@ movhi
 825 0048 9AB2     		uxth	r2, r3
 826 004a 0E4B     		ldr	r3, .L54+4
 827 004c 1B88     		ldrh	r3, [r3]	@ movhi
 828 004e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 28


 829 0050 D31A     		subs	r3, r2, r3
 830 0052 FB80     		strh	r3, [r7, #6]	@ movhi
 831 0054 0AE0     		b	.L51
 832              	.L52:
 707:.\Generated_Source\PSoC5/Surtidor.c ****         }
 708:.\Generated_Source\PSoC5/Surtidor.c ****         else
 709:.\Generated_Source\PSoC5/Surtidor.c ****         {
 710:.\Generated_Source\PSoC5/Surtidor.c ****             size = (Surtidor_RX_BUFFER_SIZE - Surtidor_rxBufferRead) + Surtidor_rxBufferWrite;
 833              		.loc 1 710 0
 834 0056 0C4B     		ldr	r3, .L54+8
 835 0058 1B88     		ldrh	r3, [r3]	@ movhi
 836 005a 9AB2     		uxth	r2, r3
 837 005c 094B     		ldr	r3, .L54+4
 838 005e 1B88     		ldrh	r3, [r3]	@ movhi
 839 0060 9BB2     		uxth	r3, r3
 840 0062 D31A     		subs	r3, r2, r3
 841 0064 9BB2     		uxth	r3, r3
 842 0066 03F58073 		add	r3, r3, #256
 843 006a FB80     		strh	r3, [r7, #6]	@ movhi
 844              	.L51:
 711:.\Generated_Source\PSoC5/Surtidor.c ****         }
 712:.\Generated_Source\PSoC5/Surtidor.c **** 
 713:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_EnableRxInt();
 845              		.loc 1 713 0
 846 006c 084B     		ldr	r3, .L54+16
 847 006e 2022     		movs	r2, #32
 848 0070 1A60     		str	r2, [r3]
 714:.\Generated_Source\PSoC5/Surtidor.c **** 
 715:.\Generated_Source\PSoC5/Surtidor.c ****     #else
 716:.\Generated_Source\PSoC5/Surtidor.c **** 
 717:.\Generated_Source\PSoC5/Surtidor.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/Surtidor.c ****         size = ((Surtidor_RXSTATUS_REG & Surtidor_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC5/Surtidor.c **** 
 720:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/Surtidor.c **** 
 722:.\Generated_Source\PSoC5/Surtidor.c ****         return(size);
 849              		.loc 1 722 0
 850 0072 FB88     		ldrh	r3, [r7, #6]
 723:.\Generated_Source\PSoC5/Surtidor.c ****     }
 851              		.loc 1 723 0
 852 0074 1846     		mov	r0, r3
 853 0076 0C37     		adds	r7, r7, #12
 854 0078 BD46     		mov	sp, r7
 855              		@ sp needed
 856 007a 5DF8047B 		ldr	r7, [sp], #4
 857 007e 7047     		bx	lr
 858              	.L55:
 859              		.align	2
 860              	.L54:
 861 0080 80E100E0 		.word	-536813184
 862 0084 00000000 		.word	Surtidor_rxBufferRead
 863 0088 00000000 		.word	Surtidor_rxBufferWrite
 864 008c 00000000 		.word	Surtidor_rxBufferLoopDetect
 865 0090 00E100E0 		.word	-536813312
 866              		.cfi_endproc
 867              	.LFE11:
 868              		.size	Surtidor_GetRxBufferSize, .-Surtidor_GetRxBufferSize
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 29


 869              		.section	.text.Surtidor_ClearRxBuffer,"ax",%progbits
 870              		.align	2
 871              		.global	Surtidor_ClearRxBuffer
 872              		.thumb
 873              		.thumb_func
 874              		.type	Surtidor_ClearRxBuffer, %function
 875              	Surtidor_ClearRxBuffer:
 876              	.LFB12:
 724:.\Generated_Source\PSoC5/Surtidor.c **** 
 725:.\Generated_Source\PSoC5/Surtidor.c **** 
 726:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_ClearRxBuffer
 728:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/Surtidor.c ****     *
 730:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 731:.\Generated_Source\PSoC5/Surtidor.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/Surtidor.c ****     *
 733:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 735:.\Generated_Source\PSoC5/Surtidor.c ****     *
 736:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 737:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 738:.\Generated_Source\PSoC5/Surtidor.c ****     *
 739:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/Surtidor.c ****     *
 745:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
 747:.\Generated_Source\PSoC5/Surtidor.c ****     *
 748:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
 749:.\Generated_Source\PSoC5/Surtidor.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/Surtidor.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/Surtidor.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/Surtidor.c ****     *
 753:.\Generated_Source\PSoC5/Surtidor.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/Surtidor.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/Surtidor.c ****     *
 756:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/Surtidor.c ****     {
 877              		.loc 1 758 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 8
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881 0000 80B5     		push	{r7, lr}
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 7, -8
 884              		.cfi_offset 14, -4
 885 0002 82B0     		sub	sp, sp, #8
 886              		.cfi_def_cfa_offset 16
 887 0004 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/Surtidor.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 30


 761:.\Generated_Source\PSoC5/Surtidor.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/Surtidor.c ****         enableInterrupts = CyEnterCriticalSection();
 889              		.loc 1 762 0
 890 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 891 000a 0346     		mov	r3, r0
 892 000c FB71     		strb	r3, [r7, #7]
 763:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXDATA_AUX_CTL_REG |= (uint8)  Surtidor_RX_FIFO_CLR;
 893              		.loc 1 763 0
 894 000e 144B     		ldr	r3, .L57
 895 0010 134A     		ldr	r2, .L57
 896 0012 1278     		ldrb	r2, [r2]
 897 0014 D2B2     		uxtb	r2, r2
 898 0016 42F00102 		orr	r2, r2, #1
 899 001a D2B2     		uxtb	r2, r2
 900 001c 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXDATA_AUX_CTL_REG &= (uint8) ~Surtidor_RX_FIFO_CLR;
 901              		.loc 1 764 0
 902 001e 104B     		ldr	r3, .L57
 903 0020 0F4A     		ldr	r2, .L57
 904 0022 1278     		ldrb	r2, [r2]
 905 0024 D2B2     		uxtb	r2, r2
 906 0026 22F00102 		bic	r2, r2, #1
 907 002a D2B2     		uxtb	r2, r2
 908 002c 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC5/Surtidor.c ****         CyExitCriticalSection(enableInterrupts);
 909              		.loc 1 765 0
 910 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 911 0030 1846     		mov	r0, r3
 912 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC5/Surtidor.c **** 
 767:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/Surtidor.c **** 
 769:.\Generated_Source\PSoC5/Surtidor.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_DisableRxInt();
 913              		.loc 1 770 0
 914 0036 0B4B     		ldr	r3, .L57+4
 915 0038 2022     		movs	r2, #32
 916 003a 1A60     		str	r2, [r3]
 771:.\Generated_Source\PSoC5/Surtidor.c **** 
 772:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_rxBufferRead = 0u;
 917              		.loc 1 772 0
 918 003c 0A4B     		ldr	r3, .L57+8
 919 003e 0022     		movs	r2, #0
 920 0040 1A80     		strh	r2, [r3]	@ movhi
 773:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_rxBufferWrite = 0u;
 921              		.loc 1 773 0
 922 0042 0A4B     		ldr	r3, .L57+12
 923 0044 0022     		movs	r2, #0
 924 0046 1A80     		strh	r2, [r3]	@ movhi
 774:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_rxBufferLoopDetect = 0u;
 925              		.loc 1 774 0
 926 0048 094B     		ldr	r3, .L57+16
 927 004a 0022     		movs	r2, #0
 928 004c 1A70     		strb	r2, [r3]
 775:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_rxBufferOverflow = 0u;
 929              		.loc 1 775 0
 930 004e 094B     		ldr	r3, .L57+20
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 31


 931 0050 0022     		movs	r2, #0
 932 0052 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC5/Surtidor.c **** 
 777:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_EnableRxInt();
 933              		.loc 1 777 0
 934 0054 084B     		ldr	r3, .L57+24
 935 0056 2022     		movs	r2, #32
 936 0058 1A60     		str	r2, [r3]
 778:.\Generated_Source\PSoC5/Surtidor.c **** 
 779:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/Surtidor.c **** 
 781:.\Generated_Source\PSoC5/Surtidor.c ****     }
 937              		.loc 1 781 0
 938 005a 0837     		adds	r7, r7, #8
 939 005c BD46     		mov	sp, r7
 940              		@ sp needed
 941 005e 80BD     		pop	{r7, pc}
 942              	.L58:
 943              		.align	2
 944              	.L57:
 945 0060 98640040 		.word	1073767576
 946 0064 80E100E0 		.word	-536813184
 947 0068 00000000 		.word	Surtidor_rxBufferRead
 948 006c 00000000 		.word	Surtidor_rxBufferWrite
 949 0070 00000000 		.word	Surtidor_rxBufferLoopDetect
 950 0074 00000000 		.word	Surtidor_rxBufferOverflow
 951 0078 00E100E0 		.word	-536813312
 952              		.cfi_endproc
 953              	.LFE12:
 954              		.size	Surtidor_ClearRxBuffer, .-Surtidor_ClearRxBuffer
 955              		.section	.text.Surtidor_SetRxAddressMode,"ax",%progbits
 956              		.align	2
 957              		.global	Surtidor_SetRxAddressMode
 958              		.thumb
 959              		.thumb_func
 960              		.type	Surtidor_SetRxAddressMode, %function
 961              	Surtidor_SetRxAddressMode:
 962              	.LFB13:
 782:.\Generated_Source\PSoC5/Surtidor.c **** 
 783:.\Generated_Source\PSoC5/Surtidor.c **** 
 784:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetRxAddressMode
 786:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/Surtidor.c ****     *
 788:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 789:.\Generated_Source\PSoC5/Surtidor.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/Surtidor.c ****     *  UART.
 791:.\Generated_Source\PSoC5/Surtidor.c ****     *
 792:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/Surtidor.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/Surtidor.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/Surtidor.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/Surtidor.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 32


 801:.\Generated_Source\PSoC5/Surtidor.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/Surtidor.c ****     *
 804:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 805:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 806:.\Generated_Source\PSoC5/Surtidor.c ****     *
 807:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/Surtidor.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/Surtidor.c ****     *
 812:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/Surtidor.c ****                                                         
 815:.\Generated_Source\PSoC5/Surtidor.c ****     {
 963              		.loc 1 815 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 8
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967              		@ link register save eliminated.
 968 0000 80B4     		push	{r7}
 969              		.cfi_def_cfa_offset 4
 970              		.cfi_offset 7, -4
 971 0002 83B0     		sub	sp, sp, #12
 972              		.cfi_def_cfa_offset 16
 973 0004 00AF     		add	r7, sp, #0
 974              		.cfi_def_cfa_register 7
 975 0006 0346     		mov	r3, r0
 976 0008 FB71     		strb	r3, [r7, #7]
 816:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/Surtidor.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/Surtidor.c ****                 {
 820:.\Generated_Source\PSoC5/Surtidor.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/Surtidor.c ****                 }
 822:.\Generated_Source\PSoC5/Surtidor.c ****             #else /* Surtidor_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/Surtidor.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/Surtidor.c ****                 tmpCtrl = Surtidor_CONTROL_REG & (uint8)~Surtidor_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/Surtidor.c ****                 tmpCtrl |= (uint8)(addressMode << Surtidor_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/Surtidor.c **** 
 828:.\Generated_Source\PSoC5/Surtidor.c ****                 #if(Surtidor_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/Surtidor.c ****                    (Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/Surtidor.c ****                 #endif /* End Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/Surtidor.c ****         #else /* Surtidor_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/Surtidor.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/Surtidor.c ****             {
 837:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/Surtidor.c ****             }
 839:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/Surtidor.c ****     }
 977              		.loc 1 840 0
 978 000a 0C37     		adds	r7, r7, #12
 979 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 33


 980              		@ sp needed
 981 000e 5DF8047B 		ldr	r7, [sp], #4
 982 0012 7047     		bx	lr
 983              		.cfi_endproc
 984              	.LFE13:
 985              		.size	Surtidor_SetRxAddressMode, .-Surtidor_SetRxAddressMode
 986              		.section	.text.Surtidor_SetRxAddress1,"ax",%progbits
 987              		.align	2
 988              		.global	Surtidor_SetRxAddress1
 989              		.thumb
 990              		.thumb_func
 991              		.type	Surtidor_SetRxAddress1, %function
 992              	Surtidor_SetRxAddress1:
 993              	.LFB14:
 841:.\Generated_Source\PSoC5/Surtidor.c **** 
 842:.\Generated_Source\PSoC5/Surtidor.c **** 
 843:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetRxAddress1
 845:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/Surtidor.c ****     *
 847:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 848:.\Generated_Source\PSoC5/Surtidor.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/Surtidor.c ****     *
 850:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/Surtidor.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/Surtidor.c ****     *
 853:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 854:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 855:.\Generated_Source\PSoC5/Surtidor.c ****     *
 856:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/Surtidor.c ****     {
 994              		.loc 1 858 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 8
 997              		@ frame_needed = 1, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 999 0000 80B4     		push	{r7}
 1000              		.cfi_def_cfa_offset 4
 1001              		.cfi_offset 7, -4
 1002 0002 83B0     		sub	sp, sp, #12
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
 1006 0006 0346     		mov	r3, r0
 1007 0008 FB71     		strb	r3, [r7, #7]
 859:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXADDRESS1_REG = address;
 1008              		.loc 1 859 0
 1009 000a 044B     		ldr	r3, .L61
 1010 000c FA79     		ldrb	r2, [r7, #7]
 1011 000e 1A70     		strb	r2, [r3]
 860:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1012              		.loc 1 860 0
 1013 0010 0C37     		adds	r7, r7, #12
 1014 0012 BD46     		mov	sp, r7
 1015              		@ sp needed
 1016 0014 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 34


 1017 0018 7047     		bx	lr
 1018              	.L62:
 1019 001a 00BF     		.align	2
 1020              	.L61:
 1021 001c 28640040 		.word	1073767464
 1022              		.cfi_endproc
 1023              	.LFE14:
 1024              		.size	Surtidor_SetRxAddress1, .-Surtidor_SetRxAddress1
 1025              		.section	.text.Surtidor_SetRxAddress2,"ax",%progbits
 1026              		.align	2
 1027              		.global	Surtidor_SetRxAddress2
 1028              		.thumb
 1029              		.thumb_func
 1030              		.type	Surtidor_SetRxAddress2, %function
 1031              	Surtidor_SetRxAddress2:
 1032              	.LFB15:
 861:.\Generated_Source\PSoC5/Surtidor.c **** 
 862:.\Generated_Source\PSoC5/Surtidor.c **** 
 863:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetRxAddress2
 865:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/Surtidor.c ****     *
 867:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 868:.\Generated_Source\PSoC5/Surtidor.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/Surtidor.c ****     *
 870:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/Surtidor.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/Surtidor.c ****     *
 873:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 874:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 875:.\Generated_Source\PSoC5/Surtidor.c ****     *
 876:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1033              		.loc 1 878 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 8
 1036              		@ frame_needed = 1, uses_anonymous_args = 0
 1037              		@ link register save eliminated.
 1038 0000 80B4     		push	{r7}
 1039              		.cfi_def_cfa_offset 4
 1040              		.cfi_offset 7, -4
 1041 0002 83B0     		sub	sp, sp, #12
 1042              		.cfi_def_cfa_offset 16
 1043 0004 00AF     		add	r7, sp, #0
 1044              		.cfi_def_cfa_register 7
 1045 0006 0346     		mov	r3, r0
 1046 0008 FB71     		strb	r3, [r7, #7]
 879:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXADDRESS2_REG = address;
 1047              		.loc 1 879 0
 1048 000a 044B     		ldr	r3, .L64
 1049 000c FA79     		ldrb	r2, [r7, #7]
 1050 000e 1A70     		strb	r2, [r3]
 880:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1051              		.loc 1 880 0
 1052 0010 0C37     		adds	r7, r7, #12
 1053 0012 BD46     		mov	sp, r7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 35


 1054              		@ sp needed
 1055 0014 5DF8047B 		ldr	r7, [sp], #4
 1056 0018 7047     		bx	lr
 1057              	.L65:
 1058 001a 00BF     		.align	2
 1059              	.L64:
 1060 001c 38640040 		.word	1073767480
 1061              		.cfi_endproc
 1062              	.LFE15:
 1063              		.size	Surtidor_SetRxAddress2, .-Surtidor_SetRxAddress2
 1064              		.section	.text.Surtidor_SetTxInterruptMode,"ax",%progbits
 1065              		.align	2
 1066              		.global	Surtidor_SetTxInterruptMode
 1067              		.thumb
 1068              		.thumb_func
 1069              		.type	Surtidor_SetTxInterruptMode, %function
 1070              	Surtidor_SetTxInterruptMode:
 1071              	.LFB16:
 881:.\Generated_Source\PSoC5/Surtidor.c **** 
 882:.\Generated_Source\PSoC5/Surtidor.c **** #endif  /* Surtidor_RX_ENABLED || Surtidor_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/Surtidor.c **** 
 884:.\Generated_Source\PSoC5/Surtidor.c **** 
 885:.\Generated_Source\PSoC5/Surtidor.c **** #if( (Surtidor_TX_ENABLED) || (Surtidor_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/Surtidor.c ****     *
 890:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 891:.\Generated_Source\PSoC5/Surtidor.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/Surtidor.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/Surtidor.c ****     *
 894:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/Surtidor.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/Surtidor.c ****     *
 901:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 902:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 903:.\Generated_Source\PSoC5/Surtidor.c ****     *
 904:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
 905:.\Generated_Source\PSoC5/Surtidor.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/Surtidor.c ****     *
 907:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1072              		.loc 1 909 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 8
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 1077 0000 80B4     		push	{r7}
 1078              		.cfi_def_cfa_offset 4
 1079              		.cfi_offset 7, -4
 1080 0002 83B0     		sub	sp, sp, #12
 1081              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 36


 1082 0004 00AF     		add	r7, sp, #0
 1083              		.cfi_def_cfa_register 7
 1084 0006 0346     		mov	r3, r0
 1085 0008 FB71     		strb	r3, [r7, #7]
 910:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_TXSTATUS_MASK_REG = intSrc;
 1086              		.loc 1 910 0
 1087 000a 044B     		ldr	r3, .L67
 1088 000c FA79     		ldrb	r2, [r7, #7]
 1089 000e 1A70     		strb	r2, [r3]
 911:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1090              		.loc 1 911 0
 1091 0010 0C37     		adds	r7, r7, #12
 1092 0012 BD46     		mov	sp, r7
 1093              		@ sp needed
 1094 0014 5DF8047B 		ldr	r7, [sp], #4
 1095 0018 7047     		bx	lr
 1096              	.L68:
 1097 001a 00BF     		.align	2
 1098              	.L67:
 1099 001c 85650040 		.word	1073767813
 1100              		.cfi_endproc
 1101              	.LFE16:
 1102              		.size	Surtidor_SetTxInterruptMode, .-Surtidor_SetTxInterruptMode
 1103              		.section	.text.Surtidor_WriteTxData,"ax",%progbits
 1104              		.align	2
 1105              		.global	Surtidor_WriteTxData
 1106              		.thumb
 1107              		.thumb_func
 1108              		.type	Surtidor_WriteTxData, %function
 1109              	Surtidor_WriteTxData:
 1110              	.LFB17:
 912:.\Generated_Source\PSoC5/Surtidor.c **** 
 913:.\Generated_Source\PSoC5/Surtidor.c **** 
 914:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_WriteTxData
 916:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/Surtidor.c ****     *
 918:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 919:.\Generated_Source\PSoC5/Surtidor.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/Surtidor.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/Surtidor.c ****     *  separately.
 922:.\Generated_Source\PSoC5/Surtidor.c ****     *
 923:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/Surtidor.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/Surtidor.c ****     *
 926:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 927:.\Generated_Source\PSoC5/Surtidor.c ****     * None.
 928:.\Generated_Source\PSoC5/Surtidor.c ****     *
 929:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/Surtidor.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/Surtidor.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/Surtidor.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/Surtidor.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 37


 938:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
 940:.\Generated_Source\PSoC5/Surtidor.c ****     *
 941:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1111              		.loc 1 943 0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 8
 1114              		@ frame_needed = 1, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
 1116 0000 80B4     		push	{r7}
 1117              		.cfi_def_cfa_offset 4
 1118              		.cfi_offset 7, -4
 1119 0002 83B0     		sub	sp, sp, #12
 1120              		.cfi_def_cfa_offset 16
 1121 0004 00AF     		add	r7, sp, #0
 1122              		.cfi_def_cfa_register 7
 1123 0006 0346     		mov	r3, r0
 1124 0008 FB71     		strb	r3, [r7, #7]
 944:.\Generated_Source\PSoC5/Surtidor.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_initVar != 0u)
 1125              		.loc 1 945 0
 1126 000a 064B     		ldr	r3, .L71
 1127 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1128 000e 002B     		cmp	r3, #0
 1129 0010 02D0     		beq	.L69
 946:.\Generated_Source\PSoC5/Surtidor.c ****         {
 947:.\Generated_Source\PSoC5/Surtidor.c ****         #if (Surtidor_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/Surtidor.c **** 
 949:.\Generated_Source\PSoC5/Surtidor.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_DisableTxInt();
 951:.\Generated_Source\PSoC5/Surtidor.c **** 
 952:.\Generated_Source\PSoC5/Surtidor.c ****             if( (Surtidor_txBufferRead == Surtidor_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/Surtidor.c ****                 ((Surtidor_TXSTATUS_REG & Surtidor_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/Surtidor.c ****             {
 955:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/Surtidor.c ****             }
 958:.\Generated_Source\PSoC5/Surtidor.c ****             else
 959:.\Generated_Source\PSoC5/Surtidor.c ****             {
 960:.\Generated_Source\PSoC5/Surtidor.c ****                 if(Surtidor_txBufferWrite >= Surtidor_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/Surtidor.c ****                 {
 962:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/Surtidor.c ****                 }
 964:.\Generated_Source\PSoC5/Surtidor.c **** 
 965:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_txBuffer[Surtidor_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/Surtidor.c **** 
 967:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_txBufferWrite++;
 969:.\Generated_Source\PSoC5/Surtidor.c ****             }
 970:.\Generated_Source\PSoC5/Surtidor.c **** 
 971:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_EnableTxInt();
 972:.\Generated_Source\PSoC5/Surtidor.c **** 
 973:.\Generated_Source\PSoC5/Surtidor.c ****         #else
 974:.\Generated_Source\PSoC5/Surtidor.c **** 
 975:.\Generated_Source\PSoC5/Surtidor.c ****             /* Add directly to the FIFO. */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 38


 976:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXDATA_REG = txDataByte;
 1130              		.loc 1 976 0
 1131 0012 054B     		ldr	r3, .L71+4
 1132 0014 FA79     		ldrb	r2, [r7, #7]
 1133 0016 1A70     		strb	r2, [r3]
 1134              	.L69:
 977:.\Generated_Source\PSoC5/Surtidor.c **** 
 978:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /*(Surtidor_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/Surtidor.c ****         }
 980:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1135              		.loc 1 980 0
 1136 0018 0C37     		adds	r7, r7, #12
 1137 001a BD46     		mov	sp, r7
 1138              		@ sp needed
 1139 001c 5DF8047B 		ldr	r7, [sp], #4
 1140 0020 7047     		bx	lr
 1141              	.L72:
 1142 0022 00BF     		.align	2
 1143              	.L71:
 1144 0024 00000000 		.word	Surtidor_initVar
 1145 0028 45650040 		.word	1073767749
 1146              		.cfi_endproc
 1147              	.LFE17:
 1148              		.size	Surtidor_WriteTxData, .-Surtidor_WriteTxData
 1149              		.section	.text.Surtidor_ReadTxStatus,"ax",%progbits
 1150              		.align	2
 1151              		.global	Surtidor_ReadTxStatus
 1152              		.thumb
 1153              		.thumb_func
 1154              		.type	Surtidor_ReadTxStatus, %function
 1155              	Surtidor_ReadTxStatus:
 1156              	.LFB18:
 981:.\Generated_Source\PSoC5/Surtidor.c **** 
 982:.\Generated_Source\PSoC5/Surtidor.c **** 
 983:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_ReadTxStatus
 985:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/Surtidor.c ****     *
 987:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 988:.\Generated_Source\PSoC5/Surtidor.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/Surtidor.c ****     *
 990:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 992:.\Generated_Source\PSoC5/Surtidor.c ****     *
 993:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 994:.\Generated_Source\PSoC5/Surtidor.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/Surtidor.c ****     *
 996:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
 997:.\Generated_Source\PSoC5/Surtidor.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/Surtidor.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/Surtidor.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/Surtidor.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/Surtidor.c ****     *
1002:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1157              		.loc 1 1004 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 39


 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 1, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 1162 0000 80B4     		push	{r7}
 1163              		.cfi_def_cfa_offset 4
 1164              		.cfi_offset 7, -4
 1165 0002 00AF     		add	r7, sp, #0
 1166              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC5/Surtidor.c ****         return(Surtidor_TXSTATUS_REG);
 1167              		.loc 1 1005 0
 1168 0004 034B     		ldr	r3, .L75
 1169 0006 1B78     		ldrb	r3, [r3]
 1170 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1171              		.loc 1 1006 0
 1172 000a 1846     		mov	r0, r3
 1173 000c BD46     		mov	sp, r7
 1174              		@ sp needed
 1175 000e 5DF8047B 		ldr	r7, [sp], #4
 1176 0012 7047     		bx	lr
 1177              	.L76:
 1178              		.align	2
 1179              	.L75:
 1180 0014 65650040 		.word	1073767781
 1181              		.cfi_endproc
 1182              	.LFE18:
 1183              		.size	Surtidor_ReadTxStatus, .-Surtidor_ReadTxStatus
 1184              		.section	.text.Surtidor_PutChar,"ax",%progbits
 1185              		.align	2
 1186              		.global	Surtidor_PutChar
 1187              		.thumb
 1188              		.thumb_func
 1189              		.type	Surtidor_PutChar, %function
 1190              	Surtidor_PutChar:
 1191              	.LFB19:
1007:.\Generated_Source\PSoC5/Surtidor.c **** 
1008:.\Generated_Source\PSoC5/Surtidor.c **** 
1009:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_PutChar
1011:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/Surtidor.c ****     *
1013:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1014:.\Generated_Source\PSoC5/Surtidor.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/Surtidor.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/Surtidor.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/Surtidor.c ****     *
1018:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/Surtidor.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/Surtidor.c ****     *
1021:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1022:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1023:.\Generated_Source\PSoC5/Surtidor.c ****     *
1024:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/Surtidor.c ****     *     checked to identify free space in txBuffer and incremented after each byte
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 40


1028:.\Generated_Source\PSoC5/Surtidor.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/Surtidor.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/Surtidor.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/Surtidor.c ****     *
1034:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1036:.\Generated_Source\PSoC5/Surtidor.c ****     *
1037:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1038:.\Generated_Source\PSoC5/Surtidor.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/Surtidor.c ****     *
1040:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1192              		.loc 1 1042 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 8
 1195              		@ frame_needed = 1, uses_anonymous_args = 0
 1196              		@ link register save eliminated.
 1197 0000 80B4     		push	{r7}
 1198              		.cfi_def_cfa_offset 4
 1199              		.cfi_offset 7, -4
 1200 0002 83B0     		sub	sp, sp, #12
 1201              		.cfi_def_cfa_offset 16
 1202 0004 00AF     		add	r7, sp, #0
 1203              		.cfi_def_cfa_register 7
 1204 0006 0346     		mov	r3, r0
 1205 0008 FB71     		strb	r3, [r7, #7]
1043:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/Surtidor.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/Surtidor.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/Surtidor.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/Surtidor.c ****         */
1048:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/Surtidor.c **** 
1051:.\Generated_Source\PSoC5/Surtidor.c ****         do
1052:.\Generated_Source\PSoC5/Surtidor.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/Surtidor.c **** 
1054:.\Generated_Source\PSoC5/Surtidor.c ****         #if ((Surtidor_TX_BUFFER_SIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/Surtidor.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_DisableTxInt();
1057:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* (Surtidor_TX_BUFFER_SIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/Surtidor.c **** 
1059:.\Generated_Source\PSoC5/Surtidor.c ****             locTxBufferWrite = Surtidor_txBufferWrite;
1060:.\Generated_Source\PSoC5/Surtidor.c ****             locTxBufferRead  = Surtidor_txBufferRead;
1061:.\Generated_Source\PSoC5/Surtidor.c **** 
1062:.\Generated_Source\PSoC5/Surtidor.c ****         #if ((Surtidor_TX_BUFFER_SIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/Surtidor.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_EnableTxInt();
1065:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* (Surtidor_TX_BUFFER_SIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/Surtidor.c ****         }
1067:.\Generated_Source\PSoC5/Surtidor.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/Surtidor.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/Surtidor.c ****                                 (uint8)(Surtidor_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/Surtidor.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 41


1071:.\Generated_Source\PSoC5/Surtidor.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/Surtidor.c ****             ((Surtidor_TXSTATUS_REG & Surtidor_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/Surtidor.c ****         {
1074:.\Generated_Source\PSoC5/Surtidor.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/Surtidor.c ****         }
1077:.\Generated_Source\PSoC5/Surtidor.c ****         else
1078:.\Generated_Source\PSoC5/Surtidor.c ****         {
1079:.\Generated_Source\PSoC5/Surtidor.c ****             if(locTxBufferWrite >= Surtidor_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/Surtidor.c ****             {
1081:.\Generated_Source\PSoC5/Surtidor.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/Surtidor.c ****             }
1083:.\Generated_Source\PSoC5/Surtidor.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/Surtidor.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/Surtidor.c **** 
1087:.\Generated_Source\PSoC5/Surtidor.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/Surtidor.c ****         #if ((Surtidor_TX_BUFFER_SIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_DisableTxInt();
1090:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* (Surtidor_TX_BUFFER_SIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/Surtidor.c **** 
1092:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/Surtidor.c **** 
1094:.\Generated_Source\PSoC5/Surtidor.c ****         #if ((Surtidor_TX_BUFFER_SIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_EnableTxInt();
1096:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* (Surtidor_TX_BUFFER_SIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/Surtidor.c **** 
1098:.\Generated_Source\PSoC5/Surtidor.c ****             if(0u != (Surtidor_TXSTATUS_REG & Surtidor_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/Surtidor.c ****             {
1100:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/Surtidor.c ****             }
1103:.\Generated_Source\PSoC5/Surtidor.c ****         }
1104:.\Generated_Source\PSoC5/Surtidor.c **** 
1105:.\Generated_Source\PSoC5/Surtidor.c ****     #else
1106:.\Generated_Source\PSoC5/Surtidor.c **** 
1107:.\Generated_Source\PSoC5/Surtidor.c ****         while((Surtidor_TXSTATUS_REG & Surtidor_TX_STS_FIFO_FULL) != 0u)
 1206              		.loc 1 1107 0
 1207 000a 00BF     		nop
 1208              	.L78:
 1209              		.loc 1 1107 0 is_stmt 0 discriminator 1
 1210 000c 074B     		ldr	r3, .L79
 1211 000e 1B78     		ldrb	r3, [r3]
 1212 0010 DBB2     		uxtb	r3, r3
 1213 0012 03F00403 		and	r3, r3, #4
 1214 0016 002B     		cmp	r3, #0
 1215 0018 F8D1     		bne	.L78
1108:.\Generated_Source\PSoC5/Surtidor.c ****         {
1109:.\Generated_Source\PSoC5/Surtidor.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/Surtidor.c ****         }
1111:.\Generated_Source\PSoC5/Surtidor.c **** 
1112:.\Generated_Source\PSoC5/Surtidor.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_TXDATA_REG = txDataByte;
 1216              		.loc 1 1113 0 is_stmt 1
 1217 001a 054B     		ldr	r3, .L79+4
 1218 001c FA79     		ldrb	r2, [r7, #7]
 1219 001e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 42


1114:.\Generated_Source\PSoC5/Surtidor.c **** 
1115:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* Surtidor_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1220              		.loc 1 1116 0
 1221 0020 0C37     		adds	r7, r7, #12
 1222 0022 BD46     		mov	sp, r7
 1223              		@ sp needed
 1224 0024 5DF8047B 		ldr	r7, [sp], #4
 1225 0028 7047     		bx	lr
 1226              	.L80:
 1227 002a 00BF     		.align	2
 1228              	.L79:
 1229 002c 65650040 		.word	1073767781
 1230 0030 45650040 		.word	1073767749
 1231              		.cfi_endproc
 1232              	.LFE19:
 1233              		.size	Surtidor_PutChar, .-Surtidor_PutChar
 1234              		.section	.text.Surtidor_PutString,"ax",%progbits
 1235              		.align	2
 1236              		.global	Surtidor_PutString
 1237              		.thumb
 1238              		.thumb_func
 1239              		.type	Surtidor_PutString, %function
 1240              	Surtidor_PutString:
 1241              	.LFB20:
1117:.\Generated_Source\PSoC5/Surtidor.c **** 
1118:.\Generated_Source\PSoC5/Surtidor.c **** 
1119:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_PutString
1121:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/Surtidor.c ****     *
1123:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1124:.\Generated_Source\PSoC5/Surtidor.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/Surtidor.c ****     *
1126:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/Surtidor.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/Surtidor.c ****     *
1129:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1130:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1131:.\Generated_Source\PSoC5/Surtidor.c ****     *
1132:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/Surtidor.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/Surtidor.c ****     *
1136:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1138:.\Generated_Source\PSoC5/Surtidor.c ****     *
1139:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1140:.\Generated_Source\PSoC5/Surtidor.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/Surtidor.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/Surtidor.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/Surtidor.c ****     *
1144:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1242              		.loc 1 1146 0
 1243              		.cfi_startproc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 43


 1244              		@ args = 0, pretend = 0, frame = 16
 1245              		@ frame_needed = 1, uses_anonymous_args = 0
 1246 0000 80B5     		push	{r7, lr}
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 7, -8
 1249              		.cfi_offset 14, -4
 1250 0002 84B0     		sub	sp, sp, #16
 1251              		.cfi_def_cfa_offset 24
 1252 0004 00AF     		add	r7, sp, #0
 1253              		.cfi_def_cfa_register 7
 1254 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC5/Surtidor.c ****         uint16 bufIndex = 0u;
 1255              		.loc 1 1147 0
 1256 0008 0023     		movs	r3, #0
 1257 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:.\Generated_Source\PSoC5/Surtidor.c **** 
1149:.\Generated_Source\PSoC5/Surtidor.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_initVar != 0u)
 1258              		.loc 1 1150 0
 1259 000c 0B4B     		ldr	r3, .L85
 1260 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1261 0010 002B     		cmp	r3, #0
 1262 0012 10D0     		beq	.L81
1151:.\Generated_Source\PSoC5/Surtidor.c ****         {
1152:.\Generated_Source\PSoC5/Surtidor.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/Surtidor.c ****             while(string[bufIndex] != (char8) 0)
 1263              		.loc 1 1153 0
 1264 0014 09E0     		b	.L83
 1265              	.L84:
1154:.\Generated_Source\PSoC5/Surtidor.c ****             {
1155:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_PutChar((uint8)string[bufIndex]);
 1266              		.loc 1 1155 0
 1267 0016 FB89     		ldrh	r3, [r7, #14]
 1268 0018 7A68     		ldr	r2, [r7, #4]
 1269 001a 1344     		add	r3, r3, r2
 1270 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1271 001e 1846     		mov	r0, r3
 1272 0020 FFF7FEFF 		bl	Surtidor_PutChar
1156:.\Generated_Source\PSoC5/Surtidor.c ****                 bufIndex++;
 1273              		.loc 1 1156 0
 1274 0024 FB89     		ldrh	r3, [r7, #14]
 1275 0026 0133     		adds	r3, r3, #1
 1276 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1277              	.L83:
1153:.\Generated_Source\PSoC5/Surtidor.c ****             while(string[bufIndex] != (char8) 0)
 1278              		.loc 1 1153 0 discriminator 1
 1279 002a FB89     		ldrh	r3, [r7, #14]
 1280 002c 7A68     		ldr	r2, [r7, #4]
 1281 002e 1344     		add	r3, r3, r2
 1282 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1283 0032 002B     		cmp	r3, #0
 1284 0034 EFD1     		bne	.L84
 1285              	.L81:
1157:.\Generated_Source\PSoC5/Surtidor.c ****             }
1158:.\Generated_Source\PSoC5/Surtidor.c ****         }
1159:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1286              		.loc 1 1159 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 44


 1287 0036 1037     		adds	r7, r7, #16
 1288 0038 BD46     		mov	sp, r7
 1289              		@ sp needed
 1290 003a 80BD     		pop	{r7, pc}
 1291              	.L86:
 1292              		.align	2
 1293              	.L85:
 1294 003c 00000000 		.word	Surtidor_initVar
 1295              		.cfi_endproc
 1296              	.LFE20:
 1297              		.size	Surtidor_PutString, .-Surtidor_PutString
 1298              		.section	.text.Surtidor_PutArray,"ax",%progbits
 1299              		.align	2
 1300              		.global	Surtidor_PutArray
 1301              		.thumb
 1302              		.thumb_func
 1303              		.type	Surtidor_PutArray, %function
 1304              	Surtidor_PutArray:
 1305              	.LFB21:
1160:.\Generated_Source\PSoC5/Surtidor.c **** 
1161:.\Generated_Source\PSoC5/Surtidor.c **** 
1162:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_PutArray
1164:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/Surtidor.c ****     *
1166:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1167:.\Generated_Source\PSoC5/Surtidor.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/Surtidor.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/Surtidor.c ****     *
1170:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/Surtidor.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/Surtidor.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/Surtidor.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/Surtidor.c ****     *
1175:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1176:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1177:.\Generated_Source\PSoC5/Surtidor.c ****     *
1178:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/Surtidor.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/Surtidor.c ****     *
1182:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1184:.\Generated_Source\PSoC5/Surtidor.c ****     *
1185:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1186:.\Generated_Source\PSoC5/Surtidor.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/Surtidor.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/Surtidor.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/Surtidor.c ****     *
1190:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/Surtidor.c ****                                                                     
1193:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1306              		.loc 1 1193 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 16
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 45


 1310 0000 80B5     		push	{r7, lr}
 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 7, -8
 1313              		.cfi_offset 14, -4
 1314 0002 84B0     		sub	sp, sp, #16
 1315              		.cfi_def_cfa_offset 24
 1316 0004 00AF     		add	r7, sp, #0
 1317              		.cfi_def_cfa_register 7
 1318 0006 7860     		str	r0, [r7, #4]
 1319 0008 0B46     		mov	r3, r1
 1320 000a FB70     		strb	r3, [r7, #3]
1194:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 bufIndex = 0u;
 1321              		.loc 1 1194 0
 1322 000c 0023     		movs	r3, #0
 1323 000e FB73     		strb	r3, [r7, #15]
1195:.\Generated_Source\PSoC5/Surtidor.c **** 
1196:.\Generated_Source\PSoC5/Surtidor.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_initVar != 0u)
 1324              		.loc 1 1197 0
 1325 0010 0A4B     		ldr	r3, .L91
 1326 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1327 0014 002B     		cmp	r3, #0
 1328 0016 0ED0     		beq	.L87
1198:.\Generated_Source\PSoC5/Surtidor.c ****         {
1199:.\Generated_Source\PSoC5/Surtidor.c ****             while(bufIndex < byteCount)
 1329              		.loc 1 1199 0
 1330 0018 09E0     		b	.L89
 1331              	.L90:
1200:.\Generated_Source\PSoC5/Surtidor.c ****             {
1201:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_PutChar(string[bufIndex]);
 1332              		.loc 1 1201 0
 1333 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1334 001c 7A68     		ldr	r2, [r7, #4]
 1335 001e 1344     		add	r3, r3, r2
 1336 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1337 0022 1846     		mov	r0, r3
 1338 0024 FFF7FEFF 		bl	Surtidor_PutChar
1202:.\Generated_Source\PSoC5/Surtidor.c ****                 bufIndex++;
 1339              		.loc 1 1202 0
 1340 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1341 002a 0133     		adds	r3, r3, #1
 1342 002c FB73     		strb	r3, [r7, #15]
 1343              	.L89:
1199:.\Generated_Source\PSoC5/Surtidor.c ****             while(bufIndex < byteCount)
 1344              		.loc 1 1199 0 discriminator 1
 1345 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1346 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1347 0032 9A42     		cmp	r2, r3
 1348 0034 F1D3     		bcc	.L90
 1349              	.L87:
1203:.\Generated_Source\PSoC5/Surtidor.c ****             }
1204:.\Generated_Source\PSoC5/Surtidor.c ****         }
1205:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1350              		.loc 1 1205 0
 1351 0036 1037     		adds	r7, r7, #16
 1352 0038 BD46     		mov	sp, r7
 1353              		@ sp needed
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 46


 1354 003a 80BD     		pop	{r7, pc}
 1355              	.L92:
 1356              		.align	2
 1357              	.L91:
 1358 003c 00000000 		.word	Surtidor_initVar
 1359              		.cfi_endproc
 1360              	.LFE21:
 1361              		.size	Surtidor_PutArray, .-Surtidor_PutArray
 1362              		.section	.text.Surtidor_PutCRLF,"ax",%progbits
 1363              		.align	2
 1364              		.global	Surtidor_PutCRLF
 1365              		.thumb
 1366              		.thumb_func
 1367              		.type	Surtidor_PutCRLF, %function
 1368              	Surtidor_PutCRLF:
 1369              	.LFB22:
1206:.\Generated_Source\PSoC5/Surtidor.c **** 
1207:.\Generated_Source\PSoC5/Surtidor.c **** 
1208:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_PutCRLF
1210:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/Surtidor.c ****     *
1212:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1213:.\Generated_Source\PSoC5/Surtidor.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/Surtidor.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/Surtidor.c ****     *
1216:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/Surtidor.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/Surtidor.c ****     *
1219:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1220:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1221:.\Generated_Source\PSoC5/Surtidor.c ****     *
1222:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/Surtidor.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/Surtidor.c ****     *
1226:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1228:.\Generated_Source\PSoC5/Surtidor.c ****     *
1229:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1370              		.loc 1 1231 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 8
 1373              		@ frame_needed = 1, uses_anonymous_args = 0
 1374 0000 80B5     		push	{r7, lr}
 1375              		.cfi_def_cfa_offset 8
 1376              		.cfi_offset 7, -8
 1377              		.cfi_offset 14, -4
 1378 0002 82B0     		sub	sp, sp, #8
 1379              		.cfi_def_cfa_offset 16
 1380 0004 00AF     		add	r7, sp, #0
 1381              		.cfi_def_cfa_register 7
 1382 0006 0346     		mov	r3, r0
 1383 0008 FB71     		strb	r3, [r7, #7]
1232:.\Generated_Source\PSoC5/Surtidor.c ****         /* If not Initialized then skip this function */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 47


1233:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_initVar != 0u)
 1384              		.loc 1 1233 0
 1385 000a 084B     		ldr	r3, .L95
 1386 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1387 000e 002B     		cmp	r3, #0
 1388 0010 09D0     		beq	.L93
1234:.\Generated_Source\PSoC5/Surtidor.c ****         {
1235:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_PutChar(txDataByte);
 1389              		.loc 1 1235 0
 1390 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1391 0014 1846     		mov	r0, r3
 1392 0016 FFF7FEFF 		bl	Surtidor_PutChar
1236:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_PutChar(0x0Du);
 1393              		.loc 1 1236 0
 1394 001a 0D20     		movs	r0, #13
 1395 001c FFF7FEFF 		bl	Surtidor_PutChar
1237:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_PutChar(0x0Au);
 1396              		.loc 1 1237 0
 1397 0020 0A20     		movs	r0, #10
 1398 0022 FFF7FEFF 		bl	Surtidor_PutChar
 1399              	.L93:
1238:.\Generated_Source\PSoC5/Surtidor.c ****         }
1239:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1400              		.loc 1 1239 0
 1401 0026 0837     		adds	r7, r7, #8
 1402 0028 BD46     		mov	sp, r7
 1403              		@ sp needed
 1404 002a 80BD     		pop	{r7, pc}
 1405              	.L96:
 1406              		.align	2
 1407              	.L95:
 1408 002c 00000000 		.word	Surtidor_initVar
 1409              		.cfi_endproc
 1410              	.LFE22:
 1411              		.size	Surtidor_PutCRLF, .-Surtidor_PutCRLF
 1412              		.section	.text.Surtidor_GetTxBufferSize,"ax",%progbits
 1413              		.align	2
 1414              		.global	Surtidor_GetTxBufferSize
 1415              		.thumb
 1416              		.thumb_func
 1417              		.type	Surtidor_GetTxBufferSize, %function
 1418              	Surtidor_GetTxBufferSize:
 1419              	.LFB23:
1240:.\Generated_Source\PSoC5/Surtidor.c **** 
1241:.\Generated_Source\PSoC5/Surtidor.c **** 
1242:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_GetTxBufferSize
1244:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/Surtidor.c ****     *
1246:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1247:.\Generated_Source\PSoC5/Surtidor.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/Surtidor.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/Surtidor.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/Surtidor.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/Surtidor.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/Surtidor.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/Surtidor.c ****     *    TX FIFO do not count.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 48


1254:.\Generated_Source\PSoC5/Surtidor.c ****     *
1255:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1257:.\Generated_Source\PSoC5/Surtidor.c ****     *
1258:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1259:.\Generated_Source\PSoC5/Surtidor.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/Surtidor.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/Surtidor.c ****     *
1262:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/Surtidor.c ****     *
1266:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1268:.\Generated_Source\PSoC5/Surtidor.c ****     *
1269:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1270:.\Generated_Source\PSoC5/Surtidor.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/Surtidor.c ****     *
1272:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/Surtidor.c ****                                                             
1275:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1420              		.loc 1 1275 0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 8
 1423              		@ frame_needed = 1, uses_anonymous_args = 0
 1424              		@ link register save eliminated.
 1425 0000 80B4     		push	{r7}
 1426              		.cfi_def_cfa_offset 4
 1427              		.cfi_offset 7, -4
 1428 0002 83B0     		sub	sp, sp, #12
 1429              		.cfi_def_cfa_offset 16
 1430 0004 00AF     		add	r7, sp, #0
 1431              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/Surtidor.c **** 
1278:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/Surtidor.c **** 
1280:.\Generated_Source\PSoC5/Surtidor.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_DisableTxInt();
1282:.\Generated_Source\PSoC5/Surtidor.c **** 
1283:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_txBufferRead == Surtidor_txBufferWrite)
1284:.\Generated_Source\PSoC5/Surtidor.c ****         {
1285:.\Generated_Source\PSoC5/Surtidor.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/Surtidor.c ****         }
1287:.\Generated_Source\PSoC5/Surtidor.c ****         else if(Surtidor_txBufferRead < Surtidor_txBufferWrite)
1288:.\Generated_Source\PSoC5/Surtidor.c ****         {
1289:.\Generated_Source\PSoC5/Surtidor.c ****             size = (Surtidor_txBufferWrite - Surtidor_txBufferRead);
1290:.\Generated_Source\PSoC5/Surtidor.c ****         }
1291:.\Generated_Source\PSoC5/Surtidor.c ****         else
1292:.\Generated_Source\PSoC5/Surtidor.c ****         {
1293:.\Generated_Source\PSoC5/Surtidor.c ****             size = (Surtidor_TX_BUFFER_SIZE - Surtidor_txBufferRead) +
1294:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_txBufferWrite;
1295:.\Generated_Source\PSoC5/Surtidor.c ****         }
1296:.\Generated_Source\PSoC5/Surtidor.c **** 
1297:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_EnableTxInt();
1298:.\Generated_Source\PSoC5/Surtidor.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 49


1299:.\Generated_Source\PSoC5/Surtidor.c ****     #else
1300:.\Generated_Source\PSoC5/Surtidor.c **** 
1301:.\Generated_Source\PSoC5/Surtidor.c ****         size = Surtidor_TXSTATUS_REG;
 1432              		.loc 1 1301 0
 1433 0006 0E4B     		ldr	r3, .L102
 1434 0008 1B78     		ldrb	r3, [r3]
 1435 000a FB71     		strb	r3, [r7, #7]
1302:.\Generated_Source\PSoC5/Surtidor.c **** 
1303:.\Generated_Source\PSoC5/Surtidor.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/Surtidor.c ****         if((size & Surtidor_TX_STS_FIFO_FULL) != 0u)
 1436              		.loc 1 1304 0
 1437 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1438 000e 03F00403 		and	r3, r3, #4
 1439 0012 002B     		cmp	r3, #0
 1440 0014 02D0     		beq	.L98
1305:.\Generated_Source\PSoC5/Surtidor.c ****         {
1306:.\Generated_Source\PSoC5/Surtidor.c ****             size = Surtidor_FIFO_LENGTH;
 1441              		.loc 1 1306 0
 1442 0016 0423     		movs	r3, #4
 1443 0018 FB71     		strb	r3, [r7, #7]
 1444 001a 09E0     		b	.L99
 1445              	.L98:
1307:.\Generated_Source\PSoC5/Surtidor.c ****         }
1308:.\Generated_Source\PSoC5/Surtidor.c ****         else if((size & Surtidor_TX_STS_FIFO_EMPTY) != 0u)
 1446              		.loc 1 1308 0
 1447 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1448 001e 03F00203 		and	r3, r3, #2
 1449 0022 002B     		cmp	r3, #0
 1450 0024 02D0     		beq	.L100
1309:.\Generated_Source\PSoC5/Surtidor.c ****         {
1310:.\Generated_Source\PSoC5/Surtidor.c ****             size = 0u;
 1451              		.loc 1 1310 0
 1452 0026 0023     		movs	r3, #0
 1453 0028 FB71     		strb	r3, [r7, #7]
 1454 002a 01E0     		b	.L99
 1455              	.L100:
1311:.\Generated_Source\PSoC5/Surtidor.c ****         }
1312:.\Generated_Source\PSoC5/Surtidor.c ****         else
1313:.\Generated_Source\PSoC5/Surtidor.c ****         {
1314:.\Generated_Source\PSoC5/Surtidor.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/Surtidor.c ****             size = 1u;
 1456              		.loc 1 1315 0
 1457 002c 0123     		movs	r3, #1
 1458 002e FB71     		strb	r3, [r7, #7]
 1459              	.L99:
1316:.\Generated_Source\PSoC5/Surtidor.c ****         }
1317:.\Generated_Source\PSoC5/Surtidor.c **** 
1318:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/Surtidor.c **** 
1320:.\Generated_Source\PSoC5/Surtidor.c ****     return(size);
 1460              		.loc 1 1320 0
 1461 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1462              		.loc 1 1321 0
 1463 0032 1846     		mov	r0, r3
 1464 0034 0C37     		adds	r7, r7, #12
 1465 0036 BD46     		mov	sp, r7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 50


 1466              		@ sp needed
 1467 0038 5DF8047B 		ldr	r7, [sp], #4
 1468 003c 7047     		bx	lr
 1469              	.L103:
 1470 003e 00BF     		.align	2
 1471              	.L102:
 1472 0040 65650040 		.word	1073767781
 1473              		.cfi_endproc
 1474              	.LFE23:
 1475              		.size	Surtidor_GetTxBufferSize, .-Surtidor_GetTxBufferSize
 1476              		.section	.text.Surtidor_ClearTxBuffer,"ax",%progbits
 1477              		.align	2
 1478              		.global	Surtidor_ClearTxBuffer
 1479              		.thumb
 1480              		.thumb_func
 1481              		.type	Surtidor_ClearTxBuffer, %function
 1482              	Surtidor_ClearTxBuffer:
 1483              	.LFB24:
1322:.\Generated_Source\PSoC5/Surtidor.c **** 
1323:.\Generated_Source\PSoC5/Surtidor.c **** 
1324:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_ClearTxBuffer
1326:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/Surtidor.c ****     *
1328:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1329:.\Generated_Source\PSoC5/Surtidor.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/Surtidor.c ****     *
1331:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1333:.\Generated_Source\PSoC5/Surtidor.c ****     *
1334:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1335:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1336:.\Generated_Source\PSoC5/Surtidor.c ****     *
1337:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/Surtidor.c ****     *
1341:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1343:.\Generated_Source\PSoC5/Surtidor.c ****     *
1344:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1345:.\Generated_Source\PSoC5/Surtidor.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/Surtidor.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/Surtidor.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/Surtidor.c ****     *
1349:.\Generated_Source\PSoC5/Surtidor.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/Surtidor.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/Surtidor.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/Surtidor.c ****     *
1353:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1484              		.loc 1 1355 0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 8
 1487              		@ frame_needed = 1, uses_anonymous_args = 0
 1488 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 51


 1489              		.cfi_def_cfa_offset 8
 1490              		.cfi_offset 7, -8
 1491              		.cfi_offset 14, -4
 1492 0002 82B0     		sub	sp, sp, #8
 1493              		.cfi_def_cfa_offset 16
 1494 0004 00AF     		add	r7, sp, #0
 1495              		.cfi_def_cfa_register 7
1356:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/Surtidor.c **** 
1358:.\Generated_Source\PSoC5/Surtidor.c ****         enableInterrupts = CyEnterCriticalSection();
 1496              		.loc 1 1358 0
 1497 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1498 000a 0346     		mov	r3, r0
 1499 000c FB71     		strb	r3, [r7, #7]
1359:.\Generated_Source\PSoC5/Surtidor.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_TXDATA_AUX_CTL_REG |= (uint8)  Surtidor_TX_FIFO_CLR;
 1500              		.loc 1 1360 0
 1501 000e 0B4B     		ldr	r3, .L105
 1502 0010 0A4A     		ldr	r2, .L105
 1503 0012 1278     		ldrb	r2, [r2]
 1504 0014 D2B2     		uxtb	r2, r2
 1505 0016 42F00102 		orr	r2, r2, #1
 1506 001a D2B2     		uxtb	r2, r2
 1507 001c 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_TXDATA_AUX_CTL_REG &= (uint8) ~Surtidor_TX_FIFO_CLR;
 1508              		.loc 1 1361 0
 1509 001e 074B     		ldr	r3, .L105
 1510 0020 064A     		ldr	r2, .L105
 1511 0022 1278     		ldrb	r2, [r2]
 1512 0024 D2B2     		uxtb	r2, r2
 1513 0026 22F00102 		bic	r2, r2, #1
 1514 002a D2B2     		uxtb	r2, r2
 1515 002c 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/Surtidor.c ****         CyExitCriticalSection(enableInterrupts);
 1516              		.loc 1 1362 0
 1517 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1518 0030 1846     		mov	r0, r3
 1519 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC5/Surtidor.c **** 
1364:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/Surtidor.c **** 
1366:.\Generated_Source\PSoC5/Surtidor.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_DisableTxInt();
1368:.\Generated_Source\PSoC5/Surtidor.c **** 
1369:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/Surtidor.c **** 
1372:.\Generated_Source\PSoC5/Surtidor.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_EnableTxInt();
1374:.\Generated_Source\PSoC5/Surtidor.c **** 
1375:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* (Surtidor_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1520              		.loc 1 1376 0
 1521 0036 0837     		adds	r7, r7, #8
 1522 0038 BD46     		mov	sp, r7
 1523              		@ sp needed
 1524 003a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 52


 1525              	.L106:
 1526              		.align	2
 1527              	.L105:
 1528 003c 95650040 		.word	1073767829
 1529              		.cfi_endproc
 1530              	.LFE24:
 1531              		.size	Surtidor_ClearTxBuffer, .-Surtidor_ClearTxBuffer
 1532              		.section	.text.Surtidor_SendBreak,"ax",%progbits
 1533              		.align	2
 1534              		.global	Surtidor_SendBreak
 1535              		.thumb
 1536              		.thumb_func
 1537              		.type	Surtidor_SendBreak, %function
 1538              	Surtidor_SendBreak:
 1539              	.LFB25:
1377:.\Generated_Source\PSoC5/Surtidor.c **** 
1378:.\Generated_Source\PSoC5/Surtidor.c **** 
1379:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SendBreak
1381:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/Surtidor.c ****     *
1383:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1384:.\Generated_Source\PSoC5/Surtidor.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/Surtidor.c ****     *
1386:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/Surtidor.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/Surtidor.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/Surtidor.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/Surtidor.c ****     *       then return.
1394:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/Surtidor.c ****     *      Surtidor_SEND_BREAK and Surtidor_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/Surtidor.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/Surtidor.c ****     *
1398:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1399:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1400:.\Generated_Source\PSoC5/Surtidor.c ****     *
1401:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/Surtidor.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/Surtidor.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/Surtidor.c ****     *
1406:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1408:.\Generated_Source\PSoC5/Surtidor.c ****     *
1409:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1410:.\Generated_Source\PSoC5/Surtidor.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/Surtidor.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/Surtidor.c ****     *  operation.
1413:.\Generated_Source\PSoC5/Surtidor.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/Surtidor.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/Surtidor.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/Surtidor.c ****     *     complete.
1417:.\Generated_Source\PSoC5/Surtidor.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/Surtidor.c ****     *     operation
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 53


1419:.\Generated_Source\PSoC5/Surtidor.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/Surtidor.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/Surtidor.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/Surtidor.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/Surtidor.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/Surtidor.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/Surtidor.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/Surtidor.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/Surtidor.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/Surtidor.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/Surtidor.c ****     *     When interrupt appear with Surtidor_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/Surtidor.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/Surtidor.c ****     *
1432:.\Generated_Source\PSoC5/Surtidor.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/Surtidor.c ****     *  The Surtidor_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/Surtidor.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/Surtidor.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/Surtidor.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/Surtidor.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/Surtidor.c ****     *
1439:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1540              		.loc 1 1441 0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 16
 1543              		@ frame_needed = 1, uses_anonymous_args = 0
 1544 0000 80B5     		push	{r7, lr}
 1545              		.cfi_def_cfa_offset 8
 1546              		.cfi_offset 7, -8
 1547              		.cfi_offset 14, -4
 1548 0002 84B0     		sub	sp, sp, #16
 1549              		.cfi_def_cfa_offset 24
 1550 0004 00AF     		add	r7, sp, #0
 1551              		.cfi_def_cfa_register 7
 1552 0006 0346     		mov	r3, r0
 1553 0008 FB71     		strb	r3, [r7, #7]
1442:.\Generated_Source\PSoC5/Surtidor.c **** 
1443:.\Generated_Source\PSoC5/Surtidor.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_initVar != 0u)
 1554              		.loc 1 1444 0
 1555 000a 274B     		ldr	r3, .L115
 1556 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 000e 002B     		cmp	r3, #0
 1558 0010 47D0     		beq	.L107
 1559              	.LBB2:
1445:.\Generated_Source\PSoC5/Surtidor.c ****         {
1446:.\Generated_Source\PSoC5/Surtidor.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/Surtidor.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/Surtidor.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/Surtidor.c **** 
1450:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/Surtidor.c **** 
1452:.\Generated_Source\PSoC5/Surtidor.c ****             if( (retMode == Surtidor_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/Surtidor.c ****                 (retMode == Surtidor_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/Surtidor.c ****             {
1455:.\Generated_Source\PSoC5/Surtidor.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 54


1456:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_WriteControlRegister(Surtidor_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/Surtidor.c ****                                                       Surtidor_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/Surtidor.c **** 
1461:.\Generated_Source\PSoC5/Surtidor.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1463:.\Generated_Source\PSoC5/Surtidor.c ****                     tmpStat = Surtidor_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1465:.\Generated_Source\PSoC5/Surtidor.c ****                 while((tmpStat & Surtidor_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/Surtidor.c ****             }
1467:.\Generated_Source\PSoC5/Surtidor.c **** 
1468:.\Generated_Source\PSoC5/Surtidor.c ****             if( (retMode == Surtidor_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/Surtidor.c ****                 (retMode == Surtidor_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/Surtidor.c ****             {
1471:.\Generated_Source\PSoC5/Surtidor.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1473:.\Generated_Source\PSoC5/Surtidor.c ****                     tmpStat = Surtidor_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1475:.\Generated_Source\PSoC5/Surtidor.c ****                 while(((uint8)~tmpStat & Surtidor_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/Surtidor.c ****             }
1477:.\Generated_Source\PSoC5/Surtidor.c **** 
1478:.\Generated_Source\PSoC5/Surtidor.c ****             if( (retMode == Surtidor_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/Surtidor.c ****                 (retMode == Surtidor_REINIT) ||
1480:.\Generated_Source\PSoC5/Surtidor.c ****                 (retMode == Surtidor_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/Surtidor.c ****             {
1482:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_WriteControlRegister(Surtidor_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/Surtidor.c ****                                               (uint8)~Surtidor_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/Surtidor.c ****             }
1485:.\Generated_Source\PSoC5/Surtidor.c **** 
1486:.\Generated_Source\PSoC5/Surtidor.c ****         #else /* Surtidor_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/Surtidor.c **** 
1488:.\Generated_Source\PSoC5/Surtidor.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/Surtidor.c **** 
1490:.\Generated_Source\PSoC5/Surtidor.c ****             if( (retMode == Surtidor_SEND_BREAK) ||
 1560              		.loc 1 1490 0
 1561 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1562 0014 002B     		cmp	r3, #0
 1563 0016 02D0     		beq	.L109
 1564              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1565 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1566 001a 032B     		cmp	r3, #3
 1567 001c 1BD1     		bne	.L110
 1568              	.L109:
1491:.\Generated_Source\PSoC5/Surtidor.c ****                 (retMode == Surtidor_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/Surtidor.c ****             {
1493:.\Generated_Source\PSoC5/Surtidor.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/Surtidor.c ****                 #if( (Surtidor_PARITY_TYPE != Surtidor__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/Surtidor.c ****                                     (Surtidor_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_WriteControlRegister(Surtidor_ReadControlRegister() |
 1569              		.loc 1 1496 0 is_stmt 1
 1570 001e FFF7FEFF 		bl	Surtidor_ReadControlRegister
 1571 0022 0346     		mov	r3, r0
 1572 0024 43F00203 		orr	r3, r3, #2
 1573 0028 DBB2     		uxtb	r3, r3
 1574 002a 1846     		mov	r0, r3
 1575 002c FFF7FEFF 		bl	Surtidor_WriteControlRegister
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 55


1497:.\Generated_Source\PSoC5/Surtidor.c ****                                                           Surtidor_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/Surtidor.c ****                 #endif /* End Surtidor_PARITY_TYPE != Surtidor__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/Surtidor.c **** 
1500:.\Generated_Source\PSoC5/Surtidor.c ****                 #if(Surtidor_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/Surtidor.c ****                     txPeriod = Surtidor_TXBITCLKTX_COMPLETE_REG;
 1576              		.loc 1 1501 0
 1577 0030 1E4B     		ldr	r3, .L115+4
 1578 0032 1B78     		ldrb	r3, [r3]
 1579 0034 DAB2     		uxtb	r2, r3
 1580 0036 1E4B     		ldr	r3, .L115+8
 1581 0038 1A70     		strb	r2, [r3]
1502:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_TXBITCLKTX_COMPLETE_REG = Surtidor_TXBITCTR_BREAKBITS;
 1582              		.loc 1 1502 0
 1583 003a 1C4B     		ldr	r3, .L115+4
 1584 003c 6722     		movs	r2, #103
 1585 003e 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/Surtidor.c ****                 #else
1504:.\Generated_Source\PSoC5/Surtidor.c ****                     txPeriod = Surtidor_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_TXBITCTR_PERIOD_REG = Surtidor_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/Surtidor.c ****                 #endif /* End Surtidor_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/Surtidor.c **** 
1508:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_TXDATA_REG = 0u;
 1586              		.loc 1 1509 0
 1587 0040 1C4B     		ldr	r3, .L115+12
 1588 0042 0022     		movs	r2, #0
 1589 0044 1A70     		strb	r2, [r3]
 1590              	.L111:
1510:.\Generated_Source\PSoC5/Surtidor.c **** 
1511:.\Generated_Source\PSoC5/Surtidor.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1513:.\Generated_Source\PSoC5/Surtidor.c ****                     tmpStat = Surtidor_TXSTATUS_REG;
 1591              		.loc 1 1513 0 discriminator 1
 1592 0046 1C4B     		ldr	r3, .L115+16
 1593 0048 1B78     		ldrb	r3, [r3]
 1594 004a FB73     		strb	r3, [r7, #15]
1514:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1515:.\Generated_Source\PSoC5/Surtidor.c ****                 while((tmpStat & Surtidor_TX_STS_FIFO_EMPTY) != 0u);
 1595              		.loc 1 1515 0 discriminator 1
 1596 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1597 004e 03F00203 		and	r3, r3, #2
 1598 0052 002B     		cmp	r3, #0
 1599 0054 F7D1     		bne	.L111
 1600              	.L110:
1516:.\Generated_Source\PSoC5/Surtidor.c ****             }
1517:.\Generated_Source\PSoC5/Surtidor.c **** 
1518:.\Generated_Source\PSoC5/Surtidor.c ****             if( (retMode == Surtidor_WAIT_FOR_COMPLETE_REINIT) ||
 1601              		.loc 1 1518 0
 1602 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1603 0058 012B     		cmp	r3, #1
 1604 005a 02D0     		beq	.L112
 1605              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1606 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1607 005e 032B     		cmp	r3, #3
 1608 0060 09D1     		bne	.L113
 1609              	.L112:
1519:.\Generated_Source\PSoC5/Surtidor.c ****                 (retMode == Surtidor_SEND_WAIT_REINIT) )
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 56


1520:.\Generated_Source\PSoC5/Surtidor.c ****             {
1521:.\Generated_Source\PSoC5/Surtidor.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1523:.\Generated_Source\PSoC5/Surtidor.c ****                     tmpStat = Surtidor_TXSTATUS_REG;
 1610              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1611 0062 154B     		ldr	r3, .L115+16
 1612 0064 1B78     		ldrb	r3, [r3]
 1613 0066 FB73     		strb	r3, [r7, #15]
1524:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1525:.\Generated_Source\PSoC5/Surtidor.c ****                 while(((uint8)~tmpStat & Surtidor_TX_STS_COMPLETE) != 0u);
 1614              		.loc 1 1525 0 discriminator 1
 1615 0068 FB7B     		ldrb	r3, [r7, #15]
 1616 006a DB43     		mvns	r3, r3
 1617 006c DBB2     		uxtb	r3, r3
 1618 006e 03F00103 		and	r3, r3, #1
 1619 0072 002B     		cmp	r3, #0
 1620 0074 F5D1     		bne	.L112
 1621              	.L113:
1526:.\Generated_Source\PSoC5/Surtidor.c ****             }
1527:.\Generated_Source\PSoC5/Surtidor.c **** 
1528:.\Generated_Source\PSoC5/Surtidor.c ****             if( (retMode == Surtidor_WAIT_FOR_COMPLETE_REINIT) ||
 1622              		.loc 1 1528 0
 1623 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1624 0078 012B     		cmp	r3, #1
 1625 007a 05D0     		beq	.L114
 1626              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1627 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1628 007e 022B     		cmp	r3, #2
 1629 0080 02D0     		beq	.L114
1529:.\Generated_Source\PSoC5/Surtidor.c ****                 (retMode == Surtidor_REINIT) ||
 1630              		.loc 1 1529 0 is_stmt 1
 1631 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1632 0084 032B     		cmp	r3, #3
 1633 0086 0CD1     		bne	.L107
 1634              	.L114:
1530:.\Generated_Source\PSoC5/Surtidor.c ****                 (retMode == Surtidor_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/Surtidor.c ****             {
1532:.\Generated_Source\PSoC5/Surtidor.c **** 
1533:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1635              		.loc 1 1534 0
 1636 0088 084B     		ldr	r3, .L115+4
 1637 008a 094A     		ldr	r2, .L115+8
 1638 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1639 008e 1A70     		strb	r2, [r3]
1535:.\Generated_Source\PSoC5/Surtidor.c ****             #else
1536:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/Surtidor.c **** 
1539:.\Generated_Source\PSoC5/Surtidor.c ****             #if( (Surtidor_PARITY_TYPE != Surtidor__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/Surtidor.c ****                  (Surtidor_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_WriteControlRegister(Surtidor_ReadControlRegister() &
 1640              		.loc 1 1541 0
 1641 0090 FFF7FEFF 		bl	Surtidor_ReadControlRegister
 1642 0094 0346     		mov	r3, r0
 1643 0096 23F00203 		bic	r3, r3, #2
 1644 009a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 57


 1645 009c 1846     		mov	r0, r3
 1646 009e FFF7FEFF 		bl	Surtidor_WriteControlRegister
 1647              	.L107:
 1648              	.LBE2:
1542:.\Generated_Source\PSoC5/Surtidor.c ****                                                       (uint8) ~Surtidor_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/Surtidor.c ****             }
1545:.\Generated_Source\PSoC5/Surtidor.c ****         #endif    /* End Surtidor_HD_ENABLED */
1546:.\Generated_Source\PSoC5/Surtidor.c ****         }
1547:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1649              		.loc 1 1547 0
 1650 00a2 1037     		adds	r7, r7, #16
 1651 00a4 BD46     		mov	sp, r7
 1652              		@ sp needed
 1653 00a6 80BD     		pop	{r7, pc}
 1654              	.L116:
 1655              		.align	2
 1656              	.L115:
 1657 00a8 00000000 		.word	Surtidor_initVar
 1658 00ac 34650040 		.word	1073767732
 1659 00b0 08000000 		.word	txPeriod.4988
 1660 00b4 45650040 		.word	1073767749
 1661 00b8 65650040 		.word	1073767781
 1662              		.cfi_endproc
 1663              	.LFE25:
 1664              		.size	Surtidor_SendBreak, .-Surtidor_SendBreak
 1665              		.section	.text.Surtidor_SetTxAddressMode,"ax",%progbits
 1666              		.align	2
 1667              		.global	Surtidor_SetTxAddressMode
 1668              		.thumb
 1669              		.thumb_func
 1670              		.type	Surtidor_SetTxAddressMode, %function
 1671              	Surtidor_SetTxAddressMode:
 1672              	.LFB26:
1548:.\Generated_Source\PSoC5/Surtidor.c **** 
1549:.\Generated_Source\PSoC5/Surtidor.c **** 
1550:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetTxAddressMode
1552:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/Surtidor.c ****     *
1554:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1555:.\Generated_Source\PSoC5/Surtidor.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/Surtidor.c ****     *
1557:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/Surtidor.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/Surtidor.c ****     *       Surtidor_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/Surtidor.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/Surtidor.c ****     *       Surtidor_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/Surtidor.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/Surtidor.c ****     *
1564:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1565:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1566:.\Generated_Source\PSoC5/Surtidor.c ****     *
1567:.\Generated_Source\PSoC5/Surtidor.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/Surtidor.c ****     *  This function sets and clears Surtidor_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/Surtidor.c ****     *  register.
1570:.\Generated_Source\PSoC5/Surtidor.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 58


1571:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1673              		.loc 1 1573 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 8
 1676              		@ frame_needed = 1, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
 1678 0000 80B4     		push	{r7}
 1679              		.cfi_def_cfa_offset 4
 1680              		.cfi_offset 7, -4
 1681 0002 83B0     		sub	sp, sp, #12
 1682              		.cfi_def_cfa_offset 16
 1683 0004 00AF     		add	r7, sp, #0
 1684              		.cfi_def_cfa_register 7
 1685 0006 0346     		mov	r3, r0
 1686 0008 FB71     		strb	r3, [r7, #7]
1574:.\Generated_Source\PSoC5/Surtidor.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC5/Surtidor.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC5/Surtidor.c ****         {
1577:.\Generated_Source\PSoC5/Surtidor.c ****         #if( Surtidor_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_WriteControlRegister(Surtidor_ReadControlRegister() |
1579:.\Generated_Source\PSoC5/Surtidor.c ****                                                   Surtidor_CTRL_MARK);
1580:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC5/Surtidor.c ****         }
1582:.\Generated_Source\PSoC5/Surtidor.c ****         else
1583:.\Generated_Source\PSoC5/Surtidor.c ****         {
1584:.\Generated_Source\PSoC5/Surtidor.c ****         #if( Surtidor_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_WriteControlRegister(Surtidor_ReadControlRegister() &
1586:.\Generated_Source\PSoC5/Surtidor.c ****                                                   (uint8) ~Surtidor_CTRL_MARK);
1587:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC5/Surtidor.c ****         }
1589:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1687              		.loc 1 1589 0
 1688 000a 0C37     		adds	r7, r7, #12
 1689 000c BD46     		mov	sp, r7
 1690              		@ sp needed
 1691 000e 5DF8047B 		ldr	r7, [sp], #4
 1692 0012 7047     		bx	lr
 1693              		.cfi_endproc
 1694              	.LFE26:
 1695              		.size	Surtidor_SetTxAddressMode, .-Surtidor_SetTxAddressMode
 1696              		.bss
 1697              	txPeriod.4988:
 1698 0008 00       		.space	1
 1699 0009 00       		.text
 1700              	.Letext0:
 1701              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1702              		.section	.debug_info,"",%progbits
 1703              	.Ldebug_info0:
 1704 0000 E8050000 		.4byte	0x5e8
 1705 0004 0400     		.2byte	0x4
 1706 0006 00000000 		.4byte	.Ldebug_abbrev0
 1707 000a 04       		.byte	0x4
 1708 000b 01       		.uleb128 0x1
 1709 000c BE020000 		.4byte	.LASF72
 1710 0010 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 59


 1711 0011 AF010000 		.4byte	.LASF73
 1712 0015 E8030000 		.4byte	.LASF74
 1713 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1714 001d 00000000 		.4byte	0
 1715 0021 00000000 		.4byte	.Ldebug_line0
 1716 0025 02       		.uleb128 0x2
 1717 0026 01       		.byte	0x1
 1718 0027 06       		.byte	0x6
 1719 0028 A7000000 		.4byte	.LASF0
 1720 002c 02       		.uleb128 0x2
 1721 002d 01       		.byte	0x1
 1722 002e 08       		.byte	0x8
 1723 002f 89030000 		.4byte	.LASF1
 1724 0033 02       		.uleb128 0x2
 1725 0034 02       		.byte	0x2
 1726 0035 05       		.byte	0x5
 1727 0036 97030000 		.4byte	.LASF2
 1728 003a 02       		.uleb128 0x2
 1729 003b 02       		.byte	0x2
 1730 003c 07       		.byte	0x7
 1731 003d 46020000 		.4byte	.LASF3
 1732 0041 02       		.uleb128 0x2
 1733 0042 04       		.byte	0x4
 1734 0043 05       		.byte	0x5
 1735 0044 E9000000 		.4byte	.LASF4
 1736 0048 02       		.uleb128 0x2
 1737 0049 04       		.byte	0x4
 1738 004a 07       		.byte	0x7
 1739 004b 15020000 		.4byte	.LASF5
 1740 004f 02       		.uleb128 0x2
 1741 0050 08       		.byte	0x8
 1742 0051 05       		.byte	0x5
 1743 0052 99000000 		.4byte	.LASF6
 1744 0056 02       		.uleb128 0x2
 1745 0057 08       		.byte	0x8
 1746 0058 07       		.byte	0x7
 1747 0059 55000000 		.4byte	.LASF7
 1748 005d 03       		.uleb128 0x3
 1749 005e 04       		.byte	0x4
 1750 005f 05       		.byte	0x5
 1751 0060 696E7400 		.ascii	"int\000"
 1752 0064 02       		.uleb128 0x2
 1753 0065 04       		.byte	0x4
 1754 0066 07       		.byte	0x7
 1755 0067 D3010000 		.4byte	.LASF8
 1756 006b 04       		.uleb128 0x4
 1757 006c F2000000 		.4byte	.LASF9
 1758 0070 02       		.byte	0x2
 1759 0071 B4       		.byte	0xb4
 1760 0072 2C000000 		.4byte	0x2c
 1761 0076 04       		.uleb128 0x4
 1762 0077 11000000 		.4byte	.LASF10
 1763 007b 02       		.byte	0x2
 1764 007c B5       		.byte	0xb5
 1765 007d 3A000000 		.4byte	0x3a
 1766 0081 04       		.uleb128 0x4
 1767 0082 39010000 		.4byte	.LASF11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 60


 1768 0086 02       		.byte	0x2
 1769 0087 B6       		.byte	0xb6
 1770 0088 48000000 		.4byte	0x48
 1771 008c 02       		.uleb128 0x2
 1772 008d 04       		.byte	0x4
 1773 008e 04       		.byte	0x4
 1774 008f 7E030000 		.4byte	.LASF12
 1775 0093 02       		.uleb128 0x2
 1776 0094 08       		.byte	0x8
 1777 0095 04       		.byte	0x4
 1778 0096 09010000 		.4byte	.LASF13
 1779 009a 04       		.uleb128 0x4
 1780 009b 85040000 		.4byte	.LASF14
 1781 009f 02       		.byte	0x2
 1782 00a0 C5       		.byte	0xc5
 1783 00a1 A5000000 		.4byte	0xa5
 1784 00a5 02       		.uleb128 0x2
 1785 00a6 01       		.byte	0x1
 1786 00a7 08       		.byte	0x8
 1787 00a8 5A040000 		.4byte	.LASF15
 1788 00ac 05       		.uleb128 0x5
 1789 00ad 84030000 		.4byte	.LASF16
 1790 00b1 02       		.byte	0x2
 1791 00b2 5E01     		.2byte	0x15e
 1792 00b4 B8000000 		.4byte	0xb8
 1793 00b8 06       		.uleb128 0x6
 1794 00b9 6B000000 		.4byte	0x6b
 1795 00bd 06       		.uleb128 0x6
 1796 00be 76000000 		.4byte	0x76
 1797 00c2 05       		.uleb128 0x5
 1798 00c3 69020000 		.4byte	.LASF17
 1799 00c7 02       		.byte	0x2
 1800 00c8 6001     		.2byte	0x160
 1801 00ca CE000000 		.4byte	0xce
 1802 00ce 06       		.uleb128 0x6
 1803 00cf 81000000 		.4byte	0x81
 1804 00d3 02       		.uleb128 0x2
 1805 00d4 04       		.byte	0x4
 1806 00d5 07       		.byte	0x7
 1807 00d6 8D020000 		.4byte	.LASF18
 1808 00da 07       		.uleb128 0x7
 1809 00db A1030000 		.4byte	.LASF19
 1810 00df 01       		.byte	0x1
 1811 00e0 4C       		.byte	0x4c
 1812 00e1 00000000 		.4byte	.LFB0
 1813 00e5 20000000 		.4byte	.LFE0-.LFB0
 1814 00e9 01       		.uleb128 0x1
 1815 00ea 9C       		.byte	0x9c
 1816 00eb 07       		.uleb128 0x7
 1817 00ec 23050000 		.4byte	.LASF20
 1818 00f0 01       		.byte	0x1
 1819 00f1 6A       		.byte	0x6a
 1820 00f2 00000000 		.4byte	.LFB1
 1821 00f6 58000000 		.4byte	.LFE1-.LFB1
 1822 00fa 01       		.uleb128 0x1
 1823 00fb 9C       		.byte	0x9c
 1824 00fc 08       		.uleb128 0x8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 61


 1825 00fd 75040000 		.4byte	.LASF21
 1826 0101 01       		.byte	0x1
 1827 0102 B7       		.byte	0xb7
 1828 0103 00000000 		.4byte	.LFB2
 1829 0107 64000000 		.4byte	.LFE2-.LFB2
 1830 010b 01       		.uleb128 0x1
 1831 010c 9C       		.byte	0x9c
 1832 010d 20010000 		.4byte	0x120
 1833 0111 09       		.uleb128 0x9
 1834 0112 CC040000 		.4byte	.LASF23
 1835 0116 01       		.byte	0x1
 1836 0117 B9       		.byte	0xb9
 1837 0118 6B000000 		.4byte	0x6b
 1838 011c 02       		.uleb128 0x2
 1839 011d 91       		.byte	0x91
 1840 011e 77       		.sleb128 -9
 1841 011f 00       		.byte	0
 1842 0120 08       		.uleb128 0x8
 1843 0121 70030000 		.4byte	.LASF22
 1844 0125 01       		.byte	0x1
 1845 0126 F0       		.byte	0xf0
 1846 0127 00000000 		.4byte	.LFB3
 1847 012b 64000000 		.4byte	.LFE3-.LFB3
 1848 012f 01       		.uleb128 0x1
 1849 0130 9C       		.byte	0x9c
 1850 0131 44010000 		.4byte	0x144
 1851 0135 09       		.uleb128 0x9
 1852 0136 CC040000 		.4byte	.LASF23
 1853 013a 01       		.byte	0x1
 1854 013b F2       		.byte	0xf2
 1855 013c 6B000000 		.4byte	0x6b
 1856 0140 02       		.uleb128 0x2
 1857 0141 91       		.byte	0x91
 1858 0142 77       		.sleb128 -9
 1859 0143 00       		.byte	0
 1860 0144 0A       		.uleb128 0xa
 1861 0145 1C010000 		.4byte	.LASF49
 1862 0149 01       		.byte	0x1
 1863 014a 2701     		.2byte	0x127
 1864 014c 6B000000 		.4byte	0x6b
 1865 0150 00000000 		.4byte	.LFB4
 1866 0154 10000000 		.4byte	.LFE4-.LFB4
 1867 0158 01       		.uleb128 0x1
 1868 0159 9C       		.byte	0x9c
 1869 015a 0B       		.uleb128 0xb
 1870 015b E4040000 		.4byte	.LASF24
 1871 015f 01       		.byte	0x1
 1872 0160 3F01     		.2byte	0x13f
 1873 0162 00000000 		.4byte	.LFB5
 1874 0166 14000000 		.4byte	.LFE5-.LFB5
 1875 016a 01       		.uleb128 0x1
 1876 016b 9C       		.byte	0x9c
 1877 016c 80010000 		.4byte	0x180
 1878 0170 0C       		.uleb128 0xc
 1879 0171 55010000 		.4byte	.LASF26
 1880 0175 01       		.byte	0x1
 1881 0176 3F01     		.2byte	0x13f
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 62


 1882 0178 6B000000 		.4byte	0x6b
 1883 017c 02       		.uleb128 0x2
 1884 017d 91       		.byte	0x91
 1885 017e 77       		.sleb128 -9
 1886 017f 00       		.byte	0
 1887 0180 0B       		.uleb128 0xb
 1888 0181 79010000 		.4byte	.LASF25
 1889 0185 01       		.byte	0x1
 1890 0186 6701     		.2byte	0x167
 1891 0188 00000000 		.4byte	.LFB6
 1892 018c 20000000 		.4byte	.LFE6-.LFB6
 1893 0190 01       		.uleb128 0x1
 1894 0191 9C       		.byte	0x9c
 1895 0192 A6010000 		.4byte	0x1a6
 1896 0196 0C       		.uleb128 0xc
 1897 0197 62020000 		.4byte	.LASF27
 1898 019b 01       		.byte	0x1
 1899 019c 6701     		.2byte	0x167
 1900 019e 6B000000 		.4byte	0x6b
 1901 01a2 02       		.uleb128 0x2
 1902 01a3 91       		.byte	0x91
 1903 01a4 77       		.sleb128 -9
 1904 01a5 00       		.byte	0
 1905 01a6 0D       		.uleb128 0xd
 1906 01a7 46040000 		.4byte	.LASF31
 1907 01ab 01       		.byte	0x1
 1908 01ac 8801     		.2byte	0x188
 1909 01ae 6B000000 		.4byte	0x6b
 1910 01b2 00000000 		.4byte	.LFB7
 1911 01b6 94000000 		.4byte	.LFE7-.LFB7
 1912 01ba 01       		.uleb128 0x1
 1913 01bb 9C       		.byte	0x9c
 1914 01bc EE010000 		.4byte	0x1ee
 1915 01c0 0E       		.uleb128 0xe
 1916 01c1 3F040000 		.4byte	.LASF28
 1917 01c5 01       		.byte	0x1
 1918 01c6 8A01     		.2byte	0x18a
 1919 01c8 6B000000 		.4byte	0x6b
 1920 01cc 02       		.uleb128 0x2
 1921 01cd 91       		.byte	0x91
 1922 01ce 77       		.sleb128 -9
 1923 01cf 0E       		.uleb128 0xe
 1924 01d0 A2040000 		.4byte	.LASF29
 1925 01d4 01       		.byte	0x1
 1926 01d5 8E01     		.2byte	0x18e
 1927 01d7 76000000 		.4byte	0x76
 1928 01db 02       		.uleb128 0x2
 1929 01dc 91       		.byte	0x91
 1930 01dd 74       		.sleb128 -12
 1931 01de 0E       		.uleb128 0xe
 1932 01df 56030000 		.4byte	.LASF30
 1933 01e3 01       		.byte	0x1
 1934 01e4 8F01     		.2byte	0x18f
 1935 01e6 76000000 		.4byte	0x76
 1936 01ea 02       		.uleb128 0x2
 1937 01eb 91       		.byte	0x91
 1938 01ec 72       		.sleb128 -14
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 63


 1939 01ed 00       		.byte	0
 1940 01ee 0D       		.uleb128 0xd
 1941 01ef 6C000000 		.4byte	.LASF32
 1942 01f3 01       		.byte	0x1
 1943 01f4 E501     		.2byte	0x1e5
 1944 01f6 6B000000 		.4byte	0x6b
 1945 01fa 00000000 		.4byte	.LFB8
 1946 01fe 40000000 		.4byte	.LFE8-.LFB8
 1947 0202 01       		.uleb128 0x1
 1948 0203 9C       		.byte	0x9c
 1949 0204 18020000 		.4byte	0x218
 1950 0208 0E       		.uleb128 0xe
 1951 0209 DD040000 		.4byte	.LASF33
 1952 020d 01       		.byte	0x1
 1953 020e E701     		.2byte	0x1e7
 1954 0210 6B000000 		.4byte	0x6b
 1955 0214 02       		.uleb128 0x2
 1956 0215 91       		.byte	0x91
 1957 0216 77       		.sleb128 -9
 1958 0217 00       		.byte	0
 1959 0218 0D       		.uleb128 0xd
 1960 0219 00000000 		.4byte	.LASF34
 1961 021d 01       		.byte	0x1
 1962 021e 1402     		.2byte	0x214
 1963 0220 6B000000 		.4byte	0x6b
 1964 0224 00000000 		.4byte	.LFB9
 1965 0228 B8000000 		.4byte	.LFE9-.LFB9
 1966 022c 01       		.uleb128 0x1
 1967 022d 9C       		.byte	0x9c
 1968 022e 6F020000 		.4byte	0x26f
 1969 0232 0E       		.uleb128 0xe
 1970 0233 3F040000 		.4byte	.LASF28
 1971 0237 01       		.byte	0x1
 1972 0238 1602     		.2byte	0x216
 1973 023a 6B000000 		.4byte	0x6b
 1974 023e 02       		.uleb128 0x2
 1975 023f 91       		.byte	0x91
 1976 0240 77       		.sleb128 -9
 1977 0241 0E       		.uleb128 0xe
 1978 0242 67030000 		.4byte	.LASF35
 1979 0246 01       		.byte	0x1
 1980 0247 1702     		.2byte	0x217
 1981 0249 6B000000 		.4byte	0x6b
 1982 024d 02       		.uleb128 0x2
 1983 024e 91       		.byte	0x91
 1984 024f 71       		.sleb128 -15
 1985 0250 0E       		.uleb128 0xe
 1986 0251 A2040000 		.4byte	.LASF29
 1987 0255 01       		.byte	0x1
 1988 0256 1A02     		.2byte	0x21a
 1989 0258 76000000 		.4byte	0x76
 1990 025c 02       		.uleb128 0x2
 1991 025d 91       		.byte	0x91
 1992 025e 74       		.sleb128 -12
 1993 025f 0E       		.uleb128 0xe
 1994 0260 56030000 		.4byte	.LASF30
 1995 0264 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 64


 1996 0265 1B02     		.2byte	0x21b
 1997 0267 76000000 		.4byte	0x76
 1998 026b 02       		.uleb128 0x2
 1999 026c 91       		.byte	0x91
 2000 026d 72       		.sleb128 -14
 2001 026e 00       		.byte	0
 2002 026f 0F       		.uleb128 0xf
 2003 0270 AD020000 		.4byte	.LASF36
 2004 0274 01       		.byte	0x1
 2005 0275 7A02     		.2byte	0x27a
 2006 0277 76000000 		.4byte	0x76
 2007 027b 00000000 		.4byte	.LFB10
 2008 027f 44000000 		.4byte	.LFE10-.LFB10
 2009 0283 01       		.uleb128 0x1
 2010 0284 9C       		.byte	0x9c
 2011 0285 99020000 		.4byte	0x299
 2012 0289 0E       		.uleb128 0xe
 2013 028a 06020000 		.4byte	.LASF37
 2014 028e 01       		.byte	0x1
 2015 028f 7E02     		.2byte	0x27e
 2016 0291 76000000 		.4byte	0x76
 2017 0295 02       		.uleb128 0x2
 2018 0296 91       		.byte	0x91
 2019 0297 6E       		.sleb128 -18
 2020 0298 00       		.byte	0
 2021 0299 0D       		.uleb128 0xd
 2022 029a 0A050000 		.4byte	.LASF38
 2023 029e 01       		.byte	0x1
 2024 029f AB02     		.2byte	0x2ab
 2025 02a1 76000000 		.4byte	0x76
 2026 02a5 00000000 		.4byte	.LFB11
 2027 02a9 94000000 		.4byte	.LFE11-.LFB11
 2028 02ad 01       		.uleb128 0x1
 2029 02ae 9C       		.byte	0x9c
 2030 02af C3020000 		.4byte	0x2c3
 2031 02b3 0E       		.uleb128 0xe
 2032 02b4 41020000 		.4byte	.LASF39
 2033 02b8 01       		.byte	0x1
 2034 02b9 AE02     		.2byte	0x2ae
 2035 02bb 76000000 		.4byte	0x76
 2036 02bf 02       		.uleb128 0x2
 2037 02c0 91       		.byte	0x91
 2038 02c1 76       		.sleb128 -10
 2039 02c2 00       		.byte	0
 2040 02c3 10       		.uleb128 0x10
 2041 02c4 8B040000 		.4byte	.LASF40
 2042 02c8 01       		.byte	0x1
 2043 02c9 F502     		.2byte	0x2f5
 2044 02cb 00000000 		.4byte	.LFB12
 2045 02cf 7C000000 		.4byte	.LFE12-.LFB12
 2046 02d3 01       		.uleb128 0x1
 2047 02d4 9C       		.byte	0x9c
 2048 02d5 E9020000 		.4byte	0x2e9
 2049 02d9 0E       		.uleb128 0xe
 2050 02da CC040000 		.4byte	.LASF23
 2051 02de 01       		.byte	0x1
 2052 02df F702     		.2byte	0x2f7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 65


 2053 02e1 6B000000 		.4byte	0x6b
 2054 02e5 02       		.uleb128 0x2
 2055 02e6 91       		.byte	0x91
 2056 02e7 77       		.sleb128 -9
 2057 02e8 00       		.byte	0
 2058 02e9 0B       		.uleb128 0xb
 2059 02ea 27020000 		.4byte	.LASF41
 2060 02ee 01       		.byte	0x1
 2061 02ef 2D03     		.2byte	0x32d
 2062 02f1 00000000 		.4byte	.LFB13
 2063 02f5 14000000 		.4byte	.LFE13-.LFB13
 2064 02f9 01       		.uleb128 0x1
 2065 02fa 9C       		.byte	0x9c
 2066 02fb 0F030000 		.4byte	0x30f
 2067 02ff 0C       		.uleb128 0xc
 2068 0300 10010000 		.4byte	.LASF42
 2069 0304 01       		.byte	0x1
 2070 0305 2D03     		.2byte	0x32d
 2071 0307 6B000000 		.4byte	0x6b
 2072 030b 02       		.uleb128 0x2
 2073 030c 91       		.byte	0x91
 2074 030d 77       		.sleb128 -9
 2075 030e 00       		.byte	0
 2076 030f 0B       		.uleb128 0xb
 2077 0310 BA030000 		.4byte	.LASF43
 2078 0314 01       		.byte	0x1
 2079 0315 5903     		.2byte	0x359
 2080 0317 00000000 		.4byte	.LFB14
 2081 031b 20000000 		.4byte	.LFE14-.LFB14
 2082 031f 01       		.uleb128 0x1
 2083 0320 9C       		.byte	0x9c
 2084 0321 35030000 		.4byte	0x335
 2085 0325 0C       		.uleb128 0xc
 2086 0326 02050000 		.4byte	.LASF44
 2087 032a 01       		.byte	0x1
 2088 032b 5903     		.2byte	0x359
 2089 032d 6B000000 		.4byte	0x6b
 2090 0331 02       		.uleb128 0x2
 2091 0332 91       		.byte	0x91
 2092 0333 77       		.sleb128 -9
 2093 0334 00       		.byte	0
 2094 0335 0B       		.uleb128 0xb
 2095 0336 D1030000 		.4byte	.LASF45
 2096 033a 01       		.byte	0x1
 2097 033b 6D03     		.2byte	0x36d
 2098 033d 00000000 		.4byte	.LFB15
 2099 0341 20000000 		.4byte	.LFE15-.LFB15
 2100 0345 01       		.uleb128 0x1
 2101 0346 9C       		.byte	0x9c
 2102 0347 5B030000 		.4byte	0x35b
 2103 034b 0C       		.uleb128 0xc
 2104 034c 02050000 		.4byte	.LASF44
 2105 0350 01       		.byte	0x1
 2106 0351 6D03     		.2byte	0x36d
 2107 0353 6B000000 		.4byte	0x6b
 2108 0357 02       		.uleb128 0x2
 2109 0358 91       		.byte	0x91
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 66


 2110 0359 77       		.sleb128 -9
 2111 035a 00       		.byte	0
 2112 035b 0B       		.uleb128 0xb
 2113 035c 5D010000 		.4byte	.LASF46
 2114 0360 01       		.byte	0x1
 2115 0361 8C03     		.2byte	0x38c
 2116 0363 00000000 		.4byte	.LFB16
 2117 0367 20000000 		.4byte	.LFE16-.LFB16
 2118 036b 01       		.uleb128 0x1
 2119 036c 9C       		.byte	0x9c
 2120 036d 81030000 		.4byte	0x381
 2121 0371 0C       		.uleb128 0xc
 2122 0372 62020000 		.4byte	.LASF27
 2123 0376 01       		.byte	0x1
 2124 0377 8C03     		.2byte	0x38c
 2125 0379 6B000000 		.4byte	0x6b
 2126 037d 02       		.uleb128 0x2
 2127 037e 91       		.byte	0x91
 2128 037f 77       		.sleb128 -9
 2129 0380 00       		.byte	0
 2130 0381 0B       		.uleb128 0xb
 2131 0382 E0010000 		.4byte	.LASF47
 2132 0386 01       		.byte	0x1
 2133 0387 AE03     		.2byte	0x3ae
 2134 0389 00000000 		.4byte	.LFB17
 2135 038d 2C000000 		.4byte	.LFE17-.LFB17
 2136 0391 01       		.uleb128 0x1
 2137 0392 9C       		.byte	0x9c
 2138 0393 A7030000 		.4byte	0x3a7
 2139 0397 0C       		.uleb128 0xc
 2140 0398 31000000 		.4byte	.LASF48
 2141 039c 01       		.byte	0x1
 2142 039d AE03     		.2byte	0x3ae
 2143 039f 6B000000 		.4byte	0x6b
 2144 03a3 02       		.uleb128 0x2
 2145 03a4 91       		.byte	0x91
 2146 03a5 77       		.sleb128 -9
 2147 03a6 00       		.byte	0
 2148 03a7 0A       		.uleb128 0xa
 2149 03a8 77020000 		.4byte	.LASF50
 2150 03ac 01       		.byte	0x1
 2151 03ad EB03     		.2byte	0x3eb
 2152 03af 6B000000 		.4byte	0x6b
 2153 03b3 00000000 		.4byte	.LFB18
 2154 03b7 18000000 		.4byte	.LFE18-.LFB18
 2155 03bb 01       		.uleb128 0x1
 2156 03bc 9C       		.byte	0x9c
 2157 03bd 0B       		.uleb128 0xb
 2158 03be F5010000 		.4byte	.LASF51
 2159 03c2 01       		.byte	0x1
 2160 03c3 1104     		.2byte	0x411
 2161 03c5 00000000 		.4byte	.LFB19
 2162 03c9 34000000 		.4byte	.LFE19-.LFB19
 2163 03cd 01       		.uleb128 0x1
 2164 03ce 9C       		.byte	0x9c
 2165 03cf E3030000 		.4byte	0x3e3
 2166 03d3 0C       		.uleb128 0xc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 67


 2167 03d4 31000000 		.4byte	.LASF48
 2168 03d8 01       		.byte	0x1
 2169 03d9 1104     		.2byte	0x411
 2170 03db 6B000000 		.4byte	0x6b
 2171 03df 02       		.uleb128 0x2
 2172 03e0 91       		.byte	0x91
 2173 03e1 77       		.sleb128 -9
 2174 03e2 00       		.byte	0
 2175 03e3 10       		.uleb128 0x10
 2176 03e4 2C040000 		.4byte	.LASF52
 2177 03e8 01       		.byte	0x1
 2178 03e9 7904     		.2byte	0x479
 2179 03eb 00000000 		.4byte	.LFB20
 2180 03ef 40000000 		.4byte	.LFE20-.LFB20
 2181 03f3 01       		.uleb128 0x1
 2182 03f4 9C       		.byte	0x9c
 2183 03f5 18040000 		.4byte	0x418
 2184 03f9 0C       		.uleb128 0xc
 2185 03fa 3C000000 		.4byte	.LASF53
 2186 03fe 01       		.byte	0x1
 2187 03ff 7904     		.2byte	0x479
 2188 0401 18040000 		.4byte	0x418
 2189 0405 02       		.uleb128 0x2
 2190 0406 91       		.byte	0x91
 2191 0407 6C       		.sleb128 -20
 2192 0408 0E       		.uleb128 0xe
 2193 0409 59020000 		.4byte	.LASF54
 2194 040d 01       		.byte	0x1
 2195 040e 7B04     		.2byte	0x47b
 2196 0410 76000000 		.4byte	0x76
 2197 0414 02       		.uleb128 0x2
 2198 0415 91       		.byte	0x91
 2199 0416 76       		.sleb128 -10
 2200 0417 00       		.byte	0
 2201 0418 11       		.uleb128 0x11
 2202 0419 04       		.byte	0x4
 2203 041a 1E040000 		.4byte	0x41e
 2204 041e 12       		.uleb128 0x12
 2205 041f 9A000000 		.4byte	0x9a
 2206 0423 10       		.uleb128 0x10
 2207 0424 43000000 		.4byte	.LASF55
 2208 0428 01       		.byte	0x1
 2209 0429 A704     		.2byte	0x4a7
 2210 042b 00000000 		.4byte	.LFB21
 2211 042f 40000000 		.4byte	.LFE21-.LFB21
 2212 0433 01       		.uleb128 0x1
 2213 0434 9C       		.byte	0x9c
 2214 0435 67040000 		.4byte	0x467
 2215 0439 0C       		.uleb128 0xc
 2216 043a 3C000000 		.4byte	.LASF53
 2217 043e 01       		.byte	0x1
 2218 043f A704     		.2byte	0x4a7
 2219 0441 67040000 		.4byte	0x467
 2220 0445 02       		.uleb128 0x2
 2221 0446 91       		.byte	0x91
 2222 0447 6C       		.sleb128 -20
 2223 0448 0C       		.uleb128 0xc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 68


 2224 0449 B0030000 		.4byte	.LASF56
 2225 044d 01       		.byte	0x1
 2226 044e A704     		.2byte	0x4a7
 2227 0450 6B000000 		.4byte	0x6b
 2228 0454 02       		.uleb128 0x2
 2229 0455 91       		.byte	0x91
 2230 0456 6B       		.sleb128 -21
 2231 0457 0E       		.uleb128 0xe
 2232 0458 59020000 		.4byte	.LASF54
 2233 045c 01       		.byte	0x1
 2234 045d AA04     		.2byte	0x4aa
 2235 045f 6B000000 		.4byte	0x6b
 2236 0463 02       		.uleb128 0x2
 2237 0464 91       		.byte	0x91
 2238 0465 77       		.sleb128 -9
 2239 0466 00       		.byte	0
 2240 0467 11       		.uleb128 0x11
 2241 0468 04       		.byte	0x4
 2242 0469 6D040000 		.4byte	0x46d
 2243 046d 12       		.uleb128 0x12
 2244 046e 6B000000 		.4byte	0x6b
 2245 0472 10       		.uleb128 0x10
 2246 0473 F8000000 		.4byte	.LASF57
 2247 0477 01       		.byte	0x1
 2248 0478 CE04     		.2byte	0x4ce
 2249 047a 00000000 		.4byte	.LFB22
 2250 047e 30000000 		.4byte	.LFE22-.LFB22
 2251 0482 01       		.uleb128 0x1
 2252 0483 9C       		.byte	0x9c
 2253 0484 98040000 		.4byte	0x498
 2254 0488 0C       		.uleb128 0xc
 2255 0489 31000000 		.4byte	.LASF48
 2256 048d 01       		.byte	0x1
 2257 048e CE04     		.2byte	0x4ce
 2258 0490 6B000000 		.4byte	0x6b
 2259 0494 02       		.uleb128 0x2
 2260 0495 91       		.byte	0x91
 2261 0496 77       		.sleb128 -9
 2262 0497 00       		.byte	0
 2263 0498 0D       		.uleb128 0xd
 2264 0499 18000000 		.4byte	.LASF58
 2265 049d 01       		.byte	0x1
 2266 049e F904     		.2byte	0x4f9
 2267 04a0 6B000000 		.4byte	0x6b
 2268 04a4 00000000 		.4byte	.LFB23
 2269 04a8 44000000 		.4byte	.LFE23-.LFB23
 2270 04ac 01       		.uleb128 0x1
 2271 04ad 9C       		.byte	0x9c
 2272 04ae C2040000 		.4byte	0x4c2
 2273 04b2 0E       		.uleb128 0xe
 2274 04b3 41020000 		.4byte	.LASF39
 2275 04b7 01       		.byte	0x1
 2276 04b8 FC04     		.2byte	0x4fc
 2277 04ba 6B000000 		.4byte	0x6b
 2278 04be 02       		.uleb128 0x2
 2279 04bf 91       		.byte	0x91
 2280 04c0 77       		.sleb128 -9
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 69


 2281 04c1 00       		.byte	0
 2282 04c2 10       		.uleb128 0x10
 2283 04c3 96020000 		.4byte	.LASF59
 2284 04c7 01       		.byte	0x1
 2285 04c8 4A05     		.2byte	0x54a
 2286 04ca 00000000 		.4byte	.LFB24
 2287 04ce 40000000 		.4byte	.LFE24-.LFB24
 2288 04d2 01       		.uleb128 0x1
 2289 04d3 9C       		.byte	0x9c
 2290 04d4 E8040000 		.4byte	0x4e8
 2291 04d8 0E       		.uleb128 0xe
 2292 04d9 CC040000 		.4byte	.LASF23
 2293 04dd 01       		.byte	0x1
 2294 04de 4C05     		.2byte	0x54c
 2295 04e0 6B000000 		.4byte	0x6b
 2296 04e4 02       		.uleb128 0x2
 2297 04e5 91       		.byte	0x91
 2298 04e6 77       		.sleb128 -9
 2299 04e7 00       		.byte	0
 2300 04e8 10       		.uleb128 0x10
 2301 04e9 D6000000 		.4byte	.LASF60
 2302 04ed 01       		.byte	0x1
 2303 04ee A005     		.2byte	0x5a0
 2304 04f0 00000000 		.4byte	.LFB25
 2305 04f4 BC000000 		.4byte	.LFE25-.LFB25
 2306 04f8 01       		.uleb128 0x1
 2307 04f9 9C       		.byte	0x9c
 2308 04fa 39050000 		.4byte	0x539
 2309 04fe 0C       		.uleb128 0xc
 2310 04ff A7010000 		.4byte	.LASF61
 2311 0503 01       		.byte	0x1
 2312 0504 A005     		.2byte	0x5a0
 2313 0506 6B000000 		.4byte	0x6b
 2314 050a 02       		.uleb128 0x2
 2315 050b 91       		.byte	0x91
 2316 050c 6F       		.sleb128 -17
 2317 050d 13       		.uleb128 0x13
 2318 050e 12000000 		.4byte	.LBB2
 2319 0512 90000000 		.4byte	.LBE2-.LBB2
 2320 0516 0E       		.uleb128 0xe
 2321 0517 6F020000 		.4byte	.LASF62
 2322 051b 01       		.byte	0x1
 2323 051c A805     		.2byte	0x5a8
 2324 051e 6B000000 		.4byte	0x6b
 2325 0522 02       		.uleb128 0x2
 2326 0523 91       		.byte	0x91
 2327 0524 77       		.sleb128 -9
 2328 0525 0E       		.uleb128 0xe
 2329 0526 B3000000 		.4byte	.LASF63
 2330 052a 01       		.byte	0x1
 2331 052b D005     		.2byte	0x5d0
 2332 052d 6B000000 		.4byte	0x6b
 2333 0531 05       		.uleb128 0x5
 2334 0532 03       		.byte	0x3
 2335 0533 08000000 		.4byte	txPeriod.4988
 2336 0537 00       		.byte	0
 2337 0538 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 70


 2338 0539 0B       		.uleb128 0xb
 2339 053a BC000000 		.4byte	.LASF64
 2340 053e 01       		.byte	0x1
 2341 053f 2406     		.2byte	0x624
 2342 0541 00000000 		.4byte	.LFB26
 2343 0545 14000000 		.4byte	.LFE26-.LFB26
 2344 0549 01       		.uleb128 0x1
 2345 054a 9C       		.byte	0x9c
 2346 054b 5F050000 		.4byte	0x55f
 2347 054f 0C       		.uleb128 0xc
 2348 0550 10010000 		.4byte	.LASF42
 2349 0554 01       		.byte	0x1
 2350 0555 2406     		.2byte	0x624
 2351 0557 6B000000 		.4byte	0x6b
 2352 055b 02       		.uleb128 0x2
 2353 055c 91       		.byte	0x91
 2354 055d 77       		.sleb128 -9
 2355 055e 00       		.byte	0
 2356 055f 14       		.uleb128 0x14
 2357 0560 31050000 		.4byte	.LASF65
 2358 0564 01       		.byte	0x1
 2359 0565 1B       		.byte	0x1b
 2360 0566 6B000000 		.4byte	0x6b
 2361 056a 05       		.uleb128 0x5
 2362 056b 03       		.byte	0x3
 2363 056c 00000000 		.4byte	Surtidor_initVar
 2364 0570 14       		.uleb128 0x14
 2365 0571 40010000 		.4byte	.LASF66
 2366 0575 01       		.byte	0x1
 2367 0576 24       		.byte	0x24
 2368 0577 6B000000 		.4byte	0x6b
 2369 057b 05       		.uleb128 0x5
 2370 057c 03       		.byte	0x3
 2371 057d 00000000 		.4byte	Surtidor_errorStatus
 2372 0581 15       		.uleb128 0x15
 2373 0582 6B000000 		.4byte	0x6b
 2374 0586 91050000 		.4byte	0x591
 2375 058a 16       		.uleb128 0x16
 2376 058b D3000000 		.4byte	0xd3
 2377 058f FF       		.byte	0xff
 2378 0590 00       		.byte	0
 2379 0591 14       		.uleb128 0x14
 2380 0592 95010000 		.4byte	.LASF67
 2381 0596 01       		.byte	0x1
 2382 0597 25       		.byte	0x25
 2383 0598 A2050000 		.4byte	0x5a2
 2384 059c 05       		.uleb128 0x5
 2385 059d 03       		.byte	0x3
 2386 059e 00000000 		.4byte	Surtidor_rxBuffer
 2387 05a2 06       		.uleb128 0x6
 2388 05a3 81050000 		.4byte	0x581
 2389 05a7 14       		.uleb128 0x14
 2390 05a8 5F040000 		.4byte	.LASF68
 2391 05ac 01       		.byte	0x1
 2392 05ad 26       		.byte	0x26
 2393 05ae BD000000 		.4byte	0xbd
 2394 05b2 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 71


 2395 05b3 03       		.byte	0x3
 2396 05b4 00000000 		.4byte	Surtidor_rxBufferRead
 2397 05b8 14       		.uleb128 0x14
 2398 05b9 82000000 		.4byte	.LASF69
 2399 05bd 01       		.byte	0x1
 2400 05be 27       		.byte	0x27
 2401 05bf BD000000 		.4byte	0xbd
 2402 05c3 05       		.uleb128 0x5
 2403 05c4 03       		.byte	0x3
 2404 05c5 00000000 		.4byte	Surtidor_rxBufferWrite
 2405 05c9 14       		.uleb128 0x14
 2406 05ca 3A030000 		.4byte	.LASF70
 2407 05ce 01       		.byte	0x1
 2408 05cf 28       		.byte	0x28
 2409 05d0 B8000000 		.4byte	0xb8
 2410 05d4 05       		.uleb128 0x5
 2411 05d5 03       		.byte	0x3
 2412 05d6 00000000 		.4byte	Surtidor_rxBufferLoopDetect
 2413 05da 14       		.uleb128 0x14
 2414 05db B2040000 		.4byte	.LASF71
 2415 05df 01       		.byte	0x1
 2416 05e0 29       		.byte	0x29
 2417 05e1 B8000000 		.4byte	0xb8
 2418 05e5 05       		.uleb128 0x5
 2419 05e6 03       		.byte	0x3
 2420 05e7 00000000 		.4byte	Surtidor_rxBufferOverflow
 2421 05eb 00       		.byte	0
 2422              		.section	.debug_abbrev,"",%progbits
 2423              	.Ldebug_abbrev0:
 2424 0000 01       		.uleb128 0x1
 2425 0001 11       		.uleb128 0x11
 2426 0002 01       		.byte	0x1
 2427 0003 25       		.uleb128 0x25
 2428 0004 0E       		.uleb128 0xe
 2429 0005 13       		.uleb128 0x13
 2430 0006 0B       		.uleb128 0xb
 2431 0007 03       		.uleb128 0x3
 2432 0008 0E       		.uleb128 0xe
 2433 0009 1B       		.uleb128 0x1b
 2434 000a 0E       		.uleb128 0xe
 2435 000b 55       		.uleb128 0x55
 2436 000c 17       		.uleb128 0x17
 2437 000d 11       		.uleb128 0x11
 2438 000e 01       		.uleb128 0x1
 2439 000f 10       		.uleb128 0x10
 2440 0010 17       		.uleb128 0x17
 2441 0011 00       		.byte	0
 2442 0012 00       		.byte	0
 2443 0013 02       		.uleb128 0x2
 2444 0014 24       		.uleb128 0x24
 2445 0015 00       		.byte	0
 2446 0016 0B       		.uleb128 0xb
 2447 0017 0B       		.uleb128 0xb
 2448 0018 3E       		.uleb128 0x3e
 2449 0019 0B       		.uleb128 0xb
 2450 001a 03       		.uleb128 0x3
 2451 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 72


 2452 001c 00       		.byte	0
 2453 001d 00       		.byte	0
 2454 001e 03       		.uleb128 0x3
 2455 001f 24       		.uleb128 0x24
 2456 0020 00       		.byte	0
 2457 0021 0B       		.uleb128 0xb
 2458 0022 0B       		.uleb128 0xb
 2459 0023 3E       		.uleb128 0x3e
 2460 0024 0B       		.uleb128 0xb
 2461 0025 03       		.uleb128 0x3
 2462 0026 08       		.uleb128 0x8
 2463 0027 00       		.byte	0
 2464 0028 00       		.byte	0
 2465 0029 04       		.uleb128 0x4
 2466 002a 16       		.uleb128 0x16
 2467 002b 00       		.byte	0
 2468 002c 03       		.uleb128 0x3
 2469 002d 0E       		.uleb128 0xe
 2470 002e 3A       		.uleb128 0x3a
 2471 002f 0B       		.uleb128 0xb
 2472 0030 3B       		.uleb128 0x3b
 2473 0031 0B       		.uleb128 0xb
 2474 0032 49       		.uleb128 0x49
 2475 0033 13       		.uleb128 0x13
 2476 0034 00       		.byte	0
 2477 0035 00       		.byte	0
 2478 0036 05       		.uleb128 0x5
 2479 0037 16       		.uleb128 0x16
 2480 0038 00       		.byte	0
 2481 0039 03       		.uleb128 0x3
 2482 003a 0E       		.uleb128 0xe
 2483 003b 3A       		.uleb128 0x3a
 2484 003c 0B       		.uleb128 0xb
 2485 003d 3B       		.uleb128 0x3b
 2486 003e 05       		.uleb128 0x5
 2487 003f 49       		.uleb128 0x49
 2488 0040 13       		.uleb128 0x13
 2489 0041 00       		.byte	0
 2490 0042 00       		.byte	0
 2491 0043 06       		.uleb128 0x6
 2492 0044 35       		.uleb128 0x35
 2493 0045 00       		.byte	0
 2494 0046 49       		.uleb128 0x49
 2495 0047 13       		.uleb128 0x13
 2496 0048 00       		.byte	0
 2497 0049 00       		.byte	0
 2498 004a 07       		.uleb128 0x7
 2499 004b 2E       		.uleb128 0x2e
 2500 004c 00       		.byte	0
 2501 004d 3F       		.uleb128 0x3f
 2502 004e 19       		.uleb128 0x19
 2503 004f 03       		.uleb128 0x3
 2504 0050 0E       		.uleb128 0xe
 2505 0051 3A       		.uleb128 0x3a
 2506 0052 0B       		.uleb128 0xb
 2507 0053 3B       		.uleb128 0x3b
 2508 0054 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 73


 2509 0055 27       		.uleb128 0x27
 2510 0056 19       		.uleb128 0x19
 2511 0057 11       		.uleb128 0x11
 2512 0058 01       		.uleb128 0x1
 2513 0059 12       		.uleb128 0x12
 2514 005a 06       		.uleb128 0x6
 2515 005b 40       		.uleb128 0x40
 2516 005c 18       		.uleb128 0x18
 2517 005d 9642     		.uleb128 0x2116
 2518 005f 19       		.uleb128 0x19
 2519 0060 00       		.byte	0
 2520 0061 00       		.byte	0
 2521 0062 08       		.uleb128 0x8
 2522 0063 2E       		.uleb128 0x2e
 2523 0064 01       		.byte	0x1
 2524 0065 3F       		.uleb128 0x3f
 2525 0066 19       		.uleb128 0x19
 2526 0067 03       		.uleb128 0x3
 2527 0068 0E       		.uleb128 0xe
 2528 0069 3A       		.uleb128 0x3a
 2529 006a 0B       		.uleb128 0xb
 2530 006b 3B       		.uleb128 0x3b
 2531 006c 0B       		.uleb128 0xb
 2532 006d 27       		.uleb128 0x27
 2533 006e 19       		.uleb128 0x19
 2534 006f 11       		.uleb128 0x11
 2535 0070 01       		.uleb128 0x1
 2536 0071 12       		.uleb128 0x12
 2537 0072 06       		.uleb128 0x6
 2538 0073 40       		.uleb128 0x40
 2539 0074 18       		.uleb128 0x18
 2540 0075 9642     		.uleb128 0x2116
 2541 0077 19       		.uleb128 0x19
 2542 0078 01       		.uleb128 0x1
 2543 0079 13       		.uleb128 0x13
 2544 007a 00       		.byte	0
 2545 007b 00       		.byte	0
 2546 007c 09       		.uleb128 0x9
 2547 007d 34       		.uleb128 0x34
 2548 007e 00       		.byte	0
 2549 007f 03       		.uleb128 0x3
 2550 0080 0E       		.uleb128 0xe
 2551 0081 3A       		.uleb128 0x3a
 2552 0082 0B       		.uleb128 0xb
 2553 0083 3B       		.uleb128 0x3b
 2554 0084 0B       		.uleb128 0xb
 2555 0085 49       		.uleb128 0x49
 2556 0086 13       		.uleb128 0x13
 2557 0087 02       		.uleb128 0x2
 2558 0088 18       		.uleb128 0x18
 2559 0089 00       		.byte	0
 2560 008a 00       		.byte	0
 2561 008b 0A       		.uleb128 0xa
 2562 008c 2E       		.uleb128 0x2e
 2563 008d 00       		.byte	0
 2564 008e 3F       		.uleb128 0x3f
 2565 008f 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 74


 2566 0090 03       		.uleb128 0x3
 2567 0091 0E       		.uleb128 0xe
 2568 0092 3A       		.uleb128 0x3a
 2569 0093 0B       		.uleb128 0xb
 2570 0094 3B       		.uleb128 0x3b
 2571 0095 05       		.uleb128 0x5
 2572 0096 27       		.uleb128 0x27
 2573 0097 19       		.uleb128 0x19
 2574 0098 49       		.uleb128 0x49
 2575 0099 13       		.uleb128 0x13
 2576 009a 11       		.uleb128 0x11
 2577 009b 01       		.uleb128 0x1
 2578 009c 12       		.uleb128 0x12
 2579 009d 06       		.uleb128 0x6
 2580 009e 40       		.uleb128 0x40
 2581 009f 18       		.uleb128 0x18
 2582 00a0 9742     		.uleb128 0x2117
 2583 00a2 19       		.uleb128 0x19
 2584 00a3 00       		.byte	0
 2585 00a4 00       		.byte	0
 2586 00a5 0B       		.uleb128 0xb
 2587 00a6 2E       		.uleb128 0x2e
 2588 00a7 01       		.byte	0x1
 2589 00a8 3F       		.uleb128 0x3f
 2590 00a9 19       		.uleb128 0x19
 2591 00aa 03       		.uleb128 0x3
 2592 00ab 0E       		.uleb128 0xe
 2593 00ac 3A       		.uleb128 0x3a
 2594 00ad 0B       		.uleb128 0xb
 2595 00ae 3B       		.uleb128 0x3b
 2596 00af 05       		.uleb128 0x5
 2597 00b0 27       		.uleb128 0x27
 2598 00b1 19       		.uleb128 0x19
 2599 00b2 11       		.uleb128 0x11
 2600 00b3 01       		.uleb128 0x1
 2601 00b4 12       		.uleb128 0x12
 2602 00b5 06       		.uleb128 0x6
 2603 00b6 40       		.uleb128 0x40
 2604 00b7 18       		.uleb128 0x18
 2605 00b8 9742     		.uleb128 0x2117
 2606 00ba 19       		.uleb128 0x19
 2607 00bb 01       		.uleb128 0x1
 2608 00bc 13       		.uleb128 0x13
 2609 00bd 00       		.byte	0
 2610 00be 00       		.byte	0
 2611 00bf 0C       		.uleb128 0xc
 2612 00c0 05       		.uleb128 0x5
 2613 00c1 00       		.byte	0
 2614 00c2 03       		.uleb128 0x3
 2615 00c3 0E       		.uleb128 0xe
 2616 00c4 3A       		.uleb128 0x3a
 2617 00c5 0B       		.uleb128 0xb
 2618 00c6 3B       		.uleb128 0x3b
 2619 00c7 05       		.uleb128 0x5
 2620 00c8 49       		.uleb128 0x49
 2621 00c9 13       		.uleb128 0x13
 2622 00ca 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 75


 2623 00cb 18       		.uleb128 0x18
 2624 00cc 00       		.byte	0
 2625 00cd 00       		.byte	0
 2626 00ce 0D       		.uleb128 0xd
 2627 00cf 2E       		.uleb128 0x2e
 2628 00d0 01       		.byte	0x1
 2629 00d1 3F       		.uleb128 0x3f
 2630 00d2 19       		.uleb128 0x19
 2631 00d3 03       		.uleb128 0x3
 2632 00d4 0E       		.uleb128 0xe
 2633 00d5 3A       		.uleb128 0x3a
 2634 00d6 0B       		.uleb128 0xb
 2635 00d7 3B       		.uleb128 0x3b
 2636 00d8 05       		.uleb128 0x5
 2637 00d9 27       		.uleb128 0x27
 2638 00da 19       		.uleb128 0x19
 2639 00db 49       		.uleb128 0x49
 2640 00dc 13       		.uleb128 0x13
 2641 00dd 11       		.uleb128 0x11
 2642 00de 01       		.uleb128 0x1
 2643 00df 12       		.uleb128 0x12
 2644 00e0 06       		.uleb128 0x6
 2645 00e1 40       		.uleb128 0x40
 2646 00e2 18       		.uleb128 0x18
 2647 00e3 9742     		.uleb128 0x2117
 2648 00e5 19       		.uleb128 0x19
 2649 00e6 01       		.uleb128 0x1
 2650 00e7 13       		.uleb128 0x13
 2651 00e8 00       		.byte	0
 2652 00e9 00       		.byte	0
 2653 00ea 0E       		.uleb128 0xe
 2654 00eb 34       		.uleb128 0x34
 2655 00ec 00       		.byte	0
 2656 00ed 03       		.uleb128 0x3
 2657 00ee 0E       		.uleb128 0xe
 2658 00ef 3A       		.uleb128 0x3a
 2659 00f0 0B       		.uleb128 0xb
 2660 00f1 3B       		.uleb128 0x3b
 2661 00f2 05       		.uleb128 0x5
 2662 00f3 49       		.uleb128 0x49
 2663 00f4 13       		.uleb128 0x13
 2664 00f5 02       		.uleb128 0x2
 2665 00f6 18       		.uleb128 0x18
 2666 00f7 00       		.byte	0
 2667 00f8 00       		.byte	0
 2668 00f9 0F       		.uleb128 0xf
 2669 00fa 2E       		.uleb128 0x2e
 2670 00fb 01       		.byte	0x1
 2671 00fc 3F       		.uleb128 0x3f
 2672 00fd 19       		.uleb128 0x19
 2673 00fe 03       		.uleb128 0x3
 2674 00ff 0E       		.uleb128 0xe
 2675 0100 3A       		.uleb128 0x3a
 2676 0101 0B       		.uleb128 0xb
 2677 0102 3B       		.uleb128 0x3b
 2678 0103 05       		.uleb128 0x5
 2679 0104 27       		.uleb128 0x27
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 76


 2680 0105 19       		.uleb128 0x19
 2681 0106 49       		.uleb128 0x49
 2682 0107 13       		.uleb128 0x13
 2683 0108 11       		.uleb128 0x11
 2684 0109 01       		.uleb128 0x1
 2685 010a 12       		.uleb128 0x12
 2686 010b 06       		.uleb128 0x6
 2687 010c 40       		.uleb128 0x40
 2688 010d 18       		.uleb128 0x18
 2689 010e 9642     		.uleb128 0x2116
 2690 0110 19       		.uleb128 0x19
 2691 0111 01       		.uleb128 0x1
 2692 0112 13       		.uleb128 0x13
 2693 0113 00       		.byte	0
 2694 0114 00       		.byte	0
 2695 0115 10       		.uleb128 0x10
 2696 0116 2E       		.uleb128 0x2e
 2697 0117 01       		.byte	0x1
 2698 0118 3F       		.uleb128 0x3f
 2699 0119 19       		.uleb128 0x19
 2700 011a 03       		.uleb128 0x3
 2701 011b 0E       		.uleb128 0xe
 2702 011c 3A       		.uleb128 0x3a
 2703 011d 0B       		.uleb128 0xb
 2704 011e 3B       		.uleb128 0x3b
 2705 011f 05       		.uleb128 0x5
 2706 0120 27       		.uleb128 0x27
 2707 0121 19       		.uleb128 0x19
 2708 0122 11       		.uleb128 0x11
 2709 0123 01       		.uleb128 0x1
 2710 0124 12       		.uleb128 0x12
 2711 0125 06       		.uleb128 0x6
 2712 0126 40       		.uleb128 0x40
 2713 0127 18       		.uleb128 0x18
 2714 0128 9642     		.uleb128 0x2116
 2715 012a 19       		.uleb128 0x19
 2716 012b 01       		.uleb128 0x1
 2717 012c 13       		.uleb128 0x13
 2718 012d 00       		.byte	0
 2719 012e 00       		.byte	0
 2720 012f 11       		.uleb128 0x11
 2721 0130 0F       		.uleb128 0xf
 2722 0131 00       		.byte	0
 2723 0132 0B       		.uleb128 0xb
 2724 0133 0B       		.uleb128 0xb
 2725 0134 49       		.uleb128 0x49
 2726 0135 13       		.uleb128 0x13
 2727 0136 00       		.byte	0
 2728 0137 00       		.byte	0
 2729 0138 12       		.uleb128 0x12
 2730 0139 26       		.uleb128 0x26
 2731 013a 00       		.byte	0
 2732 013b 49       		.uleb128 0x49
 2733 013c 13       		.uleb128 0x13
 2734 013d 00       		.byte	0
 2735 013e 00       		.byte	0
 2736 013f 13       		.uleb128 0x13
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 77


 2737 0140 0B       		.uleb128 0xb
 2738 0141 01       		.byte	0x1
 2739 0142 11       		.uleb128 0x11
 2740 0143 01       		.uleb128 0x1
 2741 0144 12       		.uleb128 0x12
 2742 0145 06       		.uleb128 0x6
 2743 0146 00       		.byte	0
 2744 0147 00       		.byte	0
 2745 0148 14       		.uleb128 0x14
 2746 0149 34       		.uleb128 0x34
 2747 014a 00       		.byte	0
 2748 014b 03       		.uleb128 0x3
 2749 014c 0E       		.uleb128 0xe
 2750 014d 3A       		.uleb128 0x3a
 2751 014e 0B       		.uleb128 0xb
 2752 014f 3B       		.uleb128 0x3b
 2753 0150 0B       		.uleb128 0xb
 2754 0151 49       		.uleb128 0x49
 2755 0152 13       		.uleb128 0x13
 2756 0153 3F       		.uleb128 0x3f
 2757 0154 19       		.uleb128 0x19
 2758 0155 02       		.uleb128 0x2
 2759 0156 18       		.uleb128 0x18
 2760 0157 00       		.byte	0
 2761 0158 00       		.byte	0
 2762 0159 15       		.uleb128 0x15
 2763 015a 01       		.uleb128 0x1
 2764 015b 01       		.byte	0x1
 2765 015c 49       		.uleb128 0x49
 2766 015d 13       		.uleb128 0x13
 2767 015e 01       		.uleb128 0x1
 2768 015f 13       		.uleb128 0x13
 2769 0160 00       		.byte	0
 2770 0161 00       		.byte	0
 2771 0162 16       		.uleb128 0x16
 2772 0163 21       		.uleb128 0x21
 2773 0164 00       		.byte	0
 2774 0165 49       		.uleb128 0x49
 2775 0166 13       		.uleb128 0x13
 2776 0167 2F       		.uleb128 0x2f
 2777 0168 0B       		.uleb128 0xb
 2778 0169 00       		.byte	0
 2779 016a 00       		.byte	0
 2780 016b 00       		.byte	0
 2781              		.section	.debug_aranges,"",%progbits
 2782 0000 EC000000 		.4byte	0xec
 2783 0004 0200     		.2byte	0x2
 2784 0006 00000000 		.4byte	.Ldebug_info0
 2785 000a 04       		.byte	0x4
 2786 000b 00       		.byte	0
 2787 000c 0000     		.2byte	0
 2788 000e 0000     		.2byte	0
 2789 0010 00000000 		.4byte	.LFB0
 2790 0014 20000000 		.4byte	.LFE0-.LFB0
 2791 0018 00000000 		.4byte	.LFB1
 2792 001c 58000000 		.4byte	.LFE1-.LFB1
 2793 0020 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 78


 2794 0024 64000000 		.4byte	.LFE2-.LFB2
 2795 0028 00000000 		.4byte	.LFB3
 2796 002c 64000000 		.4byte	.LFE3-.LFB3
 2797 0030 00000000 		.4byte	.LFB4
 2798 0034 10000000 		.4byte	.LFE4-.LFB4
 2799 0038 00000000 		.4byte	.LFB5
 2800 003c 14000000 		.4byte	.LFE5-.LFB5
 2801 0040 00000000 		.4byte	.LFB6
 2802 0044 20000000 		.4byte	.LFE6-.LFB6
 2803 0048 00000000 		.4byte	.LFB7
 2804 004c 94000000 		.4byte	.LFE7-.LFB7
 2805 0050 00000000 		.4byte	.LFB8
 2806 0054 40000000 		.4byte	.LFE8-.LFB8
 2807 0058 00000000 		.4byte	.LFB9
 2808 005c B8000000 		.4byte	.LFE9-.LFB9
 2809 0060 00000000 		.4byte	.LFB10
 2810 0064 44000000 		.4byte	.LFE10-.LFB10
 2811 0068 00000000 		.4byte	.LFB11
 2812 006c 94000000 		.4byte	.LFE11-.LFB11
 2813 0070 00000000 		.4byte	.LFB12
 2814 0074 7C000000 		.4byte	.LFE12-.LFB12
 2815 0078 00000000 		.4byte	.LFB13
 2816 007c 14000000 		.4byte	.LFE13-.LFB13
 2817 0080 00000000 		.4byte	.LFB14
 2818 0084 20000000 		.4byte	.LFE14-.LFB14
 2819 0088 00000000 		.4byte	.LFB15
 2820 008c 20000000 		.4byte	.LFE15-.LFB15
 2821 0090 00000000 		.4byte	.LFB16
 2822 0094 20000000 		.4byte	.LFE16-.LFB16
 2823 0098 00000000 		.4byte	.LFB17
 2824 009c 2C000000 		.4byte	.LFE17-.LFB17
 2825 00a0 00000000 		.4byte	.LFB18
 2826 00a4 18000000 		.4byte	.LFE18-.LFB18
 2827 00a8 00000000 		.4byte	.LFB19
 2828 00ac 34000000 		.4byte	.LFE19-.LFB19
 2829 00b0 00000000 		.4byte	.LFB20
 2830 00b4 40000000 		.4byte	.LFE20-.LFB20
 2831 00b8 00000000 		.4byte	.LFB21
 2832 00bc 40000000 		.4byte	.LFE21-.LFB21
 2833 00c0 00000000 		.4byte	.LFB22
 2834 00c4 30000000 		.4byte	.LFE22-.LFB22
 2835 00c8 00000000 		.4byte	.LFB23
 2836 00cc 44000000 		.4byte	.LFE23-.LFB23
 2837 00d0 00000000 		.4byte	.LFB24
 2838 00d4 40000000 		.4byte	.LFE24-.LFB24
 2839 00d8 00000000 		.4byte	.LFB25
 2840 00dc BC000000 		.4byte	.LFE25-.LFB25
 2841 00e0 00000000 		.4byte	.LFB26
 2842 00e4 14000000 		.4byte	.LFE26-.LFB26
 2843 00e8 00000000 		.4byte	0
 2844 00ec 00000000 		.4byte	0
 2845              		.section	.debug_ranges,"",%progbits
 2846              	.Ldebug_ranges0:
 2847 0000 00000000 		.4byte	.LFB0
 2848 0004 20000000 		.4byte	.LFE0
 2849 0008 00000000 		.4byte	.LFB1
 2850 000c 58000000 		.4byte	.LFE1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 79


 2851 0010 00000000 		.4byte	.LFB2
 2852 0014 64000000 		.4byte	.LFE2
 2853 0018 00000000 		.4byte	.LFB3
 2854 001c 64000000 		.4byte	.LFE3
 2855 0020 00000000 		.4byte	.LFB4
 2856 0024 10000000 		.4byte	.LFE4
 2857 0028 00000000 		.4byte	.LFB5
 2858 002c 14000000 		.4byte	.LFE5
 2859 0030 00000000 		.4byte	.LFB6
 2860 0034 20000000 		.4byte	.LFE6
 2861 0038 00000000 		.4byte	.LFB7
 2862 003c 94000000 		.4byte	.LFE7
 2863 0040 00000000 		.4byte	.LFB8
 2864 0044 40000000 		.4byte	.LFE8
 2865 0048 00000000 		.4byte	.LFB9
 2866 004c B8000000 		.4byte	.LFE9
 2867 0050 00000000 		.4byte	.LFB10
 2868 0054 44000000 		.4byte	.LFE10
 2869 0058 00000000 		.4byte	.LFB11
 2870 005c 94000000 		.4byte	.LFE11
 2871 0060 00000000 		.4byte	.LFB12
 2872 0064 7C000000 		.4byte	.LFE12
 2873 0068 00000000 		.4byte	.LFB13
 2874 006c 14000000 		.4byte	.LFE13
 2875 0070 00000000 		.4byte	.LFB14
 2876 0074 20000000 		.4byte	.LFE14
 2877 0078 00000000 		.4byte	.LFB15
 2878 007c 20000000 		.4byte	.LFE15
 2879 0080 00000000 		.4byte	.LFB16
 2880 0084 20000000 		.4byte	.LFE16
 2881 0088 00000000 		.4byte	.LFB17
 2882 008c 2C000000 		.4byte	.LFE17
 2883 0090 00000000 		.4byte	.LFB18
 2884 0094 18000000 		.4byte	.LFE18
 2885 0098 00000000 		.4byte	.LFB19
 2886 009c 34000000 		.4byte	.LFE19
 2887 00a0 00000000 		.4byte	.LFB20
 2888 00a4 40000000 		.4byte	.LFE20
 2889 00a8 00000000 		.4byte	.LFB21
 2890 00ac 40000000 		.4byte	.LFE21
 2891 00b0 00000000 		.4byte	.LFB22
 2892 00b4 30000000 		.4byte	.LFE22
 2893 00b8 00000000 		.4byte	.LFB23
 2894 00bc 44000000 		.4byte	.LFE23
 2895 00c0 00000000 		.4byte	.LFB24
 2896 00c4 40000000 		.4byte	.LFE24
 2897 00c8 00000000 		.4byte	.LFB25
 2898 00cc BC000000 		.4byte	.LFE25
 2899 00d0 00000000 		.4byte	.LFB26
 2900 00d4 14000000 		.4byte	.LFE26
 2901 00d8 00000000 		.4byte	0
 2902 00dc 00000000 		.4byte	0
 2903              		.section	.debug_line,"",%progbits
 2904              	.Ldebug_line0:
 2905 0000 20030000 		.section	.debug_str,"MS",%progbits,1
 2905      02004700 
 2905      00000201 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 80


 2905      FB0E0D00 
 2905      01010101 
 2906              	.LASF34:
 2907 0000 53757274 		.ascii	"Surtidor_GetChar\000"
 2907      69646F72 
 2907      5F476574 
 2907      43686172 
 2907      00
 2908              	.LASF10:
 2909 0011 75696E74 		.ascii	"uint16\000"
 2909      313600
 2910              	.LASF58:
 2911 0018 53757274 		.ascii	"Surtidor_GetTxBufferSize\000"
 2911      69646F72 
 2911      5F476574 
 2911      54784275 
 2911      66666572 
 2912              	.LASF48:
 2913 0031 74784461 		.ascii	"txDataByte\000"
 2913      74614279 
 2913      746500
 2914              	.LASF53:
 2915 003c 73747269 		.ascii	"string\000"
 2915      6E6700
 2916              	.LASF55:
 2917 0043 53757274 		.ascii	"Surtidor_PutArray\000"
 2917      69646F72 
 2917      5F507574 
 2917      41727261 
 2917      7900
 2918              	.LASF7:
 2919 0055 6C6F6E67 		.ascii	"long long unsigned int\000"
 2919      206C6F6E 
 2919      6720756E 
 2919      7369676E 
 2919      65642069 
 2920              	.LASF32:
 2921 006c 53757274 		.ascii	"Surtidor_ReadRxStatus\000"
 2921      69646F72 
 2921      5F526561 
 2921      64527853 
 2921      74617475 
 2922              	.LASF69:
 2923 0082 53757274 		.ascii	"Surtidor_rxBufferWrite\000"
 2923      69646F72 
 2923      5F727842 
 2923      75666665 
 2923      72577269 
 2924              	.LASF6:
 2925 0099 6C6F6E67 		.ascii	"long long int\000"
 2925      206C6F6E 
 2925      6720696E 
 2925      7400
 2926              	.LASF0:
 2927 00a7 7369676E 		.ascii	"signed char\000"
 2927      65642063 
 2927      68617200 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 81


 2928              	.LASF63:
 2929 00b3 74785065 		.ascii	"txPeriod\000"
 2929      72696F64 
 2929      00
 2930              	.LASF64:
 2931 00bc 53757274 		.ascii	"Surtidor_SetTxAddressMode\000"
 2931      69646F72 
 2931      5F536574 
 2931      54784164 
 2931      64726573 
 2932              	.LASF60:
 2933 00d6 53757274 		.ascii	"Surtidor_SendBreak\000"
 2933      69646F72 
 2933      5F53656E 
 2933      64427265 
 2933      616B00
 2934              	.LASF4:
 2935 00e9 6C6F6E67 		.ascii	"long int\000"
 2935      20696E74 
 2935      00
 2936              	.LASF9:
 2937 00f2 75696E74 		.ascii	"uint8\000"
 2937      3800
 2938              	.LASF57:
 2939 00f8 53757274 		.ascii	"Surtidor_PutCRLF\000"
 2939      69646F72 
 2939      5F507574 
 2939      43524C46 
 2939      00
 2940              	.LASF13:
 2941 0109 646F7562 		.ascii	"double\000"
 2941      6C6500
 2942              	.LASF42:
 2943 0110 61646472 		.ascii	"addressMode\000"
 2943      6573734D 
 2943      6F646500 
 2944              	.LASF49:
 2945 011c 53757274 		.ascii	"Surtidor_ReadControlRegister\000"
 2945      69646F72 
 2945      5F526561 
 2945      64436F6E 
 2945      74726F6C 
 2946              	.LASF11:
 2947 0139 75696E74 		.ascii	"uint32\000"
 2947      333200
 2948              	.LASF66:
 2949 0140 53757274 		.ascii	"Surtidor_errorStatus\000"
 2949      69646F72 
 2949      5F657272 
 2949      6F725374 
 2949      61747573 
 2950              	.LASF26:
 2951 0155 636F6E74 		.ascii	"control\000"
 2951      726F6C00 
 2952              	.LASF46:
 2953 015d 53757274 		.ascii	"Surtidor_SetTxInterruptMode\000"
 2953      69646F72 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 82


 2953      5F536574 
 2953      5478496E 
 2953      74657272 
 2954              	.LASF25:
 2955 0179 53757274 		.ascii	"Surtidor_SetRxInterruptMode\000"
 2955      69646F72 
 2955      5F536574 
 2955      5278496E 
 2955      74657272 
 2956              	.LASF67:
 2957 0195 53757274 		.ascii	"Surtidor_rxBuffer\000"
 2957      69646F72 
 2957      5F727842 
 2957      75666665 
 2957      7200
 2958              	.LASF61:
 2959 01a7 7265744D 		.ascii	"retMode\000"
 2959      6F646500 
 2960              	.LASF73:
 2961 01af 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Surtidor.c\000"
 2961      6E657261 
 2961      7465645F 
 2961      536F7572 
 2961      63655C50 
 2962              	.LASF8:
 2963 01d3 756E7369 		.ascii	"unsigned int\000"
 2963      676E6564 
 2963      20696E74 
 2963      00
 2964              	.LASF47:
 2965 01e0 53757274 		.ascii	"Surtidor_WriteTxData\000"
 2965      69646F72 
 2965      5F577269 
 2965      74655478 
 2965      44617461 
 2966              	.LASF51:
 2967 01f5 53757274 		.ascii	"Surtidor_PutChar\000"
 2967      69646F72 
 2967      5F507574 
 2967      43686172 
 2967      00
 2968              	.LASF37:
 2969 0206 6C6F6345 		.ascii	"locErrorStatus\000"
 2969      72726F72 
 2969      53746174 
 2969      757300
 2970              	.LASF5:
 2971 0215 6C6F6E67 		.ascii	"long unsigned int\000"
 2971      20756E73 
 2971      69676E65 
 2971      6420696E 
 2971      7400
 2972              	.LASF41:
 2973 0227 53757274 		.ascii	"Surtidor_SetRxAddressMode\000"
 2973      69646F72 
 2973      5F536574 
 2973      52784164 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 83


 2973      64726573 
 2974              	.LASF39:
 2975 0241 73697A65 		.ascii	"size\000"
 2975      00
 2976              	.LASF3:
 2977 0246 73686F72 		.ascii	"short unsigned int\000"
 2977      7420756E 
 2977      7369676E 
 2977      65642069 
 2977      6E7400
 2978              	.LASF54:
 2979 0259 62756649 		.ascii	"bufIndex\000"
 2979      6E646578 
 2979      00
 2980              	.LASF27:
 2981 0262 696E7453 		.ascii	"intSrc\000"
 2981      726300
 2982              	.LASF17:
 2983 0269 72656733 		.ascii	"reg32\000"
 2983      3200
 2984              	.LASF62:
 2985 026f 746D7053 		.ascii	"tmpStat\000"
 2985      74617400 
 2986              	.LASF50:
 2987 0277 53757274 		.ascii	"Surtidor_ReadTxStatus\000"
 2987      69646F72 
 2987      5F526561 
 2987      64547853 
 2987      74617475 
 2988              	.LASF18:
 2989 028d 73697A65 		.ascii	"sizetype\000"
 2989      74797065 
 2989      00
 2990              	.LASF59:
 2991 0296 53757274 		.ascii	"Surtidor_ClearTxBuffer\000"
 2991      69646F72 
 2991      5F436C65 
 2991      61725478 
 2991      42756666 
 2992              	.LASF36:
 2993 02ad 53757274 		.ascii	"Surtidor_GetByte\000"
 2993      69646F72 
 2993      5F476574 
 2993      42797465 
 2993      00
 2994              	.LASF72:
 2995 02be 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2995      4320342E 
 2995      382E3420 
 2995      32303134 
 2995      30353236 
 2996 02f1 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2996      20726576 
 2996      6973696F 
 2996      6E203231 
 2996      31333538 
 2997 0324 30202D66 		.ascii	"0 -ffunction-sections\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 84


 2997      66756E63 
 2997      74696F6E 
 2997      2D736563 
 2997      74696F6E 
 2998              	.LASF70:
 2999 033a 53757274 		.ascii	"Surtidor_rxBufferLoopDetect\000"
 2999      69646F72 
 2999      5F727842 
 2999      75666665 
 2999      724C6F6F 
 3000              	.LASF30:
 3001 0356 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3001      78427566 
 3001      66657257 
 3001      72697465 
 3001      00
 3002              	.LASF35:
 3003 0367 72785374 		.ascii	"rxStatus\000"
 3003      61747573 
 3003      00
 3004              	.LASF22:
 3005 0370 53757274 		.ascii	"Surtidor_Stop\000"
 3005      69646F72 
 3005      5F53746F 
 3005      7000
 3006              	.LASF12:
 3007 037e 666C6F61 		.ascii	"float\000"
 3007      7400
 3008              	.LASF16:
 3009 0384 72656738 		.ascii	"reg8\000"
 3009      00
 3010              	.LASF1:
 3011 0389 756E7369 		.ascii	"unsigned char\000"
 3011      676E6564 
 3011      20636861 
 3011      7200
 3012              	.LASF2:
 3013 0397 73686F72 		.ascii	"short int\000"
 3013      7420696E 
 3013      7400
 3014              	.LASF19:
 3015 03a1 53757274 		.ascii	"Surtidor_Start\000"
 3015      69646F72 
 3015      5F537461 
 3015      727400
 3016              	.LASF56:
 3017 03b0 62797465 		.ascii	"byteCount\000"
 3017      436F756E 
 3017      7400
 3018              	.LASF43:
 3019 03ba 53757274 		.ascii	"Surtidor_SetRxAddress1\000"
 3019      69646F72 
 3019      5F536574 
 3019      52784164 
 3019      64726573 
 3020              	.LASF45:
 3021 03d1 53757274 		.ascii	"Surtidor_SetRxAddress2\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 85


 3021      69646F72 
 3021      5F536574 
 3021      52784164 
 3021      64726573 
 3022              	.LASF74:
 3023 03e8 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Desktop\\BEAGLE\\Programa\\Pr"
 3023      73657273 
 3023      5C526563 
 3023      65706369 
 3023      6F6E5C44 
 3024 0415 75656261 		.ascii	"ueba_Autogas\\BBB.cydsn\000"
 3024      5F417574 
 3024      6F676173 
 3024      5C424242 
 3024      2E637964 
 3025              	.LASF52:
 3026 042c 53757274 		.ascii	"Surtidor_PutString\000"
 3026      69646F72 
 3026      5F507574 
 3026      53747269 
 3026      6E6700
 3027              	.LASF28:
 3028 043f 72784461 		.ascii	"rxData\000"
 3028      746100
 3029              	.LASF31:
 3030 0446 53757274 		.ascii	"Surtidor_ReadRxData\000"
 3030      69646F72 
 3030      5F526561 
 3030      64527844 
 3030      61746100 
 3031              	.LASF15:
 3032 045a 63686172 		.ascii	"char\000"
 3032      00
 3033              	.LASF68:
 3034 045f 53757274 		.ascii	"Surtidor_rxBufferRead\000"
 3034      69646F72 
 3034      5F727842 
 3034      75666665 
 3034      72526561 
 3035              	.LASF21:
 3036 0475 53757274 		.ascii	"Surtidor_Enable\000"
 3036      69646F72 
 3036      5F456E61 
 3036      626C6500 
 3037              	.LASF14:
 3038 0485 63686172 		.ascii	"char8\000"
 3038      3800
 3039              	.LASF40:
 3040 048b 53757274 		.ascii	"Surtidor_ClearRxBuffer\000"
 3040      69646F72 
 3040      5F436C65 
 3040      61725278 
 3040      42756666 
 3041              	.LASF29:
 3042 04a2 6C6F6352 		.ascii	"locRxBufferRead\000"
 3042      78427566 
 3042      66657252 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccBClUHk.s 			page 86


 3042      65616400 
 3043              	.LASF71:
 3044 04b2 53757274 		.ascii	"Surtidor_rxBufferOverflow\000"
 3044      69646F72 
 3044      5F727842 
 3044      75666665 
 3044      724F7665 
 3045              	.LASF23:
 3046 04cc 656E6162 		.ascii	"enableInterrupts\000"
 3046      6C65496E 
 3046      74657272 
 3046      75707473 
 3046      00
 3047              	.LASF33:
 3048 04dd 73746174 		.ascii	"status\000"
 3048      757300
 3049              	.LASF24:
 3050 04e4 53757274 		.ascii	"Surtidor_WriteControlRegister\000"
 3050      69646F72 
 3050      5F577269 
 3050      7465436F 
 3050      6E74726F 
 3051              	.LASF44:
 3052 0502 61646472 		.ascii	"address\000"
 3052      65737300 
 3053              	.LASF38:
 3054 050a 53757274 		.ascii	"Surtidor_GetRxBufferSize\000"
 3054      69646F72 
 3054      5F476574 
 3054      52784275 
 3054      66666572 
 3055              	.LASF20:
 3056 0523 53757274 		.ascii	"Surtidor_Init\000"
 3056      69646F72 
 3056      5F496E69 
 3056      7400
 3057              	.LASF65:
 3058 0531 53757274 		.ascii	"Surtidor_initVar\000"
 3058      69646F72 
 3058      5F696E69 
 3058      74566172 
 3058      00
 3059              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
