ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"LCD_2_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.LCD_2_RXISR,"ax",%progbits
  19              		.align	2
  20              		.global	LCD_2_RXISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	LCD_2_RXISR, %function
  24              	LCD_2_RXISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\LCD_2_INT.c"
   1:.\Generated_Source\PSoC5/LCD_2_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/LCD_2_INT.c **** * File Name: LCD_2INT.c
   3:.\Generated_Source\PSoC5/LCD_2_INT.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/LCD_2_INT.c **** *
   5:.\Generated_Source\PSoC5/LCD_2_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/LCD_2_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:.\Generated_Source\PSoC5/LCD_2_INT.c **** *
   8:.\Generated_Source\PSoC5/LCD_2_INT.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/LCD_2_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:.\Generated_Source\PSoC5/LCD_2_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:.\Generated_Source\PSoC5/LCD_2_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:.\Generated_Source\PSoC5/LCD_2_INT.c **** * the software package with which this file was provided.
  13:.\Generated_Source\PSoC5/LCD_2_INT.c **** *******************************************************************************/
  14:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
  15:.\Generated_Source\PSoC5/LCD_2_INT.c **** #include "LCD_2.h"
  16:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
  17:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
  18:.\Generated_Source\PSoC5/LCD_2_INT.c **** /***************************************
  19:.\Generated_Source\PSoC5/LCD_2_INT.c **** * Custom Declarations
  20:.\Generated_Source\PSoC5/LCD_2_INT.c **** ***************************************/
  21:.\Generated_Source\PSoC5/LCD_2_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  22:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
  23:.\Generated_Source\PSoC5/LCD_2_INT.c **** /* `#END` */
  24:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
  25:.\Generated_Source\PSoC5/LCD_2_INT.c **** #if (LCD_2_RX_INTERRUPT_ENABLED && (LCD_2_RX_ENABLED || LCD_2_HD_ENABLED))
  26:.\Generated_Source\PSoC5/LCD_2_INT.c ****     /*******************************************************************************
  27:.\Generated_Source\PSoC5/LCD_2_INT.c ****     * Function Name: LCD_2_RXISR
  28:.\Generated_Source\PSoC5/LCD_2_INT.c ****     ********************************************************************************
  29:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *
  30:.\Generated_Source\PSoC5/LCD_2_INT.c ****     * Summary:
  31:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 2


  32:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *
  33:.\Generated_Source\PSoC5/LCD_2_INT.c ****     * Parameters:
  34:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *  None.
  35:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *
  36:.\Generated_Source\PSoC5/LCD_2_INT.c ****     * Return:
  37:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *  None.
  38:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *
  39:.\Generated_Source\PSoC5/LCD_2_INT.c ****     * Global Variables:
  40:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *  LCD_2_rxBuffer - RAM buffer pointer for save received data.
  41:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *  LCD_2_rxBufferWrite - cyclic index for write to rxBuffer,
  42:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *     increments after each byte saved to buffer.
  43:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *  LCD_2_rxBufferRead - cyclic index for read from rxBuffer,
  44:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *     checked to detect overflow condition.
  45:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *  LCD_2_rxBufferOverflow - software overflow flag. Set to one
  46:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *     when LCD_2_rxBufferWrite index overtakes
  47:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *     LCD_2_rxBufferRead index.
  48:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *  LCD_2_rxBufferLoopDetect - additional variable to detect overflow.
  49:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *     Set to one when LCD_2_rxBufferWrite is equal to
  50:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *    LCD_2_rxBufferRead
  51:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *  LCD_2_rxAddressMode - this variable contains the Address mode,
  52:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  53:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *  LCD_2_rxAddressDetected - set to 1 when correct address received,
  54:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  55:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  56:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *
  57:.\Generated_Source\PSoC5/LCD_2_INT.c ****     *******************************************************************************/
  58:.\Generated_Source\PSoC5/LCD_2_INT.c ****     CY_ISR(LCD_2_RXISR)
  59:.\Generated_Source\PSoC5/LCD_2_INT.c ****     {
  27              		.loc 1 59 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  60:.\Generated_Source\PSoC5/LCD_2_INT.c ****         uint8 readData;
  61:.\Generated_Source\PSoC5/LCD_2_INT.c ****         uint8 readStatus;
  62:.\Generated_Source\PSoC5/LCD_2_INT.c ****         uint8 increment_pointer = 0u;
  39              		.loc 1 62 0
  40 0006 0023     		movs	r3, #0
  41 0008 FB71     		strb	r3, [r7, #7]
  42              	.L6:
  63:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
  64:.\Generated_Source\PSoC5/LCD_2_INT.c ****     #if(CY_PSOC3)
  65:.\Generated_Source\PSoC5/LCD_2_INT.c ****         uint8 int_en;
  66:.\Generated_Source\PSoC5/LCD_2_INT.c ****     #endif /* (CY_PSOC3) */
  67:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
  68:.\Generated_Source\PSoC5/LCD_2_INT.c ****         /* User code required at start of ISR */
  69:.\Generated_Source\PSoC5/LCD_2_INT.c ****         /* `#START LCD_2_RXISR_START` */
  70:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
  71:.\Generated_Source\PSoC5/LCD_2_INT.c ****         /* `#END` */
  72:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 3


  73:.\Generated_Source\PSoC5/LCD_2_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  74:.\Generated_Source\PSoC5/LCD_2_INT.c ****         int_en = EA;
  75:.\Generated_Source\PSoC5/LCD_2_INT.c ****         CyGlobalIntEnable;
  76:.\Generated_Source\PSoC5/LCD_2_INT.c ****     #endif /* (CY_PSOC3) */
  77:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
  78:.\Generated_Source\PSoC5/LCD_2_INT.c ****         do
  79:.\Generated_Source\PSoC5/LCD_2_INT.c ****         {
  80:.\Generated_Source\PSoC5/LCD_2_INT.c ****             /* Read receiver status register */
  81:.\Generated_Source\PSoC5/LCD_2_INT.c ****             readStatus = LCD_2_RXSTATUS_REG;
  43              		.loc 1 81 0
  44 000a 2A4B     		ldr	r3, .L7
  45 000c 1B78     		ldrb	r3, [r3]
  46 000e BB71     		strb	r3, [r7, #6]
  82:.\Generated_Source\PSoC5/LCD_2_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  83:.\Generated_Source\PSoC5/LCD_2_INT.c ****             *  of the user code in LCD_2_RXISR_ERROR` section. 
  84:.\Generated_Source\PSoC5/LCD_2_INT.c ****             */
  85:.\Generated_Source\PSoC5/LCD_2_INT.c ****             readData = readStatus;
  47              		.loc 1 85 0
  48 0010 BB79     		ldrb	r3, [r7, #6]
  49 0012 7B71     		strb	r3, [r7, #5]
  86:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
  87:.\Generated_Source\PSoC5/LCD_2_INT.c ****             if((readStatus & (LCD_2_RX_STS_BREAK | 
  88:.\Generated_Source\PSoC5/LCD_2_INT.c ****                             LCD_2_RX_STS_PAR_ERROR |
  89:.\Generated_Source\PSoC5/LCD_2_INT.c ****                             LCD_2_RX_STS_STOP_ERROR | 
  90:.\Generated_Source\PSoC5/LCD_2_INT.c ****                             LCD_2_RX_STS_OVERRUN)) != 0u)
  50              		.loc 1 90 0
  51 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  52 0016 03F01E03 		and	r3, r3, #30
  87:.\Generated_Source\PSoC5/LCD_2_INT.c ****             if((readStatus & (LCD_2_RX_STS_BREAK | 
  53              		.loc 1 87 0
  54 001a 002B     		cmp	r3, #0
  55 001c 0BD0     		beq	.L2
  91:.\Generated_Source\PSoC5/LCD_2_INT.c ****             {
  92:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 /* ERROR handling. */
  93:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 LCD_2_errorStatus |= readStatus & ( LCD_2_RX_STS_BREAK | 
  56              		.loc 1 93 0
  57 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  58 0020 03F01E03 		and	r3, r3, #30
  59 0024 DAB2     		uxtb	r2, r3
  60 0026 244B     		ldr	r3, .L7+4
  61 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62 002a DBB2     		uxtb	r3, r3
  63 002c 1343     		orrs	r3, r3, r2
  64 002e DBB2     		uxtb	r3, r3
  65 0030 DAB2     		uxtb	r2, r3
  66 0032 214B     		ldr	r3, .L7+4
  67 0034 1A70     		strb	r2, [r3]
  68              	.L2:
  94:.\Generated_Source\PSoC5/LCD_2_INT.c ****                                                             LCD_2_RX_STS_PAR_ERROR | 
  95:.\Generated_Source\PSoC5/LCD_2_INT.c ****                                                             LCD_2_RX_STS_STOP_ERROR | 
  96:.\Generated_Source\PSoC5/LCD_2_INT.c ****                                                             LCD_2_RX_STS_OVERRUN);
  97:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 /* `#START LCD_2_RXISR_ERROR` */
  98:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
  99:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 /* `#END` */
 100:.\Generated_Source\PSoC5/LCD_2_INT.c ****             }
 101:.\Generated_Source\PSoC5/LCD_2_INT.c ****             
 102:.\Generated_Source\PSoC5/LCD_2_INT.c ****             if((readStatus & LCD_2_RX_STS_FIFO_NOTEMPTY) != 0u)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 4


  69              		.loc 1 102 0
  70 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  71 0038 03F02003 		and	r3, r3, #32
  72 003c 002B     		cmp	r3, #0
  73 003e 2FD0     		beq	.L3
 103:.\Generated_Source\PSoC5/LCD_2_INT.c ****             {
 104:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 /* Read data from the RX data register */
 105:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 readData = LCD_2_RXDATA_REG;
  74              		.loc 1 105 0
  75 0040 1E4B     		ldr	r3, .L7+8
  76 0042 1B78     		ldrb	r3, [r3]
  77 0044 7B71     		strb	r3, [r7, #5]
 106:.\Generated_Source\PSoC5/LCD_2_INT.c ****             #if (LCD_2_RXHW_ADDRESS_ENABLED)
 107:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 if(LCD_2_rxAddressMode == (uint8)LCD_2__B_UART__AM_SW_DETECT_TO_BUFFER)
 108:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 {
 109:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     if((readStatus & LCD_2_RX_STS_MRKSPC) != 0u)
 110:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     {
 111:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         if ((readStatus & LCD_2_RX_STS_ADDR_MATCH) != 0u)
 112:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         {
 113:.\Generated_Source\PSoC5/LCD_2_INT.c ****                             LCD_2_rxAddressDetected = 1u;
 114:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         }
 115:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         else
 116:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         {
 117:.\Generated_Source\PSoC5/LCD_2_INT.c ****                             LCD_2_rxAddressDetected = 0u;
 118:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         }
 119:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     }
 120:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     if(LCD_2_rxAddressDetected != 0u)
 121:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     {   /* Store only addressed data */
 122:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         LCD_2_rxBuffer[LCD_2_rxBufferWrite] = readData;
 123:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         increment_pointer = 1u;
 124:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     }
 125:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 }
 126:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 else /* Without software addressing */
 127:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 {
 128:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     LCD_2_rxBuffer[LCD_2_rxBufferWrite] = readData;
 129:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     increment_pointer = 1u;
 130:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 }
 131:.\Generated_Source\PSoC5/LCD_2_INT.c ****             #else  /* Without addressing */
 132:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 LCD_2_rxBuffer[LCD_2_rxBufferWrite] = readData;
  78              		.loc 1 132 0
  79 0046 1E4B     		ldr	r3, .L7+12
  80 0048 1B78     		ldrb	r3, [r3]
  81 004a DBB2     		uxtb	r3, r3
  82 004c 1D4A     		ldr	r2, .L7+16
  83 004e 7979     		ldrb	r1, [r7, #5]
  84 0050 D154     		strb	r1, [r2, r3]
 133:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 increment_pointer = 1u;
  85              		.loc 1 133 0
  86 0052 0123     		movs	r3, #1
  87 0054 FB71     		strb	r3, [r7, #7]
 134:.\Generated_Source\PSoC5/LCD_2_INT.c ****             #endif /* (LCD_2_RXHW_ADDRESS_ENABLED) */
 135:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
 136:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 137:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 if(increment_pointer != 0u)
  88              		.loc 1 137 0
  89 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  90 0058 002B     		cmp	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 5


  91 005a 21D0     		beq	.L3
 138:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 {
 139:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     if(LCD_2_rxBufferLoopDetect != 0u)
  92              		.loc 1 139 0
  93 005c 1A4B     		ldr	r3, .L7+20
  94 005e 1B78     		ldrb	r3, [r3]
  95 0060 DBB2     		uxtb	r3, r3
  96 0062 002B     		cmp	r3, #0
  97 0064 02D0     		beq	.L4
 140:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     {   /* Set Software Buffer status Overflow */
 141:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         LCD_2_rxBufferOverflow = 1u;
  98              		.loc 1 141 0
  99 0066 194B     		ldr	r3, .L7+24
 100 0068 0122     		movs	r2, #1
 101 006a 1A70     		strb	r2, [r3]
 102              	.L4:
 142:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     }
 143:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     /* Set next pointer. */
 144:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     LCD_2_rxBufferWrite++;
 103              		.loc 1 144 0
 104 006c 144B     		ldr	r3, .L7+12
 105 006e 1B78     		ldrb	r3, [r3]
 106 0070 DBB2     		uxtb	r3, r3
 107 0072 0133     		adds	r3, r3, #1
 108 0074 DAB2     		uxtb	r2, r3
 109 0076 124B     		ldr	r3, .L7+12
 110 0078 1A70     		strb	r2, [r3]
 145:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
 146:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     /* Check pointer for a loop condition */
 147:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     if(LCD_2_rxBufferWrite >= LCD_2_RX_BUFFER_SIZE)
 111              		.loc 1 147 0
 112 007a 114B     		ldr	r3, .L7+12
 113 007c 1B78     		ldrb	r3, [r3]
 114 007e DBB2     		uxtb	r3, r3
 115 0080 072B     		cmp	r3, #7
 116 0082 02D9     		bls	.L5
 148:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     {
 149:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         LCD_2_rxBufferWrite = 0u;
 117              		.loc 1 149 0
 118 0084 0E4B     		ldr	r3, .L7+12
 119 0086 0022     		movs	r2, #0
 120 0088 1A70     		strb	r2, [r3]
 121              	.L5:
 150:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     }
 151:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
 152:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     /* Detect pre-overload condition and set flag */
 153:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     if(LCD_2_rxBufferWrite == LCD_2_rxBufferRead)
 122              		.loc 1 153 0
 123 008a 0D4B     		ldr	r3, .L7+12
 124 008c 1B78     		ldrb	r3, [r3]
 125 008e DAB2     		uxtb	r2, r3
 126 0090 0F4B     		ldr	r3, .L7+28
 127 0092 1B78     		ldrb	r3, [r3]
 128 0094 DBB2     		uxtb	r3, r3
 129 0096 9A42     		cmp	r2, r3
 130 0098 02D1     		bne	.L3
 154:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 6


 155:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         LCD_2_rxBufferLoopDetect = 1u;
 131              		.loc 1 155 0
 132 009a 0B4B     		ldr	r3, .L7+20
 133 009c 0122     		movs	r2, #1
 134 009e 1A70     		strb	r2, [r3]
 135              	.L3:
 156:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         /* When Hardware Flow Control selected */
 157:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         #if (LCD_2_FLOW_CONTROL != 0u)
 158:.\Generated_Source\PSoC5/LCD_2_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 159:.\Generated_Source\PSoC5/LCD_2_INT.c ****                             LCD_2_RXSTATUS_MASK_REG  &= (uint8)~LCD_2_RX_STS_FIFO_NOTEMPTY;
 160:.\Generated_Source\PSoC5/LCD_2_INT.c ****                             CyIntClearPending(LCD_2_RX_VECT_NUM);
 161:.\Generated_Source\PSoC5/LCD_2_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 162:.\Generated_Source\PSoC5/LCD_2_INT.c ****                         #endif /* (LCD_2_FLOW_CONTROL != 0u) */
 163:.\Generated_Source\PSoC5/LCD_2_INT.c ****                     }
 164:.\Generated_Source\PSoC5/LCD_2_INT.c ****                 }
 165:.\Generated_Source\PSoC5/LCD_2_INT.c ****             }
 166:.\Generated_Source\PSoC5/LCD_2_INT.c ****         }while((readStatus & LCD_2_RX_STS_FIFO_NOTEMPTY) != 0u);
 136              		.loc 1 166 0
 137 00a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 138 00a2 03F02003 		and	r3, r3, #32
 139 00a6 002B     		cmp	r3, #0
 140 00a8 AFD1     		bne	.L6
 167:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
 168:.\Generated_Source\PSoC5/LCD_2_INT.c ****         /* User code required at end of ISR (Optional) */
 169:.\Generated_Source\PSoC5/LCD_2_INT.c ****         /* `#START LCD_2_RXISR_END` */
 170:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
 171:.\Generated_Source\PSoC5/LCD_2_INT.c ****         /* `#END` */
 172:.\Generated_Source\PSoC5/LCD_2_INT.c **** 
 173:.\Generated_Source\PSoC5/LCD_2_INT.c ****     #if(CY_PSOC3)
 174:.\Generated_Source\PSoC5/LCD_2_INT.c ****         EA = int_en;
 175:.\Generated_Source\PSoC5/LCD_2_INT.c ****     #endif /* (CY_PSOC3) */
 176:.\Generated_Source\PSoC5/LCD_2_INT.c ****     }
 141              		.loc 1 176 0
 142 00aa 0C37     		adds	r7, r7, #12
 143 00ac BD46     		mov	sp, r7
 144              		@ sp needed
 145 00ae 5DF8047B 		ldr	r7, [sp], #4
 146 00b2 7047     		bx	lr
 147              	.L8:
 148              		.align	2
 149              	.L7:
 150 00b4 6C640040 		.word	1073767532
 151 00b8 00000000 		.word	LCD_2_errorStatus
 152 00bc 4F640040 		.word	1073767503
 153 00c0 00000000 		.word	LCD_2_rxBufferWrite
 154 00c4 00000000 		.word	LCD_2_rxBuffer
 155 00c8 00000000 		.word	LCD_2_rxBufferLoopDetect
 156 00cc 00000000 		.word	LCD_2_rxBufferOverflow
 157 00d0 00000000 		.word	LCD_2_rxBufferRead
 158              		.cfi_endproc
 159              	.LFE0:
 160              		.size	LCD_2_RXISR, .-LCD_2_RXISR
 161              		.text
 162              	.Letext0:
 163              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 164              		.file 3 ".\\Generated_Source\\PSoC5\\LCD_2.h"
 165              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 7


 166              	.Ldebug_info0:
 167 0000 3D010000 		.4byte	0x13d
 168 0004 0400     		.2byte	0x4
 169 0006 00000000 		.4byte	.Ldebug_abbrev0
 170 000a 04       		.byte	0x4
 171 000b 01       		.uleb128 0x1
 172 000c AB010000 		.4byte	.LASF24
 173 0010 01       		.byte	0x1
 174 0011 EA000000 		.4byte	.LASF25
 175 0015 3C000000 		.4byte	.LASF26
 176 0019 00000000 		.4byte	.Ldebug_ranges0+0
 177 001d 00000000 		.4byte	0
 178 0021 00000000 		.4byte	.Ldebug_line0
 179 0025 02       		.uleb128 0x2
 180 0026 01       		.byte	0x1
 181 0027 06       		.byte	0x6
 182 0028 50010000 		.4byte	.LASF0
 183 002c 02       		.uleb128 0x2
 184 002d 01       		.byte	0x1
 185 002e 08       		.byte	0x8
 186 002f DC000000 		.4byte	.LASF1
 187 0033 02       		.uleb128 0x2
 188 0034 02       		.byte	0x2
 189 0035 05       		.byte	0x5
 190 0036 18010000 		.4byte	.LASF2
 191 003a 02       		.uleb128 0x2
 192 003b 02       		.byte	0x2
 193 003c 07       		.byte	0x7
 194 003d 3D010000 		.4byte	.LASF3
 195 0041 02       		.uleb128 0x2
 196 0042 04       		.byte	0x4
 197 0043 05       		.byte	0x5
 198 0044 0F010000 		.4byte	.LASF4
 199 0048 02       		.uleb128 0x2
 200 0049 04       		.byte	0x4
 201 004a 07       		.byte	0x7
 202 004b A2000000 		.4byte	.LASF5
 203 004f 02       		.uleb128 0x2
 204 0050 08       		.byte	0x8
 205 0051 05       		.byte	0x5
 206 0052 00000000 		.4byte	.LASF6
 207 0056 02       		.uleb128 0x2
 208 0057 08       		.byte	0x8
 209 0058 07       		.byte	0x7
 210 0059 B4000000 		.4byte	.LASF7
 211 005d 03       		.uleb128 0x3
 212 005e 04       		.byte	0x4
 213 005f 05       		.byte	0x5
 214 0060 696E7400 		.ascii	"int\000"
 215 0064 02       		.uleb128 0x2
 216 0065 04       		.byte	0x4
 217 0066 07       		.byte	0x7
 218 0067 0E000000 		.4byte	.LASF8
 219 006b 04       		.uleb128 0x4
 220 006c 9C000000 		.4byte	.LASF12
 221 0070 02       		.byte	0x2
 222 0071 B4       		.byte	0xb4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 8


 223 0072 2C000000 		.4byte	0x2c
 224 0076 02       		.uleb128 0x2
 225 0077 04       		.byte	0x4
 226 0078 04       		.byte	0x4
 227 0079 79010000 		.4byte	.LASF9
 228 007d 02       		.uleb128 0x2
 229 007e 08       		.byte	0x8
 230 007f 04       		.byte	0x4
 231 0080 22010000 		.4byte	.LASF10
 232 0084 02       		.uleb128 0x2
 233 0085 01       		.byte	0x1
 234 0086 08       		.byte	0x8
 235 0087 D7000000 		.4byte	.LASF11
 236 008b 05       		.uleb128 0x5
 237 008c 97000000 		.4byte	.LASF13
 238 0090 02       		.byte	0x2
 239 0091 5E01     		.2byte	0x15e
 240 0093 97000000 		.4byte	0x97
 241 0097 06       		.uleb128 0x6
 242 0098 6B000000 		.4byte	0x6b
 243 009c 02       		.uleb128 0x2
 244 009d 04       		.byte	0x4
 245 009e 07       		.byte	0x7
 246 009f 30020000 		.4byte	.LASF14
 247 00a3 07       		.uleb128 0x7
 248 00a4 CB000000 		.4byte	.LASF27
 249 00a8 01       		.byte	0x1
 250 00a9 3A       		.byte	0x3a
 251 00aa 00000000 		.4byte	.LFB0
 252 00ae D4000000 		.4byte	.LFE0-.LFB0
 253 00b2 01       		.uleb128 0x1
 254 00b3 9C       		.byte	0x9c
 255 00b4 E3000000 		.4byte	0xe3
 256 00b8 08       		.uleb128 0x8
 257 00b9 27020000 		.4byte	.LASF15
 258 00bd 01       		.byte	0x1
 259 00be 3C       		.byte	0x3c
 260 00bf 6B000000 		.4byte	0x6b
 261 00c3 02       		.uleb128 0x2
 262 00c4 91       		.byte	0x91
 263 00c5 75       		.sleb128 -11
 264 00c6 08       		.uleb128 0x8
 265 00c7 6E010000 		.4byte	.LASF16
 266 00cb 01       		.byte	0x1
 267 00cc 3D       		.byte	0x3d
 268 00cd 6B000000 		.4byte	0x6b
 269 00d1 02       		.uleb128 0x2
 270 00d2 91       		.byte	0x91
 271 00d3 76       		.sleb128 -10
 272 00d4 08       		.uleb128 0x8
 273 00d5 1B000000 		.4byte	.LASF17
 274 00d9 01       		.byte	0x1
 275 00da 3E       		.byte	0x3e
 276 00db 6B000000 		.4byte	0x6b
 277 00df 02       		.uleb128 0x2
 278 00e0 91       		.byte	0x91
 279 00e1 77       		.sleb128 -9
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 9


 280 00e2 00       		.byte	0
 281 00e3 09       		.uleb128 0x9
 282 00e4 5C010000 		.4byte	.LASF18
 283 00e8 03       		.byte	0x3
 284 00e9 3D01     		.2byte	0x13d
 285 00eb 6B000000 		.4byte	0x6b
 286 00ef 0A       		.uleb128 0xa
 287 00f0 6B000000 		.4byte	0x6b
 288 00f4 FF000000 		.4byte	0xff
 289 00f8 0B       		.uleb128 0xb
 290 00f9 9C000000 		.4byte	0x9c
 291 00fd 07       		.byte	0x7
 292 00fe 00       		.byte	0
 293 00ff 09       		.uleb128 0x9
 294 0100 2D000000 		.4byte	.LASF19
 295 0104 03       		.byte	0x3
 296 0105 3E01     		.2byte	0x13e
 297 0107 0B010000 		.4byte	0x10b
 298 010b 06       		.uleb128 0x6
 299 010c EF000000 		.4byte	0xef
 300 0110 09       		.uleb128 0x9
 301 0111 98010000 		.4byte	.LASF20
 302 0115 03       		.byte	0x3
 303 0116 3F01     		.2byte	0x13f
 304 0118 97000000 		.4byte	0x97
 305 011c 09       		.uleb128 0x9
 306 011d 29010000 		.4byte	.LASF21
 307 0121 03       		.byte	0x3
 308 0122 4001     		.2byte	0x140
 309 0124 97000000 		.4byte	0x97
 310 0128 09       		.uleb128 0x9
 311 0129 7F010000 		.4byte	.LASF22
 312 012d 03       		.byte	0x3
 313 012e 4101     		.2byte	0x141
 314 0130 97000000 		.4byte	0x97
 315 0134 09       		.uleb128 0x9
 316 0135 80000000 		.4byte	.LASF23
 317 0139 03       		.byte	0x3
 318 013a 4201     		.2byte	0x142
 319 013c 97000000 		.4byte	0x97
 320 0140 00       		.byte	0
 321              		.section	.debug_abbrev,"",%progbits
 322              	.Ldebug_abbrev0:
 323 0000 01       		.uleb128 0x1
 324 0001 11       		.uleb128 0x11
 325 0002 01       		.byte	0x1
 326 0003 25       		.uleb128 0x25
 327 0004 0E       		.uleb128 0xe
 328 0005 13       		.uleb128 0x13
 329 0006 0B       		.uleb128 0xb
 330 0007 03       		.uleb128 0x3
 331 0008 0E       		.uleb128 0xe
 332 0009 1B       		.uleb128 0x1b
 333 000a 0E       		.uleb128 0xe
 334 000b 55       		.uleb128 0x55
 335 000c 17       		.uleb128 0x17
 336 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 10


 337 000e 01       		.uleb128 0x1
 338 000f 10       		.uleb128 0x10
 339 0010 17       		.uleb128 0x17
 340 0011 00       		.byte	0
 341 0012 00       		.byte	0
 342 0013 02       		.uleb128 0x2
 343 0014 24       		.uleb128 0x24
 344 0015 00       		.byte	0
 345 0016 0B       		.uleb128 0xb
 346 0017 0B       		.uleb128 0xb
 347 0018 3E       		.uleb128 0x3e
 348 0019 0B       		.uleb128 0xb
 349 001a 03       		.uleb128 0x3
 350 001b 0E       		.uleb128 0xe
 351 001c 00       		.byte	0
 352 001d 00       		.byte	0
 353 001e 03       		.uleb128 0x3
 354 001f 24       		.uleb128 0x24
 355 0020 00       		.byte	0
 356 0021 0B       		.uleb128 0xb
 357 0022 0B       		.uleb128 0xb
 358 0023 3E       		.uleb128 0x3e
 359 0024 0B       		.uleb128 0xb
 360 0025 03       		.uleb128 0x3
 361 0026 08       		.uleb128 0x8
 362 0027 00       		.byte	0
 363 0028 00       		.byte	0
 364 0029 04       		.uleb128 0x4
 365 002a 16       		.uleb128 0x16
 366 002b 00       		.byte	0
 367 002c 03       		.uleb128 0x3
 368 002d 0E       		.uleb128 0xe
 369 002e 3A       		.uleb128 0x3a
 370 002f 0B       		.uleb128 0xb
 371 0030 3B       		.uleb128 0x3b
 372 0031 0B       		.uleb128 0xb
 373 0032 49       		.uleb128 0x49
 374 0033 13       		.uleb128 0x13
 375 0034 00       		.byte	0
 376 0035 00       		.byte	0
 377 0036 05       		.uleb128 0x5
 378 0037 16       		.uleb128 0x16
 379 0038 00       		.byte	0
 380 0039 03       		.uleb128 0x3
 381 003a 0E       		.uleb128 0xe
 382 003b 3A       		.uleb128 0x3a
 383 003c 0B       		.uleb128 0xb
 384 003d 3B       		.uleb128 0x3b
 385 003e 05       		.uleb128 0x5
 386 003f 49       		.uleb128 0x49
 387 0040 13       		.uleb128 0x13
 388 0041 00       		.byte	0
 389 0042 00       		.byte	0
 390 0043 06       		.uleb128 0x6
 391 0044 35       		.uleb128 0x35
 392 0045 00       		.byte	0
 393 0046 49       		.uleb128 0x49
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 11


 394 0047 13       		.uleb128 0x13
 395 0048 00       		.byte	0
 396 0049 00       		.byte	0
 397 004a 07       		.uleb128 0x7
 398 004b 2E       		.uleb128 0x2e
 399 004c 01       		.byte	0x1
 400 004d 3F       		.uleb128 0x3f
 401 004e 19       		.uleb128 0x19
 402 004f 03       		.uleb128 0x3
 403 0050 0E       		.uleb128 0xe
 404 0051 3A       		.uleb128 0x3a
 405 0052 0B       		.uleb128 0xb
 406 0053 3B       		.uleb128 0x3b
 407 0054 0B       		.uleb128 0xb
 408 0055 27       		.uleb128 0x27
 409 0056 19       		.uleb128 0x19
 410 0057 11       		.uleb128 0x11
 411 0058 01       		.uleb128 0x1
 412 0059 12       		.uleb128 0x12
 413 005a 06       		.uleb128 0x6
 414 005b 40       		.uleb128 0x40
 415 005c 18       		.uleb128 0x18
 416 005d 9742     		.uleb128 0x2117
 417 005f 19       		.uleb128 0x19
 418 0060 01       		.uleb128 0x1
 419 0061 13       		.uleb128 0x13
 420 0062 00       		.byte	0
 421 0063 00       		.byte	0
 422 0064 08       		.uleb128 0x8
 423 0065 34       		.uleb128 0x34
 424 0066 00       		.byte	0
 425 0067 03       		.uleb128 0x3
 426 0068 0E       		.uleb128 0xe
 427 0069 3A       		.uleb128 0x3a
 428 006a 0B       		.uleb128 0xb
 429 006b 3B       		.uleb128 0x3b
 430 006c 0B       		.uleb128 0xb
 431 006d 49       		.uleb128 0x49
 432 006e 13       		.uleb128 0x13
 433 006f 02       		.uleb128 0x2
 434 0070 18       		.uleb128 0x18
 435 0071 00       		.byte	0
 436 0072 00       		.byte	0
 437 0073 09       		.uleb128 0x9
 438 0074 34       		.uleb128 0x34
 439 0075 00       		.byte	0
 440 0076 03       		.uleb128 0x3
 441 0077 0E       		.uleb128 0xe
 442 0078 3A       		.uleb128 0x3a
 443 0079 0B       		.uleb128 0xb
 444 007a 3B       		.uleb128 0x3b
 445 007b 05       		.uleb128 0x5
 446 007c 49       		.uleb128 0x49
 447 007d 13       		.uleb128 0x13
 448 007e 3F       		.uleb128 0x3f
 449 007f 19       		.uleb128 0x19
 450 0080 3C       		.uleb128 0x3c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 12


 451 0081 19       		.uleb128 0x19
 452 0082 00       		.byte	0
 453 0083 00       		.byte	0
 454 0084 0A       		.uleb128 0xa
 455 0085 01       		.uleb128 0x1
 456 0086 01       		.byte	0x1
 457 0087 49       		.uleb128 0x49
 458 0088 13       		.uleb128 0x13
 459 0089 01       		.uleb128 0x1
 460 008a 13       		.uleb128 0x13
 461 008b 00       		.byte	0
 462 008c 00       		.byte	0
 463 008d 0B       		.uleb128 0xb
 464 008e 21       		.uleb128 0x21
 465 008f 00       		.byte	0
 466 0090 49       		.uleb128 0x49
 467 0091 13       		.uleb128 0x13
 468 0092 2F       		.uleb128 0x2f
 469 0093 0B       		.uleb128 0xb
 470 0094 00       		.byte	0
 471 0095 00       		.byte	0
 472 0096 00       		.byte	0
 473              		.section	.debug_aranges,"",%progbits
 474 0000 1C000000 		.4byte	0x1c
 475 0004 0200     		.2byte	0x2
 476 0006 00000000 		.4byte	.Ldebug_info0
 477 000a 04       		.byte	0x4
 478 000b 00       		.byte	0
 479 000c 0000     		.2byte	0
 480 000e 0000     		.2byte	0
 481 0010 00000000 		.4byte	.LFB0
 482 0014 D4000000 		.4byte	.LFE0-.LFB0
 483 0018 00000000 		.4byte	0
 484 001c 00000000 		.4byte	0
 485              		.section	.debug_ranges,"",%progbits
 486              	.Ldebug_ranges0:
 487 0000 00000000 		.4byte	.LFB0
 488 0004 D4000000 		.4byte	.LFE0
 489 0008 00000000 		.4byte	0
 490 000c 00000000 		.4byte	0
 491              		.section	.debug_line,"",%progbits
 492              	.Ldebug_line0:
 493 0000 86000000 		.section	.debug_str,"MS",%progbits,1
 493      02005300 
 493      00000201 
 493      FB0E0D00 
 493      01010101 
 494              	.LASF6:
 495 0000 6C6F6E67 		.ascii	"long long int\000"
 495      206C6F6E 
 495      6720696E 
 495      7400
 496              	.LASF8:
 497 000e 756E7369 		.ascii	"unsigned int\000"
 497      676E6564 
 497      20696E74 
 497      00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 13


 498              	.LASF17:
 499 001b 696E6372 		.ascii	"increment_pointer\000"
 499      656D656E 
 499      745F706F 
 499      696E7465 
 499      7200
 500              	.LASF19:
 501 002d 4C43445F 		.ascii	"LCD_2_rxBuffer\000"
 501      325F7278 
 501      42756666 
 501      657200
 502              	.LASF26:
 503 003c 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Desktop\\BEAGLE\\Programa\\Pr"
 503      73657273 
 503      5C526563 
 503      65706369 
 503      6F6E5C44 
 504 0069 75656261 		.ascii	"ueba_Autogas\\BBB.cydsn\000"
 504      5F417574 
 504      6F676173 
 504      5C424242 
 504      2E637964 
 505              	.LASF23:
 506 0080 4C43445F 		.ascii	"LCD_2_rxBufferOverflow\000"
 506      325F7278 
 506      42756666 
 506      65724F76 
 506      6572666C 
 507              	.LASF13:
 508 0097 72656738 		.ascii	"reg8\000"
 508      00
 509              	.LASF12:
 510 009c 75696E74 		.ascii	"uint8\000"
 510      3800
 511              	.LASF5:
 512 00a2 6C6F6E67 		.ascii	"long unsigned int\000"
 512      20756E73 
 512      69676E65 
 512      6420696E 
 512      7400
 513              	.LASF7:
 514 00b4 6C6F6E67 		.ascii	"long long unsigned int\000"
 514      206C6F6E 
 514      6720756E 
 514      7369676E 
 514      65642069 
 515              	.LASF27:
 516 00cb 4C43445F 		.ascii	"LCD_2_RXISR\000"
 516      325F5258 
 516      49535200 
 517              	.LASF11:
 518 00d7 63686172 		.ascii	"char\000"
 518      00
 519              	.LASF1:
 520 00dc 756E7369 		.ascii	"unsigned char\000"
 520      676E6564 
 520      20636861 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 14


 520      7200
 521              	.LASF25:
 522 00ea 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\LCD_2_INT.c\000"
 522      6E657261 
 522      7465645F 
 522      536F7572 
 522      63655C50 
 523              	.LASF4:
 524 010f 6C6F6E67 		.ascii	"long int\000"
 524      20696E74 
 524      00
 525              	.LASF2:
 526 0118 73686F72 		.ascii	"short int\000"
 526      7420696E 
 526      7400
 527              	.LASF10:
 528 0122 646F7562 		.ascii	"double\000"
 528      6C6500
 529              	.LASF21:
 530 0129 4C43445F 		.ascii	"LCD_2_rxBufferWrite\000"
 530      325F7278 
 530      42756666 
 530      65725772 
 530      69746500 
 531              	.LASF3:
 532 013d 73686F72 		.ascii	"short unsigned int\000"
 532      7420756E 
 532      7369676E 
 532      65642069 
 532      6E7400
 533              	.LASF0:
 534 0150 7369676E 		.ascii	"signed char\000"
 534      65642063 
 534      68617200 
 535              	.LASF18:
 536 015c 4C43445F 		.ascii	"LCD_2_errorStatus\000"
 536      325F6572 
 536      726F7253 
 536      74617475 
 536      7300
 537              	.LASF16:
 538 016e 72656164 		.ascii	"readStatus\000"
 538      53746174 
 538      757300
 539              	.LASF9:
 540 0179 666C6F61 		.ascii	"float\000"
 540      7400
 541              	.LASF22:
 542 017f 4C43445F 		.ascii	"LCD_2_rxBufferLoopDetect\000"
 542      325F7278 
 542      42756666 
 542      65724C6F 
 542      6F704465 
 543              	.LASF20:
 544 0198 4C43445F 		.ascii	"LCD_2_rxBufferRead\000"
 544      325F7278 
 544      42756666 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccLWQHGV.s 			page 15


 544      65725265 
 544      616400
 545              	.LASF24:
 546 01ab 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 546      4320342E 
 546      382E3420 
 546      32303134 
 546      30353236 
 547 01de 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 547      20726576 
 547      6973696F 
 547      6E203231 
 547      31333538 
 548 0211 30202D66 		.ascii	"0 -ffunction-sections\000"
 548      66756E63 
 548      74696F6E 
 548      2D736563 
 548      74696F6E 
 549              	.LASF15:
 550 0227 72656164 		.ascii	"readData\000"
 550      44617461 
 550      00
 551              	.LASF14:
 552 0230 73697A65 		.ascii	"sizetype\000"
 552      74797065 
 552      00
 553              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
