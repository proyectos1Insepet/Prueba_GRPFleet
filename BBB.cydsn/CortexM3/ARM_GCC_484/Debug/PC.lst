ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PC.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	PC_initVar
  19              		.bss
  20              		.type	PC_initVar, %object
  21              		.size	PC_initVar, 1
  22              	PC_initVar:
  23 0000 00       		.space	1
  24              		.global	PC_errorStatus
  25              		.type	PC_errorStatus, %object
  26              		.size	PC_errorStatus, 1
  27              	PC_errorStatus:
  28 0001 00       		.space	1
  29              		.comm	PC_rxBuffer,1500,4
  30              		.global	PC_rxBufferRead
  31              		.align	1
  32              		.type	PC_rxBufferRead, %object
  33              		.size	PC_rxBufferRead, 2
  34              	PC_rxBufferRead:
  35 0002 0000     		.space	2
  36              		.global	PC_rxBufferWrite
  37              		.align	1
  38              		.type	PC_rxBufferWrite, %object
  39              		.size	PC_rxBufferWrite, 2
  40              	PC_rxBufferWrite:
  41 0004 0000     		.space	2
  42              		.global	PC_rxBufferLoopDetect
  43              		.type	PC_rxBufferLoopDetect, %object
  44              		.size	PC_rxBufferLoopDetect, 1
  45              	PC_rxBufferLoopDetect:
  46 0006 00       		.space	1
  47              		.global	PC_rxBufferOverflow
  48              		.type	PC_rxBufferOverflow, %object
  49              		.size	PC_rxBufferOverflow, 1
  50              	PC_rxBufferOverflow:
  51 0007 00       		.space	1
  52              		.section	.text.PC_Start,"ax",%progbits
  53              		.align	2
  54              		.global	PC_Start
  55              		.thumb
  56              		.thumb_func
  57              		.type	PC_Start, %function
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 2


  58              	PC_Start:
  59              	.LFB0:
  60              		.file 1 ".\\Generated_Source\\PSoC5\\PC.c"
   1:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PC.c **** * File Name: PC.c
   3:.\Generated_Source\PSoC5/PC.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/PC.c **** *
   5:.\Generated_Source\PSoC5/PC.c **** * Description:
   6:.\Generated_Source\PSoC5/PC.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/PC.c **** *
   8:.\Generated_Source\PSoC5/PC.c **** * Note:
   9:.\Generated_Source\PSoC5/PC.c **** *
  10:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/PC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/PC.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/PC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/PC.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/PC.c **** 
  17:.\Generated_Source\PSoC5/PC.c **** #include "PC.h"
  18:.\Generated_Source\PSoC5/PC.c **** #if (PC_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/PC.c ****     #include "PC_IntClock.h"
  20:.\Generated_Source\PSoC5/PC.c **** #endif /* End PC_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/PC.c **** 
  22:.\Generated_Source\PSoC5/PC.c **** 
  23:.\Generated_Source\PSoC5/PC.c **** /***************************************
  24:.\Generated_Source\PSoC5/PC.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/PC.c **** ***************************************/
  26:.\Generated_Source\PSoC5/PC.c **** 
  27:.\Generated_Source\PSoC5/PC.c **** uint8 PC_initVar = 0u;
  28:.\Generated_Source\PSoC5/PC.c **** 
  29:.\Generated_Source\PSoC5/PC.c **** #if (PC_TX_INTERRUPT_ENABLED && PC_TX_ENABLED)
  30:.\Generated_Source\PSoC5/PC.c ****     volatile uint8 PC_txBuffer[PC_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/PC.c ****     volatile uint8 PC_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/PC.c **** #endif /* (PC_TX_INTERRUPT_ENABLED && PC_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/PC.c **** 
  35:.\Generated_Source\PSoC5/PC.c **** #if (PC_RX_INTERRUPT_ENABLED && (PC_RX_ENABLED || PC_HD_ENABLED))
  36:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/PC.c ****     volatile uint8 PC_rxBuffer[PC_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/PC.c ****     volatile uint16 PC_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/PC.c ****     volatile uint16 PC_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/PC.c ****     volatile uint8 PC_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/PC.c ****     volatile uint8 PC_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/PC.c ****         volatile uint8 PC_rxAddressMode = PC_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/PC.c ****         volatile uint8 PC_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/PC.c **** #endif /* (PC_RX_INTERRUPT_ENABLED && (PC_RX_ENABLED || PC_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/PC.c **** 
  48:.\Generated_Source\PSoC5/PC.c **** 
  49:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_Start
  51:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/PC.c **** *
  53:.\Generated_Source\PSoC5/PC.c **** * Summary:
  54:.\Generated_Source\PSoC5/PC.c **** *  This is the preferred method to begin component operation.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 3


  55:.\Generated_Source\PSoC5/PC.c **** *  PC_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/PC.c **** *  PC_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/PC.c **** *  PC_Enable() function.
  58:.\Generated_Source\PSoC5/PC.c **** *
  59:.\Generated_Source\PSoC5/PC.c **** * Parameters:
  60:.\Generated_Source\PSoC5/PC.c **** *  None.
  61:.\Generated_Source\PSoC5/PC.c **** *
  62:.\Generated_Source\PSoC5/PC.c **** * Return:
  63:.\Generated_Source\PSoC5/PC.c **** *  None.
  64:.\Generated_Source\PSoC5/PC.c **** *
  65:.\Generated_Source\PSoC5/PC.c **** * Global variables:
  66:.\Generated_Source\PSoC5/PC.c **** *  The PC_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/PC.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/PC.c **** *  and set to one (1u) the first time PC_Start() is called. This
  69:.\Generated_Source\PSoC5/PC.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/PC.c **** *  subsequent calls to the PC_Start() routine.
  71:.\Generated_Source\PSoC5/PC.c **** *
  72:.\Generated_Source\PSoC5/PC.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/PC.c **** *  No.
  74:.\Generated_Source\PSoC5/PC.c **** *
  75:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/PC.c **** void PC_Start(void) 
  77:.\Generated_Source\PSoC5/PC.c **** {
  61              		.loc 1 77 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC5/PC.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/PC.c ****     if(PC_initVar == 0u)
  71              		.loc 1 79 0
  72 0004 054B     		ldr	r3, .L3
  73 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  74 0008 002B     		cmp	r3, #0
  75 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC5/PC.c ****     {
  81:.\Generated_Source\PSoC5/PC.c ****         PC_Init();
  76              		.loc 1 81 0
  77 000c FFF7FEFF 		bl	PC_Init
  82:.\Generated_Source\PSoC5/PC.c ****         PC_initVar = 1u;
  78              		.loc 1 82 0
  79 0010 024B     		ldr	r3, .L3
  80 0012 0122     		movs	r2, #1
  81 0014 1A70     		strb	r2, [r3]
  82              	.L2:
  83:.\Generated_Source\PSoC5/PC.c ****     }
  84:.\Generated_Source\PSoC5/PC.c **** 
  85:.\Generated_Source\PSoC5/PC.c ****     PC_Enable();
  83              		.loc 1 85 0
  84 0016 FFF7FEFF 		bl	PC_Enable
  86:.\Generated_Source\PSoC5/PC.c **** }
  85              		.loc 1 86 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 4


  86 001a 80BD     		pop	{r7, pc}
  87              	.L4:
  88              		.align	2
  89              	.L3:
  90 001c 00000000 		.word	PC_initVar
  91              		.cfi_endproc
  92              	.LFE0:
  93              		.size	PC_Start, .-PC_Start
  94              		.section	.text.PC_Init,"ax",%progbits
  95              		.align	2
  96              		.global	PC_Init
  97              		.thumb
  98              		.thumb_func
  99              		.type	PC_Init, %function
 100              	PC_Init:
 101              	.LFB1:
  87:.\Generated_Source\PSoC5/PC.c **** 
  88:.\Generated_Source\PSoC5/PC.c **** 
  89:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_Init
  91:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/PC.c **** *
  93:.\Generated_Source\PSoC5/PC.c **** * Summary:
  94:.\Generated_Source\PSoC5/PC.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/PC.c **** *  dialog settings. It is not necessary to call PC_Init() because
  96:.\Generated_Source\PSoC5/PC.c **** *  the PC_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/PC.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/PC.c **** *
  99:.\Generated_Source\PSoC5/PC.c **** * Parameters:
 100:.\Generated_Source\PSoC5/PC.c **** *  None.
 101:.\Generated_Source\PSoC5/PC.c **** *
 102:.\Generated_Source\PSoC5/PC.c **** * Return:
 103:.\Generated_Source\PSoC5/PC.c **** *  None.
 104:.\Generated_Source\PSoC5/PC.c **** *
 105:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/PC.c **** void PC_Init(void) 
 107:.\Generated_Source\PSoC5/PC.c **** {
 102              		.loc 1 107 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/PC.c ****     #if(PC_RX_ENABLED || PC_HD_ENABLED)
 109:.\Generated_Source\PSoC5/PC.c **** 
 110:.\Generated_Source\PSoC5/PC.c ****         #if (PC_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/PC.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/PC.c ****             (void) CyIntSetVector(PC_RX_VECT_NUM, &PC_RXISR);
 112              		.loc 1 112 0
 113 0004 0420     		movs	r0, #4
 114 0006 0D49     		ldr	r1, .L6
 115 0008 FFF7FEFF 		bl	CyIntSetVector
 113:.\Generated_Source\PSoC5/PC.c ****             CyIntSetPriority(PC_RX_VECT_NUM, PC_RX_PRIOR_NUM);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 5


 116              		.loc 1 113 0
 117 000c 0420     		movs	r0, #4
 118 000e 0021     		movs	r1, #0
 119 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:.\Generated_Source\PSoC5/PC.c ****             PC_errorStatus = 0u;
 120              		.loc 1 114 0
 121 0014 0A4B     		ldr	r3, .L6+4
 122 0016 0022     		movs	r2, #0
 123 0018 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/PC.c **** 
 117:.\Generated_Source\PSoC5/PC.c ****         #if (PC_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/PC.c ****             PC_SetRxAddressMode(PC_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/PC.c ****             PC_SetRxAddress1(PC_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/PC.c ****             PC_SetRxAddress2(PC_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/PC.c **** 
 123:.\Generated_Source\PSoC5/PC.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/PC.c ****         PC_RXBITCTR_PERIOD_REG = PC_RXBITCTR_INIT;
 124              		.loc 1 124 0
 125 001a 0A4B     		ldr	r3, .L6+8
 126 001c 7222     		movs	r2, #114
 127 001e 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/PC.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/PC.c ****         PC_RXSTATUS_MASK_REG  = PC_INIT_RX_INTERRUPTS_MASK;
 128              		.loc 1 126 0
 129 0020 094B     		ldr	r3, .L6+12
 130 0022 2022     		movs	r2, #32
 131 0024 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/PC.c ****     #endif /* End PC_RX_ENABLED || PC_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/PC.c **** 
 129:.\Generated_Source\PSoC5/PC.c ****     #if(PC_TX_ENABLED)
 130:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/PC.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/PC.c ****             (void) CyIntSetVector(PC_TX_VECT_NUM, &PC_TXISR);
 133:.\Generated_Source\PSoC5/PC.c ****             CyIntSetPriority(PC_TX_VECT_NUM, PC_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/PC.c **** 
 136:.\Generated_Source\PSoC5/PC.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/PC.c ****             PC_TXBITCLKGEN_CTR_REG = PC_BIT_CENTER;
 132              		.loc 1 138 0
 133 0026 094B     		ldr	r3, .L6+16
 134 0028 0622     		movs	r2, #6
 135 002a 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/PC.c ****             PC_TXBITCLKTX_COMPLETE_REG = ((PC_NUMBER_OF_DATA_BITS +
 136              		.loc 1 139 0
 137 002c 084B     		ldr	r3, .L6+20
 138 002e 4722     		movs	r2, #71
 139 0030 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC5/PC.c ****                         PC_NUMBER_OF_START_BIT) * PC_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/PC.c ****         #else
 142:.\Generated_Source\PSoC5/PC.c ****             PC_TXBITCTR_PERIOD_REG = ((PC_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/PC.c ****                         PC_NUMBER_OF_START_BIT) * PC_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/PC.c **** 
 146:.\Generated_Source\PSoC5/PC.c ****         /* Configure the Initial TX interrupt mask */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 6


 147:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/PC.c ****             PC_TXSTATUS_MASK_REG = PC_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/PC.c ****         #else
 150:.\Generated_Source\PSoC5/PC.c ****             PC_TXSTATUS_MASK_REG = PC_INIT_TX_INTERRUPTS_MASK;
 140              		.loc 1 150 0
 141 0032 084B     		ldr	r3, .L6+24
 142 0034 0022     		movs	r2, #0
 143 0036 1A70     		strb	r2, [r3]
 151:.\Generated_Source\PSoC5/PC.c ****         #endif /*End PC_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/PC.c **** 
 153:.\Generated_Source\PSoC5/PC.c ****     #endif /* End PC_TX_ENABLED */
 154:.\Generated_Source\PSoC5/PC.c **** 
 155:.\Generated_Source\PSoC5/PC.c ****     #if(PC_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/PC.c ****         PC_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/PC.c ****             (PC_ReadControlRegister() & (uint8)~PC_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/PC.c ****             (uint8)(PC_PARITY_TYPE << PC_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/PC.c ****     #endif /* End PC_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/PC.c **** }
 144              		.loc 1 160 0
 145 0038 80BD     		pop	{r7, pc}
 146              	.L7:
 147 003a 00BF     		.align	2
 148              	.L6:
 149 003c 00000000 		.word	PC_RXISR
 150 0040 00000000 		.word	PC_errorStatus
 151 0044 80640040 		.word	1073767552
 152 0048 83640040 		.word	1073767555
 153 004c 24640040 		.word	1073767460
 154 0050 34640040 		.word	1073767476
 155 0054 84640040 		.word	1073767556
 156              		.cfi_endproc
 157              	.LFE1:
 158              		.size	PC_Init, .-PC_Init
 159              		.section	.text.PC_Enable,"ax",%progbits
 160              		.align	2
 161              		.global	PC_Enable
 162              		.thumb
 163              		.thumb_func
 164              		.type	PC_Enable, %function
 165              	PC_Enable:
 166              	.LFB2:
 161:.\Generated_Source\PSoC5/PC.c **** 
 162:.\Generated_Source\PSoC5/PC.c **** 
 163:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_Enable
 165:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/PC.c **** *
 167:.\Generated_Source\PSoC5/PC.c **** * Summary:
 168:.\Generated_Source\PSoC5/PC.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/PC.c **** *  to call PC_Enable() because the PC_Start() API
 170:.\Generated_Source\PSoC5/PC.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/PC.c **** *  operation.
 172:.\Generated_Source\PSoC5/PC.c **** 
 173:.\Generated_Source\PSoC5/PC.c **** * Parameters:
 174:.\Generated_Source\PSoC5/PC.c **** *  None.
 175:.\Generated_Source\PSoC5/PC.c **** *
 176:.\Generated_Source\PSoC5/PC.c **** * Return:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 7


 177:.\Generated_Source\PSoC5/PC.c **** *  None.
 178:.\Generated_Source\PSoC5/PC.c **** *
 179:.\Generated_Source\PSoC5/PC.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/PC.c **** *  PC_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/PC.c **** *
 182:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/PC.c **** void PC_Enable(void) 
 184:.\Generated_Source\PSoC5/PC.c **** {
 167              		.loc 1 184 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171 0000 80B5     		push	{r7, lr}
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 175 0002 82B0     		sub	sp, sp, #8
 176              		.cfi_def_cfa_offset 16
 177 0004 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/PC.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/PC.c ****     enableInterrupts = CyEnterCriticalSection();
 179              		.loc 1 186 0
 180 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 181 000a 0346     		mov	r3, r0
 182 000c FB71     		strb	r3, [r7, #7]
 187:.\Generated_Source\PSoC5/PC.c **** 
 188:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_ENABLED || PC_HD_ENABLED)
 189:.\Generated_Source\PSoC5/PC.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/PC.c ****         PC_RXBITCTR_CONTROL_REG |= PC_CNTR_ENABLE;
 183              		.loc 1 190 0
 184 000e 124B     		ldr	r3, .L9
 185 0010 114A     		ldr	r2, .L9
 186 0012 1278     		ldrb	r2, [r2]
 187 0014 D2B2     		uxtb	r2, r2
 188 0016 42F02002 		orr	r2, r2, #32
 189 001a D2B2     		uxtb	r2, r2
 190 001c 1A70     		strb	r2, [r3]
 191:.\Generated_Source\PSoC5/PC.c **** 
 192:.\Generated_Source\PSoC5/PC.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/PC.c ****         PC_RXSTATUS_ACTL_REG  |= PC_INT_ENABLE;
 191              		.loc 1 193 0
 192 001e 0F4B     		ldr	r3, .L9+4
 193 0020 0E4A     		ldr	r2, .L9+4
 194 0022 1278     		ldrb	r2, [r2]
 195 0024 D2B2     		uxtb	r2, r2
 196 0026 42F01002 		orr	r2, r2, #16
 197 002a D2B2     		uxtb	r2, r2
 198 002c 1A70     		strb	r2, [r3]
 194:.\Generated_Source\PSoC5/PC.c **** 
 195:.\Generated_Source\PSoC5/PC.c ****         #if (PC_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/PC.c ****             PC_EnableRxInt();
 199              		.loc 1 196 0
 200 002e 0C4B     		ldr	r3, .L9+8
 201 0030 1022     		movs	r2, #16
 202 0032 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC5/PC.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 8


 198:.\Generated_Source\PSoC5/PC.c ****             #if (PC_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/PC.c ****                 PC_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/PC.c ****             #endif /* (PC_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_ENABLED || PC_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/PC.c **** 
 204:.\Generated_Source\PSoC5/PC.c ****     #if(PC_TX_ENABLED)
 205:.\Generated_Source\PSoC5/PC.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/PC.c ****         #if(!PC_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/PC.c ****             PC_TXBITCTR_CONTROL_REG |= PC_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/PC.c **** 
 210:.\Generated_Source\PSoC5/PC.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/PC.c ****         PC_TXSTATUS_ACTL_REG |= PC_INT_ENABLE;
 203              		.loc 1 211 0
 204 0034 0B4B     		ldr	r3, .L9+12
 205 0036 0B4A     		ldr	r2, .L9+12
 206 0038 1278     		ldrb	r2, [r2]
 207 003a D2B2     		uxtb	r2, r2
 208 003c 42F01002 		orr	r2, r2, #16
 209 0040 D2B2     		uxtb	r2, r2
 210 0042 1A70     		strb	r2, [r3]
 212:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/PC.c ****             PC_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/PC.c ****             PC_EnableTxInt();
 215:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/PC.c ****      #endif /* (PC_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/PC.c **** 
 218:.\Generated_Source\PSoC5/PC.c ****     #if (PC_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/PC.c ****         PC_IntClock_Start();  /* Enable the clock */
 211              		.loc 1 219 0
 212 0044 FFF7FEFF 		bl	PC_IntClock_Start
 220:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/PC.c **** 
 222:.\Generated_Source\PSoC5/PC.c ****     CyExitCriticalSection(enableInterrupts);
 213              		.loc 1 222 0
 214 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 215 004a 1846     		mov	r0, r3
 216 004c FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/PC.c **** }
 217              		.loc 1 223 0
 218 0050 0837     		adds	r7, r7, #8
 219 0052 BD46     		mov	sp, r7
 220              		@ sp needed
 221 0054 80BD     		pop	{r7, pc}
 222              	.L10:
 223 0056 00BF     		.align	2
 224              	.L9:
 225 0058 90640040 		.word	1073767568
 226 005c 93640040 		.word	1073767571
 227 0060 00E100E0 		.word	-536813312
 228 0064 94640040 		.word	1073767572
 229              		.cfi_endproc
 230              	.LFE2:
 231              		.size	PC_Enable, .-PC_Enable
 232              		.section	.text.PC_Stop,"ax",%progbits
 233              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 9


 234              		.global	PC_Stop
 235              		.thumb
 236              		.thumb_func
 237              		.type	PC_Stop, %function
 238              	PC_Stop:
 239              	.LFB3:
 224:.\Generated_Source\PSoC5/PC.c **** 
 225:.\Generated_Source\PSoC5/PC.c **** 
 226:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_Stop
 228:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/PC.c **** *
 230:.\Generated_Source\PSoC5/PC.c **** * Summary:
 231:.\Generated_Source\PSoC5/PC.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/PC.c **** *
 233:.\Generated_Source\PSoC5/PC.c **** * Parameters:
 234:.\Generated_Source\PSoC5/PC.c **** *  None.
 235:.\Generated_Source\PSoC5/PC.c **** *
 236:.\Generated_Source\PSoC5/PC.c **** * Return:
 237:.\Generated_Source\PSoC5/PC.c **** *  None.
 238:.\Generated_Source\PSoC5/PC.c **** *
 239:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/PC.c **** void PC_Stop(void) 
 241:.\Generated_Source\PSoC5/PC.c **** {
 240              		.loc 1 241 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 8
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244 0000 80B5     		push	{r7, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              		.cfi_def_cfa_offset 16
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC5/PC.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/PC.c ****     enableInterrupts = CyEnterCriticalSection();
 252              		.loc 1 243 0
 253 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 254 000a 0346     		mov	r3, r0
 255 000c FB71     		strb	r3, [r7, #7]
 244:.\Generated_Source\PSoC5/PC.c **** 
 245:.\Generated_Source\PSoC5/PC.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_ENABLED || PC_HD_ENABLED)
 247:.\Generated_Source\PSoC5/PC.c ****         PC_RXBITCTR_CONTROL_REG &= (uint8) ~PC_CNTR_ENABLE;
 256              		.loc 1 247 0
 257 000e 124B     		ldr	r3, .L12
 258 0010 114A     		ldr	r2, .L12
 259 0012 1278     		ldrb	r2, [r2]
 260 0014 D2B2     		uxtb	r2, r2
 261 0016 22F02002 		bic	r2, r2, #32
 262 001a D2B2     		uxtb	r2, r2
 263 001c 1A70     		strb	r2, [r3]
 248:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_ENABLED || PC_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/PC.c **** 
 250:.\Generated_Source\PSoC5/PC.c ****     #if (PC_TX_ENABLED)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 10


 251:.\Generated_Source\PSoC5/PC.c ****         #if(!PC_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/PC.c ****             PC_TXBITCTR_CONTROL_REG &= (uint8) ~PC_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/PC.c ****         #endif /* (!PC_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/PC.c **** 
 256:.\Generated_Source\PSoC5/PC.c ****     #if (PC_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/PC.c ****         PC_IntClock_Stop();   /* Disable the clock */
 264              		.loc 1 257 0
 265 001e FFF7FEFF 		bl	PC_IntClock_Stop
 258:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/PC.c **** 
 260:.\Generated_Source\PSoC5/PC.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_ENABLED || PC_HD_ENABLED)
 262:.\Generated_Source\PSoC5/PC.c ****         PC_RXSTATUS_ACTL_REG  &= (uint8) ~PC_INT_ENABLE;
 266              		.loc 1 262 0
 267 0022 0E4B     		ldr	r3, .L12+4
 268 0024 0D4A     		ldr	r2, .L12+4
 269 0026 1278     		ldrb	r2, [r2]
 270 0028 D2B2     		uxtb	r2, r2
 271 002a 22F01002 		bic	r2, r2, #16
 272 002e D2B2     		uxtb	r2, r2
 273 0030 1A70     		strb	r2, [r3]
 263:.\Generated_Source\PSoC5/PC.c **** 
 264:.\Generated_Source\PSoC5/PC.c ****         #if (PC_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/PC.c ****             PC_DisableRxInt();
 274              		.loc 1 265 0
 275 0032 0B4B     		ldr	r3, .L12+8
 276 0034 1022     		movs	r2, #16
 277 0036 1A60     		str	r2, [r3]
 266:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_ENABLED || PC_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/PC.c **** 
 269:.\Generated_Source\PSoC5/PC.c ****     #if (PC_TX_ENABLED)
 270:.\Generated_Source\PSoC5/PC.c ****         PC_TXSTATUS_ACTL_REG &= (uint8) ~PC_INT_ENABLE;
 278              		.loc 1 270 0
 279 0038 0A4B     		ldr	r3, .L12+12
 280 003a 0A4A     		ldr	r2, .L12+12
 281 003c 1278     		ldrb	r2, [r2]
 282 003e D2B2     		uxtb	r2, r2
 283 0040 22F01002 		bic	r2, r2, #16
 284 0044 D2B2     		uxtb	r2, r2
 285 0046 1A70     		strb	r2, [r3]
 271:.\Generated_Source\PSoC5/PC.c **** 
 272:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/PC.c ****             PC_DisableTxInt();
 274:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/PC.c **** 
 277:.\Generated_Source\PSoC5/PC.c ****     CyExitCriticalSection(enableInterrupts);
 286              		.loc 1 277 0
 287 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 288 004a 1846     		mov	r0, r3
 289 004c FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC5/PC.c **** }
 290              		.loc 1 278 0
 291 0050 0837     		adds	r7, r7, #8
 292 0052 BD46     		mov	sp, r7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 11


 293              		@ sp needed
 294 0054 80BD     		pop	{r7, pc}
 295              	.L13:
 296 0056 00BF     		.align	2
 297              	.L12:
 298 0058 90640040 		.word	1073767568
 299 005c 93640040 		.word	1073767571
 300 0060 80E100E0 		.word	-536813184
 301 0064 94640040 		.word	1073767572
 302              		.cfi_endproc
 303              	.LFE3:
 304              		.size	PC_Stop, .-PC_Stop
 305              		.section	.text.PC_ReadControlRegister,"ax",%progbits
 306              		.align	2
 307              		.global	PC_ReadControlRegister
 308              		.thumb
 309              		.thumb_func
 310              		.type	PC_ReadControlRegister, %function
 311              	PC_ReadControlRegister:
 312              	.LFB4:
 279:.\Generated_Source\PSoC5/PC.c **** 
 280:.\Generated_Source\PSoC5/PC.c **** 
 281:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_ReadControlRegister
 283:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/PC.c **** *
 285:.\Generated_Source\PSoC5/PC.c **** * Summary:
 286:.\Generated_Source\PSoC5/PC.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/PC.c **** *
 288:.\Generated_Source\PSoC5/PC.c **** * Parameters:
 289:.\Generated_Source\PSoC5/PC.c **** *  None.
 290:.\Generated_Source\PSoC5/PC.c **** *
 291:.\Generated_Source\PSoC5/PC.c **** * Return:
 292:.\Generated_Source\PSoC5/PC.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/PC.c **** *
 294:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/PC.c **** uint8 PC_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/PC.c **** {
 313              		.loc 1 296 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318 0000 80B4     		push	{r7}
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 0002 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC5/PC.c ****     #if (PC_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/PC.c ****         return(0u);
 323              		.loc 1 298 0
 324 0004 0023     		movs	r3, #0
 299:.\Generated_Source\PSoC5/PC.c ****     #else
 300:.\Generated_Source\PSoC5/PC.c ****         return(PC_CONTROL_REG);
 301:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/PC.c **** }
 325              		.loc 1 302 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 12


 326 0006 1846     		mov	r0, r3
 327 0008 BD46     		mov	sp, r7
 328              		@ sp needed
 329 000a 5DF8047B 		ldr	r7, [sp], #4
 330 000e 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE4:
 333              		.size	PC_ReadControlRegister, .-PC_ReadControlRegister
 334              		.section	.text.PC_WriteControlRegister,"ax",%progbits
 335              		.align	2
 336              		.global	PC_WriteControlRegister
 337              		.thumb
 338              		.thumb_func
 339              		.type	PC_WriteControlRegister, %function
 340              	PC_WriteControlRegister:
 341              	.LFB5:
 303:.\Generated_Source\PSoC5/PC.c **** 
 304:.\Generated_Source\PSoC5/PC.c **** 
 305:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_WriteControlRegister
 307:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/PC.c **** *
 309:.\Generated_Source\PSoC5/PC.c **** * Summary:
 310:.\Generated_Source\PSoC5/PC.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/PC.c **** *
 312:.\Generated_Source\PSoC5/PC.c **** * Parameters:
 313:.\Generated_Source\PSoC5/PC.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/PC.c **** *
 315:.\Generated_Source\PSoC5/PC.c **** * Return:
 316:.\Generated_Source\PSoC5/PC.c **** *  None.
 317:.\Generated_Source\PSoC5/PC.c **** *
 318:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/PC.c **** void  PC_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/PC.c **** {
 342              		.loc 1 320 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 8
 345              		@ frame_needed = 1, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 347 0000 80B4     		push	{r7}
 348              		.cfi_def_cfa_offset 4
 349              		.cfi_offset 7, -4
 350 0002 83B0     		sub	sp, sp, #12
 351              		.cfi_def_cfa_offset 16
 352 0004 00AF     		add	r7, sp, #0
 353              		.cfi_def_cfa_register 7
 354 0006 0346     		mov	r3, r0
 355 0008 FB71     		strb	r3, [r7, #7]
 321:.\Generated_Source\PSoC5/PC.c ****     #if (PC_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/PC.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/PC.c ****         {
 324:.\Generated_Source\PSoC5/PC.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/PC.c ****         }
 326:.\Generated_Source\PSoC5/PC.c ****     #else
 327:.\Generated_Source\PSoC5/PC.c ****        PC_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/PC.c **** }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 13


 356              		.loc 1 329 0
 357 000a 0C37     		adds	r7, r7, #12
 358 000c BD46     		mov	sp, r7
 359              		@ sp needed
 360 000e 5DF8047B 		ldr	r7, [sp], #4
 361 0012 7047     		bx	lr
 362              		.cfi_endproc
 363              	.LFE5:
 364              		.size	PC_WriteControlRegister, .-PC_WriteControlRegister
 365              		.section	.text.PC_SetRxInterruptMode,"ax",%progbits
 366              		.align	2
 367              		.global	PC_SetRxInterruptMode
 368              		.thumb
 369              		.thumb_func
 370              		.type	PC_SetRxInterruptMode, %function
 371              	PC_SetRxInterruptMode:
 372              	.LFB6:
 330:.\Generated_Source\PSoC5/PC.c **** 
 331:.\Generated_Source\PSoC5/PC.c **** 
 332:.\Generated_Source\PSoC5/PC.c **** #if(PC_RX_ENABLED || PC_HD_ENABLED)
 333:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/PC.c ****     *
 337:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 338:.\Generated_Source\PSoC5/PC.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/PC.c ****     *
 340:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/PC.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/PC.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/PC.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/PC.c ****     *
 352:.\Generated_Source\PSoC5/PC.c ****     * Return:
 353:.\Generated_Source\PSoC5/PC.c ****     *  None.
 354:.\Generated_Source\PSoC5/PC.c ****     *
 355:.\Generated_Source\PSoC5/PC.c ****     * Theory:
 356:.\Generated_Source\PSoC5/PC.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/PC.c ****     *
 358:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/PC.c ****     void PC_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/PC.c ****     {
 373              		.loc 1 360 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 8
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378 0000 80B4     		push	{r7}
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 7, -4
 381 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 14


 382              		.cfi_def_cfa_offset 16
 383 0004 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
 385 0006 0346     		mov	r3, r0
 386 0008 FB71     		strb	r3, [r7, #7]
 361:.\Generated_Source\PSoC5/PC.c ****         PC_RXSTATUS_MASK_REG  = intSrc;
 387              		.loc 1 361 0
 388 000a 044B     		ldr	r3, .L18
 389 000c FA79     		ldrb	r2, [r7, #7]
 390 000e 1A70     		strb	r2, [r3]
 362:.\Generated_Source\PSoC5/PC.c ****     }
 391              		.loc 1 362 0
 392 0010 0C37     		adds	r7, r7, #12
 393 0012 BD46     		mov	sp, r7
 394              		@ sp needed
 395 0014 5DF8047B 		ldr	r7, [sp], #4
 396 0018 7047     		bx	lr
 397              	.L19:
 398 001a 00BF     		.align	2
 399              	.L18:
 400 001c 83640040 		.word	1073767555
 401              		.cfi_endproc
 402              	.LFE6:
 403              		.size	PC_SetRxInterruptMode, .-PC_SetRxInterruptMode
 404              		.section	.text.PC_ReadRxData,"ax",%progbits
 405              		.align	2
 406              		.global	PC_ReadRxData
 407              		.thumb
 408              		.thumb_func
 409              		.type	PC_ReadRxData, %function
 410              	PC_ReadRxData:
 411              	.LFB7:
 363:.\Generated_Source\PSoC5/PC.c **** 
 364:.\Generated_Source\PSoC5/PC.c **** 
 365:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_ReadRxData
 367:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/PC.c ****     *
 369:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 370:.\Generated_Source\PSoC5/PC.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/PC.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/PC.c ****     *
 373:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/PC.c ****     *  None.
 375:.\Generated_Source\PSoC5/PC.c ****     *
 376:.\Generated_Source\PSoC5/PC.c ****     * Return:
 377:.\Generated_Source\PSoC5/PC.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/PC.c ****     *
 379:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/PC.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/PC.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/PC.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/PC.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 15


 388:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/PC.c ****     *  No.
 390:.\Generated_Source\PSoC5/PC.c ****     *
 391:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/PC.c ****     {
 412              		.loc 1 393 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 8
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417 0000 80B4     		push	{r7}
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 7, -4
 420 0002 83B0     		sub	sp, sp, #12
 421              		.cfi_def_cfa_offset 16
 422 0004 00AF     		add	r7, sp, #0
 423              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC5/PC.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/PC.c **** 
 396:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/PC.c **** 
 398:.\Generated_Source\PSoC5/PC.c ****         uint16 locRxBufferRead;
 399:.\Generated_Source\PSoC5/PC.c ****         uint16 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/PC.c **** 
 401:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/PC.c ****         PC_DisableRxInt();
 424              		.loc 1 402 0
 425 0006 1D4B     		ldr	r3, .L27
 426 0008 1022     		movs	r2, #16
 427 000a 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC5/PC.c **** 
 404:.\Generated_Source\PSoC5/PC.c ****         locRxBufferRead  = PC_rxBufferRead;
 428              		.loc 1 404 0
 429 000c 1C4B     		ldr	r3, .L27+4
 430 000e 1B88     		ldrh	r3, [r3]	@ movhi
 431 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 405:.\Generated_Source\PSoC5/PC.c ****         locRxBufferWrite = PC_rxBufferWrite;
 432              		.loc 1 405 0
 433 0012 1C4B     		ldr	r3, .L27+8
 434 0014 1B88     		ldrh	r3, [r3]	@ movhi
 435 0016 7B80     		strh	r3, [r7, #2]	@ movhi
 406:.\Generated_Source\PSoC5/PC.c **** 
 407:.\Generated_Source\PSoC5/PC.c ****         if( (PC_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 436              		.loc 1 407 0
 437 0018 1B4B     		ldr	r3, .L27+12
 438 001a 1B78     		ldrb	r3, [r3]
 439 001c DBB2     		uxtb	r3, r3
 440 001e 002B     		cmp	r3, #0
 441 0020 03D1     		bne	.L21
 442              		.loc 1 407 0 is_stmt 0 discriminator 1
 443 0022 BA88     		ldrh	r2, [r7, #4]
 444 0024 7B88     		ldrh	r3, [r7, #2]
 445 0026 9A42     		cmp	r2, r3
 446 0028 1AD0     		beq	.L22
 447              	.L21:
 408:.\Generated_Source\PSoC5/PC.c ****         {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 16


 409:.\Generated_Source\PSoC5/PC.c ****             rxData = PC_rxBuffer[locRxBufferRead];
 448              		.loc 1 409 0 is_stmt 1
 449 002a BB88     		ldrh	r3, [r7, #4]
 450 002c 174A     		ldr	r2, .L27+16
 451 002e D35C     		ldrb	r3, [r2, r3]
 452 0030 FB71     		strb	r3, [r7, #7]
 410:.\Generated_Source\PSoC5/PC.c ****             locRxBufferRead++;
 453              		.loc 1 410 0
 454 0032 BB88     		ldrh	r3, [r7, #4]
 455 0034 0133     		adds	r3, r3, #1
 456 0036 BB80     		strh	r3, [r7, #4]	@ movhi
 411:.\Generated_Source\PSoC5/PC.c **** 
 412:.\Generated_Source\PSoC5/PC.c ****             if(locRxBufferRead >= PC_RX_BUFFER_SIZE)
 457              		.loc 1 412 0
 458 0038 BA88     		ldrh	r2, [r7, #4]
 459 003a 40F2DB53 		movw	r3, #1499
 460 003e 9A42     		cmp	r2, r3
 461 0040 01D9     		bls	.L23
 413:.\Generated_Source\PSoC5/PC.c ****             {
 414:.\Generated_Source\PSoC5/PC.c ****                 locRxBufferRead = 0u;
 462              		.loc 1 414 0
 463 0042 0023     		movs	r3, #0
 464 0044 BB80     		strh	r3, [r7, #4]	@ movhi
 465              	.L23:
 415:.\Generated_Source\PSoC5/PC.c ****             }
 416:.\Generated_Source\PSoC5/PC.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/PC.c ****             PC_rxBufferRead = locRxBufferRead;
 466              		.loc 1 417 0
 467 0046 0E4B     		ldr	r3, .L27+4
 468 0048 BA88     		ldrh	r2, [r7, #4]	@ movhi
 469 004a 1A80     		strh	r2, [r3]	@ movhi
 418:.\Generated_Source\PSoC5/PC.c **** 
 419:.\Generated_Source\PSoC5/PC.c ****             if(PC_rxBufferLoopDetect != 0u)
 470              		.loc 1 419 0
 471 004c 0E4B     		ldr	r3, .L27+12
 472 004e 1B78     		ldrb	r3, [r3]
 473 0050 DBB2     		uxtb	r3, r3
 474 0052 002B     		cmp	r3, #0
 475 0054 03D0     		beq	.L24
 420:.\Generated_Source\PSoC5/PC.c ****             {
 421:.\Generated_Source\PSoC5/PC.c ****                 PC_rxBufferLoopDetect = 0u;
 476              		.loc 1 421 0
 477 0056 0C4B     		ldr	r3, .L27+12
 478 0058 0022     		movs	r2, #0
 479 005a 1A70     		strb	r2, [r3]
 419:.\Generated_Source\PSoC5/PC.c ****             if(PC_rxBufferLoopDetect != 0u)
 480              		.loc 1 419 0
 481 005c 03E0     		b	.L25
 482              	.L24:
 419:.\Generated_Source\PSoC5/PC.c ****             if(PC_rxBufferLoopDetect != 0u)
 483              		.loc 1 419 0 is_stmt 0 discriminator 1
 484 005e 02E0     		b	.L25
 485              	.L22:
 422:.\Generated_Source\PSoC5/PC.c ****                 #if ((PC_RX_INTERRUPT_ENABLED) && (PC_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/PC.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/PC.c ****                     #if( PC_HD_ENABLED )
 425:.\Generated_Source\PSoC5/PC.c ****                         if((PC_CONTROL_REG & PC_CTRL_HD_SEND) == 0u)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 17


 426:.\Generated_Source\PSoC5/PC.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/PC.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/PC.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/PC.c ****                             */
 430:.\Generated_Source\PSoC5/PC.c ****                             PC_RXSTATUS_MASK_REG  |= PC_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/PC.c ****                         }
 432:.\Generated_Source\PSoC5/PC.c ****                     #else
 433:.\Generated_Source\PSoC5/PC.c ****                         PC_RXSTATUS_MASK_REG  |= PC_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/PC.c ****                     #endif /* end PC_HD_ENABLED */
 435:.\Generated_Source\PSoC5/PC.c ****                 #endif /* ((PC_RX_INTERRUPT_ENABLED) && (PC_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/PC.c ****             }
 437:.\Generated_Source\PSoC5/PC.c ****         }
 438:.\Generated_Source\PSoC5/PC.c ****         else
 439:.\Generated_Source\PSoC5/PC.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/PC.c ****             rxData = PC_RXDATA_REG;
 486              		.loc 1 440 0 is_stmt 1
 487 0060 0B4B     		ldr	r3, .L27+20
 488 0062 1B78     		ldrb	r3, [r3]
 489 0064 FB71     		strb	r3, [r7, #7]
 490              	.L25:
 441:.\Generated_Source\PSoC5/PC.c ****         }
 442:.\Generated_Source\PSoC5/PC.c **** 
 443:.\Generated_Source\PSoC5/PC.c ****         PC_EnableRxInt();
 491              		.loc 1 443 0
 492 0066 0B4B     		ldr	r3, .L27+24
 493 0068 1022     		movs	r2, #16
 494 006a 1A60     		str	r2, [r3]
 444:.\Generated_Source\PSoC5/PC.c **** 
 445:.\Generated_Source\PSoC5/PC.c ****     #else
 446:.\Generated_Source\PSoC5/PC.c **** 
 447:.\Generated_Source\PSoC5/PC.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/PC.c ****         rxData = PC_RXDATA_REG;
 449:.\Generated_Source\PSoC5/PC.c **** 
 450:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/PC.c **** 
 452:.\Generated_Source\PSoC5/PC.c ****         return(rxData);
 495              		.loc 1 452 0
 496 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:.\Generated_Source\PSoC5/PC.c ****     }
 497              		.loc 1 453 0
 498 006e 1846     		mov	r0, r3
 499 0070 0C37     		adds	r7, r7, #12
 500 0072 BD46     		mov	sp, r7
 501              		@ sp needed
 502 0074 5DF8047B 		ldr	r7, [sp], #4
 503 0078 7047     		bx	lr
 504              	.L28:
 505 007a 00BF     		.align	2
 506              	.L27:
 507 007c 80E100E0 		.word	-536813184
 508 0080 00000000 		.word	PC_rxBufferRead
 509 0084 00000000 		.word	PC_rxBufferWrite
 510 0088 00000000 		.word	PC_rxBufferLoopDetect
 511 008c 00000000 		.word	PC_rxBuffer
 512 0090 40640040 		.word	1073767488
 513 0094 00E100E0 		.word	-536813312
 514              		.cfi_endproc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 18


 515              	.LFE7:
 516              		.size	PC_ReadRxData, .-PC_ReadRxData
 517              		.section	.text.PC_ReadRxStatus,"ax",%progbits
 518              		.align	2
 519              		.global	PC_ReadRxStatus
 520              		.thumb
 521              		.thumb_func
 522              		.type	PC_ReadRxStatus, %function
 523              	PC_ReadRxStatus:
 524              	.LFB8:
 454:.\Generated_Source\PSoC5/PC.c **** 
 455:.\Generated_Source\PSoC5/PC.c **** 
 456:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_ReadRxStatus
 458:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/PC.c ****     *
 460:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 461:.\Generated_Source\PSoC5/PC.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/PC.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/PC.c ****     *
 464:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/PC.c ****     *  None.
 466:.\Generated_Source\PSoC5/PC.c ****     *
 467:.\Generated_Source\PSoC5/PC.c ****     * Return:
 468:.\Generated_Source\PSoC5/PC.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/PC.c ****     *
 470:.\Generated_Source\PSoC5/PC.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/PC.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/PC.c ****     *  PC_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/PC.c ****     *  PC_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/PC.c ****     *  register read.
 475:.\Generated_Source\PSoC5/PC.c ****     *
 476:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/PC.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/PC.c ****     *   PC_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/PC.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/PC.c ****     *   PC_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/PC.c ****     *   bits.
 483:.\Generated_Source\PSoC5/PC.c ****     *
 484:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/PC.c ****     {
 525              		.loc 1 486 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 8
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530 0000 80B4     		push	{r7}
 531              		.cfi_def_cfa_offset 4
 532              		.cfi_offset 7, -4
 533 0002 83B0     		sub	sp, sp, #12
 534              		.cfi_def_cfa_offset 16
 535 0004 00AF     		add	r7, sp, #0
 536              		.cfi_def_cfa_register 7
 487:.\Generated_Source\PSoC5/PC.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/PC.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 19


 489:.\Generated_Source\PSoC5/PC.c ****         status = PC_RXSTATUS_REG & PC_RX_HW_MASK;
 537              		.loc 1 489 0
 538 0006 0C4B     		ldr	r3, .L32
 539 0008 1B78     		ldrb	r3, [r3]
 540 000a DBB2     		uxtb	r3, r3
 541 000c 03F07F03 		and	r3, r3, #127
 542 0010 FB71     		strb	r3, [r7, #7]
 490:.\Generated_Source\PSoC5/PC.c **** 
 491:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/PC.c ****         if(PC_rxBufferOverflow != 0u)
 543              		.loc 1 492 0
 544 0012 0A4B     		ldr	r3, .L32+4
 545 0014 1B78     		ldrb	r3, [r3]
 546 0016 DBB2     		uxtb	r3, r3
 547 0018 002B     		cmp	r3, #0
 548 001a 06D0     		beq	.L30
 493:.\Generated_Source\PSoC5/PC.c ****         {
 494:.\Generated_Source\PSoC5/PC.c ****             status |= PC_RX_STS_SOFT_BUFF_OVER;
 549              		.loc 1 494 0
 550 001c FB79     		ldrb	r3, [r7, #7]
 551 001e 63F07F03 		orn	r3, r3, #127
 552 0022 FB71     		strb	r3, [r7, #7]
 495:.\Generated_Source\PSoC5/PC.c ****             PC_rxBufferOverflow = 0u;
 553              		.loc 1 495 0
 554 0024 054B     		ldr	r3, .L32+4
 555 0026 0022     		movs	r2, #0
 556 0028 1A70     		strb	r2, [r3]
 557              	.L30:
 496:.\Generated_Source\PSoC5/PC.c ****         }
 497:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/PC.c **** 
 499:.\Generated_Source\PSoC5/PC.c ****         return(status);
 558              		.loc 1 499 0
 559 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:.\Generated_Source\PSoC5/PC.c ****     }
 560              		.loc 1 500 0
 561 002c 1846     		mov	r0, r3
 562 002e 0C37     		adds	r7, r7, #12
 563 0030 BD46     		mov	sp, r7
 564              		@ sp needed
 565 0032 5DF8047B 		ldr	r7, [sp], #4
 566 0036 7047     		bx	lr
 567              	.L33:
 568              		.align	2
 569              	.L32:
 570 0038 63640040 		.word	1073767523
 571 003c 00000000 		.word	PC_rxBufferOverflow
 572              		.cfi_endproc
 573              	.LFE8:
 574              		.size	PC_ReadRxStatus, .-PC_ReadRxStatus
 575              		.section	.text.PC_GetChar,"ax",%progbits
 576              		.align	2
 577              		.global	PC_GetChar
 578              		.thumb
 579              		.thumb_func
 580              		.type	PC_GetChar, %function
 581              	PC_GetChar:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 20


 582              	.LFB9:
 501:.\Generated_Source\PSoC5/PC.c **** 
 502:.\Generated_Source\PSoC5/PC.c **** 
 503:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_GetChar
 505:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/PC.c ****     *
 507:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 508:.\Generated_Source\PSoC5/PC.c ****     *  Returns the last received byte of data. PC_GetChar() is
 509:.\Generated_Source\PSoC5/PC.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/PC.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/PC.c ****     *
 512:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/PC.c ****     *  None.
 514:.\Generated_Source\PSoC5/PC.c ****     *
 515:.\Generated_Source\PSoC5/PC.c ****     * Return:
 516:.\Generated_Source\PSoC5/PC.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/PC.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/PC.c ****     *
 519:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/PC.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/PC.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/PC.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/PC.c ****     *
 528:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/PC.c ****     *  No.
 530:.\Generated_Source\PSoC5/PC.c ****     *
 531:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_GetChar(void) 
 533:.\Generated_Source\PSoC5/PC.c ****     {
 583              		.loc 1 533 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 8
 586              		@ frame_needed = 1, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 588 0000 80B4     		push	{r7}
 589              		.cfi_def_cfa_offset 4
 590              		.cfi_offset 7, -4
 591 0002 83B0     		sub	sp, sp, #12
 592              		.cfi_def_cfa_offset 16
 593 0004 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 534:.\Generated_Source\PSoC5/PC.c ****         uint8 rxData = 0u;
 595              		.loc 1 534 0
 596 0006 0023     		movs	r3, #0
 597 0008 FB71     		strb	r3, [r7, #7]
 535:.\Generated_Source\PSoC5/PC.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/PC.c **** 
 537:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/PC.c ****         uint16 locRxBufferRead;
 539:.\Generated_Source\PSoC5/PC.c ****         uint16 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/PC.c **** 
 541:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 21


 542:.\Generated_Source\PSoC5/PC.c ****         PC_DisableRxInt();
 598              		.loc 1 542 0
 599 000a 244B     		ldr	r3, .L41
 600 000c 1022     		movs	r2, #16
 601 000e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC5/PC.c **** 
 544:.\Generated_Source\PSoC5/PC.c ****         locRxBufferRead  = PC_rxBufferRead;
 602              		.loc 1 544 0
 603 0010 234B     		ldr	r3, .L41+4
 604 0012 1B88     		ldrh	r3, [r3]	@ movhi
 605 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 545:.\Generated_Source\PSoC5/PC.c ****         locRxBufferWrite = PC_rxBufferWrite;
 606              		.loc 1 545 0
 607 0016 234B     		ldr	r3, .L41+8
 608 0018 1B88     		ldrh	r3, [r3]	@ movhi
 609 001a 7B80     		strh	r3, [r7, #2]	@ movhi
 546:.\Generated_Source\PSoC5/PC.c **** 
 547:.\Generated_Source\PSoC5/PC.c ****         if( (PC_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 610              		.loc 1 547 0
 611 001c 224B     		ldr	r3, .L41+12
 612 001e 1B78     		ldrb	r3, [r3]
 613 0020 DBB2     		uxtb	r3, r3
 614 0022 002B     		cmp	r3, #0
 615 0024 03D1     		bne	.L35
 616              		.loc 1 547 0 is_stmt 0 discriminator 1
 617 0026 BA88     		ldrh	r2, [r7, #4]
 618 0028 7B88     		ldrh	r3, [r7, #2]
 619 002a 9A42     		cmp	r2, r3
 620 002c 1AD0     		beq	.L36
 621              	.L35:
 548:.\Generated_Source\PSoC5/PC.c ****         {
 549:.\Generated_Source\PSoC5/PC.c ****             rxData = PC_rxBuffer[locRxBufferRead];
 622              		.loc 1 549 0 is_stmt 1
 623 002e BB88     		ldrh	r3, [r7, #4]
 624 0030 1E4A     		ldr	r2, .L41+16
 625 0032 D35C     		ldrb	r3, [r2, r3]
 626 0034 FB71     		strb	r3, [r7, #7]
 550:.\Generated_Source\PSoC5/PC.c ****             locRxBufferRead++;
 627              		.loc 1 550 0
 628 0036 BB88     		ldrh	r3, [r7, #4]
 629 0038 0133     		adds	r3, r3, #1
 630 003a BB80     		strh	r3, [r7, #4]	@ movhi
 551:.\Generated_Source\PSoC5/PC.c ****             if(locRxBufferRead >= PC_RX_BUFFER_SIZE)
 631              		.loc 1 551 0
 632 003c BA88     		ldrh	r2, [r7, #4]
 633 003e 40F2DB53 		movw	r3, #1499
 634 0042 9A42     		cmp	r2, r3
 635 0044 01D9     		bls	.L37
 552:.\Generated_Source\PSoC5/PC.c ****             {
 553:.\Generated_Source\PSoC5/PC.c ****                 locRxBufferRead = 0u;
 636              		.loc 1 553 0
 637 0046 0023     		movs	r3, #0
 638 0048 BB80     		strh	r3, [r7, #4]	@ movhi
 639              	.L37:
 554:.\Generated_Source\PSoC5/PC.c ****             }
 555:.\Generated_Source\PSoC5/PC.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/PC.c ****             PC_rxBufferRead = locRxBufferRead;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 22


 640              		.loc 1 556 0
 641 004a 154B     		ldr	r3, .L41+4
 642 004c BA88     		ldrh	r2, [r7, #4]	@ movhi
 643 004e 1A80     		strh	r2, [r3]	@ movhi
 557:.\Generated_Source\PSoC5/PC.c **** 
 558:.\Generated_Source\PSoC5/PC.c ****             if(PC_rxBufferLoopDetect != 0u)
 644              		.loc 1 558 0
 645 0050 154B     		ldr	r3, .L41+12
 646 0052 1B78     		ldrb	r3, [r3]
 647 0054 DBB2     		uxtb	r3, r3
 648 0056 002B     		cmp	r3, #0
 649 0058 03D0     		beq	.L38
 559:.\Generated_Source\PSoC5/PC.c ****             {
 560:.\Generated_Source\PSoC5/PC.c ****                 PC_rxBufferLoopDetect = 0u;
 650              		.loc 1 560 0
 651 005a 134B     		ldr	r3, .L41+12
 652 005c 0022     		movs	r2, #0
 653 005e 1A70     		strb	r2, [r3]
 558:.\Generated_Source\PSoC5/PC.c ****             if(PC_rxBufferLoopDetect != 0u)
 654              		.loc 1 558 0
 655 0060 12E0     		b	.L39
 656              	.L38:
 558:.\Generated_Source\PSoC5/PC.c ****             if(PC_rxBufferLoopDetect != 0u)
 657              		.loc 1 558 0 is_stmt 0 discriminator 1
 658 0062 11E0     		b	.L39
 659              	.L36:
 561:.\Generated_Source\PSoC5/PC.c ****                 #if( (PC_RX_INTERRUPT_ENABLED) && (PC_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/PC.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/PC.c ****                     #if( PC_HD_ENABLED )
 564:.\Generated_Source\PSoC5/PC.c ****                         if((PC_CONTROL_REG & PC_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/PC.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/PC.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/PC.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/PC.c ****                             */
 569:.\Generated_Source\PSoC5/PC.c ****                             PC_RXSTATUS_MASK_REG |= PC_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/PC.c ****                         }
 571:.\Generated_Source\PSoC5/PC.c ****                     #else
 572:.\Generated_Source\PSoC5/PC.c ****                         PC_RXSTATUS_MASK_REG |= PC_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/PC.c ****                     #endif /* end PC_HD_ENABLED */
 574:.\Generated_Source\PSoC5/PC.c ****                 #endif /* PC_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/PC.c ****             }
 576:.\Generated_Source\PSoC5/PC.c **** 
 577:.\Generated_Source\PSoC5/PC.c ****         }
 578:.\Generated_Source\PSoC5/PC.c ****         else
 579:.\Generated_Source\PSoC5/PC.c ****         {   rxStatus = PC_RXSTATUS_REG;
 660              		.loc 1 579 0 is_stmt 1
 661 0064 124B     		ldr	r3, .L41+20
 662 0066 1B78     		ldrb	r3, [r3]
 663 0068 7B70     		strb	r3, [r7, #1]
 580:.\Generated_Source\PSoC5/PC.c ****             if((rxStatus & PC_RX_STS_FIFO_NOTEMPTY) != 0u)
 664              		.loc 1 580 0
 665 006a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 666 006c 03F02003 		and	r3, r3, #32
 667 0070 002B     		cmp	r3, #0
 668 0072 09D0     		beq	.L39
 581:.\Generated_Source\PSoC5/PC.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/PC.c ****                 rxData = PC_RXDATA_REG;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 23


 669              		.loc 1 582 0
 670 0074 0F4B     		ldr	r3, .L41+24
 671 0076 1B78     		ldrb	r3, [r3]
 672 0078 FB71     		strb	r3, [r7, #7]
 583:.\Generated_Source\PSoC5/PC.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/PC.c ****                 if((rxStatus & (PC_RX_STS_BREAK | PC_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/PC.c ****                                 PC_RX_STS_STOP_ERROR | PC_RX_STS_OVERRUN)) != 0u)
 673              		.loc 1 585 0
 674 007a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 675 007c 03F01E03 		and	r3, r3, #30
 584:.\Generated_Source\PSoC5/PC.c ****                 if((rxStatus & (PC_RX_STS_BREAK | PC_RX_STS_PAR_ERROR |
 676              		.loc 1 584 0
 677 0080 002B     		cmp	r3, #0
 678 0082 01D0     		beq	.L39
 586:.\Generated_Source\PSoC5/PC.c ****                 {
 587:.\Generated_Source\PSoC5/PC.c ****                     rxData = 0u;
 679              		.loc 1 587 0
 680 0084 0023     		movs	r3, #0
 681 0086 FB71     		strb	r3, [r7, #7]
 682              	.L39:
 588:.\Generated_Source\PSoC5/PC.c ****                 }
 589:.\Generated_Source\PSoC5/PC.c ****             }
 590:.\Generated_Source\PSoC5/PC.c ****         }
 591:.\Generated_Source\PSoC5/PC.c **** 
 592:.\Generated_Source\PSoC5/PC.c ****         PC_EnableRxInt();
 683              		.loc 1 592 0
 684 0088 0B4B     		ldr	r3, .L41+28
 685 008a 1022     		movs	r2, #16
 686 008c 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC5/PC.c **** 
 594:.\Generated_Source\PSoC5/PC.c ****     #else
 595:.\Generated_Source\PSoC5/PC.c **** 
 596:.\Generated_Source\PSoC5/PC.c ****         rxStatus =PC_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/PC.c ****         if((rxStatus & PC_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/PC.c ****         {
 599:.\Generated_Source\PSoC5/PC.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/PC.c ****             rxData = PC_RXDATA_REG;
 601:.\Generated_Source\PSoC5/PC.c **** 
 602:.\Generated_Source\PSoC5/PC.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/PC.c ****             if((rxStatus & (PC_RX_STS_BREAK | PC_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/PC.c ****                             PC_RX_STS_STOP_ERROR | PC_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/PC.c ****             {
 606:.\Generated_Source\PSoC5/PC.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/PC.c ****             }
 608:.\Generated_Source\PSoC5/PC.c ****         }
 609:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/PC.c **** 
 611:.\Generated_Source\PSoC5/PC.c ****         return(rxData);
 687              		.loc 1 611 0
 688 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:.\Generated_Source\PSoC5/PC.c ****     }
 689              		.loc 1 612 0
 690 0090 1846     		mov	r0, r3
 691 0092 0C37     		adds	r7, r7, #12
 692 0094 BD46     		mov	sp, r7
 693              		@ sp needed
 694 0096 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 24


 695 009a 7047     		bx	lr
 696              	.L42:
 697              		.align	2
 698              	.L41:
 699 009c 80E100E0 		.word	-536813184
 700 00a0 00000000 		.word	PC_rxBufferRead
 701 00a4 00000000 		.word	PC_rxBufferWrite
 702 00a8 00000000 		.word	PC_rxBufferLoopDetect
 703 00ac 00000000 		.word	PC_rxBuffer
 704 00b0 63640040 		.word	1073767523
 705 00b4 40640040 		.word	1073767488
 706 00b8 00E100E0 		.word	-536813312
 707              		.cfi_endproc
 708              	.LFE9:
 709              		.size	PC_GetChar, .-PC_GetChar
 710              		.section	.text.PC_GetByte,"ax",%progbits
 711              		.align	2
 712              		.global	PC_GetByte
 713              		.thumb
 714              		.thumb_func
 715              		.type	PC_GetByte, %function
 716              	PC_GetByte:
 717              	.LFB10:
 613:.\Generated_Source\PSoC5/PC.c **** 
 614:.\Generated_Source\PSoC5/PC.c **** 
 615:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_GetByte
 617:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/PC.c ****     *
 619:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 620:.\Generated_Source\PSoC5/PC.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/PC.c ****     *  condition.
 622:.\Generated_Source\PSoC5/PC.c ****     *
 623:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/PC.c ****     *  None.
 625:.\Generated_Source\PSoC5/PC.c ****     *
 626:.\Generated_Source\PSoC5/PC.c ****     * Return:
 627:.\Generated_Source\PSoC5/PC.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/PC.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/PC.c ****     *
 630:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/PC.c ****     *  No.
 632:.\Generated_Source\PSoC5/PC.c ****     *
 633:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/PC.c ****     uint16 PC_GetByte(void) 
 635:.\Generated_Source\PSoC5/PC.c ****     {
 718              		.loc 1 635 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 8
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722 0000 90B5     		push	{r4, r7, lr}
 723              		.cfi_def_cfa_offset 12
 724              		.cfi_offset 4, -12
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 83B0     		sub	sp, sp, #12
 728              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 25


 729 0004 00AF     		add	r7, sp, #0
 730              		.cfi_def_cfa_register 7
 636:.\Generated_Source\PSoC5/PC.c ****         
 637:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/PC.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/PC.c ****         PC_DisableRxInt();
 731              		.loc 1 640 0
 732 0006 0C4B     		ldr	r3, .L45
 733 0008 1022     		movs	r2, #16
 734 000a 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC5/PC.c ****         locErrorStatus = (uint16)PC_errorStatus;
 735              		.loc 1 641 0
 736 000c 0B4B     		ldr	r3, .L45+4
 737 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 738 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:.\Generated_Source\PSoC5/PC.c ****         PC_errorStatus = 0u;
 739              		.loc 1 642 0
 740 0012 0A4B     		ldr	r3, .L45+4
 741 0014 0022     		movs	r2, #0
 742 0016 1A70     		strb	r2, [r3]
 643:.\Generated_Source\PSoC5/PC.c ****         PC_EnableRxInt();
 743              		.loc 1 643 0
 744 0018 094B     		ldr	r3, .L45+8
 745 001a 1022     		movs	r2, #16
 746 001c 1A60     		str	r2, [r3]
 644:.\Generated_Source\PSoC5/PC.c ****         return ( (uint16)(locErrorStatus << 8u) | PC_ReadRxData() );
 747              		.loc 1 644 0
 748 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 749 0020 1B02     		lsls	r3, r3, #8
 750 0022 9CB2     		uxth	r4, r3
 751 0024 FFF7FEFF 		bl	PC_ReadRxData
 752 0028 0346     		mov	r3, r0
 753 002a 2343     		orrs	r3, r3, r4
 754 002c 9BB2     		uxth	r3, r3
 645:.\Generated_Source\PSoC5/PC.c ****     #else
 646:.\Generated_Source\PSoC5/PC.c ****         return ( ((uint16)PC_ReadRxStatus() << 8u) | PC_ReadRxData() );
 647:.\Generated_Source\PSoC5/PC.c ****     #endif /* PC_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/PC.c ****         
 649:.\Generated_Source\PSoC5/PC.c ****     }
 755              		.loc 1 649 0
 756 002e 1846     		mov	r0, r3
 757 0030 0C37     		adds	r7, r7, #12
 758 0032 BD46     		mov	sp, r7
 759              		@ sp needed
 760 0034 90BD     		pop	{r4, r7, pc}
 761              	.L46:
 762 0036 00BF     		.align	2
 763              	.L45:
 764 0038 80E100E0 		.word	-536813184
 765 003c 00000000 		.word	PC_errorStatus
 766 0040 00E100E0 		.word	-536813312
 767              		.cfi_endproc
 768              	.LFE10:
 769              		.size	PC_GetByte, .-PC_GetByte
 770              		.section	.text.PC_GetRxBufferSize,"ax",%progbits
 771              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 26


 772              		.global	PC_GetRxBufferSize
 773              		.thumb
 774              		.thumb_func
 775              		.type	PC_GetRxBufferSize, %function
 776              	PC_GetRxBufferSize:
 777              	.LFB11:
 650:.\Generated_Source\PSoC5/PC.c **** 
 651:.\Generated_Source\PSoC5/PC.c **** 
 652:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_GetRxBufferSize
 654:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/PC.c ****     *
 656:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 657:.\Generated_Source\PSoC5/PC.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/PC.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/PC.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/PC.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/PC.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/PC.c ****     *    account.
 663:.\Generated_Source\PSoC5/PC.c ****     *
 664:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/PC.c ****     *  None.
 666:.\Generated_Source\PSoC5/PC.c ****     *
 667:.\Generated_Source\PSoC5/PC.c ****     * Return:
 668:.\Generated_Source\PSoC5/PC.c ****     *  uint16: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/PC.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/PC.c ****     *
 671:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/PC.c ****     *
 676:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/PC.c ****     *  No.
 678:.\Generated_Source\PSoC5/PC.c ****     *
 679:.\Generated_Source\PSoC5/PC.c ****     * Theory:
 680:.\Generated_Source\PSoC5/PC.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/PC.c ****     *
 682:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/PC.c ****     uint16 PC_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/PC.c ****                                                             
 685:.\Generated_Source\PSoC5/PC.c ****     {
 778              		.loc 1 685 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 8
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 783 0000 80B4     		push	{r7}
 784              		.cfi_def_cfa_offset 4
 785              		.cfi_offset 7, -4
 786 0002 83B0     		sub	sp, sp, #12
 787              		.cfi_def_cfa_offset 16
 788 0004 00AF     		add	r7, sp, #0
 789              		.cfi_def_cfa_register 7
 686:.\Generated_Source\PSoC5/PC.c ****         uint16 size;
 687:.\Generated_Source\PSoC5/PC.c **** 
 688:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 27


 689:.\Generated_Source\PSoC5/PC.c **** 
 690:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/PC.c ****         PC_DisableRxInt();
 790              		.loc 1 691 0
 791 0006 1E4B     		ldr	r3, .L54
 792 0008 1022     		movs	r2, #16
 793 000a 1A60     		str	r2, [r3]
 692:.\Generated_Source\PSoC5/PC.c **** 
 693:.\Generated_Source\PSoC5/PC.c ****         if(PC_rxBufferRead == PC_rxBufferWrite)
 794              		.loc 1 693 0
 795 000c 1D4B     		ldr	r3, .L54+4
 796 000e 1B88     		ldrh	r3, [r3]	@ movhi
 797 0010 9AB2     		uxth	r2, r3
 798 0012 1D4B     		ldr	r3, .L54+8
 799 0014 1B88     		ldrh	r3, [r3]	@ movhi
 800 0016 9BB2     		uxth	r3, r3
 801 0018 9A42     		cmp	r2, r3
 802 001a 0BD1     		bne	.L48
 694:.\Generated_Source\PSoC5/PC.c ****         {
 695:.\Generated_Source\PSoC5/PC.c ****             if(PC_rxBufferLoopDetect != 0u)
 803              		.loc 1 695 0
 804 001c 1B4B     		ldr	r3, .L54+12
 805 001e 1B78     		ldrb	r3, [r3]
 806 0020 DBB2     		uxtb	r3, r3
 807 0022 002B     		cmp	r3, #0
 808 0024 03D0     		beq	.L49
 696:.\Generated_Source\PSoC5/PC.c ****             {
 697:.\Generated_Source\PSoC5/PC.c ****                 size = PC_RX_BUFFER_SIZE;
 809              		.loc 1 697 0
 810 0026 40F2DC53 		movw	r3, #1500
 811 002a FB80     		strh	r3, [r7, #6]	@ movhi
 812 002c 1EE0     		b	.L51
 813              	.L49:
 698:.\Generated_Source\PSoC5/PC.c ****             }
 699:.\Generated_Source\PSoC5/PC.c ****             else
 700:.\Generated_Source\PSoC5/PC.c ****             {
 701:.\Generated_Source\PSoC5/PC.c ****                 size = 0u;
 814              		.loc 1 701 0
 815 002e 0023     		movs	r3, #0
 816 0030 FB80     		strh	r3, [r7, #6]	@ movhi
 817 0032 1BE0     		b	.L51
 818              	.L48:
 702:.\Generated_Source\PSoC5/PC.c ****             }
 703:.\Generated_Source\PSoC5/PC.c ****         }
 704:.\Generated_Source\PSoC5/PC.c ****         else if(PC_rxBufferRead < PC_rxBufferWrite)
 819              		.loc 1 704 0
 820 0034 134B     		ldr	r3, .L54+4
 821 0036 1B88     		ldrh	r3, [r3]	@ movhi
 822 0038 9AB2     		uxth	r2, r3
 823 003a 134B     		ldr	r3, .L54+8
 824 003c 1B88     		ldrh	r3, [r3]	@ movhi
 825 003e 9BB2     		uxth	r3, r3
 826 0040 9A42     		cmp	r2, r3
 827 0042 08D2     		bcs	.L52
 705:.\Generated_Source\PSoC5/PC.c ****         {
 706:.\Generated_Source\PSoC5/PC.c ****             size = (PC_rxBufferWrite - PC_rxBufferRead);
 828              		.loc 1 706 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 28


 829 0044 104B     		ldr	r3, .L54+8
 830 0046 1B88     		ldrh	r3, [r3]	@ movhi
 831 0048 9AB2     		uxth	r2, r3
 832 004a 0E4B     		ldr	r3, .L54+4
 833 004c 1B88     		ldrh	r3, [r3]	@ movhi
 834 004e 9BB2     		uxth	r3, r3
 835 0050 D31A     		subs	r3, r2, r3
 836 0052 FB80     		strh	r3, [r7, #6]	@ movhi
 837 0054 0AE0     		b	.L51
 838              	.L52:
 707:.\Generated_Source\PSoC5/PC.c ****         }
 708:.\Generated_Source\PSoC5/PC.c ****         else
 709:.\Generated_Source\PSoC5/PC.c ****         {
 710:.\Generated_Source\PSoC5/PC.c ****             size = (PC_RX_BUFFER_SIZE - PC_rxBufferRead) + PC_rxBufferWrite;
 839              		.loc 1 710 0
 840 0056 0C4B     		ldr	r3, .L54+8
 841 0058 1B88     		ldrh	r3, [r3]	@ movhi
 842 005a 9AB2     		uxth	r2, r3
 843 005c 094B     		ldr	r3, .L54+4
 844 005e 1B88     		ldrh	r3, [r3]	@ movhi
 845 0060 9BB2     		uxth	r3, r3
 846 0062 D31A     		subs	r3, r2, r3
 847 0064 9BB2     		uxth	r3, r3
 848 0066 03F2DC53 		addw	r3, r3, #1500
 849 006a FB80     		strh	r3, [r7, #6]	@ movhi
 850              	.L51:
 711:.\Generated_Source\PSoC5/PC.c ****         }
 712:.\Generated_Source\PSoC5/PC.c **** 
 713:.\Generated_Source\PSoC5/PC.c ****         PC_EnableRxInt();
 851              		.loc 1 713 0
 852 006c 084B     		ldr	r3, .L54+16
 853 006e 1022     		movs	r2, #16
 854 0070 1A60     		str	r2, [r3]
 714:.\Generated_Source\PSoC5/PC.c **** 
 715:.\Generated_Source\PSoC5/PC.c ****     #else
 716:.\Generated_Source\PSoC5/PC.c **** 
 717:.\Generated_Source\PSoC5/PC.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/PC.c ****         size = ((PC_RXSTATUS_REG & PC_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC5/PC.c **** 
 720:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/PC.c **** 
 722:.\Generated_Source\PSoC5/PC.c ****         return(size);
 855              		.loc 1 722 0
 856 0072 FB88     		ldrh	r3, [r7, #6]
 723:.\Generated_Source\PSoC5/PC.c ****     }
 857              		.loc 1 723 0
 858 0074 1846     		mov	r0, r3
 859 0076 0C37     		adds	r7, r7, #12
 860 0078 BD46     		mov	sp, r7
 861              		@ sp needed
 862 007a 5DF8047B 		ldr	r7, [sp], #4
 863 007e 7047     		bx	lr
 864              	.L55:
 865              		.align	2
 866              	.L54:
 867 0080 80E100E0 		.word	-536813184
 868 0084 00000000 		.word	PC_rxBufferRead
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 29


 869 0088 00000000 		.word	PC_rxBufferWrite
 870 008c 00000000 		.word	PC_rxBufferLoopDetect
 871 0090 00E100E0 		.word	-536813312
 872              		.cfi_endproc
 873              	.LFE11:
 874              		.size	PC_GetRxBufferSize, .-PC_GetRxBufferSize
 875              		.section	.text.PC_ClearRxBuffer,"ax",%progbits
 876              		.align	2
 877              		.global	PC_ClearRxBuffer
 878              		.thumb
 879              		.thumb_func
 880              		.type	PC_ClearRxBuffer, %function
 881              	PC_ClearRxBuffer:
 882              	.LFB12:
 724:.\Generated_Source\PSoC5/PC.c **** 
 725:.\Generated_Source\PSoC5/PC.c **** 
 726:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_ClearRxBuffer
 728:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/PC.c ****     *
 730:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 731:.\Generated_Source\PSoC5/PC.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/PC.c ****     *
 733:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/PC.c ****     *  None.
 735:.\Generated_Source\PSoC5/PC.c ****     *
 736:.\Generated_Source\PSoC5/PC.c ****     * Return:
 737:.\Generated_Source\PSoC5/PC.c ****     *  None.
 738:.\Generated_Source\PSoC5/PC.c ****     *
 739:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/PC.c ****     *
 745:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/PC.c ****     *  No.
 747:.\Generated_Source\PSoC5/PC.c ****     *
 748:.\Generated_Source\PSoC5/PC.c ****     * Theory:
 749:.\Generated_Source\PSoC5/PC.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/PC.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/PC.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/PC.c ****     *
 753:.\Generated_Source\PSoC5/PC.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/PC.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/PC.c ****     *
 756:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/PC.c ****     void PC_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/PC.c ****     {
 883              		.loc 1 758 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 8
 886              		@ frame_needed = 1, uses_anonymous_args = 0
 887 0000 80B5     		push	{r7, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 30


 891 0002 82B0     		sub	sp, sp, #8
 892              		.cfi_def_cfa_offset 16
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC5/PC.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/PC.c **** 
 761:.\Generated_Source\PSoC5/PC.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/PC.c ****         enableInterrupts = CyEnterCriticalSection();
 895              		.loc 1 762 0
 896 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 897 000a 0346     		mov	r3, r0
 898 000c FB71     		strb	r3, [r7, #7]
 763:.\Generated_Source\PSoC5/PC.c ****         PC_RXDATA_AUX_CTL_REG |= (uint8)  PC_RX_FIFO_CLR;
 899              		.loc 1 763 0
 900 000e 144B     		ldr	r3, .L57
 901 0010 134A     		ldr	r2, .L57
 902 0012 1278     		ldrb	r2, [r2]
 903 0014 D2B2     		uxtb	r2, r2
 904 0016 42F00102 		orr	r2, r2, #1
 905 001a D2B2     		uxtb	r2, r2
 906 001c 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC5/PC.c ****         PC_RXDATA_AUX_CTL_REG &= (uint8) ~PC_RX_FIFO_CLR;
 907              		.loc 1 764 0
 908 001e 104B     		ldr	r3, .L57
 909 0020 0F4A     		ldr	r2, .L57
 910 0022 1278     		ldrb	r2, [r2]
 911 0024 D2B2     		uxtb	r2, r2
 912 0026 22F00102 		bic	r2, r2, #1
 913 002a D2B2     		uxtb	r2, r2
 914 002c 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC5/PC.c ****         CyExitCriticalSection(enableInterrupts);
 915              		.loc 1 765 0
 916 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 917 0030 1846     		mov	r0, r3
 918 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC5/PC.c **** 
 767:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/PC.c **** 
 769:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/PC.c ****         PC_DisableRxInt();
 919              		.loc 1 770 0
 920 0036 0B4B     		ldr	r3, .L57+4
 921 0038 1022     		movs	r2, #16
 922 003a 1A60     		str	r2, [r3]
 771:.\Generated_Source\PSoC5/PC.c **** 
 772:.\Generated_Source\PSoC5/PC.c ****         PC_rxBufferRead = 0u;
 923              		.loc 1 772 0
 924 003c 0A4B     		ldr	r3, .L57+8
 925 003e 0022     		movs	r2, #0
 926 0040 1A80     		strh	r2, [r3]	@ movhi
 773:.\Generated_Source\PSoC5/PC.c ****         PC_rxBufferWrite = 0u;
 927              		.loc 1 773 0
 928 0042 0A4B     		ldr	r3, .L57+12
 929 0044 0022     		movs	r2, #0
 930 0046 1A80     		strh	r2, [r3]	@ movhi
 774:.\Generated_Source\PSoC5/PC.c ****         PC_rxBufferLoopDetect = 0u;
 931              		.loc 1 774 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 31


 932 0048 094B     		ldr	r3, .L57+16
 933 004a 0022     		movs	r2, #0
 934 004c 1A70     		strb	r2, [r3]
 775:.\Generated_Source\PSoC5/PC.c ****         PC_rxBufferOverflow = 0u;
 935              		.loc 1 775 0
 936 004e 094B     		ldr	r3, .L57+20
 937 0050 0022     		movs	r2, #0
 938 0052 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC5/PC.c **** 
 777:.\Generated_Source\PSoC5/PC.c ****         PC_EnableRxInt();
 939              		.loc 1 777 0
 940 0054 084B     		ldr	r3, .L57+24
 941 0056 1022     		movs	r2, #16
 942 0058 1A60     		str	r2, [r3]
 778:.\Generated_Source\PSoC5/PC.c **** 
 779:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/PC.c **** 
 781:.\Generated_Source\PSoC5/PC.c ****     }
 943              		.loc 1 781 0
 944 005a 0837     		adds	r7, r7, #8
 945 005c BD46     		mov	sp, r7
 946              		@ sp needed
 947 005e 80BD     		pop	{r7, pc}
 948              	.L58:
 949              		.align	2
 950              	.L57:
 951 0060 90640040 		.word	1073767568
 952 0064 80E100E0 		.word	-536813184
 953 0068 00000000 		.word	PC_rxBufferRead
 954 006c 00000000 		.word	PC_rxBufferWrite
 955 0070 00000000 		.word	PC_rxBufferLoopDetect
 956 0074 00000000 		.word	PC_rxBufferOverflow
 957 0078 00E100E0 		.word	-536813312
 958              		.cfi_endproc
 959              	.LFE12:
 960              		.size	PC_ClearRxBuffer, .-PC_ClearRxBuffer
 961              		.section	.text.PC_SetRxAddressMode,"ax",%progbits
 962              		.align	2
 963              		.global	PC_SetRxAddressMode
 964              		.thumb
 965              		.thumb_func
 966              		.type	PC_SetRxAddressMode, %function
 967              	PC_SetRxAddressMode:
 968              	.LFB13:
 782:.\Generated_Source\PSoC5/PC.c **** 
 783:.\Generated_Source\PSoC5/PC.c **** 
 784:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetRxAddressMode
 786:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/PC.c ****     *
 788:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 789:.\Generated_Source\PSoC5/PC.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/PC.c ****     *  UART.
 791:.\Generated_Source\PSoC5/PC.c ****     *
 792:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/PC.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/PC.c ****     *  PC__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 32


 795:.\Generated_Source\PSoC5/PC.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/PC.c ****     *  PC__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/PC.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/PC.c ****     *  PC__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/PC.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/PC.c ****     *  PC__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/PC.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/PC.c ****     *  PC__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/PC.c ****     *
 804:.\Generated_Source\PSoC5/PC.c ****     * Return:
 805:.\Generated_Source\PSoC5/PC.c ****     *  None.
 806:.\Generated_Source\PSoC5/PC.c ****     *
 807:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/PC.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/PC.c ****     *
 812:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/PC.c ****     void PC_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/PC.c ****                                                         
 815:.\Generated_Source\PSoC5/PC.c ****     {
 969              		.loc 1 815 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 8
 972              		@ frame_needed = 1, uses_anonymous_args = 0
 973              		@ link register save eliminated.
 974 0000 80B4     		push	{r7}
 975              		.cfi_def_cfa_offset 4
 976              		.cfi_offset 7, -4
 977 0002 83B0     		sub	sp, sp, #12
 978              		.cfi_def_cfa_offset 16
 979 0004 00AF     		add	r7, sp, #0
 980              		.cfi_def_cfa_register 7
 981 0006 0346     		mov	r3, r0
 982 0008 FB71     		strb	r3, [r7, #7]
 816:.\Generated_Source\PSoC5/PC.c ****         #if(PC_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/PC.c ****             #if(PC_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/PC.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/PC.c ****                 {
 820:.\Generated_Source\PSoC5/PC.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/PC.c ****                 }
 822:.\Generated_Source\PSoC5/PC.c ****             #else /* PC_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/PC.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/PC.c ****                 tmpCtrl = PC_CONTROL_REG & (uint8)~PC_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/PC.c ****                 tmpCtrl |= (uint8)(addressMode << PC_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/PC.c ****                 PC_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/PC.c **** 
 828:.\Generated_Source\PSoC5/PC.c ****                 #if(PC_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/PC.c ****                    (PC_RXBUFFERSIZE > PC_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/PC.c ****                     PC_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/PC.c ****                     PC_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/PC.c ****                 #endif /* End PC_RXBUFFERSIZE > PC_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/PC.c ****             #endif /* End PC_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/PC.c ****         #else /* PC_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/PC.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/PC.c ****             {
 837:.\Generated_Source\PSoC5/PC.c ****                 /* Suppress compiler warning */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 33


 838:.\Generated_Source\PSoC5/PC.c ****             }
 839:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/PC.c ****     }
 983              		.loc 1 840 0
 984 000a 0C37     		adds	r7, r7, #12
 985 000c BD46     		mov	sp, r7
 986              		@ sp needed
 987 000e 5DF8047B 		ldr	r7, [sp], #4
 988 0012 7047     		bx	lr
 989              		.cfi_endproc
 990              	.LFE13:
 991              		.size	PC_SetRxAddressMode, .-PC_SetRxAddressMode
 992              		.section	.text.PC_SetRxAddress1,"ax",%progbits
 993              		.align	2
 994              		.global	PC_SetRxAddress1
 995              		.thumb
 996              		.thumb_func
 997              		.type	PC_SetRxAddress1, %function
 998              	PC_SetRxAddress1:
 999              	.LFB14:
 841:.\Generated_Source\PSoC5/PC.c **** 
 842:.\Generated_Source\PSoC5/PC.c **** 
 843:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetRxAddress1
 845:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/PC.c ****     *
 847:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 848:.\Generated_Source\PSoC5/PC.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/PC.c ****     *
 850:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/PC.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/PC.c ****     *
 853:.\Generated_Source\PSoC5/PC.c ****     * Return:
 854:.\Generated_Source\PSoC5/PC.c ****     *  None.
 855:.\Generated_Source\PSoC5/PC.c ****     *
 856:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/PC.c ****     void PC_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/PC.c ****     {
 1000              		.loc 1 858 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 8
 1003              		@ frame_needed = 1, uses_anonymous_args = 0
 1004              		@ link register save eliminated.
 1005 0000 80B4     		push	{r7}
 1006              		.cfi_def_cfa_offset 4
 1007              		.cfi_offset 7, -4
 1008 0002 83B0     		sub	sp, sp, #12
 1009              		.cfi_def_cfa_offset 16
 1010 0004 00AF     		add	r7, sp, #0
 1011              		.cfi_def_cfa_register 7
 1012 0006 0346     		mov	r3, r0
 1013 0008 FB71     		strb	r3, [r7, #7]
 859:.\Generated_Source\PSoC5/PC.c ****         PC_RXADDRESS1_REG = address;
 1014              		.loc 1 859 0
 1015 000a 044B     		ldr	r3, .L61
 1016 000c FA79     		ldrb	r2, [r7, #7]
 1017 000e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 34


 860:.\Generated_Source\PSoC5/PC.c ****     }
 1018              		.loc 1 860 0
 1019 0010 0C37     		adds	r7, r7, #12
 1020 0012 BD46     		mov	sp, r7
 1021              		@ sp needed
 1022 0014 5DF8047B 		ldr	r7, [sp], #4
 1023 0018 7047     		bx	lr
 1024              	.L62:
 1025 001a 00BF     		.align	2
 1026              	.L61:
 1027 001c 20640040 		.word	1073767456
 1028              		.cfi_endproc
 1029              	.LFE14:
 1030              		.size	PC_SetRxAddress1, .-PC_SetRxAddress1
 1031              		.section	.text.PC_SetRxAddress2,"ax",%progbits
 1032              		.align	2
 1033              		.global	PC_SetRxAddress2
 1034              		.thumb
 1035              		.thumb_func
 1036              		.type	PC_SetRxAddress2, %function
 1037              	PC_SetRxAddress2:
 1038              	.LFB15:
 861:.\Generated_Source\PSoC5/PC.c **** 
 862:.\Generated_Source\PSoC5/PC.c **** 
 863:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetRxAddress2
 865:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/PC.c ****     *
 867:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 868:.\Generated_Source\PSoC5/PC.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/PC.c ****     *
 870:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/PC.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/PC.c ****     *
 873:.\Generated_Source\PSoC5/PC.c ****     * Return:
 874:.\Generated_Source\PSoC5/PC.c ****     *  None.
 875:.\Generated_Source\PSoC5/PC.c ****     *
 876:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/PC.c ****     void PC_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/PC.c ****     {
 1039              		.loc 1 878 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 8
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044 0000 80B4     		push	{r7}
 1045              		.cfi_def_cfa_offset 4
 1046              		.cfi_offset 7, -4
 1047 0002 83B0     		sub	sp, sp, #12
 1048              		.cfi_def_cfa_offset 16
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 0346     		mov	r3, r0
 1052 0008 FB71     		strb	r3, [r7, #7]
 879:.\Generated_Source\PSoC5/PC.c ****         PC_RXADDRESS2_REG = address;
 1053              		.loc 1 879 0
 1054 000a 044B     		ldr	r3, .L64
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 35


 1055 000c FA79     		ldrb	r2, [r7, #7]
 1056 000e 1A70     		strb	r2, [r3]
 880:.\Generated_Source\PSoC5/PC.c ****     }
 1057              		.loc 1 880 0
 1058 0010 0C37     		adds	r7, r7, #12
 1059 0012 BD46     		mov	sp, r7
 1060              		@ sp needed
 1061 0014 5DF8047B 		ldr	r7, [sp], #4
 1062 0018 7047     		bx	lr
 1063              	.L65:
 1064 001a 00BF     		.align	2
 1065              	.L64:
 1066 001c 30640040 		.word	1073767472
 1067              		.cfi_endproc
 1068              	.LFE15:
 1069              		.size	PC_SetRxAddress2, .-PC_SetRxAddress2
 1070              		.section	.text.PC_SetTxInterruptMode,"ax",%progbits
 1071              		.align	2
 1072              		.global	PC_SetTxInterruptMode
 1073              		.thumb
 1074              		.thumb_func
 1075              		.type	PC_SetTxInterruptMode, %function
 1076              	PC_SetTxInterruptMode:
 1077              	.LFB16:
 881:.\Generated_Source\PSoC5/PC.c **** 
 882:.\Generated_Source\PSoC5/PC.c **** #endif  /* PC_RX_ENABLED || PC_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/PC.c **** 
 884:.\Generated_Source\PSoC5/PC.c **** 
 885:.\Generated_Source\PSoC5/PC.c **** #if( (PC_TX_ENABLED) || (PC_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/PC.c ****     *
 890:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 891:.\Generated_Source\PSoC5/PC.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/PC.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/PC.c ****     *
 894:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/PC.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/PC.c ****     *   PC_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/PC.c ****     *   PC_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/PC.c ****     *   PC_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/PC.c ****     *   PC_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/PC.c ****     *
 901:.\Generated_Source\PSoC5/PC.c ****     * Return:
 902:.\Generated_Source\PSoC5/PC.c ****     *  None.
 903:.\Generated_Source\PSoC5/PC.c ****     *
 904:.\Generated_Source\PSoC5/PC.c ****     * Theory:
 905:.\Generated_Source\PSoC5/PC.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/PC.c ****     *
 907:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/PC.c ****     void PC_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/PC.c ****     {
 1078              		.loc 1 909 0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 8
 1081              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 36


 1082              		@ link register save eliminated.
 1083 0000 80B4     		push	{r7}
 1084              		.cfi_def_cfa_offset 4
 1085              		.cfi_offset 7, -4
 1086 0002 83B0     		sub	sp, sp, #12
 1087              		.cfi_def_cfa_offset 16
 1088 0004 00AF     		add	r7, sp, #0
 1089              		.cfi_def_cfa_register 7
 1090 0006 0346     		mov	r3, r0
 1091 0008 FB71     		strb	r3, [r7, #7]
 910:.\Generated_Source\PSoC5/PC.c ****         PC_TXSTATUS_MASK_REG = intSrc;
 1092              		.loc 1 910 0
 1093 000a 044B     		ldr	r3, .L67
 1094 000c FA79     		ldrb	r2, [r7, #7]
 1095 000e 1A70     		strb	r2, [r3]
 911:.\Generated_Source\PSoC5/PC.c ****     }
 1096              		.loc 1 911 0
 1097 0010 0C37     		adds	r7, r7, #12
 1098 0012 BD46     		mov	sp, r7
 1099              		@ sp needed
 1100 0014 5DF8047B 		ldr	r7, [sp], #4
 1101 0018 7047     		bx	lr
 1102              	.L68:
 1103 001a 00BF     		.align	2
 1104              	.L67:
 1105 001c 84640040 		.word	1073767556
 1106              		.cfi_endproc
 1107              	.LFE16:
 1108              		.size	PC_SetTxInterruptMode, .-PC_SetTxInterruptMode
 1109              		.section	.text.PC_WriteTxData,"ax",%progbits
 1110              		.align	2
 1111              		.global	PC_WriteTxData
 1112              		.thumb
 1113              		.thumb_func
 1114              		.type	PC_WriteTxData, %function
 1115              	PC_WriteTxData:
 1116              	.LFB17:
 912:.\Generated_Source\PSoC5/PC.c **** 
 913:.\Generated_Source\PSoC5/PC.c **** 
 914:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_WriteTxData
 916:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/PC.c ****     *
 918:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 919:.\Generated_Source\PSoC5/PC.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/PC.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/PC.c ****     *  separately.
 922:.\Generated_Source\PSoC5/PC.c ****     *
 923:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/PC.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/PC.c ****     *
 926:.\Generated_Source\PSoC5/PC.c ****     * Return:
 927:.\Generated_Source\PSoC5/PC.c ****     * None.
 928:.\Generated_Source\PSoC5/PC.c ****     *
 929:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferWrite - cyclic index for write to txBuffer,
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 37


 932:.\Generated_Source\PSoC5/PC.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/PC.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/PC.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/PC.c ****     *
 938:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/PC.c ****     *  No.
 940:.\Generated_Source\PSoC5/PC.c ****     *
 941:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/PC.c ****     void PC_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/PC.c ****     {
 1117              		.loc 1 943 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 8
 1120              		@ frame_needed = 1, uses_anonymous_args = 0
 1121              		@ link register save eliminated.
 1122 0000 80B4     		push	{r7}
 1123              		.cfi_def_cfa_offset 4
 1124              		.cfi_offset 7, -4
 1125 0002 83B0     		sub	sp, sp, #12
 1126              		.cfi_def_cfa_offset 16
 1127 0004 00AF     		add	r7, sp, #0
 1128              		.cfi_def_cfa_register 7
 1129 0006 0346     		mov	r3, r0
 1130 0008 FB71     		strb	r3, [r7, #7]
 944:.\Generated_Source\PSoC5/PC.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/PC.c ****         if(PC_initVar != 0u)
 1131              		.loc 1 945 0
 1132 000a 064B     		ldr	r3, .L71
 1133 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1134 000e 002B     		cmp	r3, #0
 1135 0010 02D0     		beq	.L69
 946:.\Generated_Source\PSoC5/PC.c ****         {
 947:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/PC.c **** 
 949:.\Generated_Source\PSoC5/PC.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/PC.c ****             PC_DisableTxInt();
 951:.\Generated_Source\PSoC5/PC.c **** 
 952:.\Generated_Source\PSoC5/PC.c ****             if( (PC_txBufferRead == PC_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/PC.c ****                 ((PC_TXSTATUS_REG & PC_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/PC.c ****             {
 955:.\Generated_Source\PSoC5/PC.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/PC.c ****                 PC_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/PC.c ****             }
 958:.\Generated_Source\PSoC5/PC.c ****             else
 959:.\Generated_Source\PSoC5/PC.c ****             {
 960:.\Generated_Source\PSoC5/PC.c ****                 if(PC_txBufferWrite >= PC_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/PC.c ****                 {
 962:.\Generated_Source\PSoC5/PC.c ****                     PC_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/PC.c ****                 }
 964:.\Generated_Source\PSoC5/PC.c **** 
 965:.\Generated_Source\PSoC5/PC.c ****                 PC_txBuffer[PC_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/PC.c **** 
 967:.\Generated_Source\PSoC5/PC.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/PC.c ****                 PC_txBufferWrite++;
 969:.\Generated_Source\PSoC5/PC.c ****             }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 38


 970:.\Generated_Source\PSoC5/PC.c **** 
 971:.\Generated_Source\PSoC5/PC.c ****             PC_EnableTxInt();
 972:.\Generated_Source\PSoC5/PC.c **** 
 973:.\Generated_Source\PSoC5/PC.c ****         #else
 974:.\Generated_Source\PSoC5/PC.c **** 
 975:.\Generated_Source\PSoC5/PC.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/PC.c ****             PC_TXDATA_REG = txDataByte;
 1136              		.loc 1 976 0
 1137 0012 054B     		ldr	r3, .L71+4
 1138 0014 FA79     		ldrb	r2, [r7, #7]
 1139 0016 1A70     		strb	r2, [r3]
 1140              	.L69:
 977:.\Generated_Source\PSoC5/PC.c **** 
 978:.\Generated_Source\PSoC5/PC.c ****         #endif /*(PC_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/PC.c ****         }
 980:.\Generated_Source\PSoC5/PC.c ****     }
 1141              		.loc 1 980 0
 1142 0018 0C37     		adds	r7, r7, #12
 1143 001a BD46     		mov	sp, r7
 1144              		@ sp needed
 1145 001c 5DF8047B 		ldr	r7, [sp], #4
 1146 0020 7047     		bx	lr
 1147              	.L72:
 1148 0022 00BF     		.align	2
 1149              	.L71:
 1150 0024 00000000 		.word	PC_initVar
 1151 0028 43640040 		.word	1073767491
 1152              		.cfi_endproc
 1153              	.LFE17:
 1154              		.size	PC_WriteTxData, .-PC_WriteTxData
 1155              		.section	.text.PC_ReadTxStatus,"ax",%progbits
 1156              		.align	2
 1157              		.global	PC_ReadTxStatus
 1158              		.thumb
 1159              		.thumb_func
 1160              		.type	PC_ReadTxStatus, %function
 1161              	PC_ReadTxStatus:
 1162              	.LFB18:
 981:.\Generated_Source\PSoC5/PC.c **** 
 982:.\Generated_Source\PSoC5/PC.c **** 
 983:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_ReadTxStatus
 985:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/PC.c ****     *
 987:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 988:.\Generated_Source\PSoC5/PC.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/PC.c ****     *
 990:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/PC.c ****     *  None.
 992:.\Generated_Source\PSoC5/PC.c ****     *
 993:.\Generated_Source\PSoC5/PC.c ****     * Return:
 994:.\Generated_Source\PSoC5/PC.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/PC.c ****     *
 996:.\Generated_Source\PSoC5/PC.c ****     * Theory:
 997:.\Generated_Source\PSoC5/PC.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/PC.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/PC.c ****     *  even if the bit was not enabled as an interrupt source the event happened
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 39


1000:.\Generated_Source\PSoC5/PC.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/PC.c ****     *
1002:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/PC.c ****     {
 1163              		.loc 1 1004 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 0
 1166              		@ frame_needed = 1, uses_anonymous_args = 0
 1167              		@ link register save eliminated.
 1168 0000 80B4     		push	{r7}
 1169              		.cfi_def_cfa_offset 4
 1170              		.cfi_offset 7, -4
 1171 0002 00AF     		add	r7, sp, #0
 1172              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC5/PC.c ****         return(PC_TXSTATUS_REG);
 1173              		.loc 1 1005 0
 1174 0004 034B     		ldr	r3, .L75
 1175 0006 1B78     		ldrb	r3, [r3]
 1176 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC5/PC.c ****     }
 1177              		.loc 1 1006 0
 1178 000a 1846     		mov	r0, r3
 1179 000c BD46     		mov	sp, r7
 1180              		@ sp needed
 1181 000e 5DF8047B 		ldr	r7, [sp], #4
 1182 0012 7047     		bx	lr
 1183              	.L76:
 1184              		.align	2
 1185              	.L75:
 1186 0014 64640040 		.word	1073767524
 1187              		.cfi_endproc
 1188              	.LFE18:
 1189              		.size	PC_ReadTxStatus, .-PC_ReadTxStatus
 1190              		.section	.text.PC_PutChar,"ax",%progbits
 1191              		.align	2
 1192              		.global	PC_PutChar
 1193              		.thumb
 1194              		.thumb_func
 1195              		.type	PC_PutChar, %function
 1196              	PC_PutChar:
 1197              	.LFB19:
1007:.\Generated_Source\PSoC5/PC.c **** 
1008:.\Generated_Source\PSoC5/PC.c **** 
1009:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_PutChar
1011:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/PC.c ****     *
1013:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1014:.\Generated_Source\PSoC5/PC.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/PC.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/PC.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/PC.c ****     *
1018:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/PC.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/PC.c ****     *
1021:.\Generated_Source\PSoC5/PC.c ****     * Return:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 40


1022:.\Generated_Source\PSoC5/PC.c ****     *  None.
1023:.\Generated_Source\PSoC5/PC.c ****     *
1024:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/PC.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/PC.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/PC.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/PC.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/PC.c ****     *
1034:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/PC.c ****     *  No.
1036:.\Generated_Source\PSoC5/PC.c ****     *
1037:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1038:.\Generated_Source\PSoC5/PC.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/PC.c ****     *
1040:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/PC.c ****     void PC_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/PC.c ****     {
 1198              		.loc 1 1042 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 8
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 1203 0000 80B4     		push	{r7}
 1204              		.cfi_def_cfa_offset 4
 1205              		.cfi_offset 7, -4
 1206 0002 83B0     		sub	sp, sp, #12
 1207              		.cfi_def_cfa_offset 16
 1208 0004 00AF     		add	r7, sp, #0
 1209              		.cfi_def_cfa_register 7
 1210 0006 0346     		mov	r3, r0
 1211 0008 FB71     		strb	r3, [r7, #7]
1043:.\Generated_Source\PSoC5/PC.c ****     #if (PC_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/PC.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/PC.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/PC.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/PC.c ****         */
1048:.\Generated_Source\PSoC5/PC.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/PC.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/PC.c **** 
1051:.\Generated_Source\PSoC5/PC.c ****         do
1052:.\Generated_Source\PSoC5/PC.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/PC.c **** 
1054:.\Generated_Source\PSoC5/PC.c ****         #if ((PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/PC.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/PC.c ****             PC_DisableTxInt();
1057:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/PC.c **** 
1059:.\Generated_Source\PSoC5/PC.c ****             locTxBufferWrite = PC_txBufferWrite;
1060:.\Generated_Source\PSoC5/PC.c ****             locTxBufferRead  = PC_txBufferRead;
1061:.\Generated_Source\PSoC5/PC.c **** 
1062:.\Generated_Source\PSoC5/PC.c ****         #if ((PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/PC.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/PC.c ****             PC_EnableTxInt();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 41


1065:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/PC.c ****         }
1067:.\Generated_Source\PSoC5/PC.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/PC.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/PC.c ****                                 (uint8)(PC_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/PC.c **** 
1071:.\Generated_Source\PSoC5/PC.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/PC.c ****             ((PC_TXSTATUS_REG & PC_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/PC.c ****         {
1074:.\Generated_Source\PSoC5/PC.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/PC.c ****             PC_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/PC.c ****         }
1077:.\Generated_Source\PSoC5/PC.c ****         else
1078:.\Generated_Source\PSoC5/PC.c ****         {
1079:.\Generated_Source\PSoC5/PC.c ****             if(locTxBufferWrite >= PC_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/PC.c ****             {
1081:.\Generated_Source\PSoC5/PC.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/PC.c ****             }
1083:.\Generated_Source\PSoC5/PC.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/PC.c ****             PC_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/PC.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/PC.c **** 
1087:.\Generated_Source\PSoC5/PC.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/PC.c ****         #if ((PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/PC.c ****             PC_DisableTxInt();
1090:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/PC.c **** 
1092:.\Generated_Source\PSoC5/PC.c ****             PC_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/PC.c **** 
1094:.\Generated_Source\PSoC5/PC.c ****         #if ((PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/PC.c ****             PC_EnableTxInt();
1096:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/PC.c **** 
1098:.\Generated_Source\PSoC5/PC.c ****             if(0u != (PC_TXSTATUS_REG & PC_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/PC.c ****             {
1100:.\Generated_Source\PSoC5/PC.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/PC.c ****                 PC_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/PC.c ****             }
1103:.\Generated_Source\PSoC5/PC.c ****         }
1104:.\Generated_Source\PSoC5/PC.c **** 
1105:.\Generated_Source\PSoC5/PC.c ****     #else
1106:.\Generated_Source\PSoC5/PC.c **** 
1107:.\Generated_Source\PSoC5/PC.c ****         while((PC_TXSTATUS_REG & PC_TX_STS_FIFO_FULL) != 0u)
 1212              		.loc 1 1107 0
 1213 000a 00BF     		nop
 1214              	.L78:
 1215              		.loc 1 1107 0 is_stmt 0 discriminator 1
 1216 000c 074B     		ldr	r3, .L79
 1217 000e 1B78     		ldrb	r3, [r3]
 1218 0010 DBB2     		uxtb	r3, r3
 1219 0012 03F00403 		and	r3, r3, #4
 1220 0016 002B     		cmp	r3, #0
 1221 0018 F8D1     		bne	.L78
1108:.\Generated_Source\PSoC5/PC.c ****         {
1109:.\Generated_Source\PSoC5/PC.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/PC.c ****         }
1111:.\Generated_Source\PSoC5/PC.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 42


1112:.\Generated_Source\PSoC5/PC.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/PC.c ****         PC_TXDATA_REG = txDataByte;
 1222              		.loc 1 1113 0 is_stmt 1
 1223 001a 054B     		ldr	r3, .L79+4
 1224 001c FA79     		ldrb	r2, [r7, #7]
 1225 001e 1A70     		strb	r2, [r3]
1114:.\Generated_Source\PSoC5/PC.c **** 
1115:.\Generated_Source\PSoC5/PC.c ****     #endif /* PC_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/PC.c ****     }
 1226              		.loc 1 1116 0
 1227 0020 0C37     		adds	r7, r7, #12
 1228 0022 BD46     		mov	sp, r7
 1229              		@ sp needed
 1230 0024 5DF8047B 		ldr	r7, [sp], #4
 1231 0028 7047     		bx	lr
 1232              	.L80:
 1233 002a 00BF     		.align	2
 1234              	.L79:
 1235 002c 64640040 		.word	1073767524
 1236 0030 43640040 		.word	1073767491
 1237              		.cfi_endproc
 1238              	.LFE19:
 1239              		.size	PC_PutChar, .-PC_PutChar
 1240              		.section	.text.PC_PutString,"ax",%progbits
 1241              		.align	2
 1242              		.global	PC_PutString
 1243              		.thumb
 1244              		.thumb_func
 1245              		.type	PC_PutString, %function
 1246              	PC_PutString:
 1247              	.LFB20:
1117:.\Generated_Source\PSoC5/PC.c **** 
1118:.\Generated_Source\PSoC5/PC.c **** 
1119:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_PutString
1121:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/PC.c ****     *
1123:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1124:.\Generated_Source\PSoC5/PC.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/PC.c ****     *
1126:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/PC.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/PC.c ****     *
1129:.\Generated_Source\PSoC5/PC.c ****     * Return:
1130:.\Generated_Source\PSoC5/PC.c ****     *  None.
1131:.\Generated_Source\PSoC5/PC.c ****     *
1132:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/PC.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/PC.c ****     *
1136:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/PC.c ****     *  No.
1138:.\Generated_Source\PSoC5/PC.c ****     *
1139:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1140:.\Generated_Source\PSoC5/PC.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/PC.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/PC.c ****     *  TX buffer.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 43


1143:.\Generated_Source\PSoC5/PC.c ****     *
1144:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/PC.c ****     void PC_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/PC.c ****     {
 1248              		.loc 1 1146 0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 16
 1251              		@ frame_needed = 1, uses_anonymous_args = 0
 1252 0000 80B5     		push	{r7, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 7, -8
 1255              		.cfi_offset 14, -4
 1256 0002 84B0     		sub	sp, sp, #16
 1257              		.cfi_def_cfa_offset 24
 1258 0004 00AF     		add	r7, sp, #0
 1259              		.cfi_def_cfa_register 7
 1260 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC5/PC.c ****         uint16 bufIndex = 0u;
 1261              		.loc 1 1147 0
 1262 0008 0023     		movs	r3, #0
 1263 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:.\Generated_Source\PSoC5/PC.c **** 
1149:.\Generated_Source\PSoC5/PC.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/PC.c ****         if(PC_initVar != 0u)
 1264              		.loc 1 1150 0
 1265 000c 0B4B     		ldr	r3, .L85
 1266 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1267 0010 002B     		cmp	r3, #0
 1268 0012 10D0     		beq	.L81
1151:.\Generated_Source\PSoC5/PC.c ****         {
1152:.\Generated_Source\PSoC5/PC.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/PC.c ****             while(string[bufIndex] != (char8) 0)
 1269              		.loc 1 1153 0
 1270 0014 09E0     		b	.L83
 1271              	.L84:
1154:.\Generated_Source\PSoC5/PC.c ****             {
1155:.\Generated_Source\PSoC5/PC.c ****                 PC_PutChar((uint8)string[bufIndex]);
 1272              		.loc 1 1155 0
 1273 0016 FB89     		ldrh	r3, [r7, #14]
 1274 0018 7A68     		ldr	r2, [r7, #4]
 1275 001a 1344     		add	r3, r3, r2
 1276 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1277 001e 1846     		mov	r0, r3
 1278 0020 FFF7FEFF 		bl	PC_PutChar
1156:.\Generated_Source\PSoC5/PC.c ****                 bufIndex++;
 1279              		.loc 1 1156 0
 1280 0024 FB89     		ldrh	r3, [r7, #14]
 1281 0026 0133     		adds	r3, r3, #1
 1282 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1283              	.L83:
1153:.\Generated_Source\PSoC5/PC.c ****             while(string[bufIndex] != (char8) 0)
 1284              		.loc 1 1153 0 discriminator 1
 1285 002a FB89     		ldrh	r3, [r7, #14]
 1286 002c 7A68     		ldr	r2, [r7, #4]
 1287 002e 1344     		add	r3, r3, r2
 1288 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1289 0032 002B     		cmp	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 44


 1290 0034 EFD1     		bne	.L84
 1291              	.L81:
1157:.\Generated_Source\PSoC5/PC.c ****             }
1158:.\Generated_Source\PSoC5/PC.c ****         }
1159:.\Generated_Source\PSoC5/PC.c ****     }
 1292              		.loc 1 1159 0
 1293 0036 1037     		adds	r7, r7, #16
 1294 0038 BD46     		mov	sp, r7
 1295              		@ sp needed
 1296 003a 80BD     		pop	{r7, pc}
 1297              	.L86:
 1298              		.align	2
 1299              	.L85:
 1300 003c 00000000 		.word	PC_initVar
 1301              		.cfi_endproc
 1302              	.LFE20:
 1303              		.size	PC_PutString, .-PC_PutString
 1304              		.section	.text.PC_PutArray,"ax",%progbits
 1305              		.align	2
 1306              		.global	PC_PutArray
 1307              		.thumb
 1308              		.thumb_func
 1309              		.type	PC_PutArray, %function
 1310              	PC_PutArray:
 1311              	.LFB21:
1160:.\Generated_Source\PSoC5/PC.c **** 
1161:.\Generated_Source\PSoC5/PC.c **** 
1162:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_PutArray
1164:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/PC.c ****     *
1166:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1167:.\Generated_Source\PSoC5/PC.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/PC.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/PC.c ****     *
1170:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/PC.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/PC.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/PC.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/PC.c ****     *
1175:.\Generated_Source\PSoC5/PC.c ****     * Return:
1176:.\Generated_Source\PSoC5/PC.c ****     *  None.
1177:.\Generated_Source\PSoC5/PC.c ****     *
1178:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/PC.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/PC.c ****     *
1182:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/PC.c ****     *  No.
1184:.\Generated_Source\PSoC5/PC.c ****     *
1185:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1186:.\Generated_Source\PSoC5/PC.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/PC.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/PC.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/PC.c ****     *
1190:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/PC.c ****     void PC_PutArray(const uint8 string[], uint8 byteCount)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 45


1192:.\Generated_Source\PSoC5/PC.c ****                                                                     
1193:.\Generated_Source\PSoC5/PC.c ****     {
 1312              		.loc 1 1193 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 16
 1315              		@ frame_needed = 1, uses_anonymous_args = 0
 1316 0000 80B5     		push	{r7, lr}
 1317              		.cfi_def_cfa_offset 8
 1318              		.cfi_offset 7, -8
 1319              		.cfi_offset 14, -4
 1320 0002 84B0     		sub	sp, sp, #16
 1321              		.cfi_def_cfa_offset 24
 1322 0004 00AF     		add	r7, sp, #0
 1323              		.cfi_def_cfa_register 7
 1324 0006 7860     		str	r0, [r7, #4]
 1325 0008 0B46     		mov	r3, r1
 1326 000a FB70     		strb	r3, [r7, #3]
1194:.\Generated_Source\PSoC5/PC.c ****         uint8 bufIndex = 0u;
 1327              		.loc 1 1194 0
 1328 000c 0023     		movs	r3, #0
 1329 000e FB73     		strb	r3, [r7, #15]
1195:.\Generated_Source\PSoC5/PC.c **** 
1196:.\Generated_Source\PSoC5/PC.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/PC.c ****         if(PC_initVar != 0u)
 1330              		.loc 1 1197 0
 1331 0010 0A4B     		ldr	r3, .L91
 1332 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 0014 002B     		cmp	r3, #0
 1334 0016 0ED0     		beq	.L87
1198:.\Generated_Source\PSoC5/PC.c ****         {
1199:.\Generated_Source\PSoC5/PC.c ****             while(bufIndex < byteCount)
 1335              		.loc 1 1199 0
 1336 0018 09E0     		b	.L89
 1337              	.L90:
1200:.\Generated_Source\PSoC5/PC.c ****             {
1201:.\Generated_Source\PSoC5/PC.c ****                 PC_PutChar(string[bufIndex]);
 1338              		.loc 1 1201 0
 1339 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1340 001c 7A68     		ldr	r2, [r7, #4]
 1341 001e 1344     		add	r3, r3, r2
 1342 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1343 0022 1846     		mov	r0, r3
 1344 0024 FFF7FEFF 		bl	PC_PutChar
1202:.\Generated_Source\PSoC5/PC.c ****                 bufIndex++;
 1345              		.loc 1 1202 0
 1346 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1347 002a 0133     		adds	r3, r3, #1
 1348 002c FB73     		strb	r3, [r7, #15]
 1349              	.L89:
1199:.\Generated_Source\PSoC5/PC.c ****             while(bufIndex < byteCount)
 1350              		.loc 1 1199 0 discriminator 1
 1351 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1352 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1353 0032 9A42     		cmp	r2, r3
 1354 0034 F1D3     		bcc	.L90
 1355              	.L87:
1203:.\Generated_Source\PSoC5/PC.c ****             }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 46


1204:.\Generated_Source\PSoC5/PC.c ****         }
1205:.\Generated_Source\PSoC5/PC.c ****     }
 1356              		.loc 1 1205 0
 1357 0036 1037     		adds	r7, r7, #16
 1358 0038 BD46     		mov	sp, r7
 1359              		@ sp needed
 1360 003a 80BD     		pop	{r7, pc}
 1361              	.L92:
 1362              		.align	2
 1363              	.L91:
 1364 003c 00000000 		.word	PC_initVar
 1365              		.cfi_endproc
 1366              	.LFE21:
 1367              		.size	PC_PutArray, .-PC_PutArray
 1368              		.section	.text.PC_PutCRLF,"ax",%progbits
 1369              		.align	2
 1370              		.global	PC_PutCRLF
 1371              		.thumb
 1372              		.thumb_func
 1373              		.type	PC_PutCRLF, %function
 1374              	PC_PutCRLF:
 1375              	.LFB22:
1206:.\Generated_Source\PSoC5/PC.c **** 
1207:.\Generated_Source\PSoC5/PC.c **** 
1208:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_PutCRLF
1210:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/PC.c ****     *
1212:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1213:.\Generated_Source\PSoC5/PC.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/PC.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/PC.c ****     *
1216:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/PC.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/PC.c ****     *
1219:.\Generated_Source\PSoC5/PC.c ****     * Return:
1220:.\Generated_Source\PSoC5/PC.c ****     *  None.
1221:.\Generated_Source\PSoC5/PC.c ****     *
1222:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/PC.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/PC.c ****     *
1226:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/PC.c ****     *  No.
1228:.\Generated_Source\PSoC5/PC.c ****     *
1229:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/PC.c ****     void PC_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/PC.c ****     {
 1376              		.loc 1 1231 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 8
 1379              		@ frame_needed = 1, uses_anonymous_args = 0
 1380 0000 80B5     		push	{r7, lr}
 1381              		.cfi_def_cfa_offset 8
 1382              		.cfi_offset 7, -8
 1383              		.cfi_offset 14, -4
 1384 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 47


 1385              		.cfi_def_cfa_offset 16
 1386 0004 00AF     		add	r7, sp, #0
 1387              		.cfi_def_cfa_register 7
 1388 0006 0346     		mov	r3, r0
 1389 0008 FB71     		strb	r3, [r7, #7]
1232:.\Generated_Source\PSoC5/PC.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/PC.c ****         if(PC_initVar != 0u)
 1390              		.loc 1 1233 0
 1391 000a 084B     		ldr	r3, .L95
 1392 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1393 000e 002B     		cmp	r3, #0
 1394 0010 09D0     		beq	.L93
1234:.\Generated_Source\PSoC5/PC.c ****         {
1235:.\Generated_Source\PSoC5/PC.c ****             PC_PutChar(txDataByte);
 1395              		.loc 1 1235 0
 1396 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1397 0014 1846     		mov	r0, r3
 1398 0016 FFF7FEFF 		bl	PC_PutChar
1236:.\Generated_Source\PSoC5/PC.c ****             PC_PutChar(0x0Du);
 1399              		.loc 1 1236 0
 1400 001a 0D20     		movs	r0, #13
 1401 001c FFF7FEFF 		bl	PC_PutChar
1237:.\Generated_Source\PSoC5/PC.c ****             PC_PutChar(0x0Au);
 1402              		.loc 1 1237 0
 1403 0020 0A20     		movs	r0, #10
 1404 0022 FFF7FEFF 		bl	PC_PutChar
 1405              	.L93:
1238:.\Generated_Source\PSoC5/PC.c ****         }
1239:.\Generated_Source\PSoC5/PC.c ****     }
 1406              		.loc 1 1239 0
 1407 0026 0837     		adds	r7, r7, #8
 1408 0028 BD46     		mov	sp, r7
 1409              		@ sp needed
 1410 002a 80BD     		pop	{r7, pc}
 1411              	.L96:
 1412              		.align	2
 1413              	.L95:
 1414 002c 00000000 		.word	PC_initVar
 1415              		.cfi_endproc
 1416              	.LFE22:
 1417              		.size	PC_PutCRLF, .-PC_PutCRLF
 1418              		.section	.text.PC_GetTxBufferSize,"ax",%progbits
 1419              		.align	2
 1420              		.global	PC_GetTxBufferSize
 1421              		.thumb
 1422              		.thumb_func
 1423              		.type	PC_GetTxBufferSize, %function
 1424              	PC_GetTxBufferSize:
 1425              	.LFB23:
1240:.\Generated_Source\PSoC5/PC.c **** 
1241:.\Generated_Source\PSoC5/PC.c **** 
1242:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_GetTxBufferSize
1244:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/PC.c ****     *
1246:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1247:.\Generated_Source\PSoC5/PC.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 48


1248:.\Generated_Source\PSoC5/PC.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/PC.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/PC.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/PC.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/PC.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/PC.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/PC.c ****     *
1255:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/PC.c ****     *  None.
1257:.\Generated_Source\PSoC5/PC.c ****     *
1258:.\Generated_Source\PSoC5/PC.c ****     * Return:
1259:.\Generated_Source\PSoC5/PC.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/PC.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/PC.c ****     *
1262:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/PC.c ****     *
1266:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/PC.c ****     *  No.
1268:.\Generated_Source\PSoC5/PC.c ****     *
1269:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1270:.\Generated_Source\PSoC5/PC.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/PC.c ****     *
1272:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/PC.c ****                                                             
1275:.\Generated_Source\PSoC5/PC.c ****     {
 1426              		.loc 1 1275 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 8
 1429              		@ frame_needed = 1, uses_anonymous_args = 0
 1430              		@ link register save eliminated.
 1431 0000 80B4     		push	{r7}
 1432              		.cfi_def_cfa_offset 4
 1433              		.cfi_offset 7, -4
 1434 0002 83B0     		sub	sp, sp, #12
 1435              		.cfi_def_cfa_offset 16
 1436 0004 00AF     		add	r7, sp, #0
 1437              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC5/PC.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/PC.c **** 
1278:.\Generated_Source\PSoC5/PC.c ****     #if (PC_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/PC.c **** 
1280:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/PC.c ****         PC_DisableTxInt();
1282:.\Generated_Source\PSoC5/PC.c **** 
1283:.\Generated_Source\PSoC5/PC.c ****         if(PC_txBufferRead == PC_txBufferWrite)
1284:.\Generated_Source\PSoC5/PC.c ****         {
1285:.\Generated_Source\PSoC5/PC.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/PC.c ****         }
1287:.\Generated_Source\PSoC5/PC.c ****         else if(PC_txBufferRead < PC_txBufferWrite)
1288:.\Generated_Source\PSoC5/PC.c ****         {
1289:.\Generated_Source\PSoC5/PC.c ****             size = (PC_txBufferWrite - PC_txBufferRead);
1290:.\Generated_Source\PSoC5/PC.c ****         }
1291:.\Generated_Source\PSoC5/PC.c ****         else
1292:.\Generated_Source\PSoC5/PC.c ****         {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 49


1293:.\Generated_Source\PSoC5/PC.c ****             size = (PC_TX_BUFFER_SIZE - PC_txBufferRead) +
1294:.\Generated_Source\PSoC5/PC.c ****                     PC_txBufferWrite;
1295:.\Generated_Source\PSoC5/PC.c ****         }
1296:.\Generated_Source\PSoC5/PC.c **** 
1297:.\Generated_Source\PSoC5/PC.c ****         PC_EnableTxInt();
1298:.\Generated_Source\PSoC5/PC.c **** 
1299:.\Generated_Source\PSoC5/PC.c ****     #else
1300:.\Generated_Source\PSoC5/PC.c **** 
1301:.\Generated_Source\PSoC5/PC.c ****         size = PC_TXSTATUS_REG;
 1438              		.loc 1 1301 0
 1439 0006 0E4B     		ldr	r3, .L102
 1440 0008 1B78     		ldrb	r3, [r3]
 1441 000a FB71     		strb	r3, [r7, #7]
1302:.\Generated_Source\PSoC5/PC.c **** 
1303:.\Generated_Source\PSoC5/PC.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/PC.c ****         if((size & PC_TX_STS_FIFO_FULL) != 0u)
 1442              		.loc 1 1304 0
 1443 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1444 000e 03F00403 		and	r3, r3, #4
 1445 0012 002B     		cmp	r3, #0
 1446 0014 02D0     		beq	.L98
1305:.\Generated_Source\PSoC5/PC.c ****         {
1306:.\Generated_Source\PSoC5/PC.c ****             size = PC_FIFO_LENGTH;
 1447              		.loc 1 1306 0
 1448 0016 0423     		movs	r3, #4
 1449 0018 FB71     		strb	r3, [r7, #7]
 1450 001a 09E0     		b	.L99
 1451              	.L98:
1307:.\Generated_Source\PSoC5/PC.c ****         }
1308:.\Generated_Source\PSoC5/PC.c ****         else if((size & PC_TX_STS_FIFO_EMPTY) != 0u)
 1452              		.loc 1 1308 0
 1453 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1454 001e 03F00203 		and	r3, r3, #2
 1455 0022 002B     		cmp	r3, #0
 1456 0024 02D0     		beq	.L100
1309:.\Generated_Source\PSoC5/PC.c ****         {
1310:.\Generated_Source\PSoC5/PC.c ****             size = 0u;
 1457              		.loc 1 1310 0
 1458 0026 0023     		movs	r3, #0
 1459 0028 FB71     		strb	r3, [r7, #7]
 1460 002a 01E0     		b	.L99
 1461              	.L100:
1311:.\Generated_Source\PSoC5/PC.c ****         }
1312:.\Generated_Source\PSoC5/PC.c ****         else
1313:.\Generated_Source\PSoC5/PC.c ****         {
1314:.\Generated_Source\PSoC5/PC.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/PC.c ****             size = 1u;
 1462              		.loc 1 1315 0
 1463 002c 0123     		movs	r3, #1
 1464 002e FB71     		strb	r3, [r7, #7]
 1465              	.L99:
1316:.\Generated_Source\PSoC5/PC.c ****         }
1317:.\Generated_Source\PSoC5/PC.c **** 
1318:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/PC.c **** 
1320:.\Generated_Source\PSoC5/PC.c ****     return(size);
 1466              		.loc 1 1320 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 50


 1467 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:.\Generated_Source\PSoC5/PC.c ****     }
 1468              		.loc 1 1321 0
 1469 0032 1846     		mov	r0, r3
 1470 0034 0C37     		adds	r7, r7, #12
 1471 0036 BD46     		mov	sp, r7
 1472              		@ sp needed
 1473 0038 5DF8047B 		ldr	r7, [sp], #4
 1474 003c 7047     		bx	lr
 1475              	.L103:
 1476 003e 00BF     		.align	2
 1477              	.L102:
 1478 0040 64640040 		.word	1073767524
 1479              		.cfi_endproc
 1480              	.LFE23:
 1481              		.size	PC_GetTxBufferSize, .-PC_GetTxBufferSize
 1482              		.section	.text.PC_ClearTxBuffer,"ax",%progbits
 1483              		.align	2
 1484              		.global	PC_ClearTxBuffer
 1485              		.thumb
 1486              		.thumb_func
 1487              		.type	PC_ClearTxBuffer, %function
 1488              	PC_ClearTxBuffer:
 1489              	.LFB24:
1322:.\Generated_Source\PSoC5/PC.c **** 
1323:.\Generated_Source\PSoC5/PC.c **** 
1324:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_ClearTxBuffer
1326:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/PC.c ****     *
1328:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1329:.\Generated_Source\PSoC5/PC.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/PC.c ****     *
1331:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/PC.c ****     *  None.
1333:.\Generated_Source\PSoC5/PC.c ****     *
1334:.\Generated_Source\PSoC5/PC.c ****     * Return:
1335:.\Generated_Source\PSoC5/PC.c ****     *  None.
1336:.\Generated_Source\PSoC5/PC.c ****     *
1337:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/PC.c ****     *
1341:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/PC.c ****     *  No.
1343:.\Generated_Source\PSoC5/PC.c ****     *
1344:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1345:.\Generated_Source\PSoC5/PC.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/PC.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/PC.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/PC.c ****     *
1349:.\Generated_Source\PSoC5/PC.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/PC.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/PC.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/PC.c ****     *
1353:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/PC.c ****     void PC_ClearTxBuffer(void) 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 51


1355:.\Generated_Source\PSoC5/PC.c ****     {
 1490              		.loc 1 1355 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 8
 1493              		@ frame_needed = 1, uses_anonymous_args = 0
 1494 0000 80B5     		push	{r7, lr}
 1495              		.cfi_def_cfa_offset 8
 1496              		.cfi_offset 7, -8
 1497              		.cfi_offset 14, -4
 1498 0002 82B0     		sub	sp, sp, #8
 1499              		.cfi_def_cfa_offset 16
 1500 0004 00AF     		add	r7, sp, #0
 1501              		.cfi_def_cfa_register 7
1356:.\Generated_Source\PSoC5/PC.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/PC.c **** 
1358:.\Generated_Source\PSoC5/PC.c ****         enableInterrupts = CyEnterCriticalSection();
 1502              		.loc 1 1358 0
 1503 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1504 000a 0346     		mov	r3, r0
 1505 000c FB71     		strb	r3, [r7, #7]
1359:.\Generated_Source\PSoC5/PC.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/PC.c ****         PC_TXDATA_AUX_CTL_REG |= (uint8)  PC_TX_FIFO_CLR;
 1506              		.loc 1 1360 0
 1507 000e 0B4B     		ldr	r3, .L105
 1508 0010 0A4A     		ldr	r2, .L105
 1509 0012 1278     		ldrb	r2, [r2]
 1510 0014 D2B2     		uxtb	r2, r2
 1511 0016 42F00102 		orr	r2, r2, #1
 1512 001a D2B2     		uxtb	r2, r2
 1513 001c 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/PC.c ****         PC_TXDATA_AUX_CTL_REG &= (uint8) ~PC_TX_FIFO_CLR;
 1514              		.loc 1 1361 0
 1515 001e 074B     		ldr	r3, .L105
 1516 0020 064A     		ldr	r2, .L105
 1517 0022 1278     		ldrb	r2, [r2]
 1518 0024 D2B2     		uxtb	r2, r2
 1519 0026 22F00102 		bic	r2, r2, #1
 1520 002a D2B2     		uxtb	r2, r2
 1521 002c 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/PC.c ****         CyExitCriticalSection(enableInterrupts);
 1522              		.loc 1 1362 0
 1523 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1524 0030 1846     		mov	r0, r3
 1525 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC5/PC.c **** 
1364:.\Generated_Source\PSoC5/PC.c ****     #if (PC_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/PC.c **** 
1366:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/PC.c ****         PC_DisableTxInt();
1368:.\Generated_Source\PSoC5/PC.c **** 
1369:.\Generated_Source\PSoC5/PC.c ****         PC_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/PC.c ****         PC_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/PC.c **** 
1372:.\Generated_Source\PSoC5/PC.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/PC.c ****         PC_EnableTxInt();
1374:.\Generated_Source\PSoC5/PC.c **** 
1375:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_TX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 52


1376:.\Generated_Source\PSoC5/PC.c ****     }
 1526              		.loc 1 1376 0
 1527 0036 0837     		adds	r7, r7, #8
 1528 0038 BD46     		mov	sp, r7
 1529              		@ sp needed
 1530 003a 80BD     		pop	{r7, pc}
 1531              	.L106:
 1532              		.align	2
 1533              	.L105:
 1534 003c 93640040 		.word	1073767571
 1535              		.cfi_endproc
 1536              	.LFE24:
 1537              		.size	PC_ClearTxBuffer, .-PC_ClearTxBuffer
 1538              		.section	.text.PC_SendBreak,"ax",%progbits
 1539              		.align	2
 1540              		.global	PC_SendBreak
 1541              		.thumb
 1542              		.thumb_func
 1543              		.type	PC_SendBreak, %function
 1544              	PC_SendBreak:
 1545              	.LFB25:
1377:.\Generated_Source\PSoC5/PC.c **** 
1378:.\Generated_Source\PSoC5/PC.c **** 
1379:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SendBreak
1381:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/PC.c ****     *
1383:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1384:.\Generated_Source\PSoC5/PC.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/PC.c ****     *
1386:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/PC.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/PC.c ****     *   PC_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/PC.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/PC.c ****     *   PC_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/PC.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/PC.c ****     *   PC_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/PC.c ****     *       then return.
1394:.\Generated_Source\PSoC5/PC.c ****     *   PC_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/PC.c ****     *      PC_SEND_BREAK and PC_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/PC.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/PC.c ****     *
1398:.\Generated_Source\PSoC5/PC.c ****     * Return:
1399:.\Generated_Source\PSoC5/PC.c ****     *  None.
1400:.\Generated_Source\PSoC5/PC.c ****     *
1401:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/PC.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/PC.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/PC.c ****     *
1406:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/PC.c ****     *  No.
1408:.\Generated_Source\PSoC5/PC.c ****     *
1409:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1410:.\Generated_Source\PSoC5/PC.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/PC.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/PC.c ****     *  operation.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 53


1413:.\Generated_Source\PSoC5/PC.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/PC.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/PC.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/PC.c ****     *     complete.
1417:.\Generated_Source\PSoC5/PC.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/PC.c ****     *     operation
1419:.\Generated_Source\PSoC5/PC.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/PC.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/PC.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/PC.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/PC.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/PC.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/PC.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/PC.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/PC.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/PC.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/PC.c ****     *     When interrupt appear with PC_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/PC.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/PC.c ****     *
1432:.\Generated_Source\PSoC5/PC.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/PC.c ****     *  The PC_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/PC.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/PC.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/PC.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/PC.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/PC.c ****     *
1439:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/PC.c ****     void PC_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/PC.c ****     {
 1546              		.loc 1 1441 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 16
 1549              		@ frame_needed = 1, uses_anonymous_args = 0
 1550              		@ link register save eliminated.
 1551 0000 80B4     		push	{r7}
 1552              		.cfi_def_cfa_offset 4
 1553              		.cfi_offset 7, -4
 1554 0002 85B0     		sub	sp, sp, #20
 1555              		.cfi_def_cfa_offset 24
 1556 0004 00AF     		add	r7, sp, #0
 1557              		.cfi_def_cfa_register 7
 1558 0006 0346     		mov	r3, r0
 1559 0008 FB71     		strb	r3, [r7, #7]
1442:.\Generated_Source\PSoC5/PC.c **** 
1443:.\Generated_Source\PSoC5/PC.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/PC.c ****         if(PC_initVar != 0u)
 1560              		.loc 1 1444 0
 1561 000a 1F4B     		ldr	r3, .L115
 1562 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1563 000e 002B     		cmp	r3, #0
 1564 0010 35D0     		beq	.L107
 1565              	.LBB2:
1445:.\Generated_Source\PSoC5/PC.c ****         {
1446:.\Generated_Source\PSoC5/PC.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/PC.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/PC.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/PC.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 54


1450:.\Generated_Source\PSoC5/PC.c ****         #if(PC_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/PC.c **** 
1452:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/PC.c ****             {
1455:.\Generated_Source\PSoC5/PC.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/PC.c ****                 PC_WriteControlRegister(PC_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/PC.c ****                                                       PC_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/PC.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/PC.c ****                 PC_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/PC.c **** 
1461:.\Generated_Source\PSoC5/PC.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/PC.c ****                 {
1463:.\Generated_Source\PSoC5/PC.c ****                     tmpStat = PC_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/PC.c ****                 }
1465:.\Generated_Source\PSoC5/PC.c ****                 while((tmpStat & PC_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/PC.c ****             }
1467:.\Generated_Source\PSoC5/PC.c **** 
1468:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/PC.c ****             {
1471:.\Generated_Source\PSoC5/PC.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/PC.c ****                 {
1473:.\Generated_Source\PSoC5/PC.c ****                     tmpStat = PC_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/PC.c ****                 }
1475:.\Generated_Source\PSoC5/PC.c ****                 while(((uint8)~tmpStat & PC_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/PC.c ****             }
1477:.\Generated_Source\PSoC5/PC.c **** 
1478:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_REINIT) ||
1480:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/PC.c ****             {
1482:.\Generated_Source\PSoC5/PC.c ****                 PC_WriteControlRegister(PC_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/PC.c ****                                               (uint8)~PC_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/PC.c ****             }
1485:.\Generated_Source\PSoC5/PC.c **** 
1486:.\Generated_Source\PSoC5/PC.c ****         #else /* PC_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/PC.c **** 
1488:.\Generated_Source\PSoC5/PC.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/PC.c **** 
1490:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_SEND_BREAK) ||
 1566              		.loc 1 1490 0
 1567 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1568 0014 002B     		cmp	r3, #0
 1569 0016 02D0     		beq	.L109
 1570              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1571 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1572 001a 032B     		cmp	r3, #3
 1573 001c 12D1     		bne	.L110
 1574              	.L109:
1491:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/PC.c ****             {
1493:.\Generated_Source\PSoC5/PC.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/PC.c ****                 #if( (PC_PARITY_TYPE != PC__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/PC.c ****                                     (PC_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/PC.c ****                     PC_WriteControlRegister(PC_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/PC.c ****                                                           PC_CTRL_HD_SEND_BREAK);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 55


1498:.\Generated_Source\PSoC5/PC.c ****                 #endif /* End PC_PARITY_TYPE != PC__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/PC.c **** 
1500:.\Generated_Source\PSoC5/PC.c ****                 #if(PC_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/PC.c ****                     txPeriod = PC_TXBITCLKTX_COMPLETE_REG;
 1575              		.loc 1 1501 0 is_stmt 1
 1576 001e 1B4B     		ldr	r3, .L115+4
 1577 0020 1B78     		ldrb	r3, [r3]
 1578 0022 DAB2     		uxtb	r2, r3
 1579 0024 1A4B     		ldr	r3, .L115+8
 1580 0026 1A70     		strb	r2, [r3]
1502:.\Generated_Source\PSoC5/PC.c ****                     PC_TXBITCLKTX_COMPLETE_REG = PC_TXBITCTR_BREAKBITS;
 1581              		.loc 1 1502 0
 1582 0028 184B     		ldr	r3, .L115+4
 1583 002a 6722     		movs	r2, #103
 1584 002c 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/PC.c ****                 #else
1504:.\Generated_Source\PSoC5/PC.c ****                     txPeriod = PC_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/PC.c ****                     PC_TXBITCTR_PERIOD_REG = PC_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/PC.c ****                 #endif /* End PC_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/PC.c **** 
1508:.\Generated_Source\PSoC5/PC.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/PC.c ****                 PC_TXDATA_REG = 0u;
 1585              		.loc 1 1509 0
 1586 002e 194B     		ldr	r3, .L115+12
 1587 0030 0022     		movs	r2, #0
 1588 0032 1A70     		strb	r2, [r3]
 1589              	.L111:
1510:.\Generated_Source\PSoC5/PC.c **** 
1511:.\Generated_Source\PSoC5/PC.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/PC.c ****                 {
1513:.\Generated_Source\PSoC5/PC.c ****                     tmpStat = PC_TXSTATUS_REG;
 1590              		.loc 1 1513 0 discriminator 1
 1591 0034 184B     		ldr	r3, .L115+16
 1592 0036 1B78     		ldrb	r3, [r3]
 1593 0038 FB73     		strb	r3, [r7, #15]
1514:.\Generated_Source\PSoC5/PC.c ****                 }
1515:.\Generated_Source\PSoC5/PC.c ****                 while((tmpStat & PC_TX_STS_FIFO_EMPTY) != 0u);
 1594              		.loc 1 1515 0 discriminator 1
 1595 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1596 003c 03F00203 		and	r3, r3, #2
 1597 0040 002B     		cmp	r3, #0
 1598 0042 F7D1     		bne	.L111
 1599              	.L110:
1516:.\Generated_Source\PSoC5/PC.c ****             }
1517:.\Generated_Source\PSoC5/PC.c **** 
1518:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_WAIT_FOR_COMPLETE_REINIT) ||
 1600              		.loc 1 1518 0
 1601 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1602 0046 012B     		cmp	r3, #1
 1603 0048 02D0     		beq	.L112
 1604              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1605 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1606 004c 032B     		cmp	r3, #3
 1607 004e 09D1     		bne	.L113
 1608              	.L112:
1519:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/PC.c ****             {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 56


1521:.\Generated_Source\PSoC5/PC.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/PC.c ****                 {
1523:.\Generated_Source\PSoC5/PC.c ****                     tmpStat = PC_TXSTATUS_REG;
 1609              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1610 0050 114B     		ldr	r3, .L115+16
 1611 0052 1B78     		ldrb	r3, [r3]
 1612 0054 FB73     		strb	r3, [r7, #15]
1524:.\Generated_Source\PSoC5/PC.c ****                 }
1525:.\Generated_Source\PSoC5/PC.c ****                 while(((uint8)~tmpStat & PC_TX_STS_COMPLETE) != 0u);
 1613              		.loc 1 1525 0 discriminator 1
 1614 0056 FB7B     		ldrb	r3, [r7, #15]
 1615 0058 DB43     		mvns	r3, r3
 1616 005a DBB2     		uxtb	r3, r3
 1617 005c 03F00103 		and	r3, r3, #1
 1618 0060 002B     		cmp	r3, #0
 1619 0062 F5D1     		bne	.L112
 1620              	.L113:
1526:.\Generated_Source\PSoC5/PC.c ****             }
1527:.\Generated_Source\PSoC5/PC.c **** 
1528:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_WAIT_FOR_COMPLETE_REINIT) ||
 1621              		.loc 1 1528 0
 1622 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1623 0066 012B     		cmp	r3, #1
 1624 0068 05D0     		beq	.L114
 1625              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1626 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1627 006c 022B     		cmp	r3, #2
 1628 006e 02D0     		beq	.L114
1529:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_REINIT) ||
 1629              		.loc 1 1529 0 is_stmt 1
 1630 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1631 0072 032B     		cmp	r3, #3
 1632 0074 03D1     		bne	.L107
 1633              	.L114:
1530:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/PC.c ****             {
1532:.\Generated_Source\PSoC5/PC.c **** 
1533:.\Generated_Source\PSoC5/PC.c ****             #if(PC_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/PC.c ****                 PC_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1634              		.loc 1 1534 0
 1635 0076 054B     		ldr	r3, .L115+4
 1636 0078 054A     		ldr	r2, .L115+8
 1637 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1638 007c 1A70     		strb	r2, [r3]
 1639              	.L107:
 1640              	.LBE2:
1535:.\Generated_Source\PSoC5/PC.c ****             #else
1536:.\Generated_Source\PSoC5/PC.c ****                 PC_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/PC.c ****             #endif /* End PC_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/PC.c **** 
1539:.\Generated_Source\PSoC5/PC.c ****             #if( (PC_PARITY_TYPE != PC__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/PC.c ****                  (PC_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/PC.c ****                 PC_WriteControlRegister(PC_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/PC.c ****                                                       (uint8) ~PC_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/PC.c ****             #endif /* End PC_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/PC.c ****             }
1545:.\Generated_Source\PSoC5/PC.c ****         #endif    /* End PC_HD_ENABLED */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 57


1546:.\Generated_Source\PSoC5/PC.c ****         }
1547:.\Generated_Source\PSoC5/PC.c ****     }
 1641              		.loc 1 1547 0
 1642 007e 1437     		adds	r7, r7, #20
 1643 0080 BD46     		mov	sp, r7
 1644              		@ sp needed
 1645 0082 5DF8047B 		ldr	r7, [sp], #4
 1646 0086 7047     		bx	lr
 1647              	.L116:
 1648              		.align	2
 1649              	.L115:
 1650 0088 00000000 		.word	PC_initVar
 1651 008c 34640040 		.word	1073767476
 1652 0090 08000000 		.word	txPeriod.5011
 1653 0094 43640040 		.word	1073767491
 1654 0098 64640040 		.word	1073767524
 1655              		.cfi_endproc
 1656              	.LFE25:
 1657              		.size	PC_SendBreak, .-PC_SendBreak
 1658              		.section	.text.PC_SetTxAddressMode,"ax",%progbits
 1659              		.align	2
 1660              		.global	PC_SetTxAddressMode
 1661              		.thumb
 1662              		.thumb_func
 1663              		.type	PC_SetTxAddressMode, %function
 1664              	PC_SetTxAddressMode:
 1665              	.LFB26:
1548:.\Generated_Source\PSoC5/PC.c **** 
1549:.\Generated_Source\PSoC5/PC.c **** 
1550:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetTxAddressMode
1552:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/PC.c ****     *
1554:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1555:.\Generated_Source\PSoC5/PC.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/PC.c ****     *
1557:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/PC.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/PC.c ****     *       PC_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/PC.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/PC.c ****     *       PC_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/PC.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/PC.c ****     *
1564:.\Generated_Source\PSoC5/PC.c ****     * Return:
1565:.\Generated_Source\PSoC5/PC.c ****     *  None.
1566:.\Generated_Source\PSoC5/PC.c ****     *
1567:.\Generated_Source\PSoC5/PC.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/PC.c ****     *  This function sets and clears PC_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/PC.c ****     *  register.
1570:.\Generated_Source\PSoC5/PC.c ****     *
1571:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/PC.c ****     void PC_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/PC.c ****     {
 1666              		.loc 1 1573 0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 8
 1669              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 58


 1670              		@ link register save eliminated.
 1671 0000 80B4     		push	{r7}
 1672              		.cfi_def_cfa_offset 4
 1673              		.cfi_offset 7, -4
 1674 0002 83B0     		sub	sp, sp, #12
 1675              		.cfi_def_cfa_offset 16
 1676 0004 00AF     		add	r7, sp, #0
 1677              		.cfi_def_cfa_register 7
 1678 0006 0346     		mov	r3, r0
 1679 0008 FB71     		strb	r3, [r7, #7]
1574:.\Generated_Source\PSoC5/PC.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC5/PC.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC5/PC.c ****         {
1577:.\Generated_Source\PSoC5/PC.c ****         #if( PC_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC5/PC.c ****             PC_WriteControlRegister(PC_ReadControlRegister() |
1579:.\Generated_Source\PSoC5/PC.c ****                                                   PC_CTRL_MARK);
1580:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC5/PC.c ****         }
1582:.\Generated_Source\PSoC5/PC.c ****         else
1583:.\Generated_Source\PSoC5/PC.c ****         {
1584:.\Generated_Source\PSoC5/PC.c ****         #if( PC_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC5/PC.c ****             PC_WriteControlRegister(PC_ReadControlRegister() &
1586:.\Generated_Source\PSoC5/PC.c ****                                                   (uint8) ~PC_CTRL_MARK);
1587:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC5/PC.c ****         }
1589:.\Generated_Source\PSoC5/PC.c ****     }
 1680              		.loc 1 1589 0
 1681 000a 0C37     		adds	r7, r7, #12
 1682 000c BD46     		mov	sp, r7
 1683              		@ sp needed
 1684 000e 5DF8047B 		ldr	r7, [sp], #4
 1685 0012 7047     		bx	lr
 1686              		.cfi_endproc
 1687              	.LFE26:
 1688              		.size	PC_SetTxAddressMode, .-PC_SetTxAddressMode
 1689              		.bss
 1690              	txPeriod.5011:
 1691 0008 00       		.space	1
 1692 0009 00       		.text
 1693              	.Letext0:
 1694              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1695              		.section	.debug_info,"",%progbits
 1696              	.Ldebug_info0:
 1697 0000 E9050000 		.4byte	0x5e9
 1698 0004 0400     		.2byte	0x4
 1699 0006 00000000 		.4byte	.Ldebug_abbrev0
 1700 000a 04       		.byte	0x4
 1701 000b 01       		.uleb128 0x1
 1702 000c 1E020000 		.4byte	.LASF72
 1703 0010 01       		.byte	0x1
 1704 0011 EF010000 		.4byte	.LASF73
 1705 0015 36030000 		.4byte	.LASF74
 1706 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1707 001d 00000000 		.4byte	0
 1708 0021 00000000 		.4byte	.Ldebug_line0
 1709 0025 02       		.uleb128 0x2
 1710 0026 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 59


 1711 0027 06       		.byte	0x6
 1712 0028 83000000 		.4byte	.LASF0
 1713 002c 02       		.uleb128 0x2
 1714 002d 01       		.byte	0x1
 1715 002e 08       		.byte	0x8
 1716 002f CD020000 		.4byte	.LASF1
 1717 0033 02       		.uleb128 0x2
 1718 0034 02       		.byte	0x2
 1719 0035 05       		.byte	0x5
 1720 0036 02030000 		.4byte	.LASF2
 1721 003a 02       		.uleb128 0x2
 1722 003b 02       		.byte	0x2
 1723 003c 07       		.byte	0x7
 1724 003d A6010000 		.4byte	.LASF3
 1725 0041 02       		.uleb128 0x2
 1726 0042 04       		.byte	0x4
 1727 0043 05       		.byte	0x5
 1728 0044 CE000000 		.4byte	.LASF4
 1729 0048 02       		.uleb128 0x2
 1730 0049 04       		.byte	0x4
 1731 004a 07       		.byte	0x7
 1732 004b 7B010000 		.4byte	.LASF5
 1733 004f 02       		.uleb128 0x2
 1734 0050 08       		.byte	0x8
 1735 0051 05       		.byte	0x5
 1736 0052 75000000 		.4byte	.LASF6
 1737 0056 02       		.uleb128 0x2
 1738 0057 08       		.byte	0x8
 1739 0058 07       		.byte	0x7
 1740 0059 53000000 		.4byte	.LASF7
 1741 005d 03       		.uleb128 0x3
 1742 005e 04       		.byte	0x4
 1743 005f 05       		.byte	0x5
 1744 0060 696E7400 		.ascii	"int\000"
 1745 0064 02       		.uleb128 0x2
 1746 0065 04       		.byte	0x4
 1747 0066 07       		.byte	0x7
 1748 0067 5F010000 		.4byte	.LASF8
 1749 006b 04       		.uleb128 0x4
 1750 006c D7000000 		.4byte	.LASF9
 1751 0070 02       		.byte	0x2
 1752 0071 B4       		.byte	0xb4
 1753 0072 2C000000 		.4byte	0x2c
 1754 0076 04       		.uleb128 0x4
 1755 0077 00000000 		.4byte	.LASF10
 1756 007b 02       		.byte	0x2
 1757 007c B5       		.byte	0xb5
 1758 007d 3A000000 		.4byte	0x3a
 1759 0081 04       		.uleb128 0x4
 1760 0082 0C010000 		.4byte	.LASF11
 1761 0086 02       		.byte	0x2
 1762 0087 B6       		.byte	0xb6
 1763 0088 48000000 		.4byte	0x48
 1764 008c 02       		.uleb128 0x2
 1765 008d 04       		.byte	0x4
 1766 008e 04       		.byte	0x4
 1767 008f C2020000 		.4byte	.LASF12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 60


 1768 0093 02       		.uleb128 0x2
 1769 0094 08       		.byte	0x8
 1770 0095 04       		.byte	0x4
 1771 0096 DD000000 		.4byte	.LASF13
 1772 009a 04       		.uleb128 0x4
 1773 009b C1030000 		.4byte	.LASF14
 1774 009f 02       		.byte	0x2
 1775 00a0 C5       		.byte	0xc5
 1776 00a1 A5000000 		.4byte	0xa5
 1777 00a5 02       		.uleb128 0x2
 1778 00a6 01       		.byte	0x1
 1779 00a7 08       		.byte	0x8
 1780 00a8 94030000 		.4byte	.LASF15
 1781 00ac 05       		.uleb128 0x5
 1782 00ad C8020000 		.4byte	.LASF16
 1783 00b1 02       		.byte	0x2
 1784 00b2 5E01     		.2byte	0x15e
 1785 00b4 B8000000 		.4byte	0xb8
 1786 00b8 06       		.uleb128 0x6
 1787 00b9 6B000000 		.4byte	0x6b
 1788 00bd 06       		.uleb128 0x6
 1789 00be 76000000 		.4byte	0x76
 1790 00c2 05       		.uleb128 0x5
 1791 00c3 E1010000 		.4byte	.LASF17
 1792 00c7 02       		.byte	0x2
 1793 00c8 6001     		.2byte	0x160
 1794 00ca CE000000 		.4byte	0xce
 1795 00ce 06       		.uleb128 0x6
 1796 00cf 81000000 		.4byte	0x81
 1797 00d3 02       		.uleb128 0x2
 1798 00d4 04       		.byte	0x4
 1799 00d5 07       		.byte	0x7
 1800 00d6 0D020000 		.4byte	.LASF18
 1801 00da 07       		.uleb128 0x7
 1802 00db 07000000 		.4byte	.LASF19
 1803 00df 01       		.byte	0x1
 1804 00e0 4C       		.byte	0x4c
 1805 00e1 00000000 		.4byte	.LFB0
 1806 00e5 20000000 		.4byte	.LFE0-.LFB0
 1807 00e9 01       		.uleb128 0x1
 1808 00ea 9C       		.byte	0x9c
 1809 00eb 07       		.uleb128 0x7
 1810 00ec D8030000 		.4byte	.LASF20
 1811 00f0 01       		.byte	0x1
 1812 00f1 6A       		.byte	0x6a
 1813 00f2 00000000 		.4byte	.LFB1
 1814 00f6 58000000 		.4byte	.LFE1-.LFB1
 1815 00fa 01       		.uleb128 0x1
 1816 00fb 9C       		.byte	0x9c
 1817 00fc 08       		.uleb128 0x8
 1818 00fd 1C040000 		.4byte	.LASF21
 1819 0101 01       		.byte	0x1
 1820 0102 B7       		.byte	0xb7
 1821 0103 00000000 		.4byte	.LFB2
 1822 0107 68000000 		.4byte	.LFE2-.LFB2
 1823 010b 01       		.uleb128 0x1
 1824 010c 9C       		.byte	0x9c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 61


 1825 010d 20010000 		.4byte	0x120
 1826 0111 09       		.uleb128 0x9
 1827 0112 F0030000 		.4byte	.LASF23
 1828 0116 01       		.byte	0x1
 1829 0117 B9       		.byte	0xb9
 1830 0118 6B000000 		.4byte	0x6b
 1831 011c 02       		.uleb128 0x2
 1832 011d 91       		.byte	0x91
 1833 011e 77       		.sleb128 -9
 1834 011f 00       		.byte	0
 1835 0120 08       		.uleb128 0x8
 1836 0121 D9010000 		.4byte	.LASF22
 1837 0125 01       		.byte	0x1
 1838 0126 F0       		.byte	0xf0
 1839 0127 00000000 		.4byte	.LFB3
 1840 012b 68000000 		.4byte	.LFE3-.LFB3
 1841 012f 01       		.uleb128 0x1
 1842 0130 9C       		.byte	0x9c
 1843 0131 44010000 		.4byte	0x144
 1844 0135 09       		.uleb128 0x9
 1845 0136 F0030000 		.4byte	.LASF23
 1846 013a 01       		.byte	0x1
 1847 013b F2       		.byte	0xf2
 1848 013c 6B000000 		.4byte	0x6b
 1849 0140 02       		.uleb128 0x2
 1850 0141 91       		.byte	0x91
 1851 0142 77       		.sleb128 -9
 1852 0143 00       		.byte	0
 1853 0144 0A       		.uleb128 0xa
 1854 0145 8F000000 		.4byte	.LASF49
 1855 0149 01       		.byte	0x1
 1856 014a 2701     		.2byte	0x127
 1857 014c 6B000000 		.4byte	0x6b
 1858 0150 00000000 		.4byte	.LFB4
 1859 0154 10000000 		.4byte	.LFE4-.LFB4
 1860 0158 01       		.uleb128 0x1
 1861 0159 9C       		.byte	0x9c
 1862 015a 0B       		.uleb128 0xb
 1863 015b A9030000 		.4byte	.LASF24
 1864 015f 01       		.byte	0x1
 1865 0160 3F01     		.2byte	0x13f
 1866 0162 00000000 		.4byte	.LFB5
 1867 0166 14000000 		.4byte	.LFE5-.LFB5
 1868 016a 01       		.uleb128 0x1
 1869 016b 9C       		.byte	0x9c
 1870 016c 80010000 		.4byte	0x180
 1871 0170 0C       		.uleb128 0xc
 1872 0171 24010000 		.4byte	.LASF26
 1873 0175 01       		.byte	0x1
 1874 0176 3F01     		.2byte	0x13f
 1875 0178 6B000000 		.4byte	0x6b
 1876 017c 02       		.uleb128 0x2
 1877 017d 91       		.byte	0x91
 1878 017e 77       		.sleb128 -9
 1879 017f 00       		.byte	0
 1880 0180 0B       		.uleb128 0xb
 1881 0181 EC020000 		.4byte	.LASF25
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 62


 1882 0185 01       		.byte	0x1
 1883 0186 6701     		.2byte	0x167
 1884 0188 00000000 		.4byte	.LFB6
 1885 018c 20000000 		.4byte	.LFE6-.LFB6
 1886 0190 01       		.uleb128 0x1
 1887 0191 9C       		.byte	0x9c
 1888 0192 A6010000 		.4byte	0x1a6
 1889 0196 0C       		.uleb128 0xc
 1890 0197 D2010000 		.4byte	.LASF27
 1891 019b 01       		.byte	0x1
 1892 019c 6701     		.2byte	0x167
 1893 019e 6B000000 		.4byte	0x6b
 1894 01a2 02       		.uleb128 0x2
 1895 01a3 91       		.byte	0x91
 1896 01a4 77       		.sleb128 -9
 1897 01a5 00       		.byte	0
 1898 01a6 0D       		.uleb128 0xd
 1899 01a7 B4020000 		.4byte	.LASF31
 1900 01ab 01       		.byte	0x1
 1901 01ac 8801     		.2byte	0x188
 1902 01ae 6B000000 		.4byte	0x6b
 1903 01b2 00000000 		.4byte	.LFB7
 1904 01b6 98000000 		.4byte	.LFE7-.LFB7
 1905 01ba 01       		.uleb128 0x1
 1906 01bb 9C       		.byte	0x9c
 1907 01bc EE010000 		.4byte	0x1ee
 1908 01c0 0E       		.uleb128 0xe
 1909 01c1 7A030000 		.4byte	.LASF28
 1910 01c5 01       		.byte	0x1
 1911 01c6 8A01     		.2byte	0x18a
 1912 01c8 6B000000 		.4byte	0x6b
 1913 01cc 02       		.uleb128 0x2
 1914 01cd 91       		.byte	0x91
 1915 01ce 77       		.sleb128 -9
 1916 01cf 0E       		.uleb128 0xe
 1917 01d0 E0030000 		.4byte	.LASF29
 1918 01d4 01       		.byte	0x1
 1919 01d5 8E01     		.2byte	0x18e
 1920 01d7 76000000 		.4byte	0x76
 1921 01db 02       		.uleb128 0x2
 1922 01dc 91       		.byte	0x91
 1923 01dd 74       		.sleb128 -12
 1924 01de 0E       		.uleb128 0xe
 1925 01df 9A020000 		.4byte	.LASF30
 1926 01e3 01       		.byte	0x1
 1927 01e4 8F01     		.2byte	0x18f
 1928 01e6 76000000 		.4byte	0x76
 1929 01ea 02       		.uleb128 0x2
 1930 01eb 91       		.byte	0x91
 1931 01ec 72       		.sleb128 -14
 1932 01ed 00       		.byte	0
 1933 01ee 0D       		.uleb128 0xd
 1934 01ef B9010000 		.4byte	.LASF32
 1935 01f3 01       		.byte	0x1
 1936 01f4 E501     		.2byte	0x1e5
 1937 01f6 6B000000 		.4byte	0x6b
 1938 01fa 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 63


 1939 01fe 40000000 		.4byte	.LFE8-.LFB8
 1940 0202 01       		.uleb128 0x1
 1941 0203 9C       		.byte	0x9c
 1942 0204 18020000 		.4byte	0x218
 1943 0208 0E       		.uleb128 0xe
 1944 0209 01040000 		.4byte	.LASF33
 1945 020d 01       		.byte	0x1
 1946 020e E701     		.2byte	0x1e7
 1947 0210 6B000000 		.4byte	0x6b
 1948 0214 02       		.uleb128 0x2
 1949 0215 91       		.byte	0x91
 1950 0216 77       		.sleb128 -9
 1951 0217 00       		.byte	0
 1952 0218 0D       		.uleb128 0xd
 1953 0219 10000000 		.4byte	.LASF34
 1954 021d 01       		.byte	0x1
 1955 021e 1402     		.2byte	0x214
 1956 0220 6B000000 		.4byte	0x6b
 1957 0224 00000000 		.4byte	.LFB9
 1958 0228 BC000000 		.4byte	.LFE9-.LFB9
 1959 022c 01       		.uleb128 0x1
 1960 022d 9C       		.byte	0x9c
 1961 022e 6F020000 		.4byte	0x26f
 1962 0232 0E       		.uleb128 0xe
 1963 0233 7A030000 		.4byte	.LASF28
 1964 0237 01       		.byte	0x1
 1965 0238 1602     		.2byte	0x216
 1966 023a 6B000000 		.4byte	0x6b
 1967 023e 02       		.uleb128 0x2
 1968 023f 91       		.byte	0x91
 1969 0240 77       		.sleb128 -9
 1970 0241 0E       		.uleb128 0xe
 1971 0242 AB020000 		.4byte	.LASF35
 1972 0246 01       		.byte	0x1
 1973 0247 1702     		.2byte	0x217
 1974 0249 6B000000 		.4byte	0x6b
 1975 024d 02       		.uleb128 0x2
 1976 024e 91       		.byte	0x91
 1977 024f 71       		.sleb128 -15
 1978 0250 0E       		.uleb128 0xe
 1979 0251 E0030000 		.4byte	.LASF29
 1980 0255 01       		.byte	0x1
 1981 0256 1A02     		.2byte	0x21a
 1982 0258 76000000 		.4byte	0x76
 1983 025c 02       		.uleb128 0x2
 1984 025d 91       		.byte	0x91
 1985 025e 74       		.sleb128 -12
 1986 025f 0E       		.uleb128 0xe
 1987 0260 9A020000 		.4byte	.LASF30
 1988 0264 01       		.byte	0x1
 1989 0265 1B02     		.2byte	0x21b
 1990 0267 76000000 		.4byte	0x76
 1991 026b 02       		.uleb128 0x2
 1992 026c 91       		.byte	0x91
 1993 026d 72       		.sleb128 -14
 1994 026e 00       		.byte	0
 1995 026f 0F       		.uleb128 0xf
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 64


 1996 0270 26000000 		.4byte	.LASF36
 1997 0274 01       		.byte	0x1
 1998 0275 7A02     		.2byte	0x27a
 1999 0277 76000000 		.4byte	0x76
 2000 027b 00000000 		.4byte	.LFB10
 2001 027f 44000000 		.4byte	.LFE10-.LFB10
 2002 0283 01       		.uleb128 0x1
 2003 0284 9C       		.byte	0x9c
 2004 0285 99020000 		.4byte	0x299
 2005 0289 0E       		.uleb128 0xe
 2006 028a 6C010000 		.4byte	.LASF37
 2007 028e 01       		.byte	0x1
 2008 028f 7E02     		.2byte	0x27e
 2009 0291 76000000 		.4byte	0x76
 2010 0295 02       		.uleb128 0x2
 2011 0296 91       		.byte	0x91
 2012 0297 6E       		.sleb128 -18
 2013 0298 00       		.byte	0
 2014 0299 0D       		.uleb128 0xd
 2015 029a 81030000 		.4byte	.LASF38
 2016 029e 01       		.byte	0x1
 2017 029f AB02     		.2byte	0x2ab
 2018 02a1 76000000 		.4byte	0x76
 2019 02a5 00000000 		.4byte	.LFB11
 2020 02a9 94000000 		.4byte	.LFE11-.LFB11
 2021 02ad 01       		.uleb128 0x1
 2022 02ae 9C       		.byte	0x9c
 2023 02af C3020000 		.4byte	0x2c3
 2024 02b3 0E       		.uleb128 0xe
 2025 02b4 A1010000 		.4byte	.LASF39
 2026 02b8 01       		.byte	0x1
 2027 02b9 AE02     		.2byte	0x2ae
 2028 02bb 76000000 		.4byte	0x76
 2029 02bf 02       		.uleb128 0x2
 2030 02c0 91       		.byte	0x91
 2031 02c1 76       		.sleb128 -10
 2032 02c2 00       		.byte	0
 2033 02c3 10       		.uleb128 0x10
 2034 02c4 FB000000 		.4byte	.LASF40
 2035 02c8 01       		.byte	0x1
 2036 02c9 F502     		.2byte	0x2f5
 2037 02cb 00000000 		.4byte	.LFB12
 2038 02cf 7C000000 		.4byte	.LFE12-.LFB12
 2039 02d3 01       		.uleb128 0x1
 2040 02d4 9C       		.byte	0x9c
 2041 02d5 E9020000 		.4byte	0x2e9
 2042 02d9 0E       		.uleb128 0xe
 2043 02da F0030000 		.4byte	.LASF23
 2044 02de 01       		.byte	0x1
 2045 02df F702     		.2byte	0x2f7
 2046 02e1 6B000000 		.4byte	0x6b
 2047 02e5 02       		.uleb128 0x2
 2048 02e6 91       		.byte	0x91
 2049 02e7 77       		.sleb128 -9
 2050 02e8 00       		.byte	0
 2051 02e9 0B       		.uleb128 0xb
 2052 02ea 08040000 		.4byte	.LASF41
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 65


 2053 02ee 01       		.byte	0x1
 2054 02ef 2D03     		.2byte	0x32d
 2055 02f1 00000000 		.4byte	.LFB13
 2056 02f5 14000000 		.4byte	.LFE13-.LFB13
 2057 02f9 01       		.uleb128 0x1
 2058 02fa 9C       		.byte	0x9c
 2059 02fb 0F030000 		.4byte	0x30f
 2060 02ff 0C       		.uleb128 0xc
 2061 0300 E4000000 		.4byte	.LASF42
 2062 0304 01       		.byte	0x1
 2063 0305 2D03     		.2byte	0x32d
 2064 0307 6B000000 		.4byte	0x6b
 2065 030b 02       		.uleb128 0x2
 2066 030c 91       		.byte	0x91
 2067 030d 77       		.sleb128 -9
 2068 030e 00       		.byte	0
 2069 030f 0B       		.uleb128 0xb
 2070 0310 C7030000 		.4byte	.LASF43
 2071 0314 01       		.byte	0x1
 2072 0315 5903     		.2byte	0x359
 2073 0317 00000000 		.4byte	.LFB14
 2074 031b 20000000 		.4byte	.LFE14-.LFB14
 2075 031f 01       		.uleb128 0x1
 2076 0320 9C       		.byte	0x9c
 2077 0321 35030000 		.4byte	0x335
 2078 0325 0C       		.uleb128 0xc
 2079 0326 16020000 		.4byte	.LASF44
 2080 032a 01       		.byte	0x1
 2081 032b 5903     		.2byte	0x359
 2082 032d 6B000000 		.4byte	0x6b
 2083 0331 02       		.uleb128 0x2
 2084 0332 91       		.byte	0x91
 2085 0333 77       		.sleb128 -9
 2086 0334 00       		.byte	0
 2087 0335 0B       		.uleb128 0xb
 2088 0336 2C010000 		.4byte	.LASF45
 2089 033a 01       		.byte	0x1
 2090 033b 6D03     		.2byte	0x36d
 2091 033d 00000000 		.4byte	.LFB15
 2092 0341 20000000 		.4byte	.LFE15-.LFB15
 2093 0345 01       		.uleb128 0x1
 2094 0346 9C       		.byte	0x9c
 2095 0347 5B030000 		.4byte	0x35b
 2096 034b 0C       		.uleb128 0xc
 2097 034c 16020000 		.4byte	.LASF44
 2098 0350 01       		.byte	0x1
 2099 0351 6D03     		.2byte	0x36d
 2100 0353 6B000000 		.4byte	0x6b
 2101 0357 02       		.uleb128 0x2
 2102 0358 91       		.byte	0x91
 2103 0359 77       		.sleb128 -9
 2104 035a 00       		.byte	0
 2105 035b 0B       		.uleb128 0xb
 2106 035c 4B040000 		.4byte	.LASF46
 2107 0360 01       		.byte	0x1
 2108 0361 8C03     		.2byte	0x38c
 2109 0363 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 66


 2110 0367 20000000 		.4byte	.LFE16-.LFB16
 2111 036b 01       		.uleb128 0x1
 2112 036c 9C       		.byte	0x9c
 2113 036d 81030000 		.4byte	0x381
 2114 0371 0C       		.uleb128 0xc
 2115 0372 D2010000 		.4byte	.LASF27
 2116 0376 01       		.byte	0x1
 2117 0377 8C03     		.2byte	0x38c
 2118 0379 6B000000 		.4byte	0x6b
 2119 037d 02       		.uleb128 0x2
 2120 037e 91       		.byte	0x91
 2121 037f 77       		.sleb128 -9
 2122 0380 00       		.byte	0
 2123 0381 0B       		.uleb128 0xb
 2124 0382 61040000 		.4byte	.LASF47
 2125 0386 01       		.byte	0x1
 2126 0387 AE03     		.2byte	0x3ae
 2127 0389 00000000 		.4byte	.LFB17
 2128 038d 2C000000 		.4byte	.LFE17-.LFB17
 2129 0391 01       		.uleb128 0x1
 2130 0392 9C       		.byte	0x9c
 2131 0393 A7030000 		.4byte	0x3a7
 2132 0397 0C       		.uleb128 0xc
 2133 0398 1B000000 		.4byte	.LASF48
 2134 039c 01       		.byte	0x1
 2135 039d AE03     		.2byte	0x3ae
 2136 039f 6B000000 		.4byte	0x6b
 2137 03a3 02       		.uleb128 0x2
 2138 03a4 91       		.byte	0x91
 2139 03a5 77       		.sleb128 -9
 2140 03a6 00       		.byte	0
 2141 03a7 0A       		.uleb128 0xa
 2142 03a8 99030000 		.4byte	.LASF50
 2143 03ac 01       		.byte	0x1
 2144 03ad EB03     		.2byte	0x3eb
 2145 03af 6B000000 		.4byte	0x6b
 2146 03b3 00000000 		.4byte	.LFB18
 2147 03b7 18000000 		.4byte	.LFE18-.LFB18
 2148 03bb 01       		.uleb128 0x1
 2149 03bc 9C       		.byte	0x9c
 2150 03bd 0B       		.uleb128 0xb
 2151 03be 6A000000 		.4byte	.LASF51
 2152 03c2 01       		.byte	0x1
 2153 03c3 1104     		.2byte	0x411
 2154 03c5 00000000 		.4byte	.LFB19
 2155 03c9 34000000 		.4byte	.LFE19-.LFB19
 2156 03cd 01       		.uleb128 0x1
 2157 03ce 9C       		.byte	0x9c
 2158 03cf E3030000 		.4byte	0x3e3
 2159 03d3 0C       		.uleb128 0xc
 2160 03d4 1B000000 		.4byte	.LASF48
 2161 03d8 01       		.byte	0x1
 2162 03d9 1104     		.2byte	0x411
 2163 03db 6B000000 		.4byte	0x6b
 2164 03df 02       		.uleb128 0x2
 2165 03e0 91       		.byte	0x91
 2166 03e1 77       		.sleb128 -9
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 67


 2167 03e2 00       		.byte	0
 2168 03e3 10       		.uleb128 0x10
 2169 03e4 3D010000 		.4byte	.LASF52
 2170 03e8 01       		.byte	0x1
 2171 03e9 7904     		.2byte	0x479
 2172 03eb 00000000 		.4byte	.LFB20
 2173 03ef 40000000 		.4byte	.LFE20-.LFB20
 2174 03f3 01       		.uleb128 0x1
 2175 03f4 9C       		.byte	0x9c
 2176 03f5 18040000 		.4byte	0x418
 2177 03f9 0C       		.uleb128 0xc
 2178 03fa 31000000 		.4byte	.LASF53
 2179 03fe 01       		.byte	0x1
 2180 03ff 7904     		.2byte	0x479
 2181 0401 18040000 		.4byte	0x418
 2182 0405 02       		.uleb128 0x2
 2183 0406 91       		.byte	0x91
 2184 0407 6C       		.sleb128 -20
 2185 0408 0E       		.uleb128 0xe
 2186 0409 C9010000 		.4byte	.LASF54
 2187 040d 01       		.byte	0x1
 2188 040e 7B04     		.2byte	0x47b
 2189 0410 76000000 		.4byte	0x76
 2190 0414 02       		.uleb128 0x2
 2191 0415 91       		.byte	0x91
 2192 0416 76       		.sleb128 -10
 2193 0417 00       		.byte	0
 2194 0418 11       		.uleb128 0x11
 2195 0419 04       		.byte	0x4
 2196 041a 1E040000 		.4byte	0x41e
 2197 041e 12       		.uleb128 0x12
 2198 041f 9A000000 		.4byte	0x9a
 2199 0423 10       		.uleb128 0x10
 2200 0424 C2000000 		.4byte	.LASF55
 2201 0428 01       		.byte	0x1
 2202 0429 A704     		.2byte	0x4a7
 2203 042b 00000000 		.4byte	.LFB21
 2204 042f 40000000 		.4byte	.LFE21-.LFB21
 2205 0433 01       		.uleb128 0x1
 2206 0434 9C       		.byte	0x9c
 2207 0435 67040000 		.4byte	0x467
 2208 0439 0C       		.uleb128 0xc
 2209 043a 31000000 		.4byte	.LASF53
 2210 043e 01       		.byte	0x1
 2211 043f A704     		.2byte	0x4a7
 2212 0441 67040000 		.4byte	0x467
 2213 0445 02       		.uleb128 0x2
 2214 0446 91       		.byte	0x91
 2215 0447 6C       		.sleb128 -20
 2216 0448 0C       		.uleb128 0xc
 2217 0449 20030000 		.4byte	.LASF56
 2218 044d 01       		.byte	0x1
 2219 044e A704     		.2byte	0x4a7
 2220 0450 6B000000 		.4byte	0x6b
 2221 0454 02       		.uleb128 0x2
 2222 0455 91       		.byte	0x91
 2223 0456 6B       		.sleb128 -21
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 68


 2224 0457 0E       		.uleb128 0xe
 2225 0458 C9010000 		.4byte	.LASF54
 2226 045c 01       		.byte	0x1
 2227 045d AA04     		.2byte	0x4aa
 2228 045f 6B000000 		.4byte	0x6b
 2229 0463 02       		.uleb128 0x2
 2230 0464 91       		.byte	0x91
 2231 0465 77       		.sleb128 -9
 2232 0466 00       		.byte	0
 2233 0467 11       		.uleb128 0x11
 2234 0468 04       		.byte	0x4
 2235 0469 6D040000 		.4byte	0x46d
 2236 046d 12       		.uleb128 0x12
 2237 046e 6B000000 		.4byte	0x6b
 2238 0472 10       		.uleb128 0x10
 2239 0473 F0000000 		.4byte	.LASF57
 2240 0477 01       		.byte	0x1
 2241 0478 CE04     		.2byte	0x4ce
 2242 047a 00000000 		.4byte	.LFB22
 2243 047e 30000000 		.4byte	.LFE22-.LFB22
 2244 0482 01       		.uleb128 0x1
 2245 0483 9C       		.byte	0x9c
 2246 0484 98040000 		.4byte	0x498
 2247 0488 0C       		.uleb128 0xc
 2248 0489 1B000000 		.4byte	.LASF48
 2249 048d 01       		.byte	0x1
 2250 048e CE04     		.2byte	0x4ce
 2251 0490 6B000000 		.4byte	0x6b
 2252 0494 02       		.uleb128 0x2
 2253 0495 91       		.byte	0x91
 2254 0496 77       		.sleb128 -9
 2255 0497 00       		.byte	0
 2256 0498 0D       		.uleb128 0xd
 2257 0499 AF000000 		.4byte	.LASF58
 2258 049d 01       		.byte	0x1
 2259 049e F904     		.2byte	0x4f9
 2260 04a0 6B000000 		.4byte	0x6b
 2261 04a4 00000000 		.4byte	.LFB23
 2262 04a8 44000000 		.4byte	.LFE23-.LFB23
 2263 04ac 01       		.uleb128 0x1
 2264 04ad 9C       		.byte	0x9c
 2265 04ae C2040000 		.4byte	0x4c2
 2266 04b2 0E       		.uleb128 0xe
 2267 04b3 A1010000 		.4byte	.LASF39
 2268 04b7 01       		.byte	0x1
 2269 04b8 FC04     		.2byte	0x4fc
 2270 04ba 6B000000 		.4byte	0x6b
 2271 04be 02       		.uleb128 0x2
 2272 04bf 91       		.byte	0x91
 2273 04c0 77       		.sleb128 -9
 2274 04c1 00       		.byte	0
 2275 04c2 10       		.uleb128 0x10
 2276 04c3 DB020000 		.4byte	.LASF59
 2277 04c7 01       		.byte	0x1
 2278 04c8 4A05     		.2byte	0x54a
 2279 04ca 00000000 		.4byte	.LFB24
 2280 04ce 40000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 69


 2281 04d2 01       		.uleb128 0x1
 2282 04d3 9C       		.byte	0x9c
 2283 04d4 E8040000 		.4byte	0x4e8
 2284 04d8 0E       		.uleb128 0xe
 2285 04d9 F0030000 		.4byte	.LASF23
 2286 04dd 01       		.byte	0x1
 2287 04de 4C05     		.2byte	0x54c
 2288 04e0 6B000000 		.4byte	0x6b
 2289 04e4 02       		.uleb128 0x2
 2290 04e5 91       		.byte	0x91
 2291 04e6 77       		.sleb128 -9
 2292 04e7 00       		.byte	0
 2293 04e8 0B       		.uleb128 0xb
 2294 04e9 4A010000 		.4byte	.LASF60
 2295 04ed 01       		.byte	0x1
 2296 04ee A005     		.2byte	0x5a0
 2297 04f0 00000000 		.4byte	.LFB25
 2298 04f4 9C000000 		.4byte	.LFE25-.LFB25
 2299 04f8 01       		.uleb128 0x1
 2300 04f9 9C       		.byte	0x9c
 2301 04fa 39050000 		.4byte	0x539
 2302 04fe 0C       		.uleb128 0xc
 2303 04ff 57010000 		.4byte	.LASF61
 2304 0503 01       		.byte	0x1
 2305 0504 A005     		.2byte	0x5a0
 2306 0506 6B000000 		.4byte	0x6b
 2307 050a 02       		.uleb128 0x2
 2308 050b 91       		.byte	0x91
 2309 050c 6F       		.sleb128 -17
 2310 050d 13       		.uleb128 0x13
 2311 050e 12000000 		.4byte	.LBB2
 2312 0512 6C000000 		.4byte	.LBE2-.LBB2
 2313 0516 0E       		.uleb128 0xe
 2314 0517 E7010000 		.4byte	.LASF62
 2315 051b 01       		.byte	0x1
 2316 051c A805     		.2byte	0x5a8
 2317 051e 6B000000 		.4byte	0x6b
 2318 0522 02       		.uleb128 0x2
 2319 0523 91       		.byte	0x91
 2320 0524 77       		.sleb128 -9
 2321 0525 0E       		.uleb128 0xe
 2322 0526 A6000000 		.4byte	.LASF63
 2323 052a 01       		.byte	0x1
 2324 052b D005     		.2byte	0x5d0
 2325 052d 6B000000 		.4byte	0x6b
 2326 0531 05       		.uleb128 0x5
 2327 0532 03       		.byte	0x3
 2328 0533 08000000 		.4byte	txPeriod.5011
 2329 0537 00       		.byte	0
 2330 0538 00       		.byte	0
 2331 0539 0B       		.uleb128 0xb
 2332 053a 0C030000 		.4byte	.LASF64
 2333 053e 01       		.byte	0x1
 2334 053f 2406     		.2byte	0x624
 2335 0541 00000000 		.4byte	.LFB26
 2336 0545 14000000 		.4byte	.LFE26-.LFB26
 2337 0549 01       		.uleb128 0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 70


 2338 054a 9C       		.byte	0x9c
 2339 054b 5F050000 		.4byte	0x55f
 2340 054f 0C       		.uleb128 0xc
 2341 0550 E4000000 		.4byte	.LASF42
 2342 0554 01       		.byte	0x1
 2343 0555 2406     		.2byte	0x624
 2344 0557 6B000000 		.4byte	0x6b
 2345 055b 02       		.uleb128 0x2
 2346 055c 91       		.byte	0x91
 2347 055d 77       		.sleb128 -9
 2348 055e 00       		.byte	0
 2349 055f 14       		.uleb128 0x14
 2350 0560 48000000 		.4byte	.LASF65
 2351 0564 01       		.byte	0x1
 2352 0565 1B       		.byte	0x1b
 2353 0566 6B000000 		.4byte	0x6b
 2354 056a 05       		.uleb128 0x5
 2355 056b 03       		.byte	0x3
 2356 056c 00000000 		.4byte	PC_initVar
 2357 0570 14       		.uleb128 0x14
 2358 0571 26040000 		.4byte	.LASF66
 2359 0575 01       		.byte	0x1
 2360 0576 24       		.byte	0x24
 2361 0577 6B000000 		.4byte	0x6b
 2362 057b 05       		.uleb128 0x5
 2363 057c 03       		.byte	0x3
 2364 057d 00000000 		.4byte	PC_errorStatus
 2365 0581 15       		.uleb128 0x15
 2366 0582 6B000000 		.4byte	0x6b
 2367 0586 92050000 		.4byte	0x592
 2368 058a 16       		.uleb128 0x16
 2369 058b D3000000 		.4byte	0xd3
 2370 058f DB05     		.2byte	0x5db
 2371 0591 00       		.byte	0
 2372 0592 14       		.uleb128 0x14
 2373 0593 2A030000 		.4byte	.LASF67
 2374 0597 01       		.byte	0x1
 2375 0598 25       		.byte	0x25
 2376 0599 A3050000 		.4byte	0x5a3
 2377 059d 05       		.uleb128 0x5
 2378 059e 03       		.byte	0x3
 2379 059f 00000000 		.4byte	PC_rxBuffer
 2380 05a3 06       		.uleb128 0x6
 2381 05a4 81050000 		.4byte	0x581
 2382 05a8 14       		.uleb128 0x14
 2383 05a9 38000000 		.4byte	.LASF68
 2384 05ad 01       		.byte	0x1
 2385 05ae 26       		.byte	0x26
 2386 05af BD000000 		.4byte	0xbd
 2387 05b3 05       		.uleb128 0x5
 2388 05b4 03       		.byte	0x3
 2389 05b5 00000000 		.4byte	PC_rxBufferRead
 2390 05b9 14       		.uleb128 0x14
 2391 05ba 13010000 		.4byte	.LASF69
 2392 05be 01       		.byte	0x1
 2393 05bf 27       		.byte	0x27
 2394 05c0 BD000000 		.4byte	0xbd
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 71


 2395 05c4 05       		.uleb128 0x5
 2396 05c5 03       		.byte	0x3
 2397 05c6 00000000 		.4byte	PC_rxBufferWrite
 2398 05ca 14       		.uleb128 0x14
 2399 05cb 35040000 		.4byte	.LASF70
 2400 05cf 01       		.byte	0x1
 2401 05d0 28       		.byte	0x28
 2402 05d1 B8000000 		.4byte	0xb8
 2403 05d5 05       		.uleb128 0x5
 2404 05d6 03       		.byte	0x3
 2405 05d7 00000000 		.4byte	PC_rxBufferLoopDetect
 2406 05db 14       		.uleb128 0x14
 2407 05dc 8D010000 		.4byte	.LASF71
 2408 05e0 01       		.byte	0x1
 2409 05e1 29       		.byte	0x29
 2410 05e2 B8000000 		.4byte	0xb8
 2411 05e6 05       		.uleb128 0x5
 2412 05e7 03       		.byte	0x3
 2413 05e8 00000000 		.4byte	PC_rxBufferOverflow
 2414 05ec 00       		.byte	0
 2415              		.section	.debug_abbrev,"",%progbits
 2416              	.Ldebug_abbrev0:
 2417 0000 01       		.uleb128 0x1
 2418 0001 11       		.uleb128 0x11
 2419 0002 01       		.byte	0x1
 2420 0003 25       		.uleb128 0x25
 2421 0004 0E       		.uleb128 0xe
 2422 0005 13       		.uleb128 0x13
 2423 0006 0B       		.uleb128 0xb
 2424 0007 03       		.uleb128 0x3
 2425 0008 0E       		.uleb128 0xe
 2426 0009 1B       		.uleb128 0x1b
 2427 000a 0E       		.uleb128 0xe
 2428 000b 55       		.uleb128 0x55
 2429 000c 17       		.uleb128 0x17
 2430 000d 11       		.uleb128 0x11
 2431 000e 01       		.uleb128 0x1
 2432 000f 10       		.uleb128 0x10
 2433 0010 17       		.uleb128 0x17
 2434 0011 00       		.byte	0
 2435 0012 00       		.byte	0
 2436 0013 02       		.uleb128 0x2
 2437 0014 24       		.uleb128 0x24
 2438 0015 00       		.byte	0
 2439 0016 0B       		.uleb128 0xb
 2440 0017 0B       		.uleb128 0xb
 2441 0018 3E       		.uleb128 0x3e
 2442 0019 0B       		.uleb128 0xb
 2443 001a 03       		.uleb128 0x3
 2444 001b 0E       		.uleb128 0xe
 2445 001c 00       		.byte	0
 2446 001d 00       		.byte	0
 2447 001e 03       		.uleb128 0x3
 2448 001f 24       		.uleb128 0x24
 2449 0020 00       		.byte	0
 2450 0021 0B       		.uleb128 0xb
 2451 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 72


 2452 0023 3E       		.uleb128 0x3e
 2453 0024 0B       		.uleb128 0xb
 2454 0025 03       		.uleb128 0x3
 2455 0026 08       		.uleb128 0x8
 2456 0027 00       		.byte	0
 2457 0028 00       		.byte	0
 2458 0029 04       		.uleb128 0x4
 2459 002a 16       		.uleb128 0x16
 2460 002b 00       		.byte	0
 2461 002c 03       		.uleb128 0x3
 2462 002d 0E       		.uleb128 0xe
 2463 002e 3A       		.uleb128 0x3a
 2464 002f 0B       		.uleb128 0xb
 2465 0030 3B       		.uleb128 0x3b
 2466 0031 0B       		.uleb128 0xb
 2467 0032 49       		.uleb128 0x49
 2468 0033 13       		.uleb128 0x13
 2469 0034 00       		.byte	0
 2470 0035 00       		.byte	0
 2471 0036 05       		.uleb128 0x5
 2472 0037 16       		.uleb128 0x16
 2473 0038 00       		.byte	0
 2474 0039 03       		.uleb128 0x3
 2475 003a 0E       		.uleb128 0xe
 2476 003b 3A       		.uleb128 0x3a
 2477 003c 0B       		.uleb128 0xb
 2478 003d 3B       		.uleb128 0x3b
 2479 003e 05       		.uleb128 0x5
 2480 003f 49       		.uleb128 0x49
 2481 0040 13       		.uleb128 0x13
 2482 0041 00       		.byte	0
 2483 0042 00       		.byte	0
 2484 0043 06       		.uleb128 0x6
 2485 0044 35       		.uleb128 0x35
 2486 0045 00       		.byte	0
 2487 0046 49       		.uleb128 0x49
 2488 0047 13       		.uleb128 0x13
 2489 0048 00       		.byte	0
 2490 0049 00       		.byte	0
 2491 004a 07       		.uleb128 0x7
 2492 004b 2E       		.uleb128 0x2e
 2493 004c 00       		.byte	0
 2494 004d 3F       		.uleb128 0x3f
 2495 004e 19       		.uleb128 0x19
 2496 004f 03       		.uleb128 0x3
 2497 0050 0E       		.uleb128 0xe
 2498 0051 3A       		.uleb128 0x3a
 2499 0052 0B       		.uleb128 0xb
 2500 0053 3B       		.uleb128 0x3b
 2501 0054 0B       		.uleb128 0xb
 2502 0055 27       		.uleb128 0x27
 2503 0056 19       		.uleb128 0x19
 2504 0057 11       		.uleb128 0x11
 2505 0058 01       		.uleb128 0x1
 2506 0059 12       		.uleb128 0x12
 2507 005a 06       		.uleb128 0x6
 2508 005b 40       		.uleb128 0x40
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 73


 2509 005c 18       		.uleb128 0x18
 2510 005d 9642     		.uleb128 0x2116
 2511 005f 19       		.uleb128 0x19
 2512 0060 00       		.byte	0
 2513 0061 00       		.byte	0
 2514 0062 08       		.uleb128 0x8
 2515 0063 2E       		.uleb128 0x2e
 2516 0064 01       		.byte	0x1
 2517 0065 3F       		.uleb128 0x3f
 2518 0066 19       		.uleb128 0x19
 2519 0067 03       		.uleb128 0x3
 2520 0068 0E       		.uleb128 0xe
 2521 0069 3A       		.uleb128 0x3a
 2522 006a 0B       		.uleb128 0xb
 2523 006b 3B       		.uleb128 0x3b
 2524 006c 0B       		.uleb128 0xb
 2525 006d 27       		.uleb128 0x27
 2526 006e 19       		.uleb128 0x19
 2527 006f 11       		.uleb128 0x11
 2528 0070 01       		.uleb128 0x1
 2529 0071 12       		.uleb128 0x12
 2530 0072 06       		.uleb128 0x6
 2531 0073 40       		.uleb128 0x40
 2532 0074 18       		.uleb128 0x18
 2533 0075 9642     		.uleb128 0x2116
 2534 0077 19       		.uleb128 0x19
 2535 0078 01       		.uleb128 0x1
 2536 0079 13       		.uleb128 0x13
 2537 007a 00       		.byte	0
 2538 007b 00       		.byte	0
 2539 007c 09       		.uleb128 0x9
 2540 007d 34       		.uleb128 0x34
 2541 007e 00       		.byte	0
 2542 007f 03       		.uleb128 0x3
 2543 0080 0E       		.uleb128 0xe
 2544 0081 3A       		.uleb128 0x3a
 2545 0082 0B       		.uleb128 0xb
 2546 0083 3B       		.uleb128 0x3b
 2547 0084 0B       		.uleb128 0xb
 2548 0085 49       		.uleb128 0x49
 2549 0086 13       		.uleb128 0x13
 2550 0087 02       		.uleb128 0x2
 2551 0088 18       		.uleb128 0x18
 2552 0089 00       		.byte	0
 2553 008a 00       		.byte	0
 2554 008b 0A       		.uleb128 0xa
 2555 008c 2E       		.uleb128 0x2e
 2556 008d 00       		.byte	0
 2557 008e 3F       		.uleb128 0x3f
 2558 008f 19       		.uleb128 0x19
 2559 0090 03       		.uleb128 0x3
 2560 0091 0E       		.uleb128 0xe
 2561 0092 3A       		.uleb128 0x3a
 2562 0093 0B       		.uleb128 0xb
 2563 0094 3B       		.uleb128 0x3b
 2564 0095 05       		.uleb128 0x5
 2565 0096 27       		.uleb128 0x27
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 74


 2566 0097 19       		.uleb128 0x19
 2567 0098 49       		.uleb128 0x49
 2568 0099 13       		.uleb128 0x13
 2569 009a 11       		.uleb128 0x11
 2570 009b 01       		.uleb128 0x1
 2571 009c 12       		.uleb128 0x12
 2572 009d 06       		.uleb128 0x6
 2573 009e 40       		.uleb128 0x40
 2574 009f 18       		.uleb128 0x18
 2575 00a0 9742     		.uleb128 0x2117
 2576 00a2 19       		.uleb128 0x19
 2577 00a3 00       		.byte	0
 2578 00a4 00       		.byte	0
 2579 00a5 0B       		.uleb128 0xb
 2580 00a6 2E       		.uleb128 0x2e
 2581 00a7 01       		.byte	0x1
 2582 00a8 3F       		.uleb128 0x3f
 2583 00a9 19       		.uleb128 0x19
 2584 00aa 03       		.uleb128 0x3
 2585 00ab 0E       		.uleb128 0xe
 2586 00ac 3A       		.uleb128 0x3a
 2587 00ad 0B       		.uleb128 0xb
 2588 00ae 3B       		.uleb128 0x3b
 2589 00af 05       		.uleb128 0x5
 2590 00b0 27       		.uleb128 0x27
 2591 00b1 19       		.uleb128 0x19
 2592 00b2 11       		.uleb128 0x11
 2593 00b3 01       		.uleb128 0x1
 2594 00b4 12       		.uleb128 0x12
 2595 00b5 06       		.uleb128 0x6
 2596 00b6 40       		.uleb128 0x40
 2597 00b7 18       		.uleb128 0x18
 2598 00b8 9742     		.uleb128 0x2117
 2599 00ba 19       		.uleb128 0x19
 2600 00bb 01       		.uleb128 0x1
 2601 00bc 13       		.uleb128 0x13
 2602 00bd 00       		.byte	0
 2603 00be 00       		.byte	0
 2604 00bf 0C       		.uleb128 0xc
 2605 00c0 05       		.uleb128 0x5
 2606 00c1 00       		.byte	0
 2607 00c2 03       		.uleb128 0x3
 2608 00c3 0E       		.uleb128 0xe
 2609 00c4 3A       		.uleb128 0x3a
 2610 00c5 0B       		.uleb128 0xb
 2611 00c6 3B       		.uleb128 0x3b
 2612 00c7 05       		.uleb128 0x5
 2613 00c8 49       		.uleb128 0x49
 2614 00c9 13       		.uleb128 0x13
 2615 00ca 02       		.uleb128 0x2
 2616 00cb 18       		.uleb128 0x18
 2617 00cc 00       		.byte	0
 2618 00cd 00       		.byte	0
 2619 00ce 0D       		.uleb128 0xd
 2620 00cf 2E       		.uleb128 0x2e
 2621 00d0 01       		.byte	0x1
 2622 00d1 3F       		.uleb128 0x3f
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 75


 2623 00d2 19       		.uleb128 0x19
 2624 00d3 03       		.uleb128 0x3
 2625 00d4 0E       		.uleb128 0xe
 2626 00d5 3A       		.uleb128 0x3a
 2627 00d6 0B       		.uleb128 0xb
 2628 00d7 3B       		.uleb128 0x3b
 2629 00d8 05       		.uleb128 0x5
 2630 00d9 27       		.uleb128 0x27
 2631 00da 19       		.uleb128 0x19
 2632 00db 49       		.uleb128 0x49
 2633 00dc 13       		.uleb128 0x13
 2634 00dd 11       		.uleb128 0x11
 2635 00de 01       		.uleb128 0x1
 2636 00df 12       		.uleb128 0x12
 2637 00e0 06       		.uleb128 0x6
 2638 00e1 40       		.uleb128 0x40
 2639 00e2 18       		.uleb128 0x18
 2640 00e3 9742     		.uleb128 0x2117
 2641 00e5 19       		.uleb128 0x19
 2642 00e6 01       		.uleb128 0x1
 2643 00e7 13       		.uleb128 0x13
 2644 00e8 00       		.byte	0
 2645 00e9 00       		.byte	0
 2646 00ea 0E       		.uleb128 0xe
 2647 00eb 34       		.uleb128 0x34
 2648 00ec 00       		.byte	0
 2649 00ed 03       		.uleb128 0x3
 2650 00ee 0E       		.uleb128 0xe
 2651 00ef 3A       		.uleb128 0x3a
 2652 00f0 0B       		.uleb128 0xb
 2653 00f1 3B       		.uleb128 0x3b
 2654 00f2 05       		.uleb128 0x5
 2655 00f3 49       		.uleb128 0x49
 2656 00f4 13       		.uleb128 0x13
 2657 00f5 02       		.uleb128 0x2
 2658 00f6 18       		.uleb128 0x18
 2659 00f7 00       		.byte	0
 2660 00f8 00       		.byte	0
 2661 00f9 0F       		.uleb128 0xf
 2662 00fa 2E       		.uleb128 0x2e
 2663 00fb 01       		.byte	0x1
 2664 00fc 3F       		.uleb128 0x3f
 2665 00fd 19       		.uleb128 0x19
 2666 00fe 03       		.uleb128 0x3
 2667 00ff 0E       		.uleb128 0xe
 2668 0100 3A       		.uleb128 0x3a
 2669 0101 0B       		.uleb128 0xb
 2670 0102 3B       		.uleb128 0x3b
 2671 0103 05       		.uleb128 0x5
 2672 0104 27       		.uleb128 0x27
 2673 0105 19       		.uleb128 0x19
 2674 0106 49       		.uleb128 0x49
 2675 0107 13       		.uleb128 0x13
 2676 0108 11       		.uleb128 0x11
 2677 0109 01       		.uleb128 0x1
 2678 010a 12       		.uleb128 0x12
 2679 010b 06       		.uleb128 0x6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 76


 2680 010c 40       		.uleb128 0x40
 2681 010d 18       		.uleb128 0x18
 2682 010e 9642     		.uleb128 0x2116
 2683 0110 19       		.uleb128 0x19
 2684 0111 01       		.uleb128 0x1
 2685 0112 13       		.uleb128 0x13
 2686 0113 00       		.byte	0
 2687 0114 00       		.byte	0
 2688 0115 10       		.uleb128 0x10
 2689 0116 2E       		.uleb128 0x2e
 2690 0117 01       		.byte	0x1
 2691 0118 3F       		.uleb128 0x3f
 2692 0119 19       		.uleb128 0x19
 2693 011a 03       		.uleb128 0x3
 2694 011b 0E       		.uleb128 0xe
 2695 011c 3A       		.uleb128 0x3a
 2696 011d 0B       		.uleb128 0xb
 2697 011e 3B       		.uleb128 0x3b
 2698 011f 05       		.uleb128 0x5
 2699 0120 27       		.uleb128 0x27
 2700 0121 19       		.uleb128 0x19
 2701 0122 11       		.uleb128 0x11
 2702 0123 01       		.uleb128 0x1
 2703 0124 12       		.uleb128 0x12
 2704 0125 06       		.uleb128 0x6
 2705 0126 40       		.uleb128 0x40
 2706 0127 18       		.uleb128 0x18
 2707 0128 9642     		.uleb128 0x2116
 2708 012a 19       		.uleb128 0x19
 2709 012b 01       		.uleb128 0x1
 2710 012c 13       		.uleb128 0x13
 2711 012d 00       		.byte	0
 2712 012e 00       		.byte	0
 2713 012f 11       		.uleb128 0x11
 2714 0130 0F       		.uleb128 0xf
 2715 0131 00       		.byte	0
 2716 0132 0B       		.uleb128 0xb
 2717 0133 0B       		.uleb128 0xb
 2718 0134 49       		.uleb128 0x49
 2719 0135 13       		.uleb128 0x13
 2720 0136 00       		.byte	0
 2721 0137 00       		.byte	0
 2722 0138 12       		.uleb128 0x12
 2723 0139 26       		.uleb128 0x26
 2724 013a 00       		.byte	0
 2725 013b 49       		.uleb128 0x49
 2726 013c 13       		.uleb128 0x13
 2727 013d 00       		.byte	0
 2728 013e 00       		.byte	0
 2729 013f 13       		.uleb128 0x13
 2730 0140 0B       		.uleb128 0xb
 2731 0141 01       		.byte	0x1
 2732 0142 11       		.uleb128 0x11
 2733 0143 01       		.uleb128 0x1
 2734 0144 12       		.uleb128 0x12
 2735 0145 06       		.uleb128 0x6
 2736 0146 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 77


 2737 0147 00       		.byte	0
 2738 0148 14       		.uleb128 0x14
 2739 0149 34       		.uleb128 0x34
 2740 014a 00       		.byte	0
 2741 014b 03       		.uleb128 0x3
 2742 014c 0E       		.uleb128 0xe
 2743 014d 3A       		.uleb128 0x3a
 2744 014e 0B       		.uleb128 0xb
 2745 014f 3B       		.uleb128 0x3b
 2746 0150 0B       		.uleb128 0xb
 2747 0151 49       		.uleb128 0x49
 2748 0152 13       		.uleb128 0x13
 2749 0153 3F       		.uleb128 0x3f
 2750 0154 19       		.uleb128 0x19
 2751 0155 02       		.uleb128 0x2
 2752 0156 18       		.uleb128 0x18
 2753 0157 00       		.byte	0
 2754 0158 00       		.byte	0
 2755 0159 15       		.uleb128 0x15
 2756 015a 01       		.uleb128 0x1
 2757 015b 01       		.byte	0x1
 2758 015c 49       		.uleb128 0x49
 2759 015d 13       		.uleb128 0x13
 2760 015e 01       		.uleb128 0x1
 2761 015f 13       		.uleb128 0x13
 2762 0160 00       		.byte	0
 2763 0161 00       		.byte	0
 2764 0162 16       		.uleb128 0x16
 2765 0163 21       		.uleb128 0x21
 2766 0164 00       		.byte	0
 2767 0165 49       		.uleb128 0x49
 2768 0166 13       		.uleb128 0x13
 2769 0167 2F       		.uleb128 0x2f
 2770 0168 05       		.uleb128 0x5
 2771 0169 00       		.byte	0
 2772 016a 00       		.byte	0
 2773 016b 00       		.byte	0
 2774              		.section	.debug_aranges,"",%progbits
 2775 0000 EC000000 		.4byte	0xec
 2776 0004 0200     		.2byte	0x2
 2777 0006 00000000 		.4byte	.Ldebug_info0
 2778 000a 04       		.byte	0x4
 2779 000b 00       		.byte	0
 2780 000c 0000     		.2byte	0
 2781 000e 0000     		.2byte	0
 2782 0010 00000000 		.4byte	.LFB0
 2783 0014 20000000 		.4byte	.LFE0-.LFB0
 2784 0018 00000000 		.4byte	.LFB1
 2785 001c 58000000 		.4byte	.LFE1-.LFB1
 2786 0020 00000000 		.4byte	.LFB2
 2787 0024 68000000 		.4byte	.LFE2-.LFB2
 2788 0028 00000000 		.4byte	.LFB3
 2789 002c 68000000 		.4byte	.LFE3-.LFB3
 2790 0030 00000000 		.4byte	.LFB4
 2791 0034 10000000 		.4byte	.LFE4-.LFB4
 2792 0038 00000000 		.4byte	.LFB5
 2793 003c 14000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 78


 2794 0040 00000000 		.4byte	.LFB6
 2795 0044 20000000 		.4byte	.LFE6-.LFB6
 2796 0048 00000000 		.4byte	.LFB7
 2797 004c 98000000 		.4byte	.LFE7-.LFB7
 2798 0050 00000000 		.4byte	.LFB8
 2799 0054 40000000 		.4byte	.LFE8-.LFB8
 2800 0058 00000000 		.4byte	.LFB9
 2801 005c BC000000 		.4byte	.LFE9-.LFB9
 2802 0060 00000000 		.4byte	.LFB10
 2803 0064 44000000 		.4byte	.LFE10-.LFB10
 2804 0068 00000000 		.4byte	.LFB11
 2805 006c 94000000 		.4byte	.LFE11-.LFB11
 2806 0070 00000000 		.4byte	.LFB12
 2807 0074 7C000000 		.4byte	.LFE12-.LFB12
 2808 0078 00000000 		.4byte	.LFB13
 2809 007c 14000000 		.4byte	.LFE13-.LFB13
 2810 0080 00000000 		.4byte	.LFB14
 2811 0084 20000000 		.4byte	.LFE14-.LFB14
 2812 0088 00000000 		.4byte	.LFB15
 2813 008c 20000000 		.4byte	.LFE15-.LFB15
 2814 0090 00000000 		.4byte	.LFB16
 2815 0094 20000000 		.4byte	.LFE16-.LFB16
 2816 0098 00000000 		.4byte	.LFB17
 2817 009c 2C000000 		.4byte	.LFE17-.LFB17
 2818 00a0 00000000 		.4byte	.LFB18
 2819 00a4 18000000 		.4byte	.LFE18-.LFB18
 2820 00a8 00000000 		.4byte	.LFB19
 2821 00ac 34000000 		.4byte	.LFE19-.LFB19
 2822 00b0 00000000 		.4byte	.LFB20
 2823 00b4 40000000 		.4byte	.LFE20-.LFB20
 2824 00b8 00000000 		.4byte	.LFB21
 2825 00bc 40000000 		.4byte	.LFE21-.LFB21
 2826 00c0 00000000 		.4byte	.LFB22
 2827 00c4 30000000 		.4byte	.LFE22-.LFB22
 2828 00c8 00000000 		.4byte	.LFB23
 2829 00cc 44000000 		.4byte	.LFE23-.LFB23
 2830 00d0 00000000 		.4byte	.LFB24
 2831 00d4 40000000 		.4byte	.LFE24-.LFB24
 2832 00d8 00000000 		.4byte	.LFB25
 2833 00dc 9C000000 		.4byte	.LFE25-.LFB25
 2834 00e0 00000000 		.4byte	.LFB26
 2835 00e4 14000000 		.4byte	.LFE26-.LFB26
 2836 00e8 00000000 		.4byte	0
 2837 00ec 00000000 		.4byte	0
 2838              		.section	.debug_ranges,"",%progbits
 2839              	.Ldebug_ranges0:
 2840 0000 00000000 		.4byte	.LFB0
 2841 0004 20000000 		.4byte	.LFE0
 2842 0008 00000000 		.4byte	.LFB1
 2843 000c 58000000 		.4byte	.LFE1
 2844 0010 00000000 		.4byte	.LFB2
 2845 0014 68000000 		.4byte	.LFE2
 2846 0018 00000000 		.4byte	.LFB3
 2847 001c 68000000 		.4byte	.LFE3
 2848 0020 00000000 		.4byte	.LFB4
 2849 0024 10000000 		.4byte	.LFE4
 2850 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 79


 2851 002c 14000000 		.4byte	.LFE5
 2852 0030 00000000 		.4byte	.LFB6
 2853 0034 20000000 		.4byte	.LFE6
 2854 0038 00000000 		.4byte	.LFB7
 2855 003c 98000000 		.4byte	.LFE7
 2856 0040 00000000 		.4byte	.LFB8
 2857 0044 40000000 		.4byte	.LFE8
 2858 0048 00000000 		.4byte	.LFB9
 2859 004c BC000000 		.4byte	.LFE9
 2860 0050 00000000 		.4byte	.LFB10
 2861 0054 44000000 		.4byte	.LFE10
 2862 0058 00000000 		.4byte	.LFB11
 2863 005c 94000000 		.4byte	.LFE11
 2864 0060 00000000 		.4byte	.LFB12
 2865 0064 7C000000 		.4byte	.LFE12
 2866 0068 00000000 		.4byte	.LFB13
 2867 006c 14000000 		.4byte	.LFE13
 2868 0070 00000000 		.4byte	.LFB14
 2869 0074 20000000 		.4byte	.LFE14
 2870 0078 00000000 		.4byte	.LFB15
 2871 007c 20000000 		.4byte	.LFE15
 2872 0080 00000000 		.4byte	.LFB16
 2873 0084 20000000 		.4byte	.LFE16
 2874 0088 00000000 		.4byte	.LFB17
 2875 008c 2C000000 		.4byte	.LFE17
 2876 0090 00000000 		.4byte	.LFB18
 2877 0094 18000000 		.4byte	.LFE18
 2878 0098 00000000 		.4byte	.LFB19
 2879 009c 34000000 		.4byte	.LFE19
 2880 00a0 00000000 		.4byte	.LFB20
 2881 00a4 40000000 		.4byte	.LFE20
 2882 00a8 00000000 		.4byte	.LFB21
 2883 00ac 40000000 		.4byte	.LFE21
 2884 00b0 00000000 		.4byte	.LFB22
 2885 00b4 30000000 		.4byte	.LFE22
 2886 00b8 00000000 		.4byte	.LFB23
 2887 00bc 44000000 		.4byte	.LFE23
 2888 00c0 00000000 		.4byte	.LFB24
 2889 00c4 40000000 		.4byte	.LFE24
 2890 00c8 00000000 		.4byte	.LFB25
 2891 00cc 9C000000 		.4byte	.LFE25
 2892 00d0 00000000 		.4byte	.LFB26
 2893 00d4 14000000 		.4byte	.LFE26
 2894 00d8 00000000 		.4byte	0
 2895 00dc 00000000 		.4byte	0
 2896              		.section	.debug_line,"",%progbits
 2897              	.Ldebug_line0:
 2898 0000 1C030000 		.section	.debug_str,"MS",%progbits,1
 2898      02004100 
 2898      00000201 
 2898      FB0E0D00 
 2898      01010101 
 2899              	.LASF10:
 2900 0000 75696E74 		.ascii	"uint16\000"
 2900      313600
 2901              	.LASF19:
 2902 0007 50435F53 		.ascii	"PC_Start\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 80


 2902      74617274 
 2902      00
 2903              	.LASF34:
 2904 0010 50435F47 		.ascii	"PC_GetChar\000"
 2904      65744368 
 2904      617200
 2905              	.LASF48:
 2906 001b 74784461 		.ascii	"txDataByte\000"
 2906      74614279 
 2906      746500
 2907              	.LASF36:
 2908 0026 50435F47 		.ascii	"PC_GetByte\000"
 2908      65744279 
 2908      746500
 2909              	.LASF53:
 2910 0031 73747269 		.ascii	"string\000"
 2910      6E6700
 2911              	.LASF68:
 2912 0038 50435F72 		.ascii	"PC_rxBufferRead\000"
 2912      78427566 
 2912      66657252 
 2912      65616400 
 2913              	.LASF65:
 2914 0048 50435F69 		.ascii	"PC_initVar\000"
 2914      6E697456 
 2914      617200
 2915              	.LASF7:
 2916 0053 6C6F6E67 		.ascii	"long long unsigned int\000"
 2916      206C6F6E 
 2916      6720756E 
 2916      7369676E 
 2916      65642069 
 2917              	.LASF51:
 2918 006a 50435F50 		.ascii	"PC_PutChar\000"
 2918      75744368 
 2918      617200
 2919              	.LASF6:
 2920 0075 6C6F6E67 		.ascii	"long long int\000"
 2920      206C6F6E 
 2920      6720696E 
 2920      7400
 2921              	.LASF0:
 2922 0083 7369676E 		.ascii	"signed char\000"
 2922      65642063 
 2922      68617200 
 2923              	.LASF49:
 2924 008f 50435F52 		.ascii	"PC_ReadControlRegister\000"
 2924      65616443 
 2924      6F6E7472 
 2924      6F6C5265 
 2924      67697374 
 2925              	.LASF63:
 2926 00a6 74785065 		.ascii	"txPeriod\000"
 2926      72696F64 
 2926      00
 2927              	.LASF58:
 2928 00af 50435F47 		.ascii	"PC_GetTxBufferSize\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 81


 2928      65745478 
 2928      42756666 
 2928      65725369 
 2928      7A6500
 2929              	.LASF55:
 2930 00c2 50435F50 		.ascii	"PC_PutArray\000"
 2930      75744172 
 2930      72617900 
 2931              	.LASF4:
 2932 00ce 6C6F6E67 		.ascii	"long int\000"
 2932      20696E74 
 2932      00
 2933              	.LASF9:
 2934 00d7 75696E74 		.ascii	"uint8\000"
 2934      3800
 2935              	.LASF13:
 2936 00dd 646F7562 		.ascii	"double\000"
 2936      6C6500
 2937              	.LASF42:
 2938 00e4 61646472 		.ascii	"addressMode\000"
 2938      6573734D 
 2938      6F646500 
 2939              	.LASF57:
 2940 00f0 50435F50 		.ascii	"PC_PutCRLF\000"
 2940      75744352 
 2940      4C4600
 2941              	.LASF40:
 2942 00fb 50435F43 		.ascii	"PC_ClearRxBuffer\000"
 2942      6C656172 
 2942      52784275 
 2942      66666572 
 2942      00
 2943              	.LASF11:
 2944 010c 75696E74 		.ascii	"uint32\000"
 2944      333200
 2945              	.LASF69:
 2946 0113 50435F72 		.ascii	"PC_rxBufferWrite\000"
 2946      78427566 
 2946      66657257 
 2946      72697465 
 2946      00
 2947              	.LASF26:
 2948 0124 636F6E74 		.ascii	"control\000"
 2948      726F6C00 
 2949              	.LASF45:
 2950 012c 50435F53 		.ascii	"PC_SetRxAddress2\000"
 2950      65745278 
 2950      41646472 
 2950      65737332 
 2950      00
 2951              	.LASF52:
 2952 013d 50435F50 		.ascii	"PC_PutString\000"
 2952      75745374 
 2952      72696E67 
 2952      00
 2953              	.LASF60:
 2954 014a 50435F53 		.ascii	"PC_SendBreak\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 82


 2954      656E6442 
 2954      7265616B 
 2954      00
 2955              	.LASF61:
 2956 0157 7265744D 		.ascii	"retMode\000"
 2956      6F646500 
 2957              	.LASF8:
 2958 015f 756E7369 		.ascii	"unsigned int\000"
 2958      676E6564 
 2958      20696E74 
 2958      00
 2959              	.LASF37:
 2960 016c 6C6F6345 		.ascii	"locErrorStatus\000"
 2960      72726F72 
 2960      53746174 
 2960      757300
 2961              	.LASF5:
 2962 017b 6C6F6E67 		.ascii	"long unsigned int\000"
 2962      20756E73 
 2962      69676E65 
 2962      6420696E 
 2962      7400
 2963              	.LASF71:
 2964 018d 50435F72 		.ascii	"PC_rxBufferOverflow\000"
 2964      78427566 
 2964      6665724F 
 2964      76657266 
 2964      6C6F7700 
 2965              	.LASF39:
 2966 01a1 73697A65 		.ascii	"size\000"
 2966      00
 2967              	.LASF3:
 2968 01a6 73686F72 		.ascii	"short unsigned int\000"
 2968      7420756E 
 2968      7369676E 
 2968      65642069 
 2968      6E7400
 2969              	.LASF32:
 2970 01b9 50435F52 		.ascii	"PC_ReadRxStatus\000"
 2970      65616452 
 2970      78537461 
 2970      74757300 
 2971              	.LASF54:
 2972 01c9 62756649 		.ascii	"bufIndex\000"
 2972      6E646578 
 2972      00
 2973              	.LASF27:
 2974 01d2 696E7453 		.ascii	"intSrc\000"
 2974      726300
 2975              	.LASF22:
 2976 01d9 50435F53 		.ascii	"PC_Stop\000"
 2976      746F7000 
 2977              	.LASF17:
 2978 01e1 72656733 		.ascii	"reg32\000"
 2978      3200
 2979              	.LASF62:
 2980 01e7 746D7053 		.ascii	"tmpStat\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 83


 2980      74617400 
 2981              	.LASF73:
 2982 01ef 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PC.c\000"
 2982      6E657261 
 2982      7465645F 
 2982      536F7572 
 2982      63655C50 
 2983              	.LASF18:
 2984 020d 73697A65 		.ascii	"sizetype\000"
 2984      74797065 
 2984      00
 2985              	.LASF44:
 2986 0216 61646472 		.ascii	"address\000"
 2986      65737300 
 2987              	.LASF72:
 2988 021e 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2988      4320342E 
 2988      382E3420 
 2988      32303134 
 2988      30353236 
 2989 0251 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2989      20726576 
 2989      6973696F 
 2989      6E203231 
 2989      31333538 
 2990 0284 30202D66 		.ascii	"0 -ffunction-sections\000"
 2990      66756E63 
 2990      74696F6E 
 2990      2D736563 
 2990      74696F6E 
 2991              	.LASF30:
 2992 029a 6C6F6352 		.ascii	"locRxBufferWrite\000"
 2992      78427566 
 2992      66657257 
 2992      72697465 
 2992      00
 2993              	.LASF35:
 2994 02ab 72785374 		.ascii	"rxStatus\000"
 2994      61747573 
 2994      00
 2995              	.LASF31:
 2996 02b4 50435F52 		.ascii	"PC_ReadRxData\000"
 2996      65616452 
 2996      78446174 
 2996      6100
 2997              	.LASF12:
 2998 02c2 666C6F61 		.ascii	"float\000"
 2998      7400
 2999              	.LASF16:
 3000 02c8 72656738 		.ascii	"reg8\000"
 3000      00
 3001              	.LASF1:
 3002 02cd 756E7369 		.ascii	"unsigned char\000"
 3002      676E6564 
 3002      20636861 
 3002      7200
 3003              	.LASF59:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 84


 3004 02db 50435F43 		.ascii	"PC_ClearTxBuffer\000"
 3004      6C656172 
 3004      54784275 
 3004      66666572 
 3004      00
 3005              	.LASF25:
 3006 02ec 50435F53 		.ascii	"PC_SetRxInterruptMode\000"
 3006      65745278 
 3006      496E7465 
 3006      72727570 
 3006      744D6F64 
 3007              	.LASF2:
 3008 0302 73686F72 		.ascii	"short int\000"
 3008      7420696E 
 3008      7400
 3009              	.LASF64:
 3010 030c 50435F53 		.ascii	"PC_SetTxAddressMode\000"
 3010      65745478 
 3010      41646472 
 3010      6573734D 
 3010      6F646500 
 3011              	.LASF56:
 3012 0320 62797465 		.ascii	"byteCount\000"
 3012      436F756E 
 3012      7400
 3013              	.LASF67:
 3014 032a 50435F72 		.ascii	"PC_rxBuffer\000"
 3014      78427566 
 3014      66657200 
 3015              	.LASF74:
 3016 0336 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Desktop\\BEAGLE\\Programa\\Pr"
 3016      73657273 
 3016      5C526563 
 3016      65706369 
 3016      6F6E5C44 
 3017 0363 75656261 		.ascii	"ueba_Autogas\\BBB.cydsn\000"
 3017      5F417574 
 3017      6F676173 
 3017      5C424242 
 3017      2E637964 
 3018              	.LASF28:
 3019 037a 72784461 		.ascii	"rxData\000"
 3019      746100
 3020              	.LASF38:
 3021 0381 50435F47 		.ascii	"PC_GetRxBufferSize\000"
 3021      65745278 
 3021      42756666 
 3021      65725369 
 3021      7A6500
 3022              	.LASF15:
 3023 0394 63686172 		.ascii	"char\000"
 3023      00
 3024              	.LASF50:
 3025 0399 50435F52 		.ascii	"PC_ReadTxStatus\000"
 3025      65616454 
 3025      78537461 
 3025      74757300 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 85


 3026              	.LASF24:
 3027 03a9 50435F57 		.ascii	"PC_WriteControlRegister\000"
 3027      72697465 
 3027      436F6E74 
 3027      726F6C52 
 3027      65676973 
 3028              	.LASF14:
 3029 03c1 63686172 		.ascii	"char8\000"
 3029      3800
 3030              	.LASF43:
 3031 03c7 50435F53 		.ascii	"PC_SetRxAddress1\000"
 3031      65745278 
 3031      41646472 
 3031      65737331 
 3031      00
 3032              	.LASF20:
 3033 03d8 50435F49 		.ascii	"PC_Init\000"
 3033      6E697400 
 3034              	.LASF29:
 3035 03e0 6C6F6352 		.ascii	"locRxBufferRead\000"
 3035      78427566 
 3035      66657252 
 3035      65616400 
 3036              	.LASF23:
 3037 03f0 656E6162 		.ascii	"enableInterrupts\000"
 3037      6C65496E 
 3037      74657272 
 3037      75707473 
 3037      00
 3038              	.LASF33:
 3039 0401 73746174 		.ascii	"status\000"
 3039      757300
 3040              	.LASF41:
 3041 0408 50435F53 		.ascii	"PC_SetRxAddressMode\000"
 3041      65745278 
 3041      41646472 
 3041      6573734D 
 3041      6F646500 
 3042              	.LASF21:
 3043 041c 50435F45 		.ascii	"PC_Enable\000"
 3043      6E61626C 
 3043      6500
 3044              	.LASF66:
 3045 0426 50435F65 		.ascii	"PC_errorStatus\000"
 3045      72726F72 
 3045      53746174 
 3045      757300
 3046              	.LASF70:
 3047 0435 50435F72 		.ascii	"PC_rxBufferLoopDetect\000"
 3047      78427566 
 3047      6665724C 
 3047      6F6F7044 
 3047      65746563 
 3048              	.LASF46:
 3049 044b 50435F53 		.ascii	"PC_SetTxInterruptMode\000"
 3049      65745478 
 3049      496E7465 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc5noGJ7.s 			page 86


 3049      72727570 
 3049      744D6F64 
 3050              	.LASF47:
 3051 0461 50435F57 		.ascii	"PC_WriteTxData\000"
 3051      72697465 
 3051      54784461 
 3051      746100
 3052              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
