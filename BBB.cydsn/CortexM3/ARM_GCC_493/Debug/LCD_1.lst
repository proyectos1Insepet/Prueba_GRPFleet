ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"LCD_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	LCD_1_initVar
  19              		.bss
  20              		.type	LCD_1_initVar, %object
  21              		.size	LCD_1_initVar, 1
  22              	LCD_1_initVar:
  23 0000 00       		.space	1
  24              		.global	LCD_1_errorStatus
  25              		.type	LCD_1_errorStatus, %object
  26              		.size	LCD_1_errorStatus, 1
  27              	LCD_1_errorStatus:
  28 0001 00       		.space	1
  29              		.comm	LCD_1_rxBuffer,8,4
  30              		.global	LCD_1_rxBufferRead
  31              		.type	LCD_1_rxBufferRead, %object
  32              		.size	LCD_1_rxBufferRead, 1
  33              	LCD_1_rxBufferRead:
  34 0002 00       		.space	1
  35              		.global	LCD_1_rxBufferWrite
  36              		.type	LCD_1_rxBufferWrite, %object
  37              		.size	LCD_1_rxBufferWrite, 1
  38              	LCD_1_rxBufferWrite:
  39 0003 00       		.space	1
  40              		.global	LCD_1_rxBufferLoopDetect
  41              		.type	LCD_1_rxBufferLoopDetect, %object
  42              		.size	LCD_1_rxBufferLoopDetect, 1
  43              	LCD_1_rxBufferLoopDetect:
  44 0004 00       		.space	1
  45              		.global	LCD_1_rxBufferOverflow
  46              		.type	LCD_1_rxBufferOverflow, %object
  47              		.size	LCD_1_rxBufferOverflow, 1
  48              	LCD_1_rxBufferOverflow:
  49 0005 00       		.space	1
  50              		.section	.text.LCD_1_Start,"ax",%progbits
  51              		.align	2
  52              		.global	LCD_1_Start
  53              		.thumb
  54              		.thumb_func
  55              		.type	LCD_1_Start, %function
  56              	LCD_1_Start:
  57              	.LFB0:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 2


  58              		.file 1 ".\\Generated_Source\\PSoC5\\LCD_1.c"
   1:.\Generated_Source\PSoC5/LCD_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/LCD_1.c **** * File Name: LCD_1.c
   3:.\Generated_Source\PSoC5/LCD_1.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/LCD_1.c **** *
   5:.\Generated_Source\PSoC5/LCD_1.c **** * Description:
   6:.\Generated_Source\PSoC5/LCD_1.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/LCD_1.c **** *
   8:.\Generated_Source\PSoC5/LCD_1.c **** * Note:
   9:.\Generated_Source\PSoC5/LCD_1.c **** *
  10:.\Generated_Source\PSoC5/LCD_1.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/LCD_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/LCD_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/LCD_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/LCD_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/LCD_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/LCD_1.c **** 
  17:.\Generated_Source\PSoC5/LCD_1.c **** #include "LCD_1.h"
  18:.\Generated_Source\PSoC5/LCD_1.c **** #if (LCD_1_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/LCD_1.c ****     #include "LCD_1_IntClock.h"
  20:.\Generated_Source\PSoC5/LCD_1.c **** #endif /* End LCD_1_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/LCD_1.c **** 
  22:.\Generated_Source\PSoC5/LCD_1.c **** 
  23:.\Generated_Source\PSoC5/LCD_1.c **** /***************************************
  24:.\Generated_Source\PSoC5/LCD_1.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/LCD_1.c **** ***************************************/
  26:.\Generated_Source\PSoC5/LCD_1.c **** 
  27:.\Generated_Source\PSoC5/LCD_1.c **** uint8 LCD_1_initVar = 0u;
  28:.\Generated_Source\PSoC5/LCD_1.c **** 
  29:.\Generated_Source\PSoC5/LCD_1.c **** #if (LCD_1_TX_INTERRUPT_ENABLED && LCD_1_TX_ENABLED)
  30:.\Generated_Source\PSoC5/LCD_1.c ****     volatile uint8 LCD_1_txBuffer[LCD_1_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/LCD_1.c ****     volatile uint8 LCD_1_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/LCD_1.c ****     uint8 LCD_1_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/LCD_1.c **** #endif /* (LCD_1_TX_INTERRUPT_ENABLED && LCD_1_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/LCD_1.c **** 
  35:.\Generated_Source\PSoC5/LCD_1.c **** #if (LCD_1_RX_INTERRUPT_ENABLED && (LCD_1_RX_ENABLED || LCD_1_HD_ENABLED))
  36:.\Generated_Source\PSoC5/LCD_1.c ****     uint8 LCD_1_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/LCD_1.c ****     volatile uint8 LCD_1_rxBuffer[LCD_1_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/LCD_1.c ****     volatile uint8 LCD_1_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/LCD_1.c ****     volatile uint8 LCD_1_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/LCD_1.c ****     volatile uint8 LCD_1_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/LCD_1.c ****     volatile uint8 LCD_1_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/LCD_1.c ****         volatile uint8 LCD_1_rxAddressMode = LCD_1_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/LCD_1.c ****         volatile uint8 LCD_1_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/LCD_1.c **** #endif /* (LCD_1_RX_INTERRUPT_ENABLED && (LCD_1_RX_ENABLED || LCD_1_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/LCD_1.c **** 
  48:.\Generated_Source\PSoC5/LCD_1.c **** 
  49:.\Generated_Source\PSoC5/LCD_1.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/LCD_1.c **** * Function Name: LCD_1_Start
  51:.\Generated_Source\PSoC5/LCD_1.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/LCD_1.c **** *
  53:.\Generated_Source\PSoC5/LCD_1.c **** * Summary:
  54:.\Generated_Source\PSoC5/LCD_1.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/LCD_1.c **** *  LCD_1_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/LCD_1.c **** *  LCD_1_Init() function, and then calls the
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 3


  57:.\Generated_Source\PSoC5/LCD_1.c **** *  LCD_1_Enable() function.
  58:.\Generated_Source\PSoC5/LCD_1.c **** *
  59:.\Generated_Source\PSoC5/LCD_1.c **** * Parameters:
  60:.\Generated_Source\PSoC5/LCD_1.c **** *  None.
  61:.\Generated_Source\PSoC5/LCD_1.c **** *
  62:.\Generated_Source\PSoC5/LCD_1.c **** * Return:
  63:.\Generated_Source\PSoC5/LCD_1.c **** *  None.
  64:.\Generated_Source\PSoC5/LCD_1.c **** *
  65:.\Generated_Source\PSoC5/LCD_1.c **** * Global variables:
  66:.\Generated_Source\PSoC5/LCD_1.c **** *  The LCD_1_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/LCD_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/LCD_1.c **** *  and set to one (1u) the first time LCD_1_Start() is called. This
  69:.\Generated_Source\PSoC5/LCD_1.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/LCD_1.c **** *  subsequent calls to the LCD_1_Start() routine.
  71:.\Generated_Source\PSoC5/LCD_1.c **** *
  72:.\Generated_Source\PSoC5/LCD_1.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/LCD_1.c **** *  No.
  74:.\Generated_Source\PSoC5/LCD_1.c **** *
  75:.\Generated_Source\PSoC5/LCD_1.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/LCD_1.c **** void LCD_1_Start(void) 
  77:.\Generated_Source\PSoC5/LCD_1.c **** {
  59              		.loc 1 77 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63 0000 80B5     		push	{r7, lr}
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC5/LCD_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/LCD_1.c ****     if(LCD_1_initVar == 0u)
  69              		.loc 1 79 0
  70 0004 054B     		ldr	r3, .L3
  71 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  72 0008 002B     		cmp	r3, #0
  73 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC5/LCD_1.c ****     {
  81:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_Init();
  74              		.loc 1 81 0
  75 000c FFF7FEFF 		bl	LCD_1_Init
  82:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_initVar = 1u;
  76              		.loc 1 82 0
  77 0010 024B     		ldr	r3, .L3
  78 0012 0122     		movs	r2, #1
  79 0014 1A70     		strb	r2, [r3]
  80              	.L2:
  83:.\Generated_Source\PSoC5/LCD_1.c ****     }
  84:.\Generated_Source\PSoC5/LCD_1.c **** 
  85:.\Generated_Source\PSoC5/LCD_1.c ****     LCD_1_Enable();
  81              		.loc 1 85 0
  82 0016 FFF7FEFF 		bl	LCD_1_Enable
  86:.\Generated_Source\PSoC5/LCD_1.c **** }
  83              		.loc 1 86 0
  84 001a 80BD     		pop	{r7, pc}
  85              	.L4:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 4


  86              		.align	2
  87              	.L3:
  88 001c 00000000 		.word	LCD_1_initVar
  89              		.cfi_endproc
  90              	.LFE0:
  91              		.size	LCD_1_Start, .-LCD_1_Start
  92              		.section	.text.LCD_1_Init,"ax",%progbits
  93              		.align	2
  94              		.global	LCD_1_Init
  95              		.thumb
  96              		.thumb_func
  97              		.type	LCD_1_Init, %function
  98              	LCD_1_Init:
  99              	.LFB1:
  87:.\Generated_Source\PSoC5/LCD_1.c **** 
  88:.\Generated_Source\PSoC5/LCD_1.c **** 
  89:.\Generated_Source\PSoC5/LCD_1.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/LCD_1.c **** * Function Name: LCD_1_Init
  91:.\Generated_Source\PSoC5/LCD_1.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/LCD_1.c **** *
  93:.\Generated_Source\PSoC5/LCD_1.c **** * Summary:
  94:.\Generated_Source\PSoC5/LCD_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/LCD_1.c **** *  dialog settings. It is not necessary to call LCD_1_Init() because
  96:.\Generated_Source\PSoC5/LCD_1.c **** *  the LCD_1_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/LCD_1.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/LCD_1.c **** *
  99:.\Generated_Source\PSoC5/LCD_1.c **** * Parameters:
 100:.\Generated_Source\PSoC5/LCD_1.c **** *  None.
 101:.\Generated_Source\PSoC5/LCD_1.c **** *
 102:.\Generated_Source\PSoC5/LCD_1.c **** * Return:
 103:.\Generated_Source\PSoC5/LCD_1.c **** *  None.
 104:.\Generated_Source\PSoC5/LCD_1.c **** *
 105:.\Generated_Source\PSoC5/LCD_1.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/LCD_1.c **** void LCD_1_Init(void) 
 107:.\Generated_Source\PSoC5/LCD_1.c **** {
 100              		.loc 1 107 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 80B5     		push	{r7, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/LCD_1.c ****     #if(LCD_1_RX_ENABLED || LCD_1_HD_ENABLED)
 109:.\Generated_Source\PSoC5/LCD_1.c **** 
 110:.\Generated_Source\PSoC5/LCD_1.c ****         #if (LCD_1_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/LCD_1.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/LCD_1.c ****             (void) CyIntSetVector(LCD_1_RX_VECT_NUM, &LCD_1_RXISR);
 110              		.loc 1 112 0
 111 0004 0020     		movs	r0, #0
 112 0006 0D49     		ldr	r1, .L6
 113 0008 FFF7FEFF 		bl	CyIntSetVector
 113:.\Generated_Source\PSoC5/LCD_1.c ****             CyIntSetPriority(LCD_1_RX_VECT_NUM, LCD_1_RX_PRIOR_NUM);
 114              		.loc 1 113 0
 115 000c 0020     		movs	r0, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 5


 116 000e 0221     		movs	r1, #2
 117 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_errorStatus = 0u;
 118              		.loc 1 114 0
 119 0014 0A4B     		ldr	r3, .L6+4
 120 0016 0022     		movs	r2, #0
 121 0018 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* (LCD_1_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/LCD_1.c **** 
 117:.\Generated_Source\PSoC5/LCD_1.c ****         #if (LCD_1_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_SetRxAddressMode(LCD_1_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_SetRxAddress1(LCD_1_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_SetRxAddress2(LCD_1_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* End LCD_1_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/LCD_1.c **** 
 123:.\Generated_Source\PSoC5/LCD_1.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_RXBITCTR_PERIOD_REG = LCD_1_RXBITCTR_INIT;
 122              		.loc 1 124 0
 123 001a 0A4B     		ldr	r3, .L6+8
 124 001c 7222     		movs	r2, #114
 125 001e 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/LCD_1.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_RXSTATUS_MASK_REG  = LCD_1_INIT_RX_INTERRUPTS_MASK;
 126              		.loc 1 126 0
 127 0020 094B     		ldr	r3, .L6+12
 128 0022 2022     		movs	r2, #32
 129 0024 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* End LCD_1_RX_ENABLED || LCD_1_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/LCD_1.c **** 
 129:.\Generated_Source\PSoC5/LCD_1.c ****     #if(LCD_1_TX_ENABLED)
 130:.\Generated_Source\PSoC5/LCD_1.c ****         #if (LCD_1_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/LCD_1.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/LCD_1.c ****             (void) CyIntSetVector(LCD_1_TX_VECT_NUM, &LCD_1_TXISR);
 133:.\Generated_Source\PSoC5/LCD_1.c ****             CyIntSetPriority(LCD_1_TX_VECT_NUM, LCD_1_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* (LCD_1_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/LCD_1.c **** 
 136:.\Generated_Source\PSoC5/LCD_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/LCD_1.c ****         #if (LCD_1_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_TXBITCLKGEN_CTR_REG = LCD_1_BIT_CENTER;
 130              		.loc 1 138 0
 131 0026 094B     		ldr	r3, .L6+16
 132 0028 0622     		movs	r2, #6
 133 002a 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_TXBITCLKTX_COMPLETE_REG = ((LCD_1_NUMBER_OF_DATA_BITS +
 134              		.loc 1 139 0
 135 002c 084B     		ldr	r3, .L6+20
 136 002e 4722     		movs	r2, #71
 137 0030 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC5/LCD_1.c ****                         LCD_1_NUMBER_OF_START_BIT) * LCD_1_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/LCD_1.c ****         #else
 142:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_TXBITCTR_PERIOD_REG = ((LCD_1_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/LCD_1.c ****                         LCD_1_NUMBER_OF_START_BIT) * LCD_1_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* End LCD_1_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/LCD_1.c **** 
 146:.\Generated_Source\PSoC5/LCD_1.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/LCD_1.c ****         #if (LCD_1_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_TXSTATUS_MASK_REG = LCD_1_TX_STS_FIFO_EMPTY;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 6


 149:.\Generated_Source\PSoC5/LCD_1.c ****         #else
 150:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_TXSTATUS_MASK_REG = LCD_1_INIT_TX_INTERRUPTS_MASK;
 138              		.loc 1 150 0
 139 0032 084B     		ldr	r3, .L6+24
 140 0034 0022     		movs	r2, #0
 141 0036 1A70     		strb	r2, [r3]
 151:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /*End LCD_1_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/LCD_1.c **** 
 153:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* End LCD_1_TX_ENABLED */
 154:.\Generated_Source\PSoC5/LCD_1.c **** 
 155:.\Generated_Source\PSoC5/LCD_1.c ****     #if(LCD_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/LCD_1.c ****             (LCD_1_ReadControlRegister() & (uint8)~LCD_1_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/LCD_1.c ****             (uint8)(LCD_1_PARITY_TYPE << LCD_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* End LCD_1_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/LCD_1.c **** }
 142              		.loc 1 160 0
 143 0038 80BD     		pop	{r7, pc}
 144              	.L7:
 145 003a 00BF     		.align	2
 146              	.L6:
 147 003c 00000000 		.word	LCD_1_RXISR
 148 0040 00000000 		.word	LCD_1_errorStatus
 149 0044 88650040 		.word	1073767816
 150 0048 84640040 		.word	1073767556
 151 004c 23640040 		.word	1073767459
 152 0050 33640040 		.word	1073767475
 153 0054 82640040 		.word	1073767554
 154              		.cfi_endproc
 155              	.LFE1:
 156              		.size	LCD_1_Init, .-LCD_1_Init
 157              		.section	.text.LCD_1_Enable,"ax",%progbits
 158              		.align	2
 159              		.global	LCD_1_Enable
 160              		.thumb
 161              		.thumb_func
 162              		.type	LCD_1_Enable, %function
 163              	LCD_1_Enable:
 164              	.LFB2:
 161:.\Generated_Source\PSoC5/LCD_1.c **** 
 162:.\Generated_Source\PSoC5/LCD_1.c **** 
 163:.\Generated_Source\PSoC5/LCD_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/LCD_1.c **** * Function Name: LCD_1_Enable
 165:.\Generated_Source\PSoC5/LCD_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/LCD_1.c **** *
 167:.\Generated_Source\PSoC5/LCD_1.c **** * Summary:
 168:.\Generated_Source\PSoC5/LCD_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/LCD_1.c **** *  to call LCD_1_Enable() because the LCD_1_Start() API
 170:.\Generated_Source\PSoC5/LCD_1.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/LCD_1.c **** *  operation.
 172:.\Generated_Source\PSoC5/LCD_1.c **** 
 173:.\Generated_Source\PSoC5/LCD_1.c **** * Parameters:
 174:.\Generated_Source\PSoC5/LCD_1.c **** *  None.
 175:.\Generated_Source\PSoC5/LCD_1.c **** *
 176:.\Generated_Source\PSoC5/LCD_1.c **** * Return:
 177:.\Generated_Source\PSoC5/LCD_1.c **** *  None.
 178:.\Generated_Source\PSoC5/LCD_1.c **** *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 7


 179:.\Generated_Source\PSoC5/LCD_1.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/LCD_1.c **** *  LCD_1_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/LCD_1.c **** *
 182:.\Generated_Source\PSoC5/LCD_1.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/LCD_1.c **** void LCD_1_Enable(void) 
 184:.\Generated_Source\PSoC5/LCD_1.c **** {
 165              		.loc 1 184 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 8
 168              		@ frame_needed = 1, uses_anonymous_args = 0
 169 0000 80B5     		push	{r7, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 82B0     		sub	sp, sp, #8
 174              		.cfi_def_cfa_offset 16
 175 0004 00AF     		add	r7, sp, #0
 176              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/LCD_1.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/LCD_1.c ****     enableInterrupts = CyEnterCriticalSection();
 177              		.loc 1 186 0
 178 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 179 000a 0346     		mov	r3, r0
 180 000c FB71     		strb	r3, [r7, #7]
 187:.\Generated_Source\PSoC5/LCD_1.c **** 
 188:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_RX_ENABLED || LCD_1_HD_ENABLED)
 189:.\Generated_Source\PSoC5/LCD_1.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_RXBITCTR_CONTROL_REG |= LCD_1_CNTR_ENABLE;
 181              		.loc 1 190 0
 182 000e 124A     		ldr	r2, .L9
 183 0010 114B     		ldr	r3, .L9
 184 0012 1B78     		ldrb	r3, [r3]
 185 0014 DBB2     		uxtb	r3, r3
 186 0016 43F02003 		orr	r3, r3, #32
 187 001a DBB2     		uxtb	r3, r3
 188 001c 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC5/LCD_1.c **** 
 192:.\Generated_Source\PSoC5/LCD_1.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_RXSTATUS_ACTL_REG  |= LCD_1_INT_ENABLE;
 189              		.loc 1 193 0
 190 001e 0F4A     		ldr	r2, .L9+4
 191 0020 0E4B     		ldr	r3, .L9+4
 192 0022 1B78     		ldrb	r3, [r3]
 193 0024 DBB2     		uxtb	r3, r3
 194 0026 43F01003 		orr	r3, r3, #16
 195 002a DBB2     		uxtb	r3, r3
 196 002c 1370     		strb	r3, [r2]
 194:.\Generated_Source\PSoC5/LCD_1.c **** 
 195:.\Generated_Source\PSoC5/LCD_1.c ****         #if (LCD_1_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_EnableRxInt();
 197              		.loc 1 196 0
 198 002e 0C4B     		ldr	r3, .L9+8
 199 0030 0122     		movs	r2, #1
 200 0032 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC5/LCD_1.c **** 
 198:.\Generated_Source\PSoC5/LCD_1.c ****             #if (LCD_1_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_rxAddressDetected = 0u;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 8


 200:.\Generated_Source\PSoC5/LCD_1.c ****             #endif /* (LCD_1_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* (LCD_1_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_RX_ENABLED || LCD_1_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/LCD_1.c **** 
 204:.\Generated_Source\PSoC5/LCD_1.c ****     #if(LCD_1_TX_ENABLED)
 205:.\Generated_Source\PSoC5/LCD_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/LCD_1.c ****         #if(!LCD_1_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_TXBITCTR_CONTROL_REG |= LCD_1_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* End LCD_1_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/LCD_1.c **** 
 210:.\Generated_Source\PSoC5/LCD_1.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_TXSTATUS_ACTL_REG |= LCD_1_INT_ENABLE;
 201              		.loc 1 211 0
 202 0034 0B4A     		ldr	r2, .L9+12
 203 0036 0B4B     		ldr	r3, .L9+12
 204 0038 1B78     		ldrb	r3, [r3]
 205 003a DBB2     		uxtb	r3, r3
 206 003c 43F01003 		orr	r3, r3, #16
 207 0040 DBB2     		uxtb	r3, r3
 208 0042 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC5/LCD_1.c ****         #if (LCD_1_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_EnableTxInt();
 215:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* (LCD_1_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/LCD_1.c ****      #endif /* (LCD_1_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/LCD_1.c **** 
 218:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_IntClock_Start();  /* Enable the clock */
 209              		.loc 1 219 0
 210 0044 FFF7FEFF 		bl	LCD_1_IntClock_Start
 220:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/LCD_1.c **** 
 222:.\Generated_Source\PSoC5/LCD_1.c ****     CyExitCriticalSection(enableInterrupts);
 211              		.loc 1 222 0
 212 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 213 004a 1846     		mov	r0, r3
 214 004c FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/LCD_1.c **** }
 215              		.loc 1 223 0
 216 0050 0837     		adds	r7, r7, #8
 217              		.cfi_def_cfa_offset 8
 218 0052 BD46     		mov	sp, r7
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 0054 80BD     		pop	{r7, pc}
 222              	.L10:
 223 0056 00BF     		.align	2
 224              	.L9:
 225 0058 98650040 		.word	1073767832
 226 005c 94640040 		.word	1073767572
 227 0060 00E100E0 		.word	-536813312
 228 0064 92640040 		.word	1073767570
 229              		.cfi_endproc
 230              	.LFE2:
 231              		.size	LCD_1_Enable, .-LCD_1_Enable
 232              		.section	.text.LCD_1_Stop,"ax",%progbits
 233              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 9


 234              		.global	LCD_1_Stop
 235              		.thumb
 236              		.thumb_func
 237              		.type	LCD_1_Stop, %function
 238              	LCD_1_Stop:
 239              	.LFB3:
 224:.\Generated_Source\PSoC5/LCD_1.c **** 
 225:.\Generated_Source\PSoC5/LCD_1.c **** 
 226:.\Generated_Source\PSoC5/LCD_1.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/LCD_1.c **** * Function Name: LCD_1_Stop
 228:.\Generated_Source\PSoC5/LCD_1.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/LCD_1.c **** *
 230:.\Generated_Source\PSoC5/LCD_1.c **** * Summary:
 231:.\Generated_Source\PSoC5/LCD_1.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/LCD_1.c **** *
 233:.\Generated_Source\PSoC5/LCD_1.c **** * Parameters:
 234:.\Generated_Source\PSoC5/LCD_1.c **** *  None.
 235:.\Generated_Source\PSoC5/LCD_1.c **** *
 236:.\Generated_Source\PSoC5/LCD_1.c **** * Return:
 237:.\Generated_Source\PSoC5/LCD_1.c **** *  None.
 238:.\Generated_Source\PSoC5/LCD_1.c **** *
 239:.\Generated_Source\PSoC5/LCD_1.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/LCD_1.c **** void LCD_1_Stop(void) 
 241:.\Generated_Source\PSoC5/LCD_1.c **** {
 240              		.loc 1 241 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 8
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244 0000 80B5     		push	{r7, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              		.cfi_def_cfa_offset 16
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC5/LCD_1.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/LCD_1.c ****     enableInterrupts = CyEnterCriticalSection();
 252              		.loc 1 243 0
 253 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 254 000a 0346     		mov	r3, r0
 255 000c FB71     		strb	r3, [r7, #7]
 244:.\Generated_Source\PSoC5/LCD_1.c **** 
 245:.\Generated_Source\PSoC5/LCD_1.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_RX_ENABLED || LCD_1_HD_ENABLED)
 247:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_RXBITCTR_CONTROL_REG &= (uint8) ~LCD_1_CNTR_ENABLE;
 256              		.loc 1 247 0
 257 000e 124A     		ldr	r2, .L12
 258 0010 114B     		ldr	r3, .L12
 259 0012 1B78     		ldrb	r3, [r3]
 260 0014 DBB2     		uxtb	r3, r3
 261 0016 23F02003 		bic	r3, r3, #32
 262 001a DBB2     		uxtb	r3, r3
 263 001c 1370     		strb	r3, [r2]
 248:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_RX_ENABLED || LCD_1_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/LCD_1.c **** 
 250:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_TX_ENABLED)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 10


 251:.\Generated_Source\PSoC5/LCD_1.c ****         #if(!LCD_1_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_TXBITCTR_CONTROL_REG &= (uint8) ~LCD_1_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* (!LCD_1_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/LCD_1.c **** 
 256:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_IntClock_Stop();   /* Disable the clock */
 264              		.loc 1 257 0
 265 001e FFF7FEFF 		bl	LCD_1_IntClock_Stop
 258:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/LCD_1.c **** 
 260:.\Generated_Source\PSoC5/LCD_1.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_RX_ENABLED || LCD_1_HD_ENABLED)
 262:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_RXSTATUS_ACTL_REG  &= (uint8) ~LCD_1_INT_ENABLE;
 266              		.loc 1 262 0
 267 0022 0E4A     		ldr	r2, .L12+4
 268 0024 0D4B     		ldr	r3, .L12+4
 269 0026 1B78     		ldrb	r3, [r3]
 270 0028 DBB2     		uxtb	r3, r3
 271 002a 23F01003 		bic	r3, r3, #16
 272 002e DBB2     		uxtb	r3, r3
 273 0030 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/LCD_1.c **** 
 264:.\Generated_Source\PSoC5/LCD_1.c ****         #if (LCD_1_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_DisableRxInt();
 274              		.loc 1 265 0
 275 0032 0B4B     		ldr	r3, .L12+8
 276 0034 0122     		movs	r2, #1
 277 0036 1A60     		str	r2, [r3]
 266:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* (LCD_1_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_RX_ENABLED || LCD_1_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/LCD_1.c **** 
 269:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_TX_ENABLED)
 270:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_TXSTATUS_ACTL_REG &= (uint8) ~LCD_1_INT_ENABLE;
 278              		.loc 1 270 0
 279 0038 0A4A     		ldr	r2, .L12+12
 280 003a 0A4B     		ldr	r3, .L12+12
 281 003c 1B78     		ldrb	r3, [r3]
 282 003e DBB2     		uxtb	r3, r3
 283 0040 23F01003 		bic	r3, r3, #16
 284 0044 DBB2     		uxtb	r3, r3
 285 0046 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC5/LCD_1.c **** 
 272:.\Generated_Source\PSoC5/LCD_1.c ****         #if (LCD_1_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_DisableTxInt();
 274:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* (LCD_1_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/LCD_1.c **** 
 277:.\Generated_Source\PSoC5/LCD_1.c ****     CyExitCriticalSection(enableInterrupts);
 286              		.loc 1 277 0
 287 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 288 004a 1846     		mov	r0, r3
 289 004c FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC5/LCD_1.c **** }
 290              		.loc 1 278 0
 291 0050 0837     		adds	r7, r7, #8
 292              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 11


 293 0052 BD46     		mov	sp, r7
 294              		.cfi_def_cfa_register 13
 295              		@ sp needed
 296 0054 80BD     		pop	{r7, pc}
 297              	.L13:
 298 0056 00BF     		.align	2
 299              	.L12:
 300 0058 98650040 		.word	1073767832
 301 005c 94640040 		.word	1073767572
 302 0060 80E100E0 		.word	-536813184
 303 0064 92640040 		.word	1073767570
 304              		.cfi_endproc
 305              	.LFE3:
 306              		.size	LCD_1_Stop, .-LCD_1_Stop
 307              		.section	.text.LCD_1_ReadControlRegister,"ax",%progbits
 308              		.align	2
 309              		.global	LCD_1_ReadControlRegister
 310              		.thumb
 311              		.thumb_func
 312              		.type	LCD_1_ReadControlRegister, %function
 313              	LCD_1_ReadControlRegister:
 314              	.LFB4:
 279:.\Generated_Source\PSoC5/LCD_1.c **** 
 280:.\Generated_Source\PSoC5/LCD_1.c **** 
 281:.\Generated_Source\PSoC5/LCD_1.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/LCD_1.c **** * Function Name: LCD_1_ReadControlRegister
 283:.\Generated_Source\PSoC5/LCD_1.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/LCD_1.c **** *
 285:.\Generated_Source\PSoC5/LCD_1.c **** * Summary:
 286:.\Generated_Source\PSoC5/LCD_1.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/LCD_1.c **** *
 288:.\Generated_Source\PSoC5/LCD_1.c **** * Parameters:
 289:.\Generated_Source\PSoC5/LCD_1.c **** *  None.
 290:.\Generated_Source\PSoC5/LCD_1.c **** *
 291:.\Generated_Source\PSoC5/LCD_1.c **** * Return:
 292:.\Generated_Source\PSoC5/LCD_1.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/LCD_1.c **** *
 294:.\Generated_Source\PSoC5/LCD_1.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/LCD_1.c **** uint8 LCD_1_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/LCD_1.c **** {
 315              		.loc 1 296 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320 0000 80B4     		push	{r7}
 321              		.cfi_def_cfa_offset 4
 322              		.cfi_offset 7, -4
 323 0002 00AF     		add	r7, sp, #0
 324              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/LCD_1.c ****         return(0u);
 325              		.loc 1 298 0
 326 0004 0023     		movs	r3, #0
 299:.\Generated_Source\PSoC5/LCD_1.c ****     #else
 300:.\Generated_Source\PSoC5/LCD_1.c ****         return(LCD_1_CONTROL_REG);
 301:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_CONTROL_REG_REMOVED) */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 12


 302:.\Generated_Source\PSoC5/LCD_1.c **** }
 327              		.loc 1 302 0
 328 0006 1846     		mov	r0, r3
 329 0008 BD46     		mov	sp, r7
 330              		.cfi_def_cfa_register 13
 331              		@ sp needed
 332 000a 5DF8047B 		ldr	r7, [sp], #4
 333              		.cfi_restore 7
 334              		.cfi_def_cfa_offset 0
 335 000e 7047     		bx	lr
 336              		.cfi_endproc
 337              	.LFE4:
 338              		.size	LCD_1_ReadControlRegister, .-LCD_1_ReadControlRegister
 339              		.section	.text.LCD_1_WriteControlRegister,"ax",%progbits
 340              		.align	2
 341              		.global	LCD_1_WriteControlRegister
 342              		.thumb
 343              		.thumb_func
 344              		.type	LCD_1_WriteControlRegister, %function
 345              	LCD_1_WriteControlRegister:
 346              	.LFB5:
 303:.\Generated_Source\PSoC5/LCD_1.c **** 
 304:.\Generated_Source\PSoC5/LCD_1.c **** 
 305:.\Generated_Source\PSoC5/LCD_1.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/LCD_1.c **** * Function Name: LCD_1_WriteControlRegister
 307:.\Generated_Source\PSoC5/LCD_1.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/LCD_1.c **** *
 309:.\Generated_Source\PSoC5/LCD_1.c **** * Summary:
 310:.\Generated_Source\PSoC5/LCD_1.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/LCD_1.c **** *
 312:.\Generated_Source\PSoC5/LCD_1.c **** * Parameters:
 313:.\Generated_Source\PSoC5/LCD_1.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/LCD_1.c **** *
 315:.\Generated_Source\PSoC5/LCD_1.c **** * Return:
 316:.\Generated_Source\PSoC5/LCD_1.c **** *  None.
 317:.\Generated_Source\PSoC5/LCD_1.c **** *
 318:.\Generated_Source\PSoC5/LCD_1.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/LCD_1.c **** void  LCD_1_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/LCD_1.c **** {
 347              		.loc 1 320 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 8
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352 0000 80B4     		push	{r7}
 353              		.cfi_def_cfa_offset 4
 354              		.cfi_offset 7, -4
 355 0002 83B0     		sub	sp, sp, #12
 356              		.cfi_def_cfa_offset 16
 357 0004 00AF     		add	r7, sp, #0
 358              		.cfi_def_cfa_register 7
 359 0006 0346     		mov	r3, r0
 360 0008 FB71     		strb	r3, [r7, #7]
 321:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/LCD_1.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/LCD_1.c ****         {
 324:.\Generated_Source\PSoC5/LCD_1.c ****             /* Suppress compiler warning */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 13


 325:.\Generated_Source\PSoC5/LCD_1.c ****         }
 326:.\Generated_Source\PSoC5/LCD_1.c ****     #else
 327:.\Generated_Source\PSoC5/LCD_1.c ****        LCD_1_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/LCD_1.c **** }
 361              		.loc 1 329 0
 362 000a 0C37     		adds	r7, r7, #12
 363              		.cfi_def_cfa_offset 4
 364 000c BD46     		mov	sp, r7
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 000e 5DF8047B 		ldr	r7, [sp], #4
 368              		.cfi_restore 7
 369              		.cfi_def_cfa_offset 0
 370 0012 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE5:
 373              		.size	LCD_1_WriteControlRegister, .-LCD_1_WriteControlRegister
 374              		.section	.text.LCD_1_SetRxInterruptMode,"ax",%progbits
 375              		.align	2
 376              		.global	LCD_1_SetRxInterruptMode
 377              		.thumb
 378              		.thumb_func
 379              		.type	LCD_1_SetRxInterruptMode, %function
 380              	LCD_1_SetRxInterruptMode:
 381              	.LFB6:
 330:.\Generated_Source\PSoC5/LCD_1.c **** 
 331:.\Generated_Source\PSoC5/LCD_1.c **** 
 332:.\Generated_Source\PSoC5/LCD_1.c **** #if(LCD_1_RX_ENABLED || LCD_1_HD_ENABLED)
 333:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/LCD_1.c ****     *
 337:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 338:.\Generated_Source\PSoC5/LCD_1.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/LCD_1.c ****     *
 340:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/LCD_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/LCD_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/LCD_1.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/LCD_1.c ****     *      LCD_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/LCD_1.c ****     *      LCD_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/LCD_1.c ****     *      LCD_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/LCD_1.c ****     *      LCD_1_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/LCD_1.c ****     *      LCD_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/LCD_1.c ****     *      LCD_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/LCD_1.c ****     *      LCD_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/LCD_1.c ****     *
 352:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 353:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 354:.\Generated_Source\PSoC5/LCD_1.c ****     *
 355:.\Generated_Source\PSoC5/LCD_1.c ****     * Theory:
 356:.\Generated_Source\PSoC5/LCD_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/LCD_1.c ****     *
 358:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/LCD_1.c ****     {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 14


 382              		.loc 1 360 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 8
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387 0000 80B4     		push	{r7}
 388              		.cfi_def_cfa_offset 4
 389              		.cfi_offset 7, -4
 390 0002 83B0     		sub	sp, sp, #12
 391              		.cfi_def_cfa_offset 16
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
 394 0006 0346     		mov	r3, r0
 395 0008 FB71     		strb	r3, [r7, #7]
 361:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_RXSTATUS_MASK_REG  = intSrc;
 396              		.loc 1 361 0
 397 000a 044A     		ldr	r2, .L18
 398 000c FB79     		ldrb	r3, [r7, #7]
 399 000e 1370     		strb	r3, [r2]
 362:.\Generated_Source\PSoC5/LCD_1.c ****     }
 400              		.loc 1 362 0
 401 0010 0C37     		adds	r7, r7, #12
 402              		.cfi_def_cfa_offset 4
 403 0012 BD46     		mov	sp, r7
 404              		.cfi_def_cfa_register 13
 405              		@ sp needed
 406 0014 5DF8047B 		ldr	r7, [sp], #4
 407              		.cfi_restore 7
 408              		.cfi_def_cfa_offset 0
 409 0018 7047     		bx	lr
 410              	.L19:
 411 001a 00BF     		.align	2
 412              	.L18:
 413 001c 84640040 		.word	1073767556
 414              		.cfi_endproc
 415              	.LFE6:
 416              		.size	LCD_1_SetRxInterruptMode, .-LCD_1_SetRxInterruptMode
 417              		.section	.text.LCD_1_ReadRxData,"ax",%progbits
 418              		.align	2
 419              		.global	LCD_1_ReadRxData
 420              		.thumb
 421              		.thumb_func
 422              		.type	LCD_1_ReadRxData, %function
 423              	LCD_1_ReadRxData:
 424              	.LFB7:
 363:.\Generated_Source\PSoC5/LCD_1.c **** 
 364:.\Generated_Source\PSoC5/LCD_1.c **** 
 365:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_ReadRxData
 367:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/LCD_1.c ****     *
 369:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 370:.\Generated_Source\PSoC5/LCD_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/LCD_1.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/LCD_1.c ****     *
 373:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 15


 375:.\Generated_Source\PSoC5/LCD_1.c ****     *
 376:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 377:.\Generated_Source\PSoC5/LCD_1.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/LCD_1.c ****     *
 379:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/LCD_1.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/LCD_1.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/LCD_1.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/LCD_1.c ****     *
 388:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
 390:.\Generated_Source\PSoC5/LCD_1.c ****     *
 391:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/LCD_1.c ****     uint8 LCD_1_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/LCD_1.c ****     {
 425              		.loc 1 393 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 7, -4
 433 0002 83B0     		sub	sp, sp, #12
 434              		.cfi_def_cfa_offset 16
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/LCD_1.c **** 
 396:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/LCD_1.c **** 
 398:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/LCD_1.c **** 
 401:.\Generated_Source\PSoC5/LCD_1.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_DisableRxInt();
 437              		.loc 1 402 0
 438 0006 1C4B     		ldr	r3, .L27
 439 0008 0122     		movs	r2, #1
 440 000a 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC5/LCD_1.c **** 
 404:.\Generated_Source\PSoC5/LCD_1.c ****         locRxBufferRead  = LCD_1_rxBufferRead;
 441              		.loc 1 404 0
 442 000c 1B4B     		ldr	r3, .L27+4
 443 000e 1B78     		ldrb	r3, [r3]
 444 0010 BB71     		strb	r3, [r7, #6]
 405:.\Generated_Source\PSoC5/LCD_1.c ****         locRxBufferWrite = LCD_1_rxBufferWrite;
 445              		.loc 1 405 0
 446 0012 1B4B     		ldr	r3, .L27+8
 447 0014 1B78     		ldrb	r3, [r3]
 448 0016 7B71     		strb	r3, [r7, #5]
 406:.\Generated_Source\PSoC5/LCD_1.c **** 
 407:.\Generated_Source\PSoC5/LCD_1.c ****         if( (LCD_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 16


 449              		.loc 1 407 0
 450 0018 1A4B     		ldr	r3, .L27+12
 451 001a 1B78     		ldrb	r3, [r3]
 452 001c DBB2     		uxtb	r3, r3
 453 001e 002B     		cmp	r3, #0
 454 0020 03D1     		bne	.L21
 455              		.loc 1 407 0 is_stmt 0 discriminator 1
 456 0022 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 457 0024 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 458 0026 9A42     		cmp	r2, r3
 459 0028 18D0     		beq	.L22
 460              	.L21:
 408:.\Generated_Source\PSoC5/LCD_1.c ****         {
 409:.\Generated_Source\PSoC5/LCD_1.c ****             rxData = LCD_1_rxBuffer[locRxBufferRead];
 461              		.loc 1 409 0 is_stmt 1
 462 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 463 002c 164A     		ldr	r2, .L27+16
 464 002e D35C     		ldrb	r3, [r2, r3]
 465 0030 FB71     		strb	r3, [r7, #7]
 410:.\Generated_Source\PSoC5/LCD_1.c ****             locRxBufferRead++;
 466              		.loc 1 410 0
 467 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 468 0034 0133     		adds	r3, r3, #1
 469 0036 BB71     		strb	r3, [r7, #6]
 411:.\Generated_Source\PSoC5/LCD_1.c **** 
 412:.\Generated_Source\PSoC5/LCD_1.c ****             if(locRxBufferRead >= LCD_1_RX_BUFFER_SIZE)
 470              		.loc 1 412 0
 471 0038 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 472 003a 072B     		cmp	r3, #7
 473 003c 01D9     		bls	.L23
 413:.\Generated_Source\PSoC5/LCD_1.c ****             {
 414:.\Generated_Source\PSoC5/LCD_1.c ****                 locRxBufferRead = 0u;
 474              		.loc 1 414 0
 475 003e 0023     		movs	r3, #0
 476 0040 BB71     		strb	r3, [r7, #6]
 477              	.L23:
 415:.\Generated_Source\PSoC5/LCD_1.c ****             }
 416:.\Generated_Source\PSoC5/LCD_1.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_rxBufferRead = locRxBufferRead;
 478              		.loc 1 417 0
 479 0042 0E4A     		ldr	r2, .L27+4
 480 0044 BB79     		ldrb	r3, [r7, #6]
 481 0046 1370     		strb	r3, [r2]
 418:.\Generated_Source\PSoC5/LCD_1.c **** 
 419:.\Generated_Source\PSoC5/LCD_1.c ****             if(LCD_1_rxBufferLoopDetect != 0u)
 482              		.loc 1 419 0
 483 0048 0E4B     		ldr	r3, .L27+12
 484 004a 1B78     		ldrb	r3, [r3]
 485 004c DBB2     		uxtb	r3, r3
 486 004e 002B     		cmp	r3, #0
 487 0050 03D0     		beq	.L24
 420:.\Generated_Source\PSoC5/LCD_1.c ****             {
 421:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_rxBufferLoopDetect = 0u;
 488              		.loc 1 421 0
 489 0052 0C4B     		ldr	r3, .L27+12
 490 0054 0022     		movs	r2, #0
 491 0056 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 17


 419:.\Generated_Source\PSoC5/LCD_1.c ****             {
 492              		.loc 1 419 0
 493 0058 03E0     		b	.L25
 494              	.L24:
 495 005a 02E0     		b	.L25
 496              	.L22:
 422:.\Generated_Source\PSoC5/LCD_1.c ****                 #if ((LCD_1_RX_INTERRUPT_ENABLED) && (LCD_1_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/LCD_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/LCD_1.c ****                     #if( LCD_1_HD_ENABLED )
 425:.\Generated_Source\PSoC5/LCD_1.c ****                         if((LCD_1_CONTROL_REG & LCD_1_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/LCD_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/LCD_1.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/LCD_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/LCD_1.c ****                             */
 430:.\Generated_Source\PSoC5/LCD_1.c ****                             LCD_1_RXSTATUS_MASK_REG  |= LCD_1_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/LCD_1.c ****                         }
 432:.\Generated_Source\PSoC5/LCD_1.c ****                     #else
 433:.\Generated_Source\PSoC5/LCD_1.c ****                         LCD_1_RXSTATUS_MASK_REG  |= LCD_1_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/LCD_1.c ****                     #endif /* end LCD_1_HD_ENABLED */
 435:.\Generated_Source\PSoC5/LCD_1.c ****                 #endif /* ((LCD_1_RX_INTERRUPT_ENABLED) && (LCD_1_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/LCD_1.c ****             }
 437:.\Generated_Source\PSoC5/LCD_1.c ****         }
 438:.\Generated_Source\PSoC5/LCD_1.c ****         else
 439:.\Generated_Source\PSoC5/LCD_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/LCD_1.c ****             rxData = LCD_1_RXDATA_REG;
 497              		.loc 1 440 0
 498 005c 0B4B     		ldr	r3, .L27+20
 499 005e 1B78     		ldrb	r3, [r3]
 500 0060 FB71     		strb	r3, [r7, #7]
 501              	.L25:
 441:.\Generated_Source\PSoC5/LCD_1.c ****         }
 442:.\Generated_Source\PSoC5/LCD_1.c **** 
 443:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_EnableRxInt();
 502              		.loc 1 443 0
 503 0062 0B4B     		ldr	r3, .L27+24
 504 0064 0122     		movs	r2, #1
 505 0066 1A60     		str	r2, [r3]
 444:.\Generated_Source\PSoC5/LCD_1.c **** 
 445:.\Generated_Source\PSoC5/LCD_1.c ****     #else
 446:.\Generated_Source\PSoC5/LCD_1.c **** 
 447:.\Generated_Source\PSoC5/LCD_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/LCD_1.c ****         rxData = LCD_1_RXDATA_REG;
 449:.\Generated_Source\PSoC5/LCD_1.c **** 
 450:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/LCD_1.c **** 
 452:.\Generated_Source\PSoC5/LCD_1.c ****         return(rxData);
 506              		.loc 1 452 0
 507 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:.\Generated_Source\PSoC5/LCD_1.c ****     }
 508              		.loc 1 453 0
 509 006a 1846     		mov	r0, r3
 510 006c 0C37     		adds	r7, r7, #12
 511              		.cfi_def_cfa_offset 4
 512 006e BD46     		mov	sp, r7
 513              		.cfi_def_cfa_register 13
 514              		@ sp needed
 515 0070 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 18


 516              		.cfi_restore 7
 517              		.cfi_def_cfa_offset 0
 518 0074 7047     		bx	lr
 519              	.L28:
 520 0076 00BF     		.align	2
 521              	.L27:
 522 0078 80E100E0 		.word	-536813184
 523 007c 00000000 		.word	LCD_1_rxBufferRead
 524 0080 00000000 		.word	LCD_1_rxBufferWrite
 525 0084 00000000 		.word	LCD_1_rxBufferLoopDetect
 526 0088 00000000 		.word	LCD_1_rxBuffer
 527 008c 48650040 		.word	1073767752
 528 0090 00E100E0 		.word	-536813312
 529              		.cfi_endproc
 530              	.LFE7:
 531              		.size	LCD_1_ReadRxData, .-LCD_1_ReadRxData
 532              		.section	.text.LCD_1_ReadRxStatus,"ax",%progbits
 533              		.align	2
 534              		.global	LCD_1_ReadRxStatus
 535              		.thumb
 536              		.thumb_func
 537              		.type	LCD_1_ReadRxStatus, %function
 538              	LCD_1_ReadRxStatus:
 539              	.LFB8:
 454:.\Generated_Source\PSoC5/LCD_1.c **** 
 455:.\Generated_Source\PSoC5/LCD_1.c **** 
 456:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_ReadRxStatus
 458:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/LCD_1.c ****     *
 460:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 461:.\Generated_Source\PSoC5/LCD_1.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/LCD_1.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/LCD_1.c ****     *
 464:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 466:.\Generated_Source\PSoC5/LCD_1.c ****     *
 467:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 468:.\Generated_Source\PSoC5/LCD_1.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/LCD_1.c ****     *
 470:.\Generated_Source\PSoC5/LCD_1.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/LCD_1.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/LCD_1.c ****     *  register read.
 475:.\Generated_Source\PSoC5/LCD_1.c ****     *
 476:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/LCD_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/LCD_1.c ****     *   LCD_1_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/LCD_1.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/LCD_1.c ****     *   LCD_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/LCD_1.c ****     *   bits.
 483:.\Generated_Source\PSoC5/LCD_1.c ****     *
 484:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/LCD_1.c ****     uint8 LCD_1_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/LCD_1.c ****     {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 19


 540              		.loc 1 486 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 8
 543              		@ frame_needed = 1, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 545 0000 80B4     		push	{r7}
 546              		.cfi_def_cfa_offset 4
 547              		.cfi_offset 7, -4
 548 0002 83B0     		sub	sp, sp, #12
 549              		.cfi_def_cfa_offset 16
 550 0004 00AF     		add	r7, sp, #0
 551              		.cfi_def_cfa_register 7
 487:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/LCD_1.c **** 
 489:.\Generated_Source\PSoC5/LCD_1.c ****         status = LCD_1_RXSTATUS_REG & LCD_1_RX_HW_MASK;
 552              		.loc 1 489 0
 553 0006 0C4B     		ldr	r3, .L32
 554 0008 1B78     		ldrb	r3, [r3]
 555 000a DBB2     		uxtb	r3, r3
 556 000c 03F07F03 		and	r3, r3, #127
 557 0010 FB71     		strb	r3, [r7, #7]
 490:.\Generated_Source\PSoC5/LCD_1.c **** 
 491:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/LCD_1.c ****         if(LCD_1_rxBufferOverflow != 0u)
 558              		.loc 1 492 0
 559 0012 0A4B     		ldr	r3, .L32+4
 560 0014 1B78     		ldrb	r3, [r3]
 561 0016 DBB2     		uxtb	r3, r3
 562 0018 002B     		cmp	r3, #0
 563 001a 06D0     		beq	.L30
 493:.\Generated_Source\PSoC5/LCD_1.c ****         {
 494:.\Generated_Source\PSoC5/LCD_1.c ****             status |= LCD_1_RX_STS_SOFT_BUFF_OVER;
 564              		.loc 1 494 0
 565 001c FB79     		ldrb	r3, [r7, #7]
 566 001e 63F07F03 		orn	r3, r3, #127
 567 0022 FB71     		strb	r3, [r7, #7]
 495:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_rxBufferOverflow = 0u;
 568              		.loc 1 495 0
 569 0024 054B     		ldr	r3, .L32+4
 570 0026 0022     		movs	r2, #0
 571 0028 1A70     		strb	r2, [r3]
 572              	.L30:
 496:.\Generated_Source\PSoC5/LCD_1.c ****         }
 497:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/LCD_1.c **** 
 499:.\Generated_Source\PSoC5/LCD_1.c ****         return(status);
 573              		.loc 1 499 0
 574 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:.\Generated_Source\PSoC5/LCD_1.c ****     }
 575              		.loc 1 500 0
 576 002c 1846     		mov	r0, r3
 577 002e 0C37     		adds	r7, r7, #12
 578              		.cfi_def_cfa_offset 4
 579 0030 BD46     		mov	sp, r7
 580              		.cfi_def_cfa_register 13
 581              		@ sp needed
 582 0032 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 20


 583              		.cfi_restore 7
 584              		.cfi_def_cfa_offset 0
 585 0036 7047     		bx	lr
 586              	.L33:
 587              		.align	2
 588              	.L32:
 589 0038 64640040 		.word	1073767524
 590 003c 00000000 		.word	LCD_1_rxBufferOverflow
 591              		.cfi_endproc
 592              	.LFE8:
 593              		.size	LCD_1_ReadRxStatus, .-LCD_1_ReadRxStatus
 594              		.section	.text.LCD_1_GetChar,"ax",%progbits
 595              		.align	2
 596              		.global	LCD_1_GetChar
 597              		.thumb
 598              		.thumb_func
 599              		.type	LCD_1_GetChar, %function
 600              	LCD_1_GetChar:
 601              	.LFB9:
 501:.\Generated_Source\PSoC5/LCD_1.c **** 
 502:.\Generated_Source\PSoC5/LCD_1.c **** 
 503:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_GetChar
 505:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/LCD_1.c ****     *
 507:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 508:.\Generated_Source\PSoC5/LCD_1.c ****     *  Returns the last received byte of data. LCD_1_GetChar() is
 509:.\Generated_Source\PSoC5/LCD_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/LCD_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/LCD_1.c ****     *
 512:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 514:.\Generated_Source\PSoC5/LCD_1.c ****     *
 515:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 516:.\Generated_Source\PSoC5/LCD_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/LCD_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/LCD_1.c ****     *
 519:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/LCD_1.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/LCD_1.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/LCD_1.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/LCD_1.c ****     *
 528:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
 530:.\Generated_Source\PSoC5/LCD_1.c ****     *
 531:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/LCD_1.c ****     uint8 LCD_1_GetChar(void) 
 533:.\Generated_Source\PSoC5/LCD_1.c ****     {
 602              		.loc 1 533 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 8
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606              		@ link register save eliminated.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 21


 607 0000 80B4     		push	{r7}
 608              		.cfi_def_cfa_offset 4
 609              		.cfi_offset 7, -4
 610 0002 83B0     		sub	sp, sp, #12
 611              		.cfi_def_cfa_offset 16
 612 0004 00AF     		add	r7, sp, #0
 613              		.cfi_def_cfa_register 7
 534:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 rxData = 0u;
 614              		.loc 1 534 0
 615 0006 0023     		movs	r3, #0
 616 0008 FB71     		strb	r3, [r7, #7]
 535:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/LCD_1.c **** 
 537:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/LCD_1.c **** 
 541:.\Generated_Source\PSoC5/LCD_1.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_DisableRxInt();
 617              		.loc 1 542 0
 618 000a 234B     		ldr	r3, .L41
 619 000c 0122     		movs	r2, #1
 620 000e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC5/LCD_1.c **** 
 544:.\Generated_Source\PSoC5/LCD_1.c ****         locRxBufferRead  = LCD_1_rxBufferRead;
 621              		.loc 1 544 0
 622 0010 224B     		ldr	r3, .L41+4
 623 0012 1B78     		ldrb	r3, [r3]
 624 0014 BB71     		strb	r3, [r7, #6]
 545:.\Generated_Source\PSoC5/LCD_1.c ****         locRxBufferWrite = LCD_1_rxBufferWrite;
 625              		.loc 1 545 0
 626 0016 224B     		ldr	r3, .L41+8
 627 0018 1B78     		ldrb	r3, [r3]
 628 001a 7B71     		strb	r3, [r7, #5]
 546:.\Generated_Source\PSoC5/LCD_1.c **** 
 547:.\Generated_Source\PSoC5/LCD_1.c ****         if( (LCD_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 629              		.loc 1 547 0
 630 001c 214B     		ldr	r3, .L41+12
 631 001e 1B78     		ldrb	r3, [r3]
 632 0020 DBB2     		uxtb	r3, r3
 633 0022 002B     		cmp	r3, #0
 634 0024 03D1     		bne	.L35
 635              		.loc 1 547 0 is_stmt 0 discriminator 1
 636 0026 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 637 0028 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 638 002a 9A42     		cmp	r2, r3
 639 002c 18D0     		beq	.L36
 640              	.L35:
 548:.\Generated_Source\PSoC5/LCD_1.c ****         {
 549:.\Generated_Source\PSoC5/LCD_1.c ****             rxData = LCD_1_rxBuffer[locRxBufferRead];
 641              		.loc 1 549 0 is_stmt 1
 642 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 643 0030 1D4A     		ldr	r2, .L41+16
 644 0032 D35C     		ldrb	r3, [r2, r3]
 645 0034 FB71     		strb	r3, [r7, #7]
 550:.\Generated_Source\PSoC5/LCD_1.c ****             locRxBufferRead++;
 646              		.loc 1 550 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 22


 647 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 648 0038 0133     		adds	r3, r3, #1
 649 003a BB71     		strb	r3, [r7, #6]
 551:.\Generated_Source\PSoC5/LCD_1.c ****             if(locRxBufferRead >= LCD_1_RX_BUFFER_SIZE)
 650              		.loc 1 551 0
 651 003c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 652 003e 072B     		cmp	r3, #7
 653 0040 01D9     		bls	.L37
 552:.\Generated_Source\PSoC5/LCD_1.c ****             {
 553:.\Generated_Source\PSoC5/LCD_1.c ****                 locRxBufferRead = 0u;
 654              		.loc 1 553 0
 655 0042 0023     		movs	r3, #0
 656 0044 BB71     		strb	r3, [r7, #6]
 657              	.L37:
 554:.\Generated_Source\PSoC5/LCD_1.c ****             }
 555:.\Generated_Source\PSoC5/LCD_1.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_rxBufferRead = locRxBufferRead;
 658              		.loc 1 556 0
 659 0046 154A     		ldr	r2, .L41+4
 660 0048 BB79     		ldrb	r3, [r7, #6]
 661 004a 1370     		strb	r3, [r2]
 557:.\Generated_Source\PSoC5/LCD_1.c **** 
 558:.\Generated_Source\PSoC5/LCD_1.c ****             if(LCD_1_rxBufferLoopDetect != 0u)
 662              		.loc 1 558 0
 663 004c 154B     		ldr	r3, .L41+12
 664 004e 1B78     		ldrb	r3, [r3]
 665 0050 DBB2     		uxtb	r3, r3
 666 0052 002B     		cmp	r3, #0
 667 0054 03D0     		beq	.L38
 559:.\Generated_Source\PSoC5/LCD_1.c ****             {
 560:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_rxBufferLoopDetect = 0u;
 668              		.loc 1 560 0
 669 0056 134B     		ldr	r3, .L41+12
 670 0058 0022     		movs	r2, #0
 671 005a 1A70     		strb	r2, [r3]
 558:.\Generated_Source\PSoC5/LCD_1.c ****             {
 672              		.loc 1 558 0
 673 005c 12E0     		b	.L39
 674              	.L38:
 675 005e 11E0     		b	.L39
 676              	.L36:
 561:.\Generated_Source\PSoC5/LCD_1.c ****                 #if( (LCD_1_RX_INTERRUPT_ENABLED) && (LCD_1_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/LCD_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/LCD_1.c ****                     #if( LCD_1_HD_ENABLED )
 564:.\Generated_Source\PSoC5/LCD_1.c ****                         if((LCD_1_CONTROL_REG & LCD_1_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/LCD_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/LCD_1.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/LCD_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/LCD_1.c ****                             */
 569:.\Generated_Source\PSoC5/LCD_1.c ****                             LCD_1_RXSTATUS_MASK_REG |= LCD_1_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/LCD_1.c ****                         }
 571:.\Generated_Source\PSoC5/LCD_1.c ****                     #else
 572:.\Generated_Source\PSoC5/LCD_1.c ****                         LCD_1_RXSTATUS_MASK_REG |= LCD_1_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/LCD_1.c ****                     #endif /* end LCD_1_HD_ENABLED */
 574:.\Generated_Source\PSoC5/LCD_1.c ****                 #endif /* LCD_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/LCD_1.c ****             }
 576:.\Generated_Source\PSoC5/LCD_1.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 23


 577:.\Generated_Source\PSoC5/LCD_1.c ****         }
 578:.\Generated_Source\PSoC5/LCD_1.c ****         else
 579:.\Generated_Source\PSoC5/LCD_1.c ****         {   rxStatus = LCD_1_RXSTATUS_REG;
 677              		.loc 1 579 0
 678 0060 124B     		ldr	r3, .L41+20
 679 0062 1B78     		ldrb	r3, [r3]
 680 0064 3B71     		strb	r3, [r7, #4]
 580:.\Generated_Source\PSoC5/LCD_1.c ****             if((rxStatus & LCD_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 681              		.loc 1 580 0
 682 0066 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 683 0068 03F02003 		and	r3, r3, #32
 684 006c 002B     		cmp	r3, #0
 685 006e 09D0     		beq	.L39
 581:.\Generated_Source\PSoC5/LCD_1.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/LCD_1.c ****                 rxData = LCD_1_RXDATA_REG;
 686              		.loc 1 582 0
 687 0070 0F4B     		ldr	r3, .L41+24
 688 0072 1B78     		ldrb	r3, [r3]
 689 0074 FB71     		strb	r3, [r7, #7]
 583:.\Generated_Source\PSoC5/LCD_1.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/LCD_1.c ****                 if((rxStatus & (LCD_1_RX_STS_BREAK | LCD_1_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/LCD_1.c ****                                 LCD_1_RX_STS_STOP_ERROR | LCD_1_RX_STS_OVERRUN)) != 0u)
 690              		.loc 1 585 0
 691 0076 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 692 0078 03F01E03 		and	r3, r3, #30
 584:.\Generated_Source\PSoC5/LCD_1.c ****                                 LCD_1_RX_STS_STOP_ERROR | LCD_1_RX_STS_OVERRUN)) != 0u)
 693              		.loc 1 584 0
 694 007c 002B     		cmp	r3, #0
 695 007e 01D0     		beq	.L39
 586:.\Generated_Source\PSoC5/LCD_1.c ****                 {
 587:.\Generated_Source\PSoC5/LCD_1.c ****                     rxData = 0u;
 696              		.loc 1 587 0
 697 0080 0023     		movs	r3, #0
 698 0082 FB71     		strb	r3, [r7, #7]
 699              	.L39:
 588:.\Generated_Source\PSoC5/LCD_1.c ****                 }
 589:.\Generated_Source\PSoC5/LCD_1.c ****             }
 590:.\Generated_Source\PSoC5/LCD_1.c ****         }
 591:.\Generated_Source\PSoC5/LCD_1.c **** 
 592:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_EnableRxInt();
 700              		.loc 1 592 0
 701 0084 0B4B     		ldr	r3, .L41+28
 702 0086 0122     		movs	r2, #1
 703 0088 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC5/LCD_1.c **** 
 594:.\Generated_Source\PSoC5/LCD_1.c ****     #else
 595:.\Generated_Source\PSoC5/LCD_1.c **** 
 596:.\Generated_Source\PSoC5/LCD_1.c ****         rxStatus =LCD_1_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/LCD_1.c ****         if((rxStatus & LCD_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/LCD_1.c ****         {
 599:.\Generated_Source\PSoC5/LCD_1.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/LCD_1.c ****             rxData = LCD_1_RXDATA_REG;
 601:.\Generated_Source\PSoC5/LCD_1.c **** 
 602:.\Generated_Source\PSoC5/LCD_1.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/LCD_1.c ****             if((rxStatus & (LCD_1_RX_STS_BREAK | LCD_1_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/LCD_1.c ****                             LCD_1_RX_STS_STOP_ERROR | LCD_1_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/LCD_1.c ****             {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 24


 606:.\Generated_Source\PSoC5/LCD_1.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/LCD_1.c ****             }
 608:.\Generated_Source\PSoC5/LCD_1.c ****         }
 609:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/LCD_1.c **** 
 611:.\Generated_Source\PSoC5/LCD_1.c ****         return(rxData);
 704              		.loc 1 611 0
 705 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:.\Generated_Source\PSoC5/LCD_1.c ****     }
 706              		.loc 1 612 0
 707 008c 1846     		mov	r0, r3
 708 008e 0C37     		adds	r7, r7, #12
 709              		.cfi_def_cfa_offset 4
 710 0090 BD46     		mov	sp, r7
 711              		.cfi_def_cfa_register 13
 712              		@ sp needed
 713 0092 5DF8047B 		ldr	r7, [sp], #4
 714              		.cfi_restore 7
 715              		.cfi_def_cfa_offset 0
 716 0096 7047     		bx	lr
 717              	.L42:
 718              		.align	2
 719              	.L41:
 720 0098 80E100E0 		.word	-536813184
 721 009c 00000000 		.word	LCD_1_rxBufferRead
 722 00a0 00000000 		.word	LCD_1_rxBufferWrite
 723 00a4 00000000 		.word	LCD_1_rxBufferLoopDetect
 724 00a8 00000000 		.word	LCD_1_rxBuffer
 725 00ac 64640040 		.word	1073767524
 726 00b0 48650040 		.word	1073767752
 727 00b4 00E100E0 		.word	-536813312
 728              		.cfi_endproc
 729              	.LFE9:
 730              		.size	LCD_1_GetChar, .-LCD_1_GetChar
 731              		.section	.text.LCD_1_GetByte,"ax",%progbits
 732              		.align	2
 733              		.global	LCD_1_GetByte
 734              		.thumb
 735              		.thumb_func
 736              		.type	LCD_1_GetByte, %function
 737              	LCD_1_GetByte:
 738              	.LFB10:
 613:.\Generated_Source\PSoC5/LCD_1.c **** 
 614:.\Generated_Source\PSoC5/LCD_1.c **** 
 615:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_GetByte
 617:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/LCD_1.c ****     *
 619:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 620:.\Generated_Source\PSoC5/LCD_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/LCD_1.c ****     *  condition.
 622:.\Generated_Source\PSoC5/LCD_1.c ****     *
 623:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 625:.\Generated_Source\PSoC5/LCD_1.c ****     *
 626:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 627:.\Generated_Source\PSoC5/LCD_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 25


 628:.\Generated_Source\PSoC5/LCD_1.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/LCD_1.c ****     *
 630:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
 632:.\Generated_Source\PSoC5/LCD_1.c ****     *
 633:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/LCD_1.c ****     uint16 LCD_1_GetByte(void) 
 635:.\Generated_Source\PSoC5/LCD_1.c ****     {
 739              		.loc 1 635 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 8
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743 0000 90B5     		push	{r4, r7, lr}
 744              		.cfi_def_cfa_offset 12
 745              		.cfi_offset 4, -12
 746              		.cfi_offset 7, -8
 747              		.cfi_offset 14, -4
 748 0002 83B0     		sub	sp, sp, #12
 749              		.cfi_def_cfa_offset 24
 750 0004 00AF     		add	r7, sp, #0
 751              		.cfi_def_cfa_register 7
 636:.\Generated_Source\PSoC5/LCD_1.c ****         
 637:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/LCD_1.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/LCD_1.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_DisableRxInt();
 752              		.loc 1 640 0
 753 0006 0C4B     		ldr	r3, .L45
 754 0008 0122     		movs	r2, #1
 755 000a 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC5/LCD_1.c ****         locErrorStatus = (uint16)LCD_1_errorStatus;
 756              		.loc 1 641 0
 757 000c 0B4B     		ldr	r3, .L45+4
 758 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 759 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_errorStatus = 0u;
 760              		.loc 1 642 0
 761 0012 0A4B     		ldr	r3, .L45+4
 762 0014 0022     		movs	r2, #0
 763 0016 1A70     		strb	r2, [r3]
 643:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_EnableRxInt();
 764              		.loc 1 643 0
 765 0018 094B     		ldr	r3, .L45+8
 766 001a 0122     		movs	r2, #1
 767 001c 1A60     		str	r2, [r3]
 644:.\Generated_Source\PSoC5/LCD_1.c ****         return ( (uint16)(locErrorStatus << 8u) | LCD_1_ReadRxData() );
 768              		.loc 1 644 0
 769 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 770 0020 1B02     		lsls	r3, r3, #8
 771 0022 9CB2     		uxth	r4, r3
 772 0024 FFF7FEFF 		bl	LCD_1_ReadRxData
 773 0028 0346     		mov	r3, r0
 774 002a 9BB2     		uxth	r3, r3
 775 002c 2343     		orrs	r3, r3, r4
 776 002e 9BB2     		uxth	r3, r3
 645:.\Generated_Source\PSoC5/LCD_1.c ****     #else
 646:.\Generated_Source\PSoC5/LCD_1.c ****         return ( ((uint16)LCD_1_ReadRxStatus() << 8u) | LCD_1_ReadRxData() );
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 26


 647:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* LCD_1_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/LCD_1.c ****         
 649:.\Generated_Source\PSoC5/LCD_1.c ****     }
 777              		.loc 1 649 0
 778 0030 1846     		mov	r0, r3
 779 0032 0C37     		adds	r7, r7, #12
 780              		.cfi_def_cfa_offset 12
 781 0034 BD46     		mov	sp, r7
 782              		.cfi_def_cfa_register 13
 783              		@ sp needed
 784 0036 90BD     		pop	{r4, r7, pc}
 785              	.L46:
 786              		.align	2
 787              	.L45:
 788 0038 80E100E0 		.word	-536813184
 789 003c 00000000 		.word	LCD_1_errorStatus
 790 0040 00E100E0 		.word	-536813312
 791              		.cfi_endproc
 792              	.LFE10:
 793              		.size	LCD_1_GetByte, .-LCD_1_GetByte
 794              		.section	.text.LCD_1_GetRxBufferSize,"ax",%progbits
 795              		.align	2
 796              		.global	LCD_1_GetRxBufferSize
 797              		.thumb
 798              		.thumb_func
 799              		.type	LCD_1_GetRxBufferSize, %function
 800              	LCD_1_GetRxBufferSize:
 801              	.LFB11:
 650:.\Generated_Source\PSoC5/LCD_1.c **** 
 651:.\Generated_Source\PSoC5/LCD_1.c **** 
 652:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_GetRxBufferSize
 654:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/LCD_1.c ****     *
 656:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 657:.\Generated_Source\PSoC5/LCD_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/LCD_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/LCD_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/LCD_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/LCD_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/LCD_1.c ****     *    account.
 663:.\Generated_Source\PSoC5/LCD_1.c ****     *
 664:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 666:.\Generated_Source\PSoC5/LCD_1.c ****     *
 667:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 668:.\Generated_Source\PSoC5/LCD_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/LCD_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/LCD_1.c ****     *
 671:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/LCD_1.c ****     *
 676:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
 678:.\Generated_Source\PSoC5/LCD_1.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 27


 679:.\Generated_Source\PSoC5/LCD_1.c ****     * Theory:
 680:.\Generated_Source\PSoC5/LCD_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/LCD_1.c ****     *
 682:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/LCD_1.c ****     uint8 LCD_1_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/LCD_1.c ****                                                             
 685:.\Generated_Source\PSoC5/LCD_1.c ****     {
 802              		.loc 1 685 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 8
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 807 0000 80B4     		push	{r7}
 808              		.cfi_def_cfa_offset 4
 809              		.cfi_offset 7, -4
 810 0002 83B0     		sub	sp, sp, #12
 811              		.cfi_def_cfa_offset 16
 812 0004 00AF     		add	r7, sp, #0
 813              		.cfi_def_cfa_register 7
 686:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/LCD_1.c **** 
 688:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/LCD_1.c **** 
 690:.\Generated_Source\PSoC5/LCD_1.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_DisableRxInt();
 814              		.loc 1 691 0
 815 0006 1D4B     		ldr	r3, .L54
 816 0008 0122     		movs	r2, #1
 817 000a 1A60     		str	r2, [r3]
 692:.\Generated_Source\PSoC5/LCD_1.c **** 
 693:.\Generated_Source\PSoC5/LCD_1.c ****         if(LCD_1_rxBufferRead == LCD_1_rxBufferWrite)
 818              		.loc 1 693 0
 819 000c 1C4B     		ldr	r3, .L54+4
 820 000e 1B78     		ldrb	r3, [r3]
 821 0010 DAB2     		uxtb	r2, r3
 822 0012 1C4B     		ldr	r3, .L54+8
 823 0014 1B78     		ldrb	r3, [r3]
 824 0016 DBB2     		uxtb	r3, r3
 825 0018 9A42     		cmp	r2, r3
 826 001a 0AD1     		bne	.L48
 694:.\Generated_Source\PSoC5/LCD_1.c ****         {
 695:.\Generated_Source\PSoC5/LCD_1.c ****             if(LCD_1_rxBufferLoopDetect != 0u)
 827              		.loc 1 695 0
 828 001c 1A4B     		ldr	r3, .L54+12
 829 001e 1B78     		ldrb	r3, [r3]
 830 0020 DBB2     		uxtb	r3, r3
 831 0022 002B     		cmp	r3, #0
 832 0024 02D0     		beq	.L49
 696:.\Generated_Source\PSoC5/LCD_1.c ****             {
 697:.\Generated_Source\PSoC5/LCD_1.c ****                 size = LCD_1_RX_BUFFER_SIZE;
 833              		.loc 1 697 0
 834 0026 0823     		movs	r3, #8
 835 0028 FB71     		strb	r3, [r7, #7]
 836 002a 1DE0     		b	.L51
 837              	.L49:
 698:.\Generated_Source\PSoC5/LCD_1.c ****             }
 699:.\Generated_Source\PSoC5/LCD_1.c ****             else
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 28


 700:.\Generated_Source\PSoC5/LCD_1.c ****             {
 701:.\Generated_Source\PSoC5/LCD_1.c ****                 size = 0u;
 838              		.loc 1 701 0
 839 002c 0023     		movs	r3, #0
 840 002e FB71     		strb	r3, [r7, #7]
 841 0030 1AE0     		b	.L51
 842              	.L48:
 702:.\Generated_Source\PSoC5/LCD_1.c ****             }
 703:.\Generated_Source\PSoC5/LCD_1.c ****         }
 704:.\Generated_Source\PSoC5/LCD_1.c ****         else if(LCD_1_rxBufferRead < LCD_1_rxBufferWrite)
 843              		.loc 1 704 0
 844 0032 134B     		ldr	r3, .L54+4
 845 0034 1B78     		ldrb	r3, [r3]
 846 0036 DAB2     		uxtb	r2, r3
 847 0038 124B     		ldr	r3, .L54+8
 848 003a 1B78     		ldrb	r3, [r3]
 849 003c DBB2     		uxtb	r3, r3
 850 003e 9A42     		cmp	r2, r3
 851 0040 08D2     		bcs	.L52
 705:.\Generated_Source\PSoC5/LCD_1.c ****         {
 706:.\Generated_Source\PSoC5/LCD_1.c ****             size = (LCD_1_rxBufferWrite - LCD_1_rxBufferRead);
 852              		.loc 1 706 0
 853 0042 104B     		ldr	r3, .L54+8
 854 0044 1B78     		ldrb	r3, [r3]
 855 0046 DAB2     		uxtb	r2, r3
 856 0048 0D4B     		ldr	r3, .L54+4
 857 004a 1B78     		ldrb	r3, [r3]
 858 004c DBB2     		uxtb	r3, r3
 859 004e D31A     		subs	r3, r2, r3
 860 0050 FB71     		strb	r3, [r7, #7]
 861 0052 09E0     		b	.L51
 862              	.L52:
 707:.\Generated_Source\PSoC5/LCD_1.c ****         }
 708:.\Generated_Source\PSoC5/LCD_1.c ****         else
 709:.\Generated_Source\PSoC5/LCD_1.c ****         {
 710:.\Generated_Source\PSoC5/LCD_1.c ****             size = (LCD_1_RX_BUFFER_SIZE - LCD_1_rxBufferRead) + LCD_1_rxBufferWrite;
 863              		.loc 1 710 0
 864 0054 0B4B     		ldr	r3, .L54+8
 865 0056 1B78     		ldrb	r3, [r3]
 866 0058 DAB2     		uxtb	r2, r3
 867 005a 094B     		ldr	r3, .L54+4
 868 005c 1B78     		ldrb	r3, [r3]
 869 005e DBB2     		uxtb	r3, r3
 870 0060 D31A     		subs	r3, r2, r3
 871 0062 DBB2     		uxtb	r3, r3
 872 0064 0833     		adds	r3, r3, #8
 873 0066 FB71     		strb	r3, [r7, #7]
 874              	.L51:
 711:.\Generated_Source\PSoC5/LCD_1.c ****         }
 712:.\Generated_Source\PSoC5/LCD_1.c **** 
 713:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_EnableRxInt();
 875              		.loc 1 713 0
 876 0068 084B     		ldr	r3, .L54+16
 877 006a 0122     		movs	r2, #1
 878 006c 1A60     		str	r2, [r3]
 714:.\Generated_Source\PSoC5/LCD_1.c **** 
 715:.\Generated_Source\PSoC5/LCD_1.c ****     #else
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 29


 716:.\Generated_Source\PSoC5/LCD_1.c **** 
 717:.\Generated_Source\PSoC5/LCD_1.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/LCD_1.c ****         size = ((LCD_1_RXSTATUS_REG & LCD_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC5/LCD_1.c **** 
 720:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/LCD_1.c **** 
 722:.\Generated_Source\PSoC5/LCD_1.c ****         return(size);
 879              		.loc 1 722 0
 880 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723:.\Generated_Source\PSoC5/LCD_1.c ****     }
 881              		.loc 1 723 0
 882 0070 1846     		mov	r0, r3
 883 0072 0C37     		adds	r7, r7, #12
 884              		.cfi_def_cfa_offset 4
 885 0074 BD46     		mov	sp, r7
 886              		.cfi_def_cfa_register 13
 887              		@ sp needed
 888 0076 5DF8047B 		ldr	r7, [sp], #4
 889              		.cfi_restore 7
 890              		.cfi_def_cfa_offset 0
 891 007a 7047     		bx	lr
 892              	.L55:
 893              		.align	2
 894              	.L54:
 895 007c 80E100E0 		.word	-536813184
 896 0080 00000000 		.word	LCD_1_rxBufferRead
 897 0084 00000000 		.word	LCD_1_rxBufferWrite
 898 0088 00000000 		.word	LCD_1_rxBufferLoopDetect
 899 008c 00E100E0 		.word	-536813312
 900              		.cfi_endproc
 901              	.LFE11:
 902              		.size	LCD_1_GetRxBufferSize, .-LCD_1_GetRxBufferSize
 903              		.section	.text.LCD_1_ClearRxBuffer,"ax",%progbits
 904              		.align	2
 905              		.global	LCD_1_ClearRxBuffer
 906              		.thumb
 907              		.thumb_func
 908              		.type	LCD_1_ClearRxBuffer, %function
 909              	LCD_1_ClearRxBuffer:
 910              	.LFB12:
 724:.\Generated_Source\PSoC5/LCD_1.c **** 
 725:.\Generated_Source\PSoC5/LCD_1.c **** 
 726:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_ClearRxBuffer
 728:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/LCD_1.c ****     *
 730:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 731:.\Generated_Source\PSoC5/LCD_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/LCD_1.c ****     *
 733:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 735:.\Generated_Source\PSoC5/LCD_1.c ****     *
 736:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 737:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 738:.\Generated_Source\PSoC5/LCD_1.c ****     *
 739:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferWrite - cleared to zero.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 30


 741:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/LCD_1.c ****     *
 745:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
 747:.\Generated_Source\PSoC5/LCD_1.c ****     *
 748:.\Generated_Source\PSoC5/LCD_1.c ****     * Theory:
 749:.\Generated_Source\PSoC5/LCD_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/LCD_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/LCD_1.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/LCD_1.c ****     *
 753:.\Generated_Source\PSoC5/LCD_1.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/LCD_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/LCD_1.c ****     *
 756:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/LCD_1.c ****     {
 911              		.loc 1 758 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 8
 914              		@ frame_needed = 1, uses_anonymous_args = 0
 915 0000 80B5     		push	{r7, lr}
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 7, -8
 918              		.cfi_offset 14, -4
 919 0002 82B0     		sub	sp, sp, #8
 920              		.cfi_def_cfa_offset 16
 921 0004 00AF     		add	r7, sp, #0
 922              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/LCD_1.c **** 
 761:.\Generated_Source\PSoC5/LCD_1.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/LCD_1.c ****         enableInterrupts = CyEnterCriticalSection();
 923              		.loc 1 762 0
 924 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 925 000a 0346     		mov	r3, r0
 926 000c FB71     		strb	r3, [r7, #7]
 763:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_RXDATA_AUX_CTL_REG |= (uint8)  LCD_1_RX_FIFO_CLR;
 927              		.loc 1 763 0
 928 000e 144A     		ldr	r2, .L57
 929 0010 134B     		ldr	r3, .L57
 930 0012 1B78     		ldrb	r3, [r3]
 931 0014 DBB2     		uxtb	r3, r3
 932 0016 43F00103 		orr	r3, r3, #1
 933 001a DBB2     		uxtb	r3, r3
 934 001c 1370     		strb	r3, [r2]
 764:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_RXDATA_AUX_CTL_REG &= (uint8) ~LCD_1_RX_FIFO_CLR;
 935              		.loc 1 764 0
 936 001e 104A     		ldr	r2, .L57
 937 0020 0F4B     		ldr	r3, .L57
 938 0022 1B78     		ldrb	r3, [r3]
 939 0024 DBB2     		uxtb	r3, r3
 940 0026 23F00103 		bic	r3, r3, #1
 941 002a DBB2     		uxtb	r3, r3
 942 002c 1370     		strb	r3, [r2]
 765:.\Generated_Source\PSoC5/LCD_1.c ****         CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 31


 943              		.loc 1 765 0
 944 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 945 0030 1846     		mov	r0, r3
 946 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC5/LCD_1.c **** 
 767:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/LCD_1.c **** 
 769:.\Generated_Source\PSoC5/LCD_1.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_DisableRxInt();
 947              		.loc 1 770 0
 948 0036 0B4B     		ldr	r3, .L57+4
 949 0038 0122     		movs	r2, #1
 950 003a 1A60     		str	r2, [r3]
 771:.\Generated_Source\PSoC5/LCD_1.c **** 
 772:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_rxBufferRead = 0u;
 951              		.loc 1 772 0
 952 003c 0A4B     		ldr	r3, .L57+8
 953 003e 0022     		movs	r2, #0
 954 0040 1A70     		strb	r2, [r3]
 773:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_rxBufferWrite = 0u;
 955              		.loc 1 773 0
 956 0042 0A4B     		ldr	r3, .L57+12
 957 0044 0022     		movs	r2, #0
 958 0046 1A70     		strb	r2, [r3]
 774:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_rxBufferLoopDetect = 0u;
 959              		.loc 1 774 0
 960 0048 094B     		ldr	r3, .L57+16
 961 004a 0022     		movs	r2, #0
 962 004c 1A70     		strb	r2, [r3]
 775:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_rxBufferOverflow = 0u;
 963              		.loc 1 775 0
 964 004e 094B     		ldr	r3, .L57+20
 965 0050 0022     		movs	r2, #0
 966 0052 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC5/LCD_1.c **** 
 777:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_EnableRxInt();
 967              		.loc 1 777 0
 968 0054 084B     		ldr	r3, .L57+24
 969 0056 0122     		movs	r2, #1
 970 0058 1A60     		str	r2, [r3]
 778:.\Generated_Source\PSoC5/LCD_1.c **** 
 779:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/LCD_1.c **** 
 781:.\Generated_Source\PSoC5/LCD_1.c ****     }
 971              		.loc 1 781 0
 972 005a 0837     		adds	r7, r7, #8
 973              		.cfi_def_cfa_offset 8
 974 005c BD46     		mov	sp, r7
 975              		.cfi_def_cfa_register 13
 976              		@ sp needed
 977 005e 80BD     		pop	{r7, pc}
 978              	.L58:
 979              		.align	2
 980              	.L57:
 981 0060 98650040 		.word	1073767832
 982 0064 80E100E0 		.word	-536813184
 983 0068 00000000 		.word	LCD_1_rxBufferRead
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 32


 984 006c 00000000 		.word	LCD_1_rxBufferWrite
 985 0070 00000000 		.word	LCD_1_rxBufferLoopDetect
 986 0074 00000000 		.word	LCD_1_rxBufferOverflow
 987 0078 00E100E0 		.word	-536813312
 988              		.cfi_endproc
 989              	.LFE12:
 990              		.size	LCD_1_ClearRxBuffer, .-LCD_1_ClearRxBuffer
 991              		.section	.text.LCD_1_SetRxAddressMode,"ax",%progbits
 992              		.align	2
 993              		.global	LCD_1_SetRxAddressMode
 994              		.thumb
 995              		.thumb_func
 996              		.type	LCD_1_SetRxAddressMode, %function
 997              	LCD_1_SetRxAddressMode:
 998              	.LFB13:
 782:.\Generated_Source\PSoC5/LCD_1.c **** 
 783:.\Generated_Source\PSoC5/LCD_1.c **** 
 784:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_SetRxAddressMode
 786:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/LCD_1.c ****     *
 788:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 789:.\Generated_Source\PSoC5/LCD_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/LCD_1.c ****     *  UART.
 791:.\Generated_Source\PSoC5/LCD_1.c ****     *
 792:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/LCD_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/LCD_1.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/LCD_1.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/LCD_1.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/LCD_1.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/LCD_1.c ****     *
 804:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 805:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 806:.\Generated_Source\PSoC5/LCD_1.c ****     *
 807:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/LCD_1.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/LCD_1.c ****     *
 812:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/LCD_1.c ****                                                         
 815:.\Generated_Source\PSoC5/LCD_1.c ****     {
 999              		.loc 1 815 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 8
 1002              		@ frame_needed = 1, uses_anonymous_args = 0
 1003              		@ link register save eliminated.
 1004 0000 80B4     		push	{r7}
 1005              		.cfi_def_cfa_offset 4
 1006              		.cfi_offset 7, -4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 33


 1007 0002 83B0     		sub	sp, sp, #12
 1008              		.cfi_def_cfa_offset 16
 1009 0004 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 1011 0006 0346     		mov	r3, r0
 1012 0008 FB71     		strb	r3, [r7, #7]
 816:.\Generated_Source\PSoC5/LCD_1.c ****         #if(LCD_1_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/LCD_1.c ****             #if(LCD_1_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/LCD_1.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/LCD_1.c ****                 {
 820:.\Generated_Source\PSoC5/LCD_1.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/LCD_1.c ****                 }
 822:.\Generated_Source\PSoC5/LCD_1.c ****             #else /* LCD_1_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/LCD_1.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/LCD_1.c ****                 tmpCtrl = LCD_1_CONTROL_REG & (uint8)~LCD_1_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/LCD_1.c ****                 tmpCtrl |= (uint8)(addressMode << LCD_1_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/LCD_1.c **** 
 828:.\Generated_Source\PSoC5/LCD_1.c ****                 #if(LCD_1_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/LCD_1.c ****                    (LCD_1_RXBUFFERSIZE > LCD_1_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/LCD_1.c ****                     LCD_1_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/LCD_1.c ****                     LCD_1_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/LCD_1.c ****                 #endif /* End LCD_1_RXBUFFERSIZE > LCD_1_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/LCD_1.c ****             #endif /* End LCD_1_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/LCD_1.c ****         #else /* LCD_1_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/LCD_1.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/LCD_1.c ****             {
 837:.\Generated_Source\PSoC5/LCD_1.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/LCD_1.c ****             }
 839:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* End LCD_1_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1013              		.loc 1 840 0
 1014 000a 0C37     		adds	r7, r7, #12
 1015              		.cfi_def_cfa_offset 4
 1016 000c BD46     		mov	sp, r7
 1017              		.cfi_def_cfa_register 13
 1018              		@ sp needed
 1019 000e 5DF8047B 		ldr	r7, [sp], #4
 1020              		.cfi_restore 7
 1021              		.cfi_def_cfa_offset 0
 1022 0012 7047     		bx	lr
 1023              		.cfi_endproc
 1024              	.LFE13:
 1025              		.size	LCD_1_SetRxAddressMode, .-LCD_1_SetRxAddressMode
 1026              		.section	.text.LCD_1_SetRxAddress1,"ax",%progbits
 1027              		.align	2
 1028              		.global	LCD_1_SetRxAddress1
 1029              		.thumb
 1030              		.thumb_func
 1031              		.type	LCD_1_SetRxAddress1, %function
 1032              	LCD_1_SetRxAddress1:
 1033              	.LFB14:
 841:.\Generated_Source\PSoC5/LCD_1.c **** 
 842:.\Generated_Source\PSoC5/LCD_1.c **** 
 843:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_SetRxAddress1
 845:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 34


 846:.\Generated_Source\PSoC5/LCD_1.c ****     *
 847:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 848:.\Generated_Source\PSoC5/LCD_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/LCD_1.c ****     *
 850:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/LCD_1.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/LCD_1.c ****     *
 853:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 854:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 855:.\Generated_Source\PSoC5/LCD_1.c ****     *
 856:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1034              		.loc 1 858 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 8
 1037              		@ frame_needed = 1, uses_anonymous_args = 0
 1038              		@ link register save eliminated.
 1039 0000 80B4     		push	{r7}
 1040              		.cfi_def_cfa_offset 4
 1041              		.cfi_offset 7, -4
 1042 0002 83B0     		sub	sp, sp, #12
 1043              		.cfi_def_cfa_offset 16
 1044 0004 00AF     		add	r7, sp, #0
 1045              		.cfi_def_cfa_register 7
 1046 0006 0346     		mov	r3, r0
 1047 0008 FB71     		strb	r3, [r7, #7]
 859:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_RXADDRESS1_REG = address;
 1048              		.loc 1 859 0
 1049 000a 044A     		ldr	r2, .L61
 1050 000c FB79     		ldrb	r3, [r7, #7]
 1051 000e 1370     		strb	r3, [r2]
 860:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1052              		.loc 1 860 0
 1053 0010 0C37     		adds	r7, r7, #12
 1054              		.cfi_def_cfa_offset 4
 1055 0012 BD46     		mov	sp, r7
 1056              		.cfi_def_cfa_register 13
 1057              		@ sp needed
 1058 0014 5DF8047B 		ldr	r7, [sp], #4
 1059              		.cfi_restore 7
 1060              		.cfi_def_cfa_offset 0
 1061 0018 7047     		bx	lr
 1062              	.L62:
 1063 001a 00BF     		.align	2
 1064              	.L61:
 1065 001c 28650040 		.word	1073767720
 1066              		.cfi_endproc
 1067              	.LFE14:
 1068              		.size	LCD_1_SetRxAddress1, .-LCD_1_SetRxAddress1
 1069              		.section	.text.LCD_1_SetRxAddress2,"ax",%progbits
 1070              		.align	2
 1071              		.global	LCD_1_SetRxAddress2
 1072              		.thumb
 1073              		.thumb_func
 1074              		.type	LCD_1_SetRxAddress2, %function
 1075              	LCD_1_SetRxAddress2:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 35


 1076              	.LFB15:
 861:.\Generated_Source\PSoC5/LCD_1.c **** 
 862:.\Generated_Source\PSoC5/LCD_1.c **** 
 863:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_SetRxAddress2
 865:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/LCD_1.c ****     *
 867:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 868:.\Generated_Source\PSoC5/LCD_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/LCD_1.c ****     *
 870:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/LCD_1.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/LCD_1.c ****     *
 873:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 874:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 875:.\Generated_Source\PSoC5/LCD_1.c ****     *
 876:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1077              		.loc 1 878 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 8
 1080              		@ frame_needed = 1, uses_anonymous_args = 0
 1081              		@ link register save eliminated.
 1082 0000 80B4     		push	{r7}
 1083              		.cfi_def_cfa_offset 4
 1084              		.cfi_offset 7, -4
 1085 0002 83B0     		sub	sp, sp, #12
 1086              		.cfi_def_cfa_offset 16
 1087 0004 00AF     		add	r7, sp, #0
 1088              		.cfi_def_cfa_register 7
 1089 0006 0346     		mov	r3, r0
 1090 0008 FB71     		strb	r3, [r7, #7]
 879:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_RXADDRESS2_REG = address;
 1091              		.loc 1 879 0
 1092 000a 044A     		ldr	r2, .L64
 1093 000c FB79     		ldrb	r3, [r7, #7]
 1094 000e 1370     		strb	r3, [r2]
 880:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1095              		.loc 1 880 0
 1096 0010 0C37     		adds	r7, r7, #12
 1097              		.cfi_def_cfa_offset 4
 1098 0012 BD46     		mov	sp, r7
 1099              		.cfi_def_cfa_register 13
 1100              		@ sp needed
 1101 0014 5DF8047B 		ldr	r7, [sp], #4
 1102              		.cfi_restore 7
 1103              		.cfi_def_cfa_offset 0
 1104 0018 7047     		bx	lr
 1105              	.L65:
 1106 001a 00BF     		.align	2
 1107              	.L64:
 1108 001c 38650040 		.word	1073767736
 1109              		.cfi_endproc
 1110              	.LFE15:
 1111              		.size	LCD_1_SetRxAddress2, .-LCD_1_SetRxAddress2
 1112              		.section	.text.LCD_1_SetTxInterruptMode,"ax",%progbits
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 36


 1113              		.align	2
 1114              		.global	LCD_1_SetTxInterruptMode
 1115              		.thumb
 1116              		.thumb_func
 1117              		.type	LCD_1_SetTxInterruptMode, %function
 1118              	LCD_1_SetTxInterruptMode:
 1119              	.LFB16:
 881:.\Generated_Source\PSoC5/LCD_1.c **** 
 882:.\Generated_Source\PSoC5/LCD_1.c **** #endif  /* LCD_1_RX_ENABLED || LCD_1_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/LCD_1.c **** 
 884:.\Generated_Source\PSoC5/LCD_1.c **** 
 885:.\Generated_Source\PSoC5/LCD_1.c **** #if( (LCD_1_TX_ENABLED) || (LCD_1_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/LCD_1.c ****     *
 890:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 891:.\Generated_Source\PSoC5/LCD_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/LCD_1.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/LCD_1.c ****     *
 894:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/LCD_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/LCD_1.c ****     *   LCD_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/LCD_1.c ****     *   LCD_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/LCD_1.c ****     *   LCD_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/LCD_1.c ****     *   LCD_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/LCD_1.c ****     *
 901:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 902:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 903:.\Generated_Source\PSoC5/LCD_1.c ****     *
 904:.\Generated_Source\PSoC5/LCD_1.c ****     * Theory:
 905:.\Generated_Source\PSoC5/LCD_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/LCD_1.c ****     *
 907:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1120              		.loc 1 909 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 8
 1123              		@ frame_needed = 1, uses_anonymous_args = 0
 1124              		@ link register save eliminated.
 1125 0000 80B4     		push	{r7}
 1126              		.cfi_def_cfa_offset 4
 1127              		.cfi_offset 7, -4
 1128 0002 83B0     		sub	sp, sp, #12
 1129              		.cfi_def_cfa_offset 16
 1130 0004 00AF     		add	r7, sp, #0
 1131              		.cfi_def_cfa_register 7
 1132 0006 0346     		mov	r3, r0
 1133 0008 FB71     		strb	r3, [r7, #7]
 910:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_TXSTATUS_MASK_REG = intSrc;
 1134              		.loc 1 910 0
 1135 000a 044A     		ldr	r2, .L67
 1136 000c FB79     		ldrb	r3, [r7, #7]
 1137 000e 1370     		strb	r3, [r2]
 911:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1138              		.loc 1 911 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 37


 1139 0010 0C37     		adds	r7, r7, #12
 1140              		.cfi_def_cfa_offset 4
 1141 0012 BD46     		mov	sp, r7
 1142              		.cfi_def_cfa_register 13
 1143              		@ sp needed
 1144 0014 5DF8047B 		ldr	r7, [sp], #4
 1145              		.cfi_restore 7
 1146              		.cfi_def_cfa_offset 0
 1147 0018 7047     		bx	lr
 1148              	.L68:
 1149 001a 00BF     		.align	2
 1150              	.L67:
 1151 001c 82640040 		.word	1073767554
 1152              		.cfi_endproc
 1153              	.LFE16:
 1154              		.size	LCD_1_SetTxInterruptMode, .-LCD_1_SetTxInterruptMode
 1155              		.section	.text.LCD_1_WriteTxData,"ax",%progbits
 1156              		.align	2
 1157              		.global	LCD_1_WriteTxData
 1158              		.thumb
 1159              		.thumb_func
 1160              		.type	LCD_1_WriteTxData, %function
 1161              	LCD_1_WriteTxData:
 1162              	.LFB17:
 912:.\Generated_Source\PSoC5/LCD_1.c **** 
 913:.\Generated_Source\PSoC5/LCD_1.c **** 
 914:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_WriteTxData
 916:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/LCD_1.c ****     *
 918:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 919:.\Generated_Source\PSoC5/LCD_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/LCD_1.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/LCD_1.c ****     *  separately.
 922:.\Generated_Source\PSoC5/LCD_1.c ****     *
 923:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/LCD_1.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/LCD_1.c ****     *
 926:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 927:.\Generated_Source\PSoC5/LCD_1.c ****     * None.
 928:.\Generated_Source\PSoC5/LCD_1.c ****     *
 929:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/LCD_1.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/LCD_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/LCD_1.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/LCD_1.c ****     *
 938:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
 940:.\Generated_Source\PSoC5/LCD_1.c ****     *
 941:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1163              		.loc 1 943 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 38


 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 8
 1166              		@ frame_needed = 1, uses_anonymous_args = 0
 1167              		@ link register save eliminated.
 1168 0000 80B4     		push	{r7}
 1169              		.cfi_def_cfa_offset 4
 1170              		.cfi_offset 7, -4
 1171 0002 83B0     		sub	sp, sp, #12
 1172              		.cfi_def_cfa_offset 16
 1173 0004 00AF     		add	r7, sp, #0
 1174              		.cfi_def_cfa_register 7
 1175 0006 0346     		mov	r3, r0
 1176 0008 FB71     		strb	r3, [r7, #7]
 944:.\Generated_Source\PSoC5/LCD_1.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/LCD_1.c ****         if(LCD_1_initVar != 0u)
 1177              		.loc 1 945 0
 1178 000a 064B     		ldr	r3, .L71
 1179 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1180 000e 002B     		cmp	r3, #0
 1181 0010 02D0     		beq	.L69
 946:.\Generated_Source\PSoC5/LCD_1.c ****         {
 947:.\Generated_Source\PSoC5/LCD_1.c ****         #if (LCD_1_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/LCD_1.c **** 
 949:.\Generated_Source\PSoC5/LCD_1.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_DisableTxInt();
 951:.\Generated_Source\PSoC5/LCD_1.c **** 
 952:.\Generated_Source\PSoC5/LCD_1.c ****             if( (LCD_1_txBufferRead == LCD_1_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/LCD_1.c ****                 ((LCD_1_TXSTATUS_REG & LCD_1_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/LCD_1.c ****             {
 955:.\Generated_Source\PSoC5/LCD_1.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/LCD_1.c ****             }
 958:.\Generated_Source\PSoC5/LCD_1.c ****             else
 959:.\Generated_Source\PSoC5/LCD_1.c ****             {
 960:.\Generated_Source\PSoC5/LCD_1.c ****                 if(LCD_1_txBufferWrite >= LCD_1_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/LCD_1.c ****                 {
 962:.\Generated_Source\PSoC5/LCD_1.c ****                     LCD_1_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/LCD_1.c ****                 }
 964:.\Generated_Source\PSoC5/LCD_1.c **** 
 965:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_txBuffer[LCD_1_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/LCD_1.c **** 
 967:.\Generated_Source\PSoC5/LCD_1.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_txBufferWrite++;
 969:.\Generated_Source\PSoC5/LCD_1.c ****             }
 970:.\Generated_Source\PSoC5/LCD_1.c **** 
 971:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_EnableTxInt();
 972:.\Generated_Source\PSoC5/LCD_1.c **** 
 973:.\Generated_Source\PSoC5/LCD_1.c ****         #else
 974:.\Generated_Source\PSoC5/LCD_1.c **** 
 975:.\Generated_Source\PSoC5/LCD_1.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_TXDATA_REG = txDataByte;
 1182              		.loc 1 976 0
 1183 0012 054A     		ldr	r2, .L71+4
 1184 0014 FB79     		ldrb	r3, [r7, #7]
 1185 0016 1370     		strb	r3, [r2]
 1186              	.L69:
 977:.\Generated_Source\PSoC5/LCD_1.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 39


 978:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /*(LCD_1_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/LCD_1.c ****         }
 980:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1187              		.loc 1 980 0
 1188 0018 0C37     		adds	r7, r7, #12
 1189              		.cfi_def_cfa_offset 4
 1190 001a BD46     		mov	sp, r7
 1191              		.cfi_def_cfa_register 13
 1192              		@ sp needed
 1193 001c 5DF8047B 		ldr	r7, [sp], #4
 1194              		.cfi_restore 7
 1195              		.cfi_def_cfa_offset 0
 1196 0020 7047     		bx	lr
 1197              	.L72:
 1198 0022 00BF     		.align	2
 1199              	.L71:
 1200 0024 00000000 		.word	LCD_1_initVar
 1201 0028 42640040 		.word	1073767490
 1202              		.cfi_endproc
 1203              	.LFE17:
 1204              		.size	LCD_1_WriteTxData, .-LCD_1_WriteTxData
 1205              		.section	.text.LCD_1_ReadTxStatus,"ax",%progbits
 1206              		.align	2
 1207              		.global	LCD_1_ReadTxStatus
 1208              		.thumb
 1209              		.thumb_func
 1210              		.type	LCD_1_ReadTxStatus, %function
 1211              	LCD_1_ReadTxStatus:
 1212              	.LFB18:
 981:.\Generated_Source\PSoC5/LCD_1.c **** 
 982:.\Generated_Source\PSoC5/LCD_1.c **** 
 983:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_ReadTxStatus
 985:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/LCD_1.c ****     *
 987:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
 988:.\Generated_Source\PSoC5/LCD_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/LCD_1.c ****     *
 990:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
 992:.\Generated_Source\PSoC5/LCD_1.c ****     *
 993:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
 994:.\Generated_Source\PSoC5/LCD_1.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/LCD_1.c ****     *
 996:.\Generated_Source\PSoC5/LCD_1.c ****     * Theory:
 997:.\Generated_Source\PSoC5/LCD_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/LCD_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/LCD_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/LCD_1.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/LCD_1.c ****     *
1002:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/LCD_1.c ****     uint8 LCD_1_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1213              		.loc 1 1004 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 40


 1217              		@ link register save eliminated.
 1218 0000 80B4     		push	{r7}
 1219              		.cfi_def_cfa_offset 4
 1220              		.cfi_offset 7, -4
 1221 0002 00AF     		add	r7, sp, #0
 1222              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC5/LCD_1.c ****         return(LCD_1_TXSTATUS_REG);
 1223              		.loc 1 1005 0
 1224 0004 034B     		ldr	r3, .L75
 1225 0006 1B78     		ldrb	r3, [r3]
 1226 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1227              		.loc 1 1006 0
 1228 000a 1846     		mov	r0, r3
 1229 000c BD46     		mov	sp, r7
 1230              		.cfi_def_cfa_register 13
 1231              		@ sp needed
 1232 000e 5DF8047B 		ldr	r7, [sp], #4
 1233              		.cfi_restore 7
 1234              		.cfi_def_cfa_offset 0
 1235 0012 7047     		bx	lr
 1236              	.L76:
 1237              		.align	2
 1238              	.L75:
 1239 0014 62640040 		.word	1073767522
 1240              		.cfi_endproc
 1241              	.LFE18:
 1242              		.size	LCD_1_ReadTxStatus, .-LCD_1_ReadTxStatus
 1243              		.section	.text.LCD_1_PutChar,"ax",%progbits
 1244              		.align	2
 1245              		.global	LCD_1_PutChar
 1246              		.thumb
 1247              		.thumb_func
 1248              		.type	LCD_1_PutChar, %function
 1249              	LCD_1_PutChar:
 1250              	.LFB19:
1007:.\Generated_Source\PSoC5/LCD_1.c **** 
1008:.\Generated_Source\PSoC5/LCD_1.c **** 
1009:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_PutChar
1011:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/LCD_1.c ****     *
1013:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
1014:.\Generated_Source\PSoC5/LCD_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/LCD_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/LCD_1.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/LCD_1.c ****     *
1018:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/LCD_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/LCD_1.c ****     *
1021:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
1022:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
1023:.\Generated_Source\PSoC5/LCD_1.c ****     *
1024:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/LCD_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 41


1028:.\Generated_Source\PSoC5/LCD_1.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/LCD_1.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/LCD_1.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/LCD_1.c ****     *
1034:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
1036:.\Generated_Source\PSoC5/LCD_1.c ****     *
1037:.\Generated_Source\PSoC5/LCD_1.c ****     * Theory:
1038:.\Generated_Source\PSoC5/LCD_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/LCD_1.c ****     *
1040:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1251              		.loc 1 1042 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 8
 1254              		@ frame_needed = 1, uses_anonymous_args = 0
 1255              		@ link register save eliminated.
 1256 0000 80B4     		push	{r7}
 1257              		.cfi_def_cfa_offset 4
 1258              		.cfi_offset 7, -4
 1259 0002 83B0     		sub	sp, sp, #12
 1260              		.cfi_def_cfa_offset 16
 1261 0004 00AF     		add	r7, sp, #0
 1262              		.cfi_def_cfa_register 7
 1263 0006 0346     		mov	r3, r0
 1264 0008 FB71     		strb	r3, [r7, #7]
1043:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/LCD_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/LCD_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/LCD_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/LCD_1.c ****         */
1048:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/LCD_1.c **** 
1051:.\Generated_Source\PSoC5/LCD_1.c ****         do
1052:.\Generated_Source\PSoC5/LCD_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/LCD_1.c **** 
1054:.\Generated_Source\PSoC5/LCD_1.c ****         #if ((LCD_1_TX_BUFFER_SIZE > LCD_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/LCD_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_DisableTxInt();
1057:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* (LCD_1_TX_BUFFER_SIZE > LCD_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/LCD_1.c **** 
1059:.\Generated_Source\PSoC5/LCD_1.c ****             locTxBufferWrite = LCD_1_txBufferWrite;
1060:.\Generated_Source\PSoC5/LCD_1.c ****             locTxBufferRead  = LCD_1_txBufferRead;
1061:.\Generated_Source\PSoC5/LCD_1.c **** 
1062:.\Generated_Source\PSoC5/LCD_1.c ****         #if ((LCD_1_TX_BUFFER_SIZE > LCD_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/LCD_1.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_EnableTxInt();
1065:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* (LCD_1_TX_BUFFER_SIZE > LCD_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/LCD_1.c ****         }
1067:.\Generated_Source\PSoC5/LCD_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/LCD_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/LCD_1.c ****                                 (uint8)(LCD_1_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/LCD_1.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 42


1071:.\Generated_Source\PSoC5/LCD_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/LCD_1.c ****             ((LCD_1_TXSTATUS_REG & LCD_1_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/LCD_1.c ****         {
1074:.\Generated_Source\PSoC5/LCD_1.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/LCD_1.c ****         }
1077:.\Generated_Source\PSoC5/LCD_1.c ****         else
1078:.\Generated_Source\PSoC5/LCD_1.c ****         {
1079:.\Generated_Source\PSoC5/LCD_1.c ****             if(locTxBufferWrite >= LCD_1_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/LCD_1.c ****             {
1081:.\Generated_Source\PSoC5/LCD_1.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/LCD_1.c ****             }
1083:.\Generated_Source\PSoC5/LCD_1.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/LCD_1.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/LCD_1.c **** 
1087:.\Generated_Source\PSoC5/LCD_1.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/LCD_1.c ****         #if ((LCD_1_TX_BUFFER_SIZE > LCD_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_DisableTxInt();
1090:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* (LCD_1_TX_BUFFER_SIZE > LCD_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/LCD_1.c **** 
1092:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/LCD_1.c **** 
1094:.\Generated_Source\PSoC5/LCD_1.c ****         #if ((LCD_1_TX_BUFFER_SIZE > LCD_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_EnableTxInt();
1096:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* (LCD_1_TX_BUFFER_SIZE > LCD_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/LCD_1.c **** 
1098:.\Generated_Source\PSoC5/LCD_1.c ****             if(0u != (LCD_1_TXSTATUS_REG & LCD_1_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/LCD_1.c ****             {
1100:.\Generated_Source\PSoC5/LCD_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/LCD_1.c ****             }
1103:.\Generated_Source\PSoC5/LCD_1.c ****         }
1104:.\Generated_Source\PSoC5/LCD_1.c **** 
1105:.\Generated_Source\PSoC5/LCD_1.c ****     #else
1106:.\Generated_Source\PSoC5/LCD_1.c **** 
1107:.\Generated_Source\PSoC5/LCD_1.c ****         while((LCD_1_TXSTATUS_REG & LCD_1_TX_STS_FIFO_FULL) != 0u)
 1265              		.loc 1 1107 0
 1266 000a 00BF     		nop
 1267              	.L78:
 1268              		.loc 1 1107 0 is_stmt 0 discriminator 1
 1269 000c 074B     		ldr	r3, .L79
 1270 000e 1B78     		ldrb	r3, [r3]
 1271 0010 DBB2     		uxtb	r3, r3
 1272 0012 03F00403 		and	r3, r3, #4
 1273 0016 002B     		cmp	r3, #0
 1274 0018 F8D1     		bne	.L78
1108:.\Generated_Source\PSoC5/LCD_1.c ****         {
1109:.\Generated_Source\PSoC5/LCD_1.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/LCD_1.c ****         }
1111:.\Generated_Source\PSoC5/LCD_1.c **** 
1112:.\Generated_Source\PSoC5/LCD_1.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_TXDATA_REG = txDataByte;
 1275              		.loc 1 1113 0 is_stmt 1
 1276 001a 054A     		ldr	r2, .L79+4
 1277 001c FB79     		ldrb	r3, [r7, #7]
 1278 001e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 43


1114:.\Generated_Source\PSoC5/LCD_1.c **** 
1115:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* LCD_1_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1279              		.loc 1 1116 0
 1280 0020 0C37     		adds	r7, r7, #12
 1281              		.cfi_def_cfa_offset 4
 1282 0022 BD46     		mov	sp, r7
 1283              		.cfi_def_cfa_register 13
 1284              		@ sp needed
 1285 0024 5DF8047B 		ldr	r7, [sp], #4
 1286              		.cfi_restore 7
 1287              		.cfi_def_cfa_offset 0
 1288 0028 7047     		bx	lr
 1289              	.L80:
 1290 002a 00BF     		.align	2
 1291              	.L79:
 1292 002c 62640040 		.word	1073767522
 1293 0030 42640040 		.word	1073767490
 1294              		.cfi_endproc
 1295              	.LFE19:
 1296              		.size	LCD_1_PutChar, .-LCD_1_PutChar
 1297              		.section	.text.LCD_1_PutString,"ax",%progbits
 1298              		.align	2
 1299              		.global	LCD_1_PutString
 1300              		.thumb
 1301              		.thumb_func
 1302              		.type	LCD_1_PutString, %function
 1303              	LCD_1_PutString:
 1304              	.LFB20:
1117:.\Generated_Source\PSoC5/LCD_1.c **** 
1118:.\Generated_Source\PSoC5/LCD_1.c **** 
1119:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_PutString
1121:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/LCD_1.c ****     *
1123:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
1124:.\Generated_Source\PSoC5/LCD_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/LCD_1.c ****     *
1126:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/LCD_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/LCD_1.c ****     *
1129:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
1130:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
1131:.\Generated_Source\PSoC5/LCD_1.c ****     *
1132:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/LCD_1.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/LCD_1.c ****     *
1136:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
1138:.\Generated_Source\PSoC5/LCD_1.c ****     *
1139:.\Generated_Source\PSoC5/LCD_1.c ****     * Theory:
1140:.\Generated_Source\PSoC5/LCD_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/LCD_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/LCD_1.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/LCD_1.c ****     *
1144:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 44


1145:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1305              		.loc 1 1146 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 16
 1308              		@ frame_needed = 1, uses_anonymous_args = 0
 1309 0000 80B5     		push	{r7, lr}
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 7, -8
 1312              		.cfi_offset 14, -4
 1313 0002 84B0     		sub	sp, sp, #16
 1314              		.cfi_def_cfa_offset 24
 1315 0004 00AF     		add	r7, sp, #0
 1316              		.cfi_def_cfa_register 7
 1317 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC5/LCD_1.c ****         uint16 bufIndex = 0u;
 1318              		.loc 1 1147 0
 1319 0008 0023     		movs	r3, #0
 1320 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:.\Generated_Source\PSoC5/LCD_1.c **** 
1149:.\Generated_Source\PSoC5/LCD_1.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/LCD_1.c ****         if(LCD_1_initVar != 0u)
 1321              		.loc 1 1150 0
 1322 000c 0B4B     		ldr	r3, .L85
 1323 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1324 0010 002B     		cmp	r3, #0
 1325 0012 10D0     		beq	.L81
1151:.\Generated_Source\PSoC5/LCD_1.c ****         {
1152:.\Generated_Source\PSoC5/LCD_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/LCD_1.c ****             while(string[bufIndex] != (char8) 0)
 1326              		.loc 1 1153 0
 1327 0014 09E0     		b	.L83
 1328              	.L84:
1154:.\Generated_Source\PSoC5/LCD_1.c ****             {
1155:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_PutChar((uint8)string[bufIndex]);
 1329              		.loc 1 1155 0
 1330 0016 FB89     		ldrh	r3, [r7, #14]
 1331 0018 7A68     		ldr	r2, [r7, #4]
 1332 001a 1344     		add	r3, r3, r2
 1333 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1334 001e 1846     		mov	r0, r3
 1335 0020 FFF7FEFF 		bl	LCD_1_PutChar
1156:.\Generated_Source\PSoC5/LCD_1.c ****                 bufIndex++;
 1336              		.loc 1 1156 0
 1337 0024 FB89     		ldrh	r3, [r7, #14]
 1338 0026 0133     		adds	r3, r3, #1
 1339 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1340              	.L83:
1153:.\Generated_Source\PSoC5/LCD_1.c ****             {
 1341              		.loc 1 1153 0
 1342 002a FB89     		ldrh	r3, [r7, #14]
 1343 002c 7A68     		ldr	r2, [r7, #4]
 1344 002e 1344     		add	r3, r3, r2
 1345 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1346 0032 002B     		cmp	r3, #0
 1347 0034 EFD1     		bne	.L84
 1348              	.L81:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 45


1157:.\Generated_Source\PSoC5/LCD_1.c ****             }
1158:.\Generated_Source\PSoC5/LCD_1.c ****         }
1159:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1349              		.loc 1 1159 0
 1350 0036 1037     		adds	r7, r7, #16
 1351              		.cfi_def_cfa_offset 8
 1352 0038 BD46     		mov	sp, r7
 1353              		.cfi_def_cfa_register 13
 1354              		@ sp needed
 1355 003a 80BD     		pop	{r7, pc}
 1356              	.L86:
 1357              		.align	2
 1358              	.L85:
 1359 003c 00000000 		.word	LCD_1_initVar
 1360              		.cfi_endproc
 1361              	.LFE20:
 1362              		.size	LCD_1_PutString, .-LCD_1_PutString
 1363              		.section	.text.LCD_1_PutArray,"ax",%progbits
 1364              		.align	2
 1365              		.global	LCD_1_PutArray
 1366              		.thumb
 1367              		.thumb_func
 1368              		.type	LCD_1_PutArray, %function
 1369              	LCD_1_PutArray:
 1370              	.LFB21:
1160:.\Generated_Source\PSoC5/LCD_1.c **** 
1161:.\Generated_Source\PSoC5/LCD_1.c **** 
1162:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_PutArray
1164:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/LCD_1.c ****     *
1166:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
1167:.\Generated_Source\PSoC5/LCD_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/LCD_1.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/LCD_1.c ****     *
1170:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/LCD_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/LCD_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/LCD_1.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/LCD_1.c ****     *
1175:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
1176:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
1177:.\Generated_Source\PSoC5/LCD_1.c ****     *
1178:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/LCD_1.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/LCD_1.c ****     *
1182:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
1184:.\Generated_Source\PSoC5/LCD_1.c ****     *
1185:.\Generated_Source\PSoC5/LCD_1.c ****     * Theory:
1186:.\Generated_Source\PSoC5/LCD_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/LCD_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/LCD_1.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/LCD_1.c ****     *
1190:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_PutArray(const uint8 string[], uint8 byteCount)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 46


1192:.\Generated_Source\PSoC5/LCD_1.c ****                                                                     
1193:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1371              		.loc 1 1193 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 16
 1374              		@ frame_needed = 1, uses_anonymous_args = 0
 1375 0000 80B5     		push	{r7, lr}
 1376              		.cfi_def_cfa_offset 8
 1377              		.cfi_offset 7, -8
 1378              		.cfi_offset 14, -4
 1379 0002 84B0     		sub	sp, sp, #16
 1380              		.cfi_def_cfa_offset 24
 1381 0004 00AF     		add	r7, sp, #0
 1382              		.cfi_def_cfa_register 7
 1383 0006 7860     		str	r0, [r7, #4]
 1384 0008 0B46     		mov	r3, r1
 1385 000a FB70     		strb	r3, [r7, #3]
1194:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 bufIndex = 0u;
 1386              		.loc 1 1194 0
 1387 000c 0023     		movs	r3, #0
 1388 000e FB73     		strb	r3, [r7, #15]
1195:.\Generated_Source\PSoC5/LCD_1.c **** 
1196:.\Generated_Source\PSoC5/LCD_1.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/LCD_1.c ****         if(LCD_1_initVar != 0u)
 1389              		.loc 1 1197 0
 1390 0010 0A4B     		ldr	r3, .L91
 1391 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1392 0014 002B     		cmp	r3, #0
 1393 0016 0ED0     		beq	.L87
1198:.\Generated_Source\PSoC5/LCD_1.c ****         {
1199:.\Generated_Source\PSoC5/LCD_1.c ****             while(bufIndex < byteCount)
 1394              		.loc 1 1199 0
 1395 0018 09E0     		b	.L89
 1396              	.L90:
1200:.\Generated_Source\PSoC5/LCD_1.c ****             {
1201:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_PutChar(string[bufIndex]);
 1397              		.loc 1 1201 0
 1398 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1399 001c 7A68     		ldr	r2, [r7, #4]
 1400 001e 1344     		add	r3, r3, r2
 1401 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 0022 1846     		mov	r0, r3
 1403 0024 FFF7FEFF 		bl	LCD_1_PutChar
1202:.\Generated_Source\PSoC5/LCD_1.c ****                 bufIndex++;
 1404              		.loc 1 1202 0
 1405 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1406 002a 0133     		adds	r3, r3, #1
 1407 002c FB73     		strb	r3, [r7, #15]
 1408              	.L89:
1199:.\Generated_Source\PSoC5/LCD_1.c ****             {
 1409              		.loc 1 1199 0
 1410 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1411 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1412 0032 9A42     		cmp	r2, r3
 1413 0034 F1D3     		bcc	.L90
 1414              	.L87:
1203:.\Generated_Source\PSoC5/LCD_1.c ****             }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 47


1204:.\Generated_Source\PSoC5/LCD_1.c ****         }
1205:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1415              		.loc 1 1205 0
 1416 0036 1037     		adds	r7, r7, #16
 1417              		.cfi_def_cfa_offset 8
 1418 0038 BD46     		mov	sp, r7
 1419              		.cfi_def_cfa_register 13
 1420              		@ sp needed
 1421 003a 80BD     		pop	{r7, pc}
 1422              	.L92:
 1423              		.align	2
 1424              	.L91:
 1425 003c 00000000 		.word	LCD_1_initVar
 1426              		.cfi_endproc
 1427              	.LFE21:
 1428              		.size	LCD_1_PutArray, .-LCD_1_PutArray
 1429              		.section	.text.LCD_1_PutCRLF,"ax",%progbits
 1430              		.align	2
 1431              		.global	LCD_1_PutCRLF
 1432              		.thumb
 1433              		.thumb_func
 1434              		.type	LCD_1_PutCRLF, %function
 1435              	LCD_1_PutCRLF:
 1436              	.LFB22:
1206:.\Generated_Source\PSoC5/LCD_1.c **** 
1207:.\Generated_Source\PSoC5/LCD_1.c **** 
1208:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_PutCRLF
1210:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/LCD_1.c ****     *
1212:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
1213:.\Generated_Source\PSoC5/LCD_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/LCD_1.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/LCD_1.c ****     *
1216:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/LCD_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/LCD_1.c ****     *
1219:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
1220:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
1221:.\Generated_Source\PSoC5/LCD_1.c ****     *
1222:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/LCD_1.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/LCD_1.c ****     *
1226:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
1228:.\Generated_Source\PSoC5/LCD_1.c ****     *
1229:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1437              		.loc 1 1231 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 8
 1440              		@ frame_needed = 1, uses_anonymous_args = 0
 1441 0000 80B5     		push	{r7, lr}
 1442              		.cfi_def_cfa_offset 8
 1443              		.cfi_offset 7, -8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 48


 1444              		.cfi_offset 14, -4
 1445 0002 82B0     		sub	sp, sp, #8
 1446              		.cfi_def_cfa_offset 16
 1447 0004 00AF     		add	r7, sp, #0
 1448              		.cfi_def_cfa_register 7
 1449 0006 0346     		mov	r3, r0
 1450 0008 FB71     		strb	r3, [r7, #7]
1232:.\Generated_Source\PSoC5/LCD_1.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/LCD_1.c ****         if(LCD_1_initVar != 0u)
 1451              		.loc 1 1233 0
 1452 000a 084B     		ldr	r3, .L95
 1453 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1454 000e 002B     		cmp	r3, #0
 1455 0010 09D0     		beq	.L93
1234:.\Generated_Source\PSoC5/LCD_1.c ****         {
1235:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_PutChar(txDataByte);
 1456              		.loc 1 1235 0
 1457 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1458 0014 1846     		mov	r0, r3
 1459 0016 FFF7FEFF 		bl	LCD_1_PutChar
1236:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_PutChar(0x0Du);
 1460              		.loc 1 1236 0
 1461 001a 0D20     		movs	r0, #13
 1462 001c FFF7FEFF 		bl	LCD_1_PutChar
1237:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_PutChar(0x0Au);
 1463              		.loc 1 1237 0
 1464 0020 0A20     		movs	r0, #10
 1465 0022 FFF7FEFF 		bl	LCD_1_PutChar
 1466              	.L93:
1238:.\Generated_Source\PSoC5/LCD_1.c ****         }
1239:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1467              		.loc 1 1239 0
 1468 0026 0837     		adds	r7, r7, #8
 1469              		.cfi_def_cfa_offset 8
 1470 0028 BD46     		mov	sp, r7
 1471              		.cfi_def_cfa_register 13
 1472              		@ sp needed
 1473 002a 80BD     		pop	{r7, pc}
 1474              	.L96:
 1475              		.align	2
 1476              	.L95:
 1477 002c 00000000 		.word	LCD_1_initVar
 1478              		.cfi_endproc
 1479              	.LFE22:
 1480              		.size	LCD_1_PutCRLF, .-LCD_1_PutCRLF
 1481              		.section	.text.LCD_1_GetTxBufferSize,"ax",%progbits
 1482              		.align	2
 1483              		.global	LCD_1_GetTxBufferSize
 1484              		.thumb
 1485              		.thumb_func
 1486              		.type	LCD_1_GetTxBufferSize, %function
 1487              	LCD_1_GetTxBufferSize:
 1488              	.LFB23:
1240:.\Generated_Source\PSoC5/LCD_1.c **** 
1241:.\Generated_Source\PSoC5/LCD_1.c **** 
1242:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_GetTxBufferSize
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 49


1244:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/LCD_1.c ****     *
1246:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
1247:.\Generated_Source\PSoC5/LCD_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/LCD_1.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/LCD_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/LCD_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/LCD_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/LCD_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/LCD_1.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/LCD_1.c ****     *
1255:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
1257:.\Generated_Source\PSoC5/LCD_1.c ****     *
1258:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
1259:.\Generated_Source\PSoC5/LCD_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/LCD_1.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/LCD_1.c ****     *
1262:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/LCD_1.c ****     *
1266:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
1268:.\Generated_Source\PSoC5/LCD_1.c ****     *
1269:.\Generated_Source\PSoC5/LCD_1.c ****     * Theory:
1270:.\Generated_Source\PSoC5/LCD_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/LCD_1.c ****     *
1272:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/LCD_1.c ****     uint8 LCD_1_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/LCD_1.c ****                                                             
1275:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1489              		.loc 1 1275 0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 8
 1492              		@ frame_needed = 1, uses_anonymous_args = 0
 1493              		@ link register save eliminated.
 1494 0000 80B4     		push	{r7}
 1495              		.cfi_def_cfa_offset 4
 1496              		.cfi_offset 7, -4
 1497 0002 83B0     		sub	sp, sp, #12
 1498              		.cfi_def_cfa_offset 16
 1499 0004 00AF     		add	r7, sp, #0
 1500              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/LCD_1.c **** 
1278:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/LCD_1.c **** 
1280:.\Generated_Source\PSoC5/LCD_1.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_DisableTxInt();
1282:.\Generated_Source\PSoC5/LCD_1.c **** 
1283:.\Generated_Source\PSoC5/LCD_1.c ****         if(LCD_1_txBufferRead == LCD_1_txBufferWrite)
1284:.\Generated_Source\PSoC5/LCD_1.c ****         {
1285:.\Generated_Source\PSoC5/LCD_1.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/LCD_1.c ****         }
1287:.\Generated_Source\PSoC5/LCD_1.c ****         else if(LCD_1_txBufferRead < LCD_1_txBufferWrite)
1288:.\Generated_Source\PSoC5/LCD_1.c ****         {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 50


1289:.\Generated_Source\PSoC5/LCD_1.c ****             size = (LCD_1_txBufferWrite - LCD_1_txBufferRead);
1290:.\Generated_Source\PSoC5/LCD_1.c ****         }
1291:.\Generated_Source\PSoC5/LCD_1.c ****         else
1292:.\Generated_Source\PSoC5/LCD_1.c ****         {
1293:.\Generated_Source\PSoC5/LCD_1.c ****             size = (LCD_1_TX_BUFFER_SIZE - LCD_1_txBufferRead) +
1294:.\Generated_Source\PSoC5/LCD_1.c ****                     LCD_1_txBufferWrite;
1295:.\Generated_Source\PSoC5/LCD_1.c ****         }
1296:.\Generated_Source\PSoC5/LCD_1.c **** 
1297:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_EnableTxInt();
1298:.\Generated_Source\PSoC5/LCD_1.c **** 
1299:.\Generated_Source\PSoC5/LCD_1.c ****     #else
1300:.\Generated_Source\PSoC5/LCD_1.c **** 
1301:.\Generated_Source\PSoC5/LCD_1.c ****         size = LCD_1_TXSTATUS_REG;
 1501              		.loc 1 1301 0
 1502 0006 0E4B     		ldr	r3, .L102
 1503 0008 1B78     		ldrb	r3, [r3]
 1504 000a FB71     		strb	r3, [r7, #7]
1302:.\Generated_Source\PSoC5/LCD_1.c **** 
1303:.\Generated_Source\PSoC5/LCD_1.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/LCD_1.c ****         if((size & LCD_1_TX_STS_FIFO_FULL) != 0u)
 1505              		.loc 1 1304 0
 1506 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1507 000e 03F00403 		and	r3, r3, #4
 1508 0012 002B     		cmp	r3, #0
 1509 0014 02D0     		beq	.L98
1305:.\Generated_Source\PSoC5/LCD_1.c ****         {
1306:.\Generated_Source\PSoC5/LCD_1.c ****             size = LCD_1_FIFO_LENGTH;
 1510              		.loc 1 1306 0
 1511 0016 0423     		movs	r3, #4
 1512 0018 FB71     		strb	r3, [r7, #7]
 1513 001a 09E0     		b	.L99
 1514              	.L98:
1307:.\Generated_Source\PSoC5/LCD_1.c ****         }
1308:.\Generated_Source\PSoC5/LCD_1.c ****         else if((size & LCD_1_TX_STS_FIFO_EMPTY) != 0u)
 1515              		.loc 1 1308 0
 1516 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1517 001e 03F00203 		and	r3, r3, #2
 1518 0022 002B     		cmp	r3, #0
 1519 0024 02D0     		beq	.L100
1309:.\Generated_Source\PSoC5/LCD_1.c ****         {
1310:.\Generated_Source\PSoC5/LCD_1.c ****             size = 0u;
 1520              		.loc 1 1310 0
 1521 0026 0023     		movs	r3, #0
 1522 0028 FB71     		strb	r3, [r7, #7]
 1523 002a 01E0     		b	.L99
 1524              	.L100:
1311:.\Generated_Source\PSoC5/LCD_1.c ****         }
1312:.\Generated_Source\PSoC5/LCD_1.c ****         else
1313:.\Generated_Source\PSoC5/LCD_1.c ****         {
1314:.\Generated_Source\PSoC5/LCD_1.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/LCD_1.c ****             size = 1u;
 1525              		.loc 1 1315 0
 1526 002c 0123     		movs	r3, #1
 1527 002e FB71     		strb	r3, [r7, #7]
 1528              	.L99:
1316:.\Generated_Source\PSoC5/LCD_1.c ****         }
1317:.\Generated_Source\PSoC5/LCD_1.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 51


1318:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/LCD_1.c **** 
1320:.\Generated_Source\PSoC5/LCD_1.c ****     return(size);
 1529              		.loc 1 1320 0
 1530 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1531              		.loc 1 1321 0
 1532 0032 1846     		mov	r0, r3
 1533 0034 0C37     		adds	r7, r7, #12
 1534              		.cfi_def_cfa_offset 4
 1535 0036 BD46     		mov	sp, r7
 1536              		.cfi_def_cfa_register 13
 1537              		@ sp needed
 1538 0038 5DF8047B 		ldr	r7, [sp], #4
 1539              		.cfi_restore 7
 1540              		.cfi_def_cfa_offset 0
 1541 003c 7047     		bx	lr
 1542              	.L103:
 1543 003e 00BF     		.align	2
 1544              	.L102:
 1545 0040 62640040 		.word	1073767522
 1546              		.cfi_endproc
 1547              	.LFE23:
 1548              		.size	LCD_1_GetTxBufferSize, .-LCD_1_GetTxBufferSize
 1549              		.section	.text.LCD_1_ClearTxBuffer,"ax",%progbits
 1550              		.align	2
 1551              		.global	LCD_1_ClearTxBuffer
 1552              		.thumb
 1553              		.thumb_func
 1554              		.type	LCD_1_ClearTxBuffer, %function
 1555              	LCD_1_ClearTxBuffer:
 1556              	.LFB24:
1322:.\Generated_Source\PSoC5/LCD_1.c **** 
1323:.\Generated_Source\PSoC5/LCD_1.c **** 
1324:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_ClearTxBuffer
1326:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/LCD_1.c ****     *
1328:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
1329:.\Generated_Source\PSoC5/LCD_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/LCD_1.c ****     *
1331:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
1333:.\Generated_Source\PSoC5/LCD_1.c ****     *
1334:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
1335:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
1336:.\Generated_Source\PSoC5/LCD_1.c ****     *
1337:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/LCD_1.c ****     *
1341:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
1343:.\Generated_Source\PSoC5/LCD_1.c ****     *
1344:.\Generated_Source\PSoC5/LCD_1.c ****     * Theory:
1345:.\Generated_Source\PSoC5/LCD_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/LCD_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 52


1347:.\Generated_Source\PSoC5/LCD_1.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/LCD_1.c ****     *
1349:.\Generated_Source\PSoC5/LCD_1.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/LCD_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/LCD_1.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/LCD_1.c ****     *
1353:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1557              		.loc 1 1355 0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 8
 1560              		@ frame_needed = 1, uses_anonymous_args = 0
 1561 0000 80B5     		push	{r7, lr}
 1562              		.cfi_def_cfa_offset 8
 1563              		.cfi_offset 7, -8
 1564              		.cfi_offset 14, -4
 1565 0002 82B0     		sub	sp, sp, #8
 1566              		.cfi_def_cfa_offset 16
 1567 0004 00AF     		add	r7, sp, #0
 1568              		.cfi_def_cfa_register 7
1356:.\Generated_Source\PSoC5/LCD_1.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/LCD_1.c **** 
1358:.\Generated_Source\PSoC5/LCD_1.c ****         enableInterrupts = CyEnterCriticalSection();
 1569              		.loc 1 1358 0
 1570 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1571 000a 0346     		mov	r3, r0
 1572 000c FB71     		strb	r3, [r7, #7]
1359:.\Generated_Source\PSoC5/LCD_1.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_TXDATA_AUX_CTL_REG |= (uint8)  LCD_1_TX_FIFO_CLR;
 1573              		.loc 1 1360 0
 1574 000e 0B4A     		ldr	r2, .L105
 1575 0010 0A4B     		ldr	r3, .L105
 1576 0012 1B78     		ldrb	r3, [r3]
 1577 0014 DBB2     		uxtb	r3, r3
 1578 0016 43F00103 		orr	r3, r3, #1
 1579 001a DBB2     		uxtb	r3, r3
 1580 001c 1370     		strb	r3, [r2]
1361:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_TXDATA_AUX_CTL_REG &= (uint8) ~LCD_1_TX_FIFO_CLR;
 1581              		.loc 1 1361 0
 1582 001e 074A     		ldr	r2, .L105
 1583 0020 064B     		ldr	r3, .L105
 1584 0022 1B78     		ldrb	r3, [r3]
 1585 0024 DBB2     		uxtb	r3, r3
 1586 0026 23F00103 		bic	r3, r3, #1
 1587 002a DBB2     		uxtb	r3, r3
 1588 002c 1370     		strb	r3, [r2]
1362:.\Generated_Source\PSoC5/LCD_1.c ****         CyExitCriticalSection(enableInterrupts);
 1589              		.loc 1 1362 0
 1590 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1591 0030 1846     		mov	r0, r3
 1592 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC5/LCD_1.c **** 
1364:.\Generated_Source\PSoC5/LCD_1.c ****     #if (LCD_1_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/LCD_1.c **** 
1366:.\Generated_Source\PSoC5/LCD_1.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_DisableTxInt();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 53


1368:.\Generated_Source\PSoC5/LCD_1.c **** 
1369:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/LCD_1.c **** 
1372:.\Generated_Source\PSoC5/LCD_1.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/LCD_1.c ****         LCD_1_EnableTxInt();
1374:.\Generated_Source\PSoC5/LCD_1.c **** 
1375:.\Generated_Source\PSoC5/LCD_1.c ****     #endif /* (LCD_1_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1593              		.loc 1 1376 0
 1594 0036 0837     		adds	r7, r7, #8
 1595              		.cfi_def_cfa_offset 8
 1596 0038 BD46     		mov	sp, r7
 1597              		.cfi_def_cfa_register 13
 1598              		@ sp needed
 1599 003a 80BD     		pop	{r7, pc}
 1600              	.L106:
 1601              		.align	2
 1602              	.L105:
 1603 003c 92640040 		.word	1073767570
 1604              		.cfi_endproc
 1605              	.LFE24:
 1606              		.size	LCD_1_ClearTxBuffer, .-LCD_1_ClearTxBuffer
 1607              		.section	.text.LCD_1_SendBreak,"ax",%progbits
 1608              		.align	2
 1609              		.global	LCD_1_SendBreak
 1610              		.thumb
 1611              		.thumb_func
 1612              		.type	LCD_1_SendBreak, %function
 1613              	LCD_1_SendBreak:
 1614              	.LFB25:
1377:.\Generated_Source\PSoC5/LCD_1.c **** 
1378:.\Generated_Source\PSoC5/LCD_1.c **** 
1379:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_SendBreak
1381:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/LCD_1.c ****     *
1383:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
1384:.\Generated_Source\PSoC5/LCD_1.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/LCD_1.c ****     *
1386:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/LCD_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/LCD_1.c ****     *   LCD_1_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/LCD_1.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/LCD_1.c ****     *   LCD_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/LCD_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/LCD_1.c ****     *   LCD_1_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/LCD_1.c ****     *       then return.
1394:.\Generated_Source\PSoC5/LCD_1.c ****     *   LCD_1_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/LCD_1.c ****     *      LCD_1_SEND_BREAK and LCD_1_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/LCD_1.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/LCD_1.c ****     *
1398:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
1399:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
1400:.\Generated_Source\PSoC5/LCD_1.c ****     *
1401:.\Generated_Source\PSoC5/LCD_1.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/LCD_1.c ****     *  LCD_1_initVar - checked to identify that the component has been
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 54


1403:.\Generated_Source\PSoC5/LCD_1.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/LCD_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/LCD_1.c ****     *
1406:.\Generated_Source\PSoC5/LCD_1.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/LCD_1.c ****     *  No.
1408:.\Generated_Source\PSoC5/LCD_1.c ****     *
1409:.\Generated_Source\PSoC5/LCD_1.c ****     * Theory:
1410:.\Generated_Source\PSoC5/LCD_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/LCD_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/LCD_1.c ****     *  operation.
1413:.\Generated_Source\PSoC5/LCD_1.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/LCD_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/LCD_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/LCD_1.c ****     *     complete.
1417:.\Generated_Source\PSoC5/LCD_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/LCD_1.c ****     *     operation
1419:.\Generated_Source\PSoC5/LCD_1.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/LCD_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/LCD_1.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/LCD_1.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/LCD_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/LCD_1.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/LCD_1.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/LCD_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/LCD_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/LCD_1.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/LCD_1.c ****     *     When interrupt appear with LCD_1_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/LCD_1.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/LCD_1.c ****     *
1432:.\Generated_Source\PSoC5/LCD_1.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/LCD_1.c ****     *  The LCD_1_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/LCD_1.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/LCD_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/LCD_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/LCD_1.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/LCD_1.c ****     *
1439:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1615              		.loc 1 1441 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 16
 1618              		@ frame_needed = 1, uses_anonymous_args = 0
 1619              		@ link register save eliminated.
 1620 0000 80B4     		push	{r7}
 1621              		.cfi_def_cfa_offset 4
 1622              		.cfi_offset 7, -4
 1623 0002 85B0     		sub	sp, sp, #20
 1624              		.cfi_def_cfa_offset 24
 1625 0004 00AF     		add	r7, sp, #0
 1626              		.cfi_def_cfa_register 7
 1627 0006 0346     		mov	r3, r0
 1628 0008 FB71     		strb	r3, [r7, #7]
1442:.\Generated_Source\PSoC5/LCD_1.c **** 
1443:.\Generated_Source\PSoC5/LCD_1.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/LCD_1.c ****         if(LCD_1_initVar != 0u)
 1629              		.loc 1 1444 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 55


 1630 000a 1F4B     		ldr	r3, .L115
 1631 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1632 000e 002B     		cmp	r3, #0
 1633 0010 35D0     		beq	.L107
 1634              	.LBB2:
1445:.\Generated_Source\PSoC5/LCD_1.c ****         {
1446:.\Generated_Source\PSoC5/LCD_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/LCD_1.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/LCD_1.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/LCD_1.c **** 
1450:.\Generated_Source\PSoC5/LCD_1.c ****         #if(LCD_1_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/LCD_1.c **** 
1452:.\Generated_Source\PSoC5/LCD_1.c ****             if( (retMode == LCD_1_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/LCD_1.c ****                 (retMode == LCD_1_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/LCD_1.c ****             {
1455:.\Generated_Source\PSoC5/LCD_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_WriteControlRegister(LCD_1_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/LCD_1.c ****                                                       LCD_1_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/LCD_1.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/LCD_1.c **** 
1461:.\Generated_Source\PSoC5/LCD_1.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/LCD_1.c ****                 {
1463:.\Generated_Source\PSoC5/LCD_1.c ****                     tmpStat = LCD_1_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/LCD_1.c ****                 }
1465:.\Generated_Source\PSoC5/LCD_1.c ****                 while((tmpStat & LCD_1_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/LCD_1.c ****             }
1467:.\Generated_Source\PSoC5/LCD_1.c **** 
1468:.\Generated_Source\PSoC5/LCD_1.c ****             if( (retMode == LCD_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/LCD_1.c ****                 (retMode == LCD_1_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/LCD_1.c ****             {
1471:.\Generated_Source\PSoC5/LCD_1.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/LCD_1.c ****                 {
1473:.\Generated_Source\PSoC5/LCD_1.c ****                     tmpStat = LCD_1_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/LCD_1.c ****                 }
1475:.\Generated_Source\PSoC5/LCD_1.c ****                 while(((uint8)~tmpStat & LCD_1_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/LCD_1.c ****             }
1477:.\Generated_Source\PSoC5/LCD_1.c **** 
1478:.\Generated_Source\PSoC5/LCD_1.c ****             if( (retMode == LCD_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/LCD_1.c ****                 (retMode == LCD_1_REINIT) ||
1480:.\Generated_Source\PSoC5/LCD_1.c ****                 (retMode == LCD_1_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/LCD_1.c ****             {
1482:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_WriteControlRegister(LCD_1_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/LCD_1.c ****                                               (uint8)~LCD_1_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/LCD_1.c ****             }
1485:.\Generated_Source\PSoC5/LCD_1.c **** 
1486:.\Generated_Source\PSoC5/LCD_1.c ****         #else /* LCD_1_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/LCD_1.c **** 
1488:.\Generated_Source\PSoC5/LCD_1.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/LCD_1.c **** 
1490:.\Generated_Source\PSoC5/LCD_1.c ****             if( (retMode == LCD_1_SEND_BREAK) ||
 1635              		.loc 1 1490 0
 1636 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1637 0014 002B     		cmp	r3, #0
 1638 0016 02D0     		beq	.L109
 1639              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1640 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 56


 1641 001a 032B     		cmp	r3, #3
 1642 001c 12D1     		bne	.L110
 1643              	.L109:
1491:.\Generated_Source\PSoC5/LCD_1.c ****                 (retMode == LCD_1_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/LCD_1.c ****             {
1493:.\Generated_Source\PSoC5/LCD_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/LCD_1.c ****                 #if( (LCD_1_PARITY_TYPE != LCD_1__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/LCD_1.c ****                                     (LCD_1_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/LCD_1.c ****                     LCD_1_WriteControlRegister(LCD_1_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/LCD_1.c ****                                                           LCD_1_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/LCD_1.c ****                 #endif /* End LCD_1_PARITY_TYPE != LCD_1__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/LCD_1.c **** 
1500:.\Generated_Source\PSoC5/LCD_1.c ****                 #if(LCD_1_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/LCD_1.c ****                     txPeriod = LCD_1_TXBITCLKTX_COMPLETE_REG;
 1644              		.loc 1 1501 0 is_stmt 1
 1645 001e 1B4B     		ldr	r3, .L115+4
 1646 0020 1B78     		ldrb	r3, [r3]
 1647 0022 DAB2     		uxtb	r2, r3
 1648 0024 1A4B     		ldr	r3, .L115+8
 1649 0026 1A70     		strb	r2, [r3]
1502:.\Generated_Source\PSoC5/LCD_1.c ****                     LCD_1_TXBITCLKTX_COMPLETE_REG = LCD_1_TXBITCTR_BREAKBITS;
 1650              		.loc 1 1502 0
 1651 0028 184B     		ldr	r3, .L115+4
 1652 002a 6722     		movs	r2, #103
 1653 002c 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/LCD_1.c ****                 #else
1504:.\Generated_Source\PSoC5/LCD_1.c ****                     txPeriod = LCD_1_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/LCD_1.c ****                     LCD_1_TXBITCTR_PERIOD_REG = LCD_1_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/LCD_1.c ****                 #endif /* End LCD_1_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/LCD_1.c **** 
1508:.\Generated_Source\PSoC5/LCD_1.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_TXDATA_REG = 0u;
 1654              		.loc 1 1509 0
 1655 002e 194B     		ldr	r3, .L115+12
 1656 0030 0022     		movs	r2, #0
 1657 0032 1A70     		strb	r2, [r3]
 1658              	.L111:
1510:.\Generated_Source\PSoC5/LCD_1.c **** 
1511:.\Generated_Source\PSoC5/LCD_1.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/LCD_1.c ****                 {
1513:.\Generated_Source\PSoC5/LCD_1.c ****                     tmpStat = LCD_1_TXSTATUS_REG;
 1659              		.loc 1 1513 0 discriminator 1
 1660 0034 184B     		ldr	r3, .L115+16
 1661 0036 1B78     		ldrb	r3, [r3]
 1662 0038 FB73     		strb	r3, [r7, #15]
1514:.\Generated_Source\PSoC5/LCD_1.c ****                 }
1515:.\Generated_Source\PSoC5/LCD_1.c ****                 while((tmpStat & LCD_1_TX_STS_FIFO_EMPTY) != 0u);
 1663              		.loc 1 1515 0 discriminator 1
 1664 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1665 003c 03F00203 		and	r3, r3, #2
 1666 0040 002B     		cmp	r3, #0
 1667 0042 F7D1     		bne	.L111
 1668              	.L110:
1516:.\Generated_Source\PSoC5/LCD_1.c ****             }
1517:.\Generated_Source\PSoC5/LCD_1.c **** 
1518:.\Generated_Source\PSoC5/LCD_1.c ****             if( (retMode == LCD_1_WAIT_FOR_COMPLETE_REINIT) ||
 1669              		.loc 1 1518 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 57


 1670 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1671 0046 012B     		cmp	r3, #1
 1672 0048 02D0     		beq	.L112
 1673              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1674 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1675 004c 032B     		cmp	r3, #3
 1676 004e 09D1     		bne	.L113
 1677              	.L112:
1519:.\Generated_Source\PSoC5/LCD_1.c ****                 (retMode == LCD_1_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/LCD_1.c ****             {
1521:.\Generated_Source\PSoC5/LCD_1.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/LCD_1.c ****                 {
1523:.\Generated_Source\PSoC5/LCD_1.c ****                     tmpStat = LCD_1_TXSTATUS_REG;
 1678              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1679 0050 114B     		ldr	r3, .L115+16
 1680 0052 1B78     		ldrb	r3, [r3]
 1681 0054 FB73     		strb	r3, [r7, #15]
1524:.\Generated_Source\PSoC5/LCD_1.c ****                 }
1525:.\Generated_Source\PSoC5/LCD_1.c ****                 while(((uint8)~tmpStat & LCD_1_TX_STS_COMPLETE) != 0u);
 1682              		.loc 1 1525 0 discriminator 1
 1683 0056 FB7B     		ldrb	r3, [r7, #15]
 1684 0058 DB43     		mvns	r3, r3
 1685 005a DBB2     		uxtb	r3, r3
 1686 005c 03F00103 		and	r3, r3, #1
 1687 0060 002B     		cmp	r3, #0
 1688 0062 F5D1     		bne	.L112
 1689              	.L113:
1526:.\Generated_Source\PSoC5/LCD_1.c ****             }
1527:.\Generated_Source\PSoC5/LCD_1.c **** 
1528:.\Generated_Source\PSoC5/LCD_1.c ****             if( (retMode == LCD_1_WAIT_FOR_COMPLETE_REINIT) ||
 1690              		.loc 1 1528 0
 1691 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1692 0066 012B     		cmp	r3, #1
 1693 0068 05D0     		beq	.L114
 1694              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1695 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1696 006c 022B     		cmp	r3, #2
 1697 006e 02D0     		beq	.L114
1529:.\Generated_Source\PSoC5/LCD_1.c ****                 (retMode == LCD_1_REINIT) ||
 1698              		.loc 1 1529 0 is_stmt 1
 1699 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1700 0072 032B     		cmp	r3, #3
 1701 0074 03D1     		bne	.L107
 1702              	.L114:
1530:.\Generated_Source\PSoC5/LCD_1.c ****                 (retMode == LCD_1_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/LCD_1.c ****             {
1532:.\Generated_Source\PSoC5/LCD_1.c **** 
1533:.\Generated_Source\PSoC5/LCD_1.c ****             #if(LCD_1_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1703              		.loc 1 1534 0
 1704 0076 054B     		ldr	r3, .L115+4
 1705 0078 054A     		ldr	r2, .L115+8
 1706 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1707 007c 1A70     		strb	r2, [r3]
 1708              	.L107:
 1709              	.LBE2:
1535:.\Generated_Source\PSoC5/LCD_1.c ****             #else
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 58


1536:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/LCD_1.c ****             #endif /* End LCD_1_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/LCD_1.c **** 
1539:.\Generated_Source\PSoC5/LCD_1.c ****             #if( (LCD_1_PARITY_TYPE != LCD_1__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/LCD_1.c ****                  (LCD_1_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/LCD_1.c ****                 LCD_1_WriteControlRegister(LCD_1_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/LCD_1.c ****                                                       (uint8) ~LCD_1_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/LCD_1.c ****             #endif /* End LCD_1_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/LCD_1.c ****             }
1545:.\Generated_Source\PSoC5/LCD_1.c ****         #endif    /* End LCD_1_HD_ENABLED */
1546:.\Generated_Source\PSoC5/LCD_1.c ****         }
1547:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1710              		.loc 1 1547 0
 1711 007e 1437     		adds	r7, r7, #20
 1712              		.cfi_def_cfa_offset 4
 1713 0080 BD46     		mov	sp, r7
 1714              		.cfi_def_cfa_register 13
 1715              		@ sp needed
 1716 0082 5DF8047B 		ldr	r7, [sp], #4
 1717              		.cfi_restore 7
 1718              		.cfi_def_cfa_offset 0
 1719 0086 7047     		bx	lr
 1720              	.L116:
 1721              		.align	2
 1722              	.L115:
 1723 0088 00000000 		.word	LCD_1_initVar
 1724 008c 33640040 		.word	1073767475
 1725 0090 06000000 		.word	txPeriod.5008
 1726 0094 42640040 		.word	1073767490
 1727 0098 62640040 		.word	1073767522
 1728              		.cfi_endproc
 1729              	.LFE25:
 1730              		.size	LCD_1_SendBreak, .-LCD_1_SendBreak
 1731              		.section	.text.LCD_1_SetTxAddressMode,"ax",%progbits
 1732              		.align	2
 1733              		.global	LCD_1_SetTxAddressMode
 1734              		.thumb
 1735              		.thumb_func
 1736              		.type	LCD_1_SetTxAddressMode, %function
 1737              	LCD_1_SetTxAddressMode:
 1738              	.LFB26:
1548:.\Generated_Source\PSoC5/LCD_1.c **** 
1549:.\Generated_Source\PSoC5/LCD_1.c **** 
1550:.\Generated_Source\PSoC5/LCD_1.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/LCD_1.c ****     * Function Name: LCD_1_SetTxAddressMode
1552:.\Generated_Source\PSoC5/LCD_1.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/LCD_1.c ****     *
1554:.\Generated_Source\PSoC5/LCD_1.c ****     * Summary:
1555:.\Generated_Source\PSoC5/LCD_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/LCD_1.c ****     *
1557:.\Generated_Source\PSoC5/LCD_1.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/LCD_1.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/LCD_1.c ****     *       LCD_1_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/LCD_1.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/LCD_1.c ****     *       LCD_1_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/LCD_1.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/LCD_1.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 59


1564:.\Generated_Source\PSoC5/LCD_1.c ****     * Return:
1565:.\Generated_Source\PSoC5/LCD_1.c ****     *  None.
1566:.\Generated_Source\PSoC5/LCD_1.c ****     *
1567:.\Generated_Source\PSoC5/LCD_1.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/LCD_1.c ****     *  This function sets and clears LCD_1_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/LCD_1.c ****     *  register.
1570:.\Generated_Source\PSoC5/LCD_1.c ****     *
1571:.\Generated_Source\PSoC5/LCD_1.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/LCD_1.c ****     void LCD_1_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/LCD_1.c ****     {
 1739              		.loc 1 1573 0
 1740              		.cfi_startproc
 1741              		@ args = 0, pretend = 0, frame = 8
 1742              		@ frame_needed = 1, uses_anonymous_args = 0
 1743              		@ link register save eliminated.
 1744 0000 80B4     		push	{r7}
 1745              		.cfi_def_cfa_offset 4
 1746              		.cfi_offset 7, -4
 1747 0002 83B0     		sub	sp, sp, #12
 1748              		.cfi_def_cfa_offset 16
 1749 0004 00AF     		add	r7, sp, #0
 1750              		.cfi_def_cfa_register 7
 1751 0006 0346     		mov	r3, r0
 1752 0008 FB71     		strb	r3, [r7, #7]
1574:.\Generated_Source\PSoC5/LCD_1.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC5/LCD_1.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC5/LCD_1.c ****         {
1577:.\Generated_Source\PSoC5/LCD_1.c ****         #if( LCD_1_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_WriteControlRegister(LCD_1_ReadControlRegister() |
1579:.\Generated_Source\PSoC5/LCD_1.c ****                                                   LCD_1_CTRL_MARK);
1580:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* End LCD_1_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC5/LCD_1.c ****         }
1582:.\Generated_Source\PSoC5/LCD_1.c ****         else
1583:.\Generated_Source\PSoC5/LCD_1.c ****         {
1584:.\Generated_Source\PSoC5/LCD_1.c ****         #if( LCD_1_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC5/LCD_1.c ****             LCD_1_WriteControlRegister(LCD_1_ReadControlRegister() &
1586:.\Generated_Source\PSoC5/LCD_1.c ****                                                   (uint8) ~LCD_1_CTRL_MARK);
1587:.\Generated_Source\PSoC5/LCD_1.c ****         #endif /* End LCD_1_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC5/LCD_1.c ****         }
1589:.\Generated_Source\PSoC5/LCD_1.c ****     }
 1753              		.loc 1 1589 0
 1754 000a 0C37     		adds	r7, r7, #12
 1755              		.cfi_def_cfa_offset 4
 1756 000c BD46     		mov	sp, r7
 1757              		.cfi_def_cfa_register 13
 1758              		@ sp needed
 1759 000e 5DF8047B 		ldr	r7, [sp], #4
 1760              		.cfi_restore 7
 1761              		.cfi_def_cfa_offset 0
 1762 0012 7047     		bx	lr
 1763              		.cfi_endproc
 1764              	.LFE26:
 1765              		.size	LCD_1_SetTxAddressMode, .-LCD_1_SetTxAddressMode
 1766              		.bss
 1767              	txPeriod.5008:
 1768 0006 00       		.space	1
 1769              		.text
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 60


 1770              	.Letext0:
 1771              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1772              		.section	.debug_info,"",%progbits
 1773              	.Ldebug_info0:
 1774 0000 E3050000 		.4byte	0x5e3
 1775 0004 0400     		.2byte	0x4
 1776 0006 00000000 		.4byte	.Ldebug_abbrev0
 1777 000a 04       		.byte	0x4
 1778 000b 01       		.uleb128 0x1
 1779 000c 09020000 		.4byte	.LASF72
 1780 0010 01       		.byte	0x1
 1781 0011 A7030000 		.4byte	.LASF73
 1782 0015 66030000 		.4byte	.LASF74
 1783 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1784 001d 00000000 		.4byte	0
 1785 0021 00000000 		.4byte	.Ldebug_line0
 1786 0025 02       		.uleb128 0x2
 1787 0026 01       		.byte	0x1
 1788 0027 06       		.byte	0x6
 1789 0028 8E000000 		.4byte	.LASF0
 1790 002c 02       		.uleb128 0x2
 1791 002d 01       		.byte	0x1
 1792 002e 08       		.byte	0x8
 1793 002f 23030000 		.4byte	.LASF1
 1794 0033 02       		.uleb128 0x2
 1795 0034 02       		.byte	0x2
 1796 0035 05       		.byte	0x5
 1797 0036 4A030000 		.4byte	.LASF2
 1798 003a 02       		.uleb128 0x2
 1799 003b 02       		.byte	0x2
 1800 003c 07       		.byte	0x7
 1801 003d 93010000 		.4byte	.LASF3
 1802 0041 02       		.uleb128 0x2
 1803 0042 04       		.byte	0x4
 1804 0043 05       		.byte	0x5
 1805 0044 CB000000 		.4byte	.LASF4
 1806 0048 02       		.uleb128 0x2
 1807 0049 04       		.byte	0x4
 1808 004a 07       		.byte	0x7
 1809 004b 7C010000 		.4byte	.LASF5
 1810 004f 02       		.uleb128 0x2
 1811 0050 08       		.byte	0x8
 1812 0051 05       		.byte	0x5
 1813 0052 80000000 		.4byte	.LASF6
 1814 0056 02       		.uleb128 0x2
 1815 0057 08       		.byte	0x8
 1816 0058 07       		.byte	0x7
 1817 0059 50000000 		.4byte	.LASF7
 1818 005d 03       		.uleb128 0x3
 1819 005e 04       		.byte	0x4
 1820 005f 05       		.byte	0x5
 1821 0060 696E7400 		.ascii	"int\000"
 1822 0064 02       		.uleb128 0x2
 1823 0065 04       		.byte	0x4
 1824 0066 07       		.byte	0x7
 1825 0067 60010000 		.4byte	.LASF8
 1826 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 61


 1827 006c D4000000 		.4byte	.LASF9
 1828 0070 02       		.byte	0x2
 1829 0071 B4       		.byte	0xb4
 1830 0072 2C000000 		.4byte	0x2c
 1831 0076 04       		.uleb128 0x4
 1832 0077 00000000 		.4byte	.LASF10
 1833 007b 02       		.byte	0x2
 1834 007c B5       		.byte	0xb5
 1835 007d 3A000000 		.4byte	0x3a
 1836 0081 04       		.uleb128 0x4
 1837 0082 2E010000 		.4byte	.LASF11
 1838 0086 02       		.byte	0x2
 1839 0087 B6       		.byte	0xb6
 1840 0088 48000000 		.4byte	0x48
 1841 008c 02       		.uleb128 0x2
 1842 008d 04       		.byte	0x4
 1843 008e 04       		.byte	0x4
 1844 008f C2020000 		.4byte	.LASF12
 1845 0093 02       		.uleb128 0x2
 1846 0094 08       		.byte	0x8
 1847 0095 04       		.byte	0x4
 1848 0096 ED000000 		.4byte	.LASF13
 1849 009a 04       		.uleb128 0x4
 1850 009b 15040000 		.4byte	.LASF14
 1851 009f 02       		.byte	0x2
 1852 00a0 C5       		.byte	0xc5
 1853 00a1 A5000000 		.4byte	0xa5
 1854 00a5 02       		.uleb128 0x2
 1855 00a6 01       		.byte	0x1
 1856 00a7 08       		.byte	0x8
 1857 00a8 F4030000 		.4byte	.LASF15
 1858 00ac 05       		.uleb128 0x5
 1859 00ad 1E030000 		.4byte	.LASF16
 1860 00b1 02       		.byte	0x2
 1861 00b2 5E01     		.2byte	0x15e
 1862 00b4 B8000000 		.4byte	0xb8
 1863 00b8 06       		.uleb128 0x6
 1864 00b9 6B000000 		.4byte	0x6b
 1865 00bd 05       		.uleb128 0x5
 1866 00be D2010000 		.4byte	.LASF17
 1867 00c2 02       		.byte	0x2
 1868 00c3 6001     		.2byte	0x160
 1869 00c5 C9000000 		.4byte	0xc9
 1870 00c9 06       		.uleb128 0x6
 1871 00ca 81000000 		.4byte	0x81
 1872 00ce 02       		.uleb128 0x2
 1873 00cf 04       		.byte	0x4
 1874 00d0 07       		.byte	0x7
 1875 00d1 F2010000 		.4byte	.LASF18
 1876 00d5 07       		.uleb128 0x7
 1877 00d6 12030000 		.4byte	.LASF19
 1878 00da 01       		.byte	0x1
 1879 00db 4C       		.byte	0x4c
 1880 00dc 00000000 		.4byte	.LFB0
 1881 00e0 20000000 		.4byte	.LFE0-.LFB0
 1882 00e4 01       		.uleb128 0x1
 1883 00e5 9C       		.byte	0x9c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 62


 1884 00e6 07       		.uleb128 0x7
 1885 00e7 78040000 		.4byte	.LASF20
 1886 00eb 01       		.byte	0x1
 1887 00ec 6A       		.byte	0x6a
 1888 00ed 00000000 		.4byte	.LFB1
 1889 00f1 58000000 		.4byte	.LFE1-.LFB1
 1890 00f5 01       		.uleb128 0x1
 1891 00f6 9C       		.byte	0x9c
 1892 00f7 08       		.uleb128 0x8
 1893 00f8 08040000 		.4byte	.LASF21
 1894 00fc 01       		.byte	0x1
 1895 00fd B7       		.byte	0xb7
 1896 00fe 00000000 		.4byte	.LFB2
 1897 0102 68000000 		.4byte	.LFE2-.LFB2
 1898 0106 01       		.uleb128 0x1
 1899 0107 9C       		.byte	0x9c
 1900 0108 1B010000 		.4byte	0x11b
 1901 010c 09       		.uleb128 0x9
 1902 010d 83040000 		.4byte	.LASF23
 1903 0111 01       		.byte	0x1
 1904 0112 B9       		.byte	0xb9
 1905 0113 6B000000 		.4byte	0x6b
 1906 0117 02       		.uleb128 0x2
 1907 0118 91       		.byte	0x91
 1908 0119 77       		.sleb128 -9
 1909 011a 00       		.byte	0
 1910 011b 08       		.uleb128 0x8
 1911 011c C7010000 		.4byte	.LASF22
 1912 0120 01       		.byte	0x1
 1913 0121 F0       		.byte	0xf0
 1914 0122 00000000 		.4byte	.LFB3
 1915 0126 68000000 		.4byte	.LFE3-.LFB3
 1916 012a 01       		.uleb128 0x1
 1917 012b 9C       		.byte	0x9c
 1918 012c 3F010000 		.4byte	0x13f
 1919 0130 09       		.uleb128 0x9
 1920 0131 83040000 		.4byte	.LASF23
 1921 0135 01       		.byte	0x1
 1922 0136 F2       		.byte	0xf2
 1923 0137 6B000000 		.4byte	0x6b
 1924 013b 02       		.uleb128 0x2
 1925 013c 91       		.byte	0x91
 1926 013d 77       		.sleb128 -9
 1927 013e 00       		.byte	0
 1928 013f 0A       		.uleb128 0xa
 1929 0140 21000000 		.4byte	.LASF49
 1930 0144 01       		.byte	0x1
 1931 0145 2701     		.2byte	0x127
 1932 0147 6B000000 		.4byte	0x6b
 1933 014b 00000000 		.4byte	.LFB4
 1934 014f 10000000 		.4byte	.LFE4-.LFB4
 1935 0153 01       		.uleb128 0x1
 1936 0154 9C       		.byte	0x9c
 1937 0155 0B       		.uleb128 0xb
 1938 0156 3D010000 		.4byte	.LASF24
 1939 015a 01       		.byte	0x1
 1940 015b 3F01     		.2byte	0x13f
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 63


 1941 015d 00000000 		.4byte	.LFB5
 1942 0161 14000000 		.4byte	.LFE5-.LFB5
 1943 0165 01       		.uleb128 0x1
 1944 0166 9C       		.byte	0x9c
 1945 0167 7B010000 		.4byte	0x17b
 1946 016b 0C       		.uleb128 0xc
 1947 016c 35010000 		.4byte	.LASF26
 1948 0170 01       		.byte	0x1
 1949 0171 3F01     		.2byte	0x13f
 1950 0173 6B000000 		.4byte	0x6b
 1951 0177 02       		.uleb128 0x2
 1952 0178 91       		.byte	0x91
 1953 0179 77       		.sleb128 -9
 1954 017a 00       		.byte	0
 1955 017b 0B       		.uleb128 0xb
 1956 017c 67000000 		.4byte	.LASF25
 1957 0180 01       		.byte	0x1
 1958 0181 6701     		.2byte	0x167
 1959 0183 00000000 		.4byte	.LFB6
 1960 0187 20000000 		.4byte	.LFE6-.LFB6
 1961 018b 01       		.uleb128 0x1
 1962 018c 9C       		.byte	0x9c
 1963 018d A1010000 		.4byte	0x1a1
 1964 0191 0C       		.uleb128 0xc
 1965 0192 AF010000 		.4byte	.LASF27
 1966 0196 01       		.byte	0x1
 1967 0197 6701     		.2byte	0x167
 1968 0199 6B000000 		.4byte	0x6b
 1969 019d 02       		.uleb128 0x2
 1970 019e 91       		.byte	0x91
 1971 019f 77       		.sleb128 -9
 1972 01a0 00       		.byte	0
 1973 01a1 0D       		.uleb128 0xd
 1974 01a2 57040000 		.4byte	.LASF31
 1975 01a6 01       		.byte	0x1
 1976 01a7 8801     		.2byte	0x188
 1977 01a9 6B000000 		.4byte	0x6b
 1978 01ad 00000000 		.4byte	.LFB7
 1979 01b1 94000000 		.4byte	.LFE7-.LFB7
 1980 01b5 01       		.uleb128 0x1
 1981 01b6 9C       		.byte	0x9c
 1982 01b7 E9010000 		.4byte	0x1e9
 1983 01bb 0E       		.uleb128 0xe
 1984 01bc C8030000 		.4byte	.LASF28
 1985 01c0 01       		.byte	0x1
 1986 01c1 8A01     		.2byte	0x18a
 1987 01c3 6B000000 		.4byte	0x6b
 1988 01c7 02       		.uleb128 0x2
 1989 01c8 91       		.byte	0x91
 1990 01c9 77       		.sleb128 -9
 1991 01ca 0E       		.uleb128 0xe
 1992 01cb 68040000 		.4byte	.LASF29
 1993 01cf 01       		.byte	0x1
 1994 01d0 8E01     		.2byte	0x18e
 1995 01d2 6B000000 		.4byte	0x6b
 1996 01d6 02       		.uleb128 0x2
 1997 01d7 91       		.byte	0x91
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 64


 1998 01d8 76       		.sleb128 -10
 1999 01d9 0E       		.uleb128 0xe
 2000 01da B6010000 		.4byte	.LASF30
 2001 01de 01       		.byte	0x1
 2002 01df 8F01     		.2byte	0x18f
 2003 01e1 6B000000 		.4byte	0x6b
 2004 01e5 02       		.uleb128 0x2
 2005 01e6 91       		.byte	0x91
 2006 01e7 75       		.sleb128 -11
 2007 01e8 00       		.byte	0
 2008 01e9 0D       		.uleb128 0xd
 2009 01ea DA000000 		.4byte	.LASF32
 2010 01ee 01       		.byte	0x1
 2011 01ef E501     		.2byte	0x1e5
 2012 01f1 6B000000 		.4byte	0x6b
 2013 01f5 00000000 		.4byte	.LFB8
 2014 01f9 40000000 		.4byte	.LFE8-.LFB8
 2015 01fd 01       		.uleb128 0x1
 2016 01fe 9C       		.byte	0x9c
 2017 01ff 13020000 		.4byte	0x213
 2018 0203 0E       		.uleb128 0xe
 2019 0204 94040000 		.4byte	.LASF33
 2020 0208 01       		.byte	0x1
 2021 0209 E701     		.2byte	0x1e7
 2022 020b 6B000000 		.4byte	0x6b
 2023 020f 02       		.uleb128 0x2
 2024 0210 91       		.byte	0x91
 2025 0211 77       		.sleb128 -9
 2026 0212 00       		.byte	0
 2027 0213 0D       		.uleb128 0xd
 2028 0214 FB010000 		.4byte	.LASF34
 2029 0218 01       		.byte	0x1
 2030 0219 1402     		.2byte	0x214
 2031 021b 6B000000 		.4byte	0x6b
 2032 021f 00000000 		.4byte	.LFB9
 2033 0223 B8000000 		.4byte	.LFE9-.LFB9
 2034 0227 01       		.uleb128 0x1
 2035 0228 9C       		.byte	0x9c
 2036 0229 6A020000 		.4byte	0x26a
 2037 022d 0E       		.uleb128 0xe
 2038 022e C8030000 		.4byte	.LASF28
 2039 0232 01       		.byte	0x1
 2040 0233 1602     		.2byte	0x216
 2041 0235 6B000000 		.4byte	0x6b
 2042 0239 02       		.uleb128 0x2
 2043 023a 91       		.byte	0x91
 2044 023b 77       		.sleb128 -9
 2045 023c 0E       		.uleb128 0xe
 2046 023d 97020000 		.4byte	.LASF35
 2047 0241 01       		.byte	0x1
 2048 0242 1702     		.2byte	0x217
 2049 0244 6B000000 		.4byte	0x6b
 2050 0248 02       		.uleb128 0x2
 2051 0249 91       		.byte	0x91
 2052 024a 74       		.sleb128 -12
 2053 024b 0E       		.uleb128 0xe
 2054 024c 68040000 		.4byte	.LASF29
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 65


 2055 0250 01       		.byte	0x1
 2056 0251 1A02     		.2byte	0x21a
 2057 0253 6B000000 		.4byte	0x6b
 2058 0257 02       		.uleb128 0x2
 2059 0258 91       		.byte	0x91
 2060 0259 76       		.sleb128 -10
 2061 025a 0E       		.uleb128 0xe
 2062 025b B6010000 		.4byte	.LASF30
 2063 025f 01       		.byte	0x1
 2064 0260 1B02     		.2byte	0x21b
 2065 0262 6B000000 		.4byte	0x6b
 2066 0266 02       		.uleb128 0x2
 2067 0267 91       		.byte	0x91
 2068 0268 75       		.sleb128 -11
 2069 0269 00       		.byte	0
 2070 026a 0F       		.uleb128 0xf
 2071 026b 3B000000 		.4byte	.LASF36
 2072 026f 01       		.byte	0x1
 2073 0270 7A02     		.2byte	0x27a
 2074 0272 76000000 		.4byte	0x76
 2075 0276 00000000 		.4byte	.LFB10
 2076 027a 44000000 		.4byte	.LFE10-.LFB10
 2077 027e 01       		.uleb128 0x1
 2078 027f 9C       		.byte	0x9c
 2079 0280 94020000 		.4byte	0x294
 2080 0284 0E       		.uleb128 0xe
 2081 0285 6D010000 		.4byte	.LASF37
 2082 0289 01       		.byte	0x1
 2083 028a 7E02     		.2byte	0x27e
 2084 028c 76000000 		.4byte	0x76
 2085 0290 02       		.uleb128 0x2
 2086 0291 91       		.byte	0x91
 2087 0292 6E       		.sleb128 -18
 2088 0293 00       		.byte	0
 2089 0294 0D       		.uleb128 0xd
 2090 0295 31040000 		.4byte	.LASF38
 2091 0299 01       		.byte	0x1
 2092 029a AB02     		.2byte	0x2ab
 2093 029c 6B000000 		.4byte	0x6b
 2094 02a0 00000000 		.4byte	.LFB11
 2095 02a4 90000000 		.4byte	.LFE11-.LFB11
 2096 02a8 01       		.uleb128 0x1
 2097 02a9 9C       		.byte	0x9c
 2098 02aa BE020000 		.4byte	0x2be
 2099 02ae 0E       		.uleb128 0xe
 2100 02af 8E010000 		.4byte	.LASF39
 2101 02b3 01       		.byte	0x1
 2102 02b4 AE02     		.2byte	0x2ae
 2103 02b6 6B000000 		.4byte	0x6b
 2104 02ba 02       		.uleb128 0x2
 2105 02bb 91       		.byte	0x91
 2106 02bc 77       		.sleb128 -9
 2107 02bd 00       		.byte	0
 2108 02be 10       		.uleb128 0x10
 2109 02bf A0020000 		.4byte	.LASF40
 2110 02c3 01       		.byte	0x1
 2111 02c4 F502     		.2byte	0x2f5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 66


 2112 02c6 00000000 		.4byte	.LFB12
 2113 02ca 7C000000 		.4byte	.LFE12-.LFB12
 2114 02ce 01       		.uleb128 0x1
 2115 02cf 9C       		.byte	0x9c
 2116 02d0 E4020000 		.4byte	0x2e4
 2117 02d4 0E       		.uleb128 0xe
 2118 02d5 83040000 		.4byte	.LASF23
 2119 02d9 01       		.byte	0x1
 2120 02da F702     		.2byte	0x2f7
 2121 02dc 6B000000 		.4byte	0x6b
 2122 02e0 02       		.uleb128 0x2
 2123 02e1 91       		.byte	0x91
 2124 02e2 77       		.sleb128 -9
 2125 02e3 00       		.byte	0
 2126 02e4 0B       		.uleb128 0xb
 2127 02e5 DD030000 		.4byte	.LASF41
 2128 02e9 01       		.byte	0x1
 2129 02ea 2D03     		.2byte	0x32d
 2130 02ec 00000000 		.4byte	.LFB13
 2131 02f0 14000000 		.4byte	.LFE13-.LFB13
 2132 02f4 01       		.uleb128 0x1
 2133 02f5 9C       		.byte	0x9c
 2134 02f6 0A030000 		.4byte	0x30a
 2135 02fa 0C       		.uleb128 0xc
 2136 02fb F4000000 		.4byte	.LASF42
 2137 02ff 01       		.byte	0x1
 2138 0300 2D03     		.2byte	0x32d
 2139 0302 6B000000 		.4byte	0x6b
 2140 0306 02       		.uleb128 0x2
 2141 0307 91       		.byte	0x91
 2142 0308 77       		.sleb128 -9
 2143 0309 00       		.byte	0
 2144 030a 0B       		.uleb128 0xb
 2145 030b A3000000 		.4byte	.LASF43
 2146 030f 01       		.byte	0x1
 2147 0310 5903     		.2byte	0x359
 2148 0312 00000000 		.4byte	.LFB14
 2149 0316 20000000 		.4byte	.LFE14-.LFB14
 2150 031a 01       		.uleb128 0x1
 2151 031b 9C       		.byte	0x9c
 2152 031c 30030000 		.4byte	0x330
 2153 0320 0C       		.uleb128 0xc
 2154 0321 C2040000 		.4byte	.LASF44
 2155 0325 01       		.byte	0x1
 2156 0326 5903     		.2byte	0x359
 2157 0328 6B000000 		.4byte	0x6b
 2158 032c 02       		.uleb128 0x2
 2159 032d 91       		.byte	0x91
 2160 032e 77       		.sleb128 -9
 2161 032f 00       		.byte	0
 2162 0330 0B       		.uleb128 0xb
 2163 0331 B7000000 		.4byte	.LASF45
 2164 0335 01       		.byte	0x1
 2165 0336 6D03     		.2byte	0x36d
 2166 0338 00000000 		.4byte	.LFB15
 2167 033c 20000000 		.4byte	.LFE15-.LFB15
 2168 0340 01       		.uleb128 0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 67


 2169 0341 9C       		.byte	0x9c
 2170 0342 56030000 		.4byte	0x356
 2171 0346 0C       		.uleb128 0xc
 2172 0347 C2040000 		.4byte	.LASF44
 2173 034b 01       		.byte	0x1
 2174 034c 6D03     		.2byte	0x36d
 2175 034e 6B000000 		.4byte	0x6b
 2176 0352 02       		.uleb128 0x2
 2177 0353 91       		.byte	0x91
 2178 0354 77       		.sleb128 -9
 2179 0355 00       		.byte	0
 2180 0356 0B       		.uleb128 0xb
 2181 0357 31030000 		.4byte	.LASF46
 2182 035b 01       		.byte	0x1
 2183 035c 8C03     		.2byte	0x38c
 2184 035e 00000000 		.4byte	.LFB16
 2185 0362 20000000 		.4byte	.LFE16-.LFB16
 2186 0366 01       		.uleb128 0x1
 2187 0367 9C       		.byte	0x9c
 2188 0368 7C030000 		.4byte	0x37c
 2189 036c 0C       		.uleb128 0xc
 2190 036d AF010000 		.4byte	.LASF27
 2191 0371 01       		.byte	0x1
 2192 0372 8C03     		.2byte	0x38c
 2193 0374 6B000000 		.4byte	0x6b
 2194 0378 02       		.uleb128 0x2
 2195 0379 91       		.byte	0x91
 2196 037a 77       		.sleb128 -9
 2197 037b 00       		.byte	0
 2198 037c 0B       		.uleb128 0xb
 2199 037d 54030000 		.4byte	.LASF47
 2200 0381 01       		.byte	0x1
 2201 0382 AE03     		.2byte	0x3ae
 2202 0384 00000000 		.4byte	.LFB17
 2203 0388 2C000000 		.4byte	.LFE17-.LFB17
 2204 038c 01       		.uleb128 0x1
 2205 038d 9C       		.byte	0x9c
 2206 038e A2030000 		.4byte	0x3a2
 2207 0392 0C       		.uleb128 0xc
 2208 0393 16000000 		.4byte	.LASF48
 2209 0397 01       		.byte	0x1
 2210 0398 AE03     		.2byte	0x3ae
 2211 039a 6B000000 		.4byte	0x6b
 2212 039e 02       		.uleb128 0x2
 2213 039f 91       		.byte	0x91
 2214 03a0 77       		.sleb128 -9
 2215 03a1 00       		.byte	0
 2216 03a2 0A       		.uleb128 0xa
 2217 03a3 FF020000 		.4byte	.LASF50
 2218 03a7 01       		.byte	0x1
 2219 03a8 EB03     		.2byte	0x3eb
 2220 03aa 6B000000 		.4byte	0x6b
 2221 03ae 00000000 		.4byte	.LFB18
 2222 03b2 18000000 		.4byte	.LFE18-.LFB18
 2223 03b6 01       		.uleb128 0x1
 2224 03b7 9C       		.byte	0x9c
 2225 03b8 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 68


 2226 03b9 D8020000 		.4byte	.LASF51
 2227 03bd 01       		.byte	0x1
 2228 03be 1104     		.2byte	0x411
 2229 03c0 00000000 		.4byte	.LFB19
 2230 03c4 34000000 		.4byte	.LFE19-.LFB19
 2231 03c8 01       		.uleb128 0x1
 2232 03c9 9C       		.byte	0x9c
 2233 03ca DE030000 		.4byte	0x3de
 2234 03ce 0C       		.uleb128 0xc
 2235 03cf 16000000 		.4byte	.LASF48
 2236 03d3 01       		.byte	0x1
 2237 03d4 1104     		.2byte	0x411
 2238 03d6 6B000000 		.4byte	0x6b
 2239 03da 02       		.uleb128 0x2
 2240 03db 91       		.byte	0x91
 2241 03dc 77       		.sleb128 -9
 2242 03dd 00       		.byte	0
 2243 03de 10       		.uleb128 0x10
 2244 03df 47040000 		.4byte	.LASF52
 2245 03e3 01       		.byte	0x1
 2246 03e4 7904     		.2byte	0x479
 2247 03e6 00000000 		.4byte	.LFB20
 2248 03ea 40000000 		.4byte	.LFE20-.LFB20
 2249 03ee 01       		.uleb128 0x1
 2250 03ef 9C       		.byte	0x9c
 2251 03f0 13040000 		.4byte	0x413
 2252 03f4 0C       		.uleb128 0xc
 2253 03f5 49000000 		.4byte	.LASF53
 2254 03f9 01       		.byte	0x1
 2255 03fa 7904     		.2byte	0x479
 2256 03fc 13040000 		.4byte	0x413
 2257 0400 02       		.uleb128 0x2
 2258 0401 91       		.byte	0x91
 2259 0402 6C       		.sleb128 -20
 2260 0403 0E       		.uleb128 0xe
 2261 0404 A6010000 		.4byte	.LASF54
 2262 0408 01       		.byte	0x1
 2263 0409 7B04     		.2byte	0x47b
 2264 040b 76000000 		.4byte	0x76
 2265 040f 02       		.uleb128 0x2
 2266 0410 91       		.byte	0x91
 2267 0411 76       		.sleb128 -10
 2268 0412 00       		.byte	0
 2269 0413 11       		.uleb128 0x11
 2270 0414 04       		.byte	0x4
 2271 0415 19040000 		.4byte	0x419
 2272 0419 12       		.uleb128 0x12
 2273 041a 9A000000 		.4byte	0x9a
 2274 041e 10       		.uleb128 0x10
 2275 041f F9030000 		.4byte	.LASF55
 2276 0423 01       		.byte	0x1
 2277 0424 A704     		.2byte	0x4a7
 2278 0426 00000000 		.4byte	.LFB21
 2279 042a 40000000 		.4byte	.LFE21-.LFB21
 2280 042e 01       		.uleb128 0x1
 2281 042f 9C       		.byte	0x9c
 2282 0430 62040000 		.4byte	0x462
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 69


 2283 0434 0C       		.uleb128 0xc
 2284 0435 49000000 		.4byte	.LASF53
 2285 0439 01       		.byte	0x1
 2286 043a A704     		.2byte	0x4a7
 2287 043c 62040000 		.4byte	0x462
 2288 0440 02       		.uleb128 0x2
 2289 0441 91       		.byte	0x91
 2290 0442 6C       		.sleb128 -20
 2291 0443 0C       		.uleb128 0xc
 2292 0444 9D030000 		.4byte	.LASF56
 2293 0448 01       		.byte	0x1
 2294 0449 A704     		.2byte	0x4a7
 2295 044b 6B000000 		.4byte	0x6b
 2296 044f 02       		.uleb128 0x2
 2297 0450 91       		.byte	0x91
 2298 0451 6B       		.sleb128 -21
 2299 0452 0E       		.uleb128 0xe
 2300 0453 A6010000 		.4byte	.LASF54
 2301 0457 01       		.byte	0x1
 2302 0458 AA04     		.2byte	0x4aa
 2303 045a 6B000000 		.4byte	0x6b
 2304 045e 02       		.uleb128 0x2
 2305 045f 91       		.byte	0x91
 2306 0460 77       		.sleb128 -9
 2307 0461 00       		.byte	0
 2308 0462 11       		.uleb128 0x11
 2309 0463 04       		.byte	0x4
 2310 0464 68040000 		.4byte	0x468
 2311 0468 12       		.uleb128 0x12
 2312 0469 6B000000 		.4byte	0x6b
 2313 046d 10       		.uleb128 0x10
 2314 046e CF030000 		.4byte	.LASF57
 2315 0472 01       		.byte	0x1
 2316 0473 CE04     		.2byte	0x4ce
 2317 0475 00000000 		.4byte	.LFB22
 2318 0479 30000000 		.4byte	.LFE22-.LFB22
 2319 047d 01       		.uleb128 0x1
 2320 047e 9C       		.byte	0x9c
 2321 047f 93040000 		.4byte	0x493
 2322 0483 0C       		.uleb128 0xc
 2323 0484 16000000 		.4byte	.LASF48
 2324 0488 01       		.byte	0x1
 2325 0489 CE04     		.2byte	0x4ce
 2326 048b 6B000000 		.4byte	0x6b
 2327 048f 02       		.uleb128 0x2
 2328 0490 91       		.byte	0x91
 2329 0491 77       		.sleb128 -9
 2330 0492 00       		.byte	0
 2331 0493 0D       		.uleb128 0xd
 2332 0494 1B040000 		.4byte	.LASF58
 2333 0498 01       		.byte	0x1
 2334 0499 F904     		.2byte	0x4f9
 2335 049b 6B000000 		.4byte	0x6b
 2336 049f 00000000 		.4byte	.LFB23
 2337 04a3 44000000 		.4byte	.LFE23-.LFB23
 2338 04a7 01       		.uleb128 0x1
 2339 04a8 9C       		.byte	0x9c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 70


 2340 04a9 BD040000 		.4byte	0x4bd
 2341 04ad 0E       		.uleb128 0xe
 2342 04ae 8E010000 		.4byte	.LASF39
 2343 04b2 01       		.byte	0x1
 2344 04b3 FC04     		.2byte	0x4fc
 2345 04b5 6B000000 		.4byte	0x6b
 2346 04b9 02       		.uleb128 0x2
 2347 04ba 91       		.byte	0x91
 2348 04bb 77       		.sleb128 -9
 2349 04bc 00       		.byte	0
 2350 04bd 10       		.uleb128 0x10
 2351 04be CA040000 		.4byte	.LASF59
 2352 04c2 01       		.byte	0x1
 2353 04c3 4A05     		.2byte	0x54a
 2354 04c5 00000000 		.4byte	.LFB24
 2355 04c9 40000000 		.4byte	.LFE24-.LFB24
 2356 04cd 01       		.uleb128 0x1
 2357 04ce 9C       		.byte	0x9c
 2358 04cf E3040000 		.4byte	0x4e3
 2359 04d3 0E       		.uleb128 0xe
 2360 04d4 83040000 		.4byte	.LASF23
 2361 04d8 01       		.byte	0x1
 2362 04d9 4C05     		.2byte	0x54c
 2363 04db 6B000000 		.4byte	0x6b
 2364 04df 02       		.uleb128 0x2
 2365 04e0 91       		.byte	0x91
 2366 04e1 77       		.sleb128 -9
 2367 04e2 00       		.byte	0
 2368 04e3 0B       		.uleb128 0xb
 2369 04e4 C8020000 		.4byte	.LASF60
 2370 04e8 01       		.byte	0x1
 2371 04e9 A005     		.2byte	0x5a0
 2372 04eb 00000000 		.4byte	.LFB25
 2373 04ef 9C000000 		.4byte	.LFE25-.LFB25
 2374 04f3 01       		.uleb128 0x1
 2375 04f4 9C       		.byte	0x9c
 2376 04f5 34050000 		.4byte	0x534
 2377 04f9 0C       		.uleb128 0xc
 2378 04fa 58010000 		.4byte	.LASF61
 2379 04fe 01       		.byte	0x1
 2380 04ff A005     		.2byte	0x5a0
 2381 0501 6B000000 		.4byte	0x6b
 2382 0505 02       		.uleb128 0x2
 2383 0506 91       		.byte	0x91
 2384 0507 6F       		.sleb128 -17
 2385 0508 13       		.uleb128 0x13
 2386 0509 12000000 		.4byte	.LBB2
 2387 050d 6C000000 		.4byte	.LBE2-.LBB2
 2388 0511 0E       		.uleb128 0xe
 2389 0512 D8010000 		.4byte	.LASF62
 2390 0516 01       		.byte	0x1
 2391 0517 A805     		.2byte	0x5a8
 2392 0519 6B000000 		.4byte	0x6b
 2393 051d 02       		.uleb128 0x2
 2394 051e 91       		.byte	0x91
 2395 051f 77       		.sleb128 -9
 2396 0520 0E       		.uleb128 0xe
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 71


 2397 0521 9A000000 		.4byte	.LASF63
 2398 0525 01       		.byte	0x1
 2399 0526 D005     		.2byte	0x5d0
 2400 0528 6B000000 		.4byte	0x6b
 2401 052c 05       		.uleb128 0x5
 2402 052d 03       		.byte	0x3
 2403 052e 06000000 		.4byte	txPeriod.5008
 2404 0532 00       		.byte	0
 2405 0533 00       		.byte	0
 2406 0534 0B       		.uleb128 0xb
 2407 0535 17010000 		.4byte	.LASF64
 2408 0539 01       		.byte	0x1
 2409 053a 2406     		.2byte	0x624
 2410 053c 00000000 		.4byte	.LFB26
 2411 0540 14000000 		.4byte	.LFE26-.LFB26
 2412 0544 01       		.uleb128 0x1
 2413 0545 9C       		.byte	0x9c
 2414 0546 5A050000 		.4byte	0x55a
 2415 054a 0C       		.uleb128 0xc
 2416 054b F4000000 		.4byte	.LASF42
 2417 054f 01       		.byte	0x1
 2418 0550 2406     		.2byte	0x624
 2419 0552 6B000000 		.4byte	0x6b
 2420 0556 02       		.uleb128 0x2
 2421 0557 91       		.byte	0x91
 2422 0558 77       		.sleb128 -9
 2423 0559 00       		.byte	0
 2424 055a 14       		.uleb128 0x14
 2425 055b B4020000 		.4byte	.LASF65
 2426 055f 01       		.byte	0x1
 2427 0560 1B       		.byte	0x1b
 2428 0561 6B000000 		.4byte	0x6b
 2429 0565 05       		.uleb128 0x5
 2430 0566 03       		.byte	0x3
 2431 0567 00000000 		.4byte	LCD_1_initVar
 2432 056b 14       		.uleb128 0x14
 2433 056c E0010000 		.4byte	.LASF66
 2434 0570 01       		.byte	0x1
 2435 0571 24       		.byte	0x24
 2436 0572 6B000000 		.4byte	0x6b
 2437 0576 05       		.uleb128 0x5
 2438 0577 03       		.byte	0x3
 2439 0578 00000000 		.4byte	LCD_1_errorStatus
 2440 057c 15       		.uleb128 0x15
 2441 057d 6B000000 		.4byte	0x6b
 2442 0581 8C050000 		.4byte	0x58c
 2443 0585 16       		.uleb128 0x16
 2444 0586 CE000000 		.4byte	0xce
 2445 058a 07       		.byte	0x7
 2446 058b 00       		.byte	0
 2447 058c 14       		.uleb128 0x14
 2448 058d 07000000 		.4byte	.LASF67
 2449 0591 01       		.byte	0x1
 2450 0592 25       		.byte	0x25
 2451 0593 9D050000 		.4byte	0x59d
 2452 0597 05       		.uleb128 0x5
 2453 0598 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 72


 2454 0599 00000000 		.4byte	LCD_1_rxBuffer
 2455 059d 06       		.uleb128 0x6
 2456 059e 7C050000 		.4byte	0x57c
 2457 05a2 14       		.uleb128 0x14
 2458 05a3 AF040000 		.4byte	.LASF68
 2459 05a7 01       		.byte	0x1
 2460 05a8 26       		.byte	0x26
 2461 05a9 B8000000 		.4byte	0xb8
 2462 05ad 05       		.uleb128 0x5
 2463 05ae 03       		.byte	0x3
 2464 05af 00000000 		.4byte	LCD_1_rxBufferRead
 2465 05b3 14       		.uleb128 0x14
 2466 05b4 9B040000 		.4byte	.LASF69
 2467 05b8 01       		.byte	0x1
 2468 05b9 27       		.byte	0x27
 2469 05ba B8000000 		.4byte	0xb8
 2470 05be 05       		.uleb128 0x5
 2471 05bf 03       		.byte	0x3
 2472 05c0 00000000 		.4byte	LCD_1_rxBufferWrite
 2473 05c4 14       		.uleb128 0x14
 2474 05c5 E6020000 		.4byte	.LASF70
 2475 05c9 01       		.byte	0x1
 2476 05ca 28       		.byte	0x28
 2477 05cb B8000000 		.4byte	0xb8
 2478 05cf 05       		.uleb128 0x5
 2479 05d0 03       		.byte	0x3
 2480 05d1 00000000 		.4byte	LCD_1_rxBufferLoopDetect
 2481 05d5 14       		.uleb128 0x14
 2482 05d6 00010000 		.4byte	.LASF71
 2483 05da 01       		.byte	0x1
 2484 05db 29       		.byte	0x29
 2485 05dc B8000000 		.4byte	0xb8
 2486 05e0 05       		.uleb128 0x5
 2487 05e1 03       		.byte	0x3
 2488 05e2 00000000 		.4byte	LCD_1_rxBufferOverflow
 2489 05e6 00       		.byte	0
 2490              		.section	.debug_abbrev,"",%progbits
 2491              	.Ldebug_abbrev0:
 2492 0000 01       		.uleb128 0x1
 2493 0001 11       		.uleb128 0x11
 2494 0002 01       		.byte	0x1
 2495 0003 25       		.uleb128 0x25
 2496 0004 0E       		.uleb128 0xe
 2497 0005 13       		.uleb128 0x13
 2498 0006 0B       		.uleb128 0xb
 2499 0007 03       		.uleb128 0x3
 2500 0008 0E       		.uleb128 0xe
 2501 0009 1B       		.uleb128 0x1b
 2502 000a 0E       		.uleb128 0xe
 2503 000b 55       		.uleb128 0x55
 2504 000c 17       		.uleb128 0x17
 2505 000d 11       		.uleb128 0x11
 2506 000e 01       		.uleb128 0x1
 2507 000f 10       		.uleb128 0x10
 2508 0010 17       		.uleb128 0x17
 2509 0011 00       		.byte	0
 2510 0012 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 73


 2511 0013 02       		.uleb128 0x2
 2512 0014 24       		.uleb128 0x24
 2513 0015 00       		.byte	0
 2514 0016 0B       		.uleb128 0xb
 2515 0017 0B       		.uleb128 0xb
 2516 0018 3E       		.uleb128 0x3e
 2517 0019 0B       		.uleb128 0xb
 2518 001a 03       		.uleb128 0x3
 2519 001b 0E       		.uleb128 0xe
 2520 001c 00       		.byte	0
 2521 001d 00       		.byte	0
 2522 001e 03       		.uleb128 0x3
 2523 001f 24       		.uleb128 0x24
 2524 0020 00       		.byte	0
 2525 0021 0B       		.uleb128 0xb
 2526 0022 0B       		.uleb128 0xb
 2527 0023 3E       		.uleb128 0x3e
 2528 0024 0B       		.uleb128 0xb
 2529 0025 03       		.uleb128 0x3
 2530 0026 08       		.uleb128 0x8
 2531 0027 00       		.byte	0
 2532 0028 00       		.byte	0
 2533 0029 04       		.uleb128 0x4
 2534 002a 16       		.uleb128 0x16
 2535 002b 00       		.byte	0
 2536 002c 03       		.uleb128 0x3
 2537 002d 0E       		.uleb128 0xe
 2538 002e 3A       		.uleb128 0x3a
 2539 002f 0B       		.uleb128 0xb
 2540 0030 3B       		.uleb128 0x3b
 2541 0031 0B       		.uleb128 0xb
 2542 0032 49       		.uleb128 0x49
 2543 0033 13       		.uleb128 0x13
 2544 0034 00       		.byte	0
 2545 0035 00       		.byte	0
 2546 0036 05       		.uleb128 0x5
 2547 0037 16       		.uleb128 0x16
 2548 0038 00       		.byte	0
 2549 0039 03       		.uleb128 0x3
 2550 003a 0E       		.uleb128 0xe
 2551 003b 3A       		.uleb128 0x3a
 2552 003c 0B       		.uleb128 0xb
 2553 003d 3B       		.uleb128 0x3b
 2554 003e 05       		.uleb128 0x5
 2555 003f 49       		.uleb128 0x49
 2556 0040 13       		.uleb128 0x13
 2557 0041 00       		.byte	0
 2558 0042 00       		.byte	0
 2559 0043 06       		.uleb128 0x6
 2560 0044 35       		.uleb128 0x35
 2561 0045 00       		.byte	0
 2562 0046 49       		.uleb128 0x49
 2563 0047 13       		.uleb128 0x13
 2564 0048 00       		.byte	0
 2565 0049 00       		.byte	0
 2566 004a 07       		.uleb128 0x7
 2567 004b 2E       		.uleb128 0x2e
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 74


 2568 004c 00       		.byte	0
 2569 004d 3F       		.uleb128 0x3f
 2570 004e 19       		.uleb128 0x19
 2571 004f 03       		.uleb128 0x3
 2572 0050 0E       		.uleb128 0xe
 2573 0051 3A       		.uleb128 0x3a
 2574 0052 0B       		.uleb128 0xb
 2575 0053 3B       		.uleb128 0x3b
 2576 0054 0B       		.uleb128 0xb
 2577 0055 27       		.uleb128 0x27
 2578 0056 19       		.uleb128 0x19
 2579 0057 11       		.uleb128 0x11
 2580 0058 01       		.uleb128 0x1
 2581 0059 12       		.uleb128 0x12
 2582 005a 06       		.uleb128 0x6
 2583 005b 40       		.uleb128 0x40
 2584 005c 18       		.uleb128 0x18
 2585 005d 9642     		.uleb128 0x2116
 2586 005f 19       		.uleb128 0x19
 2587 0060 00       		.byte	0
 2588 0061 00       		.byte	0
 2589 0062 08       		.uleb128 0x8
 2590 0063 2E       		.uleb128 0x2e
 2591 0064 01       		.byte	0x1
 2592 0065 3F       		.uleb128 0x3f
 2593 0066 19       		.uleb128 0x19
 2594 0067 03       		.uleb128 0x3
 2595 0068 0E       		.uleb128 0xe
 2596 0069 3A       		.uleb128 0x3a
 2597 006a 0B       		.uleb128 0xb
 2598 006b 3B       		.uleb128 0x3b
 2599 006c 0B       		.uleb128 0xb
 2600 006d 27       		.uleb128 0x27
 2601 006e 19       		.uleb128 0x19
 2602 006f 11       		.uleb128 0x11
 2603 0070 01       		.uleb128 0x1
 2604 0071 12       		.uleb128 0x12
 2605 0072 06       		.uleb128 0x6
 2606 0073 40       		.uleb128 0x40
 2607 0074 18       		.uleb128 0x18
 2608 0075 9642     		.uleb128 0x2116
 2609 0077 19       		.uleb128 0x19
 2610 0078 01       		.uleb128 0x1
 2611 0079 13       		.uleb128 0x13
 2612 007a 00       		.byte	0
 2613 007b 00       		.byte	0
 2614 007c 09       		.uleb128 0x9
 2615 007d 34       		.uleb128 0x34
 2616 007e 00       		.byte	0
 2617 007f 03       		.uleb128 0x3
 2618 0080 0E       		.uleb128 0xe
 2619 0081 3A       		.uleb128 0x3a
 2620 0082 0B       		.uleb128 0xb
 2621 0083 3B       		.uleb128 0x3b
 2622 0084 0B       		.uleb128 0xb
 2623 0085 49       		.uleb128 0x49
 2624 0086 13       		.uleb128 0x13
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 75


 2625 0087 02       		.uleb128 0x2
 2626 0088 18       		.uleb128 0x18
 2627 0089 00       		.byte	0
 2628 008a 00       		.byte	0
 2629 008b 0A       		.uleb128 0xa
 2630 008c 2E       		.uleb128 0x2e
 2631 008d 00       		.byte	0
 2632 008e 3F       		.uleb128 0x3f
 2633 008f 19       		.uleb128 0x19
 2634 0090 03       		.uleb128 0x3
 2635 0091 0E       		.uleb128 0xe
 2636 0092 3A       		.uleb128 0x3a
 2637 0093 0B       		.uleb128 0xb
 2638 0094 3B       		.uleb128 0x3b
 2639 0095 05       		.uleb128 0x5
 2640 0096 27       		.uleb128 0x27
 2641 0097 19       		.uleb128 0x19
 2642 0098 49       		.uleb128 0x49
 2643 0099 13       		.uleb128 0x13
 2644 009a 11       		.uleb128 0x11
 2645 009b 01       		.uleb128 0x1
 2646 009c 12       		.uleb128 0x12
 2647 009d 06       		.uleb128 0x6
 2648 009e 40       		.uleb128 0x40
 2649 009f 18       		.uleb128 0x18
 2650 00a0 9742     		.uleb128 0x2117
 2651 00a2 19       		.uleb128 0x19
 2652 00a3 00       		.byte	0
 2653 00a4 00       		.byte	0
 2654 00a5 0B       		.uleb128 0xb
 2655 00a6 2E       		.uleb128 0x2e
 2656 00a7 01       		.byte	0x1
 2657 00a8 3F       		.uleb128 0x3f
 2658 00a9 19       		.uleb128 0x19
 2659 00aa 03       		.uleb128 0x3
 2660 00ab 0E       		.uleb128 0xe
 2661 00ac 3A       		.uleb128 0x3a
 2662 00ad 0B       		.uleb128 0xb
 2663 00ae 3B       		.uleb128 0x3b
 2664 00af 05       		.uleb128 0x5
 2665 00b0 27       		.uleb128 0x27
 2666 00b1 19       		.uleb128 0x19
 2667 00b2 11       		.uleb128 0x11
 2668 00b3 01       		.uleb128 0x1
 2669 00b4 12       		.uleb128 0x12
 2670 00b5 06       		.uleb128 0x6
 2671 00b6 40       		.uleb128 0x40
 2672 00b7 18       		.uleb128 0x18
 2673 00b8 9742     		.uleb128 0x2117
 2674 00ba 19       		.uleb128 0x19
 2675 00bb 01       		.uleb128 0x1
 2676 00bc 13       		.uleb128 0x13
 2677 00bd 00       		.byte	0
 2678 00be 00       		.byte	0
 2679 00bf 0C       		.uleb128 0xc
 2680 00c0 05       		.uleb128 0x5
 2681 00c1 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 76


 2682 00c2 03       		.uleb128 0x3
 2683 00c3 0E       		.uleb128 0xe
 2684 00c4 3A       		.uleb128 0x3a
 2685 00c5 0B       		.uleb128 0xb
 2686 00c6 3B       		.uleb128 0x3b
 2687 00c7 05       		.uleb128 0x5
 2688 00c8 49       		.uleb128 0x49
 2689 00c9 13       		.uleb128 0x13
 2690 00ca 02       		.uleb128 0x2
 2691 00cb 18       		.uleb128 0x18
 2692 00cc 00       		.byte	0
 2693 00cd 00       		.byte	0
 2694 00ce 0D       		.uleb128 0xd
 2695 00cf 2E       		.uleb128 0x2e
 2696 00d0 01       		.byte	0x1
 2697 00d1 3F       		.uleb128 0x3f
 2698 00d2 19       		.uleb128 0x19
 2699 00d3 03       		.uleb128 0x3
 2700 00d4 0E       		.uleb128 0xe
 2701 00d5 3A       		.uleb128 0x3a
 2702 00d6 0B       		.uleb128 0xb
 2703 00d7 3B       		.uleb128 0x3b
 2704 00d8 05       		.uleb128 0x5
 2705 00d9 27       		.uleb128 0x27
 2706 00da 19       		.uleb128 0x19
 2707 00db 49       		.uleb128 0x49
 2708 00dc 13       		.uleb128 0x13
 2709 00dd 11       		.uleb128 0x11
 2710 00de 01       		.uleb128 0x1
 2711 00df 12       		.uleb128 0x12
 2712 00e0 06       		.uleb128 0x6
 2713 00e1 40       		.uleb128 0x40
 2714 00e2 18       		.uleb128 0x18
 2715 00e3 9742     		.uleb128 0x2117
 2716 00e5 19       		.uleb128 0x19
 2717 00e6 01       		.uleb128 0x1
 2718 00e7 13       		.uleb128 0x13
 2719 00e8 00       		.byte	0
 2720 00e9 00       		.byte	0
 2721 00ea 0E       		.uleb128 0xe
 2722 00eb 34       		.uleb128 0x34
 2723 00ec 00       		.byte	0
 2724 00ed 03       		.uleb128 0x3
 2725 00ee 0E       		.uleb128 0xe
 2726 00ef 3A       		.uleb128 0x3a
 2727 00f0 0B       		.uleb128 0xb
 2728 00f1 3B       		.uleb128 0x3b
 2729 00f2 05       		.uleb128 0x5
 2730 00f3 49       		.uleb128 0x49
 2731 00f4 13       		.uleb128 0x13
 2732 00f5 02       		.uleb128 0x2
 2733 00f6 18       		.uleb128 0x18
 2734 00f7 00       		.byte	0
 2735 00f8 00       		.byte	0
 2736 00f9 0F       		.uleb128 0xf
 2737 00fa 2E       		.uleb128 0x2e
 2738 00fb 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 77


 2739 00fc 3F       		.uleb128 0x3f
 2740 00fd 19       		.uleb128 0x19
 2741 00fe 03       		.uleb128 0x3
 2742 00ff 0E       		.uleb128 0xe
 2743 0100 3A       		.uleb128 0x3a
 2744 0101 0B       		.uleb128 0xb
 2745 0102 3B       		.uleb128 0x3b
 2746 0103 05       		.uleb128 0x5
 2747 0104 27       		.uleb128 0x27
 2748 0105 19       		.uleb128 0x19
 2749 0106 49       		.uleb128 0x49
 2750 0107 13       		.uleb128 0x13
 2751 0108 11       		.uleb128 0x11
 2752 0109 01       		.uleb128 0x1
 2753 010a 12       		.uleb128 0x12
 2754 010b 06       		.uleb128 0x6
 2755 010c 40       		.uleb128 0x40
 2756 010d 18       		.uleb128 0x18
 2757 010e 9642     		.uleb128 0x2116
 2758 0110 19       		.uleb128 0x19
 2759 0111 01       		.uleb128 0x1
 2760 0112 13       		.uleb128 0x13
 2761 0113 00       		.byte	0
 2762 0114 00       		.byte	0
 2763 0115 10       		.uleb128 0x10
 2764 0116 2E       		.uleb128 0x2e
 2765 0117 01       		.byte	0x1
 2766 0118 3F       		.uleb128 0x3f
 2767 0119 19       		.uleb128 0x19
 2768 011a 03       		.uleb128 0x3
 2769 011b 0E       		.uleb128 0xe
 2770 011c 3A       		.uleb128 0x3a
 2771 011d 0B       		.uleb128 0xb
 2772 011e 3B       		.uleb128 0x3b
 2773 011f 05       		.uleb128 0x5
 2774 0120 27       		.uleb128 0x27
 2775 0121 19       		.uleb128 0x19
 2776 0122 11       		.uleb128 0x11
 2777 0123 01       		.uleb128 0x1
 2778 0124 12       		.uleb128 0x12
 2779 0125 06       		.uleb128 0x6
 2780 0126 40       		.uleb128 0x40
 2781 0127 18       		.uleb128 0x18
 2782 0128 9642     		.uleb128 0x2116
 2783 012a 19       		.uleb128 0x19
 2784 012b 01       		.uleb128 0x1
 2785 012c 13       		.uleb128 0x13
 2786 012d 00       		.byte	0
 2787 012e 00       		.byte	0
 2788 012f 11       		.uleb128 0x11
 2789 0130 0F       		.uleb128 0xf
 2790 0131 00       		.byte	0
 2791 0132 0B       		.uleb128 0xb
 2792 0133 0B       		.uleb128 0xb
 2793 0134 49       		.uleb128 0x49
 2794 0135 13       		.uleb128 0x13
 2795 0136 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 78


 2796 0137 00       		.byte	0
 2797 0138 12       		.uleb128 0x12
 2798 0139 26       		.uleb128 0x26
 2799 013a 00       		.byte	0
 2800 013b 49       		.uleb128 0x49
 2801 013c 13       		.uleb128 0x13
 2802 013d 00       		.byte	0
 2803 013e 00       		.byte	0
 2804 013f 13       		.uleb128 0x13
 2805 0140 0B       		.uleb128 0xb
 2806 0141 01       		.byte	0x1
 2807 0142 11       		.uleb128 0x11
 2808 0143 01       		.uleb128 0x1
 2809 0144 12       		.uleb128 0x12
 2810 0145 06       		.uleb128 0x6
 2811 0146 00       		.byte	0
 2812 0147 00       		.byte	0
 2813 0148 14       		.uleb128 0x14
 2814 0149 34       		.uleb128 0x34
 2815 014a 00       		.byte	0
 2816 014b 03       		.uleb128 0x3
 2817 014c 0E       		.uleb128 0xe
 2818 014d 3A       		.uleb128 0x3a
 2819 014e 0B       		.uleb128 0xb
 2820 014f 3B       		.uleb128 0x3b
 2821 0150 0B       		.uleb128 0xb
 2822 0151 49       		.uleb128 0x49
 2823 0152 13       		.uleb128 0x13
 2824 0153 3F       		.uleb128 0x3f
 2825 0154 19       		.uleb128 0x19
 2826 0155 02       		.uleb128 0x2
 2827 0156 18       		.uleb128 0x18
 2828 0157 00       		.byte	0
 2829 0158 00       		.byte	0
 2830 0159 15       		.uleb128 0x15
 2831 015a 01       		.uleb128 0x1
 2832 015b 01       		.byte	0x1
 2833 015c 49       		.uleb128 0x49
 2834 015d 13       		.uleb128 0x13
 2835 015e 01       		.uleb128 0x1
 2836 015f 13       		.uleb128 0x13
 2837 0160 00       		.byte	0
 2838 0161 00       		.byte	0
 2839 0162 16       		.uleb128 0x16
 2840 0163 21       		.uleb128 0x21
 2841 0164 00       		.byte	0
 2842 0165 49       		.uleb128 0x49
 2843 0166 13       		.uleb128 0x13
 2844 0167 2F       		.uleb128 0x2f
 2845 0168 0B       		.uleb128 0xb
 2846 0169 00       		.byte	0
 2847 016a 00       		.byte	0
 2848 016b 00       		.byte	0
 2849              		.section	.debug_aranges,"",%progbits
 2850 0000 EC000000 		.4byte	0xec
 2851 0004 0200     		.2byte	0x2
 2852 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 79


 2853 000a 04       		.byte	0x4
 2854 000b 00       		.byte	0
 2855 000c 0000     		.2byte	0
 2856 000e 0000     		.2byte	0
 2857 0010 00000000 		.4byte	.LFB0
 2858 0014 20000000 		.4byte	.LFE0-.LFB0
 2859 0018 00000000 		.4byte	.LFB1
 2860 001c 58000000 		.4byte	.LFE1-.LFB1
 2861 0020 00000000 		.4byte	.LFB2
 2862 0024 68000000 		.4byte	.LFE2-.LFB2
 2863 0028 00000000 		.4byte	.LFB3
 2864 002c 68000000 		.4byte	.LFE3-.LFB3
 2865 0030 00000000 		.4byte	.LFB4
 2866 0034 10000000 		.4byte	.LFE4-.LFB4
 2867 0038 00000000 		.4byte	.LFB5
 2868 003c 14000000 		.4byte	.LFE5-.LFB5
 2869 0040 00000000 		.4byte	.LFB6
 2870 0044 20000000 		.4byte	.LFE6-.LFB6
 2871 0048 00000000 		.4byte	.LFB7
 2872 004c 94000000 		.4byte	.LFE7-.LFB7
 2873 0050 00000000 		.4byte	.LFB8
 2874 0054 40000000 		.4byte	.LFE8-.LFB8
 2875 0058 00000000 		.4byte	.LFB9
 2876 005c B8000000 		.4byte	.LFE9-.LFB9
 2877 0060 00000000 		.4byte	.LFB10
 2878 0064 44000000 		.4byte	.LFE10-.LFB10
 2879 0068 00000000 		.4byte	.LFB11
 2880 006c 90000000 		.4byte	.LFE11-.LFB11
 2881 0070 00000000 		.4byte	.LFB12
 2882 0074 7C000000 		.4byte	.LFE12-.LFB12
 2883 0078 00000000 		.4byte	.LFB13
 2884 007c 14000000 		.4byte	.LFE13-.LFB13
 2885 0080 00000000 		.4byte	.LFB14
 2886 0084 20000000 		.4byte	.LFE14-.LFB14
 2887 0088 00000000 		.4byte	.LFB15
 2888 008c 20000000 		.4byte	.LFE15-.LFB15
 2889 0090 00000000 		.4byte	.LFB16
 2890 0094 20000000 		.4byte	.LFE16-.LFB16
 2891 0098 00000000 		.4byte	.LFB17
 2892 009c 2C000000 		.4byte	.LFE17-.LFB17
 2893 00a0 00000000 		.4byte	.LFB18
 2894 00a4 18000000 		.4byte	.LFE18-.LFB18
 2895 00a8 00000000 		.4byte	.LFB19
 2896 00ac 34000000 		.4byte	.LFE19-.LFB19
 2897 00b0 00000000 		.4byte	.LFB20
 2898 00b4 40000000 		.4byte	.LFE20-.LFB20
 2899 00b8 00000000 		.4byte	.LFB21
 2900 00bc 40000000 		.4byte	.LFE21-.LFB21
 2901 00c0 00000000 		.4byte	.LFB22
 2902 00c4 30000000 		.4byte	.LFE22-.LFB22
 2903 00c8 00000000 		.4byte	.LFB23
 2904 00cc 44000000 		.4byte	.LFE23-.LFB23
 2905 00d0 00000000 		.4byte	.LFB24
 2906 00d4 40000000 		.4byte	.LFE24-.LFB24
 2907 00d8 00000000 		.4byte	.LFB25
 2908 00dc 9C000000 		.4byte	.LFE25-.LFB25
 2909 00e0 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 80


 2910 00e4 14000000 		.4byte	.LFE26-.LFB26
 2911 00e8 00000000 		.4byte	0
 2912 00ec 00000000 		.4byte	0
 2913              		.section	.debug_ranges,"",%progbits
 2914              	.Ldebug_ranges0:
 2915 0000 00000000 		.4byte	.LFB0
 2916 0004 20000000 		.4byte	.LFE0
 2917 0008 00000000 		.4byte	.LFB1
 2918 000c 58000000 		.4byte	.LFE1
 2919 0010 00000000 		.4byte	.LFB2
 2920 0014 68000000 		.4byte	.LFE2
 2921 0018 00000000 		.4byte	.LFB3
 2922 001c 68000000 		.4byte	.LFE3
 2923 0020 00000000 		.4byte	.LFB4
 2924 0024 10000000 		.4byte	.LFE4
 2925 0028 00000000 		.4byte	.LFB5
 2926 002c 14000000 		.4byte	.LFE5
 2927 0030 00000000 		.4byte	.LFB6
 2928 0034 20000000 		.4byte	.LFE6
 2929 0038 00000000 		.4byte	.LFB7
 2930 003c 94000000 		.4byte	.LFE7
 2931 0040 00000000 		.4byte	.LFB8
 2932 0044 40000000 		.4byte	.LFE8
 2933 0048 00000000 		.4byte	.LFB9
 2934 004c B8000000 		.4byte	.LFE9
 2935 0050 00000000 		.4byte	.LFB10
 2936 0054 44000000 		.4byte	.LFE10
 2937 0058 00000000 		.4byte	.LFB11
 2938 005c 90000000 		.4byte	.LFE11
 2939 0060 00000000 		.4byte	.LFB12
 2940 0064 7C000000 		.4byte	.LFE12
 2941 0068 00000000 		.4byte	.LFB13
 2942 006c 14000000 		.4byte	.LFE13
 2943 0070 00000000 		.4byte	.LFB14
 2944 0074 20000000 		.4byte	.LFE14
 2945 0078 00000000 		.4byte	.LFB15
 2946 007c 20000000 		.4byte	.LFE15
 2947 0080 00000000 		.4byte	.LFB16
 2948 0084 20000000 		.4byte	.LFE16
 2949 0088 00000000 		.4byte	.LFB17
 2950 008c 2C000000 		.4byte	.LFE17
 2951 0090 00000000 		.4byte	.LFB18
 2952 0094 18000000 		.4byte	.LFE18
 2953 0098 00000000 		.4byte	.LFB19
 2954 009c 34000000 		.4byte	.LFE19
 2955 00a0 00000000 		.4byte	.LFB20
 2956 00a4 40000000 		.4byte	.LFE20
 2957 00a8 00000000 		.4byte	.LFB21
 2958 00ac 40000000 		.4byte	.LFE21
 2959 00b0 00000000 		.4byte	.LFB22
 2960 00b4 30000000 		.4byte	.LFE22
 2961 00b8 00000000 		.4byte	.LFB23
 2962 00bc 44000000 		.4byte	.LFE23
 2963 00c0 00000000 		.4byte	.LFB24
 2964 00c4 40000000 		.4byte	.LFE24
 2965 00c8 00000000 		.4byte	.LFB25
 2966 00cc 9C000000 		.4byte	.LFE25
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 81


 2967 00d0 00000000 		.4byte	.LFB26
 2968 00d4 14000000 		.4byte	.LFE26
 2969 00d8 00000000 		.4byte	0
 2970 00dc 00000000 		.4byte	0
 2971              		.section	.debug_line,"",%progbits
 2972              	.Ldebug_line0:
 2973 0000 09030000 		.section	.debug_str,"MS",%progbits,1
 2973      02004400 
 2973      00000201 
 2973      FB0E0D00 
 2973      01010101 
 2974              	.LASF10:
 2975 0000 75696E74 		.ascii	"uint16\000"
 2975      313600
 2976              	.LASF67:
 2977 0007 4C43445F 		.ascii	"LCD_1_rxBuffer\000"
 2977      315F7278 
 2977      42756666 
 2977      657200
 2978              	.LASF48:
 2979 0016 74784461 		.ascii	"txDataByte\000"
 2979      74614279 
 2979      746500
 2980              	.LASF49:
 2981 0021 4C43445F 		.ascii	"LCD_1_ReadControlRegister\000"
 2981      315F5265 
 2981      6164436F 
 2981      6E74726F 
 2981      6C526567 
 2982              	.LASF36:
 2983 003b 4C43445F 		.ascii	"LCD_1_GetByte\000"
 2983      315F4765 
 2983      74427974 
 2983      6500
 2984              	.LASF53:
 2985 0049 73747269 		.ascii	"string\000"
 2985      6E6700
 2986              	.LASF7:
 2987 0050 6C6F6E67 		.ascii	"long long unsigned int\000"
 2987      206C6F6E 
 2987      6720756E 
 2987      7369676E 
 2987      65642069 
 2988              	.LASF25:
 2989 0067 4C43445F 		.ascii	"LCD_1_SetRxInterruptMode\000"
 2989      315F5365 
 2989      74527849 
 2989      6E746572 
 2989      72757074 
 2990              	.LASF6:
 2991 0080 6C6F6E67 		.ascii	"long long int\000"
 2991      206C6F6E 
 2991      6720696E 
 2991      7400
 2992              	.LASF0:
 2993 008e 7369676E 		.ascii	"signed char\000"
 2993      65642063 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 82


 2993      68617200 
 2994              	.LASF63:
 2995 009a 74785065 		.ascii	"txPeriod\000"
 2995      72696F64 
 2995      00
 2996              	.LASF43:
 2997 00a3 4C43445F 		.ascii	"LCD_1_SetRxAddress1\000"
 2997      315F5365 
 2997      74527841 
 2997      64647265 
 2997      73733100 
 2998              	.LASF45:
 2999 00b7 4C43445F 		.ascii	"LCD_1_SetRxAddress2\000"
 2999      315F5365 
 2999      74527841 
 2999      64647265 
 2999      73733200 
 3000              	.LASF4:
 3001 00cb 6C6F6E67 		.ascii	"long int\000"
 3001      20696E74 
 3001      00
 3002              	.LASF9:
 3003 00d4 75696E74 		.ascii	"uint8\000"
 3003      3800
 3004              	.LASF32:
 3005 00da 4C43445F 		.ascii	"LCD_1_ReadRxStatus\000"
 3005      315F5265 
 3005      61645278 
 3005      53746174 
 3005      757300
 3006              	.LASF13:
 3007 00ed 646F7562 		.ascii	"double\000"
 3007      6C6500
 3008              	.LASF42:
 3009 00f4 61646472 		.ascii	"addressMode\000"
 3009      6573734D 
 3009      6F646500 
 3010              	.LASF71:
 3011 0100 4C43445F 		.ascii	"LCD_1_rxBufferOverflow\000"
 3011      315F7278 
 3011      42756666 
 3011      65724F76 
 3011      6572666C 
 3012              	.LASF64:
 3013 0117 4C43445F 		.ascii	"LCD_1_SetTxAddressMode\000"
 3013      315F5365 
 3013      74547841 
 3013      64647265 
 3013      73734D6F 
 3014              	.LASF11:
 3015 012e 75696E74 		.ascii	"uint32\000"
 3015      333200
 3016              	.LASF26:
 3017 0135 636F6E74 		.ascii	"control\000"
 3017      726F6C00 
 3018              	.LASF24:
 3019 013d 4C43445F 		.ascii	"LCD_1_WriteControlRegister\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 83


 3019      315F5772 
 3019      69746543 
 3019      6F6E7472 
 3019      6F6C5265 
 3020              	.LASF61:
 3021 0158 7265744D 		.ascii	"retMode\000"
 3021      6F646500 
 3022              	.LASF8:
 3023 0160 756E7369 		.ascii	"unsigned int\000"
 3023      676E6564 
 3023      20696E74 
 3023      00
 3024              	.LASF37:
 3025 016d 6C6F6345 		.ascii	"locErrorStatus\000"
 3025      72726F72 
 3025      53746174 
 3025      757300
 3026              	.LASF5:
 3027 017c 6C6F6E67 		.ascii	"long unsigned int\000"
 3027      20756E73 
 3027      69676E65 
 3027      6420696E 
 3027      7400
 3028              	.LASF39:
 3029 018e 73697A65 		.ascii	"size\000"
 3029      00
 3030              	.LASF3:
 3031 0193 73686F72 		.ascii	"short unsigned int\000"
 3031      7420756E 
 3031      7369676E 
 3031      65642069 
 3031      6E7400
 3032              	.LASF54:
 3033 01a6 62756649 		.ascii	"bufIndex\000"
 3033      6E646578 
 3033      00
 3034              	.LASF27:
 3035 01af 696E7453 		.ascii	"intSrc\000"
 3035      726300
 3036              	.LASF30:
 3037 01b6 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3037      78427566 
 3037      66657257 
 3037      72697465 
 3037      00
 3038              	.LASF22:
 3039 01c7 4C43445F 		.ascii	"LCD_1_Stop\000"
 3039      315F5374 
 3039      6F7000
 3040              	.LASF17:
 3041 01d2 72656733 		.ascii	"reg32\000"
 3041      3200
 3042              	.LASF62:
 3043 01d8 746D7053 		.ascii	"tmpStat\000"
 3043      74617400 
 3044              	.LASF66:
 3045 01e0 4C43445F 		.ascii	"LCD_1_errorStatus\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 84


 3045      315F6572 
 3045      726F7253 
 3045      74617475 
 3045      7300
 3046              	.LASF18:
 3047 01f2 73697A65 		.ascii	"sizetype\000"
 3047      74797065 
 3047      00
 3048              	.LASF34:
 3049 01fb 4C43445F 		.ascii	"LCD_1_GetChar\000"
 3049      315F4765 
 3049      74436861 
 3049      7200
 3050              	.LASF72:
 3051 0209 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3051      4320342E 
 3051      392E3320 
 3051      32303135 
 3051      30333033 
 3052 023c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3052      20726576 
 3052      6973696F 
 3052      6E203232 
 3052      31323230 
 3053 026f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3053      66756E63 
 3053      74696F6E 
 3053      2D736563 
 3053      74696F6E 
 3054              	.LASF35:
 3055 0297 72785374 		.ascii	"rxStatus\000"
 3055      61747573 
 3055      00
 3056              	.LASF40:
 3057 02a0 4C43445F 		.ascii	"LCD_1_ClearRxBuffer\000"
 3057      315F436C 
 3057      65617252 
 3057      78427566 
 3057      66657200 
 3058              	.LASF65:
 3059 02b4 4C43445F 		.ascii	"LCD_1_initVar\000"
 3059      315F696E 
 3059      69745661 
 3059      7200
 3060              	.LASF12:
 3061 02c2 666C6F61 		.ascii	"float\000"
 3061      7400
 3062              	.LASF60:
 3063 02c8 4C43445F 		.ascii	"LCD_1_SendBreak\000"
 3063      315F5365 
 3063      6E644272 
 3063      65616B00 
 3064              	.LASF51:
 3065 02d8 4C43445F 		.ascii	"LCD_1_PutChar\000"
 3065      315F5075 
 3065      74436861 
 3065      7200
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 85


 3066              	.LASF70:
 3067 02e6 4C43445F 		.ascii	"LCD_1_rxBufferLoopDetect\000"
 3067      315F7278 
 3067      42756666 
 3067      65724C6F 
 3067      6F704465 
 3068              	.LASF50:
 3069 02ff 4C43445F 		.ascii	"LCD_1_ReadTxStatus\000"
 3069      315F5265 
 3069      61645478 
 3069      53746174 
 3069      757300
 3070              	.LASF19:
 3071 0312 4C43445F 		.ascii	"LCD_1_Start\000"
 3071      315F5374 
 3071      61727400 
 3072              	.LASF16:
 3073 031e 72656738 		.ascii	"reg8\000"
 3073      00
 3074              	.LASF1:
 3075 0323 756E7369 		.ascii	"unsigned char\000"
 3075      676E6564 
 3075      20636861 
 3075      7200
 3076              	.LASF46:
 3077 0331 4C43445F 		.ascii	"LCD_1_SetTxInterruptMode\000"
 3077      315F5365 
 3077      74547849 
 3077      6E746572 
 3077      72757074 
 3078              	.LASF2:
 3079 034a 73686F72 		.ascii	"short int\000"
 3079      7420696E 
 3079      7400
 3080              	.LASF47:
 3081 0354 4C43445F 		.ascii	"LCD_1_WriteTxData\000"
 3081      315F5772 
 3081      69746554 
 3081      78446174 
 3081      6100
 3082              	.LASF74:
 3083 0366 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Documents\\Prueba_GRPFleet\\B"
 3083      73657273 
 3083      5C526563 
 3083      65706369 
 3083      6F6E5C44 
 3084 0394 42422E63 		.ascii	"BB.cydsn\000"
 3084      7964736E 
 3084      00
 3085              	.LASF56:
 3086 039d 62797465 		.ascii	"byteCount\000"
 3086      436F756E 
 3086      7400
 3087              	.LASF73:
 3088 03a7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\LCD_1.c\000"
 3088      6E657261 
 3088      7465645F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 86


 3088      536F7572 
 3088      63655C50 
 3089              	.LASF28:
 3090 03c8 72784461 		.ascii	"rxData\000"
 3090      746100
 3091              	.LASF57:
 3092 03cf 4C43445F 		.ascii	"LCD_1_PutCRLF\000"
 3092      315F5075 
 3092      7443524C 
 3092      4600
 3093              	.LASF41:
 3094 03dd 4C43445F 		.ascii	"LCD_1_SetRxAddressMode\000"
 3094      315F5365 
 3094      74527841 
 3094      64647265 
 3094      73734D6F 
 3095              	.LASF15:
 3096 03f4 63686172 		.ascii	"char\000"
 3096      00
 3097              	.LASF55:
 3098 03f9 4C43445F 		.ascii	"LCD_1_PutArray\000"
 3098      315F5075 
 3098      74417272 
 3098      617900
 3099              	.LASF21:
 3100 0408 4C43445F 		.ascii	"LCD_1_Enable\000"
 3100      315F456E 
 3100      61626C65 
 3100      00
 3101              	.LASF14:
 3102 0415 63686172 		.ascii	"char8\000"
 3102      3800
 3103              	.LASF58:
 3104 041b 4C43445F 		.ascii	"LCD_1_GetTxBufferSize\000"
 3104      315F4765 
 3104      74547842 
 3104      75666665 
 3104      7253697A 
 3105              	.LASF38:
 3106 0431 4C43445F 		.ascii	"LCD_1_GetRxBufferSize\000"
 3106      315F4765 
 3106      74527842 
 3106      75666665 
 3106      7253697A 
 3107              	.LASF52:
 3108 0447 4C43445F 		.ascii	"LCD_1_PutString\000"
 3108      315F5075 
 3108      74537472 
 3108      696E6700 
 3109              	.LASF31:
 3110 0457 4C43445F 		.ascii	"LCD_1_ReadRxData\000"
 3110      315F5265 
 3110      61645278 
 3110      44617461 
 3110      00
 3111              	.LASF29:
 3112 0468 6C6F6352 		.ascii	"locRxBufferRead\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccG7Pt0a.s 			page 87


 3112      78427566 
 3112      66657252 
 3112      65616400 
 3113              	.LASF20:
 3114 0478 4C43445F 		.ascii	"LCD_1_Init\000"
 3114      315F496E 
 3114      697400
 3115              	.LASF23:
 3116 0483 656E6162 		.ascii	"enableInterrupts\000"
 3116      6C65496E 
 3116      74657272 
 3116      75707473 
 3116      00
 3117              	.LASF33:
 3118 0494 73746174 		.ascii	"status\000"
 3118      757300
 3119              	.LASF69:
 3120 049b 4C43445F 		.ascii	"LCD_1_rxBufferWrite\000"
 3120      315F7278 
 3120      42756666 
 3120      65725772 
 3120      69746500 
 3121              	.LASF68:
 3122 04af 4C43445F 		.ascii	"LCD_1_rxBufferRead\000"
 3122      315F7278 
 3122      42756666 
 3122      65725265 
 3122      616400
 3123              	.LASF44:
 3124 04c2 61646472 		.ascii	"address\000"
 3124      65737300 
 3125              	.LASF59:
 3126 04ca 4C43445F 		.ascii	"LCD_1_ClearTxBuffer\000"
 3126      315F436C 
 3126      65617254 
 3126      78427566 
 3126      66657200 
 3127              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
