ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Protocolo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	count_teclas1,1,1
  19              		.comm	comas1,1,1
  20              		.comm	comas2,1,1
  21              		.comm	id_coma1,1,1
  22              		.comm	id_teclado1,1,1
  23              		.comm	count_teclas2,1,1
  24              		.comm	id_coma2,1,1
  25              		.comm	id_teclado2,1,1
  26              		.comm	posx1,2,2
  27              		.comm	posy1,2,2
  28              		.comm	sizeletra1,2,2
  29              		.comm	posx2,2,2
  30              		.comm	posy2,2,2
  31              		.comm	sizeletra2,2,2
  32              		.comm	teclas1,1,1
  33              		.comm	teclas2,1,1
  34              		.comm	flujo_LCD1,1,1
  35              		.comm	flujo_LCD2,1,1
  36              		.comm	flujo_pos1,1,1
  37              		.comm	flujo_pos2,1,1
  38              		.comm	seleccion_pos,1,1
  39              		.comm	flujo_pos,1,1
  40              		.comm	venta_activa,1,1
  41              		.comm	venta_activa2,1,1
  42              		.comm	Buffer_LCD1,30,4
  43              		.comm	Buffer_LCD2,30,4
  44              		.comm	count_protector,1,1
  45              		.comm	count_protector2,1,1
  46              		.comm	password_lcd,9,4
  47              		.comm	imagen_grado,2,2
  48              		.comm	prox_caso,8,4
  49              		.comm	bloqueo_LCD,3,4
  50              		.comm	id_estacion,5,4
  51              		.comm	id_venta,8,4
  52              		.comm	trama_totales,200,4
  53              		.comm	ppux10,1,1
  54              		.comm	nombre_pro1,17,4
  55              		.comm	nombre_pro2,17,4
  56              		.comm	nombre_pro3,17,4
  57              		.comm	version,4,4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 2


  58              		.comm	kmscreen,1,1
  59              		.comm	pantallas,1,1
  60              		.comm	efectivo,1,1
  61              		.comm	lado1,93,4
  62              		.comm	lado2,93,4
  63              		.comm	nombre,33,4
  64              		.comm	nit,15,4
  65              		.comm	telefono,20,4
  66              		.comm	direccion,33,4
  67              		.comm	lema1,32,4
  68              		.comm	lema2,32,4
  69              		.comm	id_logo,2,4
  70              		.comm	km,2,4
  71              		.comm	fecha,3,4
  72              		.comm	hora,2,4
  73              		.comm	rventa1,118,4
  74              		.comm	rventa2,118,4
  75              		.comm	ok_RF,1,1
  76              		.comm	ok_datosRF,1,1
  77              		.comm	rf_mod,200,4
  78              		.comm	buffer_i2c,64,4
  79              		.comm	crc_total,1,1
  80              		.comm	print1,2,4
  81              		.comm	print2,2,4
  82              		.comm	tipo_venta,1,1
  83              		.comm	rx_timeout,1,1
  84              		.global	msn_tc
  85              		.data
  86              		.align	2
  87              		.type	msn_tc, %object
  88              		.size	msn_tc, 17
  89              	msn_tc:
  90 0000 544F5441 		.ascii	"TOTALES CORRIENTE"
  90      4C455320 
  90      434F5252 
  90      49454E54 
  90      45
  91              		.global	msn_te
  92 0011 000000   		.align	2
  93              		.type	msn_te, %object
  94              		.size	msn_te, 13
  95              	msn_te:
  96 0014 544F5441 		.ascii	"TOTALES EXTRA"
  96      4C455320 
  96      45585452 
  96      41
  97              		.global	msn_td
  98 0021 000000   		.align	2
  99              		.type	msn_td, %object
 100              		.size	msn_td, 14
 101              	msn_td:
 102 0024 544F5441 		.ascii	"TOTALES DIESEL"
 102      4C455320 
 102      44494553 
 102      454C
 103              		.global	msn_lecact
 104 0032 0000     		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 3


 105              		.type	msn_lecact, %object
 106              		.size	msn_lecact, 15
 107              	msn_lecact:
 108 0034 4C656374 		.ascii	"Lectura Actual:"
 108      75726120 
 108      41637475 
 108      616C3A
 109              		.global	msn_lecaan
 110 0043 00       		.align	2
 111              		.type	msn_lecaan, %object
 112              		.size	msn_lecaan, 17
 113              	msn_lecaan:
 114 0044 4C656374 		.ascii	"Lectura Anterior:"
 114      75726120 
 114      416E7465 
 114      72696F72 
 114      3A
 115              		.global	msn_tventas
 116 0055 000000   		.align	2
 117              		.type	msn_tventas, %object
 118              		.size	msn_tventas, 18
 119              	msn_tventas:
 120 0058 546F7461 		.ascii	"Total de Ventas: $"
 120      6C206465 
 120      2056656E 
 120      7461733A 
 120      2024
 121 006a 0000     		.section	.text.Rx_Surtidor,"ax",%progbits
 122              		.align	2
 123              		.global	Rx_Surtidor
 124              		.thumb
 125              		.thumb_func
 126              		.type	Rx_Surtidor, %function
 127              	Rx_Surtidor:
 128              	.LFB63:
 129              		.file 1 ".\\Protocolo.c"
   1:.\Protocolo.c **** /*
   2:.\Protocolo.c **** ***************************************************************************************************
   3:.\Protocolo.c **** *                                           GRP550/700 CODE
   4:.\Protocolo.c **** 
   5:.\Protocolo.c **** *
   6:.\Protocolo.c **** *                             (c) Copyright 2013; Sistemas Insepet LTDA
   7:.\Protocolo.c **** *
   8:.\Protocolo.c **** *               All rights reserved.  Protected by international copyright laws.
   9:.\Protocolo.c **** *               Knowledge of the source code may NOT be used to develop a similar product.
  10:.\Protocolo.c **** *               Please help us continue to provide the Embedded community with the finest
  11:.\Protocolo.c **** *               software available.  Your honesty is greatly appreciated.
  12:.\Protocolo.c **** ***************************************************************************************************
  13:.\Protocolo.c **** */
  14:.\Protocolo.c **** 
  15:.\Protocolo.c **** /*
  16:.\Protocolo.c **** ***************************************************************************************************
  17:.\Protocolo.c **** *
  18:.\Protocolo.c **** *                                             GRP550/700 CODE
  19:.\Protocolo.c **** *
  20:.\Protocolo.c **** *                                             CYPRESS PSoC5LP
  21:.\Protocolo.c **** *                                                with the
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 4


  22:.\Protocolo.c **** *                                            CY8C5969AXI-LP035
  23:.\Protocolo.c **** *
  24:.\Protocolo.c **** * Filename      : Protocolo.c
  25:.\Protocolo.c **** * Version       : V1.00
  26:.\Protocolo.c **** * Programmer(s) : 
  27:.\Protocolo.c ****                   
  28:.\Protocolo.c **** ***************************************************************************************************
  29:.\Protocolo.c **** */
  30:.\Protocolo.c **** 
  31:.\Protocolo.c **** 
  32:.\Protocolo.c **** /*
  33:.\Protocolo.c **** ***************************************************************************************************
  34:.\Protocolo.c **** *                                             INCLUDE FILES
  35:.\Protocolo.c **** ***************************************************************************************************
  36:.\Protocolo.c **** */
  37:.\Protocolo.c **** #include <device.h>
  38:.\Protocolo.c **** #include "VariablesG.h"
  39:.\Protocolo.c **** #include "i2c.h"
  40:.\Protocolo.c **** #include "Print.h"
  41:.\Protocolo.c **** 
  42:.\Protocolo.c **** /*
  43:.\Protocolo.c **** ***************************************************************************************************
  44:.\Protocolo.c **** *                                            	MENSAJES
  45:.\Protocolo.c **** ***************************************************************************************************
  46:.\Protocolo.c **** */
  47:.\Protocolo.c **** uint8 rx_timeout;								//0 inicia espera  1 se cumplio el tiempo
  48:.\Protocolo.c **** uint8 msn_tc[17]="TOTALES CORRIENTE";
  49:.\Protocolo.c **** uint8 msn_te[13]="TOTALES EXTRA";
  50:.\Protocolo.c **** uint8 msn_td[14]="TOTALES DIESEL";
  51:.\Protocolo.c **** uint8 msn_lecact[15]="Lectura Actual:";
  52:.\Protocolo.c **** uint8 msn_lecaan[17]="Lectura Anterior:";
  53:.\Protocolo.c **** uint8 msn_tventas[18]="Total de Ventas: $";
  54:.\Protocolo.c **** 
  55:.\Protocolo.c **** /*
  56:.\Protocolo.c **** ***************************************************************************************************
  57:.\Protocolo.c **** *                                        CY_ISR(modo_mux)
  58:.\Protocolo.c **** *
  59:.\Protocolo.c **** * Description : 
  60:.\Protocolo.c **** *               
  61:.\Protocolo.c **** ***************************************************************************************************
  62:.\Protocolo.c **** */
  63:.\Protocolo.c **** CY_ISR(Rx_Surtidor){
 130              		.loc 1 63 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 00AF     		add	r7, sp, #0
 139              		.cfi_def_cfa_register 7
  64:.\Protocolo.c ****     Timer_RxSurtidor_ReadStatusRegister();
 140              		.loc 1 64 0
 141 0004 FFF7FEFF 		bl	Timer_RxSurtidor_ReadStatusRegister
  65:.\Protocolo.c **** 	rx_timeout=1;	
 142              		.loc 1 65 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 5


 143 0008 014B     		ldr	r3, .L2
 144 000a 0122     		movs	r2, #1
 145 000c 1A70     		strb	r2, [r3]
  66:.\Protocolo.c **** }
 146              		.loc 1 66 0
 147 000e 80BD     		pop	{r7, pc}
 148              	.L3:
 149              		.align	2
 150              	.L2:
 151 0010 00000000 		.word	rx_timeout
 152              		.cfi_endproc
 153              	.LFE63:
 154              		.size	Rx_Surtidor, .-Rx_Surtidor
 155              		.section	.text.get_estado,"ax",%progbits
 156              		.align	2
 157              		.global	get_estado
 158              		.thumb
 159              		.thumb_func
 160              		.type	get_estado, %function
 161              	get_estado:
 162              	.LFB64:
  67:.\Protocolo.c **** 
  68:.\Protocolo.c **** 
  69:.\Protocolo.c **** /*
  70:.\Protocolo.c **** ***************************************************************************************************
  71:.\Protocolo.c **** *                                         ver_estado( void )
  72:.\Protocolo.c **** *
  73:.\Protocolo.c **** * Description : 
  74:.\Protocolo.c **** *               
  75:.\Protocolo.c **** *
  76:.\Protocolo.c **** * Argument(s) : none
  77:.\Protocolo.c **** *
  78:.\Protocolo.c **** * Return(s)   : none
  79:.\Protocolo.c **** *
  80:.\Protocolo.c **** * Caller(s)   : 
  81:.\Protocolo.c **** *
  82:.\Protocolo.c **** * Note(s)     : none.
  83:.\Protocolo.c **** ***************************************************************************************************
  84:.\Protocolo.c **** */
  85:.\Protocolo.c **** 
  86:.\Protocolo.c **** uint8 get_estado(uint8 dir){
 163              		.loc 1 86 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 16
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0000 80B5     		push	{r7, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 84B0     		sub	sp, sp, #16
 172              		.cfi_def_cfa_offset 24
 173 0004 00AF     		add	r7, sp, #0
 174              		.cfi_def_cfa_register 7
 175 0006 0346     		mov	r3, r0
 176 0008 FB71     		strb	r3, [r7, #7]
  87:.\Protocolo.c ****     uint8 estado;
  88:.\Protocolo.c ****     Surtidor_ClearRxBuffer();	
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 6


 177              		.loc 1 88 0
 178 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  89:.\Protocolo.c ****     Surtidor_PutChar(dir);
 179              		.loc 1 89 0
 180 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 181 0010 1846     		mov	r0, r3
 182 0012 FFF7FEFF 		bl	Surtidor_PutChar
  90:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 183              		.loc 1 90 0
 184 0016 1E48     		ldr	r0, .L9
 185 0018 FFF7FEFF 		bl	isr_1_StartEx
  91:.\Protocolo.c ****     Timer_RxSurtidor_Start();
 186              		.loc 1 91 0
 187 001c FFF7FEFF 		bl	Timer_RxSurtidor_Start
  92:.\Protocolo.c **** 	rx_timeout=0;
 188              		.loc 1 92 0
 189 0020 1C4B     		ldr	r3, .L9+4
 190 0022 0022     		movs	r2, #0
 191 0024 1A70     		strb	r2, [r3]
  93:.\Protocolo.c ****     CyDelay(10);
 192              		.loc 1 93 0
 193 0026 0A20     		movs	r0, #10
 194 0028 FFF7FEFF 		bl	CyDelay
  94:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 195              		.loc 1 94 0
 196 002c 0BE0     		b	.L5
 197              	.L7:
  95:.\Protocolo.c **** 		if(rx_timeout==1){
 198              		.loc 1 95 0
 199 002e 194B     		ldr	r3, .L9+4
 200 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 201 0032 012B     		cmp	r3, #1
 202 0034 07D1     		bne	.L5
  96:.\Protocolo.c **** 			isr_1_Stop();
 203              		.loc 1 96 0
 204 0036 FFF7FEFF 		bl	isr_1_Stop
  97:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 205              		.loc 1 97 0
 206 003a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  98:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 207              		.loc 1 98 0
 208 003e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  99:.\Protocolo.c **** 			return 0;
 209              		.loc 1 99 0
 210 0042 0023     		movs	r3, #0
 211 0044 20E0     		b	.L6
 212              	.L5:
  94:.\Protocolo.c **** 		if(rx_timeout==1){
 213              		.loc 1 94 0
 214 0046 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 215 004a 0346     		mov	r3, r0
 216 004c 002B     		cmp	r3, #0
 217 004e EED0     		beq	.L7
 100:.\Protocolo.c **** 		}
 101:.\Protocolo.c **** 	}
 102:.\Protocolo.c ****     estado=Surtidor_ReadRxData();
 218              		.loc 1 102 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 7


 219 0050 FFF7FEFF 		bl	Surtidor_ReadRxData
 220 0054 0346     		mov	r3, r0
 221 0056 FB73     		strb	r3, [r7, #15]
 103:.\Protocolo.c **** 	if((estado&0x0F)==dir){
 222              		.loc 1 103 0
 223 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 224 005a 03F00F02 		and	r2, r3, #15
 225 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 226 0060 9A42     		cmp	r2, r3
 227 0062 0AD1     		bne	.L8
 104:.\Protocolo.c **** 		estado=(estado&0xF0)>>4;
 228              		.loc 1 104 0
 229 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 230 0066 1B09     		lsrs	r3, r3, #4
 231 0068 FB73     		strb	r3, [r7, #15]
 105:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 232              		.loc 1 105 0
 233 006a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 106:.\Protocolo.c **** 		isr_1_Stop();
 234              		.loc 1 106 0
 235 006e FFF7FEFF 		bl	isr_1_Stop
 107:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 236              		.loc 1 107 0
 237 0072 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 108:.\Protocolo.c **** 	    return estado;
 238              		.loc 1 108 0
 239 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 240 0078 06E0     		b	.L6
 241              	.L8:
 109:.\Protocolo.c **** 	}
 110:.\Protocolo.c **** 	else{
 111:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 242              		.loc 1 111 0
 243 007a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 112:.\Protocolo.c **** 		isr_1_Stop();
 244              		.loc 1 112 0
 245 007e FFF7FEFF 		bl	isr_1_Stop
 113:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 246              		.loc 1 113 0
 247 0082 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 114:.\Protocolo.c **** 	    return 0;	
 248              		.loc 1 114 0
 249 0086 0023     		movs	r3, #0
 250              	.L6:
 115:.\Protocolo.c **** 	}
 116:.\Protocolo.c **** }
 251              		.loc 1 116 0
 252 0088 1846     		mov	r0, r3
 253 008a 1037     		adds	r7, r7, #16
 254              		.cfi_def_cfa_offset 8
 255 008c BD46     		mov	sp, r7
 256              		.cfi_def_cfa_register 13
 257              		@ sp needed
 258 008e 80BD     		pop	{r7, pc}
 259              	.L10:
 260              		.align	2
 261              	.L9:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 8


 262 0090 00000000 		.word	Rx_Surtidor
 263 0094 00000000 		.word	rx_timeout
 264              		.cfi_endproc
 265              	.LFE64:
 266              		.size	get_estado, .-get_estado
 267              		.section	.text.ver_pos,"ax",%progbits
 268              		.align	2
 269              		.global	ver_pos
 270              		.thumb
 271              		.thumb_func
 272              		.type	ver_pos, %function
 273              	ver_pos:
 274              	.LFB65:
 117:.\Protocolo.c **** 
 118:.\Protocolo.c **** /*
 119:.\Protocolo.c **** ***************************************************************************************************
 120:.\Protocolo.c **** *                                         ver_pos( void )
 121:.\Protocolo.c **** *
 122:.\Protocolo.c **** * Description : 
 123:.\Protocolo.c **** *               
 124:.\Protocolo.c **** *
 125:.\Protocolo.c **** * Argument(s) : none
 126:.\Protocolo.c **** *
 127:.\Protocolo.c **** * Return(s)   : none
 128:.\Protocolo.c **** *
 129:.\Protocolo.c **** * Caller(s)   : 
 130:.\Protocolo.c **** *
 131:.\Protocolo.c **** * Note(s)     : none.
 132:.\Protocolo.c **** ***************************************************************************************************
 133:.\Protocolo.c **** */
 134:.\Protocolo.c **** uint8 ver_pos (void){
 275              		.loc 1 134 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 8
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 82B0     		sub	sp, sp, #8
 284              		.cfi_def_cfa_offset 16
 285 0004 00AF     		add	r7, sp, #0
 286              		.cfi_def_cfa_register 7
 135:.\Protocolo.c **** uint8 x;
 136:.\Protocolo.c **** lado1.dir=0xff;
 287              		.loc 1 136 0
 288 0006 244B     		ldr	r3, .L19
 289 0008 FF22     		movs	r2, #255
 290 000a 1A70     		strb	r2, [r3]
 137:.\Protocolo.c **** lado2.dir=0xff;
 291              		.loc 1 137 0
 292 000c 234B     		ldr	r3, .L19+4
 293 000e FF22     		movs	r2, #255
 294 0010 1A70     		strb	r2, [r3]
 138:.\Protocolo.c **** 	CyDelay(5);
 295              		.loc 1 138 0
 296 0012 0520     		movs	r0, #5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 9


 297 0014 FFF7FEFF 		bl	CyDelay
 139:.\Protocolo.c ****     if(get_estado(0)!=0){
 298              		.loc 1 139 0
 299 0018 0020     		movs	r0, #0
 300 001a FFF7FEFF 		bl	get_estado
 301 001e 0346     		mov	r3, r0
 302 0020 002B     		cmp	r3, #0
 303 0022 02D0     		beq	.L12
 140:.\Protocolo.c **** 		lado2.dir=0;
 304              		.loc 1 140 0
 305 0024 1D4B     		ldr	r3, .L19+4
 306 0026 0022     		movs	r2, #0
 307 0028 1A70     		strb	r2, [r3]
 308              	.L12:
 141:.\Protocolo.c **** 	}	
 142:.\Protocolo.c ****     for(x=1;x<=15;x++){
 309              		.loc 1 142 0
 310 002a 0123     		movs	r3, #1
 311 002c FB71     		strb	r3, [r7, #7]
 312 002e 1FE0     		b	.L13
 313              	.L17:
 143:.\Protocolo.c **** 		CyDelay(5);
 314              		.loc 1 143 0
 315 0030 0520     		movs	r0, #5
 316 0032 FFF7FEFF 		bl	CyDelay
 144:.\Protocolo.c ****         if(get_estado(x)!=0){
 317              		.loc 1 144 0
 318 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 319 0038 1846     		mov	r0, r3
 320 003a FFF7FEFF 		bl	get_estado
 321 003e 0346     		mov	r3, r0
 322 0040 002B     		cmp	r3, #0
 323 0042 12D0     		beq	.L14
 145:.\Protocolo.c **** 			if(lado1.dir==0xFF){
 324              		.loc 1 145 0
 325 0044 144B     		ldr	r3, .L19
 326 0046 1B78     		ldrb	r3, [r3]
 327 0048 DBB2     		uxtb	r3, r3
 328 004a FF2B     		cmp	r3, #255
 329 004c 03D1     		bne	.L15
 146:.\Protocolo.c **** 				lado1.dir=x;
 330              		.loc 1 146 0
 331 004e 124A     		ldr	r2, .L19
 332 0050 FB79     		ldrb	r3, [r7, #7]
 333 0052 1370     		strb	r3, [r2]
 334 0054 09E0     		b	.L14
 335              	.L15:
 147:.\Protocolo.c **** 			}
 148:.\Protocolo.c **** 			else if(lado2.dir==0xFF){
 336              		.loc 1 148 0
 337 0056 114B     		ldr	r3, .L19+4
 338 0058 1B78     		ldrb	r3, [r3]
 339 005a DBB2     		uxtb	r3, r3
 340 005c FF2B     		cmp	r3, #255
 341 005e 04D1     		bne	.L14
 149:.\Protocolo.c **** 				lado2.dir=x;
 342              		.loc 1 149 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 10


 343 0060 0E4A     		ldr	r2, .L19+4
 344 0062 FB79     		ldrb	r3, [r7, #7]
 345 0064 1370     		strb	r3, [r2]
 150:.\Protocolo.c **** 				return 1;
 346              		.loc 1 150 0
 347 0066 0123     		movs	r3, #1
 348 0068 12E0     		b	.L16
 349              	.L14:
 142:.\Protocolo.c **** 		CyDelay(5);
 350              		.loc 1 142 0 discriminator 2
 351 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 352 006c 0133     		adds	r3, r3, #1
 353 006e FB71     		strb	r3, [r7, #7]
 354              	.L13:
 142:.\Protocolo.c **** 		CyDelay(5);
 355              		.loc 1 142 0 is_stmt 0 discriminator 1
 356 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 357 0072 0F2B     		cmp	r3, #15
 358 0074 DCD9     		bls	.L17
 151:.\Protocolo.c **** 			}
 152:.\Protocolo.c **** 		}
 153:.\Protocolo.c **** 	}
 154:.\Protocolo.c **** 	if((lado1.dir!=0xFF)&&(lado2.dir!=0xFF)){
 359              		.loc 1 154 0 is_stmt 1
 360 0076 084B     		ldr	r3, .L19
 361 0078 1B78     		ldrb	r3, [r3]
 362 007a DBB2     		uxtb	r3, r3
 363 007c FF2B     		cmp	r3, #255
 364 007e 06D0     		beq	.L18
 365              		.loc 1 154 0 is_stmt 0 discriminator 1
 366 0080 064B     		ldr	r3, .L19+4
 367 0082 1B78     		ldrb	r3, [r3]
 368 0084 DBB2     		uxtb	r3, r3
 369 0086 FF2B     		cmp	r3, #255
 370 0088 01D0     		beq	.L18
 155:.\Protocolo.c **** 		return 1;
 371              		.loc 1 155 0 is_stmt 1
 372 008a 0123     		movs	r3, #1
 373 008c 00E0     		b	.L16
 374              	.L18:
 156:.\Protocolo.c **** 	}
 157:.\Protocolo.c **** 	else{
 158:.\Protocolo.c **** 		return 0;
 375              		.loc 1 158 0
 376 008e 0023     		movs	r3, #0
 377              	.L16:
 159:.\Protocolo.c **** 	}
 160:.\Protocolo.c **** }
 378              		.loc 1 160 0
 379 0090 1846     		mov	r0, r3
 380 0092 0837     		adds	r7, r7, #8
 381              		.cfi_def_cfa_offset 8
 382 0094 BD46     		mov	sp, r7
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 0096 80BD     		pop	{r7, pc}
 386              	.L20:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 11


 387              		.align	2
 388              	.L19:
 389 0098 00000000 		.word	lado1
 390 009c 00000000 		.word	lado2
 391              		.cfi_endproc
 392              	.LFE65:
 393              		.size	ver_pos, .-ver_pos
 394              		.section	.text.ver_error,"ax",%progbits
 395              		.align	2
 396              		.global	ver_error
 397              		.thumb
 398              		.thumb_func
 399              		.type	ver_error, %function
 400              	ver_error:
 401              	.LFB66:
 161:.\Protocolo.c **** 
 162:.\Protocolo.c **** /*
 163:.\Protocolo.c **** ***************************************************************************************************
 164:.\Protocolo.c **** *                                         void ver_error(uint8 val)
 165:.\Protocolo.c **** *
 166:.\Protocolo.c **** * Description : 
 167:.\Protocolo.c **** *               
 168:.\Protocolo.c **** *
 169:.\Protocolo.c **** * Argument(s) : none
 170:.\Protocolo.c **** *
 171:.\Protocolo.c **** * Return(s)   : none
 172:.\Protocolo.c **** *
 173:.\Protocolo.c **** * Caller(s)   : 
 174:.\Protocolo.c **** *
 175:.\Protocolo.c **** * Note(s)     : none.
 176:.\Protocolo.c **** ***************************************************************************************************
 177:.\Protocolo.c **** */
 178:.\Protocolo.c **** void ver_error(uint8 val){
 402              		.loc 1 178 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 16
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406 0000 80B5     		push	{r7, lr}
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 7, -8
 409              		.cfi_offset 14, -4
 410 0002 84B0     		sub	sp, sp, #16
 411              		.cfi_def_cfa_offset 24
 412 0004 00AF     		add	r7, sp, #0
 413              		.cfi_def_cfa_register 7
 414 0006 0346     		mov	r3, r0
 415 0008 FB71     		strb	r3, [r7, #7]
 179:.\Protocolo.c ****     uint8 estado;
 180:.\Protocolo.c ****     Surtidor_PutChar(val);
 416              		.loc 1 180 0
 417 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 418 000c 1846     		mov	r0, r3
 419 000e FFF7FEFF 		bl	Surtidor_PutChar
 181:.\Protocolo.c ****     CyDelay(200);
 420              		.loc 1 181 0
 421 0012 C820     		movs	r0, #200
 422 0014 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 12


 182:.\Protocolo.c ****     if(Surtidor_GetRxBufferSize()>=1){
 423              		.loc 1 182 0
 424 0018 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 425 001c 0346     		mov	r3, r0
 426 001e 002B     		cmp	r3, #0
 427 0020 06D0     		beq	.L21
 183:.\Protocolo.c ****        estado=(Surtidor_ReadRxData()&0xF0)>>4;
 428              		.loc 1 183 0
 429 0022 FFF7FEFF 		bl	Surtidor_ReadRxData
 430 0026 0346     		mov	r3, r0
 431 0028 1B09     		lsrs	r3, r3, #4
 432 002a FB73     		strb	r3, [r7, #15]
 184:.\Protocolo.c ****        Surtidor_ClearRxBuffer();
 433              		.loc 1 184 0
 434 002c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 435              	.L21:
 185:.\Protocolo.c ****        if(estado==0){
 186:.\Protocolo.c **** 
 187:.\Protocolo.c ****        }
 188:.\Protocolo.c ****     }    
 189:.\Protocolo.c **** }
 436              		.loc 1 189 0
 437 0030 1037     		adds	r7, r7, #16
 438              		.cfi_def_cfa_offset 8
 439 0032 BD46     		mov	sp, r7
 440              		.cfi_def_cfa_register 13
 441              		@ sp needed
 442 0034 80BD     		pop	{r7, pc}
 443              		.cfi_endproc
 444              	.LFE66:
 445              		.size	ver_error, .-ver_error
 446 0036 00BF     		.section	.rodata
 447              		.align	2
 448              	.LC0:
 449 0000 FF       		.byte	-1
 450 0001 E9       		.byte	-23
 451 0002 FE       		.byte	-2
 452 0003 E0       		.byte	-32
 453 0004 E1       		.byte	-31
 454 0005 E0       		.byte	-32
 455 0006 FB       		.byte	-5
 456 0007 EE       		.byte	-18
 457 0008 F0       		.byte	-16
 458 0009 000000   		.section	.text.estado_ex,"ax",%progbits
 459              		.align	2
 460              		.global	estado_ex
 461              		.thumb
 462              		.thumb_func
 463              		.type	estado_ex, %function
 464              	estado_ex:
 465              	.LFB67:
 190:.\Protocolo.c **** 
 191:.\Protocolo.c **** /*
 192:.\Protocolo.c **** ***************************************************************************************************
 193:.\Protocolo.c **** *                                         estado_ex(uint8 val)
 194:.\Protocolo.c **** *
 195:.\Protocolo.c **** * Description : 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 13


 196:.\Protocolo.c **** *               
 197:.\Protocolo.c **** *
 198:.\Protocolo.c **** * Argument(s) : none
 199:.\Protocolo.c **** *
 200:.\Protocolo.c **** * Return(s)   : none
 201:.\Protocolo.c **** *
 202:.\Protocolo.c **** * Caller(s)   : 
 203:.\Protocolo.c **** *
 204:.\Protocolo.c **** * Note(s)     : none.
 205:.\Protocolo.c **** ***************************************************************************************************
 206:.\Protocolo.c **** */
 207:.\Protocolo.c **** uint8 estado_ex(uint8 val){
 466              		.loc 1 207 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 40
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 90B5     		push	{r4, r7, lr}
 471              		.cfi_def_cfa_offset 12
 472              		.cfi_offset 4, -12
 473              		.cfi_offset 7, -8
 474              		.cfi_offset 14, -4
 475 0002 8BB0     		sub	sp, sp, #44
 476              		.cfi_def_cfa_offset 56
 477 0004 00AF     		add	r7, sp, #0
 478              		.cfi_def_cfa_register 7
 479 0006 0346     		mov	r3, r0
 480 0008 FB71     		strb	r3, [r7, #7]
 208:.\Protocolo.c ****     uint8 rx_extend[19],x,comand_exten[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0};
 481              		.loc 1 208 0
 482 000a 594A     		ldr	r2, .L41
 483 000c 07F10803 		add	r3, r7, #8
 484 0010 1068     		ldr	r0, [r2]	@ unaligned
 485 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
 486 0014 03C3     		stmia	r3!, {r0, r1}
 487 0016 127A     		ldrb	r2, [r2, #8]
 488 0018 1A70     		strb	r2, [r3]
 209:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 489              		.loc 1 209 0
 490 001a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 210:.\Protocolo.c ****     Surtidor_PutChar(0x20|val);
 491              		.loc 1 210 0
 492 001e FB79     		ldrb	r3, [r7, #7]
 493 0020 43F02003 		orr	r3, r3, #32
 494 0024 DBB2     		uxtb	r3, r3
 495 0026 1846     		mov	r0, r3
 496 0028 FFF7FEFF 		bl	Surtidor_PutChar
 211:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 497              		.loc 1 211 0
 498 002c 5148     		ldr	r0, .L41+4
 499 002e FFF7FEFF 		bl	isr_1_StartEx
 212:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 500              		.loc 1 212 0
 501 0032 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 213:.\Protocolo.c ****     rx_timeout=0;
 502              		.loc 1 213 0
 503 0036 504B     		ldr	r3, .L41+8
 504 0038 0022     		movs	r2, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 14


 505 003a 1A70     		strb	r2, [r3]
 214:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 506              		.loc 1 214 0
 507 003c 0BE0     		b	.L24
 508              	.L26:
 215:.\Protocolo.c **** 		if(rx_timeout==1){
 509              		.loc 1 215 0
 510 003e 4E4B     		ldr	r3, .L41+8
 511 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 512 0042 012B     		cmp	r3, #1
 513 0044 07D1     		bne	.L24
 216:.\Protocolo.c **** 			isr_1_Stop();
 514              		.loc 1 216 0
 515 0046 FFF7FEFF 		bl	isr_1_Stop
 217:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 516              		.loc 1 217 0
 517 004a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 218:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 518              		.loc 1 218 0
 519 004e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 219:.\Protocolo.c **** 			return 0;
 520              		.loc 1 219 0
 521 0052 0023     		movs	r3, #0
 522 0054 88E0     		b	.L39
 523              	.L24:
 214:.\Protocolo.c **** 		if(rx_timeout==1){
 524              		.loc 1 214 0
 525 0056 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 526 005a 0346     		mov	r3, r0
 527 005c 002B     		cmp	r3, #0
 528 005e EED0     		beq	.L26
 220:.\Protocolo.c **** 		}
 221:.\Protocolo.c **** 	}
 222:.\Protocolo.c **** 	isr_1_Stop();
 529              		.loc 1 222 0
 530 0060 FFF7FEFF 		bl	isr_1_Stop
 223:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 531              		.loc 1 223 0
 532 0064 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 224:.\Protocolo.c ****     if(Surtidor_ReadRxData()==(0xD0|val)){
 533              		.loc 1 224 0
 534 0068 FFF7FEFF 		bl	Surtidor_ReadRxData
 535 006c 0346     		mov	r3, r0
 536 006e 1A46     		mov	r2, r3
 537 0070 FB79     		ldrb	r3, [r7, #7]
 538 0072 63F02F03 		orn	r3, r3, #47
 539 0076 DBB2     		uxtb	r3, r3
 540 0078 9A42     		cmp	r2, r3
 541 007a 74D1     		bne	.L27
 225:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 542              		.loc 1 225 0
 543 007c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 226:.\Protocolo.c **** 		CyDelay(5);
 544              		.loc 1 226 0
 545 0080 0520     		movs	r0, #5
 546 0082 FFF7FEFF 		bl	CyDelay
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 15


 547              		.loc 1 227 0
 548 0086 0023     		movs	r3, #0
 549 0088 87F82730 		strb	r3, [r7, #39]
 550 008c 0EE0     		b	.L28
 551              	.L29:
 228:.\Protocolo.c ****            Surtidor_PutChar(comand_exten[x]); 
 552              		.loc 1 228 0 discriminator 3
 553 008e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 554 0092 07F12802 		add	r2, r7, #40
 555 0096 1344     		add	r3, r3, r2
 556 0098 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 557 009c 1846     		mov	r0, r3
 558 009e FFF7FEFF 		bl	Surtidor_PutChar
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 559              		.loc 1 227 0 discriminator 3
 560 00a2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 561 00a6 0133     		adds	r3, r3, #1
 562 00a8 87F82730 		strb	r3, [r7, #39]
 563              	.L28:
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 564              		.loc 1 227 0 is_stmt 0 discriminator 1
 565 00ac 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 566 00b0 082B     		cmp	r3, #8
 567 00b2 ECD9     		bls	.L29
 229:.\Protocolo.c ****         }
 230:.\Protocolo.c **** 		isr_1_StartEx(Rx_Surtidor);
 568              		.loc 1 230 0 is_stmt 1
 569 00b4 2F48     		ldr	r0, .L41+4
 570 00b6 FFF7FEFF 		bl	isr_1_StartEx
 231:.\Protocolo.c **** 	    Timer_RxSurtidor_Start();	
 571              		.loc 1 231 0
 572 00ba FFF7FEFF 		bl	Timer_RxSurtidor_Start
 232:.\Protocolo.c **** 	    rx_timeout=0;
 573              		.loc 1 232 0
 574 00be 2E4B     		ldr	r3, .L41+8
 575 00c0 0022     		movs	r2, #0
 576 00c2 1A70     		strb	r2, [r3]
 233:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 577              		.loc 1 233 0
 578 00c4 0BE0     		b	.L30
 579              	.L31:
 234:.\Protocolo.c **** 			if(rx_timeout==1){
 580              		.loc 1 234 0
 581 00c6 2C4B     		ldr	r3, .L41+8
 582 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 583 00ca 012B     		cmp	r3, #1
 584 00cc 07D1     		bne	.L30
 235:.\Protocolo.c **** 				isr_1_Stop();
 585              		.loc 1 235 0
 586 00ce FFF7FEFF 		bl	isr_1_Stop
 236:.\Protocolo.c **** 				Timer_RxSurtidor_Stop();
 587              		.loc 1 236 0
 588 00d2 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 237:.\Protocolo.c **** 	    		Surtidor_ClearRxBuffer();			
 589              		.loc 1 237 0
 590 00d6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 238:.\Protocolo.c **** 				return 0;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 16


 591              		.loc 1 238 0
 592 00da 0023     		movs	r3, #0
 593 00dc 44E0     		b	.L39
 594              	.L30:
 233:.\Protocolo.c **** 			if(rx_timeout==1){
 595              		.loc 1 233 0
 596 00de FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 597 00e2 0346     		mov	r3, r0
 598 00e4 132B     		cmp	r3, #19
 599 00e6 EED1     		bne	.L31
 239:.\Protocolo.c **** 			}
 240:.\Protocolo.c **** 		}       
 241:.\Protocolo.c **** 		isr_1_Stop();
 600              		.loc 1 241 0
 601 00e8 FFF7FEFF 		bl	isr_1_Stop
 242:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();		
 602              		.loc 1 242 0
 603 00ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 604              		.loc 1 243 0
 605 00f0 0023     		movs	r3, #0
 606 00f2 87F82730 		strb	r3, [r7, #39]
 607 00f6 0FE0     		b	.L32
 608              	.L33:
 244:.\Protocolo.c ****            rx_extend[x]=Surtidor_ReadRxData(); 
 609              		.loc 1 244 0 discriminator 3
 610 00f8 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 611 00fc FFF7FEFF 		bl	Surtidor_ReadRxData
 612 0100 0346     		mov	r3, r0
 613 0102 1A46     		mov	r2, r3
 614 0104 07F12803 		add	r3, r7, #40
 615 0108 2344     		add	r3, r3, r4
 616 010a 03F8142C 		strb	r2, [r3, #-20]
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 617              		.loc 1 243 0 discriminator 3
 618 010e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 619 0112 0133     		adds	r3, r3, #1
 620 0114 87F82730 		strb	r3, [r7, #39]
 621              	.L32:
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 622              		.loc 1 243 0 is_stmt 0 discriminator 1
 623 0118 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 624 011c 122B     		cmp	r3, #18
 625 011e EBD9     		bls	.L33
 245:.\Protocolo.c ****         }
 246:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 626              		.loc 1 246 0 is_stmt 1
 627 0120 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 247:.\Protocolo.c ****         if((rx_extend[0]==0xBA)&&(rx_extend[17]==0x8D)&&(rx_extend[18]==0x8A)&&(rx_extend[12]==0xB1
 628              		.loc 1 247 0
 629 0124 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 630 0126 BA2B     		cmp	r3, #186
 631 0128 1BD1     		bne	.L34
 632              		.loc 1 247 0 is_stmt 0 discriminator 1
 633 012a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 634 012e 8D2B     		cmp	r3, #141
 635 0130 17D1     		bne	.L34
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 17


 636              		.loc 1 247 0 discriminator 2
 637 0132 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 638 0136 8A2B     		cmp	r3, #138
 639 0138 13D1     		bne	.L34
 640              		.loc 1 247 0 discriminator 3
 641 013a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 642 013e B12B     		cmp	r3, #177
 643 0140 0FD1     		bne	.L34
 248:.\Protocolo.c ****             switch(rx_extend[14]){
 644              		.loc 1 248 0 is_stmt 1
 645 0142 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 646 0146 B22B     		cmp	r3, #178
 647 0148 05D0     		beq	.L36
 648 014a B32B     		cmp	r3, #179
 649 014c 05D0     		beq	.L37
 650 014e B12B     		cmp	r3, #177
 651 0150 05D1     		bne	.L40
 249:.\Protocolo.c ****                 case 0xB1:
 250:.\Protocolo.c ****                     return 1;
 652              		.loc 1 250 0
 653 0152 0123     		movs	r3, #1
 654 0154 08E0     		b	.L39
 655              	.L36:
 251:.\Protocolo.c ****                 break;
 252:.\Protocolo.c ****                 case 0xB2:
 253:.\Protocolo.c ****                     return 2;
 656              		.loc 1 253 0
 657 0156 0223     		movs	r3, #2
 658 0158 06E0     		b	.L39
 659              	.L37:
 254:.\Protocolo.c ****                 break;
 255:.\Protocolo.c ****                 case 0xB3:
 256:.\Protocolo.c ****                     return 3;
 660              		.loc 1 256 0
 661 015a 0323     		movs	r3, #3
 662 015c 04E0     		b	.L39
 663              	.L40:
 257:.\Protocolo.c ****                 break;
 258:.\Protocolo.c ****                 default:
 259:.\Protocolo.c ****                 	return 0;
 664              		.loc 1 259 0
 665 015e 0023     		movs	r3, #0
 666 0160 02E0     		b	.L39
 667              	.L34:
 260:.\Protocolo.c **** 				break;
 261:.\Protocolo.c ****             }
 262:.\Protocolo.c ****         }
 263:.\Protocolo.c ****         else{
 264:.\Protocolo.c ****             return 0;
 668              		.loc 1 264 0
 669 0162 0023     		movs	r3, #0
 670 0164 00E0     		b	.L39
 671              	.L27:
 265:.\Protocolo.c ****         }
 266:.\Protocolo.c ****     }
 267:.\Protocolo.c ****     else{
 268:.\Protocolo.c ****         return 0;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 18


 672              		.loc 1 268 0
 673 0166 0023     		movs	r3, #0
 674              	.L39:
 269:.\Protocolo.c ****     }
 270:.\Protocolo.c **** }
 675              		.loc 1 270 0
 676 0168 1846     		mov	r0, r3
 677 016a 2C37     		adds	r7, r7, #44
 678              		.cfi_def_cfa_offset 12
 679 016c BD46     		mov	sp, r7
 680              		.cfi_def_cfa_register 13
 681              		@ sp needed
 682 016e 90BD     		pop	{r4, r7, pc}
 683              	.L42:
 684              		.align	2
 685              	.L41:
 686 0170 00000000 		.word	.LC0
 687 0174 00000000 		.word	Rx_Surtidor
 688 0178 00000000 		.word	rx_timeout
 689              		.cfi_endproc
 690              	.LFE67:
 691              		.size	estado_ex, .-estado_ex
 692              		.section	.text.detener,"ax",%progbits
 693              		.align	2
 694              		.global	detener
 695              		.thumb
 696              		.thumb_func
 697              		.type	detener, %function
 698              	detener:
 699              	.LFB68:
 271:.\Protocolo.c **** 
 272:.\Protocolo.c **** /*
 273:.\Protocolo.c **** ***************************************************************************************************
 274:.\Protocolo.c **** *                                         void detener(uint8 val)
 275:.\Protocolo.c **** *
 276:.\Protocolo.c **** * Description : 
 277:.\Protocolo.c **** *               
 278:.\Protocolo.c **** *
 279:.\Protocolo.c **** * Argument(s) : none
 280:.\Protocolo.c **** *
 281:.\Protocolo.c **** * Return(s)   : none
 282:.\Protocolo.c **** *
 283:.\Protocolo.c **** * Caller(s)   : 
 284:.\Protocolo.c **** *
 285:.\Protocolo.c **** * Note(s)     : none.
 286:.\Protocolo.c **** ***************************************************************************************************
 287:.\Protocolo.c **** */
 288:.\Protocolo.c **** void detener(uint8 val){
 700              		.loc 1 288 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 8
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704 0000 80B5     		push	{r7, lr}
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 7, -8
 707              		.cfi_offset 14, -4
 708 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 19


 709              		.cfi_def_cfa_offset 16
 710 0004 00AF     		add	r7, sp, #0
 711              		.cfi_def_cfa_register 7
 712 0006 0346     		mov	r3, r0
 713 0008 FB71     		strb	r3, [r7, #7]
 289:.\Protocolo.c ****     Surtidor_PutChar(0x30|val);
 714              		.loc 1 289 0
 715 000a FB79     		ldrb	r3, [r7, #7]
 716 000c 43F03003 		orr	r3, r3, #48
 717 0010 DBB2     		uxtb	r3, r3
 718 0012 1846     		mov	r0, r3
 719 0014 FFF7FEFF 		bl	Surtidor_PutChar
 290:.\Protocolo.c ****     CyDelay(200);
 720              		.loc 1 290 0
 721 0018 C820     		movs	r0, #200
 722 001a FFF7FEFF 		bl	CyDelay
 291:.\Protocolo.c **** }
 723              		.loc 1 291 0
 724 001e 0837     		adds	r7, r7, #8
 725              		.cfi_def_cfa_offset 8
 726 0020 BD46     		mov	sp, r7
 727              		.cfi_def_cfa_register 13
 728              		@ sp needed
 729 0022 80BD     		pop	{r7, pc}
 730              		.cfi_endproc
 731              	.LFE68:
 732              		.size	detener, .-detener
 733              		.section	.text.venta,"ax",%progbits
 734              		.align	2
 735              		.global	venta
 736              		.thumb
 737              		.thumb_func
 738              		.type	venta, %function
 739              	venta:
 740              	.LFB69:
 292:.\Protocolo.c **** 
 293:.\Protocolo.c **** /*
 294:.\Protocolo.c **** ***************************************************************************************************
 295:.\Protocolo.c **** *                                         void venta(uint8 val)
 296:.\Protocolo.c **** *
 297:.\Protocolo.c **** * Description : 
 298:.\Protocolo.c **** *               
 299:.\Protocolo.c **** *
 300:.\Protocolo.c **** * Argument(s) : none
 301:.\Protocolo.c **** *
 302:.\Protocolo.c **** * Return(s)   : none
 303:.\Protocolo.c **** *
 304:.\Protocolo.c **** * Caller(s)   : 
 305:.\Protocolo.c **** *
 306:.\Protocolo.c **** * Note(s)     : none.
 307:.\Protocolo.c **** ***************************************************************************************************
 308:.\Protocolo.c **** */
 309:.\Protocolo.c **** uint8 venta(uint8 dir){
 741              		.loc 1 309 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 16
 744              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 20


 745 0000 80B5     		push	{r7, lr}
 746              		.cfi_def_cfa_offset 8
 747              		.cfi_offset 7, -8
 748              		.cfi_offset 14, -4
 749 0002 84B0     		sub	sp, sp, #16
 750              		.cfi_def_cfa_offset 24
 751 0004 00AF     		add	r7, sp, #0
 752              		.cfi_def_cfa_register 7
 753 0006 0346     		mov	r3, r0
 754 0008 FB71     		strb	r3, [r7, #7]
 310:.\Protocolo.c **** 	uint8 x;
 311:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 755              		.loc 1 311 0
 756 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 312:.\Protocolo.c **** 	Surtidor_PutChar(0x40|dir);
 757              		.loc 1 312 0
 758 000e FB79     		ldrb	r3, [r7, #7]
 759 0010 43F04003 		orr	r3, r3, #64
 760 0014 DBB2     		uxtb	r3, r3
 761 0016 1846     		mov	r0, r3
 762 0018 FFF7FEFF 		bl	Surtidor_PutChar
 313:.\Protocolo.c ****     CyDelay(300);
 763              		.loc 1 313 0
 764 001c 4FF49670 		mov	r0, #300
 765 0020 FFF7FEFF 		bl	CyDelay
 314:.\Protocolo.c **** 	if((version[1]!=7)&&(Surtidor_GetRxBufferSize()==33)){
 766              		.loc 1 314 0
 767 0024 AB4B     		ldr	r3, .L78
 768 0026 5B78     		ldrb	r3, [r3, #1]
 769 0028 DBB2     		uxtb	r3, r3
 770 002a 072B     		cmp	r3, #7
 771 002c 00F0BC80 		beq	.L45
 772              		.loc 1 314 0 is_stmt 0 discriminator 1
 773 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 774 0034 0346     		mov	r3, r0
 775 0036 212B     		cmp	r3, #33
 776 0038 40F0B680 		bne	.L45
 315:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[32]==0xF0)){
 777              		.loc 1 315 0 is_stmt 1
 778 003c A64B     		ldr	r3, .L78+4
 779 003e 1B78     		ldrb	r3, [r3]
 780 0040 DBB2     		uxtb	r3, r3
 781 0042 FF2B     		cmp	r3, #255
 782 0044 40F0AE80 		bne	.L46
 783              		.loc 1 315 0 is_stmt 0 discriminator 1
 784 0048 A34B     		ldr	r3, .L78+4
 785 004a 9B78     		ldrb	r3, [r3, #2]
 786 004c DBB2     		uxtb	r3, r3
 787 004e F82B     		cmp	r3, #248
 788 0050 40F0A880 		bne	.L46
 789              		.loc 1 315 0 discriminator 2
 790 0054 A04B     		ldr	r3, .L78+4
 791 0056 93F82030 		ldrb	r3, [r3, #32]
 792 005a DBB2     		uxtb	r3, r3
 793 005c F02B     		cmp	r3, #240
 794 005e 40F0A180 		bne	.L46
 316:.\Protocolo.c **** 			if(dir==lado1.dir){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 21


 795              		.loc 1 316 0 is_stmt 1
 796 0062 9E4B     		ldr	r3, .L78+8
 797 0064 1B78     		ldrb	r3, [r3]
 798 0066 DBB2     		uxtb	r3, r3
 799 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 800 006a 9A42     		cmp	r2, r3
 801 006c 4CD1     		bne	.L47
 317:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 802              		.loc 1 317 0
 803 006e 9A4B     		ldr	r3, .L78+4
 804 0070 5B7A     		ldrb	r3, [r3, #9]
 805 0072 DBB2     		uxtb	r3, r3
 806 0074 03F00F03 		and	r3, r3, #15
 807 0078 DBB2     		uxtb	r3, r3
 808 007a 0133     		adds	r3, r3, #1
 809 007c DAB2     		uxtb	r2, r3
 810 007e 984B     		ldr	r3, .L78+12
 811 0080 5A76     		strb	r2, [r3, #25]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 812              		.loc 1 318 0
 813 0082 0023     		movs	r3, #0
 814 0084 FB73     		strb	r3, [r7, #15]
 815 0086 0FE0     		b	.L48
 816              	.L49:
 319:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 817              		.loc 1 319 0 discriminator 3
 818 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 819 008a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 820 008c 0C32     		adds	r2, r2, #12
 821 008e 9249     		ldr	r1, .L78+4
 822 0090 8A5C     		ldrb	r2, [r1, r2]
 823 0092 D2B2     		uxtb	r2, r2
 824 0094 02F00F02 		and	r2, r2, #15
 825 0098 D1B2     		uxtb	r1, r2
 826 009a 914A     		ldr	r2, .L78+12
 827 009c 1344     		add	r3, r3, r2
 828 009e 0A46     		mov	r2, r1
 829 00a0 9A70     		strb	r2, [r3, #2]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 830              		.loc 1 318 0 discriminator 3
 831 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 832 00a4 0133     		adds	r3, r3, #1
 833 00a6 FB73     		strb	r3, [r7, #15]
 834              	.L48:
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 835              		.loc 1 318 0 is_stmt 0 discriminator 1
 836 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 837 00aa 032B     		cmp	r3, #3
 838 00ac ECD9     		bls	.L49
 320:.\Protocolo.c **** 				}
 321:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 839              		.loc 1 321 0 is_stmt 1
 840 00ae 0023     		movs	r3, #0
 841 00b0 FB73     		strb	r3, [r7, #15]
 842 00b2 0FE0     		b	.L50
 843              	.L51:
 322:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 22


 844              		.loc 1 322 0 discriminator 3
 845 00b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 846 00b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 847 00b8 1132     		adds	r2, r2, #17
 848 00ba 8749     		ldr	r1, .L78+4
 849 00bc 8A5C     		ldrb	r2, [r1, r2]
 850 00be D2B2     		uxtb	r2, r2
 851 00c0 02F00F02 		and	r2, r2, #15
 852 00c4 D1B2     		uxtb	r1, r2
 853 00c6 864A     		ldr	r2, .L78+12
 854 00c8 1344     		add	r3, r3, r2
 855 00ca 0A46     		mov	r2, r1
 856 00cc 1A74     		strb	r2, [r3, #16]
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 857              		.loc 1 321 0 discriminator 3
 858 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 859 00d0 0133     		adds	r3, r3, #1
 860 00d2 FB73     		strb	r3, [r7, #15]
 861              	.L50:
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 862              		.loc 1 321 0 is_stmt 0 discriminator 1
 863 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 864 00d6 052B     		cmp	r3, #5
 865 00d8 ECD9     		bls	.L51
 323:.\Protocolo.c **** 				}			
 324:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 866              		.loc 1 324 0 is_stmt 1
 867 00da 0023     		movs	r3, #0
 868 00dc FB73     		strb	r3, [r7, #15]
 869 00de 0FE0     		b	.L52
 870              	.L53:
 325:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 871              		.loc 1 325 0 discriminator 3
 872 00e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 873 00e2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 874 00e4 1832     		adds	r2, r2, #24
 875 00e6 7C49     		ldr	r1, .L78+4
 876 00e8 8A5C     		ldrb	r2, [r1, r2]
 877 00ea D2B2     		uxtb	r2, r2
 878 00ec 02F00F02 		and	r2, r2, #15
 879 00f0 D1B2     		uxtb	r1, r2
 880 00f2 7B4A     		ldr	r2, .L78+12
 881 00f4 1344     		add	r3, r3, r2
 882 00f6 0A46     		mov	r2, r1
 883 00f8 DA71     		strb	r2, [r3, #7]
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 884              		.loc 1 324 0 discriminator 3
 885 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 886 00fc 0133     		adds	r3, r3, #1
 887 00fe FB73     		strb	r3, [r7, #15]
 888              	.L52:
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 889              		.loc 1 324 0 is_stmt 0 discriminator 1
 890 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 891 0102 052B     		cmp	r3, #5
 892 0104 ECD9     		bls	.L53
 893 0106 4BE0     		b	.L54
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 23


 894              	.L47:
 326:.\Protocolo.c **** 				}
 327:.\Protocolo.c **** 			}
 328:.\Protocolo.c **** 			else{
 329:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 895              		.loc 1 329 0 is_stmt 1
 896 0108 734B     		ldr	r3, .L78+4
 897 010a 5B7A     		ldrb	r3, [r3, #9]
 898 010c DBB2     		uxtb	r3, r3
 899 010e 03F00F03 		and	r3, r3, #15
 900 0112 DBB2     		uxtb	r3, r3
 901 0114 0133     		adds	r3, r3, #1
 902 0116 DAB2     		uxtb	r2, r3
 903 0118 724B     		ldr	r3, .L78+16
 904 011a 5A76     		strb	r2, [r3, #25]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 905              		.loc 1 330 0
 906 011c 0023     		movs	r3, #0
 907 011e FB73     		strb	r3, [r7, #15]
 908 0120 0FE0     		b	.L55
 909              	.L56:
 331:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 910              		.loc 1 331 0 discriminator 3
 911 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 912 0124 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 913 0126 0C32     		adds	r2, r2, #12
 914 0128 6B49     		ldr	r1, .L78+4
 915 012a 8A5C     		ldrb	r2, [r1, r2]
 916 012c D2B2     		uxtb	r2, r2
 917 012e 02F00F02 		and	r2, r2, #15
 918 0132 D1B2     		uxtb	r1, r2
 919 0134 6B4A     		ldr	r2, .L78+16
 920 0136 1344     		add	r3, r3, r2
 921 0138 0A46     		mov	r2, r1
 922 013a 9A70     		strb	r2, [r3, #2]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 923              		.loc 1 330 0 discriminator 3
 924 013c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 925 013e 0133     		adds	r3, r3, #1
 926 0140 FB73     		strb	r3, [r7, #15]
 927              	.L55:
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 928              		.loc 1 330 0 is_stmt 0 discriminator 1
 929 0142 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 930 0144 032B     		cmp	r3, #3
 931 0146 ECD9     		bls	.L56
 332:.\Protocolo.c **** 				}
 333:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 932              		.loc 1 333 0 is_stmt 1
 933 0148 0023     		movs	r3, #0
 934 014a FB73     		strb	r3, [r7, #15]
 935 014c 0FE0     		b	.L57
 936              	.L58:
 334:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 937              		.loc 1 334 0 discriminator 3
 938 014e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 939 0150 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 24


 940 0152 1132     		adds	r2, r2, #17
 941 0154 6049     		ldr	r1, .L78+4
 942 0156 8A5C     		ldrb	r2, [r1, r2]
 943 0158 D2B2     		uxtb	r2, r2
 944 015a 02F00F02 		and	r2, r2, #15
 945 015e D1B2     		uxtb	r1, r2
 946 0160 604A     		ldr	r2, .L78+16
 947 0162 1344     		add	r3, r3, r2
 948 0164 0A46     		mov	r2, r1
 949 0166 1A74     		strb	r2, [r3, #16]
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 950              		.loc 1 333 0 discriminator 3
 951 0168 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 952 016a 0133     		adds	r3, r3, #1
 953 016c FB73     		strb	r3, [r7, #15]
 954              	.L57:
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 955              		.loc 1 333 0 is_stmt 0 discriminator 1
 956 016e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 957 0170 052B     		cmp	r3, #5
 958 0172 ECD9     		bls	.L58
 335:.\Protocolo.c **** 				}			
 336:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 959              		.loc 1 336 0 is_stmt 1
 960 0174 0023     		movs	r3, #0
 961 0176 FB73     		strb	r3, [r7, #15]
 962 0178 0FE0     		b	.L59
 963              	.L60:
 337:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 964              		.loc 1 337 0 discriminator 3
 965 017a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966 017c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 967 017e 1832     		adds	r2, r2, #24
 968 0180 5549     		ldr	r1, .L78+4
 969 0182 8A5C     		ldrb	r2, [r1, r2]
 970 0184 D2B2     		uxtb	r2, r2
 971 0186 02F00F02 		and	r2, r2, #15
 972 018a D1B2     		uxtb	r1, r2
 973 018c 554A     		ldr	r2, .L78+16
 974 018e 1344     		add	r3, r3, r2
 975 0190 0A46     		mov	r2, r1
 976 0192 DA71     		strb	r2, [r3, #7]
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 977              		.loc 1 336 0 discriminator 3
 978 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 979 0196 0133     		adds	r3, r3, #1
 980 0198 FB73     		strb	r3, [r7, #15]
 981              	.L59:
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 982              		.loc 1 336 0 is_stmt 0 discriminator 1
 983 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 984 019c 052B     		cmp	r3, #5
 985 019e ECD9     		bls	.L60
 986              	.L54:
 338:.\Protocolo.c **** 				}			
 339:.\Protocolo.c **** 			}
 340:.\Protocolo.c **** 			return 1;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 25


 987              		.loc 1 340 0 is_stmt 1
 988 01a0 0123     		movs	r3, #1
 989 01a2 CFE0     		b	.L61
 990              	.L46:
 341:.\Protocolo.c **** 		}
 342:.\Protocolo.c **** 		else{
 343:.\Protocolo.c **** 			return 0;
 991              		.loc 1 343 0
 992 01a4 0023     		movs	r3, #0
 993 01a6 CDE0     		b	.L61
 994              	.L45:
 344:.\Protocolo.c **** 		}
 345:.\Protocolo.c **** 	}
 346:.\Protocolo.c **** 	else if((version[1]==7)&&(Surtidor_GetRxBufferSize()==39)){
 995              		.loc 1 346 0
 996 01a8 4A4B     		ldr	r3, .L78
 997 01aa 5B78     		ldrb	r3, [r3, #1]
 998 01ac DBB2     		uxtb	r3, r3
 999 01ae 072B     		cmp	r3, #7
 1000 01b0 40F0C780 		bne	.L62
 1001              		.loc 1 346 0 is_stmt 0 discriminator 1
 1002 01b4 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 1003 01b8 0346     		mov	r3, r0
 1004 01ba 272B     		cmp	r3, #39
 1005 01bc 40F0C180 		bne	.L62
 347:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[38]==0xF0)){
 1006              		.loc 1 347 0 is_stmt 1
 1007 01c0 454B     		ldr	r3, .L78+4
 1008 01c2 1B78     		ldrb	r3, [r3]
 1009 01c4 DBB2     		uxtb	r3, r3
 1010 01c6 FF2B     		cmp	r3, #255
 1011 01c8 40F0B980 		bne	.L63
 1012              		.loc 1 347 0 is_stmt 0 discriminator 1
 1013 01cc 424B     		ldr	r3, .L78+4
 1014 01ce 9B78     		ldrb	r3, [r3, #2]
 1015 01d0 DBB2     		uxtb	r3, r3
 1016 01d2 F82B     		cmp	r3, #248
 1017 01d4 40F0B380 		bne	.L63
 1018              		.loc 1 347 0 discriminator 2
 1019 01d8 3F4B     		ldr	r3, .L78+4
 1020 01da 93F82630 		ldrb	r3, [r3, #38]
 1021 01de DBB2     		uxtb	r3, r3
 1022 01e0 F02B     		cmp	r3, #240
 1023 01e2 40F0AC80 		bne	.L63
 348:.\Protocolo.c **** 			if(dir==lado1.dir){
 1024              		.loc 1 348 0 is_stmt 1
 1025 01e6 3D4B     		ldr	r3, .L78+8
 1026 01e8 1B78     		ldrb	r3, [r3]
 1027 01ea DBB2     		uxtb	r3, r3
 1028 01ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1029 01ee 9A42     		cmp	r2, r3
 1030 01f0 4CD1     		bne	.L64
 349:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1031              		.loc 1 349 0
 1032 01f2 394B     		ldr	r3, .L78+4
 1033 01f4 5B7A     		ldrb	r3, [r3, #9]
 1034 01f6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 26


 1035 01f8 03F00F03 		and	r3, r3, #15
 1036 01fc DBB2     		uxtb	r3, r3
 1037 01fe 0133     		adds	r3, r3, #1
 1038 0200 DAB2     		uxtb	r2, r3
 1039 0202 374B     		ldr	r3, .L78+12
 1040 0204 5A76     		strb	r2, [r3, #25]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1041              		.loc 1 350 0
 1042 0206 0023     		movs	r3, #0
 1043 0208 FB73     		strb	r3, [r7, #15]
 1044 020a 0FE0     		b	.L65
 1045              	.L66:
 351:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1046              		.loc 1 351 0 discriminator 3
 1047 020c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1048 020e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1049 0210 0C32     		adds	r2, r2, #12
 1050 0212 3149     		ldr	r1, .L78+4
 1051 0214 8A5C     		ldrb	r2, [r1, r2]
 1052 0216 D2B2     		uxtb	r2, r2
 1053 0218 02F00F02 		and	r2, r2, #15
 1054 021c D1B2     		uxtb	r1, r2
 1055 021e 304A     		ldr	r2, .L78+12
 1056 0220 1344     		add	r3, r3, r2
 1057 0222 0A46     		mov	r2, r1
 1058 0224 9A70     		strb	r2, [r3, #2]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1059              		.loc 1 350 0 discriminator 3
 1060 0226 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1061 0228 0133     		adds	r3, r3, #1
 1062 022a FB73     		strb	r3, [r7, #15]
 1063              	.L65:
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1064              		.loc 1 350 0 is_stmt 0 discriminator 1
 1065 022c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1066 022e 052B     		cmp	r3, #5
 1067 0230 ECD9     		bls	.L66
 352:.\Protocolo.c **** 				}
 353:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1068              		.loc 1 353 0 is_stmt 1
 1069 0232 0023     		movs	r3, #0
 1070 0234 FB73     		strb	r3, [r7, #15]
 1071 0236 0FE0     		b	.L67
 1072              	.L68:
 354:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1073              		.loc 1 354 0 discriminator 3
 1074 0238 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1075 023a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1076 023c 1332     		adds	r2, r2, #19
 1077 023e 2649     		ldr	r1, .L78+4
 1078 0240 8A5C     		ldrb	r2, [r1, r2]
 1079 0242 D2B2     		uxtb	r2, r2
 1080 0244 02F00F02 		and	r2, r2, #15
 1081 0248 D1B2     		uxtb	r1, r2
 1082 024a 254A     		ldr	r2, .L78+12
 1083 024c 1344     		add	r3, r3, r2
 1084 024e 0A46     		mov	r2, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 27


 1085 0250 1A74     		strb	r2, [r3, #16]
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1086              		.loc 1 353 0 discriminator 3
 1087 0252 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1088 0254 0133     		adds	r3, r3, #1
 1089 0256 FB73     		strb	r3, [r7, #15]
 1090              	.L67:
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1091              		.loc 1 353 0 is_stmt 0 discriminator 1
 1092 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1093 025a 072B     		cmp	r3, #7
 1094 025c ECD9     		bls	.L68
 355:.\Protocolo.c **** 				}			
 356:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1095              		.loc 1 356 0 is_stmt 1
 1096 025e 0023     		movs	r3, #0
 1097 0260 FB73     		strb	r3, [r7, #15]
 1098 0262 0FE0     		b	.L69
 1099              	.L70:
 357:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1100              		.loc 1 357 0 discriminator 3
 1101 0264 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1102 0266 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1103 0268 1C32     		adds	r2, r2, #28
 1104 026a 1B49     		ldr	r1, .L78+4
 1105 026c 8A5C     		ldrb	r2, [r1, r2]
 1106 026e D2B2     		uxtb	r2, r2
 1107 0270 02F00F02 		and	r2, r2, #15
 1108 0274 D1B2     		uxtb	r1, r2
 1109 0276 1A4A     		ldr	r2, .L78+12
 1110 0278 1344     		add	r3, r3, r2
 1111 027a 0A46     		mov	r2, r1
 1112 027c DA71     		strb	r2, [r3, #7]
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1113              		.loc 1 356 0 discriminator 3
 1114 027e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1115 0280 0133     		adds	r3, r3, #1
 1116 0282 FB73     		strb	r3, [r7, #15]
 1117              	.L69:
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1118              		.loc 1 356 0 is_stmt 0 discriminator 1
 1119 0284 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1120 0286 072B     		cmp	r3, #7
 1121 0288 ECD9     		bls	.L70
 1122 028a 56E0     		b	.L71
 1123              	.L64:
 358:.\Protocolo.c **** 				}
 359:.\Protocolo.c **** 			}
 360:.\Protocolo.c **** 			else{
 361:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1124              		.loc 1 361 0 is_stmt 1
 1125 028c 124B     		ldr	r3, .L78+4
 1126 028e 5B7A     		ldrb	r3, [r3, #9]
 1127 0290 DBB2     		uxtb	r3, r3
 1128 0292 03F00F03 		and	r3, r3, #15
 1129 0296 DBB2     		uxtb	r3, r3
 1130 0298 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 28


 1131 029a DAB2     		uxtb	r2, r3
 1132 029c 114B     		ldr	r3, .L78+16
 1133 029e 5A76     		strb	r2, [r3, #25]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1134              		.loc 1 362 0
 1135 02a0 0023     		movs	r3, #0
 1136 02a2 FB73     		strb	r3, [r7, #15]
 1137 02a4 0FE0     		b	.L72
 1138              	.L73:
 363:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1139              		.loc 1 363 0 discriminator 3
 1140 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1141 02a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1142 02aa 0C32     		adds	r2, r2, #12
 1143 02ac 0A49     		ldr	r1, .L78+4
 1144 02ae 8A5C     		ldrb	r2, [r1, r2]
 1145 02b0 D2B2     		uxtb	r2, r2
 1146 02b2 02F00F02 		and	r2, r2, #15
 1147 02b6 D1B2     		uxtb	r1, r2
 1148 02b8 0A4A     		ldr	r2, .L78+16
 1149 02ba 1344     		add	r3, r3, r2
 1150 02bc 0A46     		mov	r2, r1
 1151 02be 9A70     		strb	r2, [r3, #2]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1152              		.loc 1 362 0 discriminator 3
 1153 02c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1154 02c2 0133     		adds	r3, r3, #1
 1155 02c4 FB73     		strb	r3, [r7, #15]
 1156              	.L72:
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1157              		.loc 1 362 0 is_stmt 0 discriminator 1
 1158 02c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1159 02c8 052B     		cmp	r3, #5
 1160 02ca ECD9     		bls	.L73
 364:.\Protocolo.c **** 				}
 365:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1161              		.loc 1 365 0 is_stmt 1
 1162 02cc 0023     		movs	r3, #0
 1163 02ce FB73     		strb	r3, [r7, #15]
 1164 02d0 1AE0     		b	.L74
 1165              	.L79:
 1166 02d2 00BF     		.align	2
 1167              	.L78:
 1168 02d4 00000000 		.word	version
 1169 02d8 00000000 		.word	Surtidor_rxBuffer
 1170 02dc 00000000 		.word	lado1
 1171 02e0 00000000 		.word	rventa1
 1172 02e4 00000000 		.word	rventa2
 1173              	.L75:
 366:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1174              		.loc 1 366 0 discriminator 3
 1175 02e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1176 02ea FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1177 02ec 1332     		adds	r2, r2, #19
 1178 02ee 1749     		ldr	r1, .L80
 1179 02f0 8A5C     		ldrb	r2, [r1, r2]
 1180 02f2 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 29


 1181 02f4 02F00F02 		and	r2, r2, #15
 1182 02f8 D1B2     		uxtb	r1, r2
 1183 02fa 154A     		ldr	r2, .L80+4
 1184 02fc 1344     		add	r3, r3, r2
 1185 02fe 0A46     		mov	r2, r1
 1186 0300 1A74     		strb	r2, [r3, #16]
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1187              		.loc 1 365 0 discriminator 3
 1188 0302 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1189 0304 0133     		adds	r3, r3, #1
 1190 0306 FB73     		strb	r3, [r7, #15]
 1191              	.L74:
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1192              		.loc 1 365 0 is_stmt 0 discriminator 1
 1193 0308 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1194 030a 072B     		cmp	r3, #7
 1195 030c ECD9     		bls	.L75
 367:.\Protocolo.c **** 				}			
 368:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1196              		.loc 1 368 0 is_stmt 1
 1197 030e 0023     		movs	r3, #0
 1198 0310 FB73     		strb	r3, [r7, #15]
 1199 0312 0FE0     		b	.L76
 1200              	.L77:
 369:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1201              		.loc 1 369 0 discriminator 3
 1202 0314 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1203 0316 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1204 0318 1C32     		adds	r2, r2, #28
 1205 031a 0C49     		ldr	r1, .L80
 1206 031c 8A5C     		ldrb	r2, [r1, r2]
 1207 031e D2B2     		uxtb	r2, r2
 1208 0320 02F00F02 		and	r2, r2, #15
 1209 0324 D1B2     		uxtb	r1, r2
 1210 0326 0A4A     		ldr	r2, .L80+4
 1211 0328 1344     		add	r3, r3, r2
 1212 032a 0A46     		mov	r2, r1
 1213 032c DA71     		strb	r2, [r3, #7]
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1214              		.loc 1 368 0 discriminator 3
 1215 032e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1216 0330 0133     		adds	r3, r3, #1
 1217 0332 FB73     		strb	r3, [r7, #15]
 1218              	.L76:
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1219              		.loc 1 368 0 is_stmt 0 discriminator 1
 1220 0334 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1221 0336 072B     		cmp	r3, #7
 1222 0338 ECD9     		bls	.L77
 1223              	.L71:
 370:.\Protocolo.c **** 				}			
 371:.\Protocolo.c **** 			}
 372:.\Protocolo.c **** 			return 1;
 1224              		.loc 1 372 0 is_stmt 1
 1225 033a 0123     		movs	r3, #1
 1226 033c 02E0     		b	.L61
 1227              	.L63:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 30


 373:.\Protocolo.c **** 		}
 374:.\Protocolo.c **** 		else{
 375:.\Protocolo.c **** 			return 0;
 1228              		.loc 1 375 0
 1229 033e 0023     		movs	r3, #0
 1230 0340 00E0     		b	.L61
 1231              	.L62:
 376:.\Protocolo.c **** 		}
 377:.\Protocolo.c **** 	}
 378:.\Protocolo.c **** 	return 0;
 1232              		.loc 1 378 0
 1233 0342 0023     		movs	r3, #0
 1234              	.L61:
 379:.\Protocolo.c **** }
 1235              		.loc 1 379 0
 1236 0344 1846     		mov	r0, r3
 1237 0346 1037     		adds	r7, r7, #16
 1238              		.cfi_def_cfa_offset 8
 1239 0348 BD46     		mov	sp, r7
 1240              		.cfi_def_cfa_register 13
 1241              		@ sp needed
 1242 034a 80BD     		pop	{r7, pc}
 1243              	.L81:
 1244              		.align	2
 1245              	.L80:
 1246 034c 00000000 		.word	Surtidor_rxBuffer
 1247 0350 00000000 		.word	rventa2
 1248              		.cfi_endproc
 1249              	.LFE69:
 1250              		.size	venta, .-venta
 1251              		.section	.text.programar,"ax",%progbits
 1252              		.align	2
 1253              		.global	programar
 1254              		.thumb
 1255              		.thumb_func
 1256              		.type	programar, %function
 1257              	programar:
 1258              	.LFB70:
 380:.\Protocolo.c **** 
 381:.\Protocolo.c **** /*
 382:.\Protocolo.c **** ***************************************************************************************************
 383:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 384:.\Protocolo.c **** *
 385:.\Protocolo.c **** * Description : 
 386:.\Protocolo.c **** *               
 387:.\Protocolo.c **** *
 388:.\Protocolo.c **** * Argument(s) : none
 389:.\Protocolo.c **** *
 390:.\Protocolo.c **** * Return(s)   : none
 391:.\Protocolo.c **** *
 392:.\Protocolo.c **** * Caller(s)   : 
 393:.\Protocolo.c **** *
 394:.\Protocolo.c **** * Note(s)     : none.
 395:.\Protocolo.c **** ***************************************************************************************************
 396:.\Protocolo.c **** */
 397:.\Protocolo.c **** uint8 programar(uint8 dir, uint8 grado, uint8 *valor, uint8 preset){
 1259              		.loc 1 397 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 31


 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 32
 1262              		@ frame_needed = 1, uses_anonymous_args = 0
 1263 0000 80B5     		push	{r7, lr}
 1264              		.cfi_def_cfa_offset 8
 1265              		.cfi_offset 7, -8
 1266              		.cfi_offset 14, -4
 1267 0002 88B0     		sub	sp, sp, #32
 1268              		.cfi_def_cfa_offset 40
 1269 0004 00AF     		add	r7, sp, #0
 1270              		.cfi_def_cfa_register 7
 1271 0006 3A60     		str	r2, [r7]
 1272 0008 1A46     		mov	r2, r3
 1273 000a 0346     		mov	r3, r0
 1274 000c FB71     		strb	r3, [r7, #7]
 1275 000e 0B46     		mov	r3, r1
 1276 0010 BB71     		strb	r3, [r7, #6]
 1277 0012 1346     		mov	r3, r2
 1278 0014 7B71     		strb	r3, [r7, #5]
 398:.\Protocolo.c **** 	uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,temp,i,decimal;
 1279              		.loc 1 398 0
 1280 0016 07F10803 		add	r3, r7, #8
 1281 001a 0022     		movs	r2, #0
 1282 001c 1A60     		str	r2, [r3]
 1283 001e 0433     		adds	r3, r3, #4
 1284 0020 0022     		movs	r2, #0
 1285 0022 1A60     		str	r2, [r3]
 1286 0024 0433     		adds	r3, r3, #4
 1287 0026 0022     		movs	r2, #0
 1288 0028 1A60     		str	r2, [r3]
 1289 002a 0433     		adds	r3, r3, #4
 1290 002c 0022     		movs	r2, #0
 1291 002e 1A60     		str	r2, [r3]
 1292 0030 0433     		adds	r3, r3, #4
 1293 0032 0022     		movs	r2, #0
 1294 0034 1A80     		strh	r2, [r3]	@ movhi
 1295 0036 0233     		adds	r3, r3, #2
 399:.\Protocolo.c **** 	temp=4;
 1296              		.loc 1 399 0
 1297 0038 0423     		movs	r3, #4
 1298 003a BB77     		strb	r3, [r7, #30]
 400:.\Protocolo.c **** 	if(preset==3){
 1299              		.loc 1 400 0
 1300 003c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1301 003e 032B     		cmp	r3, #3
 1302 0040 01D1     		bne	.L83
 401:.\Protocolo.c **** 		preset=2;
 1303              		.loc 1 401 0
 1304 0042 0223     		movs	r3, #2
 1305 0044 7B71     		strb	r3, [r7, #5]
 1306              	.L83:
 402:.\Protocolo.c **** 	}
 403:.\Protocolo.c **** 	if(((version[1]==5)||(version[1]==6))&&(preset==1)){
 1307              		.loc 1 403 0
 1308 0046 B34B     		ldr	r3, .L126
 1309 0048 5B78     		ldrb	r3, [r3, #1]
 1310 004a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 32


 1311 004c 052B     		cmp	r3, #5
 1312 004e 04D0     		beq	.L84
 1313              		.loc 1 403 0 is_stmt 0 discriminator 2
 1314 0050 B04B     		ldr	r3, .L126
 1315 0052 5B78     		ldrb	r3, [r3, #1]
 1316 0054 DBB2     		uxtb	r3, r3
 1317 0056 062B     		cmp	r3, #6
 1318 0058 04D1     		bne	.L85
 1319              	.L84:
 1320              		.loc 1 403 0 discriminator 3
 1321 005a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1322 005c 012B     		cmp	r3, #1
 1323 005e 01D1     		bne	.L85
 404:.\Protocolo.c **** 		temp=3;
 1324              		.loc 1 404 0 is_stmt 1
 1325 0060 0323     		movs	r3, #3
 1326 0062 BB77     		strb	r3, [r7, #30]
 1327              	.L85:
 405:.\Protocolo.c **** 	}
 406:.\Protocolo.c **** 	if((version[1]==5)&&(preset==2)){
 1328              		.loc 1 406 0
 1329 0064 AB4B     		ldr	r3, .L126
 1330 0066 5B78     		ldrb	r3, [r3, #1]
 1331 0068 DBB2     		uxtb	r3, r3
 1332 006a 052B     		cmp	r3, #5
 1333 006c 04D1     		bne	.L86
 1334              		.loc 1 406 0 is_stmt 0 discriminator 1
 1335 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1336 0070 022B     		cmp	r3, #2
 1337 0072 01D1     		bne	.L86
 407:.\Protocolo.c **** 		temp=5;
 1338              		.loc 1 407 0 is_stmt 1
 1339 0074 0523     		movs	r3, #5
 1340 0076 BB77     		strb	r3, [r7, #30]
 1341              	.L86:
 408:.\Protocolo.c **** 	}
 409:.\Protocolo.c **** 	if((version[1]==7)&&(preset==1)){
 1342              		.loc 1 409 0
 1343 0078 A64B     		ldr	r3, .L126
 1344 007a 5B78     		ldrb	r3, [r3, #1]
 1345 007c DBB2     		uxtb	r3, r3
 1346 007e 072B     		cmp	r3, #7
 1347 0080 04D1     		bne	.L87
 1348              		.loc 1 409 0 is_stmt 0 discriminator 1
 1349 0082 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1350 0084 012B     		cmp	r3, #1
 1351 0086 01D1     		bne	.L87
 410:.\Protocolo.c **** 		temp=0;
 1352              		.loc 1 410 0 is_stmt 1
 1353 0088 0023     		movs	r3, #0
 1354 008a BB77     		strb	r3, [r7, #30]
 1355              	.L87:
 411:.\Protocolo.c **** 	}
 412:.\Protocolo.c **** 	if((version[1]==7)&&(preset==2)){
 1356              		.loc 1 412 0
 1357 008c A14B     		ldr	r3, .L126
 1358 008e 5B78     		ldrb	r3, [r3, #1]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 33


 1359 0090 DBB2     		uxtb	r3, r3
 1360 0092 072B     		cmp	r3, #7
 1361 0094 04D1     		bne	.L88
 1362              		.loc 1 412 0 is_stmt 0 discriminator 1
 1363 0096 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1364 0098 022B     		cmp	r3, #2
 1365 009a 01D1     		bne	.L88
 413:.\Protocolo.c **** 		temp=2;
 1366              		.loc 1 413 0 is_stmt 1
 1367 009c 0223     		movs	r3, #2
 1368 009e BB77     		strb	r3, [r7, #30]
 1369              	.L88:
 414:.\Protocolo.c **** 	}	
 415:.\Protocolo.c **** 	decimal=0;
 1370              		.loc 1 415 0
 1371 00a0 0023     		movs	r3, #0
 1372 00a2 3B77     		strb	r3, [r7, #28]
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1373              		.loc 1 416 0
 1374 00a4 0123     		movs	r3, #1
 1375 00a6 7B77     		strb	r3, [r7, #29]
 1376 00a8 0AE0     		b	.L89
 1377              	.L91:
 417:.\Protocolo.c **** 		if(valor[i]==','){
 1378              		.loc 1 417 0
 1379 00aa 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1380 00ac 3A68     		ldr	r2, [r7]
 1381 00ae 1344     		add	r3, r3, r2
 1382 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1383 00b2 2C2B     		cmp	r3, #44
 1384 00b4 01D1     		bne	.L90
 418:.\Protocolo.c **** 			decimal=i;	
 1385              		.loc 1 418 0
 1386 00b6 7B7F     		ldrb	r3, [r7, #29]
 1387 00b8 3B77     		strb	r3, [r7, #28]
 1388              	.L90:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1389              		.loc 1 416 0 discriminator 2
 1390 00ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1391 00bc 0133     		adds	r3, r3, #1
 1392 00be 7B77     		strb	r3, [r7, #29]
 1393              	.L89:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1394              		.loc 1 416 0 is_stmt 0 discriminator 1
 1395 00c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1396 00c2 072B     		cmp	r3, #7
 1397 00c4 F1D9     		bls	.L91
 419:.\Protocolo.c **** 		}
 420:.\Protocolo.c **** 	}
 421:.\Protocolo.c **** 	if(decimal>4){
 1398              		.loc 1 421 0 is_stmt 1
 1399 00c6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1400 00c8 042B     		cmp	r3, #4
 1401 00ca 01D9     		bls	.L92
 422:.\Protocolo.c **** 		return 0;
 1402              		.loc 1 422 0
 1403 00cc 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 34


 1404 00ce CFE3     		b	.L125
 1405              	.L92:
 423:.\Protocolo.c **** 	}
 424:.\Protocolo.c **** 	if(version[1]!=7){		
 1406              		.loc 1 424 0
 1407 00d0 904B     		ldr	r3, .L126
 1408 00d2 5B78     		ldrb	r3, [r3, #1]
 1409 00d4 DBB2     		uxtb	r3, r3
 1410 00d6 072B     		cmp	r3, #7
 1411 00d8 00F00582 		beq	.L94
 425:.\Protocolo.c **** 		buffer[0]=0xFF;
 1412              		.loc 1 425 0
 1413 00dc FF23     		movs	r3, #255
 1414 00de 3B72     		strb	r3, [r7, #8]
 426:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1415              		.loc 1 426 0
 1416 00e0 BB7F     		ldrb	r3, [r7, #30]
 1417 00e2 63F01F03 		orn	r3, r3, #31
 1418 00e6 DBB2     		uxtb	r3, r3
 1419 00e8 7B72     		strb	r3, [r7, #9]
 427:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1420              		.loc 1 427 0
 1421 00ea 7B79     		ldrb	r3, [r7, #5]
 1422 00ec 63F00F03 		orn	r3, r3, #15
 1423 00f0 DBB2     		uxtb	r3, r3
 1424 00f2 BB72     		strb	r3, [r7, #10]
 428:.\Protocolo.c **** 		buffer[3]=0xF4;
 1425              		.loc 1 428 0
 1426 00f4 F423     		movs	r3, #244
 1427 00f6 FB72     		strb	r3, [r7, #11]
 429:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1428              		.loc 1 429 0
 1429 00f8 F823     		movs	r3, #248
 1430 00fa 3B73     		strb	r3, [r7, #12]
 430:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1431              		.loc 1 430 0
 1432 00fc 3B68     		ldr	r3, [r7]
 1433 00fe 0133     		adds	r3, r3, #1
 1434 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1435 0102 63F01F03 		orn	r3, r3, #31
 1436 0106 DBB2     		uxtb	r3, r3
 1437 0108 7B73     		strb	r3, [r7, #13]
 431:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1438              		.loc 1 431 0
 1439 010a 3B68     		ldr	r3, [r7]
 1440 010c 0233     		adds	r3, r3, #2
 1441 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1442 0110 63F01F03 		orn	r3, r3, #31
 1443 0114 DBB2     		uxtb	r3, r3
 1444 0116 BB73     		strb	r3, [r7, #14]
 432:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1445              		.loc 1 432 0
 1446 0118 3B68     		ldr	r3, [r7]
 1447 011a 0333     		adds	r3, r3, #3
 1448 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1449 011e 63F01F03 		orn	r3, r3, #31
 1450 0122 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 35


 1451 0124 FB73     		strb	r3, [r7, #15]
 433:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1452              		.loc 1 433 0
 1453 0126 3B68     		ldr	r3, [r7]
 1454 0128 0433     		adds	r3, r3, #4
 1455 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1456 012c 63F01F03 		orn	r3, r3, #31
 1457 0130 DBB2     		uxtb	r3, r3
 1458 0132 3B74     		strb	r3, [r7, #16]
 434:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1459              		.loc 1 434 0
 1460 0134 3B68     		ldr	r3, [r7]
 1461 0136 0533     		adds	r3, r3, #5
 1462 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1463 013a 63F01F03 		orn	r3, r3, #31
 1464 013e DBB2     		uxtb	r3, r3
 1465 0140 7B74     		strb	r3, [r7, #17]
 435:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);
 1466              		.loc 1 435 0
 1467 0142 3B68     		ldr	r3, [r7]
 1468 0144 0633     		adds	r3, r3, #6
 1469 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1470 0148 63F01F03 		orn	r3, r3, #31
 1471 014c DBB2     		uxtb	r3, r3
 1472 014e BB74     		strb	r3, [r7, #18]
 436:.\Protocolo.c **** 		if(version[2]==2){
 1473              		.loc 1 436 0
 1474 0150 704B     		ldr	r3, .L126
 1475 0152 9B78     		ldrb	r3, [r3, #2]
 1476 0154 DBB2     		uxtb	r3, r3
 1477 0156 022B     		cmp	r3, #2
 1478 0158 40F0A580 		bne	.L95
 437:.\Protocolo.c **** 			if(decimal==4){
 1479              		.loc 1 437 0
 1480 015c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1481 015e 042B     		cmp	r3, #4
 1482 0160 29D1     		bne	.L96
 438:.\Protocolo.c **** 				buffer[5]=(valor[2]|0xE0);
 1483              		.loc 1 438 0
 1484 0162 3B68     		ldr	r3, [r7]
 1485 0164 0233     		adds	r3, r3, #2
 1486 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1487 0168 63F01F03 		orn	r3, r3, #31
 1488 016c DBB2     		uxtb	r3, r3
 1489 016e 7B73     		strb	r3, [r7, #13]
 439:.\Protocolo.c **** 				buffer[6]=(valor[3]|0xE0);
 1490              		.loc 1 439 0
 1491 0170 3B68     		ldr	r3, [r7]
 1492 0172 0333     		adds	r3, r3, #3
 1493 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1494 0176 63F01F03 		orn	r3, r3, #31
 1495 017a DBB2     		uxtb	r3, r3
 1496 017c BB73     		strb	r3, [r7, #14]
 440:.\Protocolo.c **** 				buffer[7]=(valor[5]|0xE0);
 1497              		.loc 1 440 0
 1498 017e 3B68     		ldr	r3, [r7]
 1499 0180 0533     		adds	r3, r3, #5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 36


 1500 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1501 0184 63F01F03 		orn	r3, r3, #31
 1502 0188 DBB2     		uxtb	r3, r3
 1503 018a FB73     		strb	r3, [r7, #15]
 441:.\Protocolo.c **** 				buffer[8]=(valor[6]|0xE0);
 1504              		.loc 1 441 0
 1505 018c 3B68     		ldr	r3, [r7]
 1506 018e 0633     		adds	r3, r3, #6
 1507 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1508 0192 63F01F03 		orn	r3, r3, #31
 1509 0196 DBB2     		uxtb	r3, r3
 1510 0198 3B74     		strb	r3, [r7, #16]
 442:.\Protocolo.c **** 				buffer[9]=(valor[7]|0xE0);
 1511              		.loc 1 442 0
 1512 019a 3B68     		ldr	r3, [r7]
 1513 019c 0733     		adds	r3, r3, #7
 1514 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1515 01a0 63F01F03 		orn	r3, r3, #31
 1516 01a4 DBB2     		uxtb	r3, r3
 1517 01a6 7B74     		strb	r3, [r7, #17]
 443:.\Protocolo.c **** 				buffer[10]=(valor[8]|0xE0);
 1518              		.loc 1 443 0
 1519 01a8 3B68     		ldr	r3, [r7]
 1520 01aa 0833     		adds	r3, r3, #8
 1521 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1522 01ae 63F01F03 		orn	r3, r3, #31
 1523 01b2 DBB2     		uxtb	r3, r3
 1524 01b4 BB74     		strb	r3, [r7, #18]
 1525              	.L96:
 444:.\Protocolo.c **** 			}
 445:.\Protocolo.c **** 			if(decimal==3){
 1526              		.loc 1 445 0
 1527 01b6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1528 01b8 032B     		cmp	r3, #3
 1529 01ba 29D1     		bne	.L97
 446:.\Protocolo.c **** 				buffer[5]=(valor[1]|0xE0);
 1530              		.loc 1 446 0
 1531 01bc 3B68     		ldr	r3, [r7]
 1532 01be 0133     		adds	r3, r3, #1
 1533 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1534 01c2 63F01F03 		orn	r3, r3, #31
 1535 01c6 DBB2     		uxtb	r3, r3
 1536 01c8 7B73     		strb	r3, [r7, #13]
 447:.\Protocolo.c **** 				buffer[6]=(valor[2]|0xE0);
 1537              		.loc 1 447 0
 1538 01ca 3B68     		ldr	r3, [r7]
 1539 01cc 0233     		adds	r3, r3, #2
 1540 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1541 01d0 63F01F03 		orn	r3, r3, #31
 1542 01d4 DBB2     		uxtb	r3, r3
 1543 01d6 BB73     		strb	r3, [r7, #14]
 448:.\Protocolo.c **** 				buffer[7]=(valor[4]|0xE0);
 1544              		.loc 1 448 0
 1545 01d8 3B68     		ldr	r3, [r7]
 1546 01da 0433     		adds	r3, r3, #4
 1547 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1548 01de 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 37


 1549 01e2 DBB2     		uxtb	r3, r3
 1550 01e4 FB73     		strb	r3, [r7, #15]
 449:.\Protocolo.c **** 				buffer[8]=(valor[5]|0xE0);
 1551              		.loc 1 449 0
 1552 01e6 3B68     		ldr	r3, [r7]
 1553 01e8 0533     		adds	r3, r3, #5
 1554 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1555 01ec 63F01F03 		orn	r3, r3, #31
 1556 01f0 DBB2     		uxtb	r3, r3
 1557 01f2 3B74     		strb	r3, [r7, #16]
 450:.\Protocolo.c **** 				buffer[9]=(valor[6]|0xE0);
 1558              		.loc 1 450 0
 1559 01f4 3B68     		ldr	r3, [r7]
 1560 01f6 0633     		adds	r3, r3, #6
 1561 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1562 01fa 63F01F03 		orn	r3, r3, #31
 1563 01fe DBB2     		uxtb	r3, r3
 1564 0200 7B74     		strb	r3, [r7, #17]
 451:.\Protocolo.c **** 				buffer[10]=(valor[7]|0xE0);
 1565              		.loc 1 451 0
 1566 0202 3B68     		ldr	r3, [r7]
 1567 0204 0733     		adds	r3, r3, #7
 1568 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1569 0208 63F01F03 		orn	r3, r3, #31
 1570 020c DBB2     		uxtb	r3, r3
 1571 020e BB74     		strb	r3, [r7, #18]
 1572              	.L97:
 452:.\Protocolo.c **** 			}
 453:.\Protocolo.c **** 			if(decimal==2){
 1573              		.loc 1 453 0
 1574 0210 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1575 0212 022B     		cmp	r3, #2
 1576 0214 24D1     		bne	.L98
 454:.\Protocolo.c **** 				buffer[5]=0xE0;
 1577              		.loc 1 454 0
 1578 0216 E023     		movs	r3, #224
 1579 0218 7B73     		strb	r3, [r7, #13]
 455:.\Protocolo.c **** 				buffer[6]=(valor[1]|0xE0);
 1580              		.loc 1 455 0
 1581 021a 3B68     		ldr	r3, [r7]
 1582 021c 0133     		adds	r3, r3, #1
 1583 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1584 0220 63F01F03 		orn	r3, r3, #31
 1585 0224 DBB2     		uxtb	r3, r3
 1586 0226 BB73     		strb	r3, [r7, #14]
 456:.\Protocolo.c **** 				buffer[7]=(valor[3]|0xE0);
 1587              		.loc 1 456 0
 1588 0228 3B68     		ldr	r3, [r7]
 1589 022a 0333     		adds	r3, r3, #3
 1590 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1591 022e 63F01F03 		orn	r3, r3, #31
 1592 0232 DBB2     		uxtb	r3, r3
 1593 0234 FB73     		strb	r3, [r7, #15]
 457:.\Protocolo.c **** 				buffer[8]=(valor[4]|0xE0);
 1594              		.loc 1 457 0
 1595 0236 3B68     		ldr	r3, [r7]
 1596 0238 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 38


 1597 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1598 023c 63F01F03 		orn	r3, r3, #31
 1599 0240 DBB2     		uxtb	r3, r3
 1600 0242 3B74     		strb	r3, [r7, #16]
 458:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);	
 1601              		.loc 1 458 0
 1602 0244 3B68     		ldr	r3, [r7]
 1603 0246 0533     		adds	r3, r3, #5
 1604 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1605 024a 63F01F03 		orn	r3, r3, #31
 1606 024e DBB2     		uxtb	r3, r3
 1607 0250 7B74     		strb	r3, [r7, #17]
 459:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1608              		.loc 1 459 0
 1609 0252 3B68     		ldr	r3, [r7]
 1610 0254 0633     		adds	r3, r3, #6
 1611 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1612 0258 63F01F03 		orn	r3, r3, #31
 1613 025c DBB2     		uxtb	r3, r3
 1614 025e BB74     		strb	r3, [r7, #18]
 1615              	.L98:
 460:.\Protocolo.c **** 			}
 461:.\Protocolo.c **** 			if(decimal==0){
 1616              		.loc 1 461 0
 1617 0260 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1618 0262 002B     		cmp	r3, #0
 1619 0264 1FD1     		bne	.L95
 462:.\Protocolo.c **** 				buffer[5]=0xE0;
 1620              		.loc 1 462 0
 1621 0266 E023     		movs	r3, #224
 1622 0268 7B73     		strb	r3, [r7, #13]
 463:.\Protocolo.c **** 				buffer[6]=0xE0;
 1623              		.loc 1 463 0
 1624 026a E023     		movs	r3, #224
 1625 026c BB73     		strb	r3, [r7, #14]
 464:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1626              		.loc 1 464 0
 1627 026e 3B68     		ldr	r3, [r7]
 1628 0270 0133     		adds	r3, r3, #1
 1629 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1630 0274 63F01F03 		orn	r3, r3, #31
 1631 0278 DBB2     		uxtb	r3, r3
 1632 027a FB73     		strb	r3, [r7, #15]
 465:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1633              		.loc 1 465 0
 1634 027c 3B68     		ldr	r3, [r7]
 1635 027e 0233     		adds	r3, r3, #2
 1636 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1637 0282 63F01F03 		orn	r3, r3, #31
 1638 0286 DBB2     		uxtb	r3, r3
 1639 0288 3B74     		strb	r3, [r7, #16]
 466:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1640              		.loc 1 466 0
 1641 028a 3B68     		ldr	r3, [r7]
 1642 028c 0333     		adds	r3, r3, #3
 1643 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1644 0290 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 39


 1645 0294 DBB2     		uxtb	r3, r3
 1646 0296 7B74     		strb	r3, [r7, #17]
 467:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1647              		.loc 1 467 0
 1648 0298 3B68     		ldr	r3, [r7]
 1649 029a 0433     		adds	r3, r3, #4
 1650 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1651 029e 63F01F03 		orn	r3, r3, #31
 1652 02a2 DBB2     		uxtb	r3, r3
 1653 02a4 BB74     		strb	r3, [r7, #18]
 1654              	.L95:
 468:.\Protocolo.c **** 			}			
 469:.\Protocolo.c **** 		}
 470:.\Protocolo.c **** 		buffer[11]=0xFB;
 1655              		.loc 1 470 0
 1656 02a6 FB23     		movs	r3, #251
 1657 02a8 FB74     		strb	r3, [r7, #19]
 471:.\Protocolo.c **** 		buffer[12]=0;
 1658              		.loc 1 471 0
 1659 02aa 0023     		movs	r3, #0
 1660 02ac 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1661              		.loc 1 472 0
 1662 02ae 0023     		movs	r3, #0
 1663 02b0 7B77     		strb	r3, [r7, #29]
 1664 02b2 0FE0     		b	.L99
 1665              	.L100:
 473:.\Protocolo.c **** 			buffer[12]+=(buffer[i]&0x0F);	
 1666              		.loc 1 473 0 discriminator 3
 1667 02b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1668 02b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1669 02b8 07F12001 		add	r1, r7, #32
 1670 02bc 0B44     		add	r3, r3, r1
 1671 02be 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1672 02c2 03F00F03 		and	r3, r3, #15
 1673 02c6 DBB2     		uxtb	r3, r3
 1674 02c8 1344     		add	r3, r3, r2
 1675 02ca DBB2     		uxtb	r3, r3
 1676 02cc 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1677              		.loc 1 472 0 discriminator 3
 1678 02ce 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1679 02d0 0133     		adds	r3, r3, #1
 1680 02d2 7B77     		strb	r3, [r7, #29]
 1681              	.L99:
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1682              		.loc 1 472 0 is_stmt 0 discriminator 1
 1683 02d4 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1684 02d6 0B2B     		cmp	r3, #11
 1685 02d8 ECD9     		bls	.L100
 474:.\Protocolo.c **** 		}
 475:.\Protocolo.c **** 		buffer[12]=(((~buffer[12])+1)&0x0F)|0xE0;
 1686              		.loc 1 475 0 is_stmt 1
 1687 02da 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1688 02dc 5B42     		negs	r3, r3
 1689 02de DBB2     		uxtb	r3, r3
 1690 02e0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 40


 1691 02e2 03F00F03 		and	r3, r3, #15
 1692 02e6 DBB2     		uxtb	r3, r3
 1693 02e8 63F01F03 		orn	r3, r3, #31
 1694 02ec DBB2     		uxtb	r3, r3
 1695 02ee DBB2     		uxtb	r3, r3
 1696 02f0 3B75     		strb	r3, [r7, #20]
 476:.\Protocolo.c **** 		buffer[13]=0xF0;
 1697              		.loc 1 476 0
 1698 02f2 F023     		movs	r3, #240
 1699 02f4 7B75     		strb	r3, [r7, #21]
 477:.\Protocolo.c **** 		size=13;
 1700              		.loc 1 477 0
 1701 02f6 0D23     		movs	r3, #13
 1702 02f8 FB77     		strb	r3, [r7, #31]
 478:.\Protocolo.c **** 		if(version[1]==5){
 1703              		.loc 1 478 0
 1704 02fa 064B     		ldr	r3, .L126
 1705 02fc 5B78     		ldrb	r3, [r3, #1]
 1706 02fe DBB2     		uxtb	r3, r3
 1707 0300 052B     		cmp	r3, #5
 1708 0302 2CD1     		bne	.L101
 479:.\Protocolo.c **** 			buffer[10]=0xFB;
 1709              		.loc 1 479 0
 1710 0304 FB23     		movs	r3, #251
 1711 0306 BB74     		strb	r3, [r7, #18]
 480:.\Protocolo.c **** 			buffer[11]=0;
 1712              		.loc 1 480 0
 1713 0308 0023     		movs	r3, #0
 1714 030a FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1715              		.loc 1 481 0
 1716 030c 0023     		movs	r3, #0
 1717 030e 7B77     		strb	r3, [r7, #29]
 1718 0310 12E0     		b	.L102
 1719              	.L127:
 1720 0312 00BF     		.align	2
 1721              	.L126:
 1722 0314 00000000 		.word	version
 1723              	.L103:
 482:.\Protocolo.c **** 				buffer[11]+=(buffer[i]&0x0F);	
 1724              		.loc 1 482 0 discriminator 3
 1725 0318 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 1726 031a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1727 031c 07F12001 		add	r1, r7, #32
 1728 0320 0B44     		add	r3, r3, r1
 1729 0322 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1730 0326 03F00F03 		and	r3, r3, #15
 1731 032a DBB2     		uxtb	r3, r3
 1732 032c 1344     		add	r3, r3, r2
 1733 032e DBB2     		uxtb	r3, r3
 1734 0330 FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1735              		.loc 1 481 0 discriminator 3
 1736 0332 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1737 0334 0133     		adds	r3, r3, #1
 1738 0336 7B77     		strb	r3, [r7, #29]
 1739              	.L102:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 41


 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1740              		.loc 1 481 0 is_stmt 0 discriminator 1
 1741 0338 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1742 033a 0A2B     		cmp	r3, #10
 1743 033c ECD9     		bls	.L103
 483:.\Protocolo.c **** 			}
 484:.\Protocolo.c **** 			buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 1744              		.loc 1 484 0 is_stmt 1
 1745 033e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1746 0340 5B42     		negs	r3, r3
 1747 0342 DBB2     		uxtb	r3, r3
 1748 0344 DBB2     		uxtb	r3, r3
 1749 0346 03F00F03 		and	r3, r3, #15
 1750 034a DBB2     		uxtb	r3, r3
 1751 034c 63F01F03 		orn	r3, r3, #31
 1752 0350 DBB2     		uxtb	r3, r3
 1753 0352 DBB2     		uxtb	r3, r3
 1754 0354 FB74     		strb	r3, [r7, #19]
 485:.\Protocolo.c **** 			buffer[12]=0xF0;
 1755              		.loc 1 485 0
 1756 0356 F023     		movs	r3, #240
 1757 0358 3B75     		strb	r3, [r7, #20]
 486:.\Protocolo.c **** 			size=12;		
 1758              		.loc 1 486 0
 1759 035a 0C23     		movs	r3, #12
 1760 035c FB77     		strb	r3, [r7, #31]
 1761              	.L101:
 487:.\Protocolo.c **** 		}
 488:.\Protocolo.c **** 		if(preset==1){
 1762              		.loc 1 488 0
 1763 035e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1764 0360 012B     		cmp	r3, #1
 1765 0362 40F0C080 		bne	.L94
 489:.\Protocolo.c **** 			buffer[4]=0xF6;
 1766              		.loc 1 489 0
 1767 0366 F623     		movs	r3, #246
 1768 0368 3B73     		strb	r3, [r7, #12]
 490:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 1769              		.loc 1 490 0
 1770 036a BB79     		ldrb	r3, [r7, #6]
 1771 036c 013B     		subs	r3, r3, #1
 1772 036e DBB2     		uxtb	r3, r3
 1773 0370 DBB2     		uxtb	r3, r3
 1774 0372 63F01F03 		orn	r3, r3, #31
 1775 0376 DBB2     		uxtb	r3, r3
 1776 0378 DBB2     		uxtb	r3, r3
 1777 037a 7B73     		strb	r3, [r7, #13]
 491:.\Protocolo.c **** 			buffer[6]=0xF8;
 1778              		.loc 1 491 0
 1779 037c F823     		movs	r3, #248
 1780 037e BB73     		strb	r3, [r7, #14]
 492:.\Protocolo.c **** 			if(decimal==4){
 1781              		.loc 1 492 0
 1782 0380 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1783 0382 042B     		cmp	r3, #4
 1784 0384 22D1     		bne	.L104
 493:.\Protocolo.c **** 				buffer[7]=(valor[2]|0xE0);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 42


 1785              		.loc 1 493 0
 1786 0386 3B68     		ldr	r3, [r7]
 1787 0388 0233     		adds	r3, r3, #2
 1788 038a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1789 038c 63F01F03 		orn	r3, r3, #31
 1790 0390 DBB2     		uxtb	r3, r3
 1791 0392 FB73     		strb	r3, [r7, #15]
 494:.\Protocolo.c **** 				buffer[8]=(valor[3]|0xE0);
 1792              		.loc 1 494 0
 1793 0394 3B68     		ldr	r3, [r7]
 1794 0396 0333     		adds	r3, r3, #3
 1795 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1796 039a 63F01F03 		orn	r3, r3, #31
 1797 039e DBB2     		uxtb	r3, r3
 1798 03a0 3B74     		strb	r3, [r7, #16]
 495:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);
 1799              		.loc 1 495 0
 1800 03a2 3B68     		ldr	r3, [r7]
 1801 03a4 0533     		adds	r3, r3, #5
 1802 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1803 03a8 63F01F03 		orn	r3, r3, #31
 1804 03ac DBB2     		uxtb	r3, r3
 1805 03ae 7B74     		strb	r3, [r7, #17]
 496:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1806              		.loc 1 496 0
 1807 03b0 3B68     		ldr	r3, [r7]
 1808 03b2 0633     		adds	r3, r3, #6
 1809 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1810 03b6 63F01F03 		orn	r3, r3, #31
 1811 03ba DBB2     		uxtb	r3, r3
 1812 03bc BB74     		strb	r3, [r7, #18]
 497:.\Protocolo.c **** 				buffer[11]=(valor[7]|0xE0);
 1813              		.loc 1 497 0
 1814 03be 3B68     		ldr	r3, [r7]
 1815 03c0 0733     		adds	r3, r3, #7
 1816 03c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1817 03c4 63F01F03 		orn	r3, r3, #31
 1818 03c8 DBB2     		uxtb	r3, r3
 1819 03ca FB74     		strb	r3, [r7, #19]
 1820              	.L104:
 498:.\Protocolo.c **** 			}
 499:.\Protocolo.c **** 			if(decimal==3){
 1821              		.loc 1 499 0
 1822 03cc 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1823 03ce 032B     		cmp	r3, #3
 1824 03d0 22D1     		bne	.L105
 500:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1825              		.loc 1 500 0
 1826 03d2 3B68     		ldr	r3, [r7]
 1827 03d4 0133     		adds	r3, r3, #1
 1828 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1829 03d8 63F01F03 		orn	r3, r3, #31
 1830 03dc DBB2     		uxtb	r3, r3
 1831 03de FB73     		strb	r3, [r7, #15]
 501:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1832              		.loc 1 501 0
 1833 03e0 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 43


 1834 03e2 0233     		adds	r3, r3, #2
 1835 03e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1836 03e6 63F01F03 		orn	r3, r3, #31
 1837 03ea DBB2     		uxtb	r3, r3
 1838 03ec 3B74     		strb	r3, [r7, #16]
 502:.\Protocolo.c **** 				buffer[9]=(valor[4]|0xE0);
 1839              		.loc 1 502 0
 1840 03ee 3B68     		ldr	r3, [r7]
 1841 03f0 0433     		adds	r3, r3, #4
 1842 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1843 03f4 63F01F03 		orn	r3, r3, #31
 1844 03f8 DBB2     		uxtb	r3, r3
 1845 03fa 7B74     		strb	r3, [r7, #17]
 503:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 1846              		.loc 1 503 0
 1847 03fc 3B68     		ldr	r3, [r7]
 1848 03fe 0533     		adds	r3, r3, #5
 1849 0400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1850 0402 63F01F03 		orn	r3, r3, #31
 1851 0406 DBB2     		uxtb	r3, r3
 1852 0408 BB74     		strb	r3, [r7, #18]
 504:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);		
 1853              		.loc 1 504 0
 1854 040a 3B68     		ldr	r3, [r7]
 1855 040c 0633     		adds	r3, r3, #6
 1856 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1857 0410 63F01F03 		orn	r3, r3, #31
 1858 0414 DBB2     		uxtb	r3, r3
 1859 0416 FB74     		strb	r3, [r7, #19]
 1860              	.L105:
 505:.\Protocolo.c **** 			}
 506:.\Protocolo.c **** 			if(decimal==2){
 1861              		.loc 1 506 0
 1862 0418 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1863 041a 022B     		cmp	r3, #2
 1864 041c 1DD1     		bne	.L106
 507:.\Protocolo.c **** 				buffer[7]=0xE0;
 1865              		.loc 1 507 0
 1866 041e E023     		movs	r3, #224
 1867 0420 FB73     		strb	r3, [r7, #15]
 508:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 1868              		.loc 1 508 0
 1869 0422 3B68     		ldr	r3, [r7]
 1870 0424 0133     		adds	r3, r3, #1
 1871 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1872 0428 63F01F03 		orn	r3, r3, #31
 1873 042c DBB2     		uxtb	r3, r3
 1874 042e 3B74     		strb	r3, [r7, #16]
 509:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1875              		.loc 1 509 0
 1876 0430 3B68     		ldr	r3, [r7]
 1877 0432 0333     		adds	r3, r3, #3
 1878 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1879 0436 63F01F03 		orn	r3, r3, #31
 1880 043a DBB2     		uxtb	r3, r3
 1881 043c 7B74     		strb	r3, [r7, #17]
 510:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 44


 1882              		.loc 1 510 0
 1883 043e 3B68     		ldr	r3, [r7]
 1884 0440 0433     		adds	r3, r3, #4
 1885 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1886 0444 63F01F03 		orn	r3, r3, #31
 1887 0448 DBB2     		uxtb	r3, r3
 1888 044a BB74     		strb	r3, [r7, #18]
 511:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);		
 1889              		.loc 1 511 0
 1890 044c 3B68     		ldr	r3, [r7]
 1891 044e 0533     		adds	r3, r3, #5
 1892 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1893 0452 63F01F03 		orn	r3, r3, #31
 1894 0456 DBB2     		uxtb	r3, r3
 1895 0458 FB74     		strb	r3, [r7, #19]
 1896              	.L106:
 512:.\Protocolo.c **** 			}
 513:.\Protocolo.c **** 			if(decimal==0){
 1897              		.loc 1 513 0
 1898 045a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1899 045c 002B     		cmp	r3, #0
 1900 045e 18D1     		bne	.L107
 514:.\Protocolo.c **** 				buffer[7]=0xE0;
 1901              		.loc 1 514 0
 1902 0460 E023     		movs	r3, #224
 1903 0462 FB73     		strb	r3, [r7, #15]
 515:.\Protocolo.c **** 				buffer[8]=0xE0;
 1904              		.loc 1 515 0
 1905 0464 E023     		movs	r3, #224
 1906 0466 3B74     		strb	r3, [r7, #16]
 516:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 1907              		.loc 1 516 0
 1908 0468 3B68     		ldr	r3, [r7]
 1909 046a 0133     		adds	r3, r3, #1
 1910 046c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1911 046e 63F01F03 		orn	r3, r3, #31
 1912 0472 DBB2     		uxtb	r3, r3
 1913 0474 7B74     		strb	r3, [r7, #17]
 517:.\Protocolo.c **** 				buffer[10]=(valor[2]|0xE0);
 1914              		.loc 1 517 0
 1915 0476 3B68     		ldr	r3, [r7]
 1916 0478 0233     		adds	r3, r3, #2
 1917 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1918 047c 63F01F03 		orn	r3, r3, #31
 1919 0480 DBB2     		uxtb	r3, r3
 1920 0482 BB74     		strb	r3, [r7, #18]
 518:.\Protocolo.c **** 				buffer[11]=(valor[3]|0xE0);		
 1921              		.loc 1 518 0
 1922 0484 3B68     		ldr	r3, [r7]
 1923 0486 0333     		adds	r3, r3, #3
 1924 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1925 048a 63F01F03 		orn	r3, r3, #31
 1926 048e DBB2     		uxtb	r3, r3
 1927 0490 FB74     		strb	r3, [r7, #19]
 1928              	.L107:
 519:.\Protocolo.c **** 			}			
 520:.\Protocolo.c **** 			buffer[12]=0xFB;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 45


 1929              		.loc 1 520 0
 1930 0492 FB23     		movs	r3, #251
 1931 0494 3B75     		strb	r3, [r7, #20]
 521:.\Protocolo.c **** 			buffer[13]=0;
 1932              		.loc 1 521 0
 1933 0496 0023     		movs	r3, #0
 1934 0498 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1935              		.loc 1 522 0
 1936 049a 0023     		movs	r3, #0
 1937 049c 7B77     		strb	r3, [r7, #29]
 1938 049e 0FE0     		b	.L108
 1939              	.L109:
 523:.\Protocolo.c **** 				buffer[13]+=(buffer[i]&0x0F);	
 1940              		.loc 1 523 0 discriminator 3
 1941 04a0 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1942 04a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1943 04a4 07F12001 		add	r1, r7, #32
 1944 04a8 0B44     		add	r3, r3, r1
 1945 04aa 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1946 04ae 03F00F03 		and	r3, r3, #15
 1947 04b2 DBB2     		uxtb	r3, r3
 1948 04b4 1344     		add	r3, r3, r2
 1949 04b6 DBB2     		uxtb	r3, r3
 1950 04b8 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1951              		.loc 1 522 0 discriminator 3
 1952 04ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1953 04bc 0133     		adds	r3, r3, #1
 1954 04be 7B77     		strb	r3, [r7, #29]
 1955              	.L108:
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1956              		.loc 1 522 0 is_stmt 0 discriminator 1
 1957 04c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1958 04c2 0C2B     		cmp	r3, #12
 1959 04c4 ECD9     		bls	.L109
 524:.\Protocolo.c **** 			}
 525:.\Protocolo.c **** 			buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;			
 1960              		.loc 1 525 0 is_stmt 1
 1961 04c6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1962 04c8 5B42     		negs	r3, r3
 1963 04ca DBB2     		uxtb	r3, r3
 1964 04cc DBB2     		uxtb	r3, r3
 1965 04ce 03F00F03 		and	r3, r3, #15
 1966 04d2 DBB2     		uxtb	r3, r3
 1967 04d4 63F01F03 		orn	r3, r3, #31
 1968 04d8 DBB2     		uxtb	r3, r3
 1969 04da DBB2     		uxtb	r3, r3
 1970 04dc 7B75     		strb	r3, [r7, #21]
 526:.\Protocolo.c **** 			buffer[14]=0xF0;
 1971              		.loc 1 526 0
 1972 04de F023     		movs	r3, #240
 1973 04e0 BB75     		strb	r3, [r7, #22]
 527:.\Protocolo.c **** 			size=14;
 1974              		.loc 1 527 0
 1975 04e2 0E23     		movs	r3, #14
 1976 04e4 FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 46


 1977              	.L94:
 528:.\Protocolo.c **** 		}	
 529:.\Protocolo.c **** 	}	
 530:.\Protocolo.c **** 	if(version[1]==7){
 1978              		.loc 1 530 0
 1979 04e6 A24B     		ldr	r3, .L128
 1980 04e8 5B78     		ldrb	r3, [r3, #1]
 1981 04ea DBB2     		uxtb	r3, r3
 1982 04ec 072B     		cmp	r3, #7
 1983 04ee 40F06481 		bne	.L110
 531:.\Protocolo.c **** 		buffer[0]=0xFF;
 1984              		.loc 1 531 0
 1985 04f2 FF23     		movs	r3, #255
 1986 04f4 3B72     		strb	r3, [r7, #8]
 532:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1987              		.loc 1 532 0
 1988 04f6 BB7F     		ldrb	r3, [r7, #30]
 1989 04f8 63F01F03 		orn	r3, r3, #31
 1990 04fc DBB2     		uxtb	r3, r3
 1991 04fe 7B72     		strb	r3, [r7, #9]
 533:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1992              		.loc 1 533 0
 1993 0500 7B79     		ldrb	r3, [r7, #5]
 1994 0502 63F00F03 		orn	r3, r3, #15
 1995 0506 DBB2     		uxtb	r3, r3
 1996 0508 BB72     		strb	r3, [r7, #10]
 534:.\Protocolo.c **** 		buffer[3]=0xF4;
 1997              		.loc 1 534 0
 1998 050a F423     		movs	r3, #244
 1999 050c FB72     		strb	r3, [r7, #11]
 535:.\Protocolo.c **** 		buffer[4]=0xF8;	
 2000              		.loc 1 535 0
 2001 050e F823     		movs	r3, #248
 2002 0510 3B73     		strb	r3, [r7, #12]
 536:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 2003              		.loc 1 536 0
 2004 0512 3B68     		ldr	r3, [r7]
 2005 0514 0133     		adds	r3, r3, #1
 2006 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2007 0518 63F01F03 		orn	r3, r3, #31
 2008 051c DBB2     		uxtb	r3, r3
 2009 051e 7B73     		strb	r3, [r7, #13]
 537:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 2010              		.loc 1 537 0
 2011 0520 3B68     		ldr	r3, [r7]
 2012 0522 0233     		adds	r3, r3, #2
 2013 0524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2014 0526 63F01F03 		orn	r3, r3, #31
 2015 052a DBB2     		uxtb	r3, r3
 2016 052c BB73     		strb	r3, [r7, #14]
 538:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 2017              		.loc 1 538 0
 2018 052e 3B68     		ldr	r3, [r7]
 2019 0530 0333     		adds	r3, r3, #3
 2020 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2021 0534 63F01F03 		orn	r3, r3, #31
 2022 0538 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 47


 2023 053a FB73     		strb	r3, [r7, #15]
 539:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 2024              		.loc 1 539 0
 2025 053c 3B68     		ldr	r3, [r7]
 2026 053e 0433     		adds	r3, r3, #4
 2027 0540 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2028 0542 63F01F03 		orn	r3, r3, #31
 2029 0546 DBB2     		uxtb	r3, r3
 2030 0548 3B74     		strb	r3, [r7, #16]
 540:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 2031              		.loc 1 540 0
 2032 054a 3B68     		ldr	r3, [r7]
 2033 054c 0533     		adds	r3, r3, #5
 2034 054e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2035 0550 63F01F03 		orn	r3, r3, #31
 2036 0554 DBB2     		uxtb	r3, r3
 2037 0556 7B74     		strb	r3, [r7, #17]
 541:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);	
 2038              		.loc 1 541 0
 2039 0558 3B68     		ldr	r3, [r7]
 2040 055a 0633     		adds	r3, r3, #6
 2041 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2042 055e 63F01F03 		orn	r3, r3, #31
 2043 0562 DBB2     		uxtb	r3, r3
 2044 0564 BB74     		strb	r3, [r7, #18]
 542:.\Protocolo.c **** 		buffer[11]=(valor[7]|0xE0);
 2045              		.loc 1 542 0
 2046 0566 3B68     		ldr	r3, [r7]
 2047 0568 0733     		adds	r3, r3, #7
 2048 056a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2049 056c 63F01F03 		orn	r3, r3, #31
 2050 0570 DBB2     		uxtb	r3, r3
 2051 0572 FB74     		strb	r3, [r7, #19]
 543:.\Protocolo.c **** 		buffer[12]=0xE0;
 2052              		.loc 1 543 0
 2053 0574 E023     		movs	r3, #224
 2054 0576 3B75     		strb	r3, [r7, #20]
 544:.\Protocolo.c **** 		buffer[13]=0xFB;
 2055              		.loc 1 544 0
 2056 0578 FB23     		movs	r3, #251
 2057 057a 7B75     		strb	r3, [r7, #21]
 545:.\Protocolo.c **** 		buffer[14]=0;
 2058              		.loc 1 545 0
 2059 057c 0023     		movs	r3, #0
 2060 057e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2061              		.loc 1 546 0
 2062 0580 0023     		movs	r3, #0
 2063 0582 7B77     		strb	r3, [r7, #29]
 2064 0584 0FE0     		b	.L111
 2065              	.L112:
 547:.\Protocolo.c **** 			buffer[14]+=(buffer[i]&0x0F);	
 2066              		.loc 1 547 0 discriminator 3
 2067 0586 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2068 0588 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2069 058a 07F12001 		add	r1, r7, #32
 2070 058e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 48


 2071 0590 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2072 0594 03F00F03 		and	r3, r3, #15
 2073 0598 DBB2     		uxtb	r3, r3
 2074 059a 1344     		add	r3, r3, r2
 2075 059c DBB2     		uxtb	r3, r3
 2076 059e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2077              		.loc 1 546 0 discriminator 3
 2078 05a0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2079 05a2 0133     		adds	r3, r3, #1
 2080 05a4 7B77     		strb	r3, [r7, #29]
 2081              	.L111:
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2082              		.loc 1 546 0 is_stmt 0 discriminator 1
 2083 05a6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2084 05a8 0D2B     		cmp	r3, #13
 2085 05aa ECD9     		bls	.L112
 548:.\Protocolo.c **** 		}
 549:.\Protocolo.c **** 		buffer[14]=(((~buffer[14])+1)&0x0F)|0xE0;
 2086              		.loc 1 549 0 is_stmt 1
 2087 05ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2088 05ae 5B42     		negs	r3, r3
 2089 05b0 DBB2     		uxtb	r3, r3
 2090 05b2 DBB2     		uxtb	r3, r3
 2091 05b4 03F00F03 		and	r3, r3, #15
 2092 05b8 DBB2     		uxtb	r3, r3
 2093 05ba 63F01F03 		orn	r3, r3, #31
 2094 05be DBB2     		uxtb	r3, r3
 2095 05c0 DBB2     		uxtb	r3, r3
 2096 05c2 BB75     		strb	r3, [r7, #22]
 550:.\Protocolo.c **** 		buffer[15]=0xF0;
 2097              		.loc 1 550 0
 2098 05c4 F023     		movs	r3, #240
 2099 05c6 FB75     		strb	r3, [r7, #23]
 551:.\Protocolo.c **** 		size=15;
 2100              		.loc 1 551 0
 2101 05c8 0F23     		movs	r3, #15
 2102 05ca FB77     		strb	r3, [r7, #31]
 552:.\Protocolo.c **** 		if(preset==1){
 2103              		.loc 1 552 0
 2104 05cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2105 05ce 012B     		cmp	r3, #1
 2106 05d0 40F0F380 		bne	.L110
 553:.\Protocolo.c **** 			buffer[4]=0xF6;
 2107              		.loc 1 553 0
 2108 05d4 F623     		movs	r3, #246
 2109 05d6 3B73     		strb	r3, [r7, #12]
 554:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2110              		.loc 1 554 0
 2111 05d8 BB79     		ldrb	r3, [r7, #6]
 2112 05da 013B     		subs	r3, r3, #1
 2113 05dc DBB2     		uxtb	r3, r3
 2114 05de DBB2     		uxtb	r3, r3
 2115 05e0 63F01F03 		orn	r3, r3, #31
 2116 05e4 DBB2     		uxtb	r3, r3
 2117 05e6 DBB2     		uxtb	r3, r3
 2118 05e8 7B73     		strb	r3, [r7, #13]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 49


 555:.\Protocolo.c **** 			buffer[6]=0xF8;
 2119              		.loc 1 555 0
 2120 05ea F823     		movs	r3, #248
 2121 05ec BB73     		strb	r3, [r7, #14]
 556:.\Protocolo.c **** 			if(decimal==4){
 2122              		.loc 1 556 0
 2123 05ee 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2124 05f0 042B     		cmp	r3, #4
 2125 05f2 2DD1     		bne	.L113
 557:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2126              		.loc 1 557 0
 2127 05f4 3B68     		ldr	r3, [r7]
 2128 05f6 0133     		adds	r3, r3, #1
 2129 05f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2130 05fa 63F01F03 		orn	r3, r3, #31
 2131 05fe DBB2     		uxtb	r3, r3
 2132 0600 FB73     		strb	r3, [r7, #15]
 558:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2133              		.loc 1 558 0
 2134 0602 3B68     		ldr	r3, [r7]
 2135 0604 0233     		adds	r3, r3, #2
 2136 0606 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2137 0608 63F01F03 		orn	r3, r3, #31
 2138 060c DBB2     		uxtb	r3, r3
 2139 060e 3B74     		strb	r3, [r7, #16]
 559:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2140              		.loc 1 559 0
 2141 0610 3B68     		ldr	r3, [r7]
 2142 0612 0333     		adds	r3, r3, #3
 2143 0614 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2144 0616 63F01F03 		orn	r3, r3, #31
 2145 061a DBB2     		uxtb	r3, r3
 2146 061c 7B74     		strb	r3, [r7, #17]
 560:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2147              		.loc 1 560 0
 2148 061e 3B68     		ldr	r3, [r7]
 2149 0620 0533     		adds	r3, r3, #5
 2150 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2151 0624 63F01F03 		orn	r3, r3, #31
 2152 0628 DBB2     		uxtb	r3, r3
 2153 062a BB74     		strb	r3, [r7, #18]
 561:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);
 2154              		.loc 1 561 0
 2155 062c 3B68     		ldr	r3, [r7]
 2156 062e 0633     		adds	r3, r3, #6
 2157 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2158 0632 63F01F03 		orn	r3, r3, #31
 2159 0636 DBB2     		uxtb	r3, r3
 2160 0638 FB74     		strb	r3, [r7, #19]
 562:.\Protocolo.c **** 				buffer[12]=(valor[7]|0xE0);	
 2161              		.loc 1 562 0
 2162 063a 3B68     		ldr	r3, [r7]
 2163 063c 0733     		adds	r3, r3, #7
 2164 063e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2165 0640 63F01F03 		orn	r3, r3, #31
 2166 0644 DBB2     		uxtb	r3, r3
 2167 0646 3B75     		strb	r3, [r7, #20]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 50


 563:.\Protocolo.c **** 				buffer[13]=0xE0;	
 2168              		.loc 1 563 0
 2169 0648 E023     		movs	r3, #224
 2170 064a 7B75     		strb	r3, [r7, #21]
 564:.\Protocolo.c **** 				buffer[14]=0xE0;
 2171              		.loc 1 564 0
 2172 064c E023     		movs	r3, #224
 2173 064e BB75     		strb	r3, [r7, #22]
 2174              	.L113:
 565:.\Protocolo.c **** 			}
 566:.\Protocolo.c **** 			if(decimal==3){
 2175              		.loc 1 566 0
 2176 0650 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2177 0652 032B     		cmp	r3, #3
 2178 0654 2DD1     		bne	.L114
 567:.\Protocolo.c **** 				buffer[7]=0xE0;
 2179              		.loc 1 567 0
 2180 0656 E023     		movs	r3, #224
 2181 0658 FB73     		strb	r3, [r7, #15]
 568:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2182              		.loc 1 568 0
 2183 065a 3B68     		ldr	r3, [r7]
 2184 065c 0133     		adds	r3, r3, #1
 2185 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2186 0660 63F01F03 		orn	r3, r3, #31
 2187 0664 DBB2     		uxtb	r3, r3
 2188 0666 3B74     		strb	r3, [r7, #16]
 569:.\Protocolo.c **** 				buffer[9]=(valor[2]|0xE0);
 2189              		.loc 1 569 0
 2190 0668 3B68     		ldr	r3, [r7]
 2191 066a 0233     		adds	r3, r3, #2
 2192 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2193 066e 63F01F03 		orn	r3, r3, #31
 2194 0672 DBB2     		uxtb	r3, r3
 2195 0674 7B74     		strb	r3, [r7, #17]
 570:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2196              		.loc 1 570 0
 2197 0676 3B68     		ldr	r3, [r7]
 2198 0678 0433     		adds	r3, r3, #4
 2199 067a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2200 067c 63F01F03 		orn	r3, r3, #31
 2201 0680 DBB2     		uxtb	r3, r3
 2202 0682 BB74     		strb	r3, [r7, #18]
 571:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);
 2203              		.loc 1 571 0
 2204 0684 3B68     		ldr	r3, [r7]
 2205 0686 0533     		adds	r3, r3, #5
 2206 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2207 068a 63F01F03 		orn	r3, r3, #31
 2208 068e DBB2     		uxtb	r3, r3
 2209 0690 FB74     		strb	r3, [r7, #19]
 572:.\Protocolo.c **** 				buffer[12]=(valor[6]|0xE0);
 2210              		.loc 1 572 0
 2211 0692 3B68     		ldr	r3, [r7]
 2212 0694 0633     		adds	r3, r3, #6
 2213 0696 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2214 0698 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 51


 2215 069c DBB2     		uxtb	r3, r3
 2216 069e 3B75     		strb	r3, [r7, #20]
 573:.\Protocolo.c **** 				buffer[13]=(valor[7]|0xE0);	
 2217              		.loc 1 573 0
 2218 06a0 3B68     		ldr	r3, [r7]
 2219 06a2 0733     		adds	r3, r3, #7
 2220 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2221 06a6 63F01F03 		orn	r3, r3, #31
 2222 06aa DBB2     		uxtb	r3, r3
 2223 06ac 7B75     		strb	r3, [r7, #21]
 574:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2224              		.loc 1 574 0
 2225 06ae E023     		movs	r3, #224
 2226 06b0 BB75     		strb	r3, [r7, #22]
 2227              	.L114:
 575:.\Protocolo.c **** 			}
 576:.\Protocolo.c **** 			if(decimal==2){
 2228              		.loc 1 576 0
 2229 06b2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2230 06b4 022B     		cmp	r3, #2
 2231 06b6 2DD1     		bne	.L115
 577:.\Protocolo.c **** 				buffer[7]=0xE0;
 2232              		.loc 1 577 0
 2233 06b8 E023     		movs	r3, #224
 2234 06ba FB73     		strb	r3, [r7, #15]
 578:.\Protocolo.c **** 				buffer[8]=0xE0;
 2235              		.loc 1 578 0
 2236 06bc E023     		movs	r3, #224
 2237 06be 3B74     		strb	r3, [r7, #16]
 579:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2238              		.loc 1 579 0
 2239 06c0 3B68     		ldr	r3, [r7]
 2240 06c2 0133     		adds	r3, r3, #1
 2241 06c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2242 06c6 63F01F03 		orn	r3, r3, #31
 2243 06ca DBB2     		uxtb	r3, r3
 2244 06cc 7B74     		strb	r3, [r7, #17]
 580:.\Protocolo.c **** 				buffer[10]=(valor[3]|0xE0);
 2245              		.loc 1 580 0
 2246 06ce 3B68     		ldr	r3, [r7]
 2247 06d0 0333     		adds	r3, r3, #3
 2248 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2249 06d4 63F01F03 		orn	r3, r3, #31
 2250 06d8 DBB2     		uxtb	r3, r3
 2251 06da BB74     		strb	r3, [r7, #18]
 581:.\Protocolo.c **** 				buffer[11]=(valor[4]|0xE0);
 2252              		.loc 1 581 0
 2253 06dc 3B68     		ldr	r3, [r7]
 2254 06de 0433     		adds	r3, r3, #4
 2255 06e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2256 06e2 63F01F03 		orn	r3, r3, #31
 2257 06e6 DBB2     		uxtb	r3, r3
 2258 06e8 FB74     		strb	r3, [r7, #19]
 582:.\Protocolo.c **** 				buffer[12]=(valor[5]|0xE0);
 2259              		.loc 1 582 0
 2260 06ea 3B68     		ldr	r3, [r7]
 2261 06ec 0533     		adds	r3, r3, #5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 52


 2262 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2263 06f0 63F01F03 		orn	r3, r3, #31
 2264 06f4 DBB2     		uxtb	r3, r3
 2265 06f6 3B75     		strb	r3, [r7, #20]
 583:.\Protocolo.c **** 				buffer[13]=(valor[6]|0xE0);	
 2266              		.loc 1 583 0
 2267 06f8 3B68     		ldr	r3, [r7]
 2268 06fa 0633     		adds	r3, r3, #6
 2269 06fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2270 06fe 63F01F03 		orn	r3, r3, #31
 2271 0702 DBB2     		uxtb	r3, r3
 2272 0704 7B75     		strb	r3, [r7, #21]
 584:.\Protocolo.c **** 				buffer[14]=(valor[7]|0xE0);	
 2273              		.loc 1 584 0
 2274 0706 3B68     		ldr	r3, [r7]
 2275 0708 0733     		adds	r3, r3, #7
 2276 070a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2277 070c 63F01F03 		orn	r3, r3, #31
 2278 0710 DBB2     		uxtb	r3, r3
 2279 0712 BB75     		strb	r3, [r7, #22]
 2280              	.L115:
 585:.\Protocolo.c **** 			}
 586:.\Protocolo.c **** 			if(decimal==0){
 2281              		.loc 1 586 0
 2282 0714 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2283 0716 002B     		cmp	r3, #0
 2284 0718 23D1     		bne	.L116
 587:.\Protocolo.c **** 				buffer[7]=0xE0;
 2285              		.loc 1 587 0
 2286 071a E023     		movs	r3, #224
 2287 071c FB73     		strb	r3, [r7, #15]
 588:.\Protocolo.c **** 				buffer[8]=0xE0;
 2288              		.loc 1 588 0
 2289 071e E023     		movs	r3, #224
 2290 0720 3B74     		strb	r3, [r7, #16]
 589:.\Protocolo.c **** 				buffer[9]=0xE0;
 2291              		.loc 1 589 0
 2292 0722 E023     		movs	r3, #224
 2293 0724 7B74     		strb	r3, [r7, #17]
 590:.\Protocolo.c **** 				buffer[10]=(valor[1]|0xE0);
 2294              		.loc 1 590 0
 2295 0726 3B68     		ldr	r3, [r7]
 2296 0728 0133     		adds	r3, r3, #1
 2297 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2298 072c 63F01F03 		orn	r3, r3, #31
 2299 0730 DBB2     		uxtb	r3, r3
 2300 0732 BB74     		strb	r3, [r7, #18]
 591:.\Protocolo.c **** 				buffer[11]=(valor[2]|0xE0);
 2301              		.loc 1 591 0
 2302 0734 3B68     		ldr	r3, [r7]
 2303 0736 0233     		adds	r3, r3, #2
 2304 0738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2305 073a 63F01F03 		orn	r3, r3, #31
 2306 073e DBB2     		uxtb	r3, r3
 2307 0740 FB74     		strb	r3, [r7, #19]
 592:.\Protocolo.c **** 				buffer[12]=(valor[3]|0xE0);
 2308              		.loc 1 592 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 53


 2309 0742 3B68     		ldr	r3, [r7]
 2310 0744 0333     		adds	r3, r3, #3
 2311 0746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2312 0748 63F01F03 		orn	r3, r3, #31
 2313 074c DBB2     		uxtb	r3, r3
 2314 074e 3B75     		strb	r3, [r7, #20]
 593:.\Protocolo.c **** 				buffer[13]=(valor[4]|0xE0);	
 2315              		.loc 1 593 0
 2316 0750 3B68     		ldr	r3, [r7]
 2317 0752 0433     		adds	r3, r3, #4
 2318 0754 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2319 0756 63F01F03 		orn	r3, r3, #31
 2320 075a DBB2     		uxtb	r3, r3
 2321 075c 7B75     		strb	r3, [r7, #21]
 594:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2322              		.loc 1 594 0
 2323 075e E023     		movs	r3, #224
 2324 0760 BB75     		strb	r3, [r7, #22]
 2325              	.L116:
 595:.\Protocolo.c **** 			}			
 596:.\Protocolo.c **** 			buffer[15]=0xFB;
 2326              		.loc 1 596 0
 2327 0762 FB23     		movs	r3, #251
 2328 0764 FB75     		strb	r3, [r7, #23]
 597:.\Protocolo.c **** 			buffer[16]=0;
 2329              		.loc 1 597 0
 2330 0766 0023     		movs	r3, #0
 2331 0768 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2332              		.loc 1 598 0
 2333 076a 0023     		movs	r3, #0
 2334 076c 7B77     		strb	r3, [r7, #29]
 2335 076e 11E0     		b	.L117
 2336              	.L129:
 2337              		.align	2
 2338              	.L128:
 2339 0770 00000000 		.word	version
 2340              	.L118:
 599:.\Protocolo.c **** 				buffer[16]+=(buffer[i]&0x0F);	
 2341              		.loc 1 599 0 discriminator 3
 2342 0774 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 2343 0776 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2344 0778 07F12001 		add	r1, r7, #32
 2345 077c 0B44     		add	r3, r3, r1
 2346 077e 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2347 0782 03F00F03 		and	r3, r3, #15
 2348 0786 DBB2     		uxtb	r3, r3
 2349 0788 1344     		add	r3, r3, r2
 2350 078a DBB2     		uxtb	r3, r3
 2351 078c 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2352              		.loc 1 598 0 discriminator 3
 2353 078e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2354 0790 0133     		adds	r3, r3, #1
 2355 0792 7B77     		strb	r3, [r7, #29]
 2356              	.L117:
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 54


 2357              		.loc 1 598 0 is_stmt 0 discriminator 1
 2358 0794 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2359 0796 0F2B     		cmp	r3, #15
 2360 0798 ECD9     		bls	.L118
 600:.\Protocolo.c **** 			}
 601:.\Protocolo.c **** 			buffer[16]=(((~buffer[16])+1)&0x0F)|0xE0;			
 2361              		.loc 1 601 0 is_stmt 1
 2362 079a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 2363 079c 5B42     		negs	r3, r3
 2364 079e DBB2     		uxtb	r3, r3
 2365 07a0 DBB2     		uxtb	r3, r3
 2366 07a2 03F00F03 		and	r3, r3, #15
 2367 07a6 DBB2     		uxtb	r3, r3
 2368 07a8 63F01F03 		orn	r3, r3, #31
 2369 07ac DBB2     		uxtb	r3, r3
 2370 07ae DBB2     		uxtb	r3, r3
 2371 07b0 3B76     		strb	r3, [r7, #24]
 602:.\Protocolo.c **** 			buffer[17]=0xF0;
 2372              		.loc 1 602 0
 2373 07b2 F023     		movs	r3, #240
 2374 07b4 7B76     		strb	r3, [r7, #25]
 603:.\Protocolo.c **** 			size=17;
 2375              		.loc 1 603 0
 2376 07b6 1123     		movs	r3, #17
 2377 07b8 FB77     		strb	r3, [r7, #31]
 2378              	.L110:
 604:.\Protocolo.c **** 		}		
 605:.\Protocolo.c **** 	}
 606:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2379              		.loc 1 606 0
 2380 07ba FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 607:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2381              		.loc 1 607 0
 2382 07be FB79     		ldrb	r3, [r7, #7]
 2383 07c0 43F02003 		orr	r3, r3, #32
 2384 07c4 DBB2     		uxtb	r3, r3
 2385 07c6 1846     		mov	r0, r3
 2386 07c8 FFF7FEFF 		bl	Surtidor_PutChar
 608:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2387              		.loc 1 608 0
 2388 07cc 2A48     		ldr	r0, .L130
 2389 07ce FFF7FEFF 		bl	isr_1_StartEx
 609:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2390              		.loc 1 609 0
 2391 07d2 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 610:.\Protocolo.c ****     rx_timeout=0;
 2392              		.loc 1 610 0
 2393 07d6 294B     		ldr	r3, .L130+4
 2394 07d8 0022     		movs	r2, #0
 2395 07da 1A70     		strb	r2, [r3]
 611:.\Protocolo.c ****     CyDelay(10);
 2396              		.loc 1 611 0
 2397 07dc 0A20     		movs	r0, #10
 2398 07de FFF7FEFF 		bl	CyDelay
 612:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2399              		.loc 1 612 0
 2400 07e2 0BE0     		b	.L119
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 55


 2401              	.L120:
 613:.\Protocolo.c **** 		if(rx_timeout==1){
 2402              		.loc 1 613 0
 2403 07e4 254B     		ldr	r3, .L130+4
 2404 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2405 07e8 012B     		cmp	r3, #1
 2406 07ea 07D1     		bne	.L119
 614:.\Protocolo.c **** 			isr_1_Stop();
 2407              		.loc 1 614 0
 2408 07ec FFF7FEFF 		bl	isr_1_Stop
 615:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2409              		.loc 1 615 0
 2410 07f0 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 616:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2411              		.loc 1 616 0
 2412 07f4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 617:.\Protocolo.c **** 			return 0;
 2413              		.loc 1 617 0
 2414 07f8 0023     		movs	r3, #0
 2415 07fa 39E0     		b	.L125
 2416              	.L119:
 612:.\Protocolo.c **** 		if(rx_timeout==1){
 2417              		.loc 1 612 0
 2418 07fc FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2419 0800 0346     		mov	r3, r0
 2420 0802 002B     		cmp	r3, #0
 2421 0804 EED0     		beq	.L120
 618:.\Protocolo.c **** 		}
 619:.\Protocolo.c **** 	}
 620:.\Protocolo.c **** 	isr_1_Stop();
 2422              		.loc 1 620 0
 2423 0806 FFF7FEFF 		bl	isr_1_Stop
 621:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 2424              		.loc 1 621 0
 2425 080a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 622:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2426              		.loc 1 622 0
 2427 080e FFF7FEFF 		bl	Surtidor_ReadRxData
 2428 0812 0346     		mov	r3, r0
 2429 0814 1A46     		mov	r2, r3
 2430 0816 FB79     		ldrb	r3, [r7, #7]
 2431 0818 63F02F03 		orn	r3, r3, #47
 2432 081c DBB2     		uxtb	r3, r3
 2433 081e 9A42     		cmp	r2, r3
 2434 0820 25D1     		bne	.L121
 623:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2435              		.loc 1 623 0
 2436 0822 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 624:.\Protocolo.c **** 		CyDelay(10);
 2437              		.loc 1 624 0
 2438 0826 0A20     		movs	r0, #10
 2439 0828 FFF7FEFF 		bl	CyDelay
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2440              		.loc 1 625 0
 2441 082c 0023     		movs	r3, #0
 2442 082e 7B77     		strb	r3, [r7, #29]
 2443 0830 0BE0     		b	.L122
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 56


 2444              	.L123:
 626:.\Protocolo.c ****            	Surtidor_PutChar(buffer[i]);
 2445              		.loc 1 626 0 discriminator 3
 2446 0832 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2447 0834 07F12002 		add	r2, r7, #32
 2448 0838 1344     		add	r3, r3, r2
 2449 083a 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2450 083e 1846     		mov	r0, r3
 2451 0840 FFF7FEFF 		bl	Surtidor_PutChar
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2452              		.loc 1 625 0 discriminator 3
 2453 0844 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2454 0846 0133     		adds	r3, r3, #1
 2455 0848 7B77     		strb	r3, [r7, #29]
 2456              	.L122:
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2457              		.loc 1 625 0 is_stmt 0 discriminator 1
 2458 084a 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2459 084c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2460 084e 9A42     		cmp	r2, r3
 2461 0850 EFD9     		bls	.L123
 627:.\Protocolo.c ****         }
 628:.\Protocolo.c **** 		CyDelay(50);		
 2462              		.loc 1 628 0 is_stmt 1
 2463 0852 3220     		movs	r0, #50
 2464 0854 FFF7FEFF 		bl	CyDelay
 629:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2465              		.loc 1 629 0
 2466 0858 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2467 085a 1846     		mov	r0, r3
 2468 085c FFF7FEFF 		bl	get_estado
 2469 0860 0346     		mov	r3, r0
 2470 0862 002B     		cmp	r3, #0
 2471 0864 01D1     		bne	.L124
 630:.\Protocolo.c **** 			return 0;
 2472              		.loc 1 630 0
 2473 0866 0023     		movs	r3, #0
 2474 0868 02E0     		b	.L125
 2475              	.L124:
 631:.\Protocolo.c **** 		}
 632:.\Protocolo.c **** 		else{
 633:.\Protocolo.c **** 			return 1;
 2476              		.loc 1 633 0
 2477 086a 0123     		movs	r3, #1
 2478 086c 00E0     		b	.L125
 2479              	.L121:
 634:.\Protocolo.c **** 		}
 635:.\Protocolo.c **** 	}
 636:.\Protocolo.c **** 	else{
 637:.\Protocolo.c **** 		return 0;
 2480              		.loc 1 637 0
 2481 086e 0023     		movs	r3, #0
 2482              	.L125:
 638:.\Protocolo.c **** 	}
 639:.\Protocolo.c **** }
 2483              		.loc 1 639 0 discriminator 1
 2484 0870 1846     		mov	r0, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 57


 2485 0872 2037     		adds	r7, r7, #32
 2486              		.cfi_def_cfa_offset 8
 2487 0874 BD46     		mov	sp, r7
 2488              		.cfi_def_cfa_register 13
 2489              		@ sp needed
 2490 0876 80BD     		pop	{r7, pc}
 2491              	.L131:
 2492              		.align	2
 2493              	.L130:
 2494 0878 00000000 		.word	Rx_Surtidor
 2495 087c 00000000 		.word	rx_timeout
 2496              		.cfi_endproc
 2497              	.LFE70:
 2498              		.size	programar, .-programar
 2499              		.section	.text.cambiar_precio,"ax",%progbits
 2500              		.align	2
 2501              		.global	cambiar_precio
 2502              		.thumb
 2503              		.thumb_func
 2504              		.type	cambiar_precio, %function
 2505              	cambiar_precio:
 2506              	.LFB71:
 640:.\Protocolo.c **** 
 641:.\Protocolo.c **** /*
 642:.\Protocolo.c **** ***************************************************************************************************
 643:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 644:.\Protocolo.c **** *
 645:.\Protocolo.c **** * Description : 
 646:.\Protocolo.c **** *               
 647:.\Protocolo.c **** *
 648:.\Protocolo.c **** * Argument(s) : none
 649:.\Protocolo.c **** *
 650:.\Protocolo.c **** * Return(s)   : none
 651:.\Protocolo.c **** *
 652:.\Protocolo.c **** * Caller(s)   : 
 653:.\Protocolo.c **** *
 654:.\Protocolo.c **** * Note(s)     : none.
 655:.\Protocolo.c **** ***************************************************************************************************
 656:.\Protocolo.c **** */
 657:.\Protocolo.c **** uint8 cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man){
 2507              		.loc 1 657 0
 2508              		.cfi_startproc
 2509              		@ args = 0, pretend = 0, frame = 32
 2510              		@ frame_needed = 1, uses_anonymous_args = 0
 2511 0000 80B5     		push	{r7, lr}
 2512              		.cfi_def_cfa_offset 8
 2513              		.cfi_offset 7, -8
 2514              		.cfi_offset 14, -4
 2515 0002 88B0     		sub	sp, sp, #32
 2516              		.cfi_def_cfa_offset 40
 2517 0004 00AF     		add	r7, sp, #0
 2518              		.cfi_def_cfa_register 7
 2519 0006 0346     		mov	r3, r0
 2520 0008 3960     		str	r1, [r7]
 2521 000a FB71     		strb	r3, [r7, #7]
 2522 000c 1346     		mov	r3, r2
 2523 000e BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 58


 658:.\Protocolo.c **** 	uint8 buffer[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,x;
 2524              		.loc 1 658 0
 2525 0010 0023     		movs	r3, #0
 2526 0012 3B73     		strb	r3, [r7, #12]
 2527 0014 0023     		movs	r3, #0
 2528 0016 7B73     		strb	r3, [r7, #13]
 2529 0018 0023     		movs	r3, #0
 2530 001a BB73     		strb	r3, [r7, #14]
 2531 001c 0023     		movs	r3, #0
 2532 001e FB73     		strb	r3, [r7, #15]
 2533 0020 0023     		movs	r3, #0
 2534 0022 3B74     		strb	r3, [r7, #16]
 2535 0024 0023     		movs	r3, #0
 2536 0026 7B74     		strb	r3, [r7, #17]
 2537 0028 0023     		movs	r3, #0
 2538 002a BB74     		strb	r3, [r7, #18]
 2539 002c 0023     		movs	r3, #0
 2540 002e FB74     		strb	r3, [r7, #19]
 2541 0030 0023     		movs	r3, #0
 2542 0032 3B75     		strb	r3, [r7, #20]
 2543 0034 0023     		movs	r3, #0
 2544 0036 7B75     		strb	r3, [r7, #21]
 2545 0038 0023     		movs	r3, #0
 2546 003a BB75     		strb	r3, [r7, #22]
 2547 003c 0023     		movs	r3, #0
 2548 003e FB75     		strb	r3, [r7, #23]
 2549 0040 0023     		movs	r3, #0
 2550 0042 3B76     		strb	r3, [r7, #24]
 2551 0044 0023     		movs	r3, #0
 2552 0046 7B76     		strb	r3, [r7, #25]
 2553 0048 0023     		movs	r3, #0
 2554 004a BB76     		strb	r3, [r7, #26]
 659:.\Protocolo.c **** 	if(version[1]!=7){
 2555              		.loc 1 659 0
 2556 004c 884B     		ldr	r3, .L151
 2557 004e 5B78     		ldrb	r3, [r3, #1]
 2558 0050 DBB2     		uxtb	r3, r3
 2559 0052 072B     		cmp	r3, #7
 2560 0054 56D0     		beq	.L133
 660:.\Protocolo.c **** 		buffer[0]=0xFF;
 2561              		.loc 1 660 0
 2562 0056 FF23     		movs	r3, #255
 2563 0058 3B73     		strb	r3, [r7, #12]
 661:.\Protocolo.c **** 		buffer[1]=0xE5;
 2564              		.loc 1 661 0
 2565 005a E523     		movs	r3, #229
 2566 005c 7B73     		strb	r3, [r7, #13]
 662:.\Protocolo.c **** 		buffer[2]=0xF4;
 2567              		.loc 1 662 0
 2568 005e F423     		movs	r3, #244
 2569 0060 BB73     		strb	r3, [r7, #14]
 663:.\Protocolo.c **** 		buffer[3]=0xF6;
 2570              		.loc 1 663 0
 2571 0062 F623     		movs	r3, #246
 2572 0064 FB73     		strb	r3, [r7, #15]
 664:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2573              		.loc 1 664 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 59


 2574 0066 BB79     		ldrb	r3, [r7, #6]
 2575 0068 013B     		subs	r3, r3, #1
 2576 006a DBB2     		uxtb	r3, r3
 2577 006c DBB2     		uxtb	r3, r3
 2578 006e 63F01F03 		orn	r3, r3, #31
 2579 0072 DBB2     		uxtb	r3, r3
 2580 0074 DBB2     		uxtb	r3, r3
 2581 0076 3B74     		strb	r3, [r7, #16]
 665:.\Protocolo.c **** 		buffer[5]=0xF7;	
 2582              		.loc 1 665 0
 2583 0078 F723     		movs	r3, #247
 2584 007a 7B74     		strb	r3, [r7, #17]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2585              		.loc 1 666 0
 2586 007c 0623     		movs	r3, #6
 2587 007e BB77     		strb	r3, [r7, #30]
 2588 0080 15E0     		b	.L134
 2589              	.L135:
 667:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 2590              		.loc 1 667 0 discriminator 3
 2591 0082 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2592 0084 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2593 0086 063A     		subs	r2, r2, #6
 2594 0088 3968     		ldr	r1, [r7]
 2595 008a 0A44     		add	r2, r2, r1
 2596 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2597 008e D2B2     		uxtb	r2, r2
 2598 0090 02F00F02 		and	r2, r2, #15
 2599 0094 D2B2     		uxtb	r2, r2
 2600 0096 62F01F02 		orn	r2, r2, #31
 2601 009a D2B2     		uxtb	r2, r2
 2602 009c D2B2     		uxtb	r2, r2
 2603 009e 07F12001 		add	r1, r7, #32
 2604 00a2 0B44     		add	r3, r3, r1
 2605 00a4 03F8142C 		strb	r2, [r3, #-20]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2606              		.loc 1 666 0 discriminator 3
 2607 00a8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2608 00aa 0133     		adds	r3, r3, #1
 2609 00ac BB77     		strb	r3, [r7, #30]
 2610              	.L134:
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2611              		.loc 1 666 0 is_stmt 0 discriminator 1
 2612 00ae BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2613 00b0 092B     		cmp	r3, #9
 2614 00b2 E6D9     		bls	.L135
 668:.\Protocolo.c **** 		}
 669:.\Protocolo.c **** 		buffer[10]=0xFB;
 2615              		.loc 1 669 0 is_stmt 1
 2616 00b4 FB23     		movs	r3, #251
 2617 00b6 BB75     		strb	r3, [r7, #22]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2618              		.loc 1 670 0
 2619 00b8 0023     		movs	r3, #0
 2620 00ba BB77     		strb	r3, [r7, #30]
 2621 00bc 0FE0     		b	.L136
 2622              	.L137:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 60


 671:.\Protocolo.c **** 			buffer[11]+=(buffer[x]&0x0F);	
 2623              		.loc 1 671 0 discriminator 3
 2624 00be FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2625 00c0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2626 00c2 07F12001 		add	r1, r7, #32
 2627 00c6 0B44     		add	r3, r3, r1
 2628 00c8 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2629 00cc 03F00F03 		and	r3, r3, #15
 2630 00d0 DBB2     		uxtb	r3, r3
 2631 00d2 1344     		add	r3, r3, r2
 2632 00d4 DBB2     		uxtb	r3, r3
 2633 00d6 FB75     		strb	r3, [r7, #23]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2634              		.loc 1 670 0 discriminator 3
 2635 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2636 00da 0133     		adds	r3, r3, #1
 2637 00dc BB77     		strb	r3, [r7, #30]
 2638              	.L136:
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2639              		.loc 1 670 0 is_stmt 0 discriminator 1
 2640 00de BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2641 00e0 0A2B     		cmp	r3, #10
 2642 00e2 ECD9     		bls	.L137
 672:.\Protocolo.c **** 		}
 673:.\Protocolo.c **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 2643              		.loc 1 673 0 is_stmt 1
 2644 00e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2645 00e6 5B42     		negs	r3, r3
 2646 00e8 DBB2     		uxtb	r3, r3
 2647 00ea DBB2     		uxtb	r3, r3
 2648 00ec 03F00F03 		and	r3, r3, #15
 2649 00f0 DBB2     		uxtb	r3, r3
 2650 00f2 63F01F03 		orn	r3, r3, #31
 2651 00f6 DBB2     		uxtb	r3, r3
 2652 00f8 DBB2     		uxtb	r3, r3
 2653 00fa FB75     		strb	r3, [r7, #23]
 674:.\Protocolo.c **** 		buffer[12]=0xF0;
 2654              		.loc 1 674 0
 2655 00fc F023     		movs	r3, #240
 2656 00fe 3B76     		strb	r3, [r7, #24]
 675:.\Protocolo.c **** 		size=12;
 2657              		.loc 1 675 0
 2658 0100 0C23     		movs	r3, #12
 2659 0102 FB77     		strb	r3, [r7, #31]
 2660              	.L133:
 676:.\Protocolo.c **** 	}
 677:.\Protocolo.c **** 	if(version[1]==7){
 2661              		.loc 1 677 0
 2662 0104 5A4B     		ldr	r3, .L151
 2663 0106 5B78     		ldrb	r3, [r3, #1]
 2664 0108 DBB2     		uxtb	r3, r3
 2665 010a 072B     		cmp	r3, #7
 2666 010c 53D1     		bne	.L138
 678:.\Protocolo.c **** 		buffer[0]=0xFF;
 2667              		.loc 1 678 0
 2668 010e FF23     		movs	r3, #255
 2669 0110 3B73     		strb	r3, [r7, #12]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 61


 679:.\Protocolo.c **** 		buffer[1]=0xE3;
 2670              		.loc 1 679 0
 2671 0112 E323     		movs	r3, #227
 2672 0114 7B73     		strb	r3, [r7, #13]
 680:.\Protocolo.c **** 		buffer[2]=0xF4;
 2673              		.loc 1 680 0
 2674 0116 F423     		movs	r3, #244
 2675 0118 BB73     		strb	r3, [r7, #14]
 681:.\Protocolo.c **** 		buffer[3]=0xF6;
 2676              		.loc 1 681 0
 2677 011a F623     		movs	r3, #246
 2678 011c FB73     		strb	r3, [r7, #15]
 682:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2679              		.loc 1 682 0
 2680 011e BB79     		ldrb	r3, [r7, #6]
 2681 0120 013B     		subs	r3, r3, #1
 2682 0122 DBB2     		uxtb	r3, r3
 2683 0124 DBB2     		uxtb	r3, r3
 2684 0126 63F01F03 		orn	r3, r3, #31
 2685 012a DBB2     		uxtb	r3, r3
 2686 012c DBB2     		uxtb	r3, r3
 2687 012e 3B74     		strb	r3, [r7, #16]
 683:.\Protocolo.c **** 		buffer[5]=0xF7;		
 2688              		.loc 1 683 0
 2689 0130 F723     		movs	r3, #247
 2690 0132 7B74     		strb	r3, [r7, #17]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2691              		.loc 1 684 0
 2692 0134 0623     		movs	r3, #6
 2693 0136 BB77     		strb	r3, [r7, #30]
 2694 0138 10E0     		b	.L139
 2695              	.L140:
 685:.\Protocolo.c **** 			buffer[x]=(0xE0|precio[x-6]);
 2696              		.loc 1 685 0 discriminator 3
 2697 013a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2698 013c BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2699 013e 063A     		subs	r2, r2, #6
 2700 0140 3968     		ldr	r1, [r7]
 2701 0142 0A44     		add	r2, r2, r1
 2702 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2703 0146 62F01F02 		orn	r2, r2, #31
 2704 014a D2B2     		uxtb	r2, r2
 2705 014c 07F12001 		add	r1, r7, #32
 2706 0150 0B44     		add	r3, r3, r1
 2707 0152 03F8142C 		strb	r2, [r3, #-20]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2708              		.loc 1 684 0 discriminator 3
 2709 0156 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2710 0158 0133     		adds	r3, r3, #1
 2711 015a BB77     		strb	r3, [r7, #30]
 2712              	.L139:
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2713              		.loc 1 684 0 is_stmt 0 discriminator 1
 2714 015c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2715 015e 0A2B     		cmp	r3, #10
 2716 0160 EBD9     		bls	.L140
 686:.\Protocolo.c **** 		}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 62


 687:.\Protocolo.c **** 		buffer[11]=0xE0;
 2717              		.loc 1 687 0 is_stmt 1
 2718 0162 E023     		movs	r3, #224
 2719 0164 FB75     		strb	r3, [r7, #23]
 688:.\Protocolo.c **** 		buffer[12]=0xFB;
 2720              		.loc 1 688 0
 2721 0166 FB23     		movs	r3, #251
 2722 0168 3B76     		strb	r3, [r7, #24]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2723              		.loc 1 689 0
 2724 016a 0023     		movs	r3, #0
 2725 016c BB77     		strb	r3, [r7, #30]
 2726 016e 0FE0     		b	.L141
 2727              	.L142:
 690:.\Protocolo.c **** 			buffer[13]+=(buffer[x]&0x0F);	
 2728              		.loc 1 690 0 discriminator 3
 2729 0170 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 2730 0172 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2731 0174 07F12001 		add	r1, r7, #32
 2732 0178 0B44     		add	r3, r3, r1
 2733 017a 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2734 017e 03F00F03 		and	r3, r3, #15
 2735 0182 DBB2     		uxtb	r3, r3
 2736 0184 1344     		add	r3, r3, r2
 2737 0186 DBB2     		uxtb	r3, r3
 2738 0188 7B76     		strb	r3, [r7, #25]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2739              		.loc 1 689 0 discriminator 3
 2740 018a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2741 018c 0133     		adds	r3, r3, #1
 2742 018e BB77     		strb	r3, [r7, #30]
 2743              	.L141:
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2744              		.loc 1 689 0 is_stmt 0 discriminator 1
 2745 0190 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2746 0192 0C2B     		cmp	r3, #12
 2747 0194 ECD9     		bls	.L142
 691:.\Protocolo.c **** 		}
 692:.\Protocolo.c **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 2748              		.loc 1 692 0 is_stmt 1
 2749 0196 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2750 0198 5B42     		negs	r3, r3
 2751 019a DBB2     		uxtb	r3, r3
 2752 019c DBB2     		uxtb	r3, r3
 2753 019e 03F00F03 		and	r3, r3, #15
 2754 01a2 DBB2     		uxtb	r3, r3
 2755 01a4 63F01F03 		orn	r3, r3, #31
 2756 01a8 DBB2     		uxtb	r3, r3
 2757 01aa DBB2     		uxtb	r3, r3
 2758 01ac 7B76     		strb	r3, [r7, #25]
 693:.\Protocolo.c **** 		buffer[14]=0xF0;
 2759              		.loc 1 693 0
 2760 01ae F023     		movs	r3, #240
 2761 01b0 BB76     		strb	r3, [r7, #26]
 694:.\Protocolo.c **** 		size=14;
 2762              		.loc 1 694 0
 2763 01b2 0E23     		movs	r3, #14
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 63


 2764 01b4 FB77     		strb	r3, [r7, #31]
 2765              	.L138:
 695:.\Protocolo.c **** 	}
 696:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2766              		.loc 1 696 0
 2767 01b6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 697:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2768              		.loc 1 697 0
 2769 01ba FB79     		ldrb	r3, [r7, #7]
 2770 01bc 43F02003 		orr	r3, r3, #32
 2771 01c0 DBB2     		uxtb	r3, r3
 2772 01c2 1846     		mov	r0, r3
 2773 01c4 FFF7FEFF 		bl	Surtidor_PutChar
 698:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2774              		.loc 1 698 0
 2775 01c8 2A48     		ldr	r0, .L151+4
 2776 01ca FFF7FEFF 		bl	isr_1_StartEx
 699:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2777              		.loc 1 699 0
 2778 01ce FFF7FEFF 		bl	Timer_RxSurtidor_Start
 700:.\Protocolo.c ****     rx_timeout=0;
 2779              		.loc 1 700 0
 2780 01d2 294B     		ldr	r3, .L151+8
 2781 01d4 0022     		movs	r2, #0
 2782 01d6 1A70     		strb	r2, [r3]
 701:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2783              		.loc 1 701 0
 2784 01d8 0BE0     		b	.L143
 2785              	.L145:
 702:.\Protocolo.c **** 		if(rx_timeout==1){
 2786              		.loc 1 702 0
 2787 01da 274B     		ldr	r3, .L151+8
 2788 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2789 01de 012B     		cmp	r3, #1
 2790 01e0 07D1     		bne	.L143
 703:.\Protocolo.c **** 			isr_1_Stop();
 2791              		.loc 1 703 0
 2792 01e2 FFF7FEFF 		bl	isr_1_Stop
 704:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2793              		.loc 1 704 0
 2794 01e6 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 705:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2795              		.loc 1 705 0
 2796 01ea FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 706:.\Protocolo.c **** 			return 0;
 2797              		.loc 1 706 0
 2798 01ee 0023     		movs	r3, #0
 2799 01f0 39E0     		b	.L150
 2800              	.L143:
 701:.\Protocolo.c **** 		if(rx_timeout==1){
 2801              		.loc 1 701 0
 2802 01f2 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2803 01f6 0346     		mov	r3, r0
 2804 01f8 002B     		cmp	r3, #0
 2805 01fa EED0     		beq	.L145
 707:.\Protocolo.c **** 		}
 708:.\Protocolo.c **** 	}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 64


 709:.\Protocolo.c **** 	isr_1_Stop();
 2806              		.loc 1 709 0
 2807 01fc FFF7FEFF 		bl	isr_1_Stop
 710:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();
 2808              		.loc 1 710 0
 2809 0200 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 711:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2810              		.loc 1 711 0
 2811 0204 FFF7FEFF 		bl	Surtidor_ReadRxData
 2812 0208 0346     		mov	r3, r0
 2813 020a 1A46     		mov	r2, r3
 2814 020c FB79     		ldrb	r3, [r7, #7]
 2815 020e 63F02F03 		orn	r3, r3, #47
 2816 0212 DBB2     		uxtb	r3, r3
 2817 0214 9A42     		cmp	r2, r3
 2818 0216 25D1     		bne	.L146
 712:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2819              		.loc 1 712 0
 2820 0218 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 713:.\Protocolo.c **** 		CyDelay(10);
 2821              		.loc 1 713 0
 2822 021c 0A20     		movs	r0, #10
 2823 021e FFF7FEFF 		bl	CyDelay
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2824              		.loc 1 714 0
 2825 0222 0023     		movs	r3, #0
 2826 0224 BB77     		strb	r3, [r7, #30]
 2827 0226 0BE0     		b	.L147
 2828              	.L148:
 715:.\Protocolo.c ****            	Surtidor_PutChar(buffer[x]);
 2829              		.loc 1 715 0 discriminator 3
 2830 0228 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2831 022a 07F12002 		add	r2, r7, #32
 2832 022e 1344     		add	r3, r3, r2
 2833 0230 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2834 0234 1846     		mov	r0, r3
 2835 0236 FFF7FEFF 		bl	Surtidor_PutChar
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2836              		.loc 1 714 0 discriminator 3
 2837 023a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2838 023c 0133     		adds	r3, r3, #1
 2839 023e BB77     		strb	r3, [r7, #30]
 2840              	.L147:
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2841              		.loc 1 714 0 is_stmt 0 discriminator 1
 2842 0240 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2843 0242 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2844 0244 9A42     		cmp	r2, r3
 2845 0246 EFD9     		bls	.L148
 716:.\Protocolo.c ****         }
 717:.\Protocolo.c **** 		CyDelay(50);		
 2846              		.loc 1 717 0 is_stmt 1
 2847 0248 3220     		movs	r0, #50
 2848 024a FFF7FEFF 		bl	CyDelay
 718:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2849              		.loc 1 718 0
 2850 024e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 65


 2851 0250 1846     		mov	r0, r3
 2852 0252 FFF7FEFF 		bl	get_estado
 2853 0256 0346     		mov	r3, r0
 2854 0258 002B     		cmp	r3, #0
 2855 025a 01D1     		bne	.L149
 719:.\Protocolo.c **** 			return 0;
 2856              		.loc 1 719 0
 2857 025c 0023     		movs	r3, #0
 2858 025e 02E0     		b	.L150
 2859              	.L149:
 720:.\Protocolo.c **** 		}
 721:.\Protocolo.c **** 		else{
 722:.\Protocolo.c **** 			return 1;
 2860              		.loc 1 722 0
 2861 0260 0123     		movs	r3, #1
 2862 0262 00E0     		b	.L150
 2863              	.L146:
 723:.\Protocolo.c **** 		}
 724:.\Protocolo.c **** 	}
 725:.\Protocolo.c **** 	else{
 726:.\Protocolo.c **** 		return 0;
 2864              		.loc 1 726 0
 2865 0264 0023     		movs	r3, #0
 2866              	.L150:
 727:.\Protocolo.c **** 	}
 728:.\Protocolo.c **** }
 2867              		.loc 1 728 0 discriminator 1
 2868 0266 1846     		mov	r0, r3
 2869 0268 2037     		adds	r7, r7, #32
 2870              		.cfi_def_cfa_offset 8
 2871 026a BD46     		mov	sp, r7
 2872              		.cfi_def_cfa_register 13
 2873              		@ sp needed
 2874 026c 80BD     		pop	{r7, pc}
 2875              	.L152:
 2876 026e 00BF     		.align	2
 2877              	.L151:
 2878 0270 00000000 		.word	version
 2879 0274 00000000 		.word	Rx_Surtidor
 2880 0278 00000000 		.word	rx_timeout
 2881              		.cfi_endproc
 2882              	.LFE71:
 2883              		.size	cambiar_precio, .-cambiar_precio
 2884              		.section	.text.totales,"ax",%progbits
 2885              		.align	2
 2886              		.global	totales
 2887              		.thumb
 2888              		.thumb_func
 2889              		.type	totales, %function
 2890              	totales:
 2891              	.LFB72:
 729:.\Protocolo.c **** 
 730:.\Protocolo.c **** /*
 731:.\Protocolo.c **** ***************************************************************************************************
 732:.\Protocolo.c **** *                                         uint8 totales(uint8 dir)
 733:.\Protocolo.c **** *
 734:.\Protocolo.c **** * Description : 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 66


 735:.\Protocolo.c **** *               
 736:.\Protocolo.c **** *
 737:.\Protocolo.c **** * Argument(s) : none
 738:.\Protocolo.c **** *
 739:.\Protocolo.c **** * Return(s)   : none
 740:.\Protocolo.c **** *
 741:.\Protocolo.c **** * Caller(s)   : 
 742:.\Protocolo.c **** *
 743:.\Protocolo.c **** * Note(s)     : none.
 744:.\Protocolo.c **** ***************************************************************************************************
 745:.\Protocolo.c **** */
 746:.\Protocolo.c **** uint8 totales(uint8 dir, uint8 nmangueras){
 2892              		.loc 1 746 0
 2893              		.cfi_startproc
 2894              		@ args = 0, pretend = 0, frame = 16
 2895              		@ frame_needed = 1, uses_anonymous_args = 0
 2896 0000 80B5     		push	{r7, lr}
 2897              		.cfi_def_cfa_offset 8
 2898              		.cfi_offset 7, -8
 2899              		.cfi_offset 14, -4
 2900 0002 84B0     		sub	sp, sp, #16
 2901              		.cfi_def_cfa_offset 24
 2902 0004 00AF     		add	r7, sp, #0
 2903              		.cfi_def_cfa_register 7
 2904 0006 0346     		mov	r3, r0
 2905 0008 0A46     		mov	r2, r1
 2906 000a FB71     		strb	r3, [r7, #7]
 2907 000c 1346     		mov	r3, r2
 2908 000e BB71     		strb	r3, [r7, #6]
 747:.\Protocolo.c **** 	uint8 x,y;
 748:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2909              		.loc 1 748 0
 2910 0010 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 749:.\Protocolo.c ****     Surtidor_PutChar(0x50|dir);
 2911              		.loc 1 749 0
 2912 0014 FB79     		ldrb	r3, [r7, #7]
 2913 0016 43F05003 		orr	r3, r3, #80
 2914 001a DBB2     		uxtb	r3, r3
 2915 001c 1846     		mov	r0, r3
 2916 001e FFF7FEFF 		bl	Surtidor_PutChar
 750:.\Protocolo.c ****     rx_timeout=0;
 2917              		.loc 1 750 0
 2918 0022 B04B     		ldr	r3, .L355
 2919 0024 0022     		movs	r2, #0
 2920 0026 1A70     		strb	r2, [r3]
 751:.\Protocolo.c **** 	CyDelay(300);
 2921              		.loc 1 751 0
 2922 0028 4FF49670 		mov	r0, #300
 2923 002c FFF7FEFF 		bl	CyDelay
 752:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 2924              		.loc 1 752 0
 2925 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2926 0034 0346     		mov	r3, r0
 2927 0036 002B     		cmp	r3, #0
 2928 0038 01F02280 		beq	.L154
 753:.\Protocolo.c **** 		if(dir==lado1.dir){
 2929              		.loc 1 753 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 67


 2930 003c AA4B     		ldr	r3, .L355+4
 2931 003e 1B78     		ldrb	r3, [r3]
 2932 0040 DBB2     		uxtb	r3, r3
 2933 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2934 0044 9A42     		cmp	r2, r3
 2935 0046 40F01F84 		bne	.L155
 754:.\Protocolo.c **** 			if(version[1]!=7){
 2936              		.loc 1 754 0
 2937 004a A84B     		ldr	r3, .L355+8
 2938 004c 5B78     		ldrb	r3, [r3, #1]
 2939 004e DBB2     		uxtb	r3, r3
 2940 0050 072B     		cmp	r3, #7
 2941 0052 00F00C82 		beq	.L156
 755:.\Protocolo.c **** 				CyDelay(900);
 2942              		.loc 1 755 0
 2943 0056 4FF46170 		mov	r0, #900
 2944 005a FFF7FEFF 		bl	CyDelay
 756:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 2945              		.loc 1 756 0
 2946 005e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2947 0062 0346     		mov	r3, r0
 2948 0064 FB73     		strb	r3, [r7, #15]
 757:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 2949              		.loc 1 757 0
 2950 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2951 0068 222B     		cmp	r3, #34
 2952 006a 06D0     		beq	.L157
 2953              		.loc 1 757 0 is_stmt 0 discriminator 1
 2954 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2955 006e 402B     		cmp	r3, #64
 2956 0070 03D0     		beq	.L157
 2957              		.loc 1 757 0 discriminator 2
 2958 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2959 0074 5E2B     		cmp	r3, #94
 2960 0076 40F0F581 		bne	.L158
 2961              	.L157:
 758:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9))  
 2962              		.loc 1 758 0 is_stmt 1
 2963 007a 9D4B     		ldr	r3, .L355+12
 2964 007c 1B78     		ldrb	r3, [r3]
 2965 007e DBB2     		uxtb	r3, r3
 2966 0080 FF2B     		cmp	r3, #255
 2967 0082 40F0EA81 		bne	.L159
 2968              		.loc 1 758 0 is_stmt 0 discriminator 1
 2969 0086 9A4B     		ldr	r3, .L355+12
 2970 0088 5B78     		ldrb	r3, [r3, #1]
 2971 008a DBB2     		uxtb	r3, r3
 2972 008c F62B     		cmp	r3, #246
 2973 008e 40F0E481 		bne	.L159
 2974              		.loc 1 758 0 discriminator 2
 2975 0092 974B     		ldr	r3, .L355+12
 2976 0094 DB78     		ldrb	r3, [r3, #3]
 2977 0096 DBB2     		uxtb	r3, r3
 2978 0098 F92B     		cmp	r3, #249
 2979 009a 40F0DE81 		bne	.L159
 759:.\Protocolo.c ****                     {                     
 760:.\Protocolo.c ****                     	for(y=0;y<=2;y++){// MOD: inicializa valores en cero
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 68


 2980              		.loc 1 760 0 is_stmt 1
 2981 009e 0023     		movs	r3, #0
 2982 00a0 BB73     		strb	r3, [r7, #14]
 2983 00a2 16E0     		b	.L160
 2984              	.L163:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2985              		.loc 1 761 0
 2986 00a4 0023     		movs	r3, #0
 2987 00a6 FB73     		strb	r3, [r7, #15]
 2988 00a8 0DE0     		b	.L161
 2989              	.L162:
 762:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 2990              		.loc 1 762 0 discriminator 3
 2991 00aa BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2992 00ac F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 2993 00ae 8E48     		ldr	r0, .L355+4
 2994 00b0 1346     		mov	r3, r2
 2995 00b2 5B00     		lsls	r3, r3, #1
 2996 00b4 1344     		add	r3, r3, r2
 2997 00b6 DB00     		lsls	r3, r3, #3
 2998 00b8 0B44     		add	r3, r3, r1
 2999 00ba 0344     		add	r3, r3, r0
 3000 00bc 0022     		movs	r2, #0
 3001 00be 9A70     		strb	r2, [r3, #2]
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3002              		.loc 1 761 0 discriminator 3
 3003 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3004 00c2 0133     		adds	r3, r3, #1
 3005 00c4 FB73     		strb	r3, [r7, #15]
 3006              	.L161:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3007              		.loc 1 761 0 is_stmt 0 discriminator 1
 3008 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3009 00c8 172B     		cmp	r3, #23
 3010 00ca EED9     		bls	.L162
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3011              		.loc 1 760 0 is_stmt 1 discriminator 2
 3012 00cc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3013 00ce 0133     		adds	r3, r3, #1
 3014 00d0 BB73     		strb	r3, [r7, #14]
 3015              	.L160:
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3016              		.loc 1 760 0 is_stmt 0 discriminator 1
 3017 00d2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3018 00d4 022B     		cmp	r3, #2
 3019 00d6 E5D9     		bls	.L163
 763:.\Protocolo.c ****                     		}
 764:.\Protocolo.c ****                     	}                        
 765:.\Protocolo.c **** 						for(x=0;x<=7;x++){///producto 1 6xto digito
 3020              		.loc 1 765 0 is_stmt 1
 3021 00d8 0023     		movs	r3, #0
 3022 00da FB73     		strb	r3, [r7, #15]
 3023 00dc 21E0     		b	.L164
 3024              	.L168:
 766:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3025              		.loc 1 766 0
 3026 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 69


 3027 00e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3028 00e2 0432     		adds	r2, r2, #4
 3029 00e4 8249     		ldr	r1, .L355+12
 3030 00e6 8A5C     		ldrb	r2, [r1, r2]
 3031 00e8 D1B2     		uxtb	r1, r2
 3032 00ea 7F4A     		ldr	r2, .L355+4
 3033 00ec 1344     		add	r3, r3, r2
 3034 00ee 0A46     		mov	r2, r1
 3035 00f0 9A70     		strb	r2, [r3, #2]
 767:.\Protocolo.c ****                             ///////////''modificacion actual''//// Se añade esta verificacion para
 768:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3036              		.loc 1 768 0
 3037 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3038 00f4 7C4A     		ldr	r2, .L355+4
 3039 00f6 1344     		add	r3, r3, r2
 3040 00f8 9B78     		ldrb	r3, [r3, #2]
 3041 00fa DBB2     		uxtb	r3, r3
 3042 00fc 002B     		cmp	r3, #0
 3043 00fe 08D0     		beq	.L165
 3044              		.loc 1 768 0 is_stmt 0 discriminator 1
 3045 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3046 0102 794A     		ldr	r2, .L355+4
 3047 0104 1344     		add	r3, r3, r2
 3048 0106 9B78     		ldrb	r3, [r3, #2]
 3049 0108 DBB2     		uxtb	r3, r3
 3050 010a 03F0F003 		and	r3, r3, #240
 3051 010e E02B     		cmp	r3, #224
 3052 0110 04D0     		beq	.L166
 3053              	.L165:
 769:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3054              		.loc 1 769 0 is_stmt 1
 3055 0112 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 770:.\Protocolo.c **** 								return 0;
 3056              		.loc 1 770 0
 3057 0116 0023     		movs	r3, #0
 3058 0118 00F0B3BF 		b	.L167
 3059              	.L166:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3060              		.loc 1 765 0 discriminator 2
 3061 011c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3062 011e 0133     		adds	r3, r3, #1
 3063 0120 FB73     		strb	r3, [r7, #15]
 3064              	.L164:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3065              		.loc 1 765 0 is_stmt 0 discriminator 1
 3066 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3067 0124 072B     		cmp	r3, #7
 3068 0126 DAD9     		bls	.L168
 771:.\Protocolo.c **** 							}
 772:.\Protocolo.c ****                             ///////////''modificacion actual''////
 773:.\Protocolo.c **** 						}
 774:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3069              		.loc 1 774 0 is_stmt 1
 3070 0128 0023     		movs	r3, #0
 3071 012a FB73     		strb	r3, [r7, #15]
 3072 012c 24E0     		b	.L169
 3073              	.L172:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 70


 775:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3074              		.loc 1 775 0
 3075 012e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3076 0130 0C33     		adds	r3, r3, #12
 3077 0132 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3078 0134 0D32     		adds	r2, r2, #13
 3079 0136 6E49     		ldr	r1, .L355+12
 3080 0138 8A5C     		ldrb	r2, [r1, r2]
 3081 013a D1B2     		uxtb	r1, r2
 3082 013c 6A4A     		ldr	r2, .L355+4
 3083 013e 1344     		add	r3, r3, r2
 3084 0140 0A46     		mov	r2, r1
 3085 0142 9A70     		strb	r2, [r3, #2]
 776:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3086              		.loc 1 776 0
 3087 0144 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3088 0146 0C33     		adds	r3, r3, #12
 3089 0148 674A     		ldr	r2, .L355+4
 3090 014a 1344     		add	r3, r3, r2
 3091 014c 9B78     		ldrb	r3, [r3, #2]
 3092 014e DBB2     		uxtb	r3, r3
 3093 0150 002B     		cmp	r3, #0
 3094 0152 09D0     		beq	.L170
 3095              		.loc 1 776 0 is_stmt 0 discriminator 1
 3096 0154 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3097 0156 0C33     		adds	r3, r3, #12
 3098 0158 634A     		ldr	r2, .L355+4
 3099 015a 1344     		add	r3, r3, r2
 3100 015c 9B78     		ldrb	r3, [r3, #2]
 3101 015e DBB2     		uxtb	r3, r3
 3102 0160 03F0F003 		and	r3, r3, #240
 3103 0164 E02B     		cmp	r3, #224
 3104 0166 04D0     		beq	.L171
 3105              	.L170:
 777:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3106              		.loc 1 777 0 is_stmt 1
 3107 0168 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 778:.\Protocolo.c **** 								return 0;
 3108              		.loc 1 778 0
 3109 016c 0023     		movs	r3, #0
 3110 016e 00F088BF 		b	.L167
 3111              	.L171:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3112              		.loc 1 774 0 discriminator 2
 3113 0172 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3114 0174 0133     		adds	r3, r3, #1
 3115 0176 FB73     		strb	r3, [r7, #15]
 3116              	.L169:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3117              		.loc 1 774 0 is_stmt 0 discriminator 1
 3118 0178 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3119 017a 072B     		cmp	r3, #7
 3120 017c D7D9     		bls	.L172
 779:.\Protocolo.c **** 							}							
 780:.\Protocolo.c **** 						}
 781:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3121              		.loc 1 781 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 71


 3122 017e 0023     		movs	r3, #0
 3123 0180 FB73     		strb	r3, [r7, #15]
 3124 0182 0DE0     		b	.L173
 3125              	.L174:
 782:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3126              		.loc 1 782 0 discriminator 3
 3127 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3128 0186 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3129 0188 1632     		adds	r2, r2, #22
 3130 018a 5949     		ldr	r1, .L355+12
 3131 018c 8A5C     		ldrb	r2, [r1, r2]
 3132 018e D1B2     		uxtb	r1, r2
 3133 0190 554A     		ldr	r2, .L355+4
 3134 0192 1344     		add	r3, r3, r2
 3135 0194 0A46     		mov	r2, r1
 3136 0196 83F84A20 		strb	r2, [r3, #74]
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3137              		.loc 1 781 0 discriminator 3
 3138 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3139 019c 0133     		adds	r3, r3, #1
 3140 019e FB73     		strb	r3, [r7, #15]
 3141              	.L173:
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3142              		.loc 1 781 0 is_stmt 0 discriminator 1
 3143 01a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3144 01a2 032B     		cmp	r3, #3
 3145 01a4 EED9     		bls	.L174
 783:.\Protocolo.c **** 						}					
 784:.\Protocolo.c **** 						if(nmangueras==2){
 3146              		.loc 1 784 0 is_stmt 1
 3147 01a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3148 01a8 022B     		cmp	r3, #2
 3149 01aa 6BD1     		bne	.L175
 785:.\Protocolo.c **** 							for(x=0;x<=7;x++){ ///producto 2
 3150              		.loc 1 785 0
 3151 01ac 0023     		movs	r3, #0
 3152 01ae FB73     		strb	r3, [r7, #15]
 3153 01b0 21E0     		b	.L176
 3154              	.L179:
 786:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3155              		.loc 1 786 0
 3156 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3157 01b4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3158 01b6 2232     		adds	r2, r2, #34
 3159 01b8 4D49     		ldr	r1, .L355+12
 3160 01ba 8A5C     		ldrb	r2, [r1, r2]
 3161 01bc D1B2     		uxtb	r1, r2
 3162 01be 4A4A     		ldr	r2, .L355+4
 3163 01c0 1344     		add	r3, r3, r2
 3164 01c2 0A46     		mov	r2, r1
 3165 01c4 9A76     		strb	r2, [r3, #26]
 787:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3166              		.loc 1 787 0
 3167 01c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3168 01c8 474A     		ldr	r2, .L355+4
 3169 01ca 1344     		add	r3, r3, r2
 3170 01cc 9B7E     		ldrb	r3, [r3, #26]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 72


 3171 01ce DBB2     		uxtb	r3, r3
 3172 01d0 002B     		cmp	r3, #0
 3173 01d2 08D0     		beq	.L177
 3174              		.loc 1 787 0 is_stmt 0 discriminator 1
 3175 01d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3176 01d6 444A     		ldr	r2, .L355+4
 3177 01d8 1344     		add	r3, r3, r2
 3178 01da 9B7E     		ldrb	r3, [r3, #26]
 3179 01dc DBB2     		uxtb	r3, r3
 3180 01de 03F0F003 		and	r3, r3, #240
 3181 01e2 E02B     		cmp	r3, #224
 3182 01e4 04D0     		beq	.L178
 3183              	.L177:
 788:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3184              		.loc 1 788 0 is_stmt 1
 3185 01e6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 789:.\Protocolo.c **** 									return 0;
 3186              		.loc 1 789 0
 3187 01ea 0023     		movs	r3, #0
 3188 01ec 00F049BF 		b	.L167
 3189              	.L178:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3190              		.loc 1 785 0 discriminator 2
 3191 01f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3192 01f2 0133     		adds	r3, r3, #1
 3193 01f4 FB73     		strb	r3, [r7, #15]
 3194              	.L176:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3195              		.loc 1 785 0 is_stmt 0 discriminator 1
 3196 01f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3197 01f8 072B     		cmp	r3, #7
 3198 01fa DAD9     		bls	.L179
 790:.\Protocolo.c **** 								}								
 791:.\Protocolo.c **** 							}
 792:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3199              		.loc 1 792 0 is_stmt 1
 3200 01fc 0023     		movs	r3, #0
 3201 01fe FB73     		strb	r3, [r7, #15]
 3202 0200 24E0     		b	.L180
 3203              	.L183:
 793:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3204              		.loc 1 793 0
 3205 0202 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3206 0204 0C33     		adds	r3, r3, #12
 3207 0206 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3208 0208 2B32     		adds	r2, r2, #43
 3209 020a 3949     		ldr	r1, .L355+12
 3210 020c 8A5C     		ldrb	r2, [r1, r2]
 3211 020e D1B2     		uxtb	r1, r2
 3212 0210 354A     		ldr	r2, .L355+4
 3213 0212 1344     		add	r3, r3, r2
 3214 0214 0A46     		mov	r2, r1
 3215 0216 9A76     		strb	r2, [r3, #26]
 794:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3216              		.loc 1 794 0
 3217 0218 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3218 021a 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 73


 3219 021c 324A     		ldr	r2, .L355+4
 3220 021e 1344     		add	r3, r3, r2
 3221 0220 9B7E     		ldrb	r3, [r3, #26]
 3222 0222 DBB2     		uxtb	r3, r3
 3223 0224 002B     		cmp	r3, #0
 3224 0226 09D0     		beq	.L181
 3225              		.loc 1 794 0 is_stmt 0 discriminator 1
 3226 0228 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3227 022a 0C33     		adds	r3, r3, #12
 3228 022c 2E4A     		ldr	r2, .L355+4
 3229 022e 1344     		add	r3, r3, r2
 3230 0230 9B7E     		ldrb	r3, [r3, #26]
 3231 0232 DBB2     		uxtb	r3, r3
 3232 0234 03F0F003 		and	r3, r3, #240
 3233 0238 E02B     		cmp	r3, #224
 3234 023a 04D0     		beq	.L182
 3235              	.L181:
 795:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3236              		.loc 1 795 0 is_stmt 1
 3237 023c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 796:.\Protocolo.c **** 									return 0;
 3238              		.loc 1 796 0
 3239 0240 0023     		movs	r3, #0
 3240 0242 00F01EBF 		b	.L167
 3241              	.L182:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3242              		.loc 1 792 0 discriminator 2
 3243 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3244 0248 0133     		adds	r3, r3, #1
 3245 024a FB73     		strb	r3, [r7, #15]
 3246              	.L180:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3247              		.loc 1 792 0 is_stmt 0 discriminator 1
 3248 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3249 024e 072B     		cmp	r3, #7
 3250 0250 D7D9     		bls	.L183
 797:.\Protocolo.c **** 								}								
 798:.\Protocolo.c **** 							}
 799:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3251              		.loc 1 799 0 is_stmt 1
 3252 0252 0023     		movs	r3, #0
 3253 0254 FB73     		strb	r3, [r7, #15]
 3254 0256 0DE0     		b	.L184
 3255              	.L185:
 800:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3256              		.loc 1 800 0 discriminator 3
 3257 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3258 025a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3259 025c 3432     		adds	r2, r2, #52
 3260 025e 2449     		ldr	r1, .L355+12
 3261 0260 8A5C     		ldrb	r2, [r1, r2]
 3262 0262 D1B2     		uxtb	r1, r2
 3263 0264 204A     		ldr	r2, .L355+4
 3264 0266 1344     		add	r3, r3, r2
 3265 0268 0A46     		mov	r2, r1
 3266 026a 83F84F20 		strb	r2, [r3, #79]
 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 74


 3267              		.loc 1 799 0 discriminator 3
 3268 026e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3269 0270 0133     		adds	r3, r3, #1
 3270 0272 FB73     		strb	r3, [r7, #15]
 3271              	.L184:
 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3272              		.loc 1 799 0 is_stmt 0 discriminator 1
 3273 0274 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3274 0276 032B     		cmp	r3, #3
 3275 0278 EED9     		bls	.L185
 801:.\Protocolo.c **** 							}	
 802:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3276              		.loc 1 802 0 is_stmt 1
 3277 027a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 803:.\Protocolo.c ****     						return 2;                            
 3278              		.loc 1 803 0
 3279 027e 0223     		movs	r3, #2
 3280 0280 00F0FFBE 		b	.L167
 3281              	.L175:
 804:.\Protocolo.c **** 						}
 805:.\Protocolo.c **** 						if(nmangueras==3){
 3282              		.loc 1 805 0
 3283 0284 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3284 0286 032B     		cmp	r3, #3
 3285 0288 40F0E280 		bne	.L186
 806:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 2
 3286              		.loc 1 806 0
 3287 028c 0023     		movs	r3, #0
 3288 028e FB73     		strb	r3, [r7, #15]
 3289 0290 21E0     		b	.L187
 3290              	.L190:
 807:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3291              		.loc 1 807 0
 3292 0292 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3293 0294 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3294 0296 2232     		adds	r2, r2, #34
 3295 0298 1549     		ldr	r1, .L355+12
 3296 029a 8A5C     		ldrb	r2, [r1, r2]
 3297 029c D1B2     		uxtb	r1, r2
 3298 029e 124A     		ldr	r2, .L355+4
 3299 02a0 1344     		add	r3, r3, r2
 3300 02a2 0A46     		mov	r2, r1
 3301 02a4 9A76     		strb	r2, [r3, #26]
 808:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3302              		.loc 1 808 0
 3303 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3304 02a8 0F4A     		ldr	r2, .L355+4
 3305 02aa 1344     		add	r3, r3, r2
 3306 02ac 9B7E     		ldrb	r3, [r3, #26]
 3307 02ae DBB2     		uxtb	r3, r3
 3308 02b0 002B     		cmp	r3, #0
 3309 02b2 08D0     		beq	.L188
 3310              		.loc 1 808 0 is_stmt 0 discriminator 1
 3311 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3312 02b6 0C4A     		ldr	r2, .L355+4
 3313 02b8 1344     		add	r3, r3, r2
 3314 02ba 9B7E     		ldrb	r3, [r3, #26]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 75


 3315 02bc DBB2     		uxtb	r3, r3
 3316 02be 03F0F003 		and	r3, r3, #240
 3317 02c2 E02B     		cmp	r3, #224
 3318 02c4 04D0     		beq	.L189
 3319              	.L188:
 809:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3320              		.loc 1 809 0 is_stmt 1
 3321 02c6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 810:.\Protocolo.c **** 									return 0;
 3322              		.loc 1 810 0
 3323 02ca 0023     		movs	r3, #0
 3324 02cc 00F0D9BE 		b	.L167
 3325              	.L189:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3326              		.loc 1 806 0 discriminator 2
 3327 02d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3328 02d2 0133     		adds	r3, r3, #1
 3329 02d4 FB73     		strb	r3, [r7, #15]
 3330              	.L187:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3331              		.loc 1 806 0 is_stmt 0 discriminator 1
 3332 02d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3333 02d8 072B     		cmp	r3, #7
 3334 02da DAD9     		bls	.L190
 811:.\Protocolo.c **** 								}								
 812:.\Protocolo.c **** 							}
 813:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3335              		.loc 1 813 0 is_stmt 1
 3336 02dc 0023     		movs	r3, #0
 3337 02de FB73     		strb	r3, [r7, #15]
 3338 02e0 2DE0     		b	.L191
 3339              	.L356:
 3340 02e2 00BF     		.align	2
 3341              	.L355:
 3342 02e4 00000000 		.word	rx_timeout
 3343 02e8 00000000 		.word	lado1
 3344 02ec 00000000 		.word	version
 3345 02f0 00000000 		.word	Surtidor_rxBuffer
 3346              	.L194:
 814:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3347              		.loc 1 814 0
 3348 02f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3349 02f6 0C33     		adds	r3, r3, #12
 3350 02f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3351 02fa 2B32     		adds	r2, r2, #43
 3352 02fc B349     		ldr	r1, .L357
 3353 02fe 8A5C     		ldrb	r2, [r1, r2]
 3354 0300 D1B2     		uxtb	r1, r2
 3355 0302 B34A     		ldr	r2, .L357+4
 3356 0304 1344     		add	r3, r3, r2
 3357 0306 0A46     		mov	r2, r1
 3358 0308 9A76     		strb	r2, [r3, #26]
 815:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3359              		.loc 1 815 0
 3360 030a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3361 030c 0C33     		adds	r3, r3, #12
 3362 030e B04A     		ldr	r2, .L357+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 76


 3363 0310 1344     		add	r3, r3, r2
 3364 0312 9B7E     		ldrb	r3, [r3, #26]
 3365 0314 DBB2     		uxtb	r3, r3
 3366 0316 002B     		cmp	r3, #0
 3367 0318 09D0     		beq	.L192
 3368              		.loc 1 815 0 is_stmt 0 discriminator 1
 3369 031a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3370 031c 0C33     		adds	r3, r3, #12
 3371 031e AC4A     		ldr	r2, .L357+4
 3372 0320 1344     		add	r3, r3, r2
 3373 0322 9B7E     		ldrb	r3, [r3, #26]
 3374 0324 DBB2     		uxtb	r3, r3
 3375 0326 03F0F003 		and	r3, r3, #240
 3376 032a E02B     		cmp	r3, #224
 3377 032c 04D0     		beq	.L193
 3378              	.L192:
 816:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3379              		.loc 1 816 0 is_stmt 1
 3380 032e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 817:.\Protocolo.c **** 									return 0;
 3381              		.loc 1 817 0
 3382 0332 0023     		movs	r3, #0
 3383 0334 00F0A5BE 		b	.L167
 3384              	.L193:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3385              		.loc 1 813 0 discriminator 2
 3386 0338 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3387 033a 0133     		adds	r3, r3, #1
 3388 033c FB73     		strb	r3, [r7, #15]
 3389              	.L191:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3390              		.loc 1 813 0 is_stmt 0 discriminator 1
 3391 033e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3392 0340 072B     		cmp	r3, #7
 3393 0342 D7D9     		bls	.L194
 818:.\Protocolo.c **** 								}								
 819:.\Protocolo.c **** 							}
 820:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3394              		.loc 1 820 0 is_stmt 1
 3395 0344 0023     		movs	r3, #0
 3396 0346 FB73     		strb	r3, [r7, #15]
 3397 0348 0DE0     		b	.L195
 3398              	.L196:
 821:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3399              		.loc 1 821 0 discriminator 3
 3400 034a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3401 034c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3402 034e 3432     		adds	r2, r2, #52
 3403 0350 9E49     		ldr	r1, .L357
 3404 0352 8A5C     		ldrb	r2, [r1, r2]
 3405 0354 D1B2     		uxtb	r1, r2
 3406 0356 9E4A     		ldr	r2, .L357+4
 3407 0358 1344     		add	r3, r3, r2
 3408 035a 0A46     		mov	r2, r1
 3409 035c 83F84F20 		strb	r2, [r3, #79]
 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3410              		.loc 1 820 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 77


 3411 0360 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3412 0362 0133     		adds	r3, r3, #1
 3413 0364 FB73     		strb	r3, [r7, #15]
 3414              	.L195:
 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3415              		.loc 1 820 0 is_stmt 0 discriminator 1
 3416 0366 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3417 0368 032B     		cmp	r3, #3
 3418 036a EED9     		bls	.L196
 822:.\Protocolo.c **** 							}					
 823:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 3
 3419              		.loc 1 823 0 is_stmt 1
 3420 036c 0023     		movs	r3, #0
 3421 036e FB73     		strb	r3, [r7, #15]
 3422 0370 24E0     		b	.L197
 3423              	.L200:
 824:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3424              		.loc 1 824 0
 3425 0372 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3426 0374 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3427 0376 4032     		adds	r2, r2, #64
 3428 0378 9449     		ldr	r1, .L357
 3429 037a 8A5C     		ldrb	r2, [r1, r2]
 3430 037c D1B2     		uxtb	r1, r2
 3431 037e 944A     		ldr	r2, .L357+4
 3432 0380 1344     		add	r3, r3, r2
 3433 0382 0A46     		mov	r2, r1
 3434 0384 83F83220 		strb	r2, [r3, #50]
 825:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 3435              		.loc 1 825 0
 3436 0388 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3437 038a 914A     		ldr	r2, .L357+4
 3438 038c 1344     		add	r3, r3, r2
 3439 038e 93F83230 		ldrb	r3, [r3, #50]
 3440 0392 DBB2     		uxtb	r3, r3
 3441 0394 002B     		cmp	r3, #0
 3442 0396 09D0     		beq	.L198
 3443              		.loc 1 825 0 is_stmt 0 discriminator 1
 3444 0398 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3445 039a 8D4A     		ldr	r2, .L357+4
 3446 039c 1344     		add	r3, r3, r2
 3447 039e 93F83230 		ldrb	r3, [r3, #50]
 3448 03a2 DBB2     		uxtb	r3, r3
 3449 03a4 03F0F003 		and	r3, r3, #240
 3450 03a8 E02B     		cmp	r3, #224
 3451 03aa 04D0     		beq	.L199
 3452              	.L198:
 826:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3453              		.loc 1 826 0 is_stmt 1
 3454 03ac FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 827:.\Protocolo.c **** 									return 0;
 3455              		.loc 1 827 0
 3456 03b0 0023     		movs	r3, #0
 3457 03b2 00F066BE 		b	.L167
 3458              	.L199:
 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3459              		.loc 1 823 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 78


 3460 03b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3461 03b8 0133     		adds	r3, r3, #1
 3462 03ba FB73     		strb	r3, [r7, #15]
 3463              	.L197:
 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3464              		.loc 1 823 0 is_stmt 0 discriminator 1
 3465 03bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3466 03be 072B     		cmp	r3, #7
 3467 03c0 D7D9     		bls	.L200
 828:.\Protocolo.c **** 								}								
 829:.\Protocolo.c **** 							}
 830:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3468              		.loc 1 830 0 is_stmt 1
 3469 03c2 0023     		movs	r3, #0
 3470 03c4 FB73     		strb	r3, [r7, #15]
 3471 03c6 27E0     		b	.L201
 3472              	.L204:
 831:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3473              		.loc 1 831 0
 3474 03c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3475 03ca 0C33     		adds	r3, r3, #12
 3476 03cc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3477 03ce 4932     		adds	r2, r2, #73
 3478 03d0 7E49     		ldr	r1, .L357
 3479 03d2 8A5C     		ldrb	r2, [r1, r2]
 3480 03d4 D1B2     		uxtb	r1, r2
 3481 03d6 7E4A     		ldr	r2, .L357+4
 3482 03d8 1344     		add	r3, r3, r2
 3483 03da 0A46     		mov	r2, r1
 3484 03dc 83F83220 		strb	r2, [r3, #50]
 832:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 3485              		.loc 1 832 0
 3486 03e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3487 03e2 0C33     		adds	r3, r3, #12
 3488 03e4 7A4A     		ldr	r2, .L357+4
 3489 03e6 1344     		add	r3, r3, r2
 3490 03e8 93F83230 		ldrb	r3, [r3, #50]
 3491 03ec DBB2     		uxtb	r3, r3
 3492 03ee 002B     		cmp	r3, #0
 3493 03f0 0AD0     		beq	.L202
 3494              		.loc 1 832 0 is_stmt 0 discriminator 1
 3495 03f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3496 03f4 0C33     		adds	r3, r3, #12
 3497 03f6 764A     		ldr	r2, .L357+4
 3498 03f8 1344     		add	r3, r3, r2
 3499 03fa 93F83230 		ldrb	r3, [r3, #50]
 3500 03fe DBB2     		uxtb	r3, r3
 3501 0400 03F0F003 		and	r3, r3, #240
 3502 0404 E02B     		cmp	r3, #224
 3503 0406 04D0     		beq	.L203
 3504              	.L202:
 833:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3505              		.loc 1 833 0 is_stmt 1
 3506 0408 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 834:.\Protocolo.c **** 									return 0;
 3507              		.loc 1 834 0
 3508 040c 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 79


 3509 040e 00F038BE 		b	.L167
 3510              	.L203:
 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3511              		.loc 1 830 0 discriminator 2
 3512 0412 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3513 0414 0133     		adds	r3, r3, #1
 3514 0416 FB73     		strb	r3, [r7, #15]
 3515              	.L201:
 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3516              		.loc 1 830 0 is_stmt 0 discriminator 1
 3517 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3518 041a 072B     		cmp	r3, #7
 3519 041c D4D9     		bls	.L204
 835:.\Protocolo.c **** 								}								
 836:.\Protocolo.c **** 							}
 837:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3520              		.loc 1 837 0 is_stmt 1
 3521 041e 0023     		movs	r3, #0
 3522 0420 FB73     		strb	r3, [r7, #15]
 3523 0422 0DE0     		b	.L205
 3524              	.L206:
 838:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3525              		.loc 1 838 0 discriminator 3
 3526 0424 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3527 0426 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3528 0428 5232     		adds	r2, r2, #82
 3529 042a 6849     		ldr	r1, .L357
 3530 042c 8A5C     		ldrb	r2, [r1, r2]
 3531 042e D1B2     		uxtb	r1, r2
 3532 0430 674A     		ldr	r2, .L357+4
 3533 0432 1344     		add	r3, r3, r2
 3534 0434 0A46     		mov	r2, r1
 3535 0436 83F85420 		strb	r2, [r3, #84]
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3536              		.loc 1 837 0 discriminator 3
 3537 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3538 043c 0133     		adds	r3, r3, #1
 3539 043e FB73     		strb	r3, [r7, #15]
 3540              	.L205:
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3541              		.loc 1 837 0 is_stmt 0 discriminator 1
 3542 0440 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3543 0442 032B     		cmp	r3, #3
 3544 0444 EED9     		bls	.L206
 839:.\Protocolo.c **** 							}
 840:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3545              		.loc 1 840 0 is_stmt 1
 3546 0446 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 841:.\Protocolo.c ****     						return 3;                            
 3547              		.loc 1 841 0
 3548 044a 0323     		movs	r3, #3
 3549 044c 00F019BE 		b	.L167
 3550              	.L186:
 842:.\Protocolo.c **** 						}
 843:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3551              		.loc 1 843 0
 3552 0450 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 80


 844:.\Protocolo.c **** 						return 1;
 3553              		.loc 1 844 0
 3554 0454 0123     		movs	r3, #1
 3555 0456 00F014BE 		b	.L167
 3556              	.L159:
 845:.\Protocolo.c **** 					}
 846:.\Protocolo.c **** 					else{
 847:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3557              		.loc 1 847 0
 3558 045a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 848:.\Protocolo.c **** 						return 0;
 3559              		.loc 1 848 0
 3560 045e 0023     		movs	r3, #0
 3561 0460 00F00FBE 		b	.L167
 3562              	.L158:
 849:.\Protocolo.c **** 					}					
 850:.\Protocolo.c **** 				}
 851:.\Protocolo.c **** 				else{
 852:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 3563              		.loc 1 852 0
 3564 0464 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 853:.\Protocolo.c **** 					return 0;		
 3565              		.loc 1 853 0
 3566 0468 0023     		movs	r3, #0
 3567 046a 00F00ABE 		b	.L167
 3568              	.L156:
 854:.\Protocolo.c **** 				}
 855:.\Protocolo.c **** 			}
 856:.\Protocolo.c **** 			else{
 857:.\Protocolo.c **** 				CyDelay(900);
 3569              		.loc 1 857 0
 3570 046e 4FF46170 		mov	r0, #900
 3571 0472 FFF7FEFF 		bl	CyDelay
 858:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3572              		.loc 1 858 0
 3573 0476 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3574 047a 0346     		mov	r3, r0
 3575 047c FB73     		strb	r3, [r7, #15]
 859:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 3576              		.loc 1 859 0
 3577 047e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3578 0480 2E2B     		cmp	r3, #46
 3579 0482 06D0     		beq	.L207
 3580              		.loc 1 859 0 is_stmt 0 discriminator 1
 3581 0484 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3582 0486 582B     		cmp	r3, #88
 3583 0488 03D0     		beq	.L207
 3584              		.loc 1 859 0 discriminator 2
 3585 048a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3586 048c 822B     		cmp	r3, #130
 3587 048e 40F0F181 		bne	.L208
 3588              	.L207:
 860:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3589              		.loc 1 860 0 is_stmt 1
 3590 0492 4E4B     		ldr	r3, .L357
 3591 0494 1B78     		ldrb	r3, [r3]
 3592 0496 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 81


 3593 0498 FF2B     		cmp	r3, #255
 3594 049a 40F0E681 		bne	.L209
 3595              		.loc 1 860 0 is_stmt 0 discriminator 1
 3596 049e 4B4B     		ldr	r3, .L357
 3597 04a0 5B78     		ldrb	r3, [r3, #1]
 3598 04a2 DBB2     		uxtb	r3, r3
 3599 04a4 F62B     		cmp	r3, #246
 3600 04a6 40F0E081 		bne	.L209
 3601              		.loc 1 860 0 discriminator 2
 3602 04aa 484B     		ldr	r3, .L357
 3603 04ac DB78     		ldrb	r3, [r3, #3]
 3604 04ae DBB2     		uxtb	r3, r3
 3605 04b0 F92B     		cmp	r3, #249
 3606 04b2 40F0DA81 		bne	.L209
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3607              		.loc 1 861 0 is_stmt 1
 3608 04b6 0023     		movs	r3, #0
 3609 04b8 BB73     		strb	r3, [r7, #14]
 3610 04ba 16E0     		b	.L210
 3611              	.L213:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3612              		.loc 1 862 0
 3613 04bc 0023     		movs	r3, #0
 3614 04be FB73     		strb	r3, [r7, #15]
 3615 04c0 0DE0     		b	.L211
 3616              	.L212:
 863:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3617              		.loc 1 863 0 discriminator 3
 3618 04c2 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3619 04c4 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 3620 04c6 4248     		ldr	r0, .L357+4
 3621 04c8 1346     		mov	r3, r2
 3622 04ca 5B00     		lsls	r3, r3, #1
 3623 04cc 1344     		add	r3, r3, r2
 3624 04ce DB00     		lsls	r3, r3, #3
 3625 04d0 0B44     		add	r3, r3, r1
 3626 04d2 0344     		add	r3, r3, r0
 3627 04d4 0022     		movs	r2, #0
 3628 04d6 9A70     		strb	r2, [r3, #2]
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3629              		.loc 1 862 0 discriminator 3
 3630 04d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3631 04da 0133     		adds	r3, r3, #1
 3632 04dc FB73     		strb	r3, [r7, #15]
 3633              	.L211:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3634              		.loc 1 862 0 is_stmt 0 discriminator 1
 3635 04de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3636 04e0 172B     		cmp	r3, #23
 3637 04e2 EED9     		bls	.L212
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3638              		.loc 1 861 0 is_stmt 1 discriminator 2
 3639 04e4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3640 04e6 0133     		adds	r3, r3, #1
 3641 04e8 BB73     		strb	r3, [r7, #14]
 3642              	.L210:
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 82


 3643              		.loc 1 861 0 is_stmt 0 discriminator 1
 3644 04ea BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3645 04ec 022B     		cmp	r3, #2
 3646 04ee E5D9     		bls	.L213
 864:.\Protocolo.c ****                     		}
 865:.\Protocolo.c ****                     	}                        
 866:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3647              		.loc 1 866 0 is_stmt 1
 3648 04f0 0023     		movs	r3, #0
 3649 04f2 FB73     		strb	r3, [r7, #15]
 3650 04f4 21E0     		b	.L214
 3651              	.L217:
 867:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3652              		.loc 1 867 0
 3653 04f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3654 04f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3655 04fa 0432     		adds	r2, r2, #4
 3656 04fc 3349     		ldr	r1, .L357
 3657 04fe 8A5C     		ldrb	r2, [r1, r2]
 3658 0500 D1B2     		uxtb	r1, r2
 3659 0502 334A     		ldr	r2, .L357+4
 3660 0504 1344     		add	r3, r3, r2
 3661 0506 0A46     		mov	r2, r1
 3662 0508 9A70     		strb	r2, [r3, #2]
 868:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3663              		.loc 1 868 0
 3664 050a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3665 050c 304A     		ldr	r2, .L357+4
 3666 050e 1344     		add	r3, r3, r2
 3667 0510 9B78     		ldrb	r3, [r3, #2]
 3668 0512 DBB2     		uxtb	r3, r3
 3669 0514 002B     		cmp	r3, #0
 3670 0516 08D0     		beq	.L215
 3671              		.loc 1 868 0 is_stmt 0 discriminator 1
 3672 0518 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3673 051a 2D4A     		ldr	r2, .L357+4
 3674 051c 1344     		add	r3, r3, r2
 3675 051e 9B78     		ldrb	r3, [r3, #2]
 3676 0520 DBB2     		uxtb	r3, r3
 3677 0522 03F0F003 		and	r3, r3, #240
 3678 0526 E02B     		cmp	r3, #224
 3679 0528 04D0     		beq	.L216
 3680              	.L215:
 869:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3681              		.loc 1 869 0 is_stmt 1
 3682 052a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 870:.\Protocolo.c **** 								return 0;
 3683              		.loc 1 870 0
 3684 052e 0023     		movs	r3, #0
 3685 0530 00F0A7BD 		b	.L167
 3686              	.L216:
 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3687              		.loc 1 866 0 discriminator 2
 3688 0534 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3689 0536 0133     		adds	r3, r3, #1
 3690 0538 FB73     		strb	r3, [r7, #15]
 3691              	.L214:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 83


 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3692              		.loc 1 866 0 is_stmt 0 discriminator 1
 3693 053a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3694 053c 0B2B     		cmp	r3, #11
 3695 053e DAD9     		bls	.L217
 871:.\Protocolo.c **** 							}							
 872:.\Protocolo.c **** 						}
 873:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3696              		.loc 1 873 0 is_stmt 1
 3697 0540 0023     		movs	r3, #0
 3698 0542 FB73     		strb	r3, [r7, #15]
 3699 0544 24E0     		b	.L218
 3700              	.L221:
 874:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3701              		.loc 1 874 0
 3702 0546 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3703 0548 0C33     		adds	r3, r3, #12
 3704 054a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3705 054c 1132     		adds	r2, r2, #17
 3706 054e 1F49     		ldr	r1, .L357
 3707 0550 8A5C     		ldrb	r2, [r1, r2]
 3708 0552 D1B2     		uxtb	r1, r2
 3709 0554 1E4A     		ldr	r2, .L357+4
 3710 0556 1344     		add	r3, r3, r2
 3711 0558 0A46     		mov	r2, r1
 3712 055a 9A70     		strb	r2, [r3, #2]
 875:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3713              		.loc 1 875 0
 3714 055c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3715 055e 0C33     		adds	r3, r3, #12
 3716 0560 1B4A     		ldr	r2, .L357+4
 3717 0562 1344     		add	r3, r3, r2
 3718 0564 9B78     		ldrb	r3, [r3, #2]
 3719 0566 DBB2     		uxtb	r3, r3
 3720 0568 002B     		cmp	r3, #0
 3721 056a 09D0     		beq	.L219
 3722              		.loc 1 875 0 is_stmt 0 discriminator 1
 3723 056c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3724 056e 0C33     		adds	r3, r3, #12
 3725 0570 174A     		ldr	r2, .L357+4
 3726 0572 1344     		add	r3, r3, r2
 3727 0574 9B78     		ldrb	r3, [r3, #2]
 3728 0576 DBB2     		uxtb	r3, r3
 3729 0578 03F0F003 		and	r3, r3, #240
 3730 057c E02B     		cmp	r3, #224
 3731 057e 04D0     		beq	.L220
 3732              	.L219:
 876:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3733              		.loc 1 876 0 is_stmt 1
 3734 0580 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 877:.\Protocolo.c **** 								return 0;
 3735              		.loc 1 877 0
 3736 0584 0023     		movs	r3, #0
 3737 0586 00F07CBD 		b	.L167
 3738              	.L220:
 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3739              		.loc 1 873 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 84


 3740 058a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3741 058c 0133     		adds	r3, r3, #1
 3742 058e FB73     		strb	r3, [r7, #15]
 3743              	.L218:
 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3744              		.loc 1 873 0 is_stmt 0 discriminator 1
 3745 0590 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3746 0592 0B2B     		cmp	r3, #11
 3747 0594 D7D9     		bls	.L221
 878:.\Protocolo.c **** 							}							
 879:.\Protocolo.c **** 						}
 880:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3748              		.loc 1 880 0 is_stmt 1
 3749 0596 0023     		movs	r3, #0
 3750 0598 FB73     		strb	r3, [r7, #15]
 3751 059a 0DE0     		b	.L222
 3752              	.L223:
 881:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3753              		.loc 1 881 0 discriminator 3
 3754 059c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3755 059e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3756 05a0 1E32     		adds	r2, r2, #30
 3757 05a2 0A49     		ldr	r1, .L357
 3758 05a4 8A5C     		ldrb	r2, [r1, r2]
 3759 05a6 D1B2     		uxtb	r1, r2
 3760 05a8 094A     		ldr	r2, .L357+4
 3761 05aa 1344     		add	r3, r3, r2
 3762 05ac 0A46     		mov	r2, r1
 3763 05ae 83F84A20 		strb	r2, [r3, #74]
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3764              		.loc 1 880 0 discriminator 3
 3765 05b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3766 05b4 0133     		adds	r3, r3, #1
 3767 05b6 FB73     		strb	r3, [r7, #15]
 3768              	.L222:
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3769              		.loc 1 880 0 is_stmt 0 discriminator 1
 3770 05b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3771 05ba 042B     		cmp	r3, #4
 3772 05bc EED9     		bls	.L223
 882:.\Protocolo.c **** 						}				
 883:.\Protocolo.c **** 						if(nmangueras==2){
 3773              		.loc 1 883 0 is_stmt 1
 3774 05be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3775 05c0 022B     		cmp	r3, #2
 3776 05c2 70D1     		bne	.L224
 884:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3777              		.loc 1 884 0
 3778 05c4 0023     		movs	r3, #0
 3779 05c6 FB73     		strb	r3, [r7, #15]
 3780 05c8 26E0     		b	.L225
 3781              	.L358:
 3782 05ca 00BF     		.align	2
 3783              	.L357:
 3784 05cc 00000000 		.word	Surtidor_rxBuffer
 3785 05d0 00000000 		.word	lado1
 3786              	.L228:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 85


 885:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3787              		.loc 1 885 0
 3788 05d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3789 05d6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3790 05d8 2E32     		adds	r2, r2, #46
 3791 05da A949     		ldr	r1, .L359
 3792 05dc 8A5C     		ldrb	r2, [r1, r2]
 3793 05de D1B2     		uxtb	r1, r2
 3794 05e0 A84A     		ldr	r2, .L359+4
 3795 05e2 1344     		add	r3, r3, r2
 3796 05e4 0A46     		mov	r2, r1
 3797 05e6 9A76     		strb	r2, [r3, #26]
 886:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3798              		.loc 1 886 0
 3799 05e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3800 05ea A64A     		ldr	r2, .L359+4
 3801 05ec 1344     		add	r3, r3, r2
 3802 05ee 9B7E     		ldrb	r3, [r3, #26]
 3803 05f0 DBB2     		uxtb	r3, r3
 3804 05f2 002B     		cmp	r3, #0
 3805 05f4 08D0     		beq	.L226
 3806              		.loc 1 886 0 is_stmt 0 discriminator 1
 3807 05f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3808 05f8 A24A     		ldr	r2, .L359+4
 3809 05fa 1344     		add	r3, r3, r2
 3810 05fc 9B7E     		ldrb	r3, [r3, #26]
 3811 05fe DBB2     		uxtb	r3, r3
 3812 0600 03F0F003 		and	r3, r3, #240
 3813 0604 E02B     		cmp	r3, #224
 3814 0606 04D0     		beq	.L227
 3815              	.L226:
 887:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3816              		.loc 1 887 0 is_stmt 1
 3817 0608 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 888:.\Protocolo.c **** 									return 0;
 3818              		.loc 1 888 0
 3819 060c 0023     		movs	r3, #0
 3820 060e 00F038BD 		b	.L167
 3821              	.L227:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3822              		.loc 1 884 0 discriminator 2
 3823 0612 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3824 0614 0133     		adds	r3, r3, #1
 3825 0616 FB73     		strb	r3, [r7, #15]
 3826              	.L225:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3827              		.loc 1 884 0 is_stmt 0 discriminator 1
 3828 0618 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3829 061a 0B2B     		cmp	r3, #11
 3830 061c DAD9     		bls	.L228
 889:.\Protocolo.c **** 								}								
 890:.\Protocolo.c **** 							}
 891:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3831              		.loc 1 891 0 is_stmt 1
 3832 061e 0023     		movs	r3, #0
 3833 0620 FB73     		strb	r3, [r7, #15]
 3834 0622 24E0     		b	.L229
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 86


 3835              	.L232:
 892:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3836              		.loc 1 892 0
 3837 0624 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3838 0626 0C33     		adds	r3, r3, #12
 3839 0628 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3840 062a 3B32     		adds	r2, r2, #59
 3841 062c 9449     		ldr	r1, .L359
 3842 062e 8A5C     		ldrb	r2, [r1, r2]
 3843 0630 D1B2     		uxtb	r1, r2
 3844 0632 944A     		ldr	r2, .L359+4
 3845 0634 1344     		add	r3, r3, r2
 3846 0636 0A46     		mov	r2, r1
 3847 0638 9A76     		strb	r2, [r3, #26]
 893:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3848              		.loc 1 893 0
 3849 063a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3850 063c 0C33     		adds	r3, r3, #12
 3851 063e 914A     		ldr	r2, .L359+4
 3852 0640 1344     		add	r3, r3, r2
 3853 0642 9B7E     		ldrb	r3, [r3, #26]
 3854 0644 DBB2     		uxtb	r3, r3
 3855 0646 002B     		cmp	r3, #0
 3856 0648 09D0     		beq	.L230
 3857              		.loc 1 893 0 is_stmt 0 discriminator 1
 3858 064a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3859 064c 0C33     		adds	r3, r3, #12
 3860 064e 8D4A     		ldr	r2, .L359+4
 3861 0650 1344     		add	r3, r3, r2
 3862 0652 9B7E     		ldrb	r3, [r3, #26]
 3863 0654 DBB2     		uxtb	r3, r3
 3864 0656 03F0F003 		and	r3, r3, #240
 3865 065a E02B     		cmp	r3, #224
 3866 065c 04D0     		beq	.L231
 3867              	.L230:
 894:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3868              		.loc 1 894 0 is_stmt 1
 3869 065e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 895:.\Protocolo.c **** 									return 0;
 3870              		.loc 1 895 0
 3871 0662 0023     		movs	r3, #0
 3872 0664 00F00DBD 		b	.L167
 3873              	.L231:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3874              		.loc 1 891 0 discriminator 2
 3875 0668 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3876 066a 0133     		adds	r3, r3, #1
 3877 066c FB73     		strb	r3, [r7, #15]
 3878              	.L229:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3879              		.loc 1 891 0 is_stmt 0 discriminator 1
 3880 066e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3881 0670 0B2B     		cmp	r3, #11
 3882 0672 D7D9     		bls	.L232
 896:.\Protocolo.c **** 								}								
 897:.\Protocolo.c **** 							}
 898:.\Protocolo.c **** 							for(x=0;x<=4;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 87


 3883              		.loc 1 898 0 is_stmt 1
 3884 0674 0023     		movs	r3, #0
 3885 0676 FB73     		strb	r3, [r7, #15]
 3886 0678 0DE0     		b	.L233
 3887              	.L234:
 899:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3888              		.loc 1 899 0 discriminator 3
 3889 067a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3890 067c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3891 067e 4832     		adds	r2, r2, #72
 3892 0680 7F49     		ldr	r1, .L359
 3893 0682 8A5C     		ldrb	r2, [r1, r2]
 3894 0684 D1B2     		uxtb	r1, r2
 3895 0686 7F4A     		ldr	r2, .L359+4
 3896 0688 1344     		add	r3, r3, r2
 3897 068a 0A46     		mov	r2, r1
 3898 068c 83F84F20 		strb	r2, [r3, #79]
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3899              		.loc 1 898 0 discriminator 3
 3900 0690 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3901 0692 0133     		adds	r3, r3, #1
 3902 0694 FB73     		strb	r3, [r7, #15]
 3903              	.L233:
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3904              		.loc 1 898 0 is_stmt 0 discriminator 1
 3905 0696 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3906 0698 042B     		cmp	r3, #4
 3907 069a EED9     		bls	.L234
 900:.\Protocolo.c **** 							}
 901:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3908              		.loc 1 901 0 is_stmt 1
 3909 069c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 902:.\Protocolo.c ****     						return 2;                            
 3910              		.loc 1 902 0
 3911 06a0 0223     		movs	r3, #2
 3912 06a2 00F0EEBC 		b	.L167
 3913              	.L224:
 903:.\Protocolo.c **** 						}
 904:.\Protocolo.c **** 						if(nmangueras==3){
 3914              		.loc 1 904 0
 3915 06a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3916 06a8 032B     		cmp	r3, #3
 3917 06aa 40F0D980 		bne	.L235
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3918              		.loc 1 905 0
 3919 06ae 0023     		movs	r3, #0
 3920 06b0 FB73     		strb	r3, [r7, #15]
 3921 06b2 21E0     		b	.L236
 3922              	.L239:
 906:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3923              		.loc 1 906 0
 3924 06b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3925 06b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3926 06b8 2E32     		adds	r2, r2, #46
 3927 06ba 7149     		ldr	r1, .L359
 3928 06bc 8A5C     		ldrb	r2, [r1, r2]
 3929 06be D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 88


 3930 06c0 704A     		ldr	r2, .L359+4
 3931 06c2 1344     		add	r3, r3, r2
 3932 06c4 0A46     		mov	r2, r1
 3933 06c6 9A76     		strb	r2, [r3, #26]
 907:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3934              		.loc 1 907 0
 3935 06c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3936 06ca 6E4A     		ldr	r2, .L359+4
 3937 06cc 1344     		add	r3, r3, r2
 3938 06ce 9B7E     		ldrb	r3, [r3, #26]
 3939 06d0 DBB2     		uxtb	r3, r3
 3940 06d2 002B     		cmp	r3, #0
 3941 06d4 08D0     		beq	.L237
 3942              		.loc 1 907 0 is_stmt 0 discriminator 1
 3943 06d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3944 06d8 6A4A     		ldr	r2, .L359+4
 3945 06da 1344     		add	r3, r3, r2
 3946 06dc 9B7E     		ldrb	r3, [r3, #26]
 3947 06de DBB2     		uxtb	r3, r3
 3948 06e0 03F0F003 		and	r3, r3, #240
 3949 06e4 E02B     		cmp	r3, #224
 3950 06e6 04D0     		beq	.L238
 3951              	.L237:
 908:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3952              		.loc 1 908 0 is_stmt 1
 3953 06e8 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 909:.\Protocolo.c **** 									return 0;
 3954              		.loc 1 909 0
 3955 06ec 0023     		movs	r3, #0
 3956 06ee 00F0C8BC 		b	.L167
 3957              	.L238:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3958              		.loc 1 905 0 discriminator 2
 3959 06f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3960 06f4 0133     		adds	r3, r3, #1
 3961 06f6 FB73     		strb	r3, [r7, #15]
 3962              	.L236:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3963              		.loc 1 905 0 is_stmt 0 discriminator 1
 3964 06f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3965 06fa 0B2B     		cmp	r3, #11
 3966 06fc DAD9     		bls	.L239
 910:.\Protocolo.c **** 								}								
 911:.\Protocolo.c **** 							}
 912:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3967              		.loc 1 912 0 is_stmt 1
 3968 06fe 0023     		movs	r3, #0
 3969 0700 FB73     		strb	r3, [r7, #15]
 3970 0702 24E0     		b	.L240
 3971              	.L243:
 913:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3972              		.loc 1 913 0
 3973 0704 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3974 0706 0C33     		adds	r3, r3, #12
 3975 0708 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3976 070a 3B32     		adds	r2, r2, #59
 3977 070c 5C49     		ldr	r1, .L359
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 89


 3978 070e 8A5C     		ldrb	r2, [r1, r2]
 3979 0710 D1B2     		uxtb	r1, r2
 3980 0712 5C4A     		ldr	r2, .L359+4
 3981 0714 1344     		add	r3, r3, r2
 3982 0716 0A46     		mov	r2, r1
 3983 0718 9A76     		strb	r2, [r3, #26]
 914:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3984              		.loc 1 914 0
 3985 071a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3986 071c 0C33     		adds	r3, r3, #12
 3987 071e 594A     		ldr	r2, .L359+4
 3988 0720 1344     		add	r3, r3, r2
 3989 0722 9B7E     		ldrb	r3, [r3, #26]
 3990 0724 DBB2     		uxtb	r3, r3
 3991 0726 002B     		cmp	r3, #0
 3992 0728 09D0     		beq	.L241
 3993              		.loc 1 914 0 is_stmt 0 discriminator 1
 3994 072a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3995 072c 0C33     		adds	r3, r3, #12
 3996 072e 554A     		ldr	r2, .L359+4
 3997 0730 1344     		add	r3, r3, r2
 3998 0732 9B7E     		ldrb	r3, [r3, #26]
 3999 0734 DBB2     		uxtb	r3, r3
 4000 0736 03F0F003 		and	r3, r3, #240
 4001 073a E02B     		cmp	r3, #224
 4002 073c 04D0     		beq	.L242
 4003              	.L241:
 915:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4004              		.loc 1 915 0 is_stmt 1
 4005 073e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 916:.\Protocolo.c **** 									return 0;
 4006              		.loc 1 916 0
 4007 0742 0023     		movs	r3, #0
 4008 0744 00F09DBC 		b	.L167
 4009              	.L242:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4010              		.loc 1 912 0 discriminator 2
 4011 0748 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4012 074a 0133     		adds	r3, r3, #1
 4013 074c FB73     		strb	r3, [r7, #15]
 4014              	.L240:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4015              		.loc 1 912 0 is_stmt 0 discriminator 1
 4016 074e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4017 0750 0B2B     		cmp	r3, #11
 4018 0752 D7D9     		bls	.L243
 917:.\Protocolo.c **** 								}								
 918:.\Protocolo.c **** 							}
 919:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4019              		.loc 1 919 0 is_stmt 1
 4020 0754 0023     		movs	r3, #0
 4021 0756 FB73     		strb	r3, [r7, #15]
 4022 0758 0DE0     		b	.L244
 4023              	.L245:
 920:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4024              		.loc 1 920 0 discriminator 3
 4025 075a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 90


 4026 075c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4027 075e 4832     		adds	r2, r2, #72
 4028 0760 4749     		ldr	r1, .L359
 4029 0762 8A5C     		ldrb	r2, [r1, r2]
 4030 0764 D1B2     		uxtb	r1, r2
 4031 0766 474A     		ldr	r2, .L359+4
 4032 0768 1344     		add	r3, r3, r2
 4033 076a 0A46     		mov	r2, r1
 4034 076c 83F84F20 		strb	r2, [r3, #79]
 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4035              		.loc 1 919 0 discriminator 3
 4036 0770 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4037 0772 0133     		adds	r3, r3, #1
 4038 0774 FB73     		strb	r3, [r7, #15]
 4039              	.L244:
 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4040              		.loc 1 919 0 is_stmt 0 discriminator 1
 4041 0776 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4042 0778 042B     		cmp	r3, #4
 4043 077a EED9     		bls	.L245
 921:.\Protocolo.c **** 							}					
 922:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4044              		.loc 1 922 0 is_stmt 1
 4045 077c 0023     		movs	r3, #0
 4046 077e FB73     		strb	r3, [r7, #15]
 4047 0780 24E0     		b	.L246
 4048              	.L249:
 923:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4049              		.loc 1 923 0
 4050 0782 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4051 0784 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4052 0786 5832     		adds	r2, r2, #88
 4053 0788 3D49     		ldr	r1, .L359
 4054 078a 8A5C     		ldrb	r2, [r1, r2]
 4055 078c D1B2     		uxtb	r1, r2
 4056 078e 3D4A     		ldr	r2, .L359+4
 4057 0790 1344     		add	r3, r3, r2
 4058 0792 0A46     		mov	r2, r1
 4059 0794 83F83220 		strb	r2, [r3, #50]
 924:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 4060              		.loc 1 924 0
 4061 0798 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4062 079a 3A4A     		ldr	r2, .L359+4
 4063 079c 1344     		add	r3, r3, r2
 4064 079e 93F83230 		ldrb	r3, [r3, #50]
 4065 07a2 DBB2     		uxtb	r3, r3
 4066 07a4 002B     		cmp	r3, #0
 4067 07a6 09D0     		beq	.L247
 4068              		.loc 1 924 0 is_stmt 0 discriminator 1
 4069 07a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4070 07aa 364A     		ldr	r2, .L359+4
 4071 07ac 1344     		add	r3, r3, r2
 4072 07ae 93F83230 		ldrb	r3, [r3, #50]
 4073 07b2 DBB2     		uxtb	r3, r3
 4074 07b4 03F0F003 		and	r3, r3, #240
 4075 07b8 E02B     		cmp	r3, #224
 4076 07ba 04D0     		beq	.L248
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 91


 4077              	.L247:
 925:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4078              		.loc 1 925 0 is_stmt 1
 4079 07bc FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 926:.\Protocolo.c **** 									return 0;
 4080              		.loc 1 926 0
 4081 07c0 0023     		movs	r3, #0
 4082 07c2 00F05EBC 		b	.L167
 4083              	.L248:
 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4084              		.loc 1 922 0 discriminator 2
 4085 07c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4086 07c8 0133     		adds	r3, r3, #1
 4087 07ca FB73     		strb	r3, [r7, #15]
 4088              	.L246:
 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4089              		.loc 1 922 0 is_stmt 0 discriminator 1
 4090 07cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4091 07ce 0B2B     		cmp	r3, #11
 4092 07d0 D7D9     		bls	.L249
 927:.\Protocolo.c **** 								}								
 928:.\Protocolo.c **** 							}
 929:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4093              		.loc 1 929 0 is_stmt 1
 4094 07d2 0023     		movs	r3, #0
 4095 07d4 FB73     		strb	r3, [r7, #15]
 4096 07d6 27E0     		b	.L250
 4097              	.L253:
 930:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4098              		.loc 1 930 0
 4099 07d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4100 07da 0C33     		adds	r3, r3, #12
 4101 07dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4102 07de 6532     		adds	r2, r2, #101
 4103 07e0 2749     		ldr	r1, .L359
 4104 07e2 8A5C     		ldrb	r2, [r1, r2]
 4105 07e4 D1B2     		uxtb	r1, r2
 4106 07e6 274A     		ldr	r2, .L359+4
 4107 07e8 1344     		add	r3, r3, r2
 4108 07ea 0A46     		mov	r2, r1
 4109 07ec 83F83220 		strb	r2, [r3, #50]
 931:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 4110              		.loc 1 931 0
 4111 07f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4112 07f2 0C33     		adds	r3, r3, #12
 4113 07f4 234A     		ldr	r2, .L359+4
 4114 07f6 1344     		add	r3, r3, r2
 4115 07f8 93F83230 		ldrb	r3, [r3, #50]
 4116 07fc DBB2     		uxtb	r3, r3
 4117 07fe 002B     		cmp	r3, #0
 4118 0800 0AD0     		beq	.L251
 4119              		.loc 1 931 0 is_stmt 0 discriminator 1
 4120 0802 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4121 0804 0C33     		adds	r3, r3, #12
 4122 0806 1F4A     		ldr	r2, .L359+4
 4123 0808 1344     		add	r3, r3, r2
 4124 080a 93F83230 		ldrb	r3, [r3, #50]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 92


 4125 080e DBB2     		uxtb	r3, r3
 4126 0810 03F0F003 		and	r3, r3, #240
 4127 0814 E02B     		cmp	r3, #224
 4128 0816 04D0     		beq	.L252
 4129              	.L251:
 932:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4130              		.loc 1 932 0 is_stmt 1
 4131 0818 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 933:.\Protocolo.c **** 									return 0;
 4132              		.loc 1 933 0
 4133 081c 0023     		movs	r3, #0
 4134 081e 00F030BC 		b	.L167
 4135              	.L252:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4136              		.loc 1 929 0 discriminator 2
 4137 0822 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4138 0824 0133     		adds	r3, r3, #1
 4139 0826 FB73     		strb	r3, [r7, #15]
 4140              	.L250:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4141              		.loc 1 929 0 is_stmt 0 discriminator 1
 4142 0828 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4143 082a 0B2B     		cmp	r3, #11
 4144 082c D4D9     		bls	.L253
 934:.\Protocolo.c **** 								}								
 935:.\Protocolo.c **** 							}
 936:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4145              		.loc 1 936 0 is_stmt 1
 4146 082e 0023     		movs	r3, #0
 4147 0830 FB73     		strb	r3, [r7, #15]
 4148 0832 0DE0     		b	.L254
 4149              	.L255:
 937:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4150              		.loc 1 937 0 discriminator 3
 4151 0834 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4152 0836 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4153 0838 7232     		adds	r2, r2, #114
 4154 083a 1149     		ldr	r1, .L359
 4155 083c 8A5C     		ldrb	r2, [r1, r2]
 4156 083e D1B2     		uxtb	r1, r2
 4157 0840 104A     		ldr	r2, .L359+4
 4158 0842 1344     		add	r3, r3, r2
 4159 0844 0A46     		mov	r2, r1
 4160 0846 83F85420 		strb	r2, [r3, #84]
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4161              		.loc 1 936 0 discriminator 3
 4162 084a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4163 084c 0133     		adds	r3, r3, #1
 4164 084e FB73     		strb	r3, [r7, #15]
 4165              	.L254:
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4166              		.loc 1 936 0 is_stmt 0 discriminator 1
 4167 0850 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4168 0852 042B     		cmp	r3, #4
 4169 0854 EED9     		bls	.L255
 938:.\Protocolo.c **** 							}
 939:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 93


 4170              		.loc 1 939 0 is_stmt 1
 4171 0856 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 940:.\Protocolo.c ****     						return 3;                            
 4172              		.loc 1 940 0
 4173 085a 0323     		movs	r3, #3
 4174 085c 00F011BC 		b	.L167
 4175              	.L235:
 941:.\Protocolo.c **** 						}
 942:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4176              		.loc 1 942 0
 4177 0860 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 943:.\Protocolo.c **** 						return 1;			
 4178              		.loc 1 943 0
 4179 0864 0123     		movs	r3, #1
 4180 0866 00F00CBC 		b	.L167
 4181              	.L209:
 944:.\Protocolo.c **** 					}
 945:.\Protocolo.c **** 					else{
 946:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4182              		.loc 1 946 0
 4183 086a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 947:.\Protocolo.c **** 						return 0;					
 4184              		.loc 1 947 0
 4185 086e 0023     		movs	r3, #0
 4186 0870 00F007BC 		b	.L167
 4187              	.L208:
 948:.\Protocolo.c **** 					}
 949:.\Protocolo.c **** 				}
 950:.\Protocolo.c **** 				else{
 951:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4188              		.loc 1 951 0
 4189 0874 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 952:.\Protocolo.c **** 					return 0;		
 4190              		.loc 1 952 0
 4191 0878 0023     		movs	r3, #0
 4192 087a 00F002BC 		b	.L167
 4193              	.L360:
 4194 087e 00BF     		.align	2
 4195              	.L359:
 4196 0880 00000000 		.word	Surtidor_rxBuffer
 4197 0884 00000000 		.word	lado1
 4198              	.L155:
 953:.\Protocolo.c **** 				}	
 954:.\Protocolo.c **** 			}
 955:.\Protocolo.c **** 		}
 956:.\Protocolo.c **** 		else{
 957:.\Protocolo.c **** 			if(version[1]!=7){
 4199              		.loc 1 957 0
 4200 0888 A24B     		ldr	r3, .L361
 4201 088a 5B78     		ldrb	r3, [r3, #1]
 4202 088c DBB2     		uxtb	r3, r3
 4203 088e 072B     		cmp	r3, #7
 4204 0890 00F0FC81 		beq	.L256
 958:.\Protocolo.c **** 				CyDelay(900);
 4205              		.loc 1 958 0
 4206 0894 4FF46170 		mov	r0, #900
 4207 0898 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 94


 959:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4208              		.loc 1 959 0
 4209 089c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4210 08a0 0346     		mov	r3, r0
 4211 08a2 FB73     		strb	r3, [r7, #15]
 960:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){				
 4212              		.loc 1 960 0
 4213 08a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4214 08a6 222B     		cmp	r3, #34
 4215 08a8 06D0     		beq	.L257
 4216              		.loc 1 960 0 is_stmt 0 discriminator 1
 4217 08aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4218 08ac 402B     		cmp	r3, #64
 4219 08ae 03D0     		beq	.L257
 4220              		.loc 1 960 0 discriminator 2
 4221 08b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4222 08b2 5E2B     		cmp	r3, #94
 4223 08b4 40F0E681 		bne	.L258
 4224              	.L257:
 961:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4225              		.loc 1 961 0 is_stmt 1
 4226 08b8 974B     		ldr	r3, .L361+4
 4227 08ba 1B78     		ldrb	r3, [r3]
 4228 08bc DBB2     		uxtb	r3, r3
 4229 08be FF2B     		cmp	r3, #255
 4230 08c0 40F0DC81 		bne	.L259
 4231              		.loc 1 961 0 is_stmt 0 discriminator 1
 4232 08c4 944B     		ldr	r3, .L361+4
 4233 08c6 5B78     		ldrb	r3, [r3, #1]
 4234 08c8 DBB2     		uxtb	r3, r3
 4235 08ca F62B     		cmp	r3, #246
 4236 08cc 40F0D681 		bne	.L259
 4237              		.loc 1 961 0 discriminator 2
 4238 08d0 914B     		ldr	r3, .L361+4
 4239 08d2 DB78     		ldrb	r3, [r3, #3]
 4240 08d4 DBB2     		uxtb	r3, r3
 4241 08d6 F92B     		cmp	r3, #249
 4242 08d8 40F0D081 		bne	.L259
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4243              		.loc 1 962 0 is_stmt 1
 4244 08dc 0023     		movs	r3, #0
 4245 08de BB73     		strb	r3, [r7, #14]
 4246 08e0 16E0     		b	.L260
 4247              	.L263:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4248              		.loc 1 963 0
 4249 08e2 0023     		movs	r3, #0
 4250 08e4 FB73     		strb	r3, [r7, #15]
 4251 08e6 0DE0     		b	.L261
 4252              	.L262:
 964:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4253              		.loc 1 964 0 discriminator 3
 4254 08e8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4255 08ea F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4256 08ec 8B48     		ldr	r0, .L361+8
 4257 08ee 1346     		mov	r3, r2
 4258 08f0 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 95


 4259 08f2 1344     		add	r3, r3, r2
 4260 08f4 DB00     		lsls	r3, r3, #3
 4261 08f6 0B44     		add	r3, r3, r1
 4262 08f8 0344     		add	r3, r3, r0
 4263 08fa 0022     		movs	r2, #0
 4264 08fc 9A70     		strb	r2, [r3, #2]
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4265              		.loc 1 963 0 discriminator 3
 4266 08fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4267 0900 0133     		adds	r3, r3, #1
 4268 0902 FB73     		strb	r3, [r7, #15]
 4269              	.L261:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4270              		.loc 1 963 0 is_stmt 0 discriminator 1
 4271 0904 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4272 0906 172B     		cmp	r3, #23
 4273 0908 EED9     		bls	.L262
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4274              		.loc 1 962 0 is_stmt 1 discriminator 2
 4275 090a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4276 090c 0133     		adds	r3, r3, #1
 4277 090e BB73     		strb	r3, [r7, #14]
 4278              	.L260:
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4279              		.loc 1 962 0 is_stmt 0 discriminator 1
 4280 0910 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4281 0912 022B     		cmp	r3, #2
 4282 0914 E5D9     		bls	.L263
 965:.\Protocolo.c ****                     		}
 966:.\Protocolo.c ****                     	}                        
 967:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4283              		.loc 1 967 0 is_stmt 1
 4284 0916 0023     		movs	r3, #0
 4285 0918 FB73     		strb	r3, [r7, #15]
 4286 091a 20E0     		b	.L264
 4287              	.L267:
 968:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4288              		.loc 1 968 0
 4289 091c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4290 091e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4291 0920 0432     		adds	r2, r2, #4
 4292 0922 7D49     		ldr	r1, .L361+4
 4293 0924 8A5C     		ldrb	r2, [r1, r2]
 4294 0926 D1B2     		uxtb	r1, r2
 4295 0928 7C4A     		ldr	r2, .L361+8
 4296 092a 1344     		add	r3, r3, r2
 4297 092c 0A46     		mov	r2, r1
 4298 092e 9A70     		strb	r2, [r3, #2]
 969:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4299              		.loc 1 969 0
 4300 0930 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4301 0932 7A4A     		ldr	r2, .L361+8
 4302 0934 1344     		add	r3, r3, r2
 4303 0936 9B78     		ldrb	r3, [r3, #2]
 4304 0938 DBB2     		uxtb	r3, r3
 4305 093a 002B     		cmp	r3, #0
 4306 093c 08D0     		beq	.L265
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 96


 4307              		.loc 1 969 0 is_stmt 0 discriminator 1
 4308 093e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4309 0940 764A     		ldr	r2, .L361+8
 4310 0942 1344     		add	r3, r3, r2
 4311 0944 9B78     		ldrb	r3, [r3, #2]
 4312 0946 DBB2     		uxtb	r3, r3
 4313 0948 03F0F003 		and	r3, r3, #240
 4314 094c E02B     		cmp	r3, #224
 4315 094e 03D0     		beq	.L266
 4316              	.L265:
 970:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4317              		.loc 1 970 0 is_stmt 1
 4318 0950 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 971:.\Protocolo.c **** 								return 0;
 4319              		.loc 1 971 0
 4320 0954 0023     		movs	r3, #0
 4321 0956 94E3     		b	.L167
 4322              	.L266:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4323              		.loc 1 967 0 discriminator 2
 4324 0958 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4325 095a 0133     		adds	r3, r3, #1
 4326 095c FB73     		strb	r3, [r7, #15]
 4327              	.L264:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4328              		.loc 1 967 0 is_stmt 0 discriminator 1
 4329 095e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4330 0960 072B     		cmp	r3, #7
 4331 0962 DBD9     		bls	.L267
 972:.\Protocolo.c **** 							}							
 973:.\Protocolo.c **** 						}
 974:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4332              		.loc 1 974 0 is_stmt 1
 4333 0964 0023     		movs	r3, #0
 4334 0966 FB73     		strb	r3, [r7, #15]
 4335 0968 23E0     		b	.L268
 4336              	.L271:
 975:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4337              		.loc 1 975 0
 4338 096a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4339 096c 0C33     		adds	r3, r3, #12
 4340 096e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4341 0970 0D32     		adds	r2, r2, #13
 4342 0972 6949     		ldr	r1, .L361+4
 4343 0974 8A5C     		ldrb	r2, [r1, r2]
 4344 0976 D1B2     		uxtb	r1, r2
 4345 0978 684A     		ldr	r2, .L361+8
 4346 097a 1344     		add	r3, r3, r2
 4347 097c 0A46     		mov	r2, r1
 4348 097e 9A70     		strb	r2, [r3, #2]
 976:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4349              		.loc 1 976 0
 4350 0980 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4351 0982 0C33     		adds	r3, r3, #12
 4352 0984 654A     		ldr	r2, .L361+8
 4353 0986 1344     		add	r3, r3, r2
 4354 0988 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 97


 4355 098a DBB2     		uxtb	r3, r3
 4356 098c 002B     		cmp	r3, #0
 4357 098e 09D0     		beq	.L269
 4358              		.loc 1 976 0 is_stmt 0 discriminator 1
 4359 0990 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4360 0992 0C33     		adds	r3, r3, #12
 4361 0994 614A     		ldr	r2, .L361+8
 4362 0996 1344     		add	r3, r3, r2
 4363 0998 9B78     		ldrb	r3, [r3, #2]
 4364 099a DBB2     		uxtb	r3, r3
 4365 099c 03F0F003 		and	r3, r3, #240
 4366 09a0 E02B     		cmp	r3, #224
 4367 09a2 03D0     		beq	.L270
 4368              	.L269:
 977:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4369              		.loc 1 977 0 is_stmt 1
 4370 09a4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 978:.\Protocolo.c **** 								return 0;
 4371              		.loc 1 978 0
 4372 09a8 0023     		movs	r3, #0
 4373 09aa 6AE3     		b	.L167
 4374              	.L270:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4375              		.loc 1 974 0 discriminator 2
 4376 09ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4377 09ae 0133     		adds	r3, r3, #1
 4378 09b0 FB73     		strb	r3, [r7, #15]
 4379              	.L268:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4380              		.loc 1 974 0 is_stmt 0 discriminator 1
 4381 09b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4382 09b4 072B     		cmp	r3, #7
 4383 09b6 D8D9     		bls	.L271
 979:.\Protocolo.c **** 							}							
 980:.\Protocolo.c **** 						}
 981:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 4384              		.loc 1 981 0 is_stmt 1
 4385 09b8 0023     		movs	r3, #0
 4386 09ba FB73     		strb	r3, [r7, #15]
 4387 09bc 0DE0     		b	.L272
 4388              	.L273:
 982:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4389              		.loc 1 982 0 discriminator 3
 4390 09be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4391 09c0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4392 09c2 1632     		adds	r2, r2, #22
 4393 09c4 5449     		ldr	r1, .L361+4
 4394 09c6 8A5C     		ldrb	r2, [r1, r2]
 4395 09c8 D1B2     		uxtb	r1, r2
 4396 09ca 544A     		ldr	r2, .L361+8
 4397 09cc 1344     		add	r3, r3, r2
 4398 09ce 0A46     		mov	r2, r1
 4399 09d0 83F84A20 		strb	r2, [r3, #74]
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4400              		.loc 1 981 0 discriminator 3
 4401 09d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4402 09d6 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 98


 4403 09d8 FB73     		strb	r3, [r7, #15]
 4404              	.L272:
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4405              		.loc 1 981 0 is_stmt 0 discriminator 1
 4406 09da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4407 09dc 032B     		cmp	r3, #3
 4408 09de EED9     		bls	.L273
 983:.\Protocolo.c **** 						}				
 984:.\Protocolo.c **** 						if(nmangueras==2){
 4409              		.loc 1 984 0 is_stmt 1
 4410 09e0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4411 09e2 022B     		cmp	r3, #2
 4412 09e4 68D1     		bne	.L274
 985:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4413              		.loc 1 985 0
 4414 09e6 0023     		movs	r3, #0
 4415 09e8 FB73     		strb	r3, [r7, #15]
 4416 09ea 20E0     		b	.L275
 4417              	.L278:
 986:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4418              		.loc 1 986 0
 4419 09ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4420 09ee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4421 09f0 2232     		adds	r2, r2, #34
 4422 09f2 4949     		ldr	r1, .L361+4
 4423 09f4 8A5C     		ldrb	r2, [r1, r2]
 4424 09f6 D1B2     		uxtb	r1, r2
 4425 09f8 484A     		ldr	r2, .L361+8
 4426 09fa 1344     		add	r3, r3, r2
 4427 09fc 0A46     		mov	r2, r1
 4428 09fe 9A76     		strb	r2, [r3, #26]
 987:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4429              		.loc 1 987 0
 4430 0a00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4431 0a02 464A     		ldr	r2, .L361+8
 4432 0a04 1344     		add	r3, r3, r2
 4433 0a06 9B7E     		ldrb	r3, [r3, #26]
 4434 0a08 DBB2     		uxtb	r3, r3
 4435 0a0a 002B     		cmp	r3, #0
 4436 0a0c 08D0     		beq	.L276
 4437              		.loc 1 987 0 is_stmt 0 discriminator 1
 4438 0a0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4439 0a10 424A     		ldr	r2, .L361+8
 4440 0a12 1344     		add	r3, r3, r2
 4441 0a14 9B7E     		ldrb	r3, [r3, #26]
 4442 0a16 DBB2     		uxtb	r3, r3
 4443 0a18 03F0F003 		and	r3, r3, #240
 4444 0a1c E02B     		cmp	r3, #224
 4445 0a1e 03D0     		beq	.L277
 4446              	.L276:
 988:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4447              		.loc 1 988 0 is_stmt 1
 4448 0a20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 989:.\Protocolo.c **** 									return 0;
 4449              		.loc 1 989 0
 4450 0a24 0023     		movs	r3, #0
 4451 0a26 2CE3     		b	.L167
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 99


 4452              	.L277:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4453              		.loc 1 985 0 discriminator 2
 4454 0a28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4455 0a2a 0133     		adds	r3, r3, #1
 4456 0a2c FB73     		strb	r3, [r7, #15]
 4457              	.L275:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4458              		.loc 1 985 0 is_stmt 0 discriminator 1
 4459 0a2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4460 0a30 072B     		cmp	r3, #7
 4461 0a32 DBD9     		bls	.L278
 990:.\Protocolo.c **** 								}								
 991:.\Protocolo.c **** 							}
 992:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4462              		.loc 1 992 0 is_stmt 1
 4463 0a34 0023     		movs	r3, #0
 4464 0a36 FB73     		strb	r3, [r7, #15]
 4465 0a38 23E0     		b	.L279
 4466              	.L282:
 993:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4467              		.loc 1 993 0
 4468 0a3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4469 0a3c 0C33     		adds	r3, r3, #12
 4470 0a3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4471 0a40 2B32     		adds	r2, r2, #43
 4472 0a42 3549     		ldr	r1, .L361+4
 4473 0a44 8A5C     		ldrb	r2, [r1, r2]
 4474 0a46 D1B2     		uxtb	r1, r2
 4475 0a48 344A     		ldr	r2, .L361+8
 4476 0a4a 1344     		add	r3, r3, r2
 4477 0a4c 0A46     		mov	r2, r1
 4478 0a4e 9A76     		strb	r2, [r3, #26]
 994:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4479              		.loc 1 994 0
 4480 0a50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4481 0a52 0C33     		adds	r3, r3, #12
 4482 0a54 314A     		ldr	r2, .L361+8
 4483 0a56 1344     		add	r3, r3, r2
 4484 0a58 9B7E     		ldrb	r3, [r3, #26]
 4485 0a5a DBB2     		uxtb	r3, r3
 4486 0a5c 002B     		cmp	r3, #0
 4487 0a5e 09D0     		beq	.L280
 4488              		.loc 1 994 0 is_stmt 0 discriminator 1
 4489 0a60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4490 0a62 0C33     		adds	r3, r3, #12
 4491 0a64 2D4A     		ldr	r2, .L361+8
 4492 0a66 1344     		add	r3, r3, r2
 4493 0a68 9B7E     		ldrb	r3, [r3, #26]
 4494 0a6a DBB2     		uxtb	r3, r3
 4495 0a6c 03F0F003 		and	r3, r3, #240
 4496 0a70 E02B     		cmp	r3, #224
 4497 0a72 03D0     		beq	.L281
 4498              	.L280:
 995:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4499              		.loc 1 995 0 is_stmt 1
 4500 0a74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 100


 996:.\Protocolo.c **** 									return 0;
 4501              		.loc 1 996 0
 4502 0a78 0023     		movs	r3, #0
 4503 0a7a 02E3     		b	.L167
 4504              	.L281:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4505              		.loc 1 992 0 discriminator 2
 4506 0a7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4507 0a7e 0133     		adds	r3, r3, #1
 4508 0a80 FB73     		strb	r3, [r7, #15]
 4509              	.L279:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4510              		.loc 1 992 0 is_stmt 0 discriminator 1
 4511 0a82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4512 0a84 072B     		cmp	r3, #7
 4513 0a86 D8D9     		bls	.L282
 997:.\Protocolo.c **** 								}								
 998:.\Protocolo.c **** 							}
 999:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4514              		.loc 1 999 0 is_stmt 1
 4515 0a88 0023     		movs	r3, #0
 4516 0a8a FB73     		strb	r3, [r7, #15]
 4517 0a8c 0DE0     		b	.L283
 4518              	.L284:
1000:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4519              		.loc 1 1000 0 discriminator 3
 4520 0a8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4521 0a90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4522 0a92 3432     		adds	r2, r2, #52
 4523 0a94 2049     		ldr	r1, .L361+4
 4524 0a96 8A5C     		ldrb	r2, [r1, r2]
 4525 0a98 D1B2     		uxtb	r1, r2
 4526 0a9a 204A     		ldr	r2, .L361+8
 4527 0a9c 1344     		add	r3, r3, r2
 4528 0a9e 0A46     		mov	r2, r1
 4529 0aa0 83F84F20 		strb	r2, [r3, #79]
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4530              		.loc 1 999 0 discriminator 3
 4531 0aa4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4532 0aa6 0133     		adds	r3, r3, #1
 4533 0aa8 FB73     		strb	r3, [r7, #15]
 4534              	.L283:
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4535              		.loc 1 999 0 is_stmt 0 discriminator 1
 4536 0aaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4537 0aac 032B     		cmp	r3, #3
 4538 0aae EED9     		bls	.L284
1001:.\Protocolo.c **** 							}
1002:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4539              		.loc 1 1002 0 is_stmt 1
 4540 0ab0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1003:.\Protocolo.c ****     						return 2;                            
 4541              		.loc 1 1003 0
 4542 0ab4 0223     		movs	r3, #2
 4543 0ab6 E4E2     		b	.L167
 4544              	.L274:
1004:.\Protocolo.c **** 						}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 101


1005:.\Protocolo.c **** 						if(nmangueras==3){
 4545              		.loc 1 1005 0
 4546 0ab8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4547 0aba 032B     		cmp	r3, #3
 4548 0abc 40F0DA80 		bne	.L285
1006:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4549              		.loc 1 1006 0
 4550 0ac0 0023     		movs	r3, #0
 4551 0ac2 FB73     		strb	r3, [r7, #15]
 4552 0ac4 20E0     		b	.L286
 4553              	.L289:
1007:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4554              		.loc 1 1007 0
 4555 0ac6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4556 0ac8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4557 0aca 2232     		adds	r2, r2, #34
 4558 0acc 1249     		ldr	r1, .L361+4
 4559 0ace 8A5C     		ldrb	r2, [r1, r2]
 4560 0ad0 D1B2     		uxtb	r1, r2
 4561 0ad2 124A     		ldr	r2, .L361+8
 4562 0ad4 1344     		add	r3, r3, r2
 4563 0ad6 0A46     		mov	r2, r1
 4564 0ad8 9A76     		strb	r2, [r3, #26]
1008:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4565              		.loc 1 1008 0
 4566 0ada FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4567 0adc 0F4A     		ldr	r2, .L361+8
 4568 0ade 1344     		add	r3, r3, r2
 4569 0ae0 9B7E     		ldrb	r3, [r3, #26]
 4570 0ae2 DBB2     		uxtb	r3, r3
 4571 0ae4 002B     		cmp	r3, #0
 4572 0ae6 08D0     		beq	.L287
 4573              		.loc 1 1008 0 is_stmt 0 discriminator 1
 4574 0ae8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4575 0aea 0C4A     		ldr	r2, .L361+8
 4576 0aec 1344     		add	r3, r3, r2
 4577 0aee 9B7E     		ldrb	r3, [r3, #26]
 4578 0af0 DBB2     		uxtb	r3, r3
 4579 0af2 03F0F003 		and	r3, r3, #240
 4580 0af6 E02B     		cmp	r3, #224
 4581 0af8 03D0     		beq	.L288
 4582              	.L287:
1009:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4583              		.loc 1 1009 0 is_stmt 1
 4584 0afa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1010:.\Protocolo.c **** 									return 0;
 4585              		.loc 1 1010 0
 4586 0afe 0023     		movs	r3, #0
 4587 0b00 BFE2     		b	.L167
 4588              	.L288:
1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4589              		.loc 1 1006 0 discriminator 2
 4590 0b02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4591 0b04 0133     		adds	r3, r3, #1
 4592 0b06 FB73     		strb	r3, [r7, #15]
 4593              	.L286:
1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 102


 4594              		.loc 1 1006 0 is_stmt 0 discriminator 1
 4595 0b08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4596 0b0a 072B     		cmp	r3, #7
 4597 0b0c DBD9     		bls	.L289
1011:.\Protocolo.c **** 								}								
1012:.\Protocolo.c **** 							}
1013:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4598              		.loc 1 1013 0 is_stmt 1
 4599 0b0e 0023     		movs	r3, #0
 4600 0b10 FB73     		strb	r3, [r7, #15]
 4601 0b12 29E0     		b	.L290
 4602              	.L362:
 4603              		.align	2
 4604              	.L361:
 4605 0b14 00000000 		.word	version
 4606 0b18 00000000 		.word	Surtidor_rxBuffer
 4607 0b1c 00000000 		.word	lado2
 4608              	.L293:
1014:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4609              		.loc 1 1014 0
 4610 0b20 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4611 0b22 0C33     		adds	r3, r3, #12
 4612 0b24 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4613 0b26 2B32     		adds	r2, r2, #43
 4614 0b28 AE49     		ldr	r1, .L363
 4615 0b2a 8A5C     		ldrb	r2, [r1, r2]
 4616 0b2c D1B2     		uxtb	r1, r2
 4617 0b2e AE4A     		ldr	r2, .L363+4
 4618 0b30 1344     		add	r3, r3, r2
 4619 0b32 0A46     		mov	r2, r1
 4620 0b34 9A76     		strb	r2, [r3, #26]
1015:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4621              		.loc 1 1015 0
 4622 0b36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4623 0b38 0C33     		adds	r3, r3, #12
 4624 0b3a AB4A     		ldr	r2, .L363+4
 4625 0b3c 1344     		add	r3, r3, r2
 4626 0b3e 9B7E     		ldrb	r3, [r3, #26]
 4627 0b40 DBB2     		uxtb	r3, r3
 4628 0b42 002B     		cmp	r3, #0
 4629 0b44 09D0     		beq	.L291
 4630              		.loc 1 1015 0 is_stmt 0 discriminator 1
 4631 0b46 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4632 0b48 0C33     		adds	r3, r3, #12
 4633 0b4a A74A     		ldr	r2, .L363+4
 4634 0b4c 1344     		add	r3, r3, r2
 4635 0b4e 9B7E     		ldrb	r3, [r3, #26]
 4636 0b50 DBB2     		uxtb	r3, r3
 4637 0b52 03F0F003 		and	r3, r3, #240
 4638 0b56 E02B     		cmp	r3, #224
 4639 0b58 03D0     		beq	.L292
 4640              	.L291:
1016:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4641              		.loc 1 1016 0 is_stmt 1
 4642 0b5a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1017:.\Protocolo.c **** 									return 0;
 4643              		.loc 1 1017 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 103


 4644 0b5e 0023     		movs	r3, #0
 4645 0b60 8FE2     		b	.L167
 4646              	.L292:
1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4647              		.loc 1 1013 0 discriminator 2
 4648 0b62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4649 0b64 0133     		adds	r3, r3, #1
 4650 0b66 FB73     		strb	r3, [r7, #15]
 4651              	.L290:
1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4652              		.loc 1 1013 0 is_stmt 0 discriminator 1
 4653 0b68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4654 0b6a 072B     		cmp	r3, #7
 4655 0b6c D8D9     		bls	.L293
1018:.\Protocolo.c **** 								}								
1019:.\Protocolo.c **** 							}
1020:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4656              		.loc 1 1020 0 is_stmt 1
 4657 0b6e 0023     		movs	r3, #0
 4658 0b70 FB73     		strb	r3, [r7, #15]
 4659 0b72 0DE0     		b	.L294
 4660              	.L295:
1021:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4661              		.loc 1 1021 0 discriminator 3
 4662 0b74 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4663 0b76 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4664 0b78 3432     		adds	r2, r2, #52
 4665 0b7a 9A49     		ldr	r1, .L363
 4666 0b7c 8A5C     		ldrb	r2, [r1, r2]
 4667 0b7e D1B2     		uxtb	r1, r2
 4668 0b80 994A     		ldr	r2, .L363+4
 4669 0b82 1344     		add	r3, r3, r2
 4670 0b84 0A46     		mov	r2, r1
 4671 0b86 83F84F20 		strb	r2, [r3, #79]
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4672              		.loc 1 1020 0 discriminator 3
 4673 0b8a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4674 0b8c 0133     		adds	r3, r3, #1
 4675 0b8e FB73     		strb	r3, [r7, #15]
 4676              	.L294:
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4677              		.loc 1 1020 0 is_stmt 0 discriminator 1
 4678 0b90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4679 0b92 032B     		cmp	r3, #3
 4680 0b94 EED9     		bls	.L295
1022:.\Protocolo.c **** 							}						
1023:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4681              		.loc 1 1023 0 is_stmt 1
 4682 0b96 0023     		movs	r3, #0
 4683 0b98 FB73     		strb	r3, [r7, #15]
 4684 0b9a 23E0     		b	.L296
 4685              	.L299:
1024:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4686              		.loc 1 1024 0
 4687 0b9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4688 0b9e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4689 0ba0 4032     		adds	r2, r2, #64
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 104


 4690 0ba2 9049     		ldr	r1, .L363
 4691 0ba4 8A5C     		ldrb	r2, [r1, r2]
 4692 0ba6 D1B2     		uxtb	r1, r2
 4693 0ba8 8F4A     		ldr	r2, .L363+4
 4694 0baa 1344     		add	r3, r3, r2
 4695 0bac 0A46     		mov	r2, r1
 4696 0bae 83F83220 		strb	r2, [r3, #50]
1025:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 4697              		.loc 1 1025 0
 4698 0bb2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4699 0bb4 8C4A     		ldr	r2, .L363+4
 4700 0bb6 1344     		add	r3, r3, r2
 4701 0bb8 93F83230 		ldrb	r3, [r3, #50]
 4702 0bbc DBB2     		uxtb	r3, r3
 4703 0bbe 002B     		cmp	r3, #0
 4704 0bc0 09D0     		beq	.L297
 4705              		.loc 1 1025 0 is_stmt 0 discriminator 1
 4706 0bc2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4707 0bc4 884A     		ldr	r2, .L363+4
 4708 0bc6 1344     		add	r3, r3, r2
 4709 0bc8 93F83230 		ldrb	r3, [r3, #50]
 4710 0bcc DBB2     		uxtb	r3, r3
 4711 0bce 03F0F003 		and	r3, r3, #240
 4712 0bd2 E02B     		cmp	r3, #224
 4713 0bd4 03D0     		beq	.L298
 4714              	.L297:
1026:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4715              		.loc 1 1026 0 is_stmt 1
 4716 0bd6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1027:.\Protocolo.c **** 									return 0;
 4717              		.loc 1 1027 0
 4718 0bda 0023     		movs	r3, #0
 4719 0bdc 51E2     		b	.L167
 4720              	.L298:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4721              		.loc 1 1023 0 discriminator 2
 4722 0bde FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4723 0be0 0133     		adds	r3, r3, #1
 4724 0be2 FB73     		strb	r3, [r7, #15]
 4725              	.L296:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4726              		.loc 1 1023 0 is_stmt 0 discriminator 1
 4727 0be4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4728 0be6 072B     		cmp	r3, #7
 4729 0be8 D8D9     		bls	.L299
1028:.\Protocolo.c **** 								}								
1029:.\Protocolo.c **** 							}
1030:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4730              		.loc 1 1030 0 is_stmt 1
 4731 0bea 0023     		movs	r3, #0
 4732 0bec FB73     		strb	r3, [r7, #15]
 4733 0bee 26E0     		b	.L300
 4734              	.L303:
1031:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4735              		.loc 1 1031 0
 4736 0bf0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4737 0bf2 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 105


 4738 0bf4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4739 0bf6 4932     		adds	r2, r2, #73
 4740 0bf8 7A49     		ldr	r1, .L363
 4741 0bfa 8A5C     		ldrb	r2, [r1, r2]
 4742 0bfc D1B2     		uxtb	r1, r2
 4743 0bfe 7A4A     		ldr	r2, .L363+4
 4744 0c00 1344     		add	r3, r3, r2
 4745 0c02 0A46     		mov	r2, r1
 4746 0c04 83F83220 		strb	r2, [r3, #50]
1032:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 4747              		.loc 1 1032 0
 4748 0c08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4749 0c0a 0C33     		adds	r3, r3, #12
 4750 0c0c 764A     		ldr	r2, .L363+4
 4751 0c0e 1344     		add	r3, r3, r2
 4752 0c10 93F83230 		ldrb	r3, [r3, #50]
 4753 0c14 DBB2     		uxtb	r3, r3
 4754 0c16 002B     		cmp	r3, #0
 4755 0c18 0AD0     		beq	.L301
 4756              		.loc 1 1032 0 is_stmt 0 discriminator 1
 4757 0c1a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4758 0c1c 0C33     		adds	r3, r3, #12
 4759 0c1e 724A     		ldr	r2, .L363+4
 4760 0c20 1344     		add	r3, r3, r2
 4761 0c22 93F83230 		ldrb	r3, [r3, #50]
 4762 0c26 DBB2     		uxtb	r3, r3
 4763 0c28 03F0F003 		and	r3, r3, #240
 4764 0c2c E02B     		cmp	r3, #224
 4765 0c2e 03D0     		beq	.L302
 4766              	.L301:
1033:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4767              		.loc 1 1033 0 is_stmt 1
 4768 0c30 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1034:.\Protocolo.c **** 									return 0;
 4769              		.loc 1 1034 0
 4770 0c34 0023     		movs	r3, #0
 4771 0c36 24E2     		b	.L167
 4772              	.L302:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4773              		.loc 1 1030 0 discriminator 2
 4774 0c38 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4775 0c3a 0133     		adds	r3, r3, #1
 4776 0c3c FB73     		strb	r3, [r7, #15]
 4777              	.L300:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4778              		.loc 1 1030 0 is_stmt 0 discriminator 1
 4779 0c3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4780 0c40 072B     		cmp	r3, #7
 4781 0c42 D5D9     		bls	.L303
1035:.\Protocolo.c **** 								}								
1036:.\Protocolo.c **** 							}
1037:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4782              		.loc 1 1037 0 is_stmt 1
 4783 0c44 0023     		movs	r3, #0
 4784 0c46 FB73     		strb	r3, [r7, #15]
 4785 0c48 0DE0     		b	.L304
 4786              	.L305:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 106


1038:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4787              		.loc 1 1038 0 discriminator 3
 4788 0c4a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4789 0c4c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4790 0c4e 5232     		adds	r2, r2, #82
 4791 0c50 6449     		ldr	r1, .L363
 4792 0c52 8A5C     		ldrb	r2, [r1, r2]
 4793 0c54 D1B2     		uxtb	r1, r2
 4794 0c56 644A     		ldr	r2, .L363+4
 4795 0c58 1344     		add	r3, r3, r2
 4796 0c5a 0A46     		mov	r2, r1
 4797 0c5c 83F85420 		strb	r2, [r3, #84]
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4798              		.loc 1 1037 0 discriminator 3
 4799 0c60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4800 0c62 0133     		adds	r3, r3, #1
 4801 0c64 FB73     		strb	r3, [r7, #15]
 4802              	.L304:
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4803              		.loc 1 1037 0 is_stmt 0 discriminator 1
 4804 0c66 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4805 0c68 032B     		cmp	r3, #3
 4806 0c6a EED9     		bls	.L305
1039:.\Protocolo.c **** 							}
1040:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4807              		.loc 1 1040 0 is_stmt 1
 4808 0c6c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1041:.\Protocolo.c ****     						return 3;                            
 4809              		.loc 1 1041 0
 4810 0c70 0323     		movs	r3, #3
 4811 0c72 06E2     		b	.L167
 4812              	.L285:
1042:.\Protocolo.c **** 						}
1043:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4813              		.loc 1 1043 0
 4814 0c74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1044:.\Protocolo.c **** 						return 1;			
 4815              		.loc 1 1044 0
 4816 0c78 0123     		movs	r3, #1
 4817 0c7a 02E2     		b	.L167
 4818              	.L259:
1045:.\Protocolo.c **** 					}
1046:.\Protocolo.c **** 					else{
1047:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4819              		.loc 1 1047 0
 4820 0c7c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1048:.\Protocolo.c **** 						return 0;		
 4821              		.loc 1 1048 0
 4822 0c80 0023     		movs	r3, #0
 4823 0c82 FEE1     		b	.L167
 4824              	.L258:
1049:.\Protocolo.c **** 					}
1050:.\Protocolo.c **** 				}
1051:.\Protocolo.c **** 				else{
1052:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4825              		.loc 1 1052 0
 4826 0c84 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 107


1053:.\Protocolo.c **** 					return 0;		
 4827              		.loc 1 1053 0
 4828 0c88 0023     		movs	r3, #0
 4829 0c8a FAE1     		b	.L167
 4830              	.L256:
1054:.\Protocolo.c **** 				}				
1055:.\Protocolo.c **** 			}
1056:.\Protocolo.c **** 			else{
1057:.\Protocolo.c **** 				CyDelay(900);
 4831              		.loc 1 1057 0
 4832 0c8c 4FF46170 		mov	r0, #900
 4833 0c90 FFF7FEFF 		bl	CyDelay
1058:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4834              		.loc 1 1058 0
 4835 0c94 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4836 0c98 0346     		mov	r3, r0
 4837 0c9a FB73     		strb	r3, [r7, #15]
1059:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){					
 4838              		.loc 1 1059 0
 4839 0c9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4840 0c9e 2E2B     		cmp	r3, #46
 4841 0ca0 06D0     		beq	.L306
 4842              		.loc 1 1059 0 is_stmt 0 discriminator 1
 4843 0ca2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4844 0ca4 582B     		cmp	r3, #88
 4845 0ca6 03D0     		beq	.L306
 4846              		.loc 1 1059 0 discriminator 2
 4847 0ca8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4848 0caa 822B     		cmp	r3, #130
 4849 0cac 40F0E481 		bne	.L307
 4850              	.L306:
1060:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4851              		.loc 1 1060 0 is_stmt 1
 4852 0cb0 4C4B     		ldr	r3, .L363
 4853 0cb2 1B78     		ldrb	r3, [r3]
 4854 0cb4 DBB2     		uxtb	r3, r3
 4855 0cb6 FF2B     		cmp	r3, #255
 4856 0cb8 40F0DA81 		bne	.L308
 4857              		.loc 1 1060 0 is_stmt 0 discriminator 1
 4858 0cbc 494B     		ldr	r3, .L363
 4859 0cbe 5B78     		ldrb	r3, [r3, #1]
 4860 0cc0 DBB2     		uxtb	r3, r3
 4861 0cc2 F62B     		cmp	r3, #246
 4862 0cc4 40F0D481 		bne	.L308
 4863              		.loc 1 1060 0 discriminator 2
 4864 0cc8 464B     		ldr	r3, .L363
 4865 0cca DB78     		ldrb	r3, [r3, #3]
 4866 0ccc DBB2     		uxtb	r3, r3
 4867 0cce F92B     		cmp	r3, #249
 4868 0cd0 40F0CE81 		bne	.L308
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4869              		.loc 1 1061 0 is_stmt 1
 4870 0cd4 0023     		movs	r3, #0
 4871 0cd6 BB73     		strb	r3, [r7, #14]
 4872 0cd8 16E0     		b	.L309
 4873              	.L312:
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 108


 4874              		.loc 1 1062 0
 4875 0cda 0023     		movs	r3, #0
 4876 0cdc FB73     		strb	r3, [r7, #15]
 4877 0cde 0DE0     		b	.L310
 4878              	.L311:
1063:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4879              		.loc 1 1063 0 discriminator 3
 4880 0ce0 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4881 0ce2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4882 0ce4 4048     		ldr	r0, .L363+4
 4883 0ce6 1346     		mov	r3, r2
 4884 0ce8 5B00     		lsls	r3, r3, #1
 4885 0cea 1344     		add	r3, r3, r2
 4886 0cec DB00     		lsls	r3, r3, #3
 4887 0cee 0B44     		add	r3, r3, r1
 4888 0cf0 0344     		add	r3, r3, r0
 4889 0cf2 0022     		movs	r2, #0
 4890 0cf4 9A70     		strb	r2, [r3, #2]
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4891              		.loc 1 1062 0 discriminator 3
 4892 0cf6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4893 0cf8 0133     		adds	r3, r3, #1
 4894 0cfa FB73     		strb	r3, [r7, #15]
 4895              	.L310:
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4896              		.loc 1 1062 0 is_stmt 0 discriminator 1
 4897 0cfc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4898 0cfe 172B     		cmp	r3, #23
 4899 0d00 EED9     		bls	.L311
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4900              		.loc 1 1061 0 is_stmt 1 discriminator 2
 4901 0d02 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4902 0d04 0133     		adds	r3, r3, #1
 4903 0d06 BB73     		strb	r3, [r7, #14]
 4904              	.L309:
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4905              		.loc 1 1061 0 is_stmt 0 discriminator 1
 4906 0d08 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4907 0d0a 022B     		cmp	r3, #2
 4908 0d0c E5D9     		bls	.L312
1064:.\Protocolo.c ****                     		}
1065:.\Protocolo.c ****                     	}                         
1066:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4909              		.loc 1 1066 0 is_stmt 1
 4910 0d0e 0023     		movs	r3, #0
 4911 0d10 FB73     		strb	r3, [r7, #15]
 4912 0d12 20E0     		b	.L313
 4913              	.L316:
1067:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4914              		.loc 1 1067 0
 4915 0d14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4916 0d16 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4917 0d18 0432     		adds	r2, r2, #4
 4918 0d1a 3249     		ldr	r1, .L363
 4919 0d1c 8A5C     		ldrb	r2, [r1, r2]
 4920 0d1e D1B2     		uxtb	r1, r2
 4921 0d20 314A     		ldr	r2, .L363+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 109


 4922 0d22 1344     		add	r3, r3, r2
 4923 0d24 0A46     		mov	r2, r1
 4924 0d26 9A70     		strb	r2, [r3, #2]
1068:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4925              		.loc 1 1068 0
 4926 0d28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4927 0d2a 2F4A     		ldr	r2, .L363+4
 4928 0d2c 1344     		add	r3, r3, r2
 4929 0d2e 9B78     		ldrb	r3, [r3, #2]
 4930 0d30 DBB2     		uxtb	r3, r3
 4931 0d32 002B     		cmp	r3, #0
 4932 0d34 08D0     		beq	.L314
 4933              		.loc 1 1068 0 is_stmt 0 discriminator 1
 4934 0d36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4935 0d38 2B4A     		ldr	r2, .L363+4
 4936 0d3a 1344     		add	r3, r3, r2
 4937 0d3c 9B78     		ldrb	r3, [r3, #2]
 4938 0d3e DBB2     		uxtb	r3, r3
 4939 0d40 03F0F003 		and	r3, r3, #240
 4940 0d44 E02B     		cmp	r3, #224
 4941 0d46 03D0     		beq	.L315
 4942              	.L314:
1069:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4943              		.loc 1 1069 0 is_stmt 1
 4944 0d48 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1070:.\Protocolo.c **** 								return 0;
 4945              		.loc 1 1070 0
 4946 0d4c 0023     		movs	r3, #0
 4947 0d4e 98E1     		b	.L167
 4948              	.L315:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4949              		.loc 1 1066 0 discriminator 2
 4950 0d50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4951 0d52 0133     		adds	r3, r3, #1
 4952 0d54 FB73     		strb	r3, [r7, #15]
 4953              	.L313:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4954              		.loc 1 1066 0 is_stmt 0 discriminator 1
 4955 0d56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4956 0d58 0B2B     		cmp	r3, #11
 4957 0d5a DBD9     		bls	.L316
1071:.\Protocolo.c **** 							}							
1072:.\Protocolo.c **** 						}
1073:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4958              		.loc 1 1073 0 is_stmt 1
 4959 0d5c 0023     		movs	r3, #0
 4960 0d5e FB73     		strb	r3, [r7, #15]
 4961 0d60 23E0     		b	.L317
 4962              	.L320:
1074:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4963              		.loc 1 1074 0
 4964 0d62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4965 0d64 0C33     		adds	r3, r3, #12
 4966 0d66 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4967 0d68 1132     		adds	r2, r2, #17
 4968 0d6a 1E49     		ldr	r1, .L363
 4969 0d6c 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 110


 4970 0d6e D1B2     		uxtb	r1, r2
 4971 0d70 1D4A     		ldr	r2, .L363+4
 4972 0d72 1344     		add	r3, r3, r2
 4973 0d74 0A46     		mov	r2, r1
 4974 0d76 9A70     		strb	r2, [r3, #2]
1075:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4975              		.loc 1 1075 0
 4976 0d78 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4977 0d7a 0C33     		adds	r3, r3, #12
 4978 0d7c 1A4A     		ldr	r2, .L363+4
 4979 0d7e 1344     		add	r3, r3, r2
 4980 0d80 9B78     		ldrb	r3, [r3, #2]
 4981 0d82 DBB2     		uxtb	r3, r3
 4982 0d84 002B     		cmp	r3, #0
 4983 0d86 09D0     		beq	.L318
 4984              		.loc 1 1075 0 is_stmt 0 discriminator 1
 4985 0d88 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4986 0d8a 0C33     		adds	r3, r3, #12
 4987 0d8c 164A     		ldr	r2, .L363+4
 4988 0d8e 1344     		add	r3, r3, r2
 4989 0d90 9B78     		ldrb	r3, [r3, #2]
 4990 0d92 DBB2     		uxtb	r3, r3
 4991 0d94 03F0F003 		and	r3, r3, #240
 4992 0d98 E02B     		cmp	r3, #224
 4993 0d9a 03D0     		beq	.L319
 4994              	.L318:
1076:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4995              		.loc 1 1076 0 is_stmt 1
 4996 0d9c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1077:.\Protocolo.c **** 								return 0;
 4997              		.loc 1 1077 0
 4998 0da0 0023     		movs	r3, #0
 4999 0da2 6EE1     		b	.L167
 5000              	.L319:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 5001              		.loc 1 1073 0 discriminator 2
 5002 0da4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5003 0da6 0133     		adds	r3, r3, #1
 5004 0da8 FB73     		strb	r3, [r7, #15]
 5005              	.L317:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 5006              		.loc 1 1073 0 is_stmt 0 discriminator 1
 5007 0daa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5008 0dac 0B2B     		cmp	r3, #11
 5009 0dae D8D9     		bls	.L320
1078:.\Protocolo.c **** 							}							
1079:.\Protocolo.c **** 						}
1080:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 5010              		.loc 1 1080 0 is_stmt 1
 5011 0db0 0023     		movs	r3, #0
 5012 0db2 FB73     		strb	r3, [r7, #15]
 5013 0db4 0DE0     		b	.L321
 5014              	.L322:
1081:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5015              		.loc 1 1081 0 discriminator 3
 5016 0db6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5017 0db8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 111


 5018 0dba 1E32     		adds	r2, r2, #30
 5019 0dbc 0949     		ldr	r1, .L363
 5020 0dbe 8A5C     		ldrb	r2, [r1, r2]
 5021 0dc0 D1B2     		uxtb	r1, r2
 5022 0dc2 094A     		ldr	r2, .L363+4
 5023 0dc4 1344     		add	r3, r3, r2
 5024 0dc6 0A46     		mov	r2, r1
 5025 0dc8 83F84A20 		strb	r2, [r3, #74]
1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5026              		.loc 1 1080 0 discriminator 3
 5027 0dcc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5028 0dce 0133     		adds	r3, r3, #1
 5029 0dd0 FB73     		strb	r3, [r7, #15]
 5030              	.L321:
1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5031              		.loc 1 1080 0 is_stmt 0 discriminator 1
 5032 0dd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5033 0dd4 042B     		cmp	r3, #4
 5034 0dd6 EED9     		bls	.L322
1082:.\Protocolo.c **** 						}				
1083:.\Protocolo.c **** 						if(nmangueras==2){
 5035              		.loc 1 1083 0 is_stmt 1
 5036 0dd8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5037 0dda 022B     		cmp	r3, #2
 5038 0ddc 6CD1     		bne	.L323
1084:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5039              		.loc 1 1084 0
 5040 0dde 0023     		movs	r3, #0
 5041 0de0 FB73     		strb	r3, [r7, #15]
 5042 0de2 24E0     		b	.L324
 5043              	.L364:
 5044              		.align	2
 5045              	.L363:
 5046 0de4 00000000 		.word	Surtidor_rxBuffer
 5047 0de8 00000000 		.word	lado2
 5048              	.L327:
1085:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5049              		.loc 1 1085 0
 5050 0dec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5051 0dee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5052 0df0 2E32     		adds	r2, r2, #46
 5053 0df2 A649     		ldr	r1, .L365
 5054 0df4 8A5C     		ldrb	r2, [r1, r2]
 5055 0df6 D1B2     		uxtb	r1, r2
 5056 0df8 A54A     		ldr	r2, .L365+4
 5057 0dfa 1344     		add	r3, r3, r2
 5058 0dfc 0A46     		mov	r2, r1
 5059 0dfe 9A76     		strb	r2, [r3, #26]
1086:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5060              		.loc 1 1086 0
 5061 0e00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5062 0e02 A34A     		ldr	r2, .L365+4
 5063 0e04 1344     		add	r3, r3, r2
 5064 0e06 9B7E     		ldrb	r3, [r3, #26]
 5065 0e08 DBB2     		uxtb	r3, r3
 5066 0e0a 002B     		cmp	r3, #0
 5067 0e0c 08D0     		beq	.L325
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 112


 5068              		.loc 1 1086 0 is_stmt 0 discriminator 1
 5069 0e0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5070 0e10 9F4A     		ldr	r2, .L365+4
 5071 0e12 1344     		add	r3, r3, r2
 5072 0e14 9B7E     		ldrb	r3, [r3, #26]
 5073 0e16 DBB2     		uxtb	r3, r3
 5074 0e18 03F0F003 		and	r3, r3, #240
 5075 0e1c E02B     		cmp	r3, #224
 5076 0e1e 03D0     		beq	.L326
 5077              	.L325:
1087:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5078              		.loc 1 1087 0 is_stmt 1
 5079 0e20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1088:.\Protocolo.c **** 									return 0;
 5080              		.loc 1 1088 0
 5081 0e24 0023     		movs	r3, #0
 5082 0e26 2CE1     		b	.L167
 5083              	.L326:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5084              		.loc 1 1084 0 discriminator 2
 5085 0e28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5086 0e2a 0133     		adds	r3, r3, #1
 5087 0e2c FB73     		strb	r3, [r7, #15]
 5088              	.L324:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5089              		.loc 1 1084 0 is_stmt 0 discriminator 1
 5090 0e2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5091 0e30 0B2B     		cmp	r3, #11
 5092 0e32 DBD9     		bls	.L327
1089:.\Protocolo.c **** 								}								
1090:.\Protocolo.c **** 							}
1091:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5093              		.loc 1 1091 0 is_stmt 1
 5094 0e34 0023     		movs	r3, #0
 5095 0e36 FB73     		strb	r3, [r7, #15]
 5096 0e38 23E0     		b	.L328
 5097              	.L331:
1092:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5098              		.loc 1 1092 0
 5099 0e3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5100 0e3c 0C33     		adds	r3, r3, #12
 5101 0e3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5102 0e40 3B32     		adds	r2, r2, #59
 5103 0e42 9249     		ldr	r1, .L365
 5104 0e44 8A5C     		ldrb	r2, [r1, r2]
 5105 0e46 D1B2     		uxtb	r1, r2
 5106 0e48 914A     		ldr	r2, .L365+4
 5107 0e4a 1344     		add	r3, r3, r2
 5108 0e4c 0A46     		mov	r2, r1
 5109 0e4e 9A76     		strb	r2, [r3, #26]
1093:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5110              		.loc 1 1093 0
 5111 0e50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5112 0e52 0C33     		adds	r3, r3, #12
 5113 0e54 8E4A     		ldr	r2, .L365+4
 5114 0e56 1344     		add	r3, r3, r2
 5115 0e58 9B7E     		ldrb	r3, [r3, #26]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 113


 5116 0e5a DBB2     		uxtb	r3, r3
 5117 0e5c 002B     		cmp	r3, #0
 5118 0e5e 09D0     		beq	.L329
 5119              		.loc 1 1093 0 is_stmt 0 discriminator 1
 5120 0e60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5121 0e62 0C33     		adds	r3, r3, #12
 5122 0e64 8A4A     		ldr	r2, .L365+4
 5123 0e66 1344     		add	r3, r3, r2
 5124 0e68 9B7E     		ldrb	r3, [r3, #26]
 5125 0e6a DBB2     		uxtb	r3, r3
 5126 0e6c 03F0F003 		and	r3, r3, #240
 5127 0e70 E02B     		cmp	r3, #224
 5128 0e72 03D0     		beq	.L330
 5129              	.L329:
1094:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5130              		.loc 1 1094 0 is_stmt 1
 5131 0e74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1095:.\Protocolo.c **** 									return 0;
 5132              		.loc 1 1095 0
 5133 0e78 0023     		movs	r3, #0
 5134 0e7a 02E1     		b	.L167
 5135              	.L330:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5136              		.loc 1 1091 0 discriminator 2
 5137 0e7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5138 0e7e 0133     		adds	r3, r3, #1
 5139 0e80 FB73     		strb	r3, [r7, #15]
 5140              	.L328:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5141              		.loc 1 1091 0 is_stmt 0 discriminator 1
 5142 0e82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5143 0e84 0B2B     		cmp	r3, #11
 5144 0e86 D8D9     		bls	.L331
1096:.\Protocolo.c **** 								}								
1097:.\Protocolo.c **** 							}
1098:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5145              		.loc 1 1098 0 is_stmt 1
 5146 0e88 0023     		movs	r3, #0
 5147 0e8a FB73     		strb	r3, [r7, #15]
 5148 0e8c 0DE0     		b	.L332
 5149              	.L333:
1099:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5150              		.loc 1 1099 0 discriminator 3
 5151 0e8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5152 0e90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5153 0e92 4832     		adds	r2, r2, #72
 5154 0e94 7D49     		ldr	r1, .L365
 5155 0e96 8A5C     		ldrb	r2, [r1, r2]
 5156 0e98 D1B2     		uxtb	r1, r2
 5157 0e9a 7D4A     		ldr	r2, .L365+4
 5158 0e9c 1344     		add	r3, r3, r2
 5159 0e9e 0A46     		mov	r2, r1
 5160 0ea0 83F84F20 		strb	r2, [r3, #79]
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5161              		.loc 1 1098 0 discriminator 3
 5162 0ea4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5163 0ea6 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 114


 5164 0ea8 FB73     		strb	r3, [r7, #15]
 5165              	.L332:
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5166              		.loc 1 1098 0 is_stmt 0 discriminator 1
 5167 0eaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5168 0eac 042B     		cmp	r3, #4
 5169 0eae EED9     		bls	.L333
1100:.\Protocolo.c **** 							}
1101:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5170              		.loc 1 1101 0 is_stmt 1
 5171 0eb0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1102:.\Protocolo.c ****     						return 2;                            
 5172              		.loc 1 1102 0
 5173 0eb4 0223     		movs	r3, #2
 5174 0eb6 E4E0     		b	.L167
 5175              	.L323:
1103:.\Protocolo.c **** 						}
1104:.\Protocolo.c **** 						if(nmangueras==3){
 5176              		.loc 1 1104 0
 5177 0eb8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5178 0eba 032B     		cmp	r3, #3
 5179 0ebc 40F0D480 		bne	.L334
1105:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5180              		.loc 1 1105 0
 5181 0ec0 0023     		movs	r3, #0
 5182 0ec2 FB73     		strb	r3, [r7, #15]
 5183 0ec4 20E0     		b	.L335
 5184              	.L338:
1106:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5185              		.loc 1 1106 0
 5186 0ec6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5187 0ec8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5188 0eca 2E32     		adds	r2, r2, #46
 5189 0ecc 6F49     		ldr	r1, .L365
 5190 0ece 8A5C     		ldrb	r2, [r1, r2]
 5191 0ed0 D1B2     		uxtb	r1, r2
 5192 0ed2 6F4A     		ldr	r2, .L365+4
 5193 0ed4 1344     		add	r3, r3, r2
 5194 0ed6 0A46     		mov	r2, r1
 5195 0ed8 9A76     		strb	r2, [r3, #26]
1107:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5196              		.loc 1 1107 0
 5197 0eda FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5198 0edc 6C4A     		ldr	r2, .L365+4
 5199 0ede 1344     		add	r3, r3, r2
 5200 0ee0 9B7E     		ldrb	r3, [r3, #26]
 5201 0ee2 DBB2     		uxtb	r3, r3
 5202 0ee4 002B     		cmp	r3, #0
 5203 0ee6 08D0     		beq	.L336
 5204              		.loc 1 1107 0 is_stmt 0 discriminator 1
 5205 0ee8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5206 0eea 694A     		ldr	r2, .L365+4
 5207 0eec 1344     		add	r3, r3, r2
 5208 0eee 9B7E     		ldrb	r3, [r3, #26]
 5209 0ef0 DBB2     		uxtb	r3, r3
 5210 0ef2 03F0F003 		and	r3, r3, #240
 5211 0ef6 E02B     		cmp	r3, #224
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 115


 5212 0ef8 03D0     		beq	.L337
 5213              	.L336:
1108:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5214              		.loc 1 1108 0 is_stmt 1
 5215 0efa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1109:.\Protocolo.c **** 									return 0;
 5216              		.loc 1 1109 0
 5217 0efe 0023     		movs	r3, #0
 5218 0f00 BFE0     		b	.L167
 5219              	.L337:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5220              		.loc 1 1105 0 discriminator 2
 5221 0f02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5222 0f04 0133     		adds	r3, r3, #1
 5223 0f06 FB73     		strb	r3, [r7, #15]
 5224              	.L335:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5225              		.loc 1 1105 0 is_stmt 0 discriminator 1
 5226 0f08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5227 0f0a 0B2B     		cmp	r3, #11
 5228 0f0c DBD9     		bls	.L338
1110:.\Protocolo.c **** 								}								
1111:.\Protocolo.c **** 							}
1112:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5229              		.loc 1 1112 0 is_stmt 1
 5230 0f0e 0023     		movs	r3, #0
 5231 0f10 FB73     		strb	r3, [r7, #15]
 5232 0f12 23E0     		b	.L339
 5233              	.L342:
1113:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5234              		.loc 1 1113 0
 5235 0f14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5236 0f16 0C33     		adds	r3, r3, #12
 5237 0f18 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5238 0f1a 3B32     		adds	r2, r2, #59
 5239 0f1c 5B49     		ldr	r1, .L365
 5240 0f1e 8A5C     		ldrb	r2, [r1, r2]
 5241 0f20 D1B2     		uxtb	r1, r2
 5242 0f22 5B4A     		ldr	r2, .L365+4
 5243 0f24 1344     		add	r3, r3, r2
 5244 0f26 0A46     		mov	r2, r1
 5245 0f28 9A76     		strb	r2, [r3, #26]
1114:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5246              		.loc 1 1114 0
 5247 0f2a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5248 0f2c 0C33     		adds	r3, r3, #12
 5249 0f2e 584A     		ldr	r2, .L365+4
 5250 0f30 1344     		add	r3, r3, r2
 5251 0f32 9B7E     		ldrb	r3, [r3, #26]
 5252 0f34 DBB2     		uxtb	r3, r3
 5253 0f36 002B     		cmp	r3, #0
 5254 0f38 09D0     		beq	.L340
 5255              		.loc 1 1114 0 is_stmt 0 discriminator 1
 5256 0f3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5257 0f3c 0C33     		adds	r3, r3, #12
 5258 0f3e 544A     		ldr	r2, .L365+4
 5259 0f40 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 116


 5260 0f42 9B7E     		ldrb	r3, [r3, #26]
 5261 0f44 DBB2     		uxtb	r3, r3
 5262 0f46 03F0F003 		and	r3, r3, #240
 5263 0f4a E02B     		cmp	r3, #224
 5264 0f4c 03D0     		beq	.L341
 5265              	.L340:
1115:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5266              		.loc 1 1115 0 is_stmt 1
 5267 0f4e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1116:.\Protocolo.c **** 									return 0;
 5268              		.loc 1 1116 0
 5269 0f52 0023     		movs	r3, #0
 5270 0f54 95E0     		b	.L167
 5271              	.L341:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5272              		.loc 1 1112 0 discriminator 2
 5273 0f56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5274 0f58 0133     		adds	r3, r3, #1
 5275 0f5a FB73     		strb	r3, [r7, #15]
 5276              	.L339:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5277              		.loc 1 1112 0 is_stmt 0 discriminator 1
 5278 0f5c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5279 0f5e 0B2B     		cmp	r3, #11
 5280 0f60 D8D9     		bls	.L342
1117:.\Protocolo.c **** 								}								
1118:.\Protocolo.c **** 							}
1119:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5281              		.loc 1 1119 0 is_stmt 1
 5282 0f62 0023     		movs	r3, #0
 5283 0f64 FB73     		strb	r3, [r7, #15]
 5284 0f66 0DE0     		b	.L343
 5285              	.L344:
1120:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5286              		.loc 1 1120 0 discriminator 3
 5287 0f68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5288 0f6a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5289 0f6c 4832     		adds	r2, r2, #72
 5290 0f6e 4749     		ldr	r1, .L365
 5291 0f70 8A5C     		ldrb	r2, [r1, r2]
 5292 0f72 D1B2     		uxtb	r1, r2
 5293 0f74 464A     		ldr	r2, .L365+4
 5294 0f76 1344     		add	r3, r3, r2
 5295 0f78 0A46     		mov	r2, r1
 5296 0f7a 83F84F20 		strb	r2, [r3, #79]
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5297              		.loc 1 1119 0 discriminator 3
 5298 0f7e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5299 0f80 0133     		adds	r3, r3, #1
 5300 0f82 FB73     		strb	r3, [r7, #15]
 5301              	.L343:
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5302              		.loc 1 1119 0 is_stmt 0 discriminator 1
 5303 0f84 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5304 0f86 042B     		cmp	r3, #4
 5305 0f88 EED9     		bls	.L344
1121:.\Protocolo.c **** 							}					
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 117


1122:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5306              		.loc 1 1122 0 is_stmt 1
 5307 0f8a 0023     		movs	r3, #0
 5308 0f8c FB73     		strb	r3, [r7, #15]
 5309 0f8e 23E0     		b	.L345
 5310              	.L348:
1123:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5311              		.loc 1 1123 0
 5312 0f90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5313 0f92 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5314 0f94 5832     		adds	r2, r2, #88
 5315 0f96 3D49     		ldr	r1, .L365
 5316 0f98 8A5C     		ldrb	r2, [r1, r2]
 5317 0f9a D1B2     		uxtb	r1, r2
 5318 0f9c 3C4A     		ldr	r2, .L365+4
 5319 0f9e 1344     		add	r3, r3, r2
 5320 0fa0 0A46     		mov	r2, r1
 5321 0fa2 83F83220 		strb	r2, [r3, #50]
1124:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 5322              		.loc 1 1124 0
 5323 0fa6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5324 0fa8 394A     		ldr	r2, .L365+4
 5325 0faa 1344     		add	r3, r3, r2
 5326 0fac 93F83230 		ldrb	r3, [r3, #50]
 5327 0fb0 DBB2     		uxtb	r3, r3
 5328 0fb2 002B     		cmp	r3, #0
 5329 0fb4 09D0     		beq	.L346
 5330              		.loc 1 1124 0 is_stmt 0 discriminator 1
 5331 0fb6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5332 0fb8 354A     		ldr	r2, .L365+4
 5333 0fba 1344     		add	r3, r3, r2
 5334 0fbc 93F83230 		ldrb	r3, [r3, #50]
 5335 0fc0 DBB2     		uxtb	r3, r3
 5336 0fc2 03F0F003 		and	r3, r3, #240
 5337 0fc6 E02B     		cmp	r3, #224
 5338 0fc8 03D0     		beq	.L347
 5339              	.L346:
1125:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5340              		.loc 1 1125 0 is_stmt 1
 5341 0fca FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1126:.\Protocolo.c **** 									return 0;
 5342              		.loc 1 1126 0
 5343 0fce 0023     		movs	r3, #0
 5344 0fd0 57E0     		b	.L167
 5345              	.L347:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5346              		.loc 1 1122 0 discriminator 2
 5347 0fd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5348 0fd4 0133     		adds	r3, r3, #1
 5349 0fd6 FB73     		strb	r3, [r7, #15]
 5350              	.L345:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5351              		.loc 1 1122 0 is_stmt 0 discriminator 1
 5352 0fd8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5353 0fda 0B2B     		cmp	r3, #11
 5354 0fdc D8D9     		bls	.L348
1127:.\Protocolo.c **** 								}								
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 118


1128:.\Protocolo.c **** 							}
1129:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5355              		.loc 1 1129 0 is_stmt 1
 5356 0fde 0023     		movs	r3, #0
 5357 0fe0 FB73     		strb	r3, [r7, #15]
 5358 0fe2 26E0     		b	.L349
 5359              	.L352:
1130:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5360              		.loc 1 1130 0
 5361 0fe4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5362 0fe6 0C33     		adds	r3, r3, #12
 5363 0fe8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5364 0fea 6532     		adds	r2, r2, #101
 5365 0fec 2749     		ldr	r1, .L365
 5366 0fee 8A5C     		ldrb	r2, [r1, r2]
 5367 0ff0 D1B2     		uxtb	r1, r2
 5368 0ff2 274A     		ldr	r2, .L365+4
 5369 0ff4 1344     		add	r3, r3, r2
 5370 0ff6 0A46     		mov	r2, r1
 5371 0ff8 83F83220 		strb	r2, [r3, #50]
1131:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 5372              		.loc 1 1131 0
 5373 0ffc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5374 0ffe 0C33     		adds	r3, r3, #12
 5375 1000 234A     		ldr	r2, .L365+4
 5376 1002 1344     		add	r3, r3, r2
 5377 1004 93F83230 		ldrb	r3, [r3, #50]
 5378 1008 DBB2     		uxtb	r3, r3
 5379 100a 002B     		cmp	r3, #0
 5380 100c 0AD0     		beq	.L350
 5381              		.loc 1 1131 0 is_stmt 0 discriminator 1
 5382 100e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5383 1010 0C33     		adds	r3, r3, #12
 5384 1012 1F4A     		ldr	r2, .L365+4
 5385 1014 1344     		add	r3, r3, r2
 5386 1016 93F83230 		ldrb	r3, [r3, #50]
 5387 101a DBB2     		uxtb	r3, r3
 5388 101c 03F0F003 		and	r3, r3, #240
 5389 1020 E02B     		cmp	r3, #224
 5390 1022 03D0     		beq	.L351
 5391              	.L350:
1132:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5392              		.loc 1 1132 0 is_stmt 1
 5393 1024 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1133:.\Protocolo.c **** 									return 0;
 5394              		.loc 1 1133 0
 5395 1028 0023     		movs	r3, #0
 5396 102a 2AE0     		b	.L167
 5397              	.L351:
1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5398              		.loc 1 1129 0 discriminator 2
 5399 102c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5400 102e 0133     		adds	r3, r3, #1
 5401 1030 FB73     		strb	r3, [r7, #15]
 5402              	.L349:
1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5403              		.loc 1 1129 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 119


 5404 1032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5405 1034 0B2B     		cmp	r3, #11
 5406 1036 D5D9     		bls	.L352
1134:.\Protocolo.c **** 								}								
1135:.\Protocolo.c **** 							}
1136:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5407              		.loc 1 1136 0 is_stmt 1
 5408 1038 0023     		movs	r3, #0
 5409 103a FB73     		strb	r3, [r7, #15]
 5410 103c 0DE0     		b	.L353
 5411              	.L354:
1137:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5412              		.loc 1 1137 0 discriminator 3
 5413 103e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5414 1040 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5415 1042 7232     		adds	r2, r2, #114
 5416 1044 1149     		ldr	r1, .L365
 5417 1046 8A5C     		ldrb	r2, [r1, r2]
 5418 1048 D1B2     		uxtb	r1, r2
 5419 104a 114A     		ldr	r2, .L365+4
 5420 104c 1344     		add	r3, r3, r2
 5421 104e 0A46     		mov	r2, r1
 5422 1050 83F85420 		strb	r2, [r3, #84]
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5423              		.loc 1 1136 0 discriminator 3
 5424 1054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5425 1056 0133     		adds	r3, r3, #1
 5426 1058 FB73     		strb	r3, [r7, #15]
 5427              	.L353:
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5428              		.loc 1 1136 0 is_stmt 0 discriminator 1
 5429 105a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5430 105c 042B     		cmp	r3, #4
 5431 105e EED9     		bls	.L354
1138:.\Protocolo.c **** 							}
1139:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5432              		.loc 1 1139 0 is_stmt 1
 5433 1060 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1140:.\Protocolo.c ****     						return 3;                            
 5434              		.loc 1 1140 0
 5435 1064 0323     		movs	r3, #3
 5436 1066 0CE0     		b	.L167
 5437              	.L334:
1141:.\Protocolo.c **** 						}
1142:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5438              		.loc 1 1142 0
 5439 1068 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1143:.\Protocolo.c **** 						return 1;			
 5440              		.loc 1 1143 0
 5441 106c 0123     		movs	r3, #1
 5442 106e 08E0     		b	.L167
 5443              	.L308:
1144:.\Protocolo.c **** 					}
1145:.\Protocolo.c **** 					else{
1146:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5444              		.loc 1 1146 0
 5445 1070 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 120


1147:.\Protocolo.c **** 						return 0;		
 5446              		.loc 1 1147 0
 5447 1074 0023     		movs	r3, #0
 5448 1076 04E0     		b	.L167
 5449              	.L307:
1148:.\Protocolo.c **** 					}
1149:.\Protocolo.c **** 				}
1150:.\Protocolo.c **** 				else{
1151:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 5450              		.loc 1 1151 0
 5451 1078 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1152:.\Protocolo.c **** 					return 0;		
 5452              		.loc 1 1152 0
 5453 107c 0023     		movs	r3, #0
 5454 107e 00E0     		b	.L167
 5455              	.L154:
1153:.\Protocolo.c **** 				}				
1154:.\Protocolo.c **** 			}		
1155:.\Protocolo.c **** 		}
1156:.\Protocolo.c **** 	}
1157:.\Protocolo.c **** 	else{
1158:.\Protocolo.c **** 		return 0;
 5456              		.loc 1 1158 0
 5457 1080 0023     		movs	r3, #0
 5458              	.L167:
1159:.\Protocolo.c **** 	}
1160:.\Protocolo.c **** }
 5459              		.loc 1 1160 0
 5460 1082 1846     		mov	r0, r3
 5461 1084 1037     		adds	r7, r7, #16
 5462              		.cfi_def_cfa_offset 8
 5463 1086 BD46     		mov	sp, r7
 5464              		.cfi_def_cfa_register 13
 5465              		@ sp needed
 5466 1088 80BD     		pop	{r7, pc}
 5467              	.L366:
 5468 108a 00BF     		.align	2
 5469              	.L365:
 5470 108c 00000000 		.word	Surtidor_rxBuffer
 5471 1090 00000000 		.word	lado2
 5472              		.cfi_endproc
 5473              	.LFE72:
 5474              		.size	totales, .-totales
 5475              		.text
 5476              	.Letext0:
 5477              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5478              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5479              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5480              		.file 5 ".\\VariablesG.h"
 5481              		.file 6 "Generated_Source\\PSoC5/Surtidor.h"
 5482              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 5483              		.section	.debug_info,"",%progbits
 5484              	.Ldebug_info0:
 5485 0000 BA0B0000 		.4byte	0xbba
 5486 0004 0400     		.2byte	0x4
 5487 0006 00000000 		.4byte	.Ldebug_abbrev0
 5488 000a 04       		.byte	0x4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 121


 5489 000b 01       		.uleb128 0x1
 5490 000c 0F030000 		.4byte	.LASF127
 5491 0010 01       		.byte	0x1
 5492 0011 64010000 		.4byte	.LASF128
 5493 0015 39000000 		.4byte	.LASF129
 5494 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5495 001d 00000000 		.4byte	0
 5496 0021 00000000 		.4byte	.Ldebug_line0
 5497 0025 02       		.uleb128 0x2
 5498 0026 01       		.byte	0x1
 5499 0027 06       		.byte	0x6
 5500 0028 FE040000 		.4byte	.LASF0
 5501 002c 02       		.uleb128 0x2
 5502 002d 01       		.byte	0x1
 5503 002e 08       		.byte	0x8
 5504 002f B4040000 		.4byte	.LASF1
 5505 0033 02       		.uleb128 0x2
 5506 0034 02       		.byte	0x2
 5507 0035 05       		.byte	0x5
 5508 0036 14040000 		.4byte	.LASF2
 5509 003a 02       		.uleb128 0x2
 5510 003b 02       		.byte	0x2
 5511 003c 07       		.byte	0x7
 5512 003d 20050000 		.4byte	.LASF3
 5513 0041 03       		.uleb128 0x3
 5514 0042 9E000000 		.4byte	.LASF9
 5515 0046 02       		.byte	0x2
 5516 0047 3F       		.byte	0x3f
 5517 0048 4C000000 		.4byte	0x4c
 5518 004c 02       		.uleb128 0x2
 5519 004d 04       		.byte	0x4
 5520 004e 05       		.byte	0x5
 5521 004f 1E040000 		.4byte	.LASF4
 5522 0053 02       		.uleb128 0x2
 5523 0054 04       		.byte	0x4
 5524 0055 07       		.byte	0x7
 5525 0056 85040000 		.4byte	.LASF5
 5526 005a 02       		.uleb128 0x2
 5527 005b 08       		.byte	0x8
 5528 005c 05       		.byte	0x5
 5529 005d E2020000 		.4byte	.LASF6
 5530 0061 02       		.uleb128 0x2
 5531 0062 08       		.byte	0x8
 5532 0063 07       		.byte	0x7
 5533 0064 4D010000 		.4byte	.LASF7
 5534 0068 04       		.uleb128 0x4
 5535 0069 04       		.byte	0x4
 5536 006a 05       		.byte	0x5
 5537 006b 696E7400 		.ascii	"int\000"
 5538 006f 02       		.uleb128 0x2
 5539 0070 04       		.byte	0x4
 5540 0071 07       		.byte	0x7
 5541 0072 89000000 		.4byte	.LASF8
 5542 0076 03       		.uleb128 0x3
 5543 0077 97040000 		.4byte	.LASF10
 5544 007b 03       		.byte	0x3
 5545 007c 2C       		.byte	0x2c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 122


 5546 007d 41000000 		.4byte	0x41
 5547 0081 03       		.uleb128 0x3
 5548 0082 39050000 		.4byte	.LASF11
 5549 0086 04       		.byte	0x4
 5550 0087 B4       		.byte	0xb4
 5551 0088 2C000000 		.4byte	0x2c
 5552 008c 03       		.uleb128 0x3
 5553 008d 6D020000 		.4byte	.LASF12
 5554 0091 04       		.byte	0x4
 5555 0092 B5       		.byte	0xb5
 5556 0093 3A000000 		.4byte	0x3a
 5557 0097 02       		.uleb128 0x2
 5558 0098 04       		.byte	0x4
 5559 0099 04       		.byte	0x4
 5560 009a 0E010000 		.4byte	.LASF13
 5561 009e 02       		.uleb128 0x2
 5562 009f 08       		.byte	0x8
 5563 00a0 04       		.byte	0x4
 5564 00a1 3F050000 		.4byte	.LASF14
 5565 00a5 02       		.uleb128 0x2
 5566 00a6 01       		.byte	0x1
 5567 00a7 08       		.byte	0x8
 5568 00a8 52020000 		.4byte	.LASF15
 5569 00ac 05       		.uleb128 0x5
 5570 00ad 81000000 		.4byte	0x81
 5571 00b1 05       		.uleb128 0x5
 5572 00b2 8C000000 		.4byte	0x8c
 5573 00b6 02       		.uleb128 0x2
 5574 00b7 04       		.byte	0x4
 5575 00b8 07       		.byte	0x7
 5576 00b9 7C040000 		.4byte	.LASF16
 5577 00bd 06       		.uleb128 0x6
 5578 00be 81000000 		.4byte	0x81
 5579 00c2 CD000000 		.4byte	0xcd
 5580 00c6 07       		.uleb128 0x7
 5581 00c7 B6000000 		.4byte	0xb6
 5582 00cb 03       		.byte	0x3
 5583 00cc 00       		.byte	0
 5584 00cd 08       		.uleb128 0x8
 5585 00ce 34040000 		.4byte	.LASF21
 5586 00d2 5D       		.byte	0x5d
 5587 00d3 05       		.byte	0x5
 5588 00d4 5D       		.byte	0x5d
 5589 00d5 22010000 		.4byte	0x122
 5590 00d9 09       		.uleb128 0x9
 5591 00da 64697200 		.ascii	"dir\000"
 5592 00de 05       		.byte	0x5
 5593 00df 5E       		.byte	0x5e
 5594 00e0 AC000000 		.4byte	0xac
 5595 00e4 00       		.byte	0
 5596 00e5 0A       		.uleb128 0xa
 5597 00e6 D3030000 		.4byte	.LASF17
 5598 00ea 05       		.byte	0x5
 5599 00eb 5F       		.byte	0x5f
 5600 00ec AC000000 		.4byte	0xac
 5601 00f0 01       		.byte	0x1
 5602 00f1 0A       		.uleb128 0xa
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 123


 5603 00f2 A5020000 		.4byte	.LASF18
 5604 00f6 05       		.byte	0x5
 5605 00f7 60       		.byte	0x60
 5606 00f8 38010000 		.4byte	0x138
 5607 00fc 02       		.byte	0x2
 5608 00fd 09       		.uleb128 0x9
 5609 00fe 70707500 		.ascii	"ppu\000"
 5610 0102 05       		.byte	0x5
 5611 0103 61       		.byte	0x61
 5612 0104 53010000 		.4byte	0x153
 5613 0108 4A       		.byte	0x4a
 5614 0109 0A       		.uleb128 0xa
 5615 010a 80050000 		.4byte	.LASF19
 5616 010e 05       		.byte	0x5
 5617 010f 62       		.byte	0x62
 5618 0110 6E010000 		.4byte	0x16e
 5619 0114 59       		.byte	0x59
 5620 0115 0A       		.uleb128 0xa
 5621 0116 63020000 		.4byte	.LASF20
 5622 011a 05       		.byte	0x5
 5623 011b 63       		.byte	0x63
 5624 011c AC000000 		.4byte	0xac
 5625 0120 5C       		.byte	0x5c
 5626 0121 00       		.byte	0
 5627 0122 06       		.uleb128 0x6
 5628 0123 81000000 		.4byte	0x81
 5629 0127 38010000 		.4byte	0x138
 5630 012b 07       		.uleb128 0x7
 5631 012c B6000000 		.4byte	0xb6
 5632 0130 02       		.byte	0x2
 5633 0131 07       		.uleb128 0x7
 5634 0132 B6000000 		.4byte	0xb6
 5635 0136 17       		.byte	0x17
 5636 0137 00       		.byte	0
 5637 0138 05       		.uleb128 0x5
 5638 0139 22010000 		.4byte	0x122
 5639 013d 06       		.uleb128 0x6
 5640 013e 81000000 		.4byte	0x81
 5641 0142 53010000 		.4byte	0x153
 5642 0146 07       		.uleb128 0x7
 5643 0147 B6000000 		.4byte	0xb6
 5644 014b 02       		.byte	0x2
 5645 014c 07       		.uleb128 0x7
 5646 014d B6000000 		.4byte	0xb6
 5647 0151 04       		.byte	0x4
 5648 0152 00       		.byte	0
 5649 0153 05       		.uleb128 0x5
 5650 0154 3D010000 		.4byte	0x13d
 5651 0158 06       		.uleb128 0x6
 5652 0159 81000000 		.4byte	0x81
 5653 015d 6E010000 		.4byte	0x16e
 5654 0161 07       		.uleb128 0x7
 5655 0162 B6000000 		.4byte	0xb6
 5656 0166 02       		.byte	0x2
 5657 0167 07       		.uleb128 0x7
 5658 0168 B6000000 		.4byte	0xb6
 5659 016c 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 124


 5660 016d 00       		.byte	0
 5661 016e 05       		.uleb128 0x5
 5662 016f 58010000 		.4byte	0x158
 5663 0173 08       		.uleb128 0x8
 5664 0174 B9030000 		.4byte	.LASF22
 5665 0178 76       		.byte	0x76
 5666 0179 05       		.byte	0x5
 5667 017a 74       		.byte	0x74
 5668 017b 62020000 		.4byte	0x262
 5669 017f 0A       		.uleb128 0xa
 5670 0180 DA000000 		.4byte	.LASF23
 5671 0184 05       		.byte	0x5
 5672 0185 75       		.byte	0x75
 5673 0186 81000000 		.4byte	0x81
 5674 018a 00       		.byte	0
 5675 018b 0A       		.uleb128 0xa
 5676 018c 80050000 		.4byte	.LASF19
 5677 0190 05       		.byte	0x5
 5678 0191 76       		.byte	0x76
 5679 0192 81000000 		.4byte	0x81
 5680 0196 01       		.byte	0x1
 5681 0197 09       		.uleb128 0x9
 5682 0198 70707500 		.ascii	"ppu\000"
 5683 019c 05       		.byte	0x5
 5684 019d 77       		.byte	0x77
 5685 019e 62020000 		.4byte	0x262
 5686 01a2 02       		.byte	0x2
 5687 01a3 0A       		.uleb128 0xa
 5688 01a4 C0030000 		.4byte	.LASF24
 5689 01a8 05       		.byte	0x5
 5690 01a9 78       		.byte	0x78
 5691 01aa 72020000 		.4byte	0x272
 5692 01ae 07       		.byte	0x7
 5693 01af 0A       		.uleb128 0xa
 5694 01b0 E7010000 		.4byte	.LASF25
 5695 01b4 05       		.byte	0x5
 5696 01b5 79       		.byte	0x79
 5697 01b6 72020000 		.4byte	0x272
 5698 01ba 10       		.byte	0x10
 5699 01bb 0A       		.uleb128 0xa
 5700 01bc F0020000 		.4byte	.LASF26
 5701 01c0 05       		.byte	0x5
 5702 01c1 7A       		.byte	0x7a
 5703 01c2 81000000 		.4byte	0x81
 5704 01c6 19       		.byte	0x19
 5705 01c7 0A       		.uleb128 0xa
 5706 01c8 6A050000 		.4byte	.LASF27
 5707 01cc 05       		.byte	0x5
 5708 01cd 7B       		.byte	0x7b
 5709 01ce 81000000 		.4byte	0x81
 5710 01d2 1A       		.byte	0x1a
 5711 01d3 0A       		.uleb128 0xa
 5712 01d4 07010000 		.4byte	.LASF28
 5713 01d8 05       		.byte	0x5
 5714 01d9 7C       		.byte	0x7c
 5715 01da 82020000 		.4byte	0x282
 5716 01de 1B       		.byte	0x1b
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 125


 5717 01df 09       		.uleb128 0x9
 5718 01e0 696400   		.ascii	"id\000"
 5719 01e3 05       		.byte	0x5
 5720 01e4 7D       		.byte	0x7d
 5721 01e5 92020000 		.4byte	0x292
 5722 01e9 23       		.byte	0x23
 5723 01ea 0A       		.uleb128 0xa
 5724 01eb 99020000 		.4byte	.LASF29
 5725 01ef 05       		.byte	0x5
 5726 01f0 7E       		.byte	0x7e
 5727 01f1 92020000 		.4byte	0x292
 5728 01f5 33       		.byte	0x33
 5729 01f6 09       		.uleb128 0x9
 5730 01f7 6B6D00   		.ascii	"km\000"
 5731 01fa 05       		.byte	0x5
 5732 01fb 7F       		.byte	0x7f
 5733 01fc A2020000 		.4byte	0x2a2
 5734 0200 43       		.byte	0x43
 5735 0201 0A       		.uleb128 0xa
 5736 0202 BA010000 		.4byte	.LASF30
 5737 0206 05       		.byte	0x5
 5738 0207 80       		.byte	0x80
 5739 0208 72020000 		.4byte	0x272
 5740 020c 4E       		.byte	0x4e
 5741 020d 0A       		.uleb128 0xa
 5742 020e 44010000 		.4byte	.LASF31
 5743 0212 05       		.byte	0x5
 5744 0213 81       		.byte	0x81
 5745 0214 81000000 		.4byte	0x81
 5746 0218 57       		.byte	0x57
 5747 0219 0A       		.uleb128 0xa
 5748 021a 8E020000 		.4byte	.LASF32
 5749 021e 05       		.byte	0x5
 5750 021f 82       		.byte	0x82
 5751 0220 81000000 		.4byte	0x81
 5752 0224 58       		.byte	0x58
 5753 0225 0A       		.uleb128 0xa
 5754 0226 08030000 		.4byte	.LASF33
 5755 022a 05       		.byte	0x5
 5756 022b 83       		.byte	0x83
 5757 022c A2020000 		.4byte	0x2a2
 5758 0230 59       		.byte	0x59
 5759 0231 0A       		.uleb128 0xa
 5760 0232 00000000 		.4byte	.LASF34
 5761 0236 05       		.byte	0x5
 5762 0237 84       		.byte	0x84
 5763 0238 A2020000 		.4byte	0x2a2
 5764 023c 64       		.byte	0x64
 5765 023d 0A       		.uleb128 0xa
 5766 023e 9F020000 		.4byte	.LASF35
 5767 0242 05       		.byte	0x5
 5768 0243 85       		.byte	0x85
 5769 0244 81000000 		.4byte	0x81
 5770 0248 6F       		.byte	0x6f
 5771 0249 0A       		.uleb128 0xa
 5772 024a A9040000 		.4byte	.LASF36
 5773 024e 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 126


 5774 024f 86       		.byte	0x86
 5775 0250 81000000 		.4byte	0x81
 5776 0254 70       		.byte	0x70
 5777 0255 0A       		.uleb128 0xa
 5778 0256 DA030000 		.4byte	.LASF37
 5779 025a 05       		.byte	0x5
 5780 025b 87       		.byte	0x87
 5781 025c 62020000 		.4byte	0x262
 5782 0260 71       		.byte	0x71
 5783 0261 00       		.byte	0
 5784 0262 06       		.uleb128 0x6
 5785 0263 81000000 		.4byte	0x81
 5786 0267 72020000 		.4byte	0x272
 5787 026b 07       		.uleb128 0x7
 5788 026c B6000000 		.4byte	0xb6
 5789 0270 04       		.byte	0x4
 5790 0271 00       		.byte	0
 5791 0272 06       		.uleb128 0x6
 5792 0273 81000000 		.4byte	0x81
 5793 0277 82020000 		.4byte	0x282
 5794 027b 07       		.uleb128 0x7
 5795 027c B6000000 		.4byte	0xb6
 5796 0280 08       		.byte	0x8
 5797 0281 00       		.byte	0
 5798 0282 06       		.uleb128 0x6
 5799 0283 81000000 		.4byte	0x81
 5800 0287 92020000 		.4byte	0x292
 5801 028b 07       		.uleb128 0x7
 5802 028c B6000000 		.4byte	0xb6
 5803 0290 07       		.byte	0x7
 5804 0291 00       		.byte	0
 5805 0292 06       		.uleb128 0x6
 5806 0293 81000000 		.4byte	0x81
 5807 0297 A2020000 		.4byte	0x2a2
 5808 029b 07       		.uleb128 0x7
 5809 029c B6000000 		.4byte	0xb6
 5810 02a0 0F       		.byte	0xf
 5811 02a1 00       		.byte	0
 5812 02a2 06       		.uleb128 0x6
 5813 02a3 81000000 		.4byte	0x81
 5814 02a7 B2020000 		.4byte	0x2b2
 5815 02ab 07       		.uleb128 0x7
 5816 02ac B6000000 		.4byte	0xb6
 5817 02b0 0A       		.byte	0xa
 5818 02b1 00       		.byte	0
 5819 02b2 0B       		.uleb128 0xb
 5820 02b3 86050000 		.4byte	.LASF130
 5821 02b7 01       		.byte	0x1
 5822 02b8 3F       		.byte	0x3f
 5823 02b9 00000000 		.4byte	.LFB63
 5824 02bd 14000000 		.4byte	.LFE63-.LFB63
 5825 02c1 01       		.uleb128 0x1
 5826 02c2 9C       		.byte	0x9c
 5827 02c3 0C       		.uleb128 0xc
 5828 02c4 C2040000 		.4byte	.LASF38
 5829 02c8 01       		.byte	0x1
 5830 02c9 56       		.byte	0x56
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 127


 5831 02ca 81000000 		.4byte	0x81
 5832 02ce 00000000 		.4byte	.LFB64
 5833 02d2 98000000 		.4byte	.LFE64-.LFB64
 5834 02d6 01       		.uleb128 0x1
 5835 02d7 9C       		.byte	0x9c
 5836 02d8 F9020000 		.4byte	0x2f9
 5837 02dc 0D       		.uleb128 0xd
 5838 02dd 64697200 		.ascii	"dir\000"
 5839 02e1 01       		.byte	0x1
 5840 02e2 56       		.byte	0x56
 5841 02e3 81000000 		.4byte	0x81
 5842 02e7 02       		.uleb128 0x2
 5843 02e8 91       		.byte	0x91
 5844 02e9 6F       		.sleb128 -17
 5845 02ea 0E       		.uleb128 0xe
 5846 02eb D3030000 		.4byte	.LASF17
 5847 02ef 01       		.byte	0x1
 5848 02f0 57       		.byte	0x57
 5849 02f1 81000000 		.4byte	0x81
 5850 02f5 02       		.uleb128 0x2
 5851 02f6 91       		.byte	0x91
 5852 02f7 77       		.sleb128 -9
 5853 02f8 00       		.byte	0
 5854 02f9 0C       		.uleb128 0xc
 5855 02fa DF010000 		.4byte	.LASF39
 5856 02fe 01       		.byte	0x1
 5857 02ff 86       		.byte	0x86
 5858 0300 81000000 		.4byte	0x81
 5859 0304 00000000 		.4byte	.LFB65
 5860 0308 A0000000 		.4byte	.LFE65-.LFB65
 5861 030c 01       		.uleb128 0x1
 5862 030d 9C       		.byte	0x9c
 5863 030e 1F030000 		.4byte	0x31f
 5864 0312 0F       		.uleb128 0xf
 5865 0313 7800     		.ascii	"x\000"
 5866 0315 01       		.byte	0x1
 5867 0316 87       		.byte	0x87
 5868 0317 81000000 		.4byte	0x81
 5869 031b 02       		.uleb128 0x2
 5870 031c 91       		.byte	0x91
 5871 031d 77       		.sleb128 -9
 5872 031e 00       		.byte	0
 5873 031f 10       		.uleb128 0x10
 5874 0320 DD040000 		.4byte	.LASF43
 5875 0324 01       		.byte	0x1
 5876 0325 B2       		.byte	0xb2
 5877 0326 00000000 		.4byte	.LFB66
 5878 032a 36000000 		.4byte	.LFE66-.LFB66
 5879 032e 01       		.uleb128 0x1
 5880 032f 9C       		.byte	0x9c
 5881 0330 51030000 		.4byte	0x351
 5882 0334 0D       		.uleb128 0xd
 5883 0335 76616C00 		.ascii	"val\000"
 5884 0339 01       		.byte	0x1
 5885 033a B2       		.byte	0xb2
 5886 033b 81000000 		.4byte	0x81
 5887 033f 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 128


 5888 0340 91       		.byte	0x91
 5889 0341 6F       		.sleb128 -17
 5890 0342 0E       		.uleb128 0xe
 5891 0343 D3030000 		.4byte	.LASF17
 5892 0347 01       		.byte	0x1
 5893 0348 B3       		.byte	0xb3
 5894 0349 81000000 		.4byte	0x81
 5895 034d 02       		.uleb128 0x2
 5896 034e 91       		.byte	0x91
 5897 034f 77       		.sleb128 -9
 5898 0350 00       		.byte	0
 5899 0351 0C       		.uleb128 0xc
 5900 0352 68040000 		.4byte	.LASF40
 5901 0356 01       		.byte	0x1
 5902 0357 CF       		.byte	0xcf
 5903 0358 81000000 		.4byte	0x81
 5904 035c 00000000 		.4byte	.LFB67
 5905 0360 7C010000 		.4byte	.LFE67-.LFB67
 5906 0364 01       		.uleb128 0x1
 5907 0365 9C       		.byte	0x9c
 5908 0366 A1030000 		.4byte	0x3a1
 5909 036a 0D       		.uleb128 0xd
 5910 036b 76616C00 		.ascii	"val\000"
 5911 036f 01       		.byte	0x1
 5912 0370 CF       		.byte	0xcf
 5913 0371 81000000 		.4byte	0x81
 5914 0375 02       		.uleb128 0x2
 5915 0376 91       		.byte	0x91
 5916 0377 4F       		.sleb128 -49
 5917 0378 0E       		.uleb128 0xe
 5918 0379 46050000 		.4byte	.LASF41
 5919 037d 01       		.byte	0x1
 5920 037e D0       		.byte	0xd0
 5921 037f A1030000 		.4byte	0x3a1
 5922 0383 02       		.uleb128 0x2
 5923 0384 91       		.byte	0x91
 5924 0385 5C       		.sleb128 -36
 5925 0386 0F       		.uleb128 0xf
 5926 0387 7800     		.ascii	"x\000"
 5927 0389 01       		.byte	0x1
 5928 038a D0       		.byte	0xd0
 5929 038b 81000000 		.4byte	0x81
 5930 038f 02       		.uleb128 0x2
 5931 0390 91       		.byte	0x91
 5932 0391 6F       		.sleb128 -17
 5933 0392 0E       		.uleb128 0xe
 5934 0393 39020000 		.4byte	.LASF42
 5935 0397 01       		.byte	0x1
 5936 0398 D0       		.byte	0xd0
 5937 0399 72020000 		.4byte	0x272
 5938 039d 02       		.uleb128 0x2
 5939 039e 91       		.byte	0x91
 5940 039f 50       		.sleb128 -48
 5941 03a0 00       		.byte	0
 5942 03a1 06       		.uleb128 0x6
 5943 03a2 81000000 		.4byte	0x81
 5944 03a6 B1030000 		.4byte	0x3b1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 129


 5945 03aa 07       		.uleb128 0x7
 5946 03ab B6000000 		.4byte	0xb6
 5947 03af 12       		.byte	0x12
 5948 03b0 00       		.byte	0
 5949 03b1 11       		.uleb128 0x11
 5950 03b2 31020000 		.4byte	.LASF44
 5951 03b6 01       		.byte	0x1
 5952 03b7 2001     		.2byte	0x120
 5953 03b9 00000000 		.4byte	.LFB68
 5954 03bd 24000000 		.4byte	.LFE68-.LFB68
 5955 03c1 01       		.uleb128 0x1
 5956 03c2 9C       		.byte	0x9c
 5957 03c3 D7030000 		.4byte	0x3d7
 5958 03c7 12       		.uleb128 0x12
 5959 03c8 76616C00 		.ascii	"val\000"
 5960 03cc 01       		.byte	0x1
 5961 03cd 2001     		.2byte	0x120
 5962 03cf 81000000 		.4byte	0x81
 5963 03d3 02       		.uleb128 0x2
 5964 03d4 91       		.byte	0x91
 5965 03d5 77       		.sleb128 -9
 5966 03d6 00       		.byte	0
 5967 03d7 13       		.uleb128 0x13
 5968 03d8 EF010000 		.4byte	.LASF45
 5969 03dc 01       		.byte	0x1
 5970 03dd 3501     		.2byte	0x135
 5971 03df 81000000 		.4byte	0x81
 5972 03e3 00000000 		.4byte	.LFB69
 5973 03e7 54030000 		.4byte	.LFE69-.LFB69
 5974 03eb 01       		.uleb128 0x1
 5975 03ec 9C       		.byte	0x9c
 5976 03ed 0E040000 		.4byte	0x40e
 5977 03f1 12       		.uleb128 0x12
 5978 03f2 64697200 		.ascii	"dir\000"
 5979 03f6 01       		.byte	0x1
 5980 03f7 3501     		.2byte	0x135
 5981 03f9 81000000 		.4byte	0x81
 5982 03fd 02       		.uleb128 0x2
 5983 03fe 91       		.byte	0x91
 5984 03ff 6F       		.sleb128 -17
 5985 0400 14       		.uleb128 0x14
 5986 0401 7800     		.ascii	"x\000"
 5987 0403 01       		.byte	0x1
 5988 0404 3601     		.2byte	0x136
 5989 0406 81000000 		.4byte	0x81
 5990 040a 02       		.uleb128 0x2
 5991 040b 91       		.byte	0x91
 5992 040c 77       		.sleb128 -9
 5993 040d 00       		.byte	0
 5994 040e 13       		.uleb128 0x13
 5995 040f 72040000 		.4byte	.LASF46
 5996 0413 01       		.byte	0x1
 5997 0414 8D01     		.2byte	0x18d
 5998 0416 81000000 		.4byte	0x81
 5999 041a 00000000 		.4byte	.LFB70
 6000 041e 80080000 		.4byte	.LFE70-.LFB70
 6001 0422 01       		.uleb128 0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 130


 6002 0423 9C       		.byte	0x9c
 6003 0424 AE040000 		.4byte	0x4ae
 6004 0428 12       		.uleb128 0x12
 6005 0429 64697200 		.ascii	"dir\000"
 6006 042d 01       		.byte	0x1
 6007 042e 8D01     		.2byte	0x18d
 6008 0430 81000000 		.4byte	0x81
 6009 0434 02       		.uleb128 0x2
 6010 0435 91       		.byte	0x91
 6011 0436 5F       		.sleb128 -33
 6012 0437 15       		.uleb128 0x15
 6013 0438 80050000 		.4byte	.LASF19
 6014 043c 01       		.byte	0x1
 6015 043d 8D01     		.2byte	0x18d
 6016 043f 81000000 		.4byte	0x81
 6017 0443 02       		.uleb128 0x2
 6018 0444 91       		.byte	0x91
 6019 0445 5E       		.sleb128 -34
 6020 0446 15       		.uleb128 0x15
 6021 0447 0A050000 		.4byte	.LASF47
 6022 044b 01       		.byte	0x1
 6023 044c 8D01     		.2byte	0x18d
 6024 044e AE040000 		.4byte	0x4ae
 6025 0452 02       		.uleb128 0x2
 6026 0453 91       		.byte	0x91
 6027 0454 58       		.sleb128 -40
 6028 0455 15       		.uleb128 0x15
 6029 0456 07010000 		.4byte	.LASF28
 6030 045a 01       		.byte	0x1
 6031 045b 8D01     		.2byte	0x18d
 6032 045d 81000000 		.4byte	0x81
 6033 0461 02       		.uleb128 0x2
 6034 0462 91       		.byte	0x91
 6035 0463 5D       		.sleb128 -35
 6036 0464 16       		.uleb128 0x16
 6037 0465 82000000 		.4byte	.LASF48
 6038 0469 01       		.byte	0x1
 6039 046a 8E01     		.2byte	0x18e
 6040 046c B4040000 		.4byte	0x4b4
 6041 0470 02       		.uleb128 0x2
 6042 0471 91       		.byte	0x91
 6043 0472 60       		.sleb128 -32
 6044 0473 16       		.uleb128 0x16
 6045 0474 B4030000 		.4byte	.LASF49
 6046 0478 01       		.byte	0x1
 6047 0479 8E01     		.2byte	0x18e
 6048 047b 81000000 		.4byte	0x81
 6049 047f 02       		.uleb128 0x2
 6050 0480 91       		.byte	0x91
 6051 0481 77       		.sleb128 -9
 6052 0482 16       		.uleb128 0x16
 6053 0483 4B040000 		.4byte	.LASF50
 6054 0487 01       		.byte	0x1
 6055 0488 8E01     		.2byte	0x18e
 6056 048a 81000000 		.4byte	0x81
 6057 048e 02       		.uleb128 0x2
 6058 048f 91       		.byte	0x91
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 131


 6059 0490 76       		.sleb128 -10
 6060 0491 14       		.uleb128 0x14
 6061 0492 6900     		.ascii	"i\000"
 6062 0494 01       		.byte	0x1
 6063 0495 8E01     		.2byte	0x18e
 6064 0497 81000000 		.4byte	0x81
 6065 049b 02       		.uleb128 0x2
 6066 049c 91       		.byte	0x91
 6067 049d 75       		.sleb128 -11
 6068 049e 16       		.uleb128 0x16
 6069 049f BD000000 		.4byte	.LASF51
 6070 04a3 01       		.byte	0x1
 6071 04a4 8E01     		.2byte	0x18e
 6072 04a6 81000000 		.4byte	0x81
 6073 04aa 02       		.uleb128 0x2
 6074 04ab 91       		.byte	0x91
 6075 04ac 74       		.sleb128 -12
 6076 04ad 00       		.byte	0
 6077 04ae 17       		.uleb128 0x17
 6078 04af 04       		.byte	0x4
 6079 04b0 81000000 		.4byte	0x81
 6080 04b4 06       		.uleb128 0x6
 6081 04b5 81000000 		.4byte	0x81
 6082 04b9 C4040000 		.4byte	0x4c4
 6083 04bd 07       		.uleb128 0x7
 6084 04be B6000000 		.4byte	0xb6
 6085 04c2 11       		.byte	0x11
 6086 04c3 00       		.byte	0
 6087 04c4 13       		.uleb128 0x13
 6088 04c5 F9020000 		.4byte	.LASF52
 6089 04c9 01       		.byte	0x1
 6090 04ca 9102     		.2byte	0x291
 6091 04cc 81000000 		.4byte	0x81
 6092 04d0 00000000 		.4byte	.LFB71
 6093 04d4 7C020000 		.4byte	.LFE71-.LFB71
 6094 04d8 01       		.uleb128 0x1
 6095 04d9 9C       		.byte	0x9c
 6096 04da 37050000 		.4byte	0x537
 6097 04de 12       		.uleb128 0x12
 6098 04df 64697200 		.ascii	"dir\000"
 6099 04e3 01       		.byte	0x1
 6100 04e4 9102     		.2byte	0x291
 6101 04e6 81000000 		.4byte	0x81
 6102 04ea 02       		.uleb128 0x2
 6103 04eb 91       		.byte	0x91
 6104 04ec 5F       		.sleb128 -33
 6105 04ed 15       		.uleb128 0x15
 6106 04ee A8000000 		.4byte	.LASF53
 6107 04f2 01       		.byte	0x1
 6108 04f3 9102     		.2byte	0x291
 6109 04f5 AE040000 		.4byte	0x4ae
 6110 04f9 02       		.uleb128 0x2
 6111 04fa 91       		.byte	0x91
 6112 04fb 58       		.sleb128 -40
 6113 04fc 15       		.uleb128 0x15
 6114 04fd B5000000 		.4byte	.LASF54
 6115 0501 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 132


 6116 0502 9102     		.2byte	0x291
 6117 0504 81000000 		.4byte	0x81
 6118 0508 02       		.uleb128 0x2
 6119 0509 91       		.byte	0x91
 6120 050a 5E       		.sleb128 -34
 6121 050b 16       		.uleb128 0x16
 6122 050c 82000000 		.4byte	.LASF48
 6123 0510 01       		.byte	0x1
 6124 0511 9202     		.2byte	0x292
 6125 0513 37050000 		.4byte	0x537
 6126 0517 02       		.uleb128 0x2
 6127 0518 91       		.byte	0x91
 6128 0519 64       		.sleb128 -28
 6129 051a 16       		.uleb128 0x16
 6130 051b B4030000 		.4byte	.LASF49
 6131 051f 01       		.byte	0x1
 6132 0520 9202     		.2byte	0x292
 6133 0522 81000000 		.4byte	0x81
 6134 0526 02       		.uleb128 0x2
 6135 0527 91       		.byte	0x91
 6136 0528 77       		.sleb128 -9
 6137 0529 14       		.uleb128 0x14
 6138 052a 7800     		.ascii	"x\000"
 6139 052c 01       		.byte	0x1
 6140 052d 9202     		.2byte	0x292
 6141 052f 81000000 		.4byte	0x81
 6142 0533 02       		.uleb128 0x2
 6143 0534 91       		.byte	0x91
 6144 0535 76       		.sleb128 -10
 6145 0536 00       		.byte	0
 6146 0537 06       		.uleb128 0x6
 6147 0538 81000000 		.4byte	0x81
 6148 053c 47050000 		.4byte	0x547
 6149 0540 07       		.uleb128 0x7
 6150 0541 B6000000 		.4byte	0xb6
 6151 0545 0E       		.byte	0xe
 6152 0546 00       		.byte	0
 6153 0547 13       		.uleb128 0x13
 6154 0548 A5020000 		.4byte	.LASF18
 6155 054c 01       		.byte	0x1
 6156 054d EA02     		.2byte	0x2ea
 6157 054f 81000000 		.4byte	0x81
 6158 0553 00000000 		.4byte	.LFB72
 6159 0557 94100000 		.4byte	.LFE72-.LFB72
 6160 055b 01       		.uleb128 0x1
 6161 055c 9C       		.byte	0x9c
 6162 055d 9A050000 		.4byte	0x59a
 6163 0561 12       		.uleb128 0x12
 6164 0562 64697200 		.ascii	"dir\000"
 6165 0566 01       		.byte	0x1
 6166 0567 EA02     		.2byte	0x2ea
 6167 0569 81000000 		.4byte	0x81
 6168 056d 02       		.uleb128 0x2
 6169 056e 91       		.byte	0x91
 6170 056f 6F       		.sleb128 -17
 6171 0570 15       		.uleb128 0x15
 6172 0571 01040000 		.4byte	.LASF55
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 133


 6173 0575 01       		.byte	0x1
 6174 0576 EA02     		.2byte	0x2ea
 6175 0578 81000000 		.4byte	0x81
 6176 057c 02       		.uleb128 0x2
 6177 057d 91       		.byte	0x91
 6178 057e 6E       		.sleb128 -18
 6179 057f 14       		.uleb128 0x14
 6180 0580 7800     		.ascii	"x\000"
 6181 0582 01       		.byte	0x1
 6182 0583 EB02     		.2byte	0x2eb
 6183 0585 81000000 		.4byte	0x81
 6184 0589 02       		.uleb128 0x2
 6185 058a 91       		.byte	0x91
 6186 058b 77       		.sleb128 -9
 6187 058c 14       		.uleb128 0x14
 6188 058d 7900     		.ascii	"y\000"
 6189 058f 01       		.byte	0x1
 6190 0590 EB02     		.2byte	0x2eb
 6191 0592 81000000 		.4byte	0x81
 6192 0596 02       		.uleb128 0x2
 6193 0597 91       		.byte	0x91
 6194 0598 76       		.sleb128 -10
 6195 0599 00       		.byte	0
 6196 059a 06       		.uleb128 0x6
 6197 059b 81000000 		.4byte	0x81
 6198 059f AA050000 		.4byte	0x5aa
 6199 05a3 07       		.uleb128 0x7
 6200 05a4 B6000000 		.4byte	0xb6
 6201 05a8 FF       		.byte	0xff
 6202 05a9 00       		.byte	0
 6203 05aa 18       		.uleb128 0x18
 6204 05ab A8010000 		.4byte	.LASF56
 6205 05af 06       		.byte	0x6
 6206 05b0 3E01     		.2byte	0x13e
 6207 05b2 B6050000 		.4byte	0x5b6
 6208 05b6 05       		.uleb128 0x5
 6209 05b7 9A050000 		.4byte	0x59a
 6210 05bb 18       		.uleb128 0x18
 6211 05bc 27040000 		.4byte	.LASF57
 6212 05c0 07       		.byte	0x7
 6213 05c1 2A06     		.2byte	0x62a
 6214 05c3 C7050000 		.4byte	0x5c7
 6215 05c7 05       		.uleb128 0x5
 6216 05c8 76000000 		.4byte	0x76
 6217 05cc 19       		.uleb128 0x19
 6218 05cd BA020000 		.4byte	.LASF58
 6219 05d1 05       		.byte	0x5
 6220 05d2 43       		.byte	0x43
 6221 05d3 AC000000 		.4byte	0xac
 6222 05d7 05       		.uleb128 0x5
 6223 05d8 03       		.byte	0x3
 6224 05d9 00000000 		.4byte	count_teclas1
 6225 05dd 19       		.uleb128 0x19
 6226 05de 3D040000 		.4byte	.LASF59
 6227 05e2 05       		.byte	0x5
 6228 05e3 43       		.byte	0x43
 6229 05e4 AC000000 		.4byte	0xac
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 134


 6230 05e8 05       		.uleb128 0x5
 6231 05e9 03       		.byte	0x3
 6232 05ea 00000000 		.4byte	comas1
 6233 05ee 19       		.uleb128 0x19
 6234 05ef 44040000 		.4byte	.LASF60
 6235 05f3 05       		.byte	0x5
 6236 05f4 43       		.byte	0x43
 6237 05f5 AC000000 		.4byte	0xac
 6238 05f9 05       		.uleb128 0x5
 6239 05fa 03       		.byte	0x3
 6240 05fb 00000000 		.4byte	comas2
 6241 05ff 19       		.uleb128 0x19
 6242 0600 70000000 		.4byte	.LASF61
 6243 0604 05       		.byte	0x5
 6244 0605 43       		.byte	0x43
 6245 0606 AC000000 		.4byte	0xac
 6246 060a 05       		.uleb128 0x5
 6247 060b 03       		.byte	0x3
 6248 060c 00000000 		.4byte	id_coma1
 6249 0610 19       		.uleb128 0x19
 6250 0611 FE010000 		.4byte	.LASF62
 6251 0615 05       		.byte	0x5
 6252 0616 43       		.byte	0x43
 6253 0617 AC000000 		.4byte	0xac
 6254 061b 05       		.uleb128 0x5
 6255 061c 03       		.byte	0x3
 6256 061d 00000000 		.4byte	id_teclado1
 6257 0621 19       		.uleb128 0x19
 6258 0622 C8020000 		.4byte	.LASF63
 6259 0626 05       		.byte	0x5
 6260 0627 43       		.byte	0x43
 6261 0628 AC000000 		.4byte	0xac
 6262 062c 05       		.uleb128 0x5
 6263 062d 03       		.byte	0x3
 6264 062e 00000000 		.4byte	count_teclas2
 6265 0632 19       		.uleb128 0x19
 6266 0633 79000000 		.4byte	.LASF64
 6267 0637 05       		.byte	0x5
 6268 0638 43       		.byte	0x43
 6269 0639 AC000000 		.4byte	0xac
 6270 063d 05       		.uleb128 0x5
 6271 063e 03       		.byte	0x3
 6272 063f 00000000 		.4byte	id_coma2
 6273 0643 19       		.uleb128 0x19
 6274 0644 0A020000 		.4byte	.LASF65
 6275 0648 05       		.byte	0x5
 6276 0649 43       		.byte	0x43
 6277 064a AC000000 		.4byte	0xac
 6278 064e 05       		.uleb128 0x5
 6279 064f 03       		.byte	0x3
 6280 0650 00000000 		.4byte	id_teclado2
 6281 0654 19       		.uleb128 0x19
 6282 0655 D6020000 		.4byte	.LASF66
 6283 0659 05       		.byte	0x5
 6284 065a 44       		.byte	0x44
 6285 065b B1000000 		.4byte	0xb1
 6286 065f 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 135


 6287 0660 03       		.byte	0x3
 6288 0661 00000000 		.4byte	posx1
 6289 0665 19       		.uleb128 0x19
 6290 0666 A8030000 		.4byte	.LASF67
 6291 066a 05       		.byte	0x5
 6292 066b 44       		.byte	0x44
 6293 066c B1000000 		.4byte	0xb1
 6294 0670 05       		.uleb128 0x5
 6295 0671 03       		.byte	0x3
 6296 0672 00000000 		.4byte	posy1
 6297 0676 19       		.uleb128 0x19
 6298 0677 92050000 		.4byte	.LASF68
 6299 067b 05       		.byte	0x5
 6300 067c 44       		.byte	0x44
 6301 067d B1000000 		.4byte	0xb1
 6302 0681 05       		.uleb128 0x5
 6303 0682 03       		.byte	0x3
 6304 0683 00000000 		.4byte	sizeletra1
 6305 0687 19       		.uleb128 0x19
 6306 0688 DC020000 		.4byte	.LASF69
 6307 068c 05       		.byte	0x5
 6308 068d 44       		.byte	0x44
 6309 068e B1000000 		.4byte	0xb1
 6310 0692 05       		.uleb128 0x5
 6311 0693 03       		.byte	0x3
 6312 0694 00000000 		.4byte	posx2
 6313 0698 19       		.uleb128 0x19
 6314 0699 AE030000 		.4byte	.LASF70
 6315 069d 05       		.byte	0x5
 6316 069e 44       		.byte	0x44
 6317 069f B1000000 		.4byte	0xb1
 6318 06a3 05       		.uleb128 0x5
 6319 06a4 03       		.byte	0x3
 6320 06a5 00000000 		.4byte	posy2
 6321 06a9 19       		.uleb128 0x19
 6322 06aa 9D050000 		.4byte	.LASF71
 6323 06ae 05       		.byte	0x5
 6324 06af 44       		.byte	0x44
 6325 06b0 B1000000 		.4byte	0xb1
 6326 06b4 05       		.uleb128 0x5
 6327 06b5 03       		.byte	0x3
 6328 06b6 00000000 		.4byte	sizeletra2
 6329 06ba 19       		.uleb128 0x19
 6330 06bb CA000000 		.4byte	.LASF72
 6331 06bf 05       		.byte	0x5
 6332 06c0 45       		.byte	0x45
 6333 06c1 AC000000 		.4byte	0xac
 6334 06c5 05       		.uleb128 0x5
 6335 06c6 03       		.byte	0x3
 6336 06c7 00000000 		.4byte	teclas1
 6337 06cb 19       		.uleb128 0x19
 6338 06cc D2000000 		.4byte	.LASF73
 6339 06d0 05       		.byte	0x5
 6340 06d1 45       		.byte	0x45
 6341 06d2 AC000000 		.4byte	0xac
 6342 06d6 05       		.uleb128 0x5
 6343 06d7 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 136


 6344 06d8 00000000 		.4byte	teclas2
 6345 06dc 19       		.uleb128 0x19
 6346 06dd 09000000 		.4byte	.LASF74
 6347 06e1 05       		.byte	0x5
 6348 06e2 46       		.byte	0x46
 6349 06e3 AC000000 		.4byte	0xac
 6350 06e7 05       		.uleb128 0x5
 6351 06e8 03       		.byte	0x3
 6352 06e9 00000000 		.4byte	flujo_LCD1
 6353 06ed 19       		.uleb128 0x19
 6354 06ee 14000000 		.4byte	.LASF75
 6355 06f2 05       		.byte	0x5
 6356 06f3 46       		.byte	0x46
 6357 06f4 AC000000 		.4byte	0xac
 6358 06f8 05       		.uleb128 0x5
 6359 06f9 03       		.byte	0x3
 6360 06fa 00000000 		.4byte	flujo_LCD2
 6361 06fe 19       		.uleb128 0x19
 6362 06ff C9010000 		.4byte	.LASF76
 6363 0703 05       		.byte	0x5
 6364 0704 47       		.byte	0x47
 6365 0705 AC000000 		.4byte	0xac
 6366 0709 05       		.uleb128 0x5
 6367 070a 03       		.byte	0x3
 6368 070b 00000000 		.4byte	flujo_pos1
 6369 070f 19       		.uleb128 0x19
 6370 0710 D4010000 		.4byte	.LASF77
 6371 0714 05       		.byte	0x5
 6372 0715 47       		.byte	0x47
 6373 0716 AC000000 		.4byte	0xac
 6374 071a 05       		.uleb128 0x5
 6375 071b 03       		.byte	0x3
 6376 071c 00000000 		.4byte	flujo_pos2
 6377 0720 19       		.uleb128 0x19
 6378 0721 85010000 		.4byte	.LASF78
 6379 0725 05       		.byte	0x5
 6380 0726 48       		.byte	0x48
 6381 0727 AC000000 		.4byte	0xac
 6382 072b 05       		.uleb128 0x5
 6383 072c 03       		.byte	0x3
 6384 072d 00000000 		.4byte	seleccion_pos
 6385 0731 19       		.uleb128 0x19
 6386 0732 CD040000 		.4byte	.LASF79
 6387 0736 05       		.byte	0x5
 6388 0737 49       		.byte	0x49
 6389 0738 AC000000 		.4byte	0xac
 6390 073c 05       		.uleb128 0x5
 6391 073d 03       		.byte	0x3
 6392 073e 00000000 		.4byte	flujo_pos
 6393 0742 19       		.uleb128 0x19
 6394 0743 78010000 		.4byte	.LASF80
 6395 0747 05       		.byte	0x5
 6396 0748 4A       		.byte	0x4a
 6397 0749 AC000000 		.4byte	0xac
 6398 074d 05       		.uleb128 0x5
 6399 074e 03       		.byte	0x3
 6400 074f 00000000 		.4byte	venta_activa
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 137


 6401 0753 19       		.uleb128 0x19
 6402 0754 36010000 		.4byte	.LASF81
 6403 0758 05       		.byte	0x5
 6404 0759 4A       		.byte	0x4a
 6405 075a AC000000 		.4byte	0xac
 6406 075e 05       		.uleb128 0x5
 6407 075f 03       		.byte	0x3
 6408 0760 00000000 		.4byte	venta_activa2
 6409 0764 06       		.uleb128 0x6
 6410 0765 81000000 		.4byte	0x81
 6411 0769 74070000 		.4byte	0x774
 6412 076d 07       		.uleb128 0x7
 6413 076e B6000000 		.4byte	0xb6
 6414 0772 1D       		.byte	0x1d
 6415 0773 00       		.byte	0
 6416 0774 19       		.uleb128 0x19
 6417 0775 C7030000 		.4byte	.LASF82
 6418 0779 05       		.byte	0x5
 6419 077a 4B       		.byte	0x4b
 6420 077b 85070000 		.4byte	0x785
 6421 077f 05       		.uleb128 0x5
 6422 0780 03       		.byte	0x3
 6423 0781 00000000 		.4byte	Buffer_LCD1
 6424 0785 05       		.uleb128 0x5
 6425 0786 64070000 		.4byte	0x764
 6426 078a 19       		.uleb128 0x19
 6427 078b 46020000 		.4byte	.LASF83
 6428 078f 05       		.byte	0x5
 6429 0790 4C       		.byte	0x4c
 6430 0791 9B070000 		.4byte	0x79b
 6431 0795 05       		.uleb128 0x5
 6432 0796 03       		.byte	0x3
 6433 0797 00000000 		.4byte	Buffer_LCD2
 6434 079b 05       		.uleb128 0x5
 6435 079c 64070000 		.4byte	0x764
 6436 07a0 19       		.uleb128 0x19
 6437 07a1 10050000 		.4byte	.LASF84
 6438 07a5 05       		.byte	0x5
 6439 07a6 4D       		.byte	0x4d
 6440 07a7 AC000000 		.4byte	0xac
 6441 07ab 05       		.uleb128 0x5
 6442 07ac 03       		.byte	0x3
 6443 07ad 00000000 		.4byte	count_protector
 6444 07b1 19       		.uleb128 0x19
 6445 07b2 1F000000 		.4byte	.LASF85
 6446 07b6 05       		.byte	0x5
 6447 07b7 4D       		.byte	0x4d
 6448 07b8 AC000000 		.4byte	0xac
 6449 07bc 05       		.uleb128 0x5
 6450 07bd 03       		.byte	0x3
 6451 07be 00000000 		.4byte	count_protector2
 6452 07c2 19       		.uleb128 0x19
 6453 07c3 AD020000 		.4byte	.LASF86
 6454 07c7 05       		.byte	0x5
 6455 07c8 4E       		.byte	0x4e
 6456 07c9 D3070000 		.4byte	0x7d3
 6457 07cd 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 138


 6458 07ce 03       		.byte	0x3
 6459 07cf 00000000 		.4byte	password_lcd
 6460 07d3 05       		.uleb128 0x5
 6461 07d4 72020000 		.4byte	0x272
 6462 07d8 19       		.uleb128 0x19
 6463 07d9 73050000 		.4byte	.LASF87
 6464 07dd 05       		.byte	0x5
 6465 07de 4F       		.byte	0x4f
 6466 07df B1000000 		.4byte	0xb1
 6467 07e3 05       		.uleb128 0x5
 6468 07e4 03       		.byte	0x3
 6469 07e5 00000000 		.4byte	imagen_grado
 6470 07e9 06       		.uleb128 0x6
 6471 07ea 8C000000 		.4byte	0x8c
 6472 07ee FF070000 		.4byte	0x7ff
 6473 07f2 07       		.uleb128 0x7
 6474 07f3 B6000000 		.4byte	0xb6
 6475 07f7 01       		.byte	0x1
 6476 07f8 07       		.uleb128 0x7
 6477 07f9 B6000000 		.4byte	0xb6
 6478 07fd 01       		.byte	0x1
 6479 07fe 00       		.byte	0
 6480 07ff 19       		.uleb128 0x19
 6481 0800 FD000000 		.4byte	.LASF88
 6482 0804 05       		.byte	0x5
 6483 0805 50       		.byte	0x50
 6484 0806 10080000 		.4byte	0x810
 6485 080a 05       		.uleb128 0x5
 6486 080b 03       		.byte	0x3
 6487 080c 00000000 		.4byte	prox_caso
 6488 0810 05       		.uleb128 0x5
 6489 0811 E9070000 		.4byte	0x7e9
 6490 0815 06       		.uleb128 0x6
 6491 0816 81000000 		.4byte	0x81
 6492 081a 25080000 		.4byte	0x825
 6493 081e 07       		.uleb128 0x7
 6494 081f B6000000 		.4byte	0xb6
 6495 0823 02       		.byte	0x2
 6496 0824 00       		.byte	0
 6497 0825 19       		.uleb128 0x19
 6498 0826 57020000 		.4byte	.LASF89
 6499 082a 05       		.byte	0x5
 6500 082b 51       		.byte	0x51
 6501 082c 36080000 		.4byte	0x836
 6502 0830 05       		.uleb128 0x5
 6503 0831 03       		.byte	0x3
 6504 0832 00000000 		.4byte	bloqueo_LCD
 6505 0836 05       		.uleb128 0x5
 6506 0837 15080000 		.4byte	0x815
 6507 083b 19       		.uleb128 0x19
 6508 083c 5E050000 		.4byte	.LASF90
 6509 0840 05       		.byte	0x5
 6510 0841 52       		.byte	0x52
 6511 0842 4C080000 		.4byte	0x84c
 6512 0846 05       		.uleb128 0x5
 6513 0847 03       		.byte	0x3
 6514 0848 00000000 		.4byte	id_estacion
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 139


 6515 084c 05       		.uleb128 0x5
 6516 084d 62020000 		.4byte	0x262
 6517 0851 19       		.uleb128 0x19
 6518 0852 16020000 		.4byte	.LASF91
 6519 0856 05       		.byte	0x5
 6520 0857 53       		.byte	0x53
 6521 0858 62080000 		.4byte	0x862
 6522 085c 05       		.uleb128 0x5
 6523 085d 03       		.byte	0x3
 6524 085e 00000000 		.4byte	id_venta
 6525 0862 05       		.uleb128 0x5
 6526 0863 82020000 		.4byte	0x282
 6527 0867 06       		.uleb128 0x6
 6528 0868 81000000 		.4byte	0x81
 6529 086c 77080000 		.4byte	0x877
 6530 0870 07       		.uleb128 0x7
 6531 0871 B6000000 		.4byte	0xb6
 6532 0875 C7       		.byte	0xc7
 6533 0876 00       		.byte	0
 6534 0877 19       		.uleb128 0x19
 6535 0878 50050000 		.4byte	.LASF92
 6536 087c 05       		.byte	0x5
 6537 087d 54       		.byte	0x54
 6538 087e 88080000 		.4byte	0x888
 6539 0882 05       		.uleb128 0x5
 6540 0883 03       		.byte	0x3
 6541 0884 00000000 		.4byte	trama_totales
 6542 0888 05       		.uleb128 0x5
 6543 0889 67080000 		.4byte	0x867
 6544 088d 19       		.uleb128 0x19
 6545 088e E9030000 		.4byte	.LASF93
 6546 0892 05       		.byte	0x5
 6547 0893 58       		.byte	0x58
 6548 0894 AC000000 		.4byte	0xac
 6549 0898 05       		.uleb128 0x5
 6550 0899 03       		.byte	0x3
 6551 089a 00000000 		.4byte	ppux10
 6552 089e 06       		.uleb128 0x6
 6553 089f 81000000 		.4byte	0x81
 6554 08a3 AE080000 		.4byte	0x8ae
 6555 08a7 07       		.uleb128 0x7
 6556 08a8 B6000000 		.4byte	0xb6
 6557 08ac 10       		.byte	0x10
 6558 08ad 00       		.byte	0
 6559 08ae 19       		.uleb128 0x19
 6560 08af 50040000 		.4byte	.LASF94
 6561 08b3 05       		.byte	0x5
 6562 08b4 59       		.byte	0x59
 6563 08b5 BF080000 		.4byte	0x8bf
 6564 08b9 05       		.uleb128 0x5
 6565 08ba 03       		.byte	0x3
 6566 08bb 00000000 		.4byte	nombre_pro1
 6567 08bf 05       		.uleb128 0x5
 6568 08c0 9E080000 		.4byte	0x89e
 6569 08c4 19       		.uleb128 0x19
 6570 08c5 F2040000 		.4byte	.LASF95
 6571 08c9 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 140


 6572 08ca 59       		.byte	0x59
 6573 08cb D5080000 		.4byte	0x8d5
 6574 08cf 05       		.uleb128 0x5
 6575 08d0 03       		.byte	0x3
 6576 08d1 00000000 		.4byte	nombre_pro2
 6577 08d5 05       		.uleb128 0x5
 6578 08d6 9E080000 		.4byte	0x89e
 6579 08da 19       		.uleb128 0x19
 6580 08db 5C040000 		.4byte	.LASF96
 6581 08df 05       		.byte	0x5
 6582 08e0 59       		.byte	0x59
 6583 08e1 EB080000 		.4byte	0x8eb
 6584 08e5 05       		.uleb128 0x5
 6585 08e6 03       		.byte	0x3
 6586 08e7 00000000 		.4byte	nombre_pro3
 6587 08eb 05       		.uleb128 0x5
 6588 08ec 9E080000 		.4byte	0x89e
 6589 08f0 19       		.uleb128 0x19
 6590 08f1 96000000 		.4byte	.LASF97
 6591 08f5 05       		.byte	0x5
 6592 08f6 5A       		.byte	0x5a
 6593 08f7 01090000 		.4byte	0x901
 6594 08fb 05       		.uleb128 0x5
 6595 08fc 03       		.byte	0x3
 6596 08fd 00000000 		.4byte	version
 6597 0901 05       		.uleb128 0x5
 6598 0902 BD000000 		.4byte	0xbd
 6599 0906 19       		.uleb128 0x19
 6600 0907 C0010000 		.4byte	.LASF98
 6601 090b 05       		.byte	0x5
 6602 090c 5B       		.byte	0x5b
 6603 090d AC000000 		.4byte	0xac
 6604 0911 05       		.uleb128 0x5
 6605 0912 03       		.byte	0x3
 6606 0913 00000000 		.4byte	kmscreen
 6607 0917 19       		.uleb128 0x19
 6608 0918 9F040000 		.4byte	.LASF99
 6609 091c 05       		.byte	0x5
 6610 091d 5B       		.byte	0x5b
 6611 091e AC000000 		.4byte	0xac
 6612 0922 05       		.uleb128 0x5
 6613 0923 03       		.byte	0x3
 6614 0924 00000000 		.4byte	pantallas
 6615 0928 19       		.uleb128 0x19
 6616 0929 30000000 		.4byte	.LASF100
 6617 092d 05       		.byte	0x5
 6618 092e 5B       		.byte	0x5b
 6619 092f AC000000 		.4byte	0xac
 6620 0933 05       		.uleb128 0x5
 6621 0934 03       		.byte	0x3
 6622 0935 00000000 		.4byte	efectivo
 6623 0939 19       		.uleb128 0x19
 6624 093a 72010000 		.4byte	.LASF101
 6625 093e 05       		.byte	0x5
 6626 093f 65       		.byte	0x65
 6627 0940 CD000000 		.4byte	0xcd
 6628 0944 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 141


 6629 0945 03       		.byte	0x3
 6630 0946 00000000 		.4byte	lado1
 6631 094a 19       		.uleb128 0x19
 6632 094b D7040000 		.4byte	.LASF102
 6633 094f 05       		.byte	0x5
 6634 0950 66       		.byte	0x66
 6635 0951 CD000000 		.4byte	0xcd
 6636 0955 05       		.uleb128 0x5
 6637 0956 03       		.byte	0x3
 6638 0957 00000000 		.4byte	lado2
 6639 095b 06       		.uleb128 0x6
 6640 095c 81000000 		.4byte	0x81
 6641 0960 6B090000 		.4byte	0x96b
 6642 0964 07       		.uleb128 0x7
 6643 0965 B6000000 		.4byte	0xb6
 6644 0969 20       		.byte	0x20
 6645 096a 00       		.byte	0
 6646 096b 19       		.uleb128 0x19
 6647 096c F0030000 		.4byte	.LASF103
 6648 0970 05       		.byte	0x5
 6649 0971 6A       		.byte	0x6a
 6650 0972 7C090000 		.4byte	0x97c
 6651 0976 05       		.uleb128 0x5
 6652 0977 03       		.byte	0x3
 6653 0978 00000000 		.4byte	nombre
 6654 097c 05       		.uleb128 0x5
 6655 097d 5B090000 		.4byte	0x95b
 6656 0981 1A       		.uleb128 0x1a
 6657 0982 6E697400 		.ascii	"nit\000"
 6658 0986 05       		.byte	0x5
 6659 0987 6B       		.byte	0x6b
 6660 0988 92090000 		.4byte	0x992
 6661 098c 05       		.uleb128 0x5
 6662 098d 03       		.byte	0x3
 6663 098e 00000000 		.4byte	nit
 6664 0992 05       		.uleb128 0x5
 6665 0993 37050000 		.4byte	0x537
 6666 0997 06       		.uleb128 0x6
 6667 0998 81000000 		.4byte	0x81
 6668 099c A7090000 		.4byte	0x9a7
 6669 09a0 07       		.uleb128 0x7
 6670 09a1 B6000000 		.4byte	0xb6
 6671 09a5 13       		.byte	0x13
 6672 09a6 00       		.byte	0
 6673 09a7 19       		.uleb128 0x19
 6674 09a8 F5010000 		.4byte	.LASF104
 6675 09ac 05       		.byte	0x5
 6676 09ad 6C       		.byte	0x6c
 6677 09ae B8090000 		.4byte	0x9b8
 6678 09b2 05       		.uleb128 0x5
 6679 09b3 03       		.byte	0x3
 6680 09b4 00000000 		.4byte	telefono
 6681 09b8 05       		.uleb128 0x5
 6682 09b9 97090000 		.4byte	0x997
 6683 09bd 19       		.uleb128 0x19
 6684 09be F3000000 		.4byte	.LASF105
 6685 09c2 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 142


 6686 09c3 6D       		.byte	0x6d
 6687 09c4 CE090000 		.4byte	0x9ce
 6688 09c8 05       		.uleb128 0x5
 6689 09c9 03       		.byte	0x3
 6690 09ca 00000000 		.4byte	direccion
 6691 09ce 05       		.uleb128 0x5
 6692 09cf 5B090000 		.4byte	0x95b
 6693 09d3 06       		.uleb128 0x6
 6694 09d4 81000000 		.4byte	0x81
 6695 09d8 E3090000 		.4byte	0x9e3
 6696 09dc 07       		.uleb128 0x7
 6697 09dd B6000000 		.4byte	0xb6
 6698 09e1 1F       		.byte	0x1f
 6699 09e2 00       		.byte	0
 6700 09e3 19       		.uleb128 0x19
 6701 09e4 2A010000 		.4byte	.LASF106
 6702 09e8 05       		.byte	0x5
 6703 09e9 6E       		.byte	0x6e
 6704 09ea F4090000 		.4byte	0x9f4
 6705 09ee 05       		.uleb128 0x5
 6706 09ef 03       		.byte	0x3
 6707 09f0 00000000 		.4byte	lema1
 6708 09f4 05       		.uleb128 0x5
 6709 09f5 D3090000 		.4byte	0x9d3
 6710 09f9 19       		.uleb128 0x19
 6711 09fa 30010000 		.4byte	.LASF107
 6712 09fe 05       		.byte	0x5
 6713 09ff 6F       		.byte	0x6f
 6714 0a00 0A0A0000 		.4byte	0xa0a
 6715 0a04 05       		.uleb128 0x5
 6716 0a05 03       		.byte	0x3
 6717 0a06 00000000 		.4byte	lema2
 6718 0a0a 05       		.uleb128 0x5
 6719 0a0b D3090000 		.4byte	0x9d3
 6720 0a0f 06       		.uleb128 0x6
 6721 0a10 81000000 		.4byte	0x81
 6722 0a14 1F0A0000 		.4byte	0xa1f
 6723 0a18 07       		.uleb128 0x7
 6724 0a19 B6000000 		.4byte	0xb6
 6725 0a1d 01       		.byte	0x1
 6726 0a1e 00       		.byte	0
 6727 0a1f 19       		.uleb128 0x19
 6728 0a20 0C040000 		.4byte	.LASF108
 6729 0a24 05       		.byte	0x5
 6730 0a25 70       		.byte	0x70
 6731 0a26 300A0000 		.4byte	0xa30
 6732 0a2a 05       		.uleb128 0x5
 6733 0a2b 03       		.byte	0x3
 6734 0a2c 00000000 		.4byte	id_logo
 6735 0a30 05       		.uleb128 0x5
 6736 0a31 0F0A0000 		.4byte	0xa0f
 6737 0a35 1A       		.uleb128 0x1a
 6738 0a36 6B6D00   		.ascii	"km\000"
 6739 0a39 05       		.byte	0x5
 6740 0a3a 71       		.byte	0x71
 6741 0a3b 450A0000 		.4byte	0xa45
 6742 0a3f 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 143


 6743 0a40 03       		.byte	0x3
 6744 0a41 00000000 		.4byte	km
 6745 0a45 05       		.uleb128 0x5
 6746 0a46 0F0A0000 		.4byte	0xa0f
 6747 0a4a 19       		.uleb128 0x19
 6748 0a4b 33050000 		.4byte	.LASF109
 6749 0a4f 05       		.byte	0x5
 6750 0a50 72       		.byte	0x72
 6751 0a51 15080000 		.4byte	0x815
 6752 0a55 05       		.uleb128 0x5
 6753 0a56 03       		.byte	0x3
 6754 0a57 00000000 		.4byte	fecha
 6755 0a5b 19       		.uleb128 0x19
 6756 0a5c C5000000 		.4byte	.LASF110
 6757 0a60 05       		.byte	0x5
 6758 0a61 73       		.byte	0x73
 6759 0a62 0F0A0000 		.4byte	0xa0f
 6760 0a66 05       		.uleb128 0x5
 6761 0a67 03       		.byte	0x3
 6762 0a68 00000000 		.4byte	hora
 6763 0a6c 19       		.uleb128 0x19
 6764 0a6d E3000000 		.4byte	.LASF111
 6765 0a71 05       		.byte	0x5
 6766 0a72 89       		.byte	0x89
 6767 0a73 73010000 		.4byte	0x173
 6768 0a77 05       		.uleb128 0x5
 6769 0a78 03       		.byte	0x3
 6770 0a79 00000000 		.4byte	rventa1
 6771 0a7d 19       		.uleb128 0x19
 6772 0a7e EB000000 		.4byte	.LASF112
 6773 0a82 05       		.byte	0x5
 6774 0a83 8A       		.byte	0x8a
 6775 0a84 73010000 		.4byte	0x173
 6776 0a88 05       		.uleb128 0x5
 6777 0a89 03       		.byte	0x3
 6778 0a8a 00000000 		.4byte	rventa2
 6779 0a8e 19       		.uleb128 0x19
 6780 0a8f AF000000 		.4byte	.LASF113
 6781 0a93 05       		.byte	0x5
 6782 0a94 8F       		.byte	0x8f
 6783 0a95 81000000 		.4byte	0x81
 6784 0a99 05       		.uleb128 0x5
 6785 0a9a 03       		.byte	0x3
 6786 0a9b 00000000 		.4byte	ok_RF
 6787 0a9f 19       		.uleb128 0x19
 6788 0aa0 E7040000 		.4byte	.LASF114
 6789 0aa4 05       		.byte	0x5
 6790 0aa5 90       		.byte	0x90
 6791 0aa6 81000000 		.4byte	0x81
 6792 0aaa 05       		.uleb128 0x5
 6793 0aab 03       		.byte	0x3
 6794 0aac 00000000 		.4byte	ok_datosRF
 6795 0ab0 19       		.uleb128 0x19
 6796 0ab1 2A020000 		.4byte	.LASF115
 6797 0ab5 05       		.byte	0x5
 6798 0ab6 91       		.byte	0x91
 6799 0ab7 67080000 		.4byte	0x867
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 144


 6800 0abb 05       		.uleb128 0x5
 6801 0abc 03       		.byte	0x3
 6802 0abd 00000000 		.4byte	rf_mod
 6803 0ac1 06       		.uleb128 0x6
 6804 0ac2 81000000 		.4byte	0x81
 6805 0ac6 D10A0000 		.4byte	0xad1
 6806 0aca 07       		.uleb128 0x7
 6807 0acb B6000000 		.4byte	0xb6
 6808 0acf 3F       		.byte	0x3f
 6809 0ad0 00       		.byte	0
 6810 0ad1 19       		.uleb128 0x19
 6811 0ad2 1F010000 		.4byte	.LASF116
 6812 0ad6 05       		.byte	0x5
 6813 0ad7 96       		.byte	0x96
 6814 0ad8 C10A0000 		.4byte	0xac1
 6815 0adc 05       		.uleb128 0x5
 6816 0add 03       		.byte	0x3
 6817 0ade 00000000 		.4byte	buffer_i2c
 6818 0ae2 19       		.uleb128 0x19
 6819 0ae3 F7030000 		.4byte	.LASF117
 6820 0ae7 05       		.byte	0x5
 6821 0ae8 9B       		.byte	0x9b
 6822 0ae9 81000000 		.4byte	0x81
 6823 0aed 05       		.uleb128 0x5
 6824 0aee 03       		.byte	0x3
 6825 0aef 00000000 		.4byte	crc_total
 6826 0af3 19       		.uleb128 0x19
 6827 0af4 80020000 		.4byte	.LASF118
 6828 0af8 05       		.byte	0x5
 6829 0af9 9F       		.byte	0x9f
 6830 0afa 0F0A0000 		.4byte	0xa0f
 6831 0afe 05       		.uleb128 0x5
 6832 0aff 03       		.byte	0x3
 6833 0b00 00000000 		.4byte	print1
 6834 0b04 19       		.uleb128 0x19
 6835 0b05 87020000 		.4byte	.LASF119
 6836 0b09 05       		.byte	0x5
 6837 0b0a A0       		.byte	0xa0
 6838 0b0b 0F0A0000 		.4byte	0xa0f
 6839 0b0f 05       		.uleb128 0x5
 6840 0b10 03       		.byte	0x3
 6841 0b11 00000000 		.4byte	print2
 6842 0b15 19       		.uleb128 0x19
 6843 0b16 8E020000 		.4byte	.LASF32
 6844 0b1a 05       		.byte	0x5
 6845 0b1b A5       		.byte	0xa5
 6846 0b1c 81000000 		.4byte	0x81
 6847 0b20 05       		.uleb128 0x5
 6848 0b21 03       		.byte	0x3
 6849 0b22 00000000 		.4byte	tipo_venta
 6850 0b26 19       		.uleb128 0x19
 6851 0b27 9D030000 		.4byte	.LASF120
 6852 0b2b 01       		.byte	0x1
 6853 0b2c 2F       		.byte	0x2f
 6854 0b2d 81000000 		.4byte	0x81
 6855 0b31 05       		.uleb128 0x5
 6856 0b32 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 145


 6857 0b33 00000000 		.4byte	rx_timeout
 6858 0b37 19       		.uleb128 0x19
 6859 0b38 93010000 		.4byte	.LASF121
 6860 0b3c 01       		.byte	0x1
 6861 0b3d 30       		.byte	0x30
 6862 0b3e 9E080000 		.4byte	0x89e
 6863 0b42 05       		.uleb128 0x5
 6864 0b43 03       		.byte	0x3
 6865 0b44 00000000 		.4byte	msn_tc
 6866 0b48 06       		.uleb128 0x6
 6867 0b49 81000000 		.4byte	0x81
 6868 0b4d 580B0000 		.4byte	0xb58
 6869 0b51 07       		.uleb128 0x7
 6870 0b52 B6000000 		.4byte	0xb6
 6871 0b56 0C       		.byte	0xc
 6872 0b57 00       		.byte	0
 6873 0b58 19       		.uleb128 0x19
 6874 0b59 A1010000 		.4byte	.LASF122
 6875 0b5d 01       		.byte	0x1
 6876 0b5e 31       		.byte	0x31
 6877 0b5f 480B0000 		.4byte	0xb48
 6878 0b63 05       		.uleb128 0x5
 6879 0b64 03       		.byte	0x3
 6880 0b65 00000000 		.4byte	msn_te
 6881 0b69 06       		.uleb128 0x6
 6882 0b6a 81000000 		.4byte	0x81
 6883 0b6e 790B0000 		.4byte	0xb79
 6884 0b72 07       		.uleb128 0x7
 6885 0b73 B6000000 		.4byte	0xb6
 6886 0b77 0D       		.byte	0xd
 6887 0b78 00       		.byte	0
 6888 0b79 19       		.uleb128 0x19
 6889 0b7a 9A010000 		.4byte	.LASF123
 6890 0b7e 01       		.byte	0x1
 6891 0b7f 32       		.byte	0x32
 6892 0b80 690B0000 		.4byte	0xb69
 6893 0b84 05       		.uleb128 0x5
 6894 0b85 03       		.byte	0x3
 6895 0b86 00000000 		.4byte	msn_td
 6896 0b8a 19       		.uleb128 0x19
 6897 0b8b 1F020000 		.4byte	.LASF124
 6898 0b8f 01       		.byte	0x1
 6899 0b90 33       		.byte	0x33
 6900 0b91 37050000 		.4byte	0x537
 6901 0b95 05       		.uleb128 0x5
 6902 0b96 03       		.byte	0x3
 6903 0b97 00000000 		.4byte	msn_lecact
 6904 0b9b 19       		.uleb128 0x19
 6905 0b9c 14010000 		.4byte	.LASF125
 6906 0ba0 01       		.byte	0x1
 6907 0ba1 34       		.byte	0x34
 6908 0ba2 9E080000 		.4byte	0x89e
 6909 0ba6 05       		.uleb128 0x5
 6910 0ba7 03       		.byte	0x3
 6911 0ba8 00000000 		.4byte	msn_lecaan
 6912 0bac 19       		.uleb128 0x19
 6913 0bad 74020000 		.4byte	.LASF126
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 146


 6914 0bb1 01       		.byte	0x1
 6915 0bb2 35       		.byte	0x35
 6916 0bb3 B4040000 		.4byte	0x4b4
 6917 0bb7 05       		.uleb128 0x5
 6918 0bb8 03       		.byte	0x3
 6919 0bb9 00000000 		.4byte	msn_tventas
 6920 0bbd 00       		.byte	0
 6921              		.section	.debug_abbrev,"",%progbits
 6922              	.Ldebug_abbrev0:
 6923 0000 01       		.uleb128 0x1
 6924 0001 11       		.uleb128 0x11
 6925 0002 01       		.byte	0x1
 6926 0003 25       		.uleb128 0x25
 6927 0004 0E       		.uleb128 0xe
 6928 0005 13       		.uleb128 0x13
 6929 0006 0B       		.uleb128 0xb
 6930 0007 03       		.uleb128 0x3
 6931 0008 0E       		.uleb128 0xe
 6932 0009 1B       		.uleb128 0x1b
 6933 000a 0E       		.uleb128 0xe
 6934 000b 55       		.uleb128 0x55
 6935 000c 17       		.uleb128 0x17
 6936 000d 11       		.uleb128 0x11
 6937 000e 01       		.uleb128 0x1
 6938 000f 10       		.uleb128 0x10
 6939 0010 17       		.uleb128 0x17
 6940 0011 00       		.byte	0
 6941 0012 00       		.byte	0
 6942 0013 02       		.uleb128 0x2
 6943 0014 24       		.uleb128 0x24
 6944 0015 00       		.byte	0
 6945 0016 0B       		.uleb128 0xb
 6946 0017 0B       		.uleb128 0xb
 6947 0018 3E       		.uleb128 0x3e
 6948 0019 0B       		.uleb128 0xb
 6949 001a 03       		.uleb128 0x3
 6950 001b 0E       		.uleb128 0xe
 6951 001c 00       		.byte	0
 6952 001d 00       		.byte	0
 6953 001e 03       		.uleb128 0x3
 6954 001f 16       		.uleb128 0x16
 6955 0020 00       		.byte	0
 6956 0021 03       		.uleb128 0x3
 6957 0022 0E       		.uleb128 0xe
 6958 0023 3A       		.uleb128 0x3a
 6959 0024 0B       		.uleb128 0xb
 6960 0025 3B       		.uleb128 0x3b
 6961 0026 0B       		.uleb128 0xb
 6962 0027 49       		.uleb128 0x49
 6963 0028 13       		.uleb128 0x13
 6964 0029 00       		.byte	0
 6965 002a 00       		.byte	0
 6966 002b 04       		.uleb128 0x4
 6967 002c 24       		.uleb128 0x24
 6968 002d 00       		.byte	0
 6969 002e 0B       		.uleb128 0xb
 6970 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 147


 6971 0030 3E       		.uleb128 0x3e
 6972 0031 0B       		.uleb128 0xb
 6973 0032 03       		.uleb128 0x3
 6974 0033 08       		.uleb128 0x8
 6975 0034 00       		.byte	0
 6976 0035 00       		.byte	0
 6977 0036 05       		.uleb128 0x5
 6978 0037 35       		.uleb128 0x35
 6979 0038 00       		.byte	0
 6980 0039 49       		.uleb128 0x49
 6981 003a 13       		.uleb128 0x13
 6982 003b 00       		.byte	0
 6983 003c 00       		.byte	0
 6984 003d 06       		.uleb128 0x6
 6985 003e 01       		.uleb128 0x1
 6986 003f 01       		.byte	0x1
 6987 0040 49       		.uleb128 0x49
 6988 0041 13       		.uleb128 0x13
 6989 0042 01       		.uleb128 0x1
 6990 0043 13       		.uleb128 0x13
 6991 0044 00       		.byte	0
 6992 0045 00       		.byte	0
 6993 0046 07       		.uleb128 0x7
 6994 0047 21       		.uleb128 0x21
 6995 0048 00       		.byte	0
 6996 0049 49       		.uleb128 0x49
 6997 004a 13       		.uleb128 0x13
 6998 004b 2F       		.uleb128 0x2f
 6999 004c 0B       		.uleb128 0xb
 7000 004d 00       		.byte	0
 7001 004e 00       		.byte	0
 7002 004f 08       		.uleb128 0x8
 7003 0050 13       		.uleb128 0x13
 7004 0051 01       		.byte	0x1
 7005 0052 03       		.uleb128 0x3
 7006 0053 0E       		.uleb128 0xe
 7007 0054 0B       		.uleb128 0xb
 7008 0055 0B       		.uleb128 0xb
 7009 0056 3A       		.uleb128 0x3a
 7010 0057 0B       		.uleb128 0xb
 7011 0058 3B       		.uleb128 0x3b
 7012 0059 0B       		.uleb128 0xb
 7013 005a 01       		.uleb128 0x1
 7014 005b 13       		.uleb128 0x13
 7015 005c 00       		.byte	0
 7016 005d 00       		.byte	0
 7017 005e 09       		.uleb128 0x9
 7018 005f 0D       		.uleb128 0xd
 7019 0060 00       		.byte	0
 7020 0061 03       		.uleb128 0x3
 7021 0062 08       		.uleb128 0x8
 7022 0063 3A       		.uleb128 0x3a
 7023 0064 0B       		.uleb128 0xb
 7024 0065 3B       		.uleb128 0x3b
 7025 0066 0B       		.uleb128 0xb
 7026 0067 49       		.uleb128 0x49
 7027 0068 13       		.uleb128 0x13
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 148


 7028 0069 38       		.uleb128 0x38
 7029 006a 0B       		.uleb128 0xb
 7030 006b 00       		.byte	0
 7031 006c 00       		.byte	0
 7032 006d 0A       		.uleb128 0xa
 7033 006e 0D       		.uleb128 0xd
 7034 006f 00       		.byte	0
 7035 0070 03       		.uleb128 0x3
 7036 0071 0E       		.uleb128 0xe
 7037 0072 3A       		.uleb128 0x3a
 7038 0073 0B       		.uleb128 0xb
 7039 0074 3B       		.uleb128 0x3b
 7040 0075 0B       		.uleb128 0xb
 7041 0076 49       		.uleb128 0x49
 7042 0077 13       		.uleb128 0x13
 7043 0078 38       		.uleb128 0x38
 7044 0079 0B       		.uleb128 0xb
 7045 007a 00       		.byte	0
 7046 007b 00       		.byte	0
 7047 007c 0B       		.uleb128 0xb
 7048 007d 2E       		.uleb128 0x2e
 7049 007e 00       		.byte	0
 7050 007f 3F       		.uleb128 0x3f
 7051 0080 19       		.uleb128 0x19
 7052 0081 03       		.uleb128 0x3
 7053 0082 0E       		.uleb128 0xe
 7054 0083 3A       		.uleb128 0x3a
 7055 0084 0B       		.uleb128 0xb
 7056 0085 3B       		.uleb128 0x3b
 7057 0086 0B       		.uleb128 0xb
 7058 0087 27       		.uleb128 0x27
 7059 0088 19       		.uleb128 0x19
 7060 0089 11       		.uleb128 0x11
 7061 008a 01       		.uleb128 0x1
 7062 008b 12       		.uleb128 0x12
 7063 008c 06       		.uleb128 0x6
 7064 008d 40       		.uleb128 0x40
 7065 008e 18       		.uleb128 0x18
 7066 008f 9642     		.uleb128 0x2116
 7067 0091 19       		.uleb128 0x19
 7068 0092 00       		.byte	0
 7069 0093 00       		.byte	0
 7070 0094 0C       		.uleb128 0xc
 7071 0095 2E       		.uleb128 0x2e
 7072 0096 01       		.byte	0x1
 7073 0097 3F       		.uleb128 0x3f
 7074 0098 19       		.uleb128 0x19
 7075 0099 03       		.uleb128 0x3
 7076 009a 0E       		.uleb128 0xe
 7077 009b 3A       		.uleb128 0x3a
 7078 009c 0B       		.uleb128 0xb
 7079 009d 3B       		.uleb128 0x3b
 7080 009e 0B       		.uleb128 0xb
 7081 009f 27       		.uleb128 0x27
 7082 00a0 19       		.uleb128 0x19
 7083 00a1 49       		.uleb128 0x49
 7084 00a2 13       		.uleb128 0x13
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 149


 7085 00a3 11       		.uleb128 0x11
 7086 00a4 01       		.uleb128 0x1
 7087 00a5 12       		.uleb128 0x12
 7088 00a6 06       		.uleb128 0x6
 7089 00a7 40       		.uleb128 0x40
 7090 00a8 18       		.uleb128 0x18
 7091 00a9 9642     		.uleb128 0x2116
 7092 00ab 19       		.uleb128 0x19
 7093 00ac 01       		.uleb128 0x1
 7094 00ad 13       		.uleb128 0x13
 7095 00ae 00       		.byte	0
 7096 00af 00       		.byte	0
 7097 00b0 0D       		.uleb128 0xd
 7098 00b1 05       		.uleb128 0x5
 7099 00b2 00       		.byte	0
 7100 00b3 03       		.uleb128 0x3
 7101 00b4 08       		.uleb128 0x8
 7102 00b5 3A       		.uleb128 0x3a
 7103 00b6 0B       		.uleb128 0xb
 7104 00b7 3B       		.uleb128 0x3b
 7105 00b8 0B       		.uleb128 0xb
 7106 00b9 49       		.uleb128 0x49
 7107 00ba 13       		.uleb128 0x13
 7108 00bb 02       		.uleb128 0x2
 7109 00bc 18       		.uleb128 0x18
 7110 00bd 00       		.byte	0
 7111 00be 00       		.byte	0
 7112 00bf 0E       		.uleb128 0xe
 7113 00c0 34       		.uleb128 0x34
 7114 00c1 00       		.byte	0
 7115 00c2 03       		.uleb128 0x3
 7116 00c3 0E       		.uleb128 0xe
 7117 00c4 3A       		.uleb128 0x3a
 7118 00c5 0B       		.uleb128 0xb
 7119 00c6 3B       		.uleb128 0x3b
 7120 00c7 0B       		.uleb128 0xb
 7121 00c8 49       		.uleb128 0x49
 7122 00c9 13       		.uleb128 0x13
 7123 00ca 02       		.uleb128 0x2
 7124 00cb 18       		.uleb128 0x18
 7125 00cc 00       		.byte	0
 7126 00cd 00       		.byte	0
 7127 00ce 0F       		.uleb128 0xf
 7128 00cf 34       		.uleb128 0x34
 7129 00d0 00       		.byte	0
 7130 00d1 03       		.uleb128 0x3
 7131 00d2 08       		.uleb128 0x8
 7132 00d3 3A       		.uleb128 0x3a
 7133 00d4 0B       		.uleb128 0xb
 7134 00d5 3B       		.uleb128 0x3b
 7135 00d6 0B       		.uleb128 0xb
 7136 00d7 49       		.uleb128 0x49
 7137 00d8 13       		.uleb128 0x13
 7138 00d9 02       		.uleb128 0x2
 7139 00da 18       		.uleb128 0x18
 7140 00db 00       		.byte	0
 7141 00dc 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 150


 7142 00dd 10       		.uleb128 0x10
 7143 00de 2E       		.uleb128 0x2e
 7144 00df 01       		.byte	0x1
 7145 00e0 3F       		.uleb128 0x3f
 7146 00e1 19       		.uleb128 0x19
 7147 00e2 03       		.uleb128 0x3
 7148 00e3 0E       		.uleb128 0xe
 7149 00e4 3A       		.uleb128 0x3a
 7150 00e5 0B       		.uleb128 0xb
 7151 00e6 3B       		.uleb128 0x3b
 7152 00e7 0B       		.uleb128 0xb
 7153 00e8 27       		.uleb128 0x27
 7154 00e9 19       		.uleb128 0x19
 7155 00ea 11       		.uleb128 0x11
 7156 00eb 01       		.uleb128 0x1
 7157 00ec 12       		.uleb128 0x12
 7158 00ed 06       		.uleb128 0x6
 7159 00ee 40       		.uleb128 0x40
 7160 00ef 18       		.uleb128 0x18
 7161 00f0 9642     		.uleb128 0x2116
 7162 00f2 19       		.uleb128 0x19
 7163 00f3 01       		.uleb128 0x1
 7164 00f4 13       		.uleb128 0x13
 7165 00f5 00       		.byte	0
 7166 00f6 00       		.byte	0
 7167 00f7 11       		.uleb128 0x11
 7168 00f8 2E       		.uleb128 0x2e
 7169 00f9 01       		.byte	0x1
 7170 00fa 3F       		.uleb128 0x3f
 7171 00fb 19       		.uleb128 0x19
 7172 00fc 03       		.uleb128 0x3
 7173 00fd 0E       		.uleb128 0xe
 7174 00fe 3A       		.uleb128 0x3a
 7175 00ff 0B       		.uleb128 0xb
 7176 0100 3B       		.uleb128 0x3b
 7177 0101 05       		.uleb128 0x5
 7178 0102 27       		.uleb128 0x27
 7179 0103 19       		.uleb128 0x19
 7180 0104 11       		.uleb128 0x11
 7181 0105 01       		.uleb128 0x1
 7182 0106 12       		.uleb128 0x12
 7183 0107 06       		.uleb128 0x6
 7184 0108 40       		.uleb128 0x40
 7185 0109 18       		.uleb128 0x18
 7186 010a 9642     		.uleb128 0x2116
 7187 010c 19       		.uleb128 0x19
 7188 010d 01       		.uleb128 0x1
 7189 010e 13       		.uleb128 0x13
 7190 010f 00       		.byte	0
 7191 0110 00       		.byte	0
 7192 0111 12       		.uleb128 0x12
 7193 0112 05       		.uleb128 0x5
 7194 0113 00       		.byte	0
 7195 0114 03       		.uleb128 0x3
 7196 0115 08       		.uleb128 0x8
 7197 0116 3A       		.uleb128 0x3a
 7198 0117 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 151


 7199 0118 3B       		.uleb128 0x3b
 7200 0119 05       		.uleb128 0x5
 7201 011a 49       		.uleb128 0x49
 7202 011b 13       		.uleb128 0x13
 7203 011c 02       		.uleb128 0x2
 7204 011d 18       		.uleb128 0x18
 7205 011e 00       		.byte	0
 7206 011f 00       		.byte	0
 7207 0120 13       		.uleb128 0x13
 7208 0121 2E       		.uleb128 0x2e
 7209 0122 01       		.byte	0x1
 7210 0123 3F       		.uleb128 0x3f
 7211 0124 19       		.uleb128 0x19
 7212 0125 03       		.uleb128 0x3
 7213 0126 0E       		.uleb128 0xe
 7214 0127 3A       		.uleb128 0x3a
 7215 0128 0B       		.uleb128 0xb
 7216 0129 3B       		.uleb128 0x3b
 7217 012a 05       		.uleb128 0x5
 7218 012b 27       		.uleb128 0x27
 7219 012c 19       		.uleb128 0x19
 7220 012d 49       		.uleb128 0x49
 7221 012e 13       		.uleb128 0x13
 7222 012f 11       		.uleb128 0x11
 7223 0130 01       		.uleb128 0x1
 7224 0131 12       		.uleb128 0x12
 7225 0132 06       		.uleb128 0x6
 7226 0133 40       		.uleb128 0x40
 7227 0134 18       		.uleb128 0x18
 7228 0135 9642     		.uleb128 0x2116
 7229 0137 19       		.uleb128 0x19
 7230 0138 01       		.uleb128 0x1
 7231 0139 13       		.uleb128 0x13
 7232 013a 00       		.byte	0
 7233 013b 00       		.byte	0
 7234 013c 14       		.uleb128 0x14
 7235 013d 34       		.uleb128 0x34
 7236 013e 00       		.byte	0
 7237 013f 03       		.uleb128 0x3
 7238 0140 08       		.uleb128 0x8
 7239 0141 3A       		.uleb128 0x3a
 7240 0142 0B       		.uleb128 0xb
 7241 0143 3B       		.uleb128 0x3b
 7242 0144 05       		.uleb128 0x5
 7243 0145 49       		.uleb128 0x49
 7244 0146 13       		.uleb128 0x13
 7245 0147 02       		.uleb128 0x2
 7246 0148 18       		.uleb128 0x18
 7247 0149 00       		.byte	0
 7248 014a 00       		.byte	0
 7249 014b 15       		.uleb128 0x15
 7250 014c 05       		.uleb128 0x5
 7251 014d 00       		.byte	0
 7252 014e 03       		.uleb128 0x3
 7253 014f 0E       		.uleb128 0xe
 7254 0150 3A       		.uleb128 0x3a
 7255 0151 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 152


 7256 0152 3B       		.uleb128 0x3b
 7257 0153 05       		.uleb128 0x5
 7258 0154 49       		.uleb128 0x49
 7259 0155 13       		.uleb128 0x13
 7260 0156 02       		.uleb128 0x2
 7261 0157 18       		.uleb128 0x18
 7262 0158 00       		.byte	0
 7263 0159 00       		.byte	0
 7264 015a 16       		.uleb128 0x16
 7265 015b 34       		.uleb128 0x34
 7266 015c 00       		.byte	0
 7267 015d 03       		.uleb128 0x3
 7268 015e 0E       		.uleb128 0xe
 7269 015f 3A       		.uleb128 0x3a
 7270 0160 0B       		.uleb128 0xb
 7271 0161 3B       		.uleb128 0x3b
 7272 0162 05       		.uleb128 0x5
 7273 0163 49       		.uleb128 0x49
 7274 0164 13       		.uleb128 0x13
 7275 0165 02       		.uleb128 0x2
 7276 0166 18       		.uleb128 0x18
 7277 0167 00       		.byte	0
 7278 0168 00       		.byte	0
 7279 0169 17       		.uleb128 0x17
 7280 016a 0F       		.uleb128 0xf
 7281 016b 00       		.byte	0
 7282 016c 0B       		.uleb128 0xb
 7283 016d 0B       		.uleb128 0xb
 7284 016e 49       		.uleb128 0x49
 7285 016f 13       		.uleb128 0x13
 7286 0170 00       		.byte	0
 7287 0171 00       		.byte	0
 7288 0172 18       		.uleb128 0x18
 7289 0173 34       		.uleb128 0x34
 7290 0174 00       		.byte	0
 7291 0175 03       		.uleb128 0x3
 7292 0176 0E       		.uleb128 0xe
 7293 0177 3A       		.uleb128 0x3a
 7294 0178 0B       		.uleb128 0xb
 7295 0179 3B       		.uleb128 0x3b
 7296 017a 05       		.uleb128 0x5
 7297 017b 49       		.uleb128 0x49
 7298 017c 13       		.uleb128 0x13
 7299 017d 3F       		.uleb128 0x3f
 7300 017e 19       		.uleb128 0x19
 7301 017f 3C       		.uleb128 0x3c
 7302 0180 19       		.uleb128 0x19
 7303 0181 00       		.byte	0
 7304 0182 00       		.byte	0
 7305 0183 19       		.uleb128 0x19
 7306 0184 34       		.uleb128 0x34
 7307 0185 00       		.byte	0
 7308 0186 03       		.uleb128 0x3
 7309 0187 0E       		.uleb128 0xe
 7310 0188 3A       		.uleb128 0x3a
 7311 0189 0B       		.uleb128 0xb
 7312 018a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 153


 7313 018b 0B       		.uleb128 0xb
 7314 018c 49       		.uleb128 0x49
 7315 018d 13       		.uleb128 0x13
 7316 018e 3F       		.uleb128 0x3f
 7317 018f 19       		.uleb128 0x19
 7318 0190 02       		.uleb128 0x2
 7319 0191 18       		.uleb128 0x18
 7320 0192 00       		.byte	0
 7321 0193 00       		.byte	0
 7322 0194 1A       		.uleb128 0x1a
 7323 0195 34       		.uleb128 0x34
 7324 0196 00       		.byte	0
 7325 0197 03       		.uleb128 0x3
 7326 0198 08       		.uleb128 0x8
 7327 0199 3A       		.uleb128 0x3a
 7328 019a 0B       		.uleb128 0xb
 7329 019b 3B       		.uleb128 0x3b
 7330 019c 0B       		.uleb128 0xb
 7331 019d 49       		.uleb128 0x49
 7332 019e 13       		.uleb128 0x13
 7333 019f 3F       		.uleb128 0x3f
 7334 01a0 19       		.uleb128 0x19
 7335 01a1 02       		.uleb128 0x2
 7336 01a2 18       		.uleb128 0x18
 7337 01a3 00       		.byte	0
 7338 01a4 00       		.byte	0
 7339 01a5 00       		.byte	0
 7340              		.section	.debug_aranges,"",%progbits
 7341 0000 64000000 		.4byte	0x64
 7342 0004 0200     		.2byte	0x2
 7343 0006 00000000 		.4byte	.Ldebug_info0
 7344 000a 04       		.byte	0x4
 7345 000b 00       		.byte	0
 7346 000c 0000     		.2byte	0
 7347 000e 0000     		.2byte	0
 7348 0010 00000000 		.4byte	.LFB63
 7349 0014 14000000 		.4byte	.LFE63-.LFB63
 7350 0018 00000000 		.4byte	.LFB64
 7351 001c 98000000 		.4byte	.LFE64-.LFB64
 7352 0020 00000000 		.4byte	.LFB65
 7353 0024 A0000000 		.4byte	.LFE65-.LFB65
 7354 0028 00000000 		.4byte	.LFB66
 7355 002c 36000000 		.4byte	.LFE66-.LFB66
 7356 0030 00000000 		.4byte	.LFB67
 7357 0034 7C010000 		.4byte	.LFE67-.LFB67
 7358 0038 00000000 		.4byte	.LFB68
 7359 003c 24000000 		.4byte	.LFE68-.LFB68
 7360 0040 00000000 		.4byte	.LFB69
 7361 0044 54030000 		.4byte	.LFE69-.LFB69
 7362 0048 00000000 		.4byte	.LFB70
 7363 004c 80080000 		.4byte	.LFE70-.LFB70
 7364 0050 00000000 		.4byte	.LFB71
 7365 0054 7C020000 		.4byte	.LFE71-.LFB71
 7366 0058 00000000 		.4byte	.LFB72
 7367 005c 94100000 		.4byte	.LFE72-.LFB72
 7368 0060 00000000 		.4byte	0
 7369 0064 00000000 		.4byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 154


 7370              		.section	.debug_ranges,"",%progbits
 7371              	.Ldebug_ranges0:
 7372 0000 00000000 		.4byte	.LFB63
 7373 0004 14000000 		.4byte	.LFE63
 7374 0008 00000000 		.4byte	.LFB64
 7375 000c 98000000 		.4byte	.LFE64
 7376 0010 00000000 		.4byte	.LFB65
 7377 0014 A0000000 		.4byte	.LFE65
 7378 0018 00000000 		.4byte	.LFB66
 7379 001c 36000000 		.4byte	.LFE66
 7380 0020 00000000 		.4byte	.LFB67
 7381 0024 7C010000 		.4byte	.LFE67
 7382 0028 00000000 		.4byte	.LFB68
 7383 002c 24000000 		.4byte	.LFE68
 7384 0030 00000000 		.4byte	.LFB69
 7385 0034 54030000 		.4byte	.LFE69
 7386 0038 00000000 		.4byte	.LFB70
 7387 003c 80080000 		.4byte	.LFE70
 7388 0040 00000000 		.4byte	.LFB71
 7389 0044 7C020000 		.4byte	.LFE71
 7390 0048 00000000 		.4byte	.LFB72
 7391 004c 94100000 		.4byte	.LFE72
 7392 0050 00000000 		.4byte	0
 7393 0054 00000000 		.4byte	0
 7394              		.section	.debug_line,"",%progbits
 7395              	.Ldebug_line0:
 7396 0000 020B0000 		.section	.debug_str,"MS",%progbits,1
 7396      02006E01 
 7396      00000201 
 7396      FB0E0D00 
 7396      01010101 
 7397              	.LASF34:
 7398 0000 70617373 		.ascii	"password\000"
 7398      776F7264 
 7398      00
 7399              	.LASF74:
 7400 0009 666C756A 		.ascii	"flujo_LCD1\000"
 7400      6F5F4C43 
 7400      443100
 7401              	.LASF75:
 7402 0014 666C756A 		.ascii	"flujo_LCD2\000"
 7402      6F5F4C43 
 7402      443200
 7403              	.LASF85:
 7404 001f 636F756E 		.ascii	"count_protector2\000"
 7404      745F7072 
 7404      6F746563 
 7404      746F7232 
 7404      00
 7405              	.LASF100:
 7406 0030 65666563 		.ascii	"efectivo\000"
 7406      7469766F 
 7406      00
 7407              	.LASF129:
 7408 0039 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Documents\\Prueba_GRPFleet\\B"
 7408      73657273 
 7408      5C526563 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 155


 7408      65706369 
 7408      6F6E5C44 
 7409 0067 42422E63 		.ascii	"BB.cydsn\000"
 7409      7964736E 
 7409      00
 7410              	.LASF61:
 7411 0070 69645F63 		.ascii	"id_coma1\000"
 7411      6F6D6131 
 7411      00
 7412              	.LASF64:
 7413 0079 69645F63 		.ascii	"id_coma2\000"
 7413      6F6D6132 
 7413      00
 7414              	.LASF48:
 7415 0082 62756666 		.ascii	"buffer\000"
 7415      657200
 7416              	.LASF8:
 7417 0089 756E7369 		.ascii	"unsigned int\000"
 7417      676E6564 
 7417      20696E74 
 7417      00
 7418              	.LASF97:
 7419 0096 76657273 		.ascii	"version\000"
 7419      696F6E00 
 7420              	.LASF9:
 7421 009e 5F5F696E 		.ascii	"__int32_t\000"
 7421      7433325F 
 7421      7400
 7422              	.LASF53:
 7423 00a8 70726563 		.ascii	"precio\000"
 7423      696F00
 7424              	.LASF113:
 7425 00af 6F6B5F52 		.ascii	"ok_RF\000"
 7425      4600
 7426              	.LASF54:
 7427 00b5 6E756D5F 		.ascii	"num_man\000"
 7427      6D616E00 
 7428              	.LASF51:
 7429 00bd 64656369 		.ascii	"decimal\000"
 7429      6D616C00 
 7430              	.LASF110:
 7431 00c5 686F7261 		.ascii	"hora\000"
 7431      00
 7432              	.LASF72:
 7433 00ca 7465636C 		.ascii	"teclas1\000"
 7433      61733100 
 7434              	.LASF73:
 7435 00d2 7465636C 		.ascii	"teclas2\000"
 7435      61733200 
 7436              	.LASF23:
 7437 00da 706F7369 		.ascii	"posicion\000"
 7437      63696F6E 
 7437      00
 7438              	.LASF111:
 7439 00e3 7276656E 		.ascii	"rventa1\000"
 7439      74613100 
 7440              	.LASF112:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 156


 7441 00eb 7276656E 		.ascii	"rventa2\000"
 7441      74613200 
 7442              	.LASF105:
 7443 00f3 64697265 		.ascii	"direccion\000"
 7443      6363696F 
 7443      6E00
 7444              	.LASF88:
 7445 00fd 70726F78 		.ascii	"prox_caso\000"
 7445      5F636173 
 7445      6F00
 7446              	.LASF28:
 7447 0107 70726573 		.ascii	"preset\000"
 7447      657400
 7448              	.LASF13:
 7449 010e 666C6F61 		.ascii	"float\000"
 7449      7400
 7450              	.LASF125:
 7451 0114 6D736E5F 		.ascii	"msn_lecaan\000"
 7451      6C656361 
 7451      616E00
 7452              	.LASF116:
 7453 011f 62756666 		.ascii	"buffer_i2c\000"
 7453      65725F69 
 7453      326300
 7454              	.LASF106:
 7455 012a 6C656D61 		.ascii	"lema1\000"
 7455      3100
 7456              	.LASF107:
 7457 0130 6C656D61 		.ascii	"lema2\000"
 7457      3200
 7458              	.LASF81:
 7459 0136 76656E74 		.ascii	"venta_activa2\000"
 7459      615F6163 
 7459      74697661 
 7459      3200
 7460              	.LASF31:
 7461 0144 696D7072 		.ascii	"imprimir\000"
 7461      696D6972 
 7461      00
 7462              	.LASF7:
 7463 014d 6C6F6E67 		.ascii	"long long unsigned int\000"
 7463      206C6F6E 
 7463      6720756E 
 7463      7369676E 
 7463      65642069 
 7464              	.LASF128:
 7465 0164 2E5C5072 		.ascii	".\\Protocolo.c\000"
 7465      6F746F63 
 7465      6F6C6F2E 
 7465      6300
 7466              	.LASF101:
 7467 0172 6C61646F 		.ascii	"lado1\000"
 7467      3100
 7468              	.LASF80:
 7469 0178 76656E74 		.ascii	"venta_activa\000"
 7469      615F6163 
 7469      74697661 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 157


 7469      00
 7470              	.LASF78:
 7471 0185 73656C65 		.ascii	"seleccion_pos\000"
 7471      6363696F 
 7471      6E5F706F 
 7471      7300
 7472              	.LASF121:
 7473 0193 6D736E5F 		.ascii	"msn_tc\000"
 7473      746300
 7474              	.LASF123:
 7475 019a 6D736E5F 		.ascii	"msn_td\000"
 7475      746400
 7476              	.LASF122:
 7477 01a1 6D736E5F 		.ascii	"msn_te\000"
 7477      746500
 7478              	.LASF56:
 7479 01a8 53757274 		.ascii	"Surtidor_rxBuffer\000"
 7479      69646F72 
 7479      5F727842 
 7479      75666665 
 7479      7200
 7480              	.LASF30:
 7481 01ba 706C6163 		.ascii	"placa\000"
 7481      6100
 7482              	.LASF98:
 7483 01c0 6B6D7363 		.ascii	"kmscreen\000"
 7483      7265656E 
 7483      00
 7484              	.LASF76:
 7485 01c9 666C756A 		.ascii	"flujo_pos1\000"
 7485      6F5F706F 
 7485      733100
 7486              	.LASF77:
 7487 01d4 666C756A 		.ascii	"flujo_pos2\000"
 7487      6F5F706F 
 7487      733200
 7488              	.LASF39:
 7489 01df 7665725F 		.ascii	"ver_pos\000"
 7489      706F7300 
 7490              	.LASF25:
 7491 01e7 766F6C75 		.ascii	"volumen\000"
 7491      6D656E00 
 7492              	.LASF45:
 7493 01ef 76656E74 		.ascii	"venta\000"
 7493      6100
 7494              	.LASF104:
 7495 01f5 74656C65 		.ascii	"telefono\000"
 7495      666F6E6F 
 7495      00
 7496              	.LASF62:
 7497 01fe 69645F74 		.ascii	"id_teclado1\000"
 7497      65636C61 
 7497      646F3100 
 7498              	.LASF65:
 7499 020a 69645F74 		.ascii	"id_teclado2\000"
 7499      65636C61 
 7499      646F3200 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 158


 7500              	.LASF91:
 7501 0216 69645F76 		.ascii	"id_venta\000"
 7501      656E7461 
 7501      00
 7502              	.LASF124:
 7503 021f 6D736E5F 		.ascii	"msn_lecact\000"
 7503      6C656361 
 7503      637400
 7504              	.LASF115:
 7505 022a 72665F6D 		.ascii	"rf_mod\000"
 7505      6F6400
 7506              	.LASF44:
 7507 0231 64657465 		.ascii	"detener\000"
 7507      6E657200 
 7508              	.LASF42:
 7509 0239 636F6D61 		.ascii	"comand_exten\000"
 7509      6E645F65 
 7509      7874656E 
 7509      00
 7510              	.LASF83:
 7511 0246 42756666 		.ascii	"Buffer_LCD2\000"
 7511      65725F4C 
 7511      43443200 
 7512              	.LASF15:
 7513 0252 63686172 		.ascii	"char\000"
 7513      00
 7514              	.LASF89:
 7515 0257 626C6F71 		.ascii	"bloqueo_LCD\000"
 7515      75656F5F 
 7515      4C434400 
 7516              	.LASF20:
 7517 0263 6D616E67 		.ascii	"mangueras\000"
 7517      75657261 
 7517      7300
 7518              	.LASF12:
 7519 026d 75696E74 		.ascii	"uint16\000"
 7519      313600
 7520              	.LASF126:
 7521 0274 6D736E5F 		.ascii	"msn_tventas\000"
 7521      7476656E 
 7521      74617300 
 7522              	.LASF118:
 7523 0280 7072696E 		.ascii	"print1\000"
 7523      743100
 7524              	.LASF119:
 7525 0287 7072696E 		.ascii	"print2\000"
 7525      743200
 7526              	.LASF32:
 7527 028e 7469706F 		.ascii	"tipo_venta\000"
 7527      5F76656E 
 7527      746100
 7528              	.LASF29:
 7529 0299 69645F65 		.ascii	"id_ef\000"
 7529      6600
 7530              	.LASF35:
 7531 029f 7475726E 		.ascii	"turno\000"
 7531      6F00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 159


 7532              	.LASF18:
 7533 02a5 746F7461 		.ascii	"totales\000"
 7533      6C657300 
 7534              	.LASF86:
 7535 02ad 70617373 		.ascii	"password_lcd\000"
 7535      776F7264 
 7535      5F6C6364 
 7535      00
 7536              	.LASF58:
 7537 02ba 636F756E 		.ascii	"count_teclas1\000"
 7537      745F7465 
 7537      636C6173 
 7537      3100
 7538              	.LASF63:
 7539 02c8 636F756E 		.ascii	"count_teclas2\000"
 7539      745F7465 
 7539      636C6173 
 7539      3200
 7540              	.LASF66:
 7541 02d6 706F7378 		.ascii	"posx1\000"
 7541      3100
 7542              	.LASF69:
 7543 02dc 706F7378 		.ascii	"posx2\000"
 7543      3200
 7544              	.LASF6:
 7545 02e2 6C6F6E67 		.ascii	"long long int\000"
 7545      206C6F6E 
 7545      6720696E 
 7545      7400
 7546              	.LASF26:
 7547 02f0 70726F64 		.ascii	"producto\000"
 7547      7563746F 
 7547      00
 7548              	.LASF52:
 7549 02f9 63616D62 		.ascii	"cambiar_precio\000"
 7549      6961725F 
 7549      70726563 
 7549      696F00
 7550              	.LASF33:
 7551 0308 63656475 		.ascii	"cedula\000"
 7551      6C6100
 7552              	.LASF127:
 7553 030f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7553      4320342E 
 7553      392E3320 
 7553      32303135 
 7553      30333033 
 7554 0342 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7554      20726576 
 7554      6973696F 
 7554      6E203232 
 7554      31323230 
 7555 0375 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7555      66756E63 
 7555      74696F6E 
 7555      2D736563 
 7555      74696F6E 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 160


 7556              	.LASF120:
 7557 039d 72785F74 		.ascii	"rx_timeout\000"
 7557      696D656F 
 7557      757400
 7558              	.LASF67:
 7559 03a8 706F7379 		.ascii	"posy1\000"
 7559      3100
 7560              	.LASF70:
 7561 03ae 706F7379 		.ascii	"posy2\000"
 7561      3200
 7562              	.LASF49:
 7563 03b4 73697A65 		.ascii	"size\000"
 7563      00
 7564              	.LASF22:
 7565 03b9 72656369 		.ascii	"recibo\000"
 7565      626F00
 7566              	.LASF24:
 7567 03c0 64696E65 		.ascii	"dinero\000"
 7567      726F00
 7568              	.LASF82:
 7569 03c7 42756666 		.ascii	"Buffer_LCD1\000"
 7569      65725F4C 
 7569      43443100 
 7570              	.LASF17:
 7571 03d3 65737461 		.ascii	"estado\000"
 7571      646F00
 7572              	.LASF37:
 7573 03da 70617373 		.ascii	"password_local\000"
 7573      776F7264 
 7573      5F6C6F63 
 7573      616C00
 7574              	.LASF93:
 7575 03e9 70707578 		.ascii	"ppux10\000"
 7575      313000
 7576              	.LASF103:
 7577 03f0 6E6F6D62 		.ascii	"nombre\000"
 7577      726500
 7578              	.LASF117:
 7579 03f7 6372635F 		.ascii	"crc_total\000"
 7579      746F7461 
 7579      6C00
 7580              	.LASF55:
 7581 0401 6E6D616E 		.ascii	"nmangueras\000"
 7581      67756572 
 7581      617300
 7582              	.LASF108:
 7583 040c 69645F6C 		.ascii	"id_logo\000"
 7583      6F676F00 
 7584              	.LASF2:
 7585 0414 73686F72 		.ascii	"short int\000"
 7585      7420696E 
 7585      7400
 7586              	.LASF4:
 7587 041e 6C6F6E67 		.ascii	"long int\000"
 7587      20696E74 
 7587      00
 7588              	.LASF57:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 161


 7589 0427 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7589      52784275 
 7589      66666572 
 7589      00
 7590              	.LASF21:
 7591 0434 73757274 		.ascii	"surtidor\000"
 7591      69646F72 
 7591      00
 7592              	.LASF59:
 7593 043d 636F6D61 		.ascii	"comas1\000"
 7593      733100
 7594              	.LASF60:
 7595 0444 636F6D61 		.ascii	"comas2\000"
 7595      733200
 7596              	.LASF50:
 7597 044b 74656D70 		.ascii	"temp\000"
 7597      00
 7598              	.LASF94:
 7599 0450 6E6F6D62 		.ascii	"nombre_pro1\000"
 7599      72655F70 
 7599      726F3100 
 7600              	.LASF96:
 7601 045c 6E6F6D62 		.ascii	"nombre_pro3\000"
 7601      72655F70 
 7601      726F3300 
 7602              	.LASF40:
 7603 0468 65737461 		.ascii	"estado_ex\000"
 7603      646F5F65 
 7603      7800
 7604              	.LASF46:
 7605 0472 70726F67 		.ascii	"programar\000"
 7605      72616D61 
 7605      7200
 7606              	.LASF16:
 7607 047c 73697A65 		.ascii	"sizetype\000"
 7607      74797065 
 7607      00
 7608              	.LASF5:
 7609 0485 6C6F6E67 		.ascii	"long unsigned int\000"
 7609      20756E73 
 7609      69676E65 
 7609      6420696E 
 7609      7400
 7610              	.LASF10:
 7611 0497 696E7433 		.ascii	"int32_t\000"
 7611      325F7400 
 7612              	.LASF99:
 7613 049f 70616E74 		.ascii	"pantallas\000"
 7613      616C6C61 
 7613      7300
 7614              	.LASF36:
 7615 04a9 6175746F 		.ascii	"autorizado\000"
 7615      72697A61 
 7615      646F00
 7616              	.LASF1:
 7617 04b4 756E7369 		.ascii	"unsigned char\000"
 7617      676E6564 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 162


 7617      20636861 
 7617      7200
 7618              	.LASF38:
 7619 04c2 6765745F 		.ascii	"get_estado\000"
 7619      65737461 
 7619      646F00
 7620              	.LASF79:
 7621 04cd 666C756A 		.ascii	"flujo_pos\000"
 7621      6F5F706F 
 7621      7300
 7622              	.LASF102:
 7623 04d7 6C61646F 		.ascii	"lado2\000"
 7623      3200
 7624              	.LASF43:
 7625 04dd 7665725F 		.ascii	"ver_error\000"
 7625      6572726F 
 7625      7200
 7626              	.LASF114:
 7627 04e7 6F6B5F64 		.ascii	"ok_datosRF\000"
 7627      61746F73 
 7627      524600
 7628              	.LASF95:
 7629 04f2 6E6F6D62 		.ascii	"nombre_pro2\000"
 7629      72655F70 
 7629      726F3200 
 7630              	.LASF0:
 7631 04fe 7369676E 		.ascii	"signed char\000"
 7631      65642063 
 7631      68617200 
 7632              	.LASF47:
 7633 050a 76616C6F 		.ascii	"valor\000"
 7633      7200
 7634              	.LASF84:
 7635 0510 636F756E 		.ascii	"count_protector\000"
 7635      745F7072 
 7635      6F746563 
 7635      746F7200 
 7636              	.LASF3:
 7637 0520 73686F72 		.ascii	"short unsigned int\000"
 7637      7420756E 
 7637      7369676E 
 7637      65642069 
 7637      6E7400
 7638              	.LASF109:
 7639 0533 66656368 		.ascii	"fecha\000"
 7639      6100
 7640              	.LASF11:
 7641 0539 75696E74 		.ascii	"uint8\000"
 7641      3800
 7642              	.LASF14:
 7643 053f 646F7562 		.ascii	"double\000"
 7643      6C6500
 7644              	.LASF41:
 7645 0546 72785F65 		.ascii	"rx_extend\000"
 7645      7874656E 
 7645      6400
 7646              	.LASF92:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cck7pw6l.s 			page 163


 7647 0550 7472616D 		.ascii	"trama_totales\000"
 7647      615F746F 
 7647      74616C65 
 7647      7300
 7648              	.LASF90:
 7649 055e 69645F65 		.ascii	"id_estacion\000"
 7649      73746163 
 7649      696F6E00 
 7650              	.LASF27:
 7651 056a 6D616E67 		.ascii	"manguera\000"
 7651      75657261 
 7651      00
 7652              	.LASF87:
 7653 0573 696D6167 		.ascii	"imagen_grado\000"
 7653      656E5F67 
 7653      7261646F 
 7653      00
 7654              	.LASF19:
 7655 0580 67726164 		.ascii	"grado\000"
 7655      6F00
 7656              	.LASF130:
 7657 0586 52785F53 		.ascii	"Rx_Surtidor\000"
 7657      75727469 
 7657      646F7200 
 7658              	.LASF68:
 7659 0592 73697A65 		.ascii	"sizeletra1\000"
 7659      6C657472 
 7659      613100
 7660              	.LASF71:
 7661 059d 73697A65 		.ascii	"sizeletra2\000"
 7661      6C657472 
 7661      613200
 7662              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
