ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Protocolo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	count_teclas1,1,1
  19              		.comm	comas1,1,1
  20              		.comm	comas2,1,1
  21              		.comm	id_coma1,1,1
  22              		.comm	id_teclado1,1,1
  23              		.comm	count_teclas2,1,1
  24              		.comm	id_coma2,1,1
  25              		.comm	id_teclado2,1,1
  26              		.comm	posx1,2,2
  27              		.comm	posy1,2,2
  28              		.comm	sizeletra1,2,2
  29              		.comm	posx2,2,2
  30              		.comm	posy2,2,2
  31              		.comm	sizeletra2,2,2
  32              		.comm	teclas1,1,1
  33              		.comm	teclas2,1,1
  34              		.comm	flujo_LCD1,1,1
  35              		.comm	flujo_LCD2,1,1
  36              		.comm	flujo_pos1,1,1
  37              		.comm	flujo_pos2,1,1
  38              		.comm	seleccion_pos,1,1
  39              		.comm	flujo_pos,1,1
  40              		.comm	venta_activa,1,1
  41              		.comm	venta_activa2,1,1
  42              		.comm	Buffer_LCD1,30,4
  43              		.comm	Buffer_LCD2,30,4
  44              		.comm	count_protector,1,1
  45              		.comm	count_protector2,1,1
  46              		.comm	password_lcd,9,4
  47              		.comm	imagen_grado,2,2
  48              		.comm	prox_caso,8,4
  49              		.comm	bloqueo_LCD,3,4
  50              		.comm	id_estacion,5,4
  51              		.comm	id_venta,8,4
  52              		.comm	trama_totales,200,4
  53              		.comm	ppux10,1,1
  54              		.comm	nombre_pro1,17,4
  55              		.comm	nombre_pro2,17,4
  56              		.comm	nombre_pro3,17,4
  57              		.comm	version,4,4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 2


  58              		.comm	kmscreen,1,1
  59              		.comm	pantallas,1,1
  60              		.comm	efectivo,1,1
  61              		.comm	lado1,93,4
  62              		.comm	lado2,93,4
  63              		.comm	lado3,93,4
  64              		.comm	lado4,93,4
  65              		.comm	nombre,33,4
  66              		.comm	nit,15,4
  67              		.comm	telefono,20,4
  68              		.comm	direccion,33,4
  69              		.comm	lema1,32,4
  70              		.comm	lema2,32,4
  71              		.comm	id_logo,2,4
  72              		.comm	km,2,4
  73              		.comm	fecha,3,4
  74              		.comm	hora,2,4
  75              		.comm	rventa1,118,4
  76              		.comm	rventa2,118,4
  77              		.comm	ok_RF,1,1
  78              		.comm	ok_datosRF,1,1
  79              		.comm	rf_mod,200,4
  80              		.comm	buffer_i2c,64,4
  81              		.comm	crc_total,1,1
  82              		.comm	print1,2,4
  83              		.comm	print2,2,4
  84              		.comm	tipo_venta,1,1
  85              		.comm	rx_timeout,1,1
  86              		.global	msn_tc
  87              		.data
  88              		.align	2
  89              		.type	msn_tc, %object
  90              		.size	msn_tc, 17
  91              	msn_tc:
  92 0000 544F5441 		.ascii	"TOTALES CORRIENTE"
  92      4C455320 
  92      434F5252 
  92      49454E54 
  92      45
  93              		.global	msn_te
  94 0011 000000   		.align	2
  95              		.type	msn_te, %object
  96              		.size	msn_te, 13
  97              	msn_te:
  98 0014 544F5441 		.ascii	"TOTALES EXTRA"
  98      4C455320 
  98      45585452 
  98      41
  99              		.global	msn_td
 100 0021 000000   		.align	2
 101              		.type	msn_td, %object
 102              		.size	msn_td, 14
 103              	msn_td:
 104 0024 544F5441 		.ascii	"TOTALES DIESEL"
 104      4C455320 
 104      44494553 
 104      454C
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 3


 105              		.global	msn_lecact
 106 0032 0000     		.align	2
 107              		.type	msn_lecact, %object
 108              		.size	msn_lecact, 15
 109              	msn_lecact:
 110 0034 4C656374 		.ascii	"Lectura Actual:"
 110      75726120 
 110      41637475 
 110      616C3A
 111              		.global	msn_lecaan
 112 0043 00       		.align	2
 113              		.type	msn_lecaan, %object
 114              		.size	msn_lecaan, 17
 115              	msn_lecaan:
 116 0044 4C656374 		.ascii	"Lectura Anterior:"
 116      75726120 
 116      416E7465 
 116      72696F72 
 116      3A
 117              		.global	msn_tventas
 118 0055 000000   		.align	2
 119              		.type	msn_tventas, %object
 120              		.size	msn_tventas, 18
 121              	msn_tventas:
 122 0058 546F7461 		.ascii	"Total de Ventas: $"
 122      6C206465 
 122      2056656E 
 122      7461733A 
 122      2024
 123 006a 0000     		.section	.text.Rx_Surtidor,"ax",%progbits
 124              		.align	2
 125              		.global	Rx_Surtidor
 126              		.thumb
 127              		.thumb_func
 128              		.type	Rx_Surtidor, %function
 129              	Rx_Surtidor:
 130              	.LFB63:
 131              		.file 1 ".\\Protocolo.c"
   1:.\Protocolo.c **** /*
   2:.\Protocolo.c **** ***************************************************************************************************
   3:.\Protocolo.c **** *                                           GRP550/700 CODE
   4:.\Protocolo.c **** 
   5:.\Protocolo.c **** *
   6:.\Protocolo.c **** *                             (c) Copyright 2013; Sistemas Insepet LTDA
   7:.\Protocolo.c **** *
   8:.\Protocolo.c **** *               All rights reserved.  Protected by international copyright laws.
   9:.\Protocolo.c **** *               Knowledge of the source code may NOT be used to develop a similar product.
  10:.\Protocolo.c **** *               Please help us continue to provide the Embedded community with the finest
  11:.\Protocolo.c **** *               software available.  Your honesty is greatly appreciated.
  12:.\Protocolo.c **** ***************************************************************************************************
  13:.\Protocolo.c **** */
  14:.\Protocolo.c **** 
  15:.\Protocolo.c **** /*
  16:.\Protocolo.c **** ***************************************************************************************************
  17:.\Protocolo.c **** *
  18:.\Protocolo.c **** *                                             GRP550/700 CODE
  19:.\Protocolo.c **** *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 4


  20:.\Protocolo.c **** *                                             CYPRESS PSoC5LP
  21:.\Protocolo.c **** *                                                with the
  22:.\Protocolo.c **** *                                            CY8C5969AXI-LP035
  23:.\Protocolo.c **** *
  24:.\Protocolo.c **** * Filename      : Protocolo.c
  25:.\Protocolo.c **** * Version       : V1.00
  26:.\Protocolo.c **** * Programmer(s) : 
  27:.\Protocolo.c ****                   
  28:.\Protocolo.c **** ***************************************************************************************************
  29:.\Protocolo.c **** */
  30:.\Protocolo.c **** 
  31:.\Protocolo.c **** 
  32:.\Protocolo.c **** /*
  33:.\Protocolo.c **** ***************************************************************************************************
  34:.\Protocolo.c **** *                                             INCLUDE FILES
  35:.\Protocolo.c **** ***************************************************************************************************
  36:.\Protocolo.c **** */
  37:.\Protocolo.c **** #include <device.h>
  38:.\Protocolo.c **** #include "VariablesG.h"
  39:.\Protocolo.c **** #include "i2c.h"
  40:.\Protocolo.c **** #include "Print.h"
  41:.\Protocolo.c **** 
  42:.\Protocolo.c **** /*
  43:.\Protocolo.c **** ***************************************************************************************************
  44:.\Protocolo.c **** *                                            	MENSAJES
  45:.\Protocolo.c **** ***************************************************************************************************
  46:.\Protocolo.c **** */
  47:.\Protocolo.c **** uint8 rx_timeout;								//0 inicia espera  1 se cumplio el tiempo
  48:.\Protocolo.c **** uint8 msn_tc[17]="TOTALES CORRIENTE";
  49:.\Protocolo.c **** uint8 msn_te[13]="TOTALES EXTRA";
  50:.\Protocolo.c **** uint8 msn_td[14]="TOTALES DIESEL";
  51:.\Protocolo.c **** uint8 msn_lecact[15]="Lectura Actual:";
  52:.\Protocolo.c **** uint8 msn_lecaan[17]="Lectura Anterior:";
  53:.\Protocolo.c **** uint8 msn_tventas[18]="Total de Ventas: $";
  54:.\Protocolo.c **** 
  55:.\Protocolo.c **** /*
  56:.\Protocolo.c **** ***************************************************************************************************
  57:.\Protocolo.c **** *                                        CY_ISR(modo_mux)
  58:.\Protocolo.c **** *
  59:.\Protocolo.c **** * Description : 
  60:.\Protocolo.c **** *               
  61:.\Protocolo.c **** ***************************************************************************************************
  62:.\Protocolo.c **** */
  63:.\Protocolo.c **** CY_ISR(Rx_Surtidor){
 132              		.loc 1 63 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136 0000 80B5     		push	{r7, lr}
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
  64:.\Protocolo.c ****     Timer_RxSurtidor_ReadStatusRegister();
 142              		.loc 1 64 0
 143 0004 FFF7FEFF 		bl	Timer_RxSurtidor_ReadStatusRegister
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 5


  65:.\Protocolo.c **** 	rx_timeout=1;	
 144              		.loc 1 65 0
 145 0008 014B     		ldr	r3, .L2
 146 000a 0122     		movs	r2, #1
 147 000c 1A70     		strb	r2, [r3]
  66:.\Protocolo.c **** }
 148              		.loc 1 66 0
 149 000e 80BD     		pop	{r7, pc}
 150              	.L3:
 151              		.align	2
 152              	.L2:
 153 0010 00000000 		.word	rx_timeout
 154              		.cfi_endproc
 155              	.LFE63:
 156              		.size	Rx_Surtidor, .-Rx_Surtidor
 157              		.section	.text.get_estado,"ax",%progbits
 158              		.align	2
 159              		.global	get_estado
 160              		.thumb
 161              		.thumb_func
 162              		.type	get_estado, %function
 163              	get_estado:
 164              	.LFB64:
  67:.\Protocolo.c **** 
  68:.\Protocolo.c **** 
  69:.\Protocolo.c **** /*
  70:.\Protocolo.c **** ***************************************************************************************************
  71:.\Protocolo.c **** *                                         ver_estado( void )
  72:.\Protocolo.c **** *
  73:.\Protocolo.c **** * Description : 
  74:.\Protocolo.c **** *               
  75:.\Protocolo.c **** *
  76:.\Protocolo.c **** * Argument(s) : none
  77:.\Protocolo.c **** *
  78:.\Protocolo.c **** * Return(s)   : none
  79:.\Protocolo.c **** *
  80:.\Protocolo.c **** * Caller(s)   : 
  81:.\Protocolo.c **** *
  82:.\Protocolo.c **** * Note(s)     : none.
  83:.\Protocolo.c **** ***************************************************************************************************
  84:.\Protocolo.c **** */
  85:.\Protocolo.c **** 
  86:.\Protocolo.c **** uint8 get_estado(uint8 dir){
 165              		.loc 1 86 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 16
 168              		@ frame_needed = 1, uses_anonymous_args = 0
 169 0000 80B5     		push	{r7, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 84B0     		sub	sp, sp, #16
 174              		.cfi_def_cfa_offset 24
 175 0004 00AF     		add	r7, sp, #0
 176              		.cfi_def_cfa_register 7
 177 0006 0346     		mov	r3, r0
 178 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 6


  87:.\Protocolo.c ****     uint8 estado;
  88:.\Protocolo.c ****     Surtidor_ClearRxBuffer();	
 179              		.loc 1 88 0
 180 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  89:.\Protocolo.c ****     Surtidor_PutChar(dir);
 181              		.loc 1 89 0
 182 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 183 0010 1846     		mov	r0, r3
 184 0012 FFF7FEFF 		bl	Surtidor_PutChar
  90:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 185              		.loc 1 90 0
 186 0016 1E48     		ldr	r0, .L9
 187 0018 FFF7FEFF 		bl	isr_1_StartEx
  91:.\Protocolo.c ****     Timer_RxSurtidor_Start();
 188              		.loc 1 91 0
 189 001c FFF7FEFF 		bl	Timer_RxSurtidor_Start
  92:.\Protocolo.c **** 	rx_timeout=0;
 190              		.loc 1 92 0
 191 0020 1C4B     		ldr	r3, .L9+4
 192 0022 0022     		movs	r2, #0
 193 0024 1A70     		strb	r2, [r3]
  93:.\Protocolo.c ****     CyDelay(10);
 194              		.loc 1 93 0
 195 0026 0A20     		movs	r0, #10
 196 0028 FFF7FEFF 		bl	CyDelay
  94:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 197              		.loc 1 94 0
 198 002c 0BE0     		b	.L5
 199              	.L7:
  95:.\Protocolo.c **** 		if(rx_timeout==1){
 200              		.loc 1 95 0
 201 002e 194B     		ldr	r3, .L9+4
 202 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 203 0032 012B     		cmp	r3, #1
 204 0034 07D1     		bne	.L5
  96:.\Protocolo.c **** 			isr_1_Stop();
 205              		.loc 1 96 0
 206 0036 FFF7FEFF 		bl	isr_1_Stop
  97:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 207              		.loc 1 97 0
 208 003a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  98:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 209              		.loc 1 98 0
 210 003e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  99:.\Protocolo.c **** 			return 0;
 211              		.loc 1 99 0
 212 0042 0023     		movs	r3, #0
 213 0044 20E0     		b	.L6
 214              	.L5:
  94:.\Protocolo.c **** 		if(rx_timeout==1){
 215              		.loc 1 94 0
 216 0046 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 217 004a 0346     		mov	r3, r0
 218 004c 002B     		cmp	r3, #0
 219 004e EED0     		beq	.L7
 100:.\Protocolo.c **** 		}
 101:.\Protocolo.c **** 	}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 7


 102:.\Protocolo.c ****     estado=Surtidor_ReadRxData();
 220              		.loc 1 102 0
 221 0050 FFF7FEFF 		bl	Surtidor_ReadRxData
 222 0054 0346     		mov	r3, r0
 223 0056 FB73     		strb	r3, [r7, #15]
 103:.\Protocolo.c **** 	if((estado&0x0F)==dir){
 224              		.loc 1 103 0
 225 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 226 005a 03F00F02 		and	r2, r3, #15
 227 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 228 0060 9A42     		cmp	r2, r3
 229 0062 0AD1     		bne	.L8
 104:.\Protocolo.c **** 		estado=(estado&0xF0)>>4;
 230              		.loc 1 104 0
 231 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 232 0066 1B09     		lsrs	r3, r3, #4
 233 0068 FB73     		strb	r3, [r7, #15]
 105:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 234              		.loc 1 105 0
 235 006a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 106:.\Protocolo.c **** 		isr_1_Stop();
 236              		.loc 1 106 0
 237 006e FFF7FEFF 		bl	isr_1_Stop
 107:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 238              		.loc 1 107 0
 239 0072 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 108:.\Protocolo.c **** 	    return estado;
 240              		.loc 1 108 0
 241 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 242 0078 06E0     		b	.L6
 243              	.L8:
 109:.\Protocolo.c **** 	}
 110:.\Protocolo.c **** 	else{
 111:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 244              		.loc 1 111 0
 245 007a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 112:.\Protocolo.c **** 		isr_1_Stop();
 246              		.loc 1 112 0
 247 007e FFF7FEFF 		bl	isr_1_Stop
 113:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 248              		.loc 1 113 0
 249 0082 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 114:.\Protocolo.c **** 	    return 0;	
 250              		.loc 1 114 0
 251 0086 0023     		movs	r3, #0
 252              	.L6:
 115:.\Protocolo.c **** 	}
 116:.\Protocolo.c **** }
 253              		.loc 1 116 0
 254 0088 1846     		mov	r0, r3
 255 008a 1037     		adds	r7, r7, #16
 256              		.cfi_def_cfa_offset 8
 257 008c BD46     		mov	sp, r7
 258              		.cfi_def_cfa_register 13
 259              		@ sp needed
 260 008e 80BD     		pop	{r7, pc}
 261              	.L10:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 8


 262              		.align	2
 263              	.L9:
 264 0090 00000000 		.word	Rx_Surtidor
 265 0094 00000000 		.word	rx_timeout
 266              		.cfi_endproc
 267              	.LFE64:
 268              		.size	get_estado, .-get_estado
 269              		.section	.text.ver_pos,"ax",%progbits
 270              		.align	2
 271              		.global	ver_pos
 272              		.thumb
 273              		.thumb_func
 274              		.type	ver_pos, %function
 275              	ver_pos:
 276              	.LFB65:
 117:.\Protocolo.c **** 
 118:.\Protocolo.c **** /*
 119:.\Protocolo.c **** ***************************************************************************************************
 120:.\Protocolo.c **** *                                         ver_pos( void )
 121:.\Protocolo.c **** *
 122:.\Protocolo.c **** * Description : 
 123:.\Protocolo.c **** *               
 124:.\Protocolo.c **** *
 125:.\Protocolo.c **** * Argument(s) : none
 126:.\Protocolo.c **** *
 127:.\Protocolo.c **** * Return(s)   : none
 128:.\Protocolo.c **** *
 129:.\Protocolo.c **** * Caller(s)   : 
 130:.\Protocolo.c **** *
 131:.\Protocolo.c **** * Note(s)     : none.
 132:.\Protocolo.c **** ***************************************************************************************************
 133:.\Protocolo.c **** */
 134:.\Protocolo.c **** uint8 ver_pos (void){
 277              		.loc 1 134 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 8
 280              		@ frame_needed = 1, uses_anonymous_args = 0
 281 0000 80B5     		push	{r7, lr}
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 82B0     		sub	sp, sp, #8
 286              		.cfi_def_cfa_offset 16
 287 0004 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 135:.\Protocolo.c **** uint8 x;
 136:.\Protocolo.c **** lado1.dir=0xff;
 289              		.loc 1 136 0
 290 0006 244B     		ldr	r3, .L19
 291 0008 FF22     		movs	r2, #255
 292 000a 1A70     		strb	r2, [r3]
 137:.\Protocolo.c **** lado2.dir=0xff;
 293              		.loc 1 137 0
 294 000c 234B     		ldr	r3, .L19+4
 295 000e FF22     		movs	r2, #255
 296 0010 1A70     		strb	r2, [r3]
 138:.\Protocolo.c **** 	CyDelay(5);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 9


 297              		.loc 1 138 0
 298 0012 0520     		movs	r0, #5
 299 0014 FFF7FEFF 		bl	CyDelay
 139:.\Protocolo.c ****     if(get_estado(0)!=0){
 300              		.loc 1 139 0
 301 0018 0020     		movs	r0, #0
 302 001a FFF7FEFF 		bl	get_estado
 303 001e 0346     		mov	r3, r0
 304 0020 002B     		cmp	r3, #0
 305 0022 02D0     		beq	.L12
 140:.\Protocolo.c **** 		lado2.dir=0;
 306              		.loc 1 140 0
 307 0024 1D4B     		ldr	r3, .L19+4
 308 0026 0022     		movs	r2, #0
 309 0028 1A70     		strb	r2, [r3]
 310              	.L12:
 141:.\Protocolo.c **** 	}	
 142:.\Protocolo.c ****     for(x=1;x<=15;x++){
 311              		.loc 1 142 0
 312 002a 0123     		movs	r3, #1
 313 002c FB71     		strb	r3, [r7, #7]
 314 002e 1FE0     		b	.L13
 315              	.L17:
 143:.\Protocolo.c **** 		CyDelay(5);
 316              		.loc 1 143 0
 317 0030 0520     		movs	r0, #5
 318 0032 FFF7FEFF 		bl	CyDelay
 144:.\Protocolo.c ****         if(get_estado(x)!=0){
 319              		.loc 1 144 0
 320 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 321 0038 1846     		mov	r0, r3
 322 003a FFF7FEFF 		bl	get_estado
 323 003e 0346     		mov	r3, r0
 324 0040 002B     		cmp	r3, #0
 325 0042 12D0     		beq	.L14
 145:.\Protocolo.c **** 			if(lado1.dir==0xFF){
 326              		.loc 1 145 0
 327 0044 144B     		ldr	r3, .L19
 328 0046 1B78     		ldrb	r3, [r3]
 329 0048 DBB2     		uxtb	r3, r3
 330 004a FF2B     		cmp	r3, #255
 331 004c 03D1     		bne	.L15
 146:.\Protocolo.c **** 				lado1.dir=x;
 332              		.loc 1 146 0
 333 004e 124A     		ldr	r2, .L19
 334 0050 FB79     		ldrb	r3, [r7, #7]
 335 0052 1370     		strb	r3, [r2]
 336 0054 09E0     		b	.L14
 337              	.L15:
 147:.\Protocolo.c **** 			}
 148:.\Protocolo.c **** 			else if(lado2.dir==0xFF){
 338              		.loc 1 148 0
 339 0056 114B     		ldr	r3, .L19+4
 340 0058 1B78     		ldrb	r3, [r3]
 341 005a DBB2     		uxtb	r3, r3
 342 005c FF2B     		cmp	r3, #255
 343 005e 04D1     		bne	.L14
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 10


 149:.\Protocolo.c **** 				lado2.dir=x;
 344              		.loc 1 149 0
 345 0060 0E4A     		ldr	r2, .L19+4
 346 0062 FB79     		ldrb	r3, [r7, #7]
 347 0064 1370     		strb	r3, [r2]
 150:.\Protocolo.c **** 				return 1;
 348              		.loc 1 150 0
 349 0066 0123     		movs	r3, #1
 350 0068 12E0     		b	.L16
 351              	.L14:
 142:.\Protocolo.c **** 		CyDelay(5);
 352              		.loc 1 142 0 discriminator 2
 353 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 354 006c 0133     		adds	r3, r3, #1
 355 006e FB71     		strb	r3, [r7, #7]
 356              	.L13:
 142:.\Protocolo.c **** 		CyDelay(5);
 357              		.loc 1 142 0 is_stmt 0 discriminator 1
 358 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 359 0072 0F2B     		cmp	r3, #15
 360 0074 DCD9     		bls	.L17
 151:.\Protocolo.c **** 			}
 152:.\Protocolo.c **** 		}
 153:.\Protocolo.c **** 	}
 154:.\Protocolo.c **** 	if((lado1.dir!=0xFF)&&(lado2.dir!=0xFF)){
 361              		.loc 1 154 0 is_stmt 1
 362 0076 084B     		ldr	r3, .L19
 363 0078 1B78     		ldrb	r3, [r3]
 364 007a DBB2     		uxtb	r3, r3
 365 007c FF2B     		cmp	r3, #255
 366 007e 06D0     		beq	.L18
 367              		.loc 1 154 0 is_stmt 0 discriminator 1
 368 0080 064B     		ldr	r3, .L19+4
 369 0082 1B78     		ldrb	r3, [r3]
 370 0084 DBB2     		uxtb	r3, r3
 371 0086 FF2B     		cmp	r3, #255
 372 0088 01D0     		beq	.L18
 155:.\Protocolo.c **** 		return 1;
 373              		.loc 1 155 0 is_stmt 1
 374 008a 0123     		movs	r3, #1
 375 008c 00E0     		b	.L16
 376              	.L18:
 156:.\Protocolo.c **** 	}
 157:.\Protocolo.c **** 	else{
 158:.\Protocolo.c **** 		return 0;
 377              		.loc 1 158 0
 378 008e 0023     		movs	r3, #0
 379              	.L16:
 159:.\Protocolo.c **** 	}
 160:.\Protocolo.c **** }
 380              		.loc 1 160 0
 381 0090 1846     		mov	r0, r3
 382 0092 0837     		adds	r7, r7, #8
 383              		.cfi_def_cfa_offset 8
 384 0094 BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 11


 387 0096 80BD     		pop	{r7, pc}
 388              	.L20:
 389              		.align	2
 390              	.L19:
 391 0098 00000000 		.word	lado1
 392 009c 00000000 		.word	lado2
 393              		.cfi_endproc
 394              	.LFE65:
 395              		.size	ver_pos, .-ver_pos
 396              		.section	.text.ver_error,"ax",%progbits
 397              		.align	2
 398              		.global	ver_error
 399              		.thumb
 400              		.thumb_func
 401              		.type	ver_error, %function
 402              	ver_error:
 403              	.LFB66:
 161:.\Protocolo.c **** 
 162:.\Protocolo.c **** /*
 163:.\Protocolo.c **** ***************************************************************************************************
 164:.\Protocolo.c **** *                                         void ver_error(uint8 val)
 165:.\Protocolo.c **** *
 166:.\Protocolo.c **** * Description : 
 167:.\Protocolo.c **** *               
 168:.\Protocolo.c **** *
 169:.\Protocolo.c **** * Argument(s) : none
 170:.\Protocolo.c **** *
 171:.\Protocolo.c **** * Return(s)   : none
 172:.\Protocolo.c **** *
 173:.\Protocolo.c **** * Caller(s)   : 
 174:.\Protocolo.c **** *
 175:.\Protocolo.c **** * Note(s)     : none.
 176:.\Protocolo.c **** ***************************************************************************************************
 177:.\Protocolo.c **** */
 178:.\Protocolo.c **** void ver_error(uint8 val){
 404              		.loc 1 178 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 16
 407              		@ frame_needed = 1, uses_anonymous_args = 0
 408 0000 80B5     		push	{r7, lr}
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 7, -8
 411              		.cfi_offset 14, -4
 412 0002 84B0     		sub	sp, sp, #16
 413              		.cfi_def_cfa_offset 24
 414 0004 00AF     		add	r7, sp, #0
 415              		.cfi_def_cfa_register 7
 416 0006 0346     		mov	r3, r0
 417 0008 FB71     		strb	r3, [r7, #7]
 179:.\Protocolo.c ****     uint8 estado;
 180:.\Protocolo.c ****     Surtidor_PutChar(val);
 418              		.loc 1 180 0
 419 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 420 000c 1846     		mov	r0, r3
 421 000e FFF7FEFF 		bl	Surtidor_PutChar
 181:.\Protocolo.c ****     CyDelay(200);
 422              		.loc 1 181 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 12


 423 0012 C820     		movs	r0, #200
 424 0014 FFF7FEFF 		bl	CyDelay
 182:.\Protocolo.c ****     if(Surtidor_GetRxBufferSize()>=1){
 425              		.loc 1 182 0
 426 0018 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 427 001c 0346     		mov	r3, r0
 428 001e 002B     		cmp	r3, #0
 429 0020 06D0     		beq	.L21
 183:.\Protocolo.c ****        estado=(Surtidor_ReadRxData()&0xF0)>>4;
 430              		.loc 1 183 0
 431 0022 FFF7FEFF 		bl	Surtidor_ReadRxData
 432 0026 0346     		mov	r3, r0
 433 0028 1B09     		lsrs	r3, r3, #4
 434 002a FB73     		strb	r3, [r7, #15]
 184:.\Protocolo.c ****        Surtidor_ClearRxBuffer();
 435              		.loc 1 184 0
 436 002c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 437              	.L21:
 185:.\Protocolo.c ****        if(estado==0){
 186:.\Protocolo.c **** 
 187:.\Protocolo.c ****        }
 188:.\Protocolo.c ****     }    
 189:.\Protocolo.c **** }
 438              		.loc 1 189 0
 439 0030 1037     		adds	r7, r7, #16
 440              		.cfi_def_cfa_offset 8
 441 0032 BD46     		mov	sp, r7
 442              		.cfi_def_cfa_register 13
 443              		@ sp needed
 444 0034 80BD     		pop	{r7, pc}
 445              		.cfi_endproc
 446              	.LFE66:
 447              		.size	ver_error, .-ver_error
 448 0036 00BF     		.section	.rodata
 449              		.align	2
 450              	.LC0:
 451 0000 FF       		.byte	-1
 452 0001 E9       		.byte	-23
 453 0002 FE       		.byte	-2
 454 0003 E0       		.byte	-32
 455 0004 E1       		.byte	-31
 456 0005 E0       		.byte	-32
 457 0006 FB       		.byte	-5
 458 0007 EE       		.byte	-18
 459 0008 F0       		.byte	-16
 460 0009 000000   		.section	.text.estado_ex,"ax",%progbits
 461              		.align	2
 462              		.global	estado_ex
 463              		.thumb
 464              		.thumb_func
 465              		.type	estado_ex, %function
 466              	estado_ex:
 467              	.LFB67:
 190:.\Protocolo.c **** 
 191:.\Protocolo.c **** /*
 192:.\Protocolo.c **** ***************************************************************************************************
 193:.\Protocolo.c **** *                                         estado_ex(uint8 val)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 13


 194:.\Protocolo.c **** *
 195:.\Protocolo.c **** * Description : 
 196:.\Protocolo.c **** *               
 197:.\Protocolo.c **** *
 198:.\Protocolo.c **** * Argument(s) : none
 199:.\Protocolo.c **** *
 200:.\Protocolo.c **** * Return(s)   : none
 201:.\Protocolo.c **** *
 202:.\Protocolo.c **** * Caller(s)   : 
 203:.\Protocolo.c **** *
 204:.\Protocolo.c **** * Note(s)     : none.
 205:.\Protocolo.c **** ***************************************************************************************************
 206:.\Protocolo.c **** */
 207:.\Protocolo.c **** uint8 estado_ex(uint8 val){
 468              		.loc 1 207 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 40
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472 0000 90B5     		push	{r4, r7, lr}
 473              		.cfi_def_cfa_offset 12
 474              		.cfi_offset 4, -12
 475              		.cfi_offset 7, -8
 476              		.cfi_offset 14, -4
 477 0002 8BB0     		sub	sp, sp, #44
 478              		.cfi_def_cfa_offset 56
 479 0004 00AF     		add	r7, sp, #0
 480              		.cfi_def_cfa_register 7
 481 0006 0346     		mov	r3, r0
 482 0008 FB71     		strb	r3, [r7, #7]
 208:.\Protocolo.c ****     uint8 rx_extend[19],x,comand_exten[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0};
 483              		.loc 1 208 0
 484 000a 594A     		ldr	r2, .L41
 485 000c 07F10803 		add	r3, r7, #8
 486 0010 1068     		ldr	r0, [r2]	@ unaligned
 487 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
 488 0014 03C3     		stmia	r3!, {r0, r1}
 489 0016 127A     		ldrb	r2, [r2, #8]
 490 0018 1A70     		strb	r2, [r3]
 209:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 491              		.loc 1 209 0
 492 001a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 210:.\Protocolo.c ****     Surtidor_PutChar(0x20|val);
 493              		.loc 1 210 0
 494 001e FB79     		ldrb	r3, [r7, #7]
 495 0020 43F02003 		orr	r3, r3, #32
 496 0024 DBB2     		uxtb	r3, r3
 497 0026 1846     		mov	r0, r3
 498 0028 FFF7FEFF 		bl	Surtidor_PutChar
 211:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 499              		.loc 1 211 0
 500 002c 5148     		ldr	r0, .L41+4
 501 002e FFF7FEFF 		bl	isr_1_StartEx
 212:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 502              		.loc 1 212 0
 503 0032 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 213:.\Protocolo.c ****     rx_timeout=0;
 504              		.loc 1 213 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 14


 505 0036 504B     		ldr	r3, .L41+8
 506 0038 0022     		movs	r2, #0
 507 003a 1A70     		strb	r2, [r3]
 214:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 508              		.loc 1 214 0
 509 003c 0BE0     		b	.L24
 510              	.L26:
 215:.\Protocolo.c **** 		if(rx_timeout==1){
 511              		.loc 1 215 0
 512 003e 4E4B     		ldr	r3, .L41+8
 513 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 514 0042 012B     		cmp	r3, #1
 515 0044 07D1     		bne	.L24
 216:.\Protocolo.c **** 			isr_1_Stop();
 516              		.loc 1 216 0
 517 0046 FFF7FEFF 		bl	isr_1_Stop
 217:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 518              		.loc 1 217 0
 519 004a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 218:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 520              		.loc 1 218 0
 521 004e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 219:.\Protocolo.c **** 			return 0;
 522              		.loc 1 219 0
 523 0052 0023     		movs	r3, #0
 524 0054 88E0     		b	.L39
 525              	.L24:
 214:.\Protocolo.c **** 		if(rx_timeout==1){
 526              		.loc 1 214 0
 527 0056 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 528 005a 0346     		mov	r3, r0
 529 005c 002B     		cmp	r3, #0
 530 005e EED0     		beq	.L26
 220:.\Protocolo.c **** 		}
 221:.\Protocolo.c **** 	}
 222:.\Protocolo.c **** 	isr_1_Stop();
 531              		.loc 1 222 0
 532 0060 FFF7FEFF 		bl	isr_1_Stop
 223:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 533              		.loc 1 223 0
 534 0064 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 224:.\Protocolo.c ****     if(Surtidor_ReadRxData()==(0xD0|val)){
 535              		.loc 1 224 0
 536 0068 FFF7FEFF 		bl	Surtidor_ReadRxData
 537 006c 0346     		mov	r3, r0
 538 006e 1A46     		mov	r2, r3
 539 0070 FB79     		ldrb	r3, [r7, #7]
 540 0072 63F02F03 		orn	r3, r3, #47
 541 0076 DBB2     		uxtb	r3, r3
 542 0078 9A42     		cmp	r2, r3
 543 007a 74D1     		bne	.L27
 225:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 544              		.loc 1 225 0
 545 007c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 226:.\Protocolo.c **** 		CyDelay(5);
 546              		.loc 1 226 0
 547 0080 0520     		movs	r0, #5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 15


 548 0082 FFF7FEFF 		bl	CyDelay
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 549              		.loc 1 227 0
 550 0086 0023     		movs	r3, #0
 551 0088 87F82730 		strb	r3, [r7, #39]
 552 008c 0EE0     		b	.L28
 553              	.L29:
 228:.\Protocolo.c ****            Surtidor_PutChar(comand_exten[x]); 
 554              		.loc 1 228 0 discriminator 3
 555 008e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 556 0092 07F12802 		add	r2, r7, #40
 557 0096 1344     		add	r3, r3, r2
 558 0098 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 559 009c 1846     		mov	r0, r3
 560 009e FFF7FEFF 		bl	Surtidor_PutChar
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 561              		.loc 1 227 0 discriminator 3
 562 00a2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 563 00a6 0133     		adds	r3, r3, #1
 564 00a8 87F82730 		strb	r3, [r7, #39]
 565              	.L28:
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 566              		.loc 1 227 0 is_stmt 0 discriminator 1
 567 00ac 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 568 00b0 082B     		cmp	r3, #8
 569 00b2 ECD9     		bls	.L29
 229:.\Protocolo.c ****         }
 230:.\Protocolo.c **** 		isr_1_StartEx(Rx_Surtidor);
 570              		.loc 1 230 0 is_stmt 1
 571 00b4 2F48     		ldr	r0, .L41+4
 572 00b6 FFF7FEFF 		bl	isr_1_StartEx
 231:.\Protocolo.c **** 	    Timer_RxSurtidor_Start();	
 573              		.loc 1 231 0
 574 00ba FFF7FEFF 		bl	Timer_RxSurtidor_Start
 232:.\Protocolo.c **** 	    rx_timeout=0;
 575              		.loc 1 232 0
 576 00be 2E4B     		ldr	r3, .L41+8
 577 00c0 0022     		movs	r2, #0
 578 00c2 1A70     		strb	r2, [r3]
 233:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 579              		.loc 1 233 0
 580 00c4 0BE0     		b	.L30
 581              	.L31:
 234:.\Protocolo.c **** 			if(rx_timeout==1){
 582              		.loc 1 234 0
 583 00c6 2C4B     		ldr	r3, .L41+8
 584 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 585 00ca 012B     		cmp	r3, #1
 586 00cc 07D1     		bne	.L30
 235:.\Protocolo.c **** 				isr_1_Stop();
 587              		.loc 1 235 0
 588 00ce FFF7FEFF 		bl	isr_1_Stop
 236:.\Protocolo.c **** 				Timer_RxSurtidor_Stop();
 589              		.loc 1 236 0
 590 00d2 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 237:.\Protocolo.c **** 	    		Surtidor_ClearRxBuffer();			
 591              		.loc 1 237 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 16


 592 00d6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 238:.\Protocolo.c **** 				return 0;
 593              		.loc 1 238 0
 594 00da 0023     		movs	r3, #0
 595 00dc 44E0     		b	.L39
 596              	.L30:
 233:.\Protocolo.c **** 			if(rx_timeout==1){
 597              		.loc 1 233 0
 598 00de FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 599 00e2 0346     		mov	r3, r0
 600 00e4 132B     		cmp	r3, #19
 601 00e6 EED1     		bne	.L31
 239:.\Protocolo.c **** 			}
 240:.\Protocolo.c **** 		}       
 241:.\Protocolo.c **** 		isr_1_Stop();
 602              		.loc 1 241 0
 603 00e8 FFF7FEFF 		bl	isr_1_Stop
 242:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();		
 604              		.loc 1 242 0
 605 00ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 606              		.loc 1 243 0
 607 00f0 0023     		movs	r3, #0
 608 00f2 87F82730 		strb	r3, [r7, #39]
 609 00f6 0FE0     		b	.L32
 610              	.L33:
 244:.\Protocolo.c ****            rx_extend[x]=Surtidor_ReadRxData(); 
 611              		.loc 1 244 0 discriminator 3
 612 00f8 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 613 00fc FFF7FEFF 		bl	Surtidor_ReadRxData
 614 0100 0346     		mov	r3, r0
 615 0102 1A46     		mov	r2, r3
 616 0104 07F12803 		add	r3, r7, #40
 617 0108 2344     		add	r3, r3, r4
 618 010a 03F8142C 		strb	r2, [r3, #-20]
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 619              		.loc 1 243 0 discriminator 3
 620 010e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 621 0112 0133     		adds	r3, r3, #1
 622 0114 87F82730 		strb	r3, [r7, #39]
 623              	.L32:
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 624              		.loc 1 243 0 is_stmt 0 discriminator 1
 625 0118 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 626 011c 122B     		cmp	r3, #18
 627 011e EBD9     		bls	.L33
 245:.\Protocolo.c ****         }
 246:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 628              		.loc 1 246 0 is_stmt 1
 629 0120 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 247:.\Protocolo.c ****         if((rx_extend[0]==0xBA)&&(rx_extend[17]==0x8D)&&(rx_extend[18]==0x8A)&&(rx_extend[12]==0xB1
 630              		.loc 1 247 0
 631 0124 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 632 0126 BA2B     		cmp	r3, #186
 633 0128 1BD1     		bne	.L34
 634              		.loc 1 247 0 is_stmt 0 discriminator 1
 635 012a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 17


 636 012e 8D2B     		cmp	r3, #141
 637 0130 17D1     		bne	.L34
 638              		.loc 1 247 0 discriminator 2
 639 0132 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 640 0136 8A2B     		cmp	r3, #138
 641 0138 13D1     		bne	.L34
 642              		.loc 1 247 0 discriminator 3
 643 013a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 644 013e B12B     		cmp	r3, #177
 645 0140 0FD1     		bne	.L34
 248:.\Protocolo.c ****             switch(rx_extend[14]){
 646              		.loc 1 248 0 is_stmt 1
 647 0142 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 648 0146 B22B     		cmp	r3, #178
 649 0148 05D0     		beq	.L36
 650 014a B32B     		cmp	r3, #179
 651 014c 05D0     		beq	.L37
 652 014e B12B     		cmp	r3, #177
 653 0150 05D1     		bne	.L40
 249:.\Protocolo.c ****                 case 0xB1:
 250:.\Protocolo.c ****                     return 1;
 654              		.loc 1 250 0
 655 0152 0123     		movs	r3, #1
 656 0154 08E0     		b	.L39
 657              	.L36:
 251:.\Protocolo.c ****                 break;
 252:.\Protocolo.c ****                 case 0xB2:
 253:.\Protocolo.c ****                     return 2;
 658              		.loc 1 253 0
 659 0156 0223     		movs	r3, #2
 660 0158 06E0     		b	.L39
 661              	.L37:
 254:.\Protocolo.c ****                 break;
 255:.\Protocolo.c ****                 case 0xB3:
 256:.\Protocolo.c ****                     return 3;
 662              		.loc 1 256 0
 663 015a 0323     		movs	r3, #3
 664 015c 04E0     		b	.L39
 665              	.L40:
 257:.\Protocolo.c ****                 break;
 258:.\Protocolo.c ****                 default:
 259:.\Protocolo.c ****                 	return 0;
 666              		.loc 1 259 0
 667 015e 0023     		movs	r3, #0
 668 0160 02E0     		b	.L39
 669              	.L34:
 260:.\Protocolo.c **** 				break;
 261:.\Protocolo.c ****             }
 262:.\Protocolo.c ****         }
 263:.\Protocolo.c ****         else{
 264:.\Protocolo.c ****             return 0;
 670              		.loc 1 264 0
 671 0162 0023     		movs	r3, #0
 672 0164 00E0     		b	.L39
 673              	.L27:
 265:.\Protocolo.c ****         }
 266:.\Protocolo.c ****     }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 18


 267:.\Protocolo.c ****     else{
 268:.\Protocolo.c ****         return 0;
 674              		.loc 1 268 0
 675 0166 0023     		movs	r3, #0
 676              	.L39:
 269:.\Protocolo.c ****     }
 270:.\Protocolo.c **** }
 677              		.loc 1 270 0
 678 0168 1846     		mov	r0, r3
 679 016a 2C37     		adds	r7, r7, #44
 680              		.cfi_def_cfa_offset 12
 681 016c BD46     		mov	sp, r7
 682              		.cfi_def_cfa_register 13
 683              		@ sp needed
 684 016e 90BD     		pop	{r4, r7, pc}
 685              	.L42:
 686              		.align	2
 687              	.L41:
 688 0170 00000000 		.word	.LC0
 689 0174 00000000 		.word	Rx_Surtidor
 690 0178 00000000 		.word	rx_timeout
 691              		.cfi_endproc
 692              	.LFE67:
 693              		.size	estado_ex, .-estado_ex
 694              		.section	.text.detener,"ax",%progbits
 695              		.align	2
 696              		.global	detener
 697              		.thumb
 698              		.thumb_func
 699              		.type	detener, %function
 700              	detener:
 701              	.LFB68:
 271:.\Protocolo.c **** 
 272:.\Protocolo.c **** /*
 273:.\Protocolo.c **** ***************************************************************************************************
 274:.\Protocolo.c **** *                                         void detener(uint8 val)
 275:.\Protocolo.c **** *
 276:.\Protocolo.c **** * Description : 
 277:.\Protocolo.c **** *               
 278:.\Protocolo.c **** *
 279:.\Protocolo.c **** * Argument(s) : none
 280:.\Protocolo.c **** *
 281:.\Protocolo.c **** * Return(s)   : none
 282:.\Protocolo.c **** *
 283:.\Protocolo.c **** * Caller(s)   : 
 284:.\Protocolo.c **** *
 285:.\Protocolo.c **** * Note(s)     : none.
 286:.\Protocolo.c **** ***************************************************************************************************
 287:.\Protocolo.c **** */
 288:.\Protocolo.c **** void detener(uint8 val){
 702              		.loc 1 288 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 8
 705              		@ frame_needed = 1, uses_anonymous_args = 0
 706 0000 80B5     		push	{r7, lr}
 707              		.cfi_def_cfa_offset 8
 708              		.cfi_offset 7, -8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 19


 709              		.cfi_offset 14, -4
 710 0002 82B0     		sub	sp, sp, #8
 711              		.cfi_def_cfa_offset 16
 712 0004 00AF     		add	r7, sp, #0
 713              		.cfi_def_cfa_register 7
 714 0006 0346     		mov	r3, r0
 715 0008 FB71     		strb	r3, [r7, #7]
 289:.\Protocolo.c ****     Surtidor_PutChar(0x30|val);
 716              		.loc 1 289 0
 717 000a FB79     		ldrb	r3, [r7, #7]
 718 000c 43F03003 		orr	r3, r3, #48
 719 0010 DBB2     		uxtb	r3, r3
 720 0012 1846     		mov	r0, r3
 721 0014 FFF7FEFF 		bl	Surtidor_PutChar
 290:.\Protocolo.c ****     CyDelay(200);
 722              		.loc 1 290 0
 723 0018 C820     		movs	r0, #200
 724 001a FFF7FEFF 		bl	CyDelay
 291:.\Protocolo.c **** }
 725              		.loc 1 291 0
 726 001e 0837     		adds	r7, r7, #8
 727              		.cfi_def_cfa_offset 8
 728 0020 BD46     		mov	sp, r7
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 0022 80BD     		pop	{r7, pc}
 732              		.cfi_endproc
 733              	.LFE68:
 734              		.size	detener, .-detener
 735              		.section	.text.venta,"ax",%progbits
 736              		.align	2
 737              		.global	venta
 738              		.thumb
 739              		.thumb_func
 740              		.type	venta, %function
 741              	venta:
 742              	.LFB69:
 292:.\Protocolo.c **** 
 293:.\Protocolo.c **** /*
 294:.\Protocolo.c **** ***************************************************************************************************
 295:.\Protocolo.c **** *                                         void venta(uint8 val)
 296:.\Protocolo.c **** *
 297:.\Protocolo.c **** * Description : 
 298:.\Protocolo.c **** *               
 299:.\Protocolo.c **** *
 300:.\Protocolo.c **** * Argument(s) : none
 301:.\Protocolo.c **** *
 302:.\Protocolo.c **** * Return(s)   : none
 303:.\Protocolo.c **** *
 304:.\Protocolo.c **** * Caller(s)   : 
 305:.\Protocolo.c **** *
 306:.\Protocolo.c **** * Note(s)     : none.
 307:.\Protocolo.c **** ***************************************************************************************************
 308:.\Protocolo.c **** */
 309:.\Protocolo.c **** uint8 venta(uint8 dir){
 743              		.loc 1 309 0
 744              		.cfi_startproc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 20


 745              		@ args = 0, pretend = 0, frame = 16
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747 0000 80B5     		push	{r7, lr}
 748              		.cfi_def_cfa_offset 8
 749              		.cfi_offset 7, -8
 750              		.cfi_offset 14, -4
 751 0002 84B0     		sub	sp, sp, #16
 752              		.cfi_def_cfa_offset 24
 753 0004 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 755 0006 0346     		mov	r3, r0
 756 0008 FB71     		strb	r3, [r7, #7]
 310:.\Protocolo.c **** 	uint8 x;
 311:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 757              		.loc 1 311 0
 758 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 312:.\Protocolo.c **** 	Surtidor_PutChar(0x40|dir);
 759              		.loc 1 312 0
 760 000e FB79     		ldrb	r3, [r7, #7]
 761 0010 43F04003 		orr	r3, r3, #64
 762 0014 DBB2     		uxtb	r3, r3
 763 0016 1846     		mov	r0, r3
 764 0018 FFF7FEFF 		bl	Surtidor_PutChar
 313:.\Protocolo.c ****     CyDelay(300);
 765              		.loc 1 313 0
 766 001c 4FF49670 		mov	r0, #300
 767 0020 FFF7FEFF 		bl	CyDelay
 314:.\Protocolo.c **** 	if((version[1]!=7)&&(Surtidor_GetRxBufferSize()==33)){
 768              		.loc 1 314 0
 769 0024 AB4B     		ldr	r3, .L78
 770 0026 5B78     		ldrb	r3, [r3, #1]
 771 0028 DBB2     		uxtb	r3, r3
 772 002a 072B     		cmp	r3, #7
 773 002c 00F0BC80 		beq	.L45
 774              		.loc 1 314 0 is_stmt 0 discriminator 1
 775 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 776 0034 0346     		mov	r3, r0
 777 0036 212B     		cmp	r3, #33
 778 0038 40F0B680 		bne	.L45
 315:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[32]==0xF0)){
 779              		.loc 1 315 0 is_stmt 1
 780 003c A64B     		ldr	r3, .L78+4
 781 003e 1B78     		ldrb	r3, [r3]
 782 0040 DBB2     		uxtb	r3, r3
 783 0042 FF2B     		cmp	r3, #255
 784 0044 40F0AE80 		bne	.L46
 785              		.loc 1 315 0 is_stmt 0 discriminator 1
 786 0048 A34B     		ldr	r3, .L78+4
 787 004a 9B78     		ldrb	r3, [r3, #2]
 788 004c DBB2     		uxtb	r3, r3
 789 004e F82B     		cmp	r3, #248
 790 0050 40F0A880 		bne	.L46
 791              		.loc 1 315 0 discriminator 2
 792 0054 A04B     		ldr	r3, .L78+4
 793 0056 93F82030 		ldrb	r3, [r3, #32]
 794 005a DBB2     		uxtb	r3, r3
 795 005c F02B     		cmp	r3, #240
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 21


 796 005e 40F0A180 		bne	.L46
 316:.\Protocolo.c **** 			if(dir==lado1.dir){
 797              		.loc 1 316 0 is_stmt 1
 798 0062 9E4B     		ldr	r3, .L78+8
 799 0064 1B78     		ldrb	r3, [r3]
 800 0066 DBB2     		uxtb	r3, r3
 801 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 802 006a 9A42     		cmp	r2, r3
 803 006c 4CD1     		bne	.L47
 317:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 804              		.loc 1 317 0
 805 006e 9A4B     		ldr	r3, .L78+4
 806 0070 5B7A     		ldrb	r3, [r3, #9]
 807 0072 DBB2     		uxtb	r3, r3
 808 0074 03F00F03 		and	r3, r3, #15
 809 0078 DBB2     		uxtb	r3, r3
 810 007a 0133     		adds	r3, r3, #1
 811 007c DAB2     		uxtb	r2, r3
 812 007e 984B     		ldr	r3, .L78+12
 813 0080 5A76     		strb	r2, [r3, #25]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 814              		.loc 1 318 0
 815 0082 0023     		movs	r3, #0
 816 0084 FB73     		strb	r3, [r7, #15]
 817 0086 0FE0     		b	.L48
 818              	.L49:
 319:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 819              		.loc 1 319 0 discriminator 3
 820 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 821 008a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 822 008c 0C32     		adds	r2, r2, #12
 823 008e 9249     		ldr	r1, .L78+4
 824 0090 8A5C     		ldrb	r2, [r1, r2]
 825 0092 D2B2     		uxtb	r2, r2
 826 0094 02F00F02 		and	r2, r2, #15
 827 0098 D1B2     		uxtb	r1, r2
 828 009a 914A     		ldr	r2, .L78+12
 829 009c 1344     		add	r3, r3, r2
 830 009e 0A46     		mov	r2, r1
 831 00a0 9A70     		strb	r2, [r3, #2]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 832              		.loc 1 318 0 discriminator 3
 833 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 834 00a4 0133     		adds	r3, r3, #1
 835 00a6 FB73     		strb	r3, [r7, #15]
 836              	.L48:
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 837              		.loc 1 318 0 is_stmt 0 discriminator 1
 838 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 839 00aa 032B     		cmp	r3, #3
 840 00ac ECD9     		bls	.L49
 320:.\Protocolo.c **** 				}
 321:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 841              		.loc 1 321 0 is_stmt 1
 842 00ae 0023     		movs	r3, #0
 843 00b0 FB73     		strb	r3, [r7, #15]
 844 00b2 0FE0     		b	.L50
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 22


 845              	.L51:
 322:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 846              		.loc 1 322 0 discriminator 3
 847 00b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 848 00b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 849 00b8 1132     		adds	r2, r2, #17
 850 00ba 8749     		ldr	r1, .L78+4
 851 00bc 8A5C     		ldrb	r2, [r1, r2]
 852 00be D2B2     		uxtb	r2, r2
 853 00c0 02F00F02 		and	r2, r2, #15
 854 00c4 D1B2     		uxtb	r1, r2
 855 00c6 864A     		ldr	r2, .L78+12
 856 00c8 1344     		add	r3, r3, r2
 857 00ca 0A46     		mov	r2, r1
 858 00cc 1A74     		strb	r2, [r3, #16]
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 859              		.loc 1 321 0 discriminator 3
 860 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 861 00d0 0133     		adds	r3, r3, #1
 862 00d2 FB73     		strb	r3, [r7, #15]
 863              	.L50:
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 864              		.loc 1 321 0 is_stmt 0 discriminator 1
 865 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 866 00d6 052B     		cmp	r3, #5
 867 00d8 ECD9     		bls	.L51
 323:.\Protocolo.c **** 				}			
 324:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 868              		.loc 1 324 0 is_stmt 1
 869 00da 0023     		movs	r3, #0
 870 00dc FB73     		strb	r3, [r7, #15]
 871 00de 0FE0     		b	.L52
 872              	.L53:
 325:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 873              		.loc 1 325 0 discriminator 3
 874 00e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 875 00e2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 876 00e4 1832     		adds	r2, r2, #24
 877 00e6 7C49     		ldr	r1, .L78+4
 878 00e8 8A5C     		ldrb	r2, [r1, r2]
 879 00ea D2B2     		uxtb	r2, r2
 880 00ec 02F00F02 		and	r2, r2, #15
 881 00f0 D1B2     		uxtb	r1, r2
 882 00f2 7B4A     		ldr	r2, .L78+12
 883 00f4 1344     		add	r3, r3, r2
 884 00f6 0A46     		mov	r2, r1
 885 00f8 DA71     		strb	r2, [r3, #7]
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 886              		.loc 1 324 0 discriminator 3
 887 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 888 00fc 0133     		adds	r3, r3, #1
 889 00fe FB73     		strb	r3, [r7, #15]
 890              	.L52:
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 891              		.loc 1 324 0 is_stmt 0 discriminator 1
 892 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 893 0102 052B     		cmp	r3, #5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 23


 894 0104 ECD9     		bls	.L53
 895 0106 4BE0     		b	.L54
 896              	.L47:
 326:.\Protocolo.c **** 				}
 327:.\Protocolo.c **** 			}
 328:.\Protocolo.c **** 			else{
 329:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 897              		.loc 1 329 0 is_stmt 1
 898 0108 734B     		ldr	r3, .L78+4
 899 010a 5B7A     		ldrb	r3, [r3, #9]
 900 010c DBB2     		uxtb	r3, r3
 901 010e 03F00F03 		and	r3, r3, #15
 902 0112 DBB2     		uxtb	r3, r3
 903 0114 0133     		adds	r3, r3, #1
 904 0116 DAB2     		uxtb	r2, r3
 905 0118 724B     		ldr	r3, .L78+16
 906 011a 5A76     		strb	r2, [r3, #25]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 907              		.loc 1 330 0
 908 011c 0023     		movs	r3, #0
 909 011e FB73     		strb	r3, [r7, #15]
 910 0120 0FE0     		b	.L55
 911              	.L56:
 331:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 912              		.loc 1 331 0 discriminator 3
 913 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 914 0124 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 915 0126 0C32     		adds	r2, r2, #12
 916 0128 6B49     		ldr	r1, .L78+4
 917 012a 8A5C     		ldrb	r2, [r1, r2]
 918 012c D2B2     		uxtb	r2, r2
 919 012e 02F00F02 		and	r2, r2, #15
 920 0132 D1B2     		uxtb	r1, r2
 921 0134 6B4A     		ldr	r2, .L78+16
 922 0136 1344     		add	r3, r3, r2
 923 0138 0A46     		mov	r2, r1
 924 013a 9A70     		strb	r2, [r3, #2]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 925              		.loc 1 330 0 discriminator 3
 926 013c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 927 013e 0133     		adds	r3, r3, #1
 928 0140 FB73     		strb	r3, [r7, #15]
 929              	.L55:
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 930              		.loc 1 330 0 is_stmt 0 discriminator 1
 931 0142 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 932 0144 032B     		cmp	r3, #3
 933 0146 ECD9     		bls	.L56
 332:.\Protocolo.c **** 				}
 333:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 934              		.loc 1 333 0 is_stmt 1
 935 0148 0023     		movs	r3, #0
 936 014a FB73     		strb	r3, [r7, #15]
 937 014c 0FE0     		b	.L57
 938              	.L58:
 334:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 939              		.loc 1 334 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 24


 940 014e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 941 0150 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 942 0152 1132     		adds	r2, r2, #17
 943 0154 6049     		ldr	r1, .L78+4
 944 0156 8A5C     		ldrb	r2, [r1, r2]
 945 0158 D2B2     		uxtb	r2, r2
 946 015a 02F00F02 		and	r2, r2, #15
 947 015e D1B2     		uxtb	r1, r2
 948 0160 604A     		ldr	r2, .L78+16
 949 0162 1344     		add	r3, r3, r2
 950 0164 0A46     		mov	r2, r1
 951 0166 1A74     		strb	r2, [r3, #16]
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 952              		.loc 1 333 0 discriminator 3
 953 0168 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 954 016a 0133     		adds	r3, r3, #1
 955 016c FB73     		strb	r3, [r7, #15]
 956              	.L57:
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 957              		.loc 1 333 0 is_stmt 0 discriminator 1
 958 016e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 959 0170 052B     		cmp	r3, #5
 960 0172 ECD9     		bls	.L58
 335:.\Protocolo.c **** 				}			
 336:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 961              		.loc 1 336 0 is_stmt 1
 962 0174 0023     		movs	r3, #0
 963 0176 FB73     		strb	r3, [r7, #15]
 964 0178 0FE0     		b	.L59
 965              	.L60:
 337:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 966              		.loc 1 337 0 discriminator 3
 967 017a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 968 017c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 969 017e 1832     		adds	r2, r2, #24
 970 0180 5549     		ldr	r1, .L78+4
 971 0182 8A5C     		ldrb	r2, [r1, r2]
 972 0184 D2B2     		uxtb	r2, r2
 973 0186 02F00F02 		and	r2, r2, #15
 974 018a D1B2     		uxtb	r1, r2
 975 018c 554A     		ldr	r2, .L78+16
 976 018e 1344     		add	r3, r3, r2
 977 0190 0A46     		mov	r2, r1
 978 0192 DA71     		strb	r2, [r3, #7]
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 979              		.loc 1 336 0 discriminator 3
 980 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 981 0196 0133     		adds	r3, r3, #1
 982 0198 FB73     		strb	r3, [r7, #15]
 983              	.L59:
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 984              		.loc 1 336 0 is_stmt 0 discriminator 1
 985 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 986 019c 052B     		cmp	r3, #5
 987 019e ECD9     		bls	.L60
 988              	.L54:
 338:.\Protocolo.c **** 				}			
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 25


 339:.\Protocolo.c **** 			}
 340:.\Protocolo.c **** 			return 1;
 989              		.loc 1 340 0 is_stmt 1
 990 01a0 0123     		movs	r3, #1
 991 01a2 CFE0     		b	.L61
 992              	.L46:
 341:.\Protocolo.c **** 		}
 342:.\Protocolo.c **** 		else{
 343:.\Protocolo.c **** 			return 0;
 993              		.loc 1 343 0
 994 01a4 0023     		movs	r3, #0
 995 01a6 CDE0     		b	.L61
 996              	.L45:
 344:.\Protocolo.c **** 		}
 345:.\Protocolo.c **** 	}
 346:.\Protocolo.c **** 	else if((version[1]==7)&&(Surtidor_GetRxBufferSize()==39)){
 997              		.loc 1 346 0
 998 01a8 4A4B     		ldr	r3, .L78
 999 01aa 5B78     		ldrb	r3, [r3, #1]
 1000 01ac DBB2     		uxtb	r3, r3
 1001 01ae 072B     		cmp	r3, #7
 1002 01b0 40F0C780 		bne	.L62
 1003              		.loc 1 346 0 is_stmt 0 discriminator 1
 1004 01b4 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 1005 01b8 0346     		mov	r3, r0
 1006 01ba 272B     		cmp	r3, #39
 1007 01bc 40F0C180 		bne	.L62
 347:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[38]==0xF0)){
 1008              		.loc 1 347 0 is_stmt 1
 1009 01c0 454B     		ldr	r3, .L78+4
 1010 01c2 1B78     		ldrb	r3, [r3]
 1011 01c4 DBB2     		uxtb	r3, r3
 1012 01c6 FF2B     		cmp	r3, #255
 1013 01c8 40F0B980 		bne	.L63
 1014              		.loc 1 347 0 is_stmt 0 discriminator 1
 1015 01cc 424B     		ldr	r3, .L78+4
 1016 01ce 9B78     		ldrb	r3, [r3, #2]
 1017 01d0 DBB2     		uxtb	r3, r3
 1018 01d2 F82B     		cmp	r3, #248
 1019 01d4 40F0B380 		bne	.L63
 1020              		.loc 1 347 0 discriminator 2
 1021 01d8 3F4B     		ldr	r3, .L78+4
 1022 01da 93F82630 		ldrb	r3, [r3, #38]
 1023 01de DBB2     		uxtb	r3, r3
 1024 01e0 F02B     		cmp	r3, #240
 1025 01e2 40F0AC80 		bne	.L63
 348:.\Protocolo.c **** 			if(dir==lado1.dir){
 1026              		.loc 1 348 0 is_stmt 1
 1027 01e6 3D4B     		ldr	r3, .L78+8
 1028 01e8 1B78     		ldrb	r3, [r3]
 1029 01ea DBB2     		uxtb	r3, r3
 1030 01ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1031 01ee 9A42     		cmp	r2, r3
 1032 01f0 4CD1     		bne	.L64
 349:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1033              		.loc 1 349 0
 1034 01f2 394B     		ldr	r3, .L78+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 26


 1035 01f4 5B7A     		ldrb	r3, [r3, #9]
 1036 01f6 DBB2     		uxtb	r3, r3
 1037 01f8 03F00F03 		and	r3, r3, #15
 1038 01fc DBB2     		uxtb	r3, r3
 1039 01fe 0133     		adds	r3, r3, #1
 1040 0200 DAB2     		uxtb	r2, r3
 1041 0202 374B     		ldr	r3, .L78+12
 1042 0204 5A76     		strb	r2, [r3, #25]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1043              		.loc 1 350 0
 1044 0206 0023     		movs	r3, #0
 1045 0208 FB73     		strb	r3, [r7, #15]
 1046 020a 0FE0     		b	.L65
 1047              	.L66:
 351:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1048              		.loc 1 351 0 discriminator 3
 1049 020c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1050 020e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1051 0210 0C32     		adds	r2, r2, #12
 1052 0212 3149     		ldr	r1, .L78+4
 1053 0214 8A5C     		ldrb	r2, [r1, r2]
 1054 0216 D2B2     		uxtb	r2, r2
 1055 0218 02F00F02 		and	r2, r2, #15
 1056 021c D1B2     		uxtb	r1, r2
 1057 021e 304A     		ldr	r2, .L78+12
 1058 0220 1344     		add	r3, r3, r2
 1059 0222 0A46     		mov	r2, r1
 1060 0224 9A70     		strb	r2, [r3, #2]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1061              		.loc 1 350 0 discriminator 3
 1062 0226 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1063 0228 0133     		adds	r3, r3, #1
 1064 022a FB73     		strb	r3, [r7, #15]
 1065              	.L65:
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1066              		.loc 1 350 0 is_stmt 0 discriminator 1
 1067 022c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1068 022e 052B     		cmp	r3, #5
 1069 0230 ECD9     		bls	.L66
 352:.\Protocolo.c **** 				}
 353:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1070              		.loc 1 353 0 is_stmt 1
 1071 0232 0023     		movs	r3, #0
 1072 0234 FB73     		strb	r3, [r7, #15]
 1073 0236 0FE0     		b	.L67
 1074              	.L68:
 354:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1075              		.loc 1 354 0 discriminator 3
 1076 0238 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1077 023a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1078 023c 1332     		adds	r2, r2, #19
 1079 023e 2649     		ldr	r1, .L78+4
 1080 0240 8A5C     		ldrb	r2, [r1, r2]
 1081 0242 D2B2     		uxtb	r2, r2
 1082 0244 02F00F02 		and	r2, r2, #15
 1083 0248 D1B2     		uxtb	r1, r2
 1084 024a 254A     		ldr	r2, .L78+12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 27


 1085 024c 1344     		add	r3, r3, r2
 1086 024e 0A46     		mov	r2, r1
 1087 0250 1A74     		strb	r2, [r3, #16]
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1088              		.loc 1 353 0 discriminator 3
 1089 0252 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1090 0254 0133     		adds	r3, r3, #1
 1091 0256 FB73     		strb	r3, [r7, #15]
 1092              	.L67:
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1093              		.loc 1 353 0 is_stmt 0 discriminator 1
 1094 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1095 025a 072B     		cmp	r3, #7
 1096 025c ECD9     		bls	.L68
 355:.\Protocolo.c **** 				}			
 356:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1097              		.loc 1 356 0 is_stmt 1
 1098 025e 0023     		movs	r3, #0
 1099 0260 FB73     		strb	r3, [r7, #15]
 1100 0262 0FE0     		b	.L69
 1101              	.L70:
 357:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1102              		.loc 1 357 0 discriminator 3
 1103 0264 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1104 0266 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1105 0268 1C32     		adds	r2, r2, #28
 1106 026a 1B49     		ldr	r1, .L78+4
 1107 026c 8A5C     		ldrb	r2, [r1, r2]
 1108 026e D2B2     		uxtb	r2, r2
 1109 0270 02F00F02 		and	r2, r2, #15
 1110 0274 D1B2     		uxtb	r1, r2
 1111 0276 1A4A     		ldr	r2, .L78+12
 1112 0278 1344     		add	r3, r3, r2
 1113 027a 0A46     		mov	r2, r1
 1114 027c DA71     		strb	r2, [r3, #7]
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1115              		.loc 1 356 0 discriminator 3
 1116 027e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1117 0280 0133     		adds	r3, r3, #1
 1118 0282 FB73     		strb	r3, [r7, #15]
 1119              	.L69:
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1120              		.loc 1 356 0 is_stmt 0 discriminator 1
 1121 0284 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1122 0286 072B     		cmp	r3, #7
 1123 0288 ECD9     		bls	.L70
 1124 028a 56E0     		b	.L71
 1125              	.L64:
 358:.\Protocolo.c **** 				}
 359:.\Protocolo.c **** 			}
 360:.\Protocolo.c **** 			else{
 361:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1126              		.loc 1 361 0 is_stmt 1
 1127 028c 124B     		ldr	r3, .L78+4
 1128 028e 5B7A     		ldrb	r3, [r3, #9]
 1129 0290 DBB2     		uxtb	r3, r3
 1130 0292 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 28


 1131 0296 DBB2     		uxtb	r3, r3
 1132 0298 0133     		adds	r3, r3, #1
 1133 029a DAB2     		uxtb	r2, r3
 1134 029c 114B     		ldr	r3, .L78+16
 1135 029e 5A76     		strb	r2, [r3, #25]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1136              		.loc 1 362 0
 1137 02a0 0023     		movs	r3, #0
 1138 02a2 FB73     		strb	r3, [r7, #15]
 1139 02a4 0FE0     		b	.L72
 1140              	.L73:
 363:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1141              		.loc 1 363 0 discriminator 3
 1142 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1143 02a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1144 02aa 0C32     		adds	r2, r2, #12
 1145 02ac 0A49     		ldr	r1, .L78+4
 1146 02ae 8A5C     		ldrb	r2, [r1, r2]
 1147 02b0 D2B2     		uxtb	r2, r2
 1148 02b2 02F00F02 		and	r2, r2, #15
 1149 02b6 D1B2     		uxtb	r1, r2
 1150 02b8 0A4A     		ldr	r2, .L78+16
 1151 02ba 1344     		add	r3, r3, r2
 1152 02bc 0A46     		mov	r2, r1
 1153 02be 9A70     		strb	r2, [r3, #2]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1154              		.loc 1 362 0 discriminator 3
 1155 02c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1156 02c2 0133     		adds	r3, r3, #1
 1157 02c4 FB73     		strb	r3, [r7, #15]
 1158              	.L72:
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1159              		.loc 1 362 0 is_stmt 0 discriminator 1
 1160 02c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1161 02c8 052B     		cmp	r3, #5
 1162 02ca ECD9     		bls	.L73
 364:.\Protocolo.c **** 				}
 365:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1163              		.loc 1 365 0 is_stmt 1
 1164 02cc 0023     		movs	r3, #0
 1165 02ce FB73     		strb	r3, [r7, #15]
 1166 02d0 1AE0     		b	.L74
 1167              	.L79:
 1168 02d2 00BF     		.align	2
 1169              	.L78:
 1170 02d4 00000000 		.word	version
 1171 02d8 00000000 		.word	Surtidor_rxBuffer
 1172 02dc 00000000 		.word	lado1
 1173 02e0 00000000 		.word	rventa1
 1174 02e4 00000000 		.word	rventa2
 1175              	.L75:
 366:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1176              		.loc 1 366 0 discriminator 3
 1177 02e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1178 02ea FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1179 02ec 1332     		adds	r2, r2, #19
 1180 02ee 1749     		ldr	r1, .L80
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 29


 1181 02f0 8A5C     		ldrb	r2, [r1, r2]
 1182 02f2 D2B2     		uxtb	r2, r2
 1183 02f4 02F00F02 		and	r2, r2, #15
 1184 02f8 D1B2     		uxtb	r1, r2
 1185 02fa 154A     		ldr	r2, .L80+4
 1186 02fc 1344     		add	r3, r3, r2
 1187 02fe 0A46     		mov	r2, r1
 1188 0300 1A74     		strb	r2, [r3, #16]
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1189              		.loc 1 365 0 discriminator 3
 1190 0302 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1191 0304 0133     		adds	r3, r3, #1
 1192 0306 FB73     		strb	r3, [r7, #15]
 1193              	.L74:
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1194              		.loc 1 365 0 is_stmt 0 discriminator 1
 1195 0308 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1196 030a 072B     		cmp	r3, #7
 1197 030c ECD9     		bls	.L75
 367:.\Protocolo.c **** 				}			
 368:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1198              		.loc 1 368 0 is_stmt 1
 1199 030e 0023     		movs	r3, #0
 1200 0310 FB73     		strb	r3, [r7, #15]
 1201 0312 0FE0     		b	.L76
 1202              	.L77:
 369:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1203              		.loc 1 369 0 discriminator 3
 1204 0314 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1205 0316 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1206 0318 1C32     		adds	r2, r2, #28
 1207 031a 0C49     		ldr	r1, .L80
 1208 031c 8A5C     		ldrb	r2, [r1, r2]
 1209 031e D2B2     		uxtb	r2, r2
 1210 0320 02F00F02 		and	r2, r2, #15
 1211 0324 D1B2     		uxtb	r1, r2
 1212 0326 0A4A     		ldr	r2, .L80+4
 1213 0328 1344     		add	r3, r3, r2
 1214 032a 0A46     		mov	r2, r1
 1215 032c DA71     		strb	r2, [r3, #7]
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1216              		.loc 1 368 0 discriminator 3
 1217 032e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1218 0330 0133     		adds	r3, r3, #1
 1219 0332 FB73     		strb	r3, [r7, #15]
 1220              	.L76:
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1221              		.loc 1 368 0 is_stmt 0 discriminator 1
 1222 0334 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1223 0336 072B     		cmp	r3, #7
 1224 0338 ECD9     		bls	.L77
 1225              	.L71:
 370:.\Protocolo.c **** 				}			
 371:.\Protocolo.c **** 			}
 372:.\Protocolo.c **** 			return 1;
 1226              		.loc 1 372 0 is_stmt 1
 1227 033a 0123     		movs	r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 30


 1228 033c 02E0     		b	.L61
 1229              	.L63:
 373:.\Protocolo.c **** 		}
 374:.\Protocolo.c **** 		else{
 375:.\Protocolo.c **** 			return 0;
 1230              		.loc 1 375 0
 1231 033e 0023     		movs	r3, #0
 1232 0340 00E0     		b	.L61
 1233              	.L62:
 376:.\Protocolo.c **** 		}
 377:.\Protocolo.c **** 	}
 378:.\Protocolo.c **** 	return 0;
 1234              		.loc 1 378 0
 1235 0342 0023     		movs	r3, #0
 1236              	.L61:
 379:.\Protocolo.c **** }
 1237              		.loc 1 379 0
 1238 0344 1846     		mov	r0, r3
 1239 0346 1037     		adds	r7, r7, #16
 1240              		.cfi_def_cfa_offset 8
 1241 0348 BD46     		mov	sp, r7
 1242              		.cfi_def_cfa_register 13
 1243              		@ sp needed
 1244 034a 80BD     		pop	{r7, pc}
 1245              	.L81:
 1246              		.align	2
 1247              	.L80:
 1248 034c 00000000 		.word	Surtidor_rxBuffer
 1249 0350 00000000 		.word	rventa2
 1250              		.cfi_endproc
 1251              	.LFE69:
 1252              		.size	venta, .-venta
 1253              		.section	.text.programar,"ax",%progbits
 1254              		.align	2
 1255              		.global	programar
 1256              		.thumb
 1257              		.thumb_func
 1258              		.type	programar, %function
 1259              	programar:
 1260              	.LFB70:
 380:.\Protocolo.c **** 
 381:.\Protocolo.c **** /*
 382:.\Protocolo.c **** ***************************************************************************************************
 383:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 384:.\Protocolo.c **** *
 385:.\Protocolo.c **** * Description : 
 386:.\Protocolo.c **** *               
 387:.\Protocolo.c **** *
 388:.\Protocolo.c **** * Argument(s) : none
 389:.\Protocolo.c **** *
 390:.\Protocolo.c **** * Return(s)   : none
 391:.\Protocolo.c **** *
 392:.\Protocolo.c **** * Caller(s)   : 
 393:.\Protocolo.c **** *
 394:.\Protocolo.c **** * Note(s)     : none.
 395:.\Protocolo.c **** ***************************************************************************************************
 396:.\Protocolo.c **** */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 31


 397:.\Protocolo.c **** uint8 programar(uint8 dir, uint8 grado, uint8 *valor, uint8 preset){
 1261              		.loc 1 397 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 32
 1264              		@ frame_needed = 1, uses_anonymous_args = 0
 1265 0000 80B5     		push	{r7, lr}
 1266              		.cfi_def_cfa_offset 8
 1267              		.cfi_offset 7, -8
 1268              		.cfi_offset 14, -4
 1269 0002 88B0     		sub	sp, sp, #32
 1270              		.cfi_def_cfa_offset 40
 1271 0004 00AF     		add	r7, sp, #0
 1272              		.cfi_def_cfa_register 7
 1273 0006 3A60     		str	r2, [r7]
 1274 0008 1A46     		mov	r2, r3
 1275 000a 0346     		mov	r3, r0
 1276 000c FB71     		strb	r3, [r7, #7]
 1277 000e 0B46     		mov	r3, r1
 1278 0010 BB71     		strb	r3, [r7, #6]
 1279 0012 1346     		mov	r3, r2
 1280 0014 7B71     		strb	r3, [r7, #5]
 398:.\Protocolo.c **** 	uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,temp,i,decimal;
 1281              		.loc 1 398 0
 1282 0016 07F10803 		add	r3, r7, #8
 1283 001a 0022     		movs	r2, #0
 1284 001c 1A60     		str	r2, [r3]
 1285 001e 0433     		adds	r3, r3, #4
 1286 0020 0022     		movs	r2, #0
 1287 0022 1A60     		str	r2, [r3]
 1288 0024 0433     		adds	r3, r3, #4
 1289 0026 0022     		movs	r2, #0
 1290 0028 1A60     		str	r2, [r3]
 1291 002a 0433     		adds	r3, r3, #4
 1292 002c 0022     		movs	r2, #0
 1293 002e 1A60     		str	r2, [r3]
 1294 0030 0433     		adds	r3, r3, #4
 1295 0032 0022     		movs	r2, #0
 1296 0034 1A80     		strh	r2, [r3]	@ movhi
 1297 0036 0233     		adds	r3, r3, #2
 399:.\Protocolo.c **** 	temp=4;
 1298              		.loc 1 399 0
 1299 0038 0423     		movs	r3, #4
 1300 003a BB77     		strb	r3, [r7, #30]
 400:.\Protocolo.c **** 	if(preset==3){
 1301              		.loc 1 400 0
 1302 003c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1303 003e 032B     		cmp	r3, #3
 1304 0040 01D1     		bne	.L83
 401:.\Protocolo.c **** 		preset=2;
 1305              		.loc 1 401 0
 1306 0042 0223     		movs	r3, #2
 1307 0044 7B71     		strb	r3, [r7, #5]
 1308              	.L83:
 402:.\Protocolo.c **** 	}
 403:.\Protocolo.c **** 	if(((version[1]==5)||(version[1]==6))&&(preset==1)){
 1309              		.loc 1 403 0
 1310 0046 B34B     		ldr	r3, .L126
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 32


 1311 0048 5B78     		ldrb	r3, [r3, #1]
 1312 004a DBB2     		uxtb	r3, r3
 1313 004c 052B     		cmp	r3, #5
 1314 004e 04D0     		beq	.L84
 1315              		.loc 1 403 0 is_stmt 0 discriminator 2
 1316 0050 B04B     		ldr	r3, .L126
 1317 0052 5B78     		ldrb	r3, [r3, #1]
 1318 0054 DBB2     		uxtb	r3, r3
 1319 0056 062B     		cmp	r3, #6
 1320 0058 04D1     		bne	.L85
 1321              	.L84:
 1322              		.loc 1 403 0 discriminator 3
 1323 005a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1324 005c 012B     		cmp	r3, #1
 1325 005e 01D1     		bne	.L85
 404:.\Protocolo.c **** 		temp=3;
 1326              		.loc 1 404 0 is_stmt 1
 1327 0060 0323     		movs	r3, #3
 1328 0062 BB77     		strb	r3, [r7, #30]
 1329              	.L85:
 405:.\Protocolo.c **** 	}
 406:.\Protocolo.c **** 	if((version[1]==5)&&(preset==2)){
 1330              		.loc 1 406 0
 1331 0064 AB4B     		ldr	r3, .L126
 1332 0066 5B78     		ldrb	r3, [r3, #1]
 1333 0068 DBB2     		uxtb	r3, r3
 1334 006a 052B     		cmp	r3, #5
 1335 006c 04D1     		bne	.L86
 1336              		.loc 1 406 0 is_stmt 0 discriminator 1
 1337 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1338 0070 022B     		cmp	r3, #2
 1339 0072 01D1     		bne	.L86
 407:.\Protocolo.c **** 		temp=5;
 1340              		.loc 1 407 0 is_stmt 1
 1341 0074 0523     		movs	r3, #5
 1342 0076 BB77     		strb	r3, [r7, #30]
 1343              	.L86:
 408:.\Protocolo.c **** 	}
 409:.\Protocolo.c **** 	if((version[1]==7)&&(preset==1)){
 1344              		.loc 1 409 0
 1345 0078 A64B     		ldr	r3, .L126
 1346 007a 5B78     		ldrb	r3, [r3, #1]
 1347 007c DBB2     		uxtb	r3, r3
 1348 007e 072B     		cmp	r3, #7
 1349 0080 04D1     		bne	.L87
 1350              		.loc 1 409 0 is_stmt 0 discriminator 1
 1351 0082 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1352 0084 012B     		cmp	r3, #1
 1353 0086 01D1     		bne	.L87
 410:.\Protocolo.c **** 		temp=0;
 1354              		.loc 1 410 0 is_stmt 1
 1355 0088 0023     		movs	r3, #0
 1356 008a BB77     		strb	r3, [r7, #30]
 1357              	.L87:
 411:.\Protocolo.c **** 	}
 412:.\Protocolo.c **** 	if((version[1]==7)&&(preset==2)){
 1358              		.loc 1 412 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 33


 1359 008c A14B     		ldr	r3, .L126
 1360 008e 5B78     		ldrb	r3, [r3, #1]
 1361 0090 DBB2     		uxtb	r3, r3
 1362 0092 072B     		cmp	r3, #7
 1363 0094 04D1     		bne	.L88
 1364              		.loc 1 412 0 is_stmt 0 discriminator 1
 1365 0096 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1366 0098 022B     		cmp	r3, #2
 1367 009a 01D1     		bne	.L88
 413:.\Protocolo.c **** 		temp=2;
 1368              		.loc 1 413 0 is_stmt 1
 1369 009c 0223     		movs	r3, #2
 1370 009e BB77     		strb	r3, [r7, #30]
 1371              	.L88:
 414:.\Protocolo.c **** 	}	
 415:.\Protocolo.c **** 	decimal=0;
 1372              		.loc 1 415 0
 1373 00a0 0023     		movs	r3, #0
 1374 00a2 3B77     		strb	r3, [r7, #28]
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1375              		.loc 1 416 0
 1376 00a4 0123     		movs	r3, #1
 1377 00a6 7B77     		strb	r3, [r7, #29]
 1378 00a8 0AE0     		b	.L89
 1379              	.L91:
 417:.\Protocolo.c **** 		if(valor[i]==','){
 1380              		.loc 1 417 0
 1381 00aa 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1382 00ac 3A68     		ldr	r2, [r7]
 1383 00ae 1344     		add	r3, r3, r2
 1384 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1385 00b2 2C2B     		cmp	r3, #44
 1386 00b4 01D1     		bne	.L90
 418:.\Protocolo.c **** 			decimal=i;	
 1387              		.loc 1 418 0
 1388 00b6 7B7F     		ldrb	r3, [r7, #29]
 1389 00b8 3B77     		strb	r3, [r7, #28]
 1390              	.L90:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1391              		.loc 1 416 0 discriminator 2
 1392 00ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1393 00bc 0133     		adds	r3, r3, #1
 1394 00be 7B77     		strb	r3, [r7, #29]
 1395              	.L89:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1396              		.loc 1 416 0 is_stmt 0 discriminator 1
 1397 00c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1398 00c2 072B     		cmp	r3, #7
 1399 00c4 F1D9     		bls	.L91
 419:.\Protocolo.c **** 		}
 420:.\Protocolo.c **** 	}
 421:.\Protocolo.c **** 	if(decimal>4){
 1400              		.loc 1 421 0 is_stmt 1
 1401 00c6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1402 00c8 042B     		cmp	r3, #4
 1403 00ca 01D9     		bls	.L92
 422:.\Protocolo.c **** 		return 0;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 34


 1404              		.loc 1 422 0
 1405 00cc 0023     		movs	r3, #0
 1406 00ce CFE3     		b	.L125
 1407              	.L92:
 423:.\Protocolo.c **** 	}
 424:.\Protocolo.c **** 	if(version[1]!=7){		
 1408              		.loc 1 424 0
 1409 00d0 904B     		ldr	r3, .L126
 1410 00d2 5B78     		ldrb	r3, [r3, #1]
 1411 00d4 DBB2     		uxtb	r3, r3
 1412 00d6 072B     		cmp	r3, #7
 1413 00d8 00F00582 		beq	.L94
 425:.\Protocolo.c **** 		buffer[0]=0xFF;
 1414              		.loc 1 425 0
 1415 00dc FF23     		movs	r3, #255
 1416 00de 3B72     		strb	r3, [r7, #8]
 426:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1417              		.loc 1 426 0
 1418 00e0 BB7F     		ldrb	r3, [r7, #30]
 1419 00e2 63F01F03 		orn	r3, r3, #31
 1420 00e6 DBB2     		uxtb	r3, r3
 1421 00e8 7B72     		strb	r3, [r7, #9]
 427:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1422              		.loc 1 427 0
 1423 00ea 7B79     		ldrb	r3, [r7, #5]
 1424 00ec 63F00F03 		orn	r3, r3, #15
 1425 00f0 DBB2     		uxtb	r3, r3
 1426 00f2 BB72     		strb	r3, [r7, #10]
 428:.\Protocolo.c **** 		buffer[3]=0xF4;
 1427              		.loc 1 428 0
 1428 00f4 F423     		movs	r3, #244
 1429 00f6 FB72     		strb	r3, [r7, #11]
 429:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1430              		.loc 1 429 0
 1431 00f8 F823     		movs	r3, #248
 1432 00fa 3B73     		strb	r3, [r7, #12]
 430:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1433              		.loc 1 430 0
 1434 00fc 3B68     		ldr	r3, [r7]
 1435 00fe 0133     		adds	r3, r3, #1
 1436 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1437 0102 63F01F03 		orn	r3, r3, #31
 1438 0106 DBB2     		uxtb	r3, r3
 1439 0108 7B73     		strb	r3, [r7, #13]
 431:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1440              		.loc 1 431 0
 1441 010a 3B68     		ldr	r3, [r7]
 1442 010c 0233     		adds	r3, r3, #2
 1443 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1444 0110 63F01F03 		orn	r3, r3, #31
 1445 0114 DBB2     		uxtb	r3, r3
 1446 0116 BB73     		strb	r3, [r7, #14]
 432:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1447              		.loc 1 432 0
 1448 0118 3B68     		ldr	r3, [r7]
 1449 011a 0333     		adds	r3, r3, #3
 1450 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 35


 1451 011e 63F01F03 		orn	r3, r3, #31
 1452 0122 DBB2     		uxtb	r3, r3
 1453 0124 FB73     		strb	r3, [r7, #15]
 433:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1454              		.loc 1 433 0
 1455 0126 3B68     		ldr	r3, [r7]
 1456 0128 0433     		adds	r3, r3, #4
 1457 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 012c 63F01F03 		orn	r3, r3, #31
 1459 0130 DBB2     		uxtb	r3, r3
 1460 0132 3B74     		strb	r3, [r7, #16]
 434:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1461              		.loc 1 434 0
 1462 0134 3B68     		ldr	r3, [r7]
 1463 0136 0533     		adds	r3, r3, #5
 1464 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1465 013a 63F01F03 		orn	r3, r3, #31
 1466 013e DBB2     		uxtb	r3, r3
 1467 0140 7B74     		strb	r3, [r7, #17]
 435:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);
 1468              		.loc 1 435 0
 1469 0142 3B68     		ldr	r3, [r7]
 1470 0144 0633     		adds	r3, r3, #6
 1471 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1472 0148 63F01F03 		orn	r3, r3, #31
 1473 014c DBB2     		uxtb	r3, r3
 1474 014e BB74     		strb	r3, [r7, #18]
 436:.\Protocolo.c **** 		if(version[2]==2){
 1475              		.loc 1 436 0
 1476 0150 704B     		ldr	r3, .L126
 1477 0152 9B78     		ldrb	r3, [r3, #2]
 1478 0154 DBB2     		uxtb	r3, r3
 1479 0156 022B     		cmp	r3, #2
 1480 0158 40F0A580 		bne	.L95
 437:.\Protocolo.c **** 			if(decimal==4){
 1481              		.loc 1 437 0
 1482 015c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1483 015e 042B     		cmp	r3, #4
 1484 0160 29D1     		bne	.L96
 438:.\Protocolo.c **** 				buffer[5]=(valor[2]|0xE0);
 1485              		.loc 1 438 0
 1486 0162 3B68     		ldr	r3, [r7]
 1487 0164 0233     		adds	r3, r3, #2
 1488 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1489 0168 63F01F03 		orn	r3, r3, #31
 1490 016c DBB2     		uxtb	r3, r3
 1491 016e 7B73     		strb	r3, [r7, #13]
 439:.\Protocolo.c **** 				buffer[6]=(valor[3]|0xE0);
 1492              		.loc 1 439 0
 1493 0170 3B68     		ldr	r3, [r7]
 1494 0172 0333     		adds	r3, r3, #3
 1495 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1496 0176 63F01F03 		orn	r3, r3, #31
 1497 017a DBB2     		uxtb	r3, r3
 1498 017c BB73     		strb	r3, [r7, #14]
 440:.\Protocolo.c **** 				buffer[7]=(valor[5]|0xE0);
 1499              		.loc 1 440 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 36


 1500 017e 3B68     		ldr	r3, [r7]
 1501 0180 0533     		adds	r3, r3, #5
 1502 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1503 0184 63F01F03 		orn	r3, r3, #31
 1504 0188 DBB2     		uxtb	r3, r3
 1505 018a FB73     		strb	r3, [r7, #15]
 441:.\Protocolo.c **** 				buffer[8]=(valor[6]|0xE0);
 1506              		.loc 1 441 0
 1507 018c 3B68     		ldr	r3, [r7]
 1508 018e 0633     		adds	r3, r3, #6
 1509 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1510 0192 63F01F03 		orn	r3, r3, #31
 1511 0196 DBB2     		uxtb	r3, r3
 1512 0198 3B74     		strb	r3, [r7, #16]
 442:.\Protocolo.c **** 				buffer[9]=(valor[7]|0xE0);
 1513              		.loc 1 442 0
 1514 019a 3B68     		ldr	r3, [r7]
 1515 019c 0733     		adds	r3, r3, #7
 1516 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1517 01a0 63F01F03 		orn	r3, r3, #31
 1518 01a4 DBB2     		uxtb	r3, r3
 1519 01a6 7B74     		strb	r3, [r7, #17]
 443:.\Protocolo.c **** 				buffer[10]=(valor[8]|0xE0);
 1520              		.loc 1 443 0
 1521 01a8 3B68     		ldr	r3, [r7]
 1522 01aa 0833     		adds	r3, r3, #8
 1523 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1524 01ae 63F01F03 		orn	r3, r3, #31
 1525 01b2 DBB2     		uxtb	r3, r3
 1526 01b4 BB74     		strb	r3, [r7, #18]
 1527              	.L96:
 444:.\Protocolo.c **** 			}
 445:.\Protocolo.c **** 			if(decimal==3){
 1528              		.loc 1 445 0
 1529 01b6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1530 01b8 032B     		cmp	r3, #3
 1531 01ba 29D1     		bne	.L97
 446:.\Protocolo.c **** 				buffer[5]=(valor[1]|0xE0);
 1532              		.loc 1 446 0
 1533 01bc 3B68     		ldr	r3, [r7]
 1534 01be 0133     		adds	r3, r3, #1
 1535 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 01c2 63F01F03 		orn	r3, r3, #31
 1537 01c6 DBB2     		uxtb	r3, r3
 1538 01c8 7B73     		strb	r3, [r7, #13]
 447:.\Protocolo.c **** 				buffer[6]=(valor[2]|0xE0);
 1539              		.loc 1 447 0
 1540 01ca 3B68     		ldr	r3, [r7]
 1541 01cc 0233     		adds	r3, r3, #2
 1542 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1543 01d0 63F01F03 		orn	r3, r3, #31
 1544 01d4 DBB2     		uxtb	r3, r3
 1545 01d6 BB73     		strb	r3, [r7, #14]
 448:.\Protocolo.c **** 				buffer[7]=(valor[4]|0xE0);
 1546              		.loc 1 448 0
 1547 01d8 3B68     		ldr	r3, [r7]
 1548 01da 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 37


 1549 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1550 01de 63F01F03 		orn	r3, r3, #31
 1551 01e2 DBB2     		uxtb	r3, r3
 1552 01e4 FB73     		strb	r3, [r7, #15]
 449:.\Protocolo.c **** 				buffer[8]=(valor[5]|0xE0);
 1553              		.loc 1 449 0
 1554 01e6 3B68     		ldr	r3, [r7]
 1555 01e8 0533     		adds	r3, r3, #5
 1556 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 01ec 63F01F03 		orn	r3, r3, #31
 1558 01f0 DBB2     		uxtb	r3, r3
 1559 01f2 3B74     		strb	r3, [r7, #16]
 450:.\Protocolo.c **** 				buffer[9]=(valor[6]|0xE0);
 1560              		.loc 1 450 0
 1561 01f4 3B68     		ldr	r3, [r7]
 1562 01f6 0633     		adds	r3, r3, #6
 1563 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1564 01fa 63F01F03 		orn	r3, r3, #31
 1565 01fe DBB2     		uxtb	r3, r3
 1566 0200 7B74     		strb	r3, [r7, #17]
 451:.\Protocolo.c **** 				buffer[10]=(valor[7]|0xE0);
 1567              		.loc 1 451 0
 1568 0202 3B68     		ldr	r3, [r7]
 1569 0204 0733     		adds	r3, r3, #7
 1570 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1571 0208 63F01F03 		orn	r3, r3, #31
 1572 020c DBB2     		uxtb	r3, r3
 1573 020e BB74     		strb	r3, [r7, #18]
 1574              	.L97:
 452:.\Protocolo.c **** 			}
 453:.\Protocolo.c **** 			if(decimal==2){
 1575              		.loc 1 453 0
 1576 0210 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1577 0212 022B     		cmp	r3, #2
 1578 0214 24D1     		bne	.L98
 454:.\Protocolo.c **** 				buffer[5]=0xE0;
 1579              		.loc 1 454 0
 1580 0216 E023     		movs	r3, #224
 1581 0218 7B73     		strb	r3, [r7, #13]
 455:.\Protocolo.c **** 				buffer[6]=(valor[1]|0xE0);
 1582              		.loc 1 455 0
 1583 021a 3B68     		ldr	r3, [r7]
 1584 021c 0133     		adds	r3, r3, #1
 1585 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1586 0220 63F01F03 		orn	r3, r3, #31
 1587 0224 DBB2     		uxtb	r3, r3
 1588 0226 BB73     		strb	r3, [r7, #14]
 456:.\Protocolo.c **** 				buffer[7]=(valor[3]|0xE0);
 1589              		.loc 1 456 0
 1590 0228 3B68     		ldr	r3, [r7]
 1591 022a 0333     		adds	r3, r3, #3
 1592 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1593 022e 63F01F03 		orn	r3, r3, #31
 1594 0232 DBB2     		uxtb	r3, r3
 1595 0234 FB73     		strb	r3, [r7, #15]
 457:.\Protocolo.c **** 				buffer[8]=(valor[4]|0xE0);
 1596              		.loc 1 457 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 38


 1597 0236 3B68     		ldr	r3, [r7]
 1598 0238 0433     		adds	r3, r3, #4
 1599 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1600 023c 63F01F03 		orn	r3, r3, #31
 1601 0240 DBB2     		uxtb	r3, r3
 1602 0242 3B74     		strb	r3, [r7, #16]
 458:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);	
 1603              		.loc 1 458 0
 1604 0244 3B68     		ldr	r3, [r7]
 1605 0246 0533     		adds	r3, r3, #5
 1606 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1607 024a 63F01F03 		orn	r3, r3, #31
 1608 024e DBB2     		uxtb	r3, r3
 1609 0250 7B74     		strb	r3, [r7, #17]
 459:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1610              		.loc 1 459 0
 1611 0252 3B68     		ldr	r3, [r7]
 1612 0254 0633     		adds	r3, r3, #6
 1613 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1614 0258 63F01F03 		orn	r3, r3, #31
 1615 025c DBB2     		uxtb	r3, r3
 1616 025e BB74     		strb	r3, [r7, #18]
 1617              	.L98:
 460:.\Protocolo.c **** 			}
 461:.\Protocolo.c **** 			if(decimal==0){
 1618              		.loc 1 461 0
 1619 0260 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1620 0262 002B     		cmp	r3, #0
 1621 0264 1FD1     		bne	.L95
 462:.\Protocolo.c **** 				buffer[5]=0xE0;
 1622              		.loc 1 462 0
 1623 0266 E023     		movs	r3, #224
 1624 0268 7B73     		strb	r3, [r7, #13]
 463:.\Protocolo.c **** 				buffer[6]=0xE0;
 1625              		.loc 1 463 0
 1626 026a E023     		movs	r3, #224
 1627 026c BB73     		strb	r3, [r7, #14]
 464:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1628              		.loc 1 464 0
 1629 026e 3B68     		ldr	r3, [r7]
 1630 0270 0133     		adds	r3, r3, #1
 1631 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1632 0274 63F01F03 		orn	r3, r3, #31
 1633 0278 DBB2     		uxtb	r3, r3
 1634 027a FB73     		strb	r3, [r7, #15]
 465:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1635              		.loc 1 465 0
 1636 027c 3B68     		ldr	r3, [r7]
 1637 027e 0233     		adds	r3, r3, #2
 1638 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1639 0282 63F01F03 		orn	r3, r3, #31
 1640 0286 DBB2     		uxtb	r3, r3
 1641 0288 3B74     		strb	r3, [r7, #16]
 466:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1642              		.loc 1 466 0
 1643 028a 3B68     		ldr	r3, [r7]
 1644 028c 0333     		adds	r3, r3, #3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 39


 1645 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1646 0290 63F01F03 		orn	r3, r3, #31
 1647 0294 DBB2     		uxtb	r3, r3
 1648 0296 7B74     		strb	r3, [r7, #17]
 467:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1649              		.loc 1 467 0
 1650 0298 3B68     		ldr	r3, [r7]
 1651 029a 0433     		adds	r3, r3, #4
 1652 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1653 029e 63F01F03 		orn	r3, r3, #31
 1654 02a2 DBB2     		uxtb	r3, r3
 1655 02a4 BB74     		strb	r3, [r7, #18]
 1656              	.L95:
 468:.\Protocolo.c **** 			}			
 469:.\Protocolo.c **** 		}
 470:.\Protocolo.c **** 		buffer[11]=0xFB;
 1657              		.loc 1 470 0
 1658 02a6 FB23     		movs	r3, #251
 1659 02a8 FB74     		strb	r3, [r7, #19]
 471:.\Protocolo.c **** 		buffer[12]=0;
 1660              		.loc 1 471 0
 1661 02aa 0023     		movs	r3, #0
 1662 02ac 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1663              		.loc 1 472 0
 1664 02ae 0023     		movs	r3, #0
 1665 02b0 7B77     		strb	r3, [r7, #29]
 1666 02b2 0FE0     		b	.L99
 1667              	.L100:
 473:.\Protocolo.c **** 			buffer[12]+=(buffer[i]&0x0F);	
 1668              		.loc 1 473 0 discriminator 3
 1669 02b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1670 02b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1671 02b8 07F12001 		add	r1, r7, #32
 1672 02bc 0B44     		add	r3, r3, r1
 1673 02be 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1674 02c2 03F00F03 		and	r3, r3, #15
 1675 02c6 DBB2     		uxtb	r3, r3
 1676 02c8 1344     		add	r3, r3, r2
 1677 02ca DBB2     		uxtb	r3, r3
 1678 02cc 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1679              		.loc 1 472 0 discriminator 3
 1680 02ce 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1681 02d0 0133     		adds	r3, r3, #1
 1682 02d2 7B77     		strb	r3, [r7, #29]
 1683              	.L99:
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1684              		.loc 1 472 0 is_stmt 0 discriminator 1
 1685 02d4 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1686 02d6 0B2B     		cmp	r3, #11
 1687 02d8 ECD9     		bls	.L100
 474:.\Protocolo.c **** 		}
 475:.\Protocolo.c **** 		buffer[12]=(((~buffer[12])+1)&0x0F)|0xE0;
 1688              		.loc 1 475 0 is_stmt 1
 1689 02da 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1690 02dc 5B42     		negs	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 40


 1691 02de DBB2     		uxtb	r3, r3
 1692 02e0 DBB2     		uxtb	r3, r3
 1693 02e2 03F00F03 		and	r3, r3, #15
 1694 02e6 DBB2     		uxtb	r3, r3
 1695 02e8 63F01F03 		orn	r3, r3, #31
 1696 02ec DBB2     		uxtb	r3, r3
 1697 02ee DBB2     		uxtb	r3, r3
 1698 02f0 3B75     		strb	r3, [r7, #20]
 476:.\Protocolo.c **** 		buffer[13]=0xF0;
 1699              		.loc 1 476 0
 1700 02f2 F023     		movs	r3, #240
 1701 02f4 7B75     		strb	r3, [r7, #21]
 477:.\Protocolo.c **** 		size=13;
 1702              		.loc 1 477 0
 1703 02f6 0D23     		movs	r3, #13
 1704 02f8 FB77     		strb	r3, [r7, #31]
 478:.\Protocolo.c **** 		if(version[1]==5){
 1705              		.loc 1 478 0
 1706 02fa 064B     		ldr	r3, .L126
 1707 02fc 5B78     		ldrb	r3, [r3, #1]
 1708 02fe DBB2     		uxtb	r3, r3
 1709 0300 052B     		cmp	r3, #5
 1710 0302 2CD1     		bne	.L101
 479:.\Protocolo.c **** 			buffer[10]=0xFB;
 1711              		.loc 1 479 0
 1712 0304 FB23     		movs	r3, #251
 1713 0306 BB74     		strb	r3, [r7, #18]
 480:.\Protocolo.c **** 			buffer[11]=0;
 1714              		.loc 1 480 0
 1715 0308 0023     		movs	r3, #0
 1716 030a FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1717              		.loc 1 481 0
 1718 030c 0023     		movs	r3, #0
 1719 030e 7B77     		strb	r3, [r7, #29]
 1720 0310 12E0     		b	.L102
 1721              	.L127:
 1722 0312 00BF     		.align	2
 1723              	.L126:
 1724 0314 00000000 		.word	version
 1725              	.L103:
 482:.\Protocolo.c **** 				buffer[11]+=(buffer[i]&0x0F);	
 1726              		.loc 1 482 0 discriminator 3
 1727 0318 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 1728 031a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1729 031c 07F12001 		add	r1, r7, #32
 1730 0320 0B44     		add	r3, r3, r1
 1731 0322 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1732 0326 03F00F03 		and	r3, r3, #15
 1733 032a DBB2     		uxtb	r3, r3
 1734 032c 1344     		add	r3, r3, r2
 1735 032e DBB2     		uxtb	r3, r3
 1736 0330 FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1737              		.loc 1 481 0 discriminator 3
 1738 0332 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1739 0334 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 41


 1740 0336 7B77     		strb	r3, [r7, #29]
 1741              	.L102:
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1742              		.loc 1 481 0 is_stmt 0 discriminator 1
 1743 0338 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1744 033a 0A2B     		cmp	r3, #10
 1745 033c ECD9     		bls	.L103
 483:.\Protocolo.c **** 			}
 484:.\Protocolo.c **** 			buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 1746              		.loc 1 484 0 is_stmt 1
 1747 033e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1748 0340 5B42     		negs	r3, r3
 1749 0342 DBB2     		uxtb	r3, r3
 1750 0344 DBB2     		uxtb	r3, r3
 1751 0346 03F00F03 		and	r3, r3, #15
 1752 034a DBB2     		uxtb	r3, r3
 1753 034c 63F01F03 		orn	r3, r3, #31
 1754 0350 DBB2     		uxtb	r3, r3
 1755 0352 DBB2     		uxtb	r3, r3
 1756 0354 FB74     		strb	r3, [r7, #19]
 485:.\Protocolo.c **** 			buffer[12]=0xF0;
 1757              		.loc 1 485 0
 1758 0356 F023     		movs	r3, #240
 1759 0358 3B75     		strb	r3, [r7, #20]
 486:.\Protocolo.c **** 			size=12;		
 1760              		.loc 1 486 0
 1761 035a 0C23     		movs	r3, #12
 1762 035c FB77     		strb	r3, [r7, #31]
 1763              	.L101:
 487:.\Protocolo.c **** 		}
 488:.\Protocolo.c **** 		if(preset==1){
 1764              		.loc 1 488 0
 1765 035e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1766 0360 012B     		cmp	r3, #1
 1767 0362 40F0C080 		bne	.L94
 489:.\Protocolo.c **** 			buffer[4]=0xF6;
 1768              		.loc 1 489 0
 1769 0366 F623     		movs	r3, #246
 1770 0368 3B73     		strb	r3, [r7, #12]
 490:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 1771              		.loc 1 490 0
 1772 036a BB79     		ldrb	r3, [r7, #6]
 1773 036c 013B     		subs	r3, r3, #1
 1774 036e DBB2     		uxtb	r3, r3
 1775 0370 DBB2     		uxtb	r3, r3
 1776 0372 63F01F03 		orn	r3, r3, #31
 1777 0376 DBB2     		uxtb	r3, r3
 1778 0378 DBB2     		uxtb	r3, r3
 1779 037a 7B73     		strb	r3, [r7, #13]
 491:.\Protocolo.c **** 			buffer[6]=0xF8;
 1780              		.loc 1 491 0
 1781 037c F823     		movs	r3, #248
 1782 037e BB73     		strb	r3, [r7, #14]
 492:.\Protocolo.c **** 			if(decimal==4){
 1783              		.loc 1 492 0
 1784 0380 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1785 0382 042B     		cmp	r3, #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 42


 1786 0384 22D1     		bne	.L104
 493:.\Protocolo.c **** 				buffer[7]=(valor[2]|0xE0);
 1787              		.loc 1 493 0
 1788 0386 3B68     		ldr	r3, [r7]
 1789 0388 0233     		adds	r3, r3, #2
 1790 038a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1791 038c 63F01F03 		orn	r3, r3, #31
 1792 0390 DBB2     		uxtb	r3, r3
 1793 0392 FB73     		strb	r3, [r7, #15]
 494:.\Protocolo.c **** 				buffer[8]=(valor[3]|0xE0);
 1794              		.loc 1 494 0
 1795 0394 3B68     		ldr	r3, [r7]
 1796 0396 0333     		adds	r3, r3, #3
 1797 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1798 039a 63F01F03 		orn	r3, r3, #31
 1799 039e DBB2     		uxtb	r3, r3
 1800 03a0 3B74     		strb	r3, [r7, #16]
 495:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);
 1801              		.loc 1 495 0
 1802 03a2 3B68     		ldr	r3, [r7]
 1803 03a4 0533     		adds	r3, r3, #5
 1804 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1805 03a8 63F01F03 		orn	r3, r3, #31
 1806 03ac DBB2     		uxtb	r3, r3
 1807 03ae 7B74     		strb	r3, [r7, #17]
 496:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1808              		.loc 1 496 0
 1809 03b0 3B68     		ldr	r3, [r7]
 1810 03b2 0633     		adds	r3, r3, #6
 1811 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1812 03b6 63F01F03 		orn	r3, r3, #31
 1813 03ba DBB2     		uxtb	r3, r3
 1814 03bc BB74     		strb	r3, [r7, #18]
 497:.\Protocolo.c **** 				buffer[11]=(valor[7]|0xE0);
 1815              		.loc 1 497 0
 1816 03be 3B68     		ldr	r3, [r7]
 1817 03c0 0733     		adds	r3, r3, #7
 1818 03c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1819 03c4 63F01F03 		orn	r3, r3, #31
 1820 03c8 DBB2     		uxtb	r3, r3
 1821 03ca FB74     		strb	r3, [r7, #19]
 1822              	.L104:
 498:.\Protocolo.c **** 			}
 499:.\Protocolo.c **** 			if(decimal==3){
 1823              		.loc 1 499 0
 1824 03cc 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1825 03ce 032B     		cmp	r3, #3
 1826 03d0 22D1     		bne	.L105
 500:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1827              		.loc 1 500 0
 1828 03d2 3B68     		ldr	r3, [r7]
 1829 03d4 0133     		adds	r3, r3, #1
 1830 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1831 03d8 63F01F03 		orn	r3, r3, #31
 1832 03dc DBB2     		uxtb	r3, r3
 1833 03de FB73     		strb	r3, [r7, #15]
 501:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 43


 1834              		.loc 1 501 0
 1835 03e0 3B68     		ldr	r3, [r7]
 1836 03e2 0233     		adds	r3, r3, #2
 1837 03e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1838 03e6 63F01F03 		orn	r3, r3, #31
 1839 03ea DBB2     		uxtb	r3, r3
 1840 03ec 3B74     		strb	r3, [r7, #16]
 502:.\Protocolo.c **** 				buffer[9]=(valor[4]|0xE0);
 1841              		.loc 1 502 0
 1842 03ee 3B68     		ldr	r3, [r7]
 1843 03f0 0433     		adds	r3, r3, #4
 1844 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1845 03f4 63F01F03 		orn	r3, r3, #31
 1846 03f8 DBB2     		uxtb	r3, r3
 1847 03fa 7B74     		strb	r3, [r7, #17]
 503:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 1848              		.loc 1 503 0
 1849 03fc 3B68     		ldr	r3, [r7]
 1850 03fe 0533     		adds	r3, r3, #5
 1851 0400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1852 0402 63F01F03 		orn	r3, r3, #31
 1853 0406 DBB2     		uxtb	r3, r3
 1854 0408 BB74     		strb	r3, [r7, #18]
 504:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);		
 1855              		.loc 1 504 0
 1856 040a 3B68     		ldr	r3, [r7]
 1857 040c 0633     		adds	r3, r3, #6
 1858 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1859 0410 63F01F03 		orn	r3, r3, #31
 1860 0414 DBB2     		uxtb	r3, r3
 1861 0416 FB74     		strb	r3, [r7, #19]
 1862              	.L105:
 505:.\Protocolo.c **** 			}
 506:.\Protocolo.c **** 			if(decimal==2){
 1863              		.loc 1 506 0
 1864 0418 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1865 041a 022B     		cmp	r3, #2
 1866 041c 1DD1     		bne	.L106
 507:.\Protocolo.c **** 				buffer[7]=0xE0;
 1867              		.loc 1 507 0
 1868 041e E023     		movs	r3, #224
 1869 0420 FB73     		strb	r3, [r7, #15]
 508:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 1870              		.loc 1 508 0
 1871 0422 3B68     		ldr	r3, [r7]
 1872 0424 0133     		adds	r3, r3, #1
 1873 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1874 0428 63F01F03 		orn	r3, r3, #31
 1875 042c DBB2     		uxtb	r3, r3
 1876 042e 3B74     		strb	r3, [r7, #16]
 509:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1877              		.loc 1 509 0
 1878 0430 3B68     		ldr	r3, [r7]
 1879 0432 0333     		adds	r3, r3, #3
 1880 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1881 0436 63F01F03 		orn	r3, r3, #31
 1882 043a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 44


 1883 043c 7B74     		strb	r3, [r7, #17]
 510:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1884              		.loc 1 510 0
 1885 043e 3B68     		ldr	r3, [r7]
 1886 0440 0433     		adds	r3, r3, #4
 1887 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1888 0444 63F01F03 		orn	r3, r3, #31
 1889 0448 DBB2     		uxtb	r3, r3
 1890 044a BB74     		strb	r3, [r7, #18]
 511:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);		
 1891              		.loc 1 511 0
 1892 044c 3B68     		ldr	r3, [r7]
 1893 044e 0533     		adds	r3, r3, #5
 1894 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1895 0452 63F01F03 		orn	r3, r3, #31
 1896 0456 DBB2     		uxtb	r3, r3
 1897 0458 FB74     		strb	r3, [r7, #19]
 1898              	.L106:
 512:.\Protocolo.c **** 			}
 513:.\Protocolo.c **** 			if(decimal==0){
 1899              		.loc 1 513 0
 1900 045a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1901 045c 002B     		cmp	r3, #0
 1902 045e 18D1     		bne	.L107
 514:.\Protocolo.c **** 				buffer[7]=0xE0;
 1903              		.loc 1 514 0
 1904 0460 E023     		movs	r3, #224
 1905 0462 FB73     		strb	r3, [r7, #15]
 515:.\Protocolo.c **** 				buffer[8]=0xE0;
 1906              		.loc 1 515 0
 1907 0464 E023     		movs	r3, #224
 1908 0466 3B74     		strb	r3, [r7, #16]
 516:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 1909              		.loc 1 516 0
 1910 0468 3B68     		ldr	r3, [r7]
 1911 046a 0133     		adds	r3, r3, #1
 1912 046c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1913 046e 63F01F03 		orn	r3, r3, #31
 1914 0472 DBB2     		uxtb	r3, r3
 1915 0474 7B74     		strb	r3, [r7, #17]
 517:.\Protocolo.c **** 				buffer[10]=(valor[2]|0xE0);
 1916              		.loc 1 517 0
 1917 0476 3B68     		ldr	r3, [r7]
 1918 0478 0233     		adds	r3, r3, #2
 1919 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1920 047c 63F01F03 		orn	r3, r3, #31
 1921 0480 DBB2     		uxtb	r3, r3
 1922 0482 BB74     		strb	r3, [r7, #18]
 518:.\Protocolo.c **** 				buffer[11]=(valor[3]|0xE0);		
 1923              		.loc 1 518 0
 1924 0484 3B68     		ldr	r3, [r7]
 1925 0486 0333     		adds	r3, r3, #3
 1926 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1927 048a 63F01F03 		orn	r3, r3, #31
 1928 048e DBB2     		uxtb	r3, r3
 1929 0490 FB74     		strb	r3, [r7, #19]
 1930              	.L107:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 45


 519:.\Protocolo.c **** 			}			
 520:.\Protocolo.c **** 			buffer[12]=0xFB;
 1931              		.loc 1 520 0
 1932 0492 FB23     		movs	r3, #251
 1933 0494 3B75     		strb	r3, [r7, #20]
 521:.\Protocolo.c **** 			buffer[13]=0;
 1934              		.loc 1 521 0
 1935 0496 0023     		movs	r3, #0
 1936 0498 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1937              		.loc 1 522 0
 1938 049a 0023     		movs	r3, #0
 1939 049c 7B77     		strb	r3, [r7, #29]
 1940 049e 0FE0     		b	.L108
 1941              	.L109:
 523:.\Protocolo.c **** 				buffer[13]+=(buffer[i]&0x0F);	
 1942              		.loc 1 523 0 discriminator 3
 1943 04a0 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1944 04a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1945 04a4 07F12001 		add	r1, r7, #32
 1946 04a8 0B44     		add	r3, r3, r1
 1947 04aa 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1948 04ae 03F00F03 		and	r3, r3, #15
 1949 04b2 DBB2     		uxtb	r3, r3
 1950 04b4 1344     		add	r3, r3, r2
 1951 04b6 DBB2     		uxtb	r3, r3
 1952 04b8 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1953              		.loc 1 522 0 discriminator 3
 1954 04ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1955 04bc 0133     		adds	r3, r3, #1
 1956 04be 7B77     		strb	r3, [r7, #29]
 1957              	.L108:
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1958              		.loc 1 522 0 is_stmt 0 discriminator 1
 1959 04c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1960 04c2 0C2B     		cmp	r3, #12
 1961 04c4 ECD9     		bls	.L109
 524:.\Protocolo.c **** 			}
 525:.\Protocolo.c **** 			buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;			
 1962              		.loc 1 525 0 is_stmt 1
 1963 04c6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1964 04c8 5B42     		negs	r3, r3
 1965 04ca DBB2     		uxtb	r3, r3
 1966 04cc DBB2     		uxtb	r3, r3
 1967 04ce 03F00F03 		and	r3, r3, #15
 1968 04d2 DBB2     		uxtb	r3, r3
 1969 04d4 63F01F03 		orn	r3, r3, #31
 1970 04d8 DBB2     		uxtb	r3, r3
 1971 04da DBB2     		uxtb	r3, r3
 1972 04dc 7B75     		strb	r3, [r7, #21]
 526:.\Protocolo.c **** 			buffer[14]=0xF0;
 1973              		.loc 1 526 0
 1974 04de F023     		movs	r3, #240
 1975 04e0 BB75     		strb	r3, [r7, #22]
 527:.\Protocolo.c **** 			size=14;
 1976              		.loc 1 527 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 46


 1977 04e2 0E23     		movs	r3, #14
 1978 04e4 FB77     		strb	r3, [r7, #31]
 1979              	.L94:
 528:.\Protocolo.c **** 		}	
 529:.\Protocolo.c **** 	}	
 530:.\Protocolo.c **** 	if(version[1]==7){
 1980              		.loc 1 530 0
 1981 04e6 A24B     		ldr	r3, .L128
 1982 04e8 5B78     		ldrb	r3, [r3, #1]
 1983 04ea DBB2     		uxtb	r3, r3
 1984 04ec 072B     		cmp	r3, #7
 1985 04ee 40F06481 		bne	.L110
 531:.\Protocolo.c **** 		buffer[0]=0xFF;
 1986              		.loc 1 531 0
 1987 04f2 FF23     		movs	r3, #255
 1988 04f4 3B72     		strb	r3, [r7, #8]
 532:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1989              		.loc 1 532 0
 1990 04f6 BB7F     		ldrb	r3, [r7, #30]
 1991 04f8 63F01F03 		orn	r3, r3, #31
 1992 04fc DBB2     		uxtb	r3, r3
 1993 04fe 7B72     		strb	r3, [r7, #9]
 533:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1994              		.loc 1 533 0
 1995 0500 7B79     		ldrb	r3, [r7, #5]
 1996 0502 63F00F03 		orn	r3, r3, #15
 1997 0506 DBB2     		uxtb	r3, r3
 1998 0508 BB72     		strb	r3, [r7, #10]
 534:.\Protocolo.c **** 		buffer[3]=0xF4;
 1999              		.loc 1 534 0
 2000 050a F423     		movs	r3, #244
 2001 050c FB72     		strb	r3, [r7, #11]
 535:.\Protocolo.c **** 		buffer[4]=0xF8;	
 2002              		.loc 1 535 0
 2003 050e F823     		movs	r3, #248
 2004 0510 3B73     		strb	r3, [r7, #12]
 536:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 2005              		.loc 1 536 0
 2006 0512 3B68     		ldr	r3, [r7]
 2007 0514 0133     		adds	r3, r3, #1
 2008 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2009 0518 63F01F03 		orn	r3, r3, #31
 2010 051c DBB2     		uxtb	r3, r3
 2011 051e 7B73     		strb	r3, [r7, #13]
 537:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 2012              		.loc 1 537 0
 2013 0520 3B68     		ldr	r3, [r7]
 2014 0522 0233     		adds	r3, r3, #2
 2015 0524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2016 0526 63F01F03 		orn	r3, r3, #31
 2017 052a DBB2     		uxtb	r3, r3
 2018 052c BB73     		strb	r3, [r7, #14]
 538:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 2019              		.loc 1 538 0
 2020 052e 3B68     		ldr	r3, [r7]
 2021 0530 0333     		adds	r3, r3, #3
 2022 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 47


 2023 0534 63F01F03 		orn	r3, r3, #31
 2024 0538 DBB2     		uxtb	r3, r3
 2025 053a FB73     		strb	r3, [r7, #15]
 539:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 2026              		.loc 1 539 0
 2027 053c 3B68     		ldr	r3, [r7]
 2028 053e 0433     		adds	r3, r3, #4
 2029 0540 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2030 0542 63F01F03 		orn	r3, r3, #31
 2031 0546 DBB2     		uxtb	r3, r3
 2032 0548 3B74     		strb	r3, [r7, #16]
 540:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 2033              		.loc 1 540 0
 2034 054a 3B68     		ldr	r3, [r7]
 2035 054c 0533     		adds	r3, r3, #5
 2036 054e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2037 0550 63F01F03 		orn	r3, r3, #31
 2038 0554 DBB2     		uxtb	r3, r3
 2039 0556 7B74     		strb	r3, [r7, #17]
 541:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);	
 2040              		.loc 1 541 0
 2041 0558 3B68     		ldr	r3, [r7]
 2042 055a 0633     		adds	r3, r3, #6
 2043 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2044 055e 63F01F03 		orn	r3, r3, #31
 2045 0562 DBB2     		uxtb	r3, r3
 2046 0564 BB74     		strb	r3, [r7, #18]
 542:.\Protocolo.c **** 		buffer[11]=(valor[7]|0xE0);
 2047              		.loc 1 542 0
 2048 0566 3B68     		ldr	r3, [r7]
 2049 0568 0733     		adds	r3, r3, #7
 2050 056a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2051 056c 63F01F03 		orn	r3, r3, #31
 2052 0570 DBB2     		uxtb	r3, r3
 2053 0572 FB74     		strb	r3, [r7, #19]
 543:.\Protocolo.c **** 		buffer[12]=0xE0;
 2054              		.loc 1 543 0
 2055 0574 E023     		movs	r3, #224
 2056 0576 3B75     		strb	r3, [r7, #20]
 544:.\Protocolo.c **** 		buffer[13]=0xFB;
 2057              		.loc 1 544 0
 2058 0578 FB23     		movs	r3, #251
 2059 057a 7B75     		strb	r3, [r7, #21]
 545:.\Protocolo.c **** 		buffer[14]=0;
 2060              		.loc 1 545 0
 2061 057c 0023     		movs	r3, #0
 2062 057e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2063              		.loc 1 546 0
 2064 0580 0023     		movs	r3, #0
 2065 0582 7B77     		strb	r3, [r7, #29]
 2066 0584 0FE0     		b	.L111
 2067              	.L112:
 547:.\Protocolo.c **** 			buffer[14]+=(buffer[i]&0x0F);	
 2068              		.loc 1 547 0 discriminator 3
 2069 0586 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2070 0588 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 48


 2071 058a 07F12001 		add	r1, r7, #32
 2072 058e 0B44     		add	r3, r3, r1
 2073 0590 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2074 0594 03F00F03 		and	r3, r3, #15
 2075 0598 DBB2     		uxtb	r3, r3
 2076 059a 1344     		add	r3, r3, r2
 2077 059c DBB2     		uxtb	r3, r3
 2078 059e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2079              		.loc 1 546 0 discriminator 3
 2080 05a0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2081 05a2 0133     		adds	r3, r3, #1
 2082 05a4 7B77     		strb	r3, [r7, #29]
 2083              	.L111:
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2084              		.loc 1 546 0 is_stmt 0 discriminator 1
 2085 05a6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2086 05a8 0D2B     		cmp	r3, #13
 2087 05aa ECD9     		bls	.L112
 548:.\Protocolo.c **** 		}
 549:.\Protocolo.c **** 		buffer[14]=(((~buffer[14])+1)&0x0F)|0xE0;
 2088              		.loc 1 549 0 is_stmt 1
 2089 05ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2090 05ae 5B42     		negs	r3, r3
 2091 05b0 DBB2     		uxtb	r3, r3
 2092 05b2 DBB2     		uxtb	r3, r3
 2093 05b4 03F00F03 		and	r3, r3, #15
 2094 05b8 DBB2     		uxtb	r3, r3
 2095 05ba 63F01F03 		orn	r3, r3, #31
 2096 05be DBB2     		uxtb	r3, r3
 2097 05c0 DBB2     		uxtb	r3, r3
 2098 05c2 BB75     		strb	r3, [r7, #22]
 550:.\Protocolo.c **** 		buffer[15]=0xF0;
 2099              		.loc 1 550 0
 2100 05c4 F023     		movs	r3, #240
 2101 05c6 FB75     		strb	r3, [r7, #23]
 551:.\Protocolo.c **** 		size=15;
 2102              		.loc 1 551 0
 2103 05c8 0F23     		movs	r3, #15
 2104 05ca FB77     		strb	r3, [r7, #31]
 552:.\Protocolo.c **** 		if(preset==1){
 2105              		.loc 1 552 0
 2106 05cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2107 05ce 012B     		cmp	r3, #1
 2108 05d0 40F0F380 		bne	.L110
 553:.\Protocolo.c **** 			buffer[4]=0xF6;
 2109              		.loc 1 553 0
 2110 05d4 F623     		movs	r3, #246
 2111 05d6 3B73     		strb	r3, [r7, #12]
 554:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2112              		.loc 1 554 0
 2113 05d8 BB79     		ldrb	r3, [r7, #6]
 2114 05da 013B     		subs	r3, r3, #1
 2115 05dc DBB2     		uxtb	r3, r3
 2116 05de DBB2     		uxtb	r3, r3
 2117 05e0 63F01F03 		orn	r3, r3, #31
 2118 05e4 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 49


 2119 05e6 DBB2     		uxtb	r3, r3
 2120 05e8 7B73     		strb	r3, [r7, #13]
 555:.\Protocolo.c **** 			buffer[6]=0xF8;
 2121              		.loc 1 555 0
 2122 05ea F823     		movs	r3, #248
 2123 05ec BB73     		strb	r3, [r7, #14]
 556:.\Protocolo.c **** 			if(decimal==4){
 2124              		.loc 1 556 0
 2125 05ee 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2126 05f0 042B     		cmp	r3, #4
 2127 05f2 2DD1     		bne	.L113
 557:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2128              		.loc 1 557 0
 2129 05f4 3B68     		ldr	r3, [r7]
 2130 05f6 0133     		adds	r3, r3, #1
 2131 05f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2132 05fa 63F01F03 		orn	r3, r3, #31
 2133 05fe DBB2     		uxtb	r3, r3
 2134 0600 FB73     		strb	r3, [r7, #15]
 558:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2135              		.loc 1 558 0
 2136 0602 3B68     		ldr	r3, [r7]
 2137 0604 0233     		adds	r3, r3, #2
 2138 0606 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2139 0608 63F01F03 		orn	r3, r3, #31
 2140 060c DBB2     		uxtb	r3, r3
 2141 060e 3B74     		strb	r3, [r7, #16]
 559:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2142              		.loc 1 559 0
 2143 0610 3B68     		ldr	r3, [r7]
 2144 0612 0333     		adds	r3, r3, #3
 2145 0614 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2146 0616 63F01F03 		orn	r3, r3, #31
 2147 061a DBB2     		uxtb	r3, r3
 2148 061c 7B74     		strb	r3, [r7, #17]
 560:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2149              		.loc 1 560 0
 2150 061e 3B68     		ldr	r3, [r7]
 2151 0620 0533     		adds	r3, r3, #5
 2152 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2153 0624 63F01F03 		orn	r3, r3, #31
 2154 0628 DBB2     		uxtb	r3, r3
 2155 062a BB74     		strb	r3, [r7, #18]
 561:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);
 2156              		.loc 1 561 0
 2157 062c 3B68     		ldr	r3, [r7]
 2158 062e 0633     		adds	r3, r3, #6
 2159 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2160 0632 63F01F03 		orn	r3, r3, #31
 2161 0636 DBB2     		uxtb	r3, r3
 2162 0638 FB74     		strb	r3, [r7, #19]
 562:.\Protocolo.c **** 				buffer[12]=(valor[7]|0xE0);	
 2163              		.loc 1 562 0
 2164 063a 3B68     		ldr	r3, [r7]
 2165 063c 0733     		adds	r3, r3, #7
 2166 063e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2167 0640 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 50


 2168 0644 DBB2     		uxtb	r3, r3
 2169 0646 3B75     		strb	r3, [r7, #20]
 563:.\Protocolo.c **** 				buffer[13]=0xE0;	
 2170              		.loc 1 563 0
 2171 0648 E023     		movs	r3, #224
 2172 064a 7B75     		strb	r3, [r7, #21]
 564:.\Protocolo.c **** 				buffer[14]=0xE0;
 2173              		.loc 1 564 0
 2174 064c E023     		movs	r3, #224
 2175 064e BB75     		strb	r3, [r7, #22]
 2176              	.L113:
 565:.\Protocolo.c **** 			}
 566:.\Protocolo.c **** 			if(decimal==3){
 2177              		.loc 1 566 0
 2178 0650 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2179 0652 032B     		cmp	r3, #3
 2180 0654 2DD1     		bne	.L114
 567:.\Protocolo.c **** 				buffer[7]=0xE0;
 2181              		.loc 1 567 0
 2182 0656 E023     		movs	r3, #224
 2183 0658 FB73     		strb	r3, [r7, #15]
 568:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2184              		.loc 1 568 0
 2185 065a 3B68     		ldr	r3, [r7]
 2186 065c 0133     		adds	r3, r3, #1
 2187 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2188 0660 63F01F03 		orn	r3, r3, #31
 2189 0664 DBB2     		uxtb	r3, r3
 2190 0666 3B74     		strb	r3, [r7, #16]
 569:.\Protocolo.c **** 				buffer[9]=(valor[2]|0xE0);
 2191              		.loc 1 569 0
 2192 0668 3B68     		ldr	r3, [r7]
 2193 066a 0233     		adds	r3, r3, #2
 2194 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2195 066e 63F01F03 		orn	r3, r3, #31
 2196 0672 DBB2     		uxtb	r3, r3
 2197 0674 7B74     		strb	r3, [r7, #17]
 570:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2198              		.loc 1 570 0
 2199 0676 3B68     		ldr	r3, [r7]
 2200 0678 0433     		adds	r3, r3, #4
 2201 067a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2202 067c 63F01F03 		orn	r3, r3, #31
 2203 0680 DBB2     		uxtb	r3, r3
 2204 0682 BB74     		strb	r3, [r7, #18]
 571:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);
 2205              		.loc 1 571 0
 2206 0684 3B68     		ldr	r3, [r7]
 2207 0686 0533     		adds	r3, r3, #5
 2208 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 068a 63F01F03 		orn	r3, r3, #31
 2210 068e DBB2     		uxtb	r3, r3
 2211 0690 FB74     		strb	r3, [r7, #19]
 572:.\Protocolo.c **** 				buffer[12]=(valor[6]|0xE0);
 2212              		.loc 1 572 0
 2213 0692 3B68     		ldr	r3, [r7]
 2214 0694 0633     		adds	r3, r3, #6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 51


 2215 0696 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2216 0698 63F01F03 		orn	r3, r3, #31
 2217 069c DBB2     		uxtb	r3, r3
 2218 069e 3B75     		strb	r3, [r7, #20]
 573:.\Protocolo.c **** 				buffer[13]=(valor[7]|0xE0);	
 2219              		.loc 1 573 0
 2220 06a0 3B68     		ldr	r3, [r7]
 2221 06a2 0733     		adds	r3, r3, #7
 2222 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2223 06a6 63F01F03 		orn	r3, r3, #31
 2224 06aa DBB2     		uxtb	r3, r3
 2225 06ac 7B75     		strb	r3, [r7, #21]
 574:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2226              		.loc 1 574 0
 2227 06ae E023     		movs	r3, #224
 2228 06b0 BB75     		strb	r3, [r7, #22]
 2229              	.L114:
 575:.\Protocolo.c **** 			}
 576:.\Protocolo.c **** 			if(decimal==2){
 2230              		.loc 1 576 0
 2231 06b2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2232 06b4 022B     		cmp	r3, #2
 2233 06b6 2DD1     		bne	.L115
 577:.\Protocolo.c **** 				buffer[7]=0xE0;
 2234              		.loc 1 577 0
 2235 06b8 E023     		movs	r3, #224
 2236 06ba FB73     		strb	r3, [r7, #15]
 578:.\Protocolo.c **** 				buffer[8]=0xE0;
 2237              		.loc 1 578 0
 2238 06bc E023     		movs	r3, #224
 2239 06be 3B74     		strb	r3, [r7, #16]
 579:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2240              		.loc 1 579 0
 2241 06c0 3B68     		ldr	r3, [r7]
 2242 06c2 0133     		adds	r3, r3, #1
 2243 06c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2244 06c6 63F01F03 		orn	r3, r3, #31
 2245 06ca DBB2     		uxtb	r3, r3
 2246 06cc 7B74     		strb	r3, [r7, #17]
 580:.\Protocolo.c **** 				buffer[10]=(valor[3]|0xE0);
 2247              		.loc 1 580 0
 2248 06ce 3B68     		ldr	r3, [r7]
 2249 06d0 0333     		adds	r3, r3, #3
 2250 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2251 06d4 63F01F03 		orn	r3, r3, #31
 2252 06d8 DBB2     		uxtb	r3, r3
 2253 06da BB74     		strb	r3, [r7, #18]
 581:.\Protocolo.c **** 				buffer[11]=(valor[4]|0xE0);
 2254              		.loc 1 581 0
 2255 06dc 3B68     		ldr	r3, [r7]
 2256 06de 0433     		adds	r3, r3, #4
 2257 06e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2258 06e2 63F01F03 		orn	r3, r3, #31
 2259 06e6 DBB2     		uxtb	r3, r3
 2260 06e8 FB74     		strb	r3, [r7, #19]
 582:.\Protocolo.c **** 				buffer[12]=(valor[5]|0xE0);
 2261              		.loc 1 582 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 52


 2262 06ea 3B68     		ldr	r3, [r7]
 2263 06ec 0533     		adds	r3, r3, #5
 2264 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2265 06f0 63F01F03 		orn	r3, r3, #31
 2266 06f4 DBB2     		uxtb	r3, r3
 2267 06f6 3B75     		strb	r3, [r7, #20]
 583:.\Protocolo.c **** 				buffer[13]=(valor[6]|0xE0);	
 2268              		.loc 1 583 0
 2269 06f8 3B68     		ldr	r3, [r7]
 2270 06fa 0633     		adds	r3, r3, #6
 2271 06fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2272 06fe 63F01F03 		orn	r3, r3, #31
 2273 0702 DBB2     		uxtb	r3, r3
 2274 0704 7B75     		strb	r3, [r7, #21]
 584:.\Protocolo.c **** 				buffer[14]=(valor[7]|0xE0);	
 2275              		.loc 1 584 0
 2276 0706 3B68     		ldr	r3, [r7]
 2277 0708 0733     		adds	r3, r3, #7
 2278 070a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2279 070c 63F01F03 		orn	r3, r3, #31
 2280 0710 DBB2     		uxtb	r3, r3
 2281 0712 BB75     		strb	r3, [r7, #22]
 2282              	.L115:
 585:.\Protocolo.c **** 			}
 586:.\Protocolo.c **** 			if(decimal==0){
 2283              		.loc 1 586 0
 2284 0714 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2285 0716 002B     		cmp	r3, #0
 2286 0718 23D1     		bne	.L116
 587:.\Protocolo.c **** 				buffer[7]=0xE0;
 2287              		.loc 1 587 0
 2288 071a E023     		movs	r3, #224
 2289 071c FB73     		strb	r3, [r7, #15]
 588:.\Protocolo.c **** 				buffer[8]=0xE0;
 2290              		.loc 1 588 0
 2291 071e E023     		movs	r3, #224
 2292 0720 3B74     		strb	r3, [r7, #16]
 589:.\Protocolo.c **** 				buffer[9]=0xE0;
 2293              		.loc 1 589 0
 2294 0722 E023     		movs	r3, #224
 2295 0724 7B74     		strb	r3, [r7, #17]
 590:.\Protocolo.c **** 				buffer[10]=(valor[1]|0xE0);
 2296              		.loc 1 590 0
 2297 0726 3B68     		ldr	r3, [r7]
 2298 0728 0133     		adds	r3, r3, #1
 2299 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2300 072c 63F01F03 		orn	r3, r3, #31
 2301 0730 DBB2     		uxtb	r3, r3
 2302 0732 BB74     		strb	r3, [r7, #18]
 591:.\Protocolo.c **** 				buffer[11]=(valor[2]|0xE0);
 2303              		.loc 1 591 0
 2304 0734 3B68     		ldr	r3, [r7]
 2305 0736 0233     		adds	r3, r3, #2
 2306 0738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2307 073a 63F01F03 		orn	r3, r3, #31
 2308 073e DBB2     		uxtb	r3, r3
 2309 0740 FB74     		strb	r3, [r7, #19]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 53


 592:.\Protocolo.c **** 				buffer[12]=(valor[3]|0xE0);
 2310              		.loc 1 592 0
 2311 0742 3B68     		ldr	r3, [r7]
 2312 0744 0333     		adds	r3, r3, #3
 2313 0746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2314 0748 63F01F03 		orn	r3, r3, #31
 2315 074c DBB2     		uxtb	r3, r3
 2316 074e 3B75     		strb	r3, [r7, #20]
 593:.\Protocolo.c **** 				buffer[13]=(valor[4]|0xE0);	
 2317              		.loc 1 593 0
 2318 0750 3B68     		ldr	r3, [r7]
 2319 0752 0433     		adds	r3, r3, #4
 2320 0754 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2321 0756 63F01F03 		orn	r3, r3, #31
 2322 075a DBB2     		uxtb	r3, r3
 2323 075c 7B75     		strb	r3, [r7, #21]
 594:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2324              		.loc 1 594 0
 2325 075e E023     		movs	r3, #224
 2326 0760 BB75     		strb	r3, [r7, #22]
 2327              	.L116:
 595:.\Protocolo.c **** 			}			
 596:.\Protocolo.c **** 			buffer[15]=0xFB;
 2328              		.loc 1 596 0
 2329 0762 FB23     		movs	r3, #251
 2330 0764 FB75     		strb	r3, [r7, #23]
 597:.\Protocolo.c **** 			buffer[16]=0;
 2331              		.loc 1 597 0
 2332 0766 0023     		movs	r3, #0
 2333 0768 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2334              		.loc 1 598 0
 2335 076a 0023     		movs	r3, #0
 2336 076c 7B77     		strb	r3, [r7, #29]
 2337 076e 11E0     		b	.L117
 2338              	.L129:
 2339              		.align	2
 2340              	.L128:
 2341 0770 00000000 		.word	version
 2342              	.L118:
 599:.\Protocolo.c **** 				buffer[16]+=(buffer[i]&0x0F);	
 2343              		.loc 1 599 0 discriminator 3
 2344 0774 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 2345 0776 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2346 0778 07F12001 		add	r1, r7, #32
 2347 077c 0B44     		add	r3, r3, r1
 2348 077e 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2349 0782 03F00F03 		and	r3, r3, #15
 2350 0786 DBB2     		uxtb	r3, r3
 2351 0788 1344     		add	r3, r3, r2
 2352 078a DBB2     		uxtb	r3, r3
 2353 078c 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2354              		.loc 1 598 0 discriminator 3
 2355 078e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2356 0790 0133     		adds	r3, r3, #1
 2357 0792 7B77     		strb	r3, [r7, #29]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 54


 2358              	.L117:
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2359              		.loc 1 598 0 is_stmt 0 discriminator 1
 2360 0794 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2361 0796 0F2B     		cmp	r3, #15
 2362 0798 ECD9     		bls	.L118
 600:.\Protocolo.c **** 			}
 601:.\Protocolo.c **** 			buffer[16]=(((~buffer[16])+1)&0x0F)|0xE0;			
 2363              		.loc 1 601 0 is_stmt 1
 2364 079a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 2365 079c 5B42     		negs	r3, r3
 2366 079e DBB2     		uxtb	r3, r3
 2367 07a0 DBB2     		uxtb	r3, r3
 2368 07a2 03F00F03 		and	r3, r3, #15
 2369 07a6 DBB2     		uxtb	r3, r3
 2370 07a8 63F01F03 		orn	r3, r3, #31
 2371 07ac DBB2     		uxtb	r3, r3
 2372 07ae DBB2     		uxtb	r3, r3
 2373 07b0 3B76     		strb	r3, [r7, #24]
 602:.\Protocolo.c **** 			buffer[17]=0xF0;
 2374              		.loc 1 602 0
 2375 07b2 F023     		movs	r3, #240
 2376 07b4 7B76     		strb	r3, [r7, #25]
 603:.\Protocolo.c **** 			size=17;
 2377              		.loc 1 603 0
 2378 07b6 1123     		movs	r3, #17
 2379 07b8 FB77     		strb	r3, [r7, #31]
 2380              	.L110:
 604:.\Protocolo.c **** 		}		
 605:.\Protocolo.c **** 	}
 606:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2381              		.loc 1 606 0
 2382 07ba FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 607:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2383              		.loc 1 607 0
 2384 07be FB79     		ldrb	r3, [r7, #7]
 2385 07c0 43F02003 		orr	r3, r3, #32
 2386 07c4 DBB2     		uxtb	r3, r3
 2387 07c6 1846     		mov	r0, r3
 2388 07c8 FFF7FEFF 		bl	Surtidor_PutChar
 608:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2389              		.loc 1 608 0
 2390 07cc 2A48     		ldr	r0, .L130
 2391 07ce FFF7FEFF 		bl	isr_1_StartEx
 609:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2392              		.loc 1 609 0
 2393 07d2 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 610:.\Protocolo.c ****     rx_timeout=0;
 2394              		.loc 1 610 0
 2395 07d6 294B     		ldr	r3, .L130+4
 2396 07d8 0022     		movs	r2, #0
 2397 07da 1A70     		strb	r2, [r3]
 611:.\Protocolo.c ****     CyDelay(10);
 2398              		.loc 1 611 0
 2399 07dc 0A20     		movs	r0, #10
 2400 07de FFF7FEFF 		bl	CyDelay
 612:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 55


 2401              		.loc 1 612 0
 2402 07e2 0BE0     		b	.L119
 2403              	.L120:
 613:.\Protocolo.c **** 		if(rx_timeout==1){
 2404              		.loc 1 613 0
 2405 07e4 254B     		ldr	r3, .L130+4
 2406 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2407 07e8 012B     		cmp	r3, #1
 2408 07ea 07D1     		bne	.L119
 614:.\Protocolo.c **** 			isr_1_Stop();
 2409              		.loc 1 614 0
 2410 07ec FFF7FEFF 		bl	isr_1_Stop
 615:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2411              		.loc 1 615 0
 2412 07f0 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 616:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2413              		.loc 1 616 0
 2414 07f4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 617:.\Protocolo.c **** 			return 0;
 2415              		.loc 1 617 0
 2416 07f8 0023     		movs	r3, #0
 2417 07fa 39E0     		b	.L125
 2418              	.L119:
 612:.\Protocolo.c **** 		if(rx_timeout==1){
 2419              		.loc 1 612 0
 2420 07fc FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2421 0800 0346     		mov	r3, r0
 2422 0802 002B     		cmp	r3, #0
 2423 0804 EED0     		beq	.L120
 618:.\Protocolo.c **** 		}
 619:.\Protocolo.c **** 	}
 620:.\Protocolo.c **** 	isr_1_Stop();
 2424              		.loc 1 620 0
 2425 0806 FFF7FEFF 		bl	isr_1_Stop
 621:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 2426              		.loc 1 621 0
 2427 080a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 622:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2428              		.loc 1 622 0
 2429 080e FFF7FEFF 		bl	Surtidor_ReadRxData
 2430 0812 0346     		mov	r3, r0
 2431 0814 1A46     		mov	r2, r3
 2432 0816 FB79     		ldrb	r3, [r7, #7]
 2433 0818 63F02F03 		orn	r3, r3, #47
 2434 081c DBB2     		uxtb	r3, r3
 2435 081e 9A42     		cmp	r2, r3
 2436 0820 25D1     		bne	.L121
 623:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2437              		.loc 1 623 0
 2438 0822 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 624:.\Protocolo.c **** 		CyDelay(10);
 2439              		.loc 1 624 0
 2440 0826 0A20     		movs	r0, #10
 2441 0828 FFF7FEFF 		bl	CyDelay
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2442              		.loc 1 625 0
 2443 082c 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 56


 2444 082e 7B77     		strb	r3, [r7, #29]
 2445 0830 0BE0     		b	.L122
 2446              	.L123:
 626:.\Protocolo.c ****            	Surtidor_PutChar(buffer[i]);
 2447              		.loc 1 626 0 discriminator 3
 2448 0832 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2449 0834 07F12002 		add	r2, r7, #32
 2450 0838 1344     		add	r3, r3, r2
 2451 083a 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2452 083e 1846     		mov	r0, r3
 2453 0840 FFF7FEFF 		bl	Surtidor_PutChar
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2454              		.loc 1 625 0 discriminator 3
 2455 0844 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2456 0846 0133     		adds	r3, r3, #1
 2457 0848 7B77     		strb	r3, [r7, #29]
 2458              	.L122:
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2459              		.loc 1 625 0 is_stmt 0 discriminator 1
 2460 084a 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2461 084c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2462 084e 9A42     		cmp	r2, r3
 2463 0850 EFD9     		bls	.L123
 627:.\Protocolo.c ****         }
 628:.\Protocolo.c **** 		CyDelay(50);		
 2464              		.loc 1 628 0 is_stmt 1
 2465 0852 3220     		movs	r0, #50
 2466 0854 FFF7FEFF 		bl	CyDelay
 629:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2467              		.loc 1 629 0
 2468 0858 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2469 085a 1846     		mov	r0, r3
 2470 085c FFF7FEFF 		bl	get_estado
 2471 0860 0346     		mov	r3, r0
 2472 0862 002B     		cmp	r3, #0
 2473 0864 01D1     		bne	.L124
 630:.\Protocolo.c **** 			return 0;
 2474              		.loc 1 630 0
 2475 0866 0023     		movs	r3, #0
 2476 0868 02E0     		b	.L125
 2477              	.L124:
 631:.\Protocolo.c **** 		}
 632:.\Protocolo.c **** 		else{
 633:.\Protocolo.c **** 			return 1;
 2478              		.loc 1 633 0
 2479 086a 0123     		movs	r3, #1
 2480 086c 00E0     		b	.L125
 2481              	.L121:
 634:.\Protocolo.c **** 		}
 635:.\Protocolo.c **** 	}
 636:.\Protocolo.c **** 	else{
 637:.\Protocolo.c **** 		return 0;
 2482              		.loc 1 637 0
 2483 086e 0023     		movs	r3, #0
 2484              	.L125:
 638:.\Protocolo.c **** 	}
 639:.\Protocolo.c **** }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 57


 2485              		.loc 1 639 0 discriminator 1
 2486 0870 1846     		mov	r0, r3
 2487 0872 2037     		adds	r7, r7, #32
 2488              		.cfi_def_cfa_offset 8
 2489 0874 BD46     		mov	sp, r7
 2490              		.cfi_def_cfa_register 13
 2491              		@ sp needed
 2492 0876 80BD     		pop	{r7, pc}
 2493              	.L131:
 2494              		.align	2
 2495              	.L130:
 2496 0878 00000000 		.word	Rx_Surtidor
 2497 087c 00000000 		.word	rx_timeout
 2498              		.cfi_endproc
 2499              	.LFE70:
 2500              		.size	programar, .-programar
 2501              		.section	.text.cambiar_precio,"ax",%progbits
 2502              		.align	2
 2503              		.global	cambiar_precio
 2504              		.thumb
 2505              		.thumb_func
 2506              		.type	cambiar_precio, %function
 2507              	cambiar_precio:
 2508              	.LFB71:
 640:.\Protocolo.c **** 
 641:.\Protocolo.c **** /*
 642:.\Protocolo.c **** ***************************************************************************************************
 643:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 644:.\Protocolo.c **** *
 645:.\Protocolo.c **** * Description : 
 646:.\Protocolo.c **** *               
 647:.\Protocolo.c **** *
 648:.\Protocolo.c **** * Argument(s) : none
 649:.\Protocolo.c **** *
 650:.\Protocolo.c **** * Return(s)   : none
 651:.\Protocolo.c **** *
 652:.\Protocolo.c **** * Caller(s)   : 
 653:.\Protocolo.c **** *
 654:.\Protocolo.c **** * Note(s)     : none.
 655:.\Protocolo.c **** ***************************************************************************************************
 656:.\Protocolo.c **** */
 657:.\Protocolo.c **** uint8 cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man){
 2509              		.loc 1 657 0
 2510              		.cfi_startproc
 2511              		@ args = 0, pretend = 0, frame = 32
 2512              		@ frame_needed = 1, uses_anonymous_args = 0
 2513 0000 80B5     		push	{r7, lr}
 2514              		.cfi_def_cfa_offset 8
 2515              		.cfi_offset 7, -8
 2516              		.cfi_offset 14, -4
 2517 0002 88B0     		sub	sp, sp, #32
 2518              		.cfi_def_cfa_offset 40
 2519 0004 00AF     		add	r7, sp, #0
 2520              		.cfi_def_cfa_register 7
 2521 0006 0346     		mov	r3, r0
 2522 0008 3960     		str	r1, [r7]
 2523 000a FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 58


 2524 000c 1346     		mov	r3, r2
 2525 000e BB71     		strb	r3, [r7, #6]
 658:.\Protocolo.c **** 	uint8 buffer[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,x;
 2526              		.loc 1 658 0
 2527 0010 0023     		movs	r3, #0
 2528 0012 3B73     		strb	r3, [r7, #12]
 2529 0014 0023     		movs	r3, #0
 2530 0016 7B73     		strb	r3, [r7, #13]
 2531 0018 0023     		movs	r3, #0
 2532 001a BB73     		strb	r3, [r7, #14]
 2533 001c 0023     		movs	r3, #0
 2534 001e FB73     		strb	r3, [r7, #15]
 2535 0020 0023     		movs	r3, #0
 2536 0022 3B74     		strb	r3, [r7, #16]
 2537 0024 0023     		movs	r3, #0
 2538 0026 7B74     		strb	r3, [r7, #17]
 2539 0028 0023     		movs	r3, #0
 2540 002a BB74     		strb	r3, [r7, #18]
 2541 002c 0023     		movs	r3, #0
 2542 002e FB74     		strb	r3, [r7, #19]
 2543 0030 0023     		movs	r3, #0
 2544 0032 3B75     		strb	r3, [r7, #20]
 2545 0034 0023     		movs	r3, #0
 2546 0036 7B75     		strb	r3, [r7, #21]
 2547 0038 0023     		movs	r3, #0
 2548 003a BB75     		strb	r3, [r7, #22]
 2549 003c 0023     		movs	r3, #0
 2550 003e FB75     		strb	r3, [r7, #23]
 2551 0040 0023     		movs	r3, #0
 2552 0042 3B76     		strb	r3, [r7, #24]
 2553 0044 0023     		movs	r3, #0
 2554 0046 7B76     		strb	r3, [r7, #25]
 2555 0048 0023     		movs	r3, #0
 2556 004a BB76     		strb	r3, [r7, #26]
 659:.\Protocolo.c **** 	if(version[1]!=7){
 2557              		.loc 1 659 0
 2558 004c 884B     		ldr	r3, .L151
 2559 004e 5B78     		ldrb	r3, [r3, #1]
 2560 0050 DBB2     		uxtb	r3, r3
 2561 0052 072B     		cmp	r3, #7
 2562 0054 56D0     		beq	.L133
 660:.\Protocolo.c **** 		buffer[0]=0xFF;
 2563              		.loc 1 660 0
 2564 0056 FF23     		movs	r3, #255
 2565 0058 3B73     		strb	r3, [r7, #12]
 661:.\Protocolo.c **** 		buffer[1]=0xE5;
 2566              		.loc 1 661 0
 2567 005a E523     		movs	r3, #229
 2568 005c 7B73     		strb	r3, [r7, #13]
 662:.\Protocolo.c **** 		buffer[2]=0xF4;
 2569              		.loc 1 662 0
 2570 005e F423     		movs	r3, #244
 2571 0060 BB73     		strb	r3, [r7, #14]
 663:.\Protocolo.c **** 		buffer[3]=0xF6;
 2572              		.loc 1 663 0
 2573 0062 F623     		movs	r3, #246
 2574 0064 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 59


 664:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2575              		.loc 1 664 0
 2576 0066 BB79     		ldrb	r3, [r7, #6]
 2577 0068 013B     		subs	r3, r3, #1
 2578 006a DBB2     		uxtb	r3, r3
 2579 006c DBB2     		uxtb	r3, r3
 2580 006e 63F01F03 		orn	r3, r3, #31
 2581 0072 DBB2     		uxtb	r3, r3
 2582 0074 DBB2     		uxtb	r3, r3
 2583 0076 3B74     		strb	r3, [r7, #16]
 665:.\Protocolo.c **** 		buffer[5]=0xF7;	
 2584              		.loc 1 665 0
 2585 0078 F723     		movs	r3, #247
 2586 007a 7B74     		strb	r3, [r7, #17]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2587              		.loc 1 666 0
 2588 007c 0623     		movs	r3, #6
 2589 007e BB77     		strb	r3, [r7, #30]
 2590 0080 15E0     		b	.L134
 2591              	.L135:
 667:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 2592              		.loc 1 667 0 discriminator 3
 2593 0082 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2594 0084 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2595 0086 063A     		subs	r2, r2, #6
 2596 0088 3968     		ldr	r1, [r7]
 2597 008a 0A44     		add	r2, r2, r1
 2598 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2599 008e D2B2     		uxtb	r2, r2
 2600 0090 02F00F02 		and	r2, r2, #15
 2601 0094 D2B2     		uxtb	r2, r2
 2602 0096 62F01F02 		orn	r2, r2, #31
 2603 009a D2B2     		uxtb	r2, r2
 2604 009c D2B2     		uxtb	r2, r2
 2605 009e 07F12001 		add	r1, r7, #32
 2606 00a2 0B44     		add	r3, r3, r1
 2607 00a4 03F8142C 		strb	r2, [r3, #-20]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2608              		.loc 1 666 0 discriminator 3
 2609 00a8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2610 00aa 0133     		adds	r3, r3, #1
 2611 00ac BB77     		strb	r3, [r7, #30]
 2612              	.L134:
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2613              		.loc 1 666 0 is_stmt 0 discriminator 1
 2614 00ae BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2615 00b0 092B     		cmp	r3, #9
 2616 00b2 E6D9     		bls	.L135
 668:.\Protocolo.c **** 		}
 669:.\Protocolo.c **** 		buffer[10]=0xFB;
 2617              		.loc 1 669 0 is_stmt 1
 2618 00b4 FB23     		movs	r3, #251
 2619 00b6 BB75     		strb	r3, [r7, #22]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2620              		.loc 1 670 0
 2621 00b8 0023     		movs	r3, #0
 2622 00ba BB77     		strb	r3, [r7, #30]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 60


 2623 00bc 0FE0     		b	.L136
 2624              	.L137:
 671:.\Protocolo.c **** 			buffer[11]+=(buffer[x]&0x0F);	
 2625              		.loc 1 671 0 discriminator 3
 2626 00be FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2627 00c0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2628 00c2 07F12001 		add	r1, r7, #32
 2629 00c6 0B44     		add	r3, r3, r1
 2630 00c8 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2631 00cc 03F00F03 		and	r3, r3, #15
 2632 00d0 DBB2     		uxtb	r3, r3
 2633 00d2 1344     		add	r3, r3, r2
 2634 00d4 DBB2     		uxtb	r3, r3
 2635 00d6 FB75     		strb	r3, [r7, #23]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2636              		.loc 1 670 0 discriminator 3
 2637 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2638 00da 0133     		adds	r3, r3, #1
 2639 00dc BB77     		strb	r3, [r7, #30]
 2640              	.L136:
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2641              		.loc 1 670 0 is_stmt 0 discriminator 1
 2642 00de BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2643 00e0 0A2B     		cmp	r3, #10
 2644 00e2 ECD9     		bls	.L137
 672:.\Protocolo.c **** 		}
 673:.\Protocolo.c **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 2645              		.loc 1 673 0 is_stmt 1
 2646 00e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2647 00e6 5B42     		negs	r3, r3
 2648 00e8 DBB2     		uxtb	r3, r3
 2649 00ea DBB2     		uxtb	r3, r3
 2650 00ec 03F00F03 		and	r3, r3, #15
 2651 00f0 DBB2     		uxtb	r3, r3
 2652 00f2 63F01F03 		orn	r3, r3, #31
 2653 00f6 DBB2     		uxtb	r3, r3
 2654 00f8 DBB2     		uxtb	r3, r3
 2655 00fa FB75     		strb	r3, [r7, #23]
 674:.\Protocolo.c **** 		buffer[12]=0xF0;
 2656              		.loc 1 674 0
 2657 00fc F023     		movs	r3, #240
 2658 00fe 3B76     		strb	r3, [r7, #24]
 675:.\Protocolo.c **** 		size=12;
 2659              		.loc 1 675 0
 2660 0100 0C23     		movs	r3, #12
 2661 0102 FB77     		strb	r3, [r7, #31]
 2662              	.L133:
 676:.\Protocolo.c **** 	}
 677:.\Protocolo.c **** 	if(version[1]==7){
 2663              		.loc 1 677 0
 2664 0104 5A4B     		ldr	r3, .L151
 2665 0106 5B78     		ldrb	r3, [r3, #1]
 2666 0108 DBB2     		uxtb	r3, r3
 2667 010a 072B     		cmp	r3, #7
 2668 010c 53D1     		bne	.L138
 678:.\Protocolo.c **** 		buffer[0]=0xFF;
 2669              		.loc 1 678 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 61


 2670 010e FF23     		movs	r3, #255
 2671 0110 3B73     		strb	r3, [r7, #12]
 679:.\Protocolo.c **** 		buffer[1]=0xE3;
 2672              		.loc 1 679 0
 2673 0112 E323     		movs	r3, #227
 2674 0114 7B73     		strb	r3, [r7, #13]
 680:.\Protocolo.c **** 		buffer[2]=0xF4;
 2675              		.loc 1 680 0
 2676 0116 F423     		movs	r3, #244
 2677 0118 BB73     		strb	r3, [r7, #14]
 681:.\Protocolo.c **** 		buffer[3]=0xF6;
 2678              		.loc 1 681 0
 2679 011a F623     		movs	r3, #246
 2680 011c FB73     		strb	r3, [r7, #15]
 682:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2681              		.loc 1 682 0
 2682 011e BB79     		ldrb	r3, [r7, #6]
 2683 0120 013B     		subs	r3, r3, #1
 2684 0122 DBB2     		uxtb	r3, r3
 2685 0124 DBB2     		uxtb	r3, r3
 2686 0126 63F01F03 		orn	r3, r3, #31
 2687 012a DBB2     		uxtb	r3, r3
 2688 012c DBB2     		uxtb	r3, r3
 2689 012e 3B74     		strb	r3, [r7, #16]
 683:.\Protocolo.c **** 		buffer[5]=0xF7;		
 2690              		.loc 1 683 0
 2691 0130 F723     		movs	r3, #247
 2692 0132 7B74     		strb	r3, [r7, #17]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2693              		.loc 1 684 0
 2694 0134 0623     		movs	r3, #6
 2695 0136 BB77     		strb	r3, [r7, #30]
 2696 0138 10E0     		b	.L139
 2697              	.L140:
 685:.\Protocolo.c **** 			buffer[x]=(0xE0|precio[x-6]);
 2698              		.loc 1 685 0 discriminator 3
 2699 013a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2700 013c BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2701 013e 063A     		subs	r2, r2, #6
 2702 0140 3968     		ldr	r1, [r7]
 2703 0142 0A44     		add	r2, r2, r1
 2704 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2705 0146 62F01F02 		orn	r2, r2, #31
 2706 014a D2B2     		uxtb	r2, r2
 2707 014c 07F12001 		add	r1, r7, #32
 2708 0150 0B44     		add	r3, r3, r1
 2709 0152 03F8142C 		strb	r2, [r3, #-20]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2710              		.loc 1 684 0 discriminator 3
 2711 0156 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2712 0158 0133     		adds	r3, r3, #1
 2713 015a BB77     		strb	r3, [r7, #30]
 2714              	.L139:
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2715              		.loc 1 684 0 is_stmt 0 discriminator 1
 2716 015c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2717 015e 0A2B     		cmp	r3, #10
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 62


 2718 0160 EBD9     		bls	.L140
 686:.\Protocolo.c **** 		}
 687:.\Protocolo.c **** 		buffer[11]=0xE0;
 2719              		.loc 1 687 0 is_stmt 1
 2720 0162 E023     		movs	r3, #224
 2721 0164 FB75     		strb	r3, [r7, #23]
 688:.\Protocolo.c **** 		buffer[12]=0xFB;
 2722              		.loc 1 688 0
 2723 0166 FB23     		movs	r3, #251
 2724 0168 3B76     		strb	r3, [r7, #24]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2725              		.loc 1 689 0
 2726 016a 0023     		movs	r3, #0
 2727 016c BB77     		strb	r3, [r7, #30]
 2728 016e 0FE0     		b	.L141
 2729              	.L142:
 690:.\Protocolo.c **** 			buffer[13]+=(buffer[x]&0x0F);	
 2730              		.loc 1 690 0 discriminator 3
 2731 0170 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 2732 0172 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2733 0174 07F12001 		add	r1, r7, #32
 2734 0178 0B44     		add	r3, r3, r1
 2735 017a 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2736 017e 03F00F03 		and	r3, r3, #15
 2737 0182 DBB2     		uxtb	r3, r3
 2738 0184 1344     		add	r3, r3, r2
 2739 0186 DBB2     		uxtb	r3, r3
 2740 0188 7B76     		strb	r3, [r7, #25]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2741              		.loc 1 689 0 discriminator 3
 2742 018a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2743 018c 0133     		adds	r3, r3, #1
 2744 018e BB77     		strb	r3, [r7, #30]
 2745              	.L141:
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2746              		.loc 1 689 0 is_stmt 0 discriminator 1
 2747 0190 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2748 0192 0C2B     		cmp	r3, #12
 2749 0194 ECD9     		bls	.L142
 691:.\Protocolo.c **** 		}
 692:.\Protocolo.c **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 2750              		.loc 1 692 0 is_stmt 1
 2751 0196 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2752 0198 5B42     		negs	r3, r3
 2753 019a DBB2     		uxtb	r3, r3
 2754 019c DBB2     		uxtb	r3, r3
 2755 019e 03F00F03 		and	r3, r3, #15
 2756 01a2 DBB2     		uxtb	r3, r3
 2757 01a4 63F01F03 		orn	r3, r3, #31
 2758 01a8 DBB2     		uxtb	r3, r3
 2759 01aa DBB2     		uxtb	r3, r3
 2760 01ac 7B76     		strb	r3, [r7, #25]
 693:.\Protocolo.c **** 		buffer[14]=0xF0;
 2761              		.loc 1 693 0
 2762 01ae F023     		movs	r3, #240
 2763 01b0 BB76     		strb	r3, [r7, #26]
 694:.\Protocolo.c **** 		size=14;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 63


 2764              		.loc 1 694 0
 2765 01b2 0E23     		movs	r3, #14
 2766 01b4 FB77     		strb	r3, [r7, #31]
 2767              	.L138:
 695:.\Protocolo.c **** 	}
 696:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2768              		.loc 1 696 0
 2769 01b6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 697:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2770              		.loc 1 697 0
 2771 01ba FB79     		ldrb	r3, [r7, #7]
 2772 01bc 43F02003 		orr	r3, r3, #32
 2773 01c0 DBB2     		uxtb	r3, r3
 2774 01c2 1846     		mov	r0, r3
 2775 01c4 FFF7FEFF 		bl	Surtidor_PutChar
 698:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2776              		.loc 1 698 0
 2777 01c8 2A48     		ldr	r0, .L151+4
 2778 01ca FFF7FEFF 		bl	isr_1_StartEx
 699:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2779              		.loc 1 699 0
 2780 01ce FFF7FEFF 		bl	Timer_RxSurtidor_Start
 700:.\Protocolo.c ****     rx_timeout=0;
 2781              		.loc 1 700 0
 2782 01d2 294B     		ldr	r3, .L151+8
 2783 01d4 0022     		movs	r2, #0
 2784 01d6 1A70     		strb	r2, [r3]
 701:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2785              		.loc 1 701 0
 2786 01d8 0BE0     		b	.L143
 2787              	.L145:
 702:.\Protocolo.c **** 		if(rx_timeout==1){
 2788              		.loc 1 702 0
 2789 01da 274B     		ldr	r3, .L151+8
 2790 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2791 01de 012B     		cmp	r3, #1
 2792 01e0 07D1     		bne	.L143
 703:.\Protocolo.c **** 			isr_1_Stop();
 2793              		.loc 1 703 0
 2794 01e2 FFF7FEFF 		bl	isr_1_Stop
 704:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2795              		.loc 1 704 0
 2796 01e6 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 705:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2797              		.loc 1 705 0
 2798 01ea FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 706:.\Protocolo.c **** 			return 0;
 2799              		.loc 1 706 0
 2800 01ee 0023     		movs	r3, #0
 2801 01f0 39E0     		b	.L150
 2802              	.L143:
 701:.\Protocolo.c **** 		if(rx_timeout==1){
 2803              		.loc 1 701 0
 2804 01f2 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2805 01f6 0346     		mov	r3, r0
 2806 01f8 002B     		cmp	r3, #0
 2807 01fa EED0     		beq	.L145
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 64


 707:.\Protocolo.c **** 		}
 708:.\Protocolo.c **** 	}
 709:.\Protocolo.c **** 	isr_1_Stop();
 2808              		.loc 1 709 0
 2809 01fc FFF7FEFF 		bl	isr_1_Stop
 710:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();
 2810              		.loc 1 710 0
 2811 0200 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 711:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2812              		.loc 1 711 0
 2813 0204 FFF7FEFF 		bl	Surtidor_ReadRxData
 2814 0208 0346     		mov	r3, r0
 2815 020a 1A46     		mov	r2, r3
 2816 020c FB79     		ldrb	r3, [r7, #7]
 2817 020e 63F02F03 		orn	r3, r3, #47
 2818 0212 DBB2     		uxtb	r3, r3
 2819 0214 9A42     		cmp	r2, r3
 2820 0216 25D1     		bne	.L146
 712:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2821              		.loc 1 712 0
 2822 0218 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 713:.\Protocolo.c **** 		CyDelay(10);
 2823              		.loc 1 713 0
 2824 021c 0A20     		movs	r0, #10
 2825 021e FFF7FEFF 		bl	CyDelay
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2826              		.loc 1 714 0
 2827 0222 0023     		movs	r3, #0
 2828 0224 BB77     		strb	r3, [r7, #30]
 2829 0226 0BE0     		b	.L147
 2830              	.L148:
 715:.\Protocolo.c ****            	Surtidor_PutChar(buffer[x]);
 2831              		.loc 1 715 0 discriminator 3
 2832 0228 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2833 022a 07F12002 		add	r2, r7, #32
 2834 022e 1344     		add	r3, r3, r2
 2835 0230 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2836 0234 1846     		mov	r0, r3
 2837 0236 FFF7FEFF 		bl	Surtidor_PutChar
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2838              		.loc 1 714 0 discriminator 3
 2839 023a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2840 023c 0133     		adds	r3, r3, #1
 2841 023e BB77     		strb	r3, [r7, #30]
 2842              	.L147:
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2843              		.loc 1 714 0 is_stmt 0 discriminator 1
 2844 0240 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2845 0242 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2846 0244 9A42     		cmp	r2, r3
 2847 0246 EFD9     		bls	.L148
 716:.\Protocolo.c ****         }
 717:.\Protocolo.c **** 		CyDelay(50);		
 2848              		.loc 1 717 0 is_stmt 1
 2849 0248 3220     		movs	r0, #50
 2850 024a FFF7FEFF 		bl	CyDelay
 718:.\Protocolo.c **** 		if(get_estado(dir)==0){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 65


 2851              		.loc 1 718 0
 2852 024e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2853 0250 1846     		mov	r0, r3
 2854 0252 FFF7FEFF 		bl	get_estado
 2855 0256 0346     		mov	r3, r0
 2856 0258 002B     		cmp	r3, #0
 2857 025a 01D1     		bne	.L149
 719:.\Protocolo.c **** 			return 0;
 2858              		.loc 1 719 0
 2859 025c 0023     		movs	r3, #0
 2860 025e 02E0     		b	.L150
 2861              	.L149:
 720:.\Protocolo.c **** 		}
 721:.\Protocolo.c **** 		else{
 722:.\Protocolo.c **** 			return 1;
 2862              		.loc 1 722 0
 2863 0260 0123     		movs	r3, #1
 2864 0262 00E0     		b	.L150
 2865              	.L146:
 723:.\Protocolo.c **** 		}
 724:.\Protocolo.c **** 	}
 725:.\Protocolo.c **** 	else{
 726:.\Protocolo.c **** 		return 0;
 2866              		.loc 1 726 0
 2867 0264 0023     		movs	r3, #0
 2868              	.L150:
 727:.\Protocolo.c **** 	}
 728:.\Protocolo.c **** }
 2869              		.loc 1 728 0 discriminator 1
 2870 0266 1846     		mov	r0, r3
 2871 0268 2037     		adds	r7, r7, #32
 2872              		.cfi_def_cfa_offset 8
 2873 026a BD46     		mov	sp, r7
 2874              		.cfi_def_cfa_register 13
 2875              		@ sp needed
 2876 026c 80BD     		pop	{r7, pc}
 2877              	.L152:
 2878 026e 00BF     		.align	2
 2879              	.L151:
 2880 0270 00000000 		.word	version
 2881 0274 00000000 		.word	Rx_Surtidor
 2882 0278 00000000 		.word	rx_timeout
 2883              		.cfi_endproc
 2884              	.LFE71:
 2885              		.size	cambiar_precio, .-cambiar_precio
 2886              		.section	.text.totales,"ax",%progbits
 2887              		.align	2
 2888              		.global	totales
 2889              		.thumb
 2890              		.thumb_func
 2891              		.type	totales, %function
 2892              	totales:
 2893              	.LFB72:
 729:.\Protocolo.c **** 
 730:.\Protocolo.c **** /*
 731:.\Protocolo.c **** ***************************************************************************************************
 732:.\Protocolo.c **** *                                         uint8 totales(uint8 dir)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 66


 733:.\Protocolo.c **** *
 734:.\Protocolo.c **** * Description : 
 735:.\Protocolo.c **** *               
 736:.\Protocolo.c **** *
 737:.\Protocolo.c **** * Argument(s) : none
 738:.\Protocolo.c **** *
 739:.\Protocolo.c **** * Return(s)   : none
 740:.\Protocolo.c **** *
 741:.\Protocolo.c **** * Caller(s)   : 
 742:.\Protocolo.c **** *
 743:.\Protocolo.c **** * Note(s)     : none.
 744:.\Protocolo.c **** ***************************************************************************************************
 745:.\Protocolo.c **** */
 746:.\Protocolo.c **** uint8 totales(uint8 dir, uint8 nmangueras){
 2894              		.loc 1 746 0
 2895              		.cfi_startproc
 2896              		@ args = 0, pretend = 0, frame = 16
 2897              		@ frame_needed = 1, uses_anonymous_args = 0
 2898 0000 80B5     		push	{r7, lr}
 2899              		.cfi_def_cfa_offset 8
 2900              		.cfi_offset 7, -8
 2901              		.cfi_offset 14, -4
 2902 0002 84B0     		sub	sp, sp, #16
 2903              		.cfi_def_cfa_offset 24
 2904 0004 00AF     		add	r7, sp, #0
 2905              		.cfi_def_cfa_register 7
 2906 0006 0346     		mov	r3, r0
 2907 0008 0A46     		mov	r2, r1
 2908 000a FB71     		strb	r3, [r7, #7]
 2909 000c 1346     		mov	r3, r2
 2910 000e BB71     		strb	r3, [r7, #6]
 747:.\Protocolo.c **** 	uint8 x,y;
 748:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2911              		.loc 1 748 0
 2912 0010 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 749:.\Protocolo.c ****     Surtidor_PutChar(0x50|dir);
 2913              		.loc 1 749 0
 2914 0014 FB79     		ldrb	r3, [r7, #7]
 2915 0016 43F05003 		orr	r3, r3, #80
 2916 001a DBB2     		uxtb	r3, r3
 2917 001c 1846     		mov	r0, r3
 2918 001e FFF7FEFF 		bl	Surtidor_PutChar
 750:.\Protocolo.c ****     rx_timeout=0;
 2919              		.loc 1 750 0
 2920 0022 B04B     		ldr	r3, .L355
 2921 0024 0022     		movs	r2, #0
 2922 0026 1A70     		strb	r2, [r3]
 751:.\Protocolo.c **** 	CyDelay(300);
 2923              		.loc 1 751 0
 2924 0028 4FF49670 		mov	r0, #300
 2925 002c FFF7FEFF 		bl	CyDelay
 752:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 2926              		.loc 1 752 0
 2927 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2928 0034 0346     		mov	r3, r0
 2929 0036 002B     		cmp	r3, #0
 2930 0038 01F02280 		beq	.L154
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 67


 753:.\Protocolo.c **** 		if(dir==lado1.dir){
 2931              		.loc 1 753 0
 2932 003c AA4B     		ldr	r3, .L355+4
 2933 003e 1B78     		ldrb	r3, [r3]
 2934 0040 DBB2     		uxtb	r3, r3
 2935 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2936 0044 9A42     		cmp	r2, r3
 2937 0046 40F01F84 		bne	.L155
 754:.\Protocolo.c **** 			if(version[1]!=7){
 2938              		.loc 1 754 0
 2939 004a A84B     		ldr	r3, .L355+8
 2940 004c 5B78     		ldrb	r3, [r3, #1]
 2941 004e DBB2     		uxtb	r3, r3
 2942 0050 072B     		cmp	r3, #7
 2943 0052 00F00C82 		beq	.L156
 755:.\Protocolo.c **** 				CyDelay(900);
 2944              		.loc 1 755 0
 2945 0056 4FF46170 		mov	r0, #900
 2946 005a FFF7FEFF 		bl	CyDelay
 756:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 2947              		.loc 1 756 0
 2948 005e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2949 0062 0346     		mov	r3, r0
 2950 0064 FB73     		strb	r3, [r7, #15]
 757:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 2951              		.loc 1 757 0
 2952 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2953 0068 222B     		cmp	r3, #34
 2954 006a 06D0     		beq	.L157
 2955              		.loc 1 757 0 is_stmt 0 discriminator 1
 2956 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2957 006e 402B     		cmp	r3, #64
 2958 0070 03D0     		beq	.L157
 2959              		.loc 1 757 0 discriminator 2
 2960 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2961 0074 5E2B     		cmp	r3, #94
 2962 0076 40F0F581 		bne	.L158
 2963              	.L157:
 758:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9))  
 2964              		.loc 1 758 0 is_stmt 1
 2965 007a 9D4B     		ldr	r3, .L355+12
 2966 007c 1B78     		ldrb	r3, [r3]
 2967 007e DBB2     		uxtb	r3, r3
 2968 0080 FF2B     		cmp	r3, #255
 2969 0082 40F0EA81 		bne	.L159
 2970              		.loc 1 758 0 is_stmt 0 discriminator 1
 2971 0086 9A4B     		ldr	r3, .L355+12
 2972 0088 5B78     		ldrb	r3, [r3, #1]
 2973 008a DBB2     		uxtb	r3, r3
 2974 008c F62B     		cmp	r3, #246
 2975 008e 40F0E481 		bne	.L159
 2976              		.loc 1 758 0 discriminator 2
 2977 0092 974B     		ldr	r3, .L355+12
 2978 0094 DB78     		ldrb	r3, [r3, #3]
 2979 0096 DBB2     		uxtb	r3, r3
 2980 0098 F92B     		cmp	r3, #249
 2981 009a 40F0DE81 		bne	.L159
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 68


 759:.\Protocolo.c ****                     {                     
 760:.\Protocolo.c ****                     	for(y=0;y<=2;y++){// MOD: inicializa valores en cero
 2982              		.loc 1 760 0 is_stmt 1
 2983 009e 0023     		movs	r3, #0
 2984 00a0 BB73     		strb	r3, [r7, #14]
 2985 00a2 16E0     		b	.L160
 2986              	.L163:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2987              		.loc 1 761 0
 2988 00a4 0023     		movs	r3, #0
 2989 00a6 FB73     		strb	r3, [r7, #15]
 2990 00a8 0DE0     		b	.L161
 2991              	.L162:
 762:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 2992              		.loc 1 762 0 discriminator 3
 2993 00aa BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2994 00ac F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 2995 00ae 8E48     		ldr	r0, .L355+4
 2996 00b0 1346     		mov	r3, r2
 2997 00b2 5B00     		lsls	r3, r3, #1
 2998 00b4 1344     		add	r3, r3, r2
 2999 00b6 DB00     		lsls	r3, r3, #3
 3000 00b8 0B44     		add	r3, r3, r1
 3001 00ba 0344     		add	r3, r3, r0
 3002 00bc 0022     		movs	r2, #0
 3003 00be 9A70     		strb	r2, [r3, #2]
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3004              		.loc 1 761 0 discriminator 3
 3005 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3006 00c2 0133     		adds	r3, r3, #1
 3007 00c4 FB73     		strb	r3, [r7, #15]
 3008              	.L161:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3009              		.loc 1 761 0 is_stmt 0 discriminator 1
 3010 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3011 00c8 172B     		cmp	r3, #23
 3012 00ca EED9     		bls	.L162
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3013              		.loc 1 760 0 is_stmt 1 discriminator 2
 3014 00cc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3015 00ce 0133     		adds	r3, r3, #1
 3016 00d0 BB73     		strb	r3, [r7, #14]
 3017              	.L160:
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3018              		.loc 1 760 0 is_stmt 0 discriminator 1
 3019 00d2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3020 00d4 022B     		cmp	r3, #2
 3021 00d6 E5D9     		bls	.L163
 763:.\Protocolo.c ****                     		}
 764:.\Protocolo.c ****                     	}                        
 765:.\Protocolo.c **** 						for(x=0;x<=7;x++){///producto 1 6xto digito
 3022              		.loc 1 765 0 is_stmt 1
 3023 00d8 0023     		movs	r3, #0
 3024 00da FB73     		strb	r3, [r7, #15]
 3025 00dc 21E0     		b	.L164
 3026              	.L168:
 766:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 69


 3027              		.loc 1 766 0
 3028 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3029 00e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3030 00e2 0432     		adds	r2, r2, #4
 3031 00e4 8249     		ldr	r1, .L355+12
 3032 00e6 8A5C     		ldrb	r2, [r1, r2]
 3033 00e8 D1B2     		uxtb	r1, r2
 3034 00ea 7F4A     		ldr	r2, .L355+4
 3035 00ec 1344     		add	r3, r3, r2
 3036 00ee 0A46     		mov	r2, r1
 3037 00f0 9A70     		strb	r2, [r3, #2]
 767:.\Protocolo.c ****                             ///////////''modificacion actual''//// Se añade esta verificacion para
 768:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3038              		.loc 1 768 0
 3039 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3040 00f4 7C4A     		ldr	r2, .L355+4
 3041 00f6 1344     		add	r3, r3, r2
 3042 00f8 9B78     		ldrb	r3, [r3, #2]
 3043 00fa DBB2     		uxtb	r3, r3
 3044 00fc 002B     		cmp	r3, #0
 3045 00fe 08D0     		beq	.L165
 3046              		.loc 1 768 0 is_stmt 0 discriminator 1
 3047 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3048 0102 794A     		ldr	r2, .L355+4
 3049 0104 1344     		add	r3, r3, r2
 3050 0106 9B78     		ldrb	r3, [r3, #2]
 3051 0108 DBB2     		uxtb	r3, r3
 3052 010a 03F0F003 		and	r3, r3, #240
 3053 010e E02B     		cmp	r3, #224
 3054 0110 04D0     		beq	.L166
 3055              	.L165:
 769:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3056              		.loc 1 769 0 is_stmt 1
 3057 0112 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 770:.\Protocolo.c **** 								return 0;
 3058              		.loc 1 770 0
 3059 0116 0023     		movs	r3, #0
 3060 0118 00F0B3BF 		b	.L167
 3061              	.L166:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3062              		.loc 1 765 0 discriminator 2
 3063 011c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3064 011e 0133     		adds	r3, r3, #1
 3065 0120 FB73     		strb	r3, [r7, #15]
 3066              	.L164:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3067              		.loc 1 765 0 is_stmt 0 discriminator 1
 3068 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3069 0124 072B     		cmp	r3, #7
 3070 0126 DAD9     		bls	.L168
 771:.\Protocolo.c **** 							}
 772:.\Protocolo.c ****                             ///////////''modificacion actual''////
 773:.\Protocolo.c **** 						}
 774:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3071              		.loc 1 774 0 is_stmt 1
 3072 0128 0023     		movs	r3, #0
 3073 012a FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 70


 3074 012c 24E0     		b	.L169
 3075              	.L172:
 775:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3076              		.loc 1 775 0
 3077 012e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3078 0130 0C33     		adds	r3, r3, #12
 3079 0132 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3080 0134 0D32     		adds	r2, r2, #13
 3081 0136 6E49     		ldr	r1, .L355+12
 3082 0138 8A5C     		ldrb	r2, [r1, r2]
 3083 013a D1B2     		uxtb	r1, r2
 3084 013c 6A4A     		ldr	r2, .L355+4
 3085 013e 1344     		add	r3, r3, r2
 3086 0140 0A46     		mov	r2, r1
 3087 0142 9A70     		strb	r2, [r3, #2]
 776:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3088              		.loc 1 776 0
 3089 0144 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3090 0146 0C33     		adds	r3, r3, #12
 3091 0148 674A     		ldr	r2, .L355+4
 3092 014a 1344     		add	r3, r3, r2
 3093 014c 9B78     		ldrb	r3, [r3, #2]
 3094 014e DBB2     		uxtb	r3, r3
 3095 0150 002B     		cmp	r3, #0
 3096 0152 09D0     		beq	.L170
 3097              		.loc 1 776 0 is_stmt 0 discriminator 1
 3098 0154 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3099 0156 0C33     		adds	r3, r3, #12
 3100 0158 634A     		ldr	r2, .L355+4
 3101 015a 1344     		add	r3, r3, r2
 3102 015c 9B78     		ldrb	r3, [r3, #2]
 3103 015e DBB2     		uxtb	r3, r3
 3104 0160 03F0F003 		and	r3, r3, #240
 3105 0164 E02B     		cmp	r3, #224
 3106 0166 04D0     		beq	.L171
 3107              	.L170:
 777:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3108              		.loc 1 777 0 is_stmt 1
 3109 0168 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 778:.\Protocolo.c **** 								return 0;
 3110              		.loc 1 778 0
 3111 016c 0023     		movs	r3, #0
 3112 016e 00F088BF 		b	.L167
 3113              	.L171:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3114              		.loc 1 774 0 discriminator 2
 3115 0172 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3116 0174 0133     		adds	r3, r3, #1
 3117 0176 FB73     		strb	r3, [r7, #15]
 3118              	.L169:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3119              		.loc 1 774 0 is_stmt 0 discriminator 1
 3120 0178 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3121 017a 072B     		cmp	r3, #7
 3122 017c D7D9     		bls	.L172
 779:.\Protocolo.c **** 							}							
 780:.\Protocolo.c **** 						}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 71


 781:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3123              		.loc 1 781 0 is_stmt 1
 3124 017e 0023     		movs	r3, #0
 3125 0180 FB73     		strb	r3, [r7, #15]
 3126 0182 0DE0     		b	.L173
 3127              	.L174:
 782:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3128              		.loc 1 782 0 discriminator 3
 3129 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3130 0186 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3131 0188 1632     		adds	r2, r2, #22
 3132 018a 5949     		ldr	r1, .L355+12
 3133 018c 8A5C     		ldrb	r2, [r1, r2]
 3134 018e D1B2     		uxtb	r1, r2
 3135 0190 554A     		ldr	r2, .L355+4
 3136 0192 1344     		add	r3, r3, r2
 3137 0194 0A46     		mov	r2, r1
 3138 0196 83F84A20 		strb	r2, [r3, #74]
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3139              		.loc 1 781 0 discriminator 3
 3140 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3141 019c 0133     		adds	r3, r3, #1
 3142 019e FB73     		strb	r3, [r7, #15]
 3143              	.L173:
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3144              		.loc 1 781 0 is_stmt 0 discriminator 1
 3145 01a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3146 01a2 032B     		cmp	r3, #3
 3147 01a4 EED9     		bls	.L174
 783:.\Protocolo.c **** 						}					
 784:.\Protocolo.c **** 						if(nmangueras==2){
 3148              		.loc 1 784 0 is_stmt 1
 3149 01a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3150 01a8 022B     		cmp	r3, #2
 3151 01aa 6BD1     		bne	.L175
 785:.\Protocolo.c **** 							for(x=0;x<=7;x++){ ///producto 2
 3152              		.loc 1 785 0
 3153 01ac 0023     		movs	r3, #0
 3154 01ae FB73     		strb	r3, [r7, #15]
 3155 01b0 21E0     		b	.L176
 3156              	.L179:
 786:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3157              		.loc 1 786 0
 3158 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3159 01b4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3160 01b6 2232     		adds	r2, r2, #34
 3161 01b8 4D49     		ldr	r1, .L355+12
 3162 01ba 8A5C     		ldrb	r2, [r1, r2]
 3163 01bc D1B2     		uxtb	r1, r2
 3164 01be 4A4A     		ldr	r2, .L355+4
 3165 01c0 1344     		add	r3, r3, r2
 3166 01c2 0A46     		mov	r2, r1
 3167 01c4 9A76     		strb	r2, [r3, #26]
 787:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3168              		.loc 1 787 0
 3169 01c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3170 01c8 474A     		ldr	r2, .L355+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 72


 3171 01ca 1344     		add	r3, r3, r2
 3172 01cc 9B7E     		ldrb	r3, [r3, #26]
 3173 01ce DBB2     		uxtb	r3, r3
 3174 01d0 002B     		cmp	r3, #0
 3175 01d2 08D0     		beq	.L177
 3176              		.loc 1 787 0 is_stmt 0 discriminator 1
 3177 01d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3178 01d6 444A     		ldr	r2, .L355+4
 3179 01d8 1344     		add	r3, r3, r2
 3180 01da 9B7E     		ldrb	r3, [r3, #26]
 3181 01dc DBB2     		uxtb	r3, r3
 3182 01de 03F0F003 		and	r3, r3, #240
 3183 01e2 E02B     		cmp	r3, #224
 3184 01e4 04D0     		beq	.L178
 3185              	.L177:
 788:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3186              		.loc 1 788 0 is_stmt 1
 3187 01e6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 789:.\Protocolo.c **** 									return 0;
 3188              		.loc 1 789 0
 3189 01ea 0023     		movs	r3, #0
 3190 01ec 00F049BF 		b	.L167
 3191              	.L178:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3192              		.loc 1 785 0 discriminator 2
 3193 01f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3194 01f2 0133     		adds	r3, r3, #1
 3195 01f4 FB73     		strb	r3, [r7, #15]
 3196              	.L176:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3197              		.loc 1 785 0 is_stmt 0 discriminator 1
 3198 01f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3199 01f8 072B     		cmp	r3, #7
 3200 01fa DAD9     		bls	.L179
 790:.\Protocolo.c **** 								}								
 791:.\Protocolo.c **** 							}
 792:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3201              		.loc 1 792 0 is_stmt 1
 3202 01fc 0023     		movs	r3, #0
 3203 01fe FB73     		strb	r3, [r7, #15]
 3204 0200 24E0     		b	.L180
 3205              	.L183:
 793:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3206              		.loc 1 793 0
 3207 0202 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3208 0204 0C33     		adds	r3, r3, #12
 3209 0206 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3210 0208 2B32     		adds	r2, r2, #43
 3211 020a 3949     		ldr	r1, .L355+12
 3212 020c 8A5C     		ldrb	r2, [r1, r2]
 3213 020e D1B2     		uxtb	r1, r2
 3214 0210 354A     		ldr	r2, .L355+4
 3215 0212 1344     		add	r3, r3, r2
 3216 0214 0A46     		mov	r2, r1
 3217 0216 9A76     		strb	r2, [r3, #26]
 794:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3218              		.loc 1 794 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 73


 3219 0218 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3220 021a 0C33     		adds	r3, r3, #12
 3221 021c 324A     		ldr	r2, .L355+4
 3222 021e 1344     		add	r3, r3, r2
 3223 0220 9B7E     		ldrb	r3, [r3, #26]
 3224 0222 DBB2     		uxtb	r3, r3
 3225 0224 002B     		cmp	r3, #0
 3226 0226 09D0     		beq	.L181
 3227              		.loc 1 794 0 is_stmt 0 discriminator 1
 3228 0228 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3229 022a 0C33     		adds	r3, r3, #12
 3230 022c 2E4A     		ldr	r2, .L355+4
 3231 022e 1344     		add	r3, r3, r2
 3232 0230 9B7E     		ldrb	r3, [r3, #26]
 3233 0232 DBB2     		uxtb	r3, r3
 3234 0234 03F0F003 		and	r3, r3, #240
 3235 0238 E02B     		cmp	r3, #224
 3236 023a 04D0     		beq	.L182
 3237              	.L181:
 795:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3238              		.loc 1 795 0 is_stmt 1
 3239 023c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 796:.\Protocolo.c **** 									return 0;
 3240              		.loc 1 796 0
 3241 0240 0023     		movs	r3, #0
 3242 0242 00F01EBF 		b	.L167
 3243              	.L182:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3244              		.loc 1 792 0 discriminator 2
 3245 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3246 0248 0133     		adds	r3, r3, #1
 3247 024a FB73     		strb	r3, [r7, #15]
 3248              	.L180:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3249              		.loc 1 792 0 is_stmt 0 discriminator 1
 3250 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3251 024e 072B     		cmp	r3, #7
 3252 0250 D7D9     		bls	.L183
 797:.\Protocolo.c **** 								}								
 798:.\Protocolo.c **** 							}
 799:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3253              		.loc 1 799 0 is_stmt 1
 3254 0252 0023     		movs	r3, #0
 3255 0254 FB73     		strb	r3, [r7, #15]
 3256 0256 0DE0     		b	.L184
 3257              	.L185:
 800:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3258              		.loc 1 800 0 discriminator 3
 3259 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3260 025a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3261 025c 3432     		adds	r2, r2, #52
 3262 025e 2449     		ldr	r1, .L355+12
 3263 0260 8A5C     		ldrb	r2, [r1, r2]
 3264 0262 D1B2     		uxtb	r1, r2
 3265 0264 204A     		ldr	r2, .L355+4
 3266 0266 1344     		add	r3, r3, r2
 3267 0268 0A46     		mov	r2, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 74


 3268 026a 83F84F20 		strb	r2, [r3, #79]
 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3269              		.loc 1 799 0 discriminator 3
 3270 026e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3271 0270 0133     		adds	r3, r3, #1
 3272 0272 FB73     		strb	r3, [r7, #15]
 3273              	.L184:
 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3274              		.loc 1 799 0 is_stmt 0 discriminator 1
 3275 0274 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3276 0276 032B     		cmp	r3, #3
 3277 0278 EED9     		bls	.L185
 801:.\Protocolo.c **** 							}	
 802:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3278              		.loc 1 802 0 is_stmt 1
 3279 027a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 803:.\Protocolo.c ****     						return 2;                            
 3280              		.loc 1 803 0
 3281 027e 0223     		movs	r3, #2
 3282 0280 00F0FFBE 		b	.L167
 3283              	.L175:
 804:.\Protocolo.c **** 						}
 805:.\Protocolo.c **** 						if(nmangueras==3){
 3284              		.loc 1 805 0
 3285 0284 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3286 0286 032B     		cmp	r3, #3
 3287 0288 40F0E280 		bne	.L186
 806:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 2
 3288              		.loc 1 806 0
 3289 028c 0023     		movs	r3, #0
 3290 028e FB73     		strb	r3, [r7, #15]
 3291 0290 21E0     		b	.L187
 3292              	.L190:
 807:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3293              		.loc 1 807 0
 3294 0292 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3295 0294 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3296 0296 2232     		adds	r2, r2, #34
 3297 0298 1549     		ldr	r1, .L355+12
 3298 029a 8A5C     		ldrb	r2, [r1, r2]
 3299 029c D1B2     		uxtb	r1, r2
 3300 029e 124A     		ldr	r2, .L355+4
 3301 02a0 1344     		add	r3, r3, r2
 3302 02a2 0A46     		mov	r2, r1
 3303 02a4 9A76     		strb	r2, [r3, #26]
 808:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3304              		.loc 1 808 0
 3305 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3306 02a8 0F4A     		ldr	r2, .L355+4
 3307 02aa 1344     		add	r3, r3, r2
 3308 02ac 9B7E     		ldrb	r3, [r3, #26]
 3309 02ae DBB2     		uxtb	r3, r3
 3310 02b0 002B     		cmp	r3, #0
 3311 02b2 08D0     		beq	.L188
 3312              		.loc 1 808 0 is_stmt 0 discriminator 1
 3313 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3314 02b6 0C4A     		ldr	r2, .L355+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 75


 3315 02b8 1344     		add	r3, r3, r2
 3316 02ba 9B7E     		ldrb	r3, [r3, #26]
 3317 02bc DBB2     		uxtb	r3, r3
 3318 02be 03F0F003 		and	r3, r3, #240
 3319 02c2 E02B     		cmp	r3, #224
 3320 02c4 04D0     		beq	.L189
 3321              	.L188:
 809:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3322              		.loc 1 809 0 is_stmt 1
 3323 02c6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 810:.\Protocolo.c **** 									return 0;
 3324              		.loc 1 810 0
 3325 02ca 0023     		movs	r3, #0
 3326 02cc 00F0D9BE 		b	.L167
 3327              	.L189:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3328              		.loc 1 806 0 discriminator 2
 3329 02d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3330 02d2 0133     		adds	r3, r3, #1
 3331 02d4 FB73     		strb	r3, [r7, #15]
 3332              	.L187:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3333              		.loc 1 806 0 is_stmt 0 discriminator 1
 3334 02d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3335 02d8 072B     		cmp	r3, #7
 3336 02da DAD9     		bls	.L190
 811:.\Protocolo.c **** 								}								
 812:.\Protocolo.c **** 							}
 813:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3337              		.loc 1 813 0 is_stmt 1
 3338 02dc 0023     		movs	r3, #0
 3339 02de FB73     		strb	r3, [r7, #15]
 3340 02e0 2DE0     		b	.L191
 3341              	.L356:
 3342 02e2 00BF     		.align	2
 3343              	.L355:
 3344 02e4 00000000 		.word	rx_timeout
 3345 02e8 00000000 		.word	lado1
 3346 02ec 00000000 		.word	version
 3347 02f0 00000000 		.word	Surtidor_rxBuffer
 3348              	.L194:
 814:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3349              		.loc 1 814 0
 3350 02f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3351 02f6 0C33     		adds	r3, r3, #12
 3352 02f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3353 02fa 2B32     		adds	r2, r2, #43
 3354 02fc B349     		ldr	r1, .L357
 3355 02fe 8A5C     		ldrb	r2, [r1, r2]
 3356 0300 D1B2     		uxtb	r1, r2
 3357 0302 B34A     		ldr	r2, .L357+4
 3358 0304 1344     		add	r3, r3, r2
 3359 0306 0A46     		mov	r2, r1
 3360 0308 9A76     		strb	r2, [r3, #26]
 815:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3361              		.loc 1 815 0
 3362 030a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 76


 3363 030c 0C33     		adds	r3, r3, #12
 3364 030e B04A     		ldr	r2, .L357+4
 3365 0310 1344     		add	r3, r3, r2
 3366 0312 9B7E     		ldrb	r3, [r3, #26]
 3367 0314 DBB2     		uxtb	r3, r3
 3368 0316 002B     		cmp	r3, #0
 3369 0318 09D0     		beq	.L192
 3370              		.loc 1 815 0 is_stmt 0 discriminator 1
 3371 031a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3372 031c 0C33     		adds	r3, r3, #12
 3373 031e AC4A     		ldr	r2, .L357+4
 3374 0320 1344     		add	r3, r3, r2
 3375 0322 9B7E     		ldrb	r3, [r3, #26]
 3376 0324 DBB2     		uxtb	r3, r3
 3377 0326 03F0F003 		and	r3, r3, #240
 3378 032a E02B     		cmp	r3, #224
 3379 032c 04D0     		beq	.L193
 3380              	.L192:
 816:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3381              		.loc 1 816 0 is_stmt 1
 3382 032e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 817:.\Protocolo.c **** 									return 0;
 3383              		.loc 1 817 0
 3384 0332 0023     		movs	r3, #0
 3385 0334 00F0A5BE 		b	.L167
 3386              	.L193:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3387              		.loc 1 813 0 discriminator 2
 3388 0338 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3389 033a 0133     		adds	r3, r3, #1
 3390 033c FB73     		strb	r3, [r7, #15]
 3391              	.L191:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3392              		.loc 1 813 0 is_stmt 0 discriminator 1
 3393 033e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3394 0340 072B     		cmp	r3, #7
 3395 0342 D7D9     		bls	.L194
 818:.\Protocolo.c **** 								}								
 819:.\Protocolo.c **** 							}
 820:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3396              		.loc 1 820 0 is_stmt 1
 3397 0344 0023     		movs	r3, #0
 3398 0346 FB73     		strb	r3, [r7, #15]
 3399 0348 0DE0     		b	.L195
 3400              	.L196:
 821:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3401              		.loc 1 821 0 discriminator 3
 3402 034a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3403 034c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3404 034e 3432     		adds	r2, r2, #52
 3405 0350 9E49     		ldr	r1, .L357
 3406 0352 8A5C     		ldrb	r2, [r1, r2]
 3407 0354 D1B2     		uxtb	r1, r2
 3408 0356 9E4A     		ldr	r2, .L357+4
 3409 0358 1344     		add	r3, r3, r2
 3410 035a 0A46     		mov	r2, r1
 3411 035c 83F84F20 		strb	r2, [r3, #79]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 77


 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3412              		.loc 1 820 0 discriminator 3
 3413 0360 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3414 0362 0133     		adds	r3, r3, #1
 3415 0364 FB73     		strb	r3, [r7, #15]
 3416              	.L195:
 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3417              		.loc 1 820 0 is_stmt 0 discriminator 1
 3418 0366 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3419 0368 032B     		cmp	r3, #3
 3420 036a EED9     		bls	.L196
 822:.\Protocolo.c **** 							}					
 823:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 3
 3421              		.loc 1 823 0 is_stmt 1
 3422 036c 0023     		movs	r3, #0
 3423 036e FB73     		strb	r3, [r7, #15]
 3424 0370 24E0     		b	.L197
 3425              	.L200:
 824:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3426              		.loc 1 824 0
 3427 0372 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3428 0374 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3429 0376 4032     		adds	r2, r2, #64
 3430 0378 9449     		ldr	r1, .L357
 3431 037a 8A5C     		ldrb	r2, [r1, r2]
 3432 037c D1B2     		uxtb	r1, r2
 3433 037e 944A     		ldr	r2, .L357+4
 3434 0380 1344     		add	r3, r3, r2
 3435 0382 0A46     		mov	r2, r1
 3436 0384 83F83220 		strb	r2, [r3, #50]
 825:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 3437              		.loc 1 825 0
 3438 0388 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3439 038a 914A     		ldr	r2, .L357+4
 3440 038c 1344     		add	r3, r3, r2
 3441 038e 93F83230 		ldrb	r3, [r3, #50]
 3442 0392 DBB2     		uxtb	r3, r3
 3443 0394 002B     		cmp	r3, #0
 3444 0396 09D0     		beq	.L198
 3445              		.loc 1 825 0 is_stmt 0 discriminator 1
 3446 0398 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3447 039a 8D4A     		ldr	r2, .L357+4
 3448 039c 1344     		add	r3, r3, r2
 3449 039e 93F83230 		ldrb	r3, [r3, #50]
 3450 03a2 DBB2     		uxtb	r3, r3
 3451 03a4 03F0F003 		and	r3, r3, #240
 3452 03a8 E02B     		cmp	r3, #224
 3453 03aa 04D0     		beq	.L199
 3454              	.L198:
 826:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3455              		.loc 1 826 0 is_stmt 1
 3456 03ac FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 827:.\Protocolo.c **** 									return 0;
 3457              		.loc 1 827 0
 3458 03b0 0023     		movs	r3, #0
 3459 03b2 00F066BE 		b	.L167
 3460              	.L199:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 78


 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3461              		.loc 1 823 0 discriminator 2
 3462 03b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3463 03b8 0133     		adds	r3, r3, #1
 3464 03ba FB73     		strb	r3, [r7, #15]
 3465              	.L197:
 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3466              		.loc 1 823 0 is_stmt 0 discriminator 1
 3467 03bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3468 03be 072B     		cmp	r3, #7
 3469 03c0 D7D9     		bls	.L200
 828:.\Protocolo.c **** 								}								
 829:.\Protocolo.c **** 							}
 830:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3470              		.loc 1 830 0 is_stmt 1
 3471 03c2 0023     		movs	r3, #0
 3472 03c4 FB73     		strb	r3, [r7, #15]
 3473 03c6 27E0     		b	.L201
 3474              	.L204:
 831:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3475              		.loc 1 831 0
 3476 03c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3477 03ca 0C33     		adds	r3, r3, #12
 3478 03cc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3479 03ce 4932     		adds	r2, r2, #73
 3480 03d0 7E49     		ldr	r1, .L357
 3481 03d2 8A5C     		ldrb	r2, [r1, r2]
 3482 03d4 D1B2     		uxtb	r1, r2
 3483 03d6 7E4A     		ldr	r2, .L357+4
 3484 03d8 1344     		add	r3, r3, r2
 3485 03da 0A46     		mov	r2, r1
 3486 03dc 83F83220 		strb	r2, [r3, #50]
 832:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 3487              		.loc 1 832 0
 3488 03e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3489 03e2 0C33     		adds	r3, r3, #12
 3490 03e4 7A4A     		ldr	r2, .L357+4
 3491 03e6 1344     		add	r3, r3, r2
 3492 03e8 93F83230 		ldrb	r3, [r3, #50]
 3493 03ec DBB2     		uxtb	r3, r3
 3494 03ee 002B     		cmp	r3, #0
 3495 03f0 0AD0     		beq	.L202
 3496              		.loc 1 832 0 is_stmt 0 discriminator 1
 3497 03f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3498 03f4 0C33     		adds	r3, r3, #12
 3499 03f6 764A     		ldr	r2, .L357+4
 3500 03f8 1344     		add	r3, r3, r2
 3501 03fa 93F83230 		ldrb	r3, [r3, #50]
 3502 03fe DBB2     		uxtb	r3, r3
 3503 0400 03F0F003 		and	r3, r3, #240
 3504 0404 E02B     		cmp	r3, #224
 3505 0406 04D0     		beq	.L203
 3506              	.L202:
 833:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3507              		.loc 1 833 0 is_stmt 1
 3508 0408 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 834:.\Protocolo.c **** 									return 0;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 79


 3509              		.loc 1 834 0
 3510 040c 0023     		movs	r3, #0
 3511 040e 00F038BE 		b	.L167
 3512              	.L203:
 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3513              		.loc 1 830 0 discriminator 2
 3514 0412 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3515 0414 0133     		adds	r3, r3, #1
 3516 0416 FB73     		strb	r3, [r7, #15]
 3517              	.L201:
 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3518              		.loc 1 830 0 is_stmt 0 discriminator 1
 3519 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3520 041a 072B     		cmp	r3, #7
 3521 041c D4D9     		bls	.L204
 835:.\Protocolo.c **** 								}								
 836:.\Protocolo.c **** 							}
 837:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3522              		.loc 1 837 0 is_stmt 1
 3523 041e 0023     		movs	r3, #0
 3524 0420 FB73     		strb	r3, [r7, #15]
 3525 0422 0DE0     		b	.L205
 3526              	.L206:
 838:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3527              		.loc 1 838 0 discriminator 3
 3528 0424 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3529 0426 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3530 0428 5232     		adds	r2, r2, #82
 3531 042a 6849     		ldr	r1, .L357
 3532 042c 8A5C     		ldrb	r2, [r1, r2]
 3533 042e D1B2     		uxtb	r1, r2
 3534 0430 674A     		ldr	r2, .L357+4
 3535 0432 1344     		add	r3, r3, r2
 3536 0434 0A46     		mov	r2, r1
 3537 0436 83F85420 		strb	r2, [r3, #84]
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3538              		.loc 1 837 0 discriminator 3
 3539 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3540 043c 0133     		adds	r3, r3, #1
 3541 043e FB73     		strb	r3, [r7, #15]
 3542              	.L205:
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3543              		.loc 1 837 0 is_stmt 0 discriminator 1
 3544 0440 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3545 0442 032B     		cmp	r3, #3
 3546 0444 EED9     		bls	.L206
 839:.\Protocolo.c **** 							}
 840:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3547              		.loc 1 840 0 is_stmt 1
 3548 0446 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 841:.\Protocolo.c ****     						return 3;                            
 3549              		.loc 1 841 0
 3550 044a 0323     		movs	r3, #3
 3551 044c 00F019BE 		b	.L167
 3552              	.L186:
 842:.\Protocolo.c **** 						}
 843:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 80


 3553              		.loc 1 843 0
 3554 0450 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 844:.\Protocolo.c **** 						return 1;
 3555              		.loc 1 844 0
 3556 0454 0123     		movs	r3, #1
 3557 0456 00F014BE 		b	.L167
 3558              	.L159:
 845:.\Protocolo.c **** 					}
 846:.\Protocolo.c **** 					else{
 847:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3559              		.loc 1 847 0
 3560 045a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 848:.\Protocolo.c **** 						return 0;
 3561              		.loc 1 848 0
 3562 045e 0023     		movs	r3, #0
 3563 0460 00F00FBE 		b	.L167
 3564              	.L158:
 849:.\Protocolo.c **** 					}					
 850:.\Protocolo.c **** 				}
 851:.\Protocolo.c **** 				else{
 852:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 3565              		.loc 1 852 0
 3566 0464 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 853:.\Protocolo.c **** 					return 0;		
 3567              		.loc 1 853 0
 3568 0468 0023     		movs	r3, #0
 3569 046a 00F00ABE 		b	.L167
 3570              	.L156:
 854:.\Protocolo.c **** 				}
 855:.\Protocolo.c **** 			}
 856:.\Protocolo.c **** 			else{
 857:.\Protocolo.c **** 				CyDelay(900);
 3571              		.loc 1 857 0
 3572 046e 4FF46170 		mov	r0, #900
 3573 0472 FFF7FEFF 		bl	CyDelay
 858:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3574              		.loc 1 858 0
 3575 0476 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3576 047a 0346     		mov	r3, r0
 3577 047c FB73     		strb	r3, [r7, #15]
 859:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 3578              		.loc 1 859 0
 3579 047e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3580 0480 2E2B     		cmp	r3, #46
 3581 0482 06D0     		beq	.L207
 3582              		.loc 1 859 0 is_stmt 0 discriminator 1
 3583 0484 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3584 0486 582B     		cmp	r3, #88
 3585 0488 03D0     		beq	.L207
 3586              		.loc 1 859 0 discriminator 2
 3587 048a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3588 048c 822B     		cmp	r3, #130
 3589 048e 40F0F181 		bne	.L208
 3590              	.L207:
 860:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3591              		.loc 1 860 0 is_stmt 1
 3592 0492 4E4B     		ldr	r3, .L357
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 81


 3593 0494 1B78     		ldrb	r3, [r3]
 3594 0496 DBB2     		uxtb	r3, r3
 3595 0498 FF2B     		cmp	r3, #255
 3596 049a 40F0E681 		bne	.L209
 3597              		.loc 1 860 0 is_stmt 0 discriminator 1
 3598 049e 4B4B     		ldr	r3, .L357
 3599 04a0 5B78     		ldrb	r3, [r3, #1]
 3600 04a2 DBB2     		uxtb	r3, r3
 3601 04a4 F62B     		cmp	r3, #246
 3602 04a6 40F0E081 		bne	.L209
 3603              		.loc 1 860 0 discriminator 2
 3604 04aa 484B     		ldr	r3, .L357
 3605 04ac DB78     		ldrb	r3, [r3, #3]
 3606 04ae DBB2     		uxtb	r3, r3
 3607 04b0 F92B     		cmp	r3, #249
 3608 04b2 40F0DA81 		bne	.L209
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3609              		.loc 1 861 0 is_stmt 1
 3610 04b6 0023     		movs	r3, #0
 3611 04b8 BB73     		strb	r3, [r7, #14]
 3612 04ba 16E0     		b	.L210
 3613              	.L213:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3614              		.loc 1 862 0
 3615 04bc 0023     		movs	r3, #0
 3616 04be FB73     		strb	r3, [r7, #15]
 3617 04c0 0DE0     		b	.L211
 3618              	.L212:
 863:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3619              		.loc 1 863 0 discriminator 3
 3620 04c2 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3621 04c4 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 3622 04c6 4248     		ldr	r0, .L357+4
 3623 04c8 1346     		mov	r3, r2
 3624 04ca 5B00     		lsls	r3, r3, #1
 3625 04cc 1344     		add	r3, r3, r2
 3626 04ce DB00     		lsls	r3, r3, #3
 3627 04d0 0B44     		add	r3, r3, r1
 3628 04d2 0344     		add	r3, r3, r0
 3629 04d4 0022     		movs	r2, #0
 3630 04d6 9A70     		strb	r2, [r3, #2]
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3631              		.loc 1 862 0 discriminator 3
 3632 04d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3633 04da 0133     		adds	r3, r3, #1
 3634 04dc FB73     		strb	r3, [r7, #15]
 3635              	.L211:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3636              		.loc 1 862 0 is_stmt 0 discriminator 1
 3637 04de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3638 04e0 172B     		cmp	r3, #23
 3639 04e2 EED9     		bls	.L212
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3640              		.loc 1 861 0 is_stmt 1 discriminator 2
 3641 04e4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3642 04e6 0133     		adds	r3, r3, #1
 3643 04e8 BB73     		strb	r3, [r7, #14]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 82


 3644              	.L210:
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3645              		.loc 1 861 0 is_stmt 0 discriminator 1
 3646 04ea BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3647 04ec 022B     		cmp	r3, #2
 3648 04ee E5D9     		bls	.L213
 864:.\Protocolo.c ****                     		}
 865:.\Protocolo.c ****                     	}                        
 866:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3649              		.loc 1 866 0 is_stmt 1
 3650 04f0 0023     		movs	r3, #0
 3651 04f2 FB73     		strb	r3, [r7, #15]
 3652 04f4 21E0     		b	.L214
 3653              	.L217:
 867:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3654              		.loc 1 867 0
 3655 04f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3656 04f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3657 04fa 0432     		adds	r2, r2, #4
 3658 04fc 3349     		ldr	r1, .L357
 3659 04fe 8A5C     		ldrb	r2, [r1, r2]
 3660 0500 D1B2     		uxtb	r1, r2
 3661 0502 334A     		ldr	r2, .L357+4
 3662 0504 1344     		add	r3, r3, r2
 3663 0506 0A46     		mov	r2, r1
 3664 0508 9A70     		strb	r2, [r3, #2]
 868:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3665              		.loc 1 868 0
 3666 050a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3667 050c 304A     		ldr	r2, .L357+4
 3668 050e 1344     		add	r3, r3, r2
 3669 0510 9B78     		ldrb	r3, [r3, #2]
 3670 0512 DBB2     		uxtb	r3, r3
 3671 0514 002B     		cmp	r3, #0
 3672 0516 08D0     		beq	.L215
 3673              		.loc 1 868 0 is_stmt 0 discriminator 1
 3674 0518 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3675 051a 2D4A     		ldr	r2, .L357+4
 3676 051c 1344     		add	r3, r3, r2
 3677 051e 9B78     		ldrb	r3, [r3, #2]
 3678 0520 DBB2     		uxtb	r3, r3
 3679 0522 03F0F003 		and	r3, r3, #240
 3680 0526 E02B     		cmp	r3, #224
 3681 0528 04D0     		beq	.L216
 3682              	.L215:
 869:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3683              		.loc 1 869 0 is_stmt 1
 3684 052a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 870:.\Protocolo.c **** 								return 0;
 3685              		.loc 1 870 0
 3686 052e 0023     		movs	r3, #0
 3687 0530 00F0A7BD 		b	.L167
 3688              	.L216:
 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3689              		.loc 1 866 0 discriminator 2
 3690 0534 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3691 0536 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 83


 3692 0538 FB73     		strb	r3, [r7, #15]
 3693              	.L214:
 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3694              		.loc 1 866 0 is_stmt 0 discriminator 1
 3695 053a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3696 053c 0B2B     		cmp	r3, #11
 3697 053e DAD9     		bls	.L217
 871:.\Protocolo.c **** 							}							
 872:.\Protocolo.c **** 						}
 873:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3698              		.loc 1 873 0 is_stmt 1
 3699 0540 0023     		movs	r3, #0
 3700 0542 FB73     		strb	r3, [r7, #15]
 3701 0544 24E0     		b	.L218
 3702              	.L221:
 874:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3703              		.loc 1 874 0
 3704 0546 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3705 0548 0C33     		adds	r3, r3, #12
 3706 054a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3707 054c 1132     		adds	r2, r2, #17
 3708 054e 1F49     		ldr	r1, .L357
 3709 0550 8A5C     		ldrb	r2, [r1, r2]
 3710 0552 D1B2     		uxtb	r1, r2
 3711 0554 1E4A     		ldr	r2, .L357+4
 3712 0556 1344     		add	r3, r3, r2
 3713 0558 0A46     		mov	r2, r1
 3714 055a 9A70     		strb	r2, [r3, #2]
 875:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3715              		.loc 1 875 0
 3716 055c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3717 055e 0C33     		adds	r3, r3, #12
 3718 0560 1B4A     		ldr	r2, .L357+4
 3719 0562 1344     		add	r3, r3, r2
 3720 0564 9B78     		ldrb	r3, [r3, #2]
 3721 0566 DBB2     		uxtb	r3, r3
 3722 0568 002B     		cmp	r3, #0
 3723 056a 09D0     		beq	.L219
 3724              		.loc 1 875 0 is_stmt 0 discriminator 1
 3725 056c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3726 056e 0C33     		adds	r3, r3, #12
 3727 0570 174A     		ldr	r2, .L357+4
 3728 0572 1344     		add	r3, r3, r2
 3729 0574 9B78     		ldrb	r3, [r3, #2]
 3730 0576 DBB2     		uxtb	r3, r3
 3731 0578 03F0F003 		and	r3, r3, #240
 3732 057c E02B     		cmp	r3, #224
 3733 057e 04D0     		beq	.L220
 3734              	.L219:
 876:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3735              		.loc 1 876 0 is_stmt 1
 3736 0580 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 877:.\Protocolo.c **** 								return 0;
 3737              		.loc 1 877 0
 3738 0584 0023     		movs	r3, #0
 3739 0586 00F07CBD 		b	.L167
 3740              	.L220:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 84


 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3741              		.loc 1 873 0 discriminator 2
 3742 058a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3743 058c 0133     		adds	r3, r3, #1
 3744 058e FB73     		strb	r3, [r7, #15]
 3745              	.L218:
 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3746              		.loc 1 873 0 is_stmt 0 discriminator 1
 3747 0590 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3748 0592 0B2B     		cmp	r3, #11
 3749 0594 D7D9     		bls	.L221
 878:.\Protocolo.c **** 							}							
 879:.\Protocolo.c **** 						}
 880:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3750              		.loc 1 880 0 is_stmt 1
 3751 0596 0023     		movs	r3, #0
 3752 0598 FB73     		strb	r3, [r7, #15]
 3753 059a 0DE0     		b	.L222
 3754              	.L223:
 881:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3755              		.loc 1 881 0 discriminator 3
 3756 059c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3757 059e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3758 05a0 1E32     		adds	r2, r2, #30
 3759 05a2 0A49     		ldr	r1, .L357
 3760 05a4 8A5C     		ldrb	r2, [r1, r2]
 3761 05a6 D1B2     		uxtb	r1, r2
 3762 05a8 094A     		ldr	r2, .L357+4
 3763 05aa 1344     		add	r3, r3, r2
 3764 05ac 0A46     		mov	r2, r1
 3765 05ae 83F84A20 		strb	r2, [r3, #74]
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3766              		.loc 1 880 0 discriminator 3
 3767 05b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3768 05b4 0133     		adds	r3, r3, #1
 3769 05b6 FB73     		strb	r3, [r7, #15]
 3770              	.L222:
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3771              		.loc 1 880 0 is_stmt 0 discriminator 1
 3772 05b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3773 05ba 042B     		cmp	r3, #4
 3774 05bc EED9     		bls	.L223
 882:.\Protocolo.c **** 						}				
 883:.\Protocolo.c **** 						if(nmangueras==2){
 3775              		.loc 1 883 0 is_stmt 1
 3776 05be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3777 05c0 022B     		cmp	r3, #2
 3778 05c2 70D1     		bne	.L224
 884:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3779              		.loc 1 884 0
 3780 05c4 0023     		movs	r3, #0
 3781 05c6 FB73     		strb	r3, [r7, #15]
 3782 05c8 26E0     		b	.L225
 3783              	.L358:
 3784 05ca 00BF     		.align	2
 3785              	.L357:
 3786 05cc 00000000 		.word	Surtidor_rxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 85


 3787 05d0 00000000 		.word	lado1
 3788              	.L228:
 885:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3789              		.loc 1 885 0
 3790 05d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3791 05d6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3792 05d8 2E32     		adds	r2, r2, #46
 3793 05da A949     		ldr	r1, .L359
 3794 05dc 8A5C     		ldrb	r2, [r1, r2]
 3795 05de D1B2     		uxtb	r1, r2
 3796 05e0 A84A     		ldr	r2, .L359+4
 3797 05e2 1344     		add	r3, r3, r2
 3798 05e4 0A46     		mov	r2, r1
 3799 05e6 9A76     		strb	r2, [r3, #26]
 886:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3800              		.loc 1 886 0
 3801 05e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3802 05ea A64A     		ldr	r2, .L359+4
 3803 05ec 1344     		add	r3, r3, r2
 3804 05ee 9B7E     		ldrb	r3, [r3, #26]
 3805 05f0 DBB2     		uxtb	r3, r3
 3806 05f2 002B     		cmp	r3, #0
 3807 05f4 08D0     		beq	.L226
 3808              		.loc 1 886 0 is_stmt 0 discriminator 1
 3809 05f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3810 05f8 A24A     		ldr	r2, .L359+4
 3811 05fa 1344     		add	r3, r3, r2
 3812 05fc 9B7E     		ldrb	r3, [r3, #26]
 3813 05fe DBB2     		uxtb	r3, r3
 3814 0600 03F0F003 		and	r3, r3, #240
 3815 0604 E02B     		cmp	r3, #224
 3816 0606 04D0     		beq	.L227
 3817              	.L226:
 887:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3818              		.loc 1 887 0 is_stmt 1
 3819 0608 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 888:.\Protocolo.c **** 									return 0;
 3820              		.loc 1 888 0
 3821 060c 0023     		movs	r3, #0
 3822 060e 00F038BD 		b	.L167
 3823              	.L227:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3824              		.loc 1 884 0 discriminator 2
 3825 0612 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3826 0614 0133     		adds	r3, r3, #1
 3827 0616 FB73     		strb	r3, [r7, #15]
 3828              	.L225:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3829              		.loc 1 884 0 is_stmt 0 discriminator 1
 3830 0618 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3831 061a 0B2B     		cmp	r3, #11
 3832 061c DAD9     		bls	.L228
 889:.\Protocolo.c **** 								}								
 890:.\Protocolo.c **** 							}
 891:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3833              		.loc 1 891 0 is_stmt 1
 3834 061e 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 86


 3835 0620 FB73     		strb	r3, [r7, #15]
 3836 0622 24E0     		b	.L229
 3837              	.L232:
 892:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3838              		.loc 1 892 0
 3839 0624 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3840 0626 0C33     		adds	r3, r3, #12
 3841 0628 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3842 062a 3B32     		adds	r2, r2, #59
 3843 062c 9449     		ldr	r1, .L359
 3844 062e 8A5C     		ldrb	r2, [r1, r2]
 3845 0630 D1B2     		uxtb	r1, r2
 3846 0632 944A     		ldr	r2, .L359+4
 3847 0634 1344     		add	r3, r3, r2
 3848 0636 0A46     		mov	r2, r1
 3849 0638 9A76     		strb	r2, [r3, #26]
 893:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3850              		.loc 1 893 0
 3851 063a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3852 063c 0C33     		adds	r3, r3, #12
 3853 063e 914A     		ldr	r2, .L359+4
 3854 0640 1344     		add	r3, r3, r2
 3855 0642 9B7E     		ldrb	r3, [r3, #26]
 3856 0644 DBB2     		uxtb	r3, r3
 3857 0646 002B     		cmp	r3, #0
 3858 0648 09D0     		beq	.L230
 3859              		.loc 1 893 0 is_stmt 0 discriminator 1
 3860 064a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3861 064c 0C33     		adds	r3, r3, #12
 3862 064e 8D4A     		ldr	r2, .L359+4
 3863 0650 1344     		add	r3, r3, r2
 3864 0652 9B7E     		ldrb	r3, [r3, #26]
 3865 0654 DBB2     		uxtb	r3, r3
 3866 0656 03F0F003 		and	r3, r3, #240
 3867 065a E02B     		cmp	r3, #224
 3868 065c 04D0     		beq	.L231
 3869              	.L230:
 894:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3870              		.loc 1 894 0 is_stmt 1
 3871 065e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 895:.\Protocolo.c **** 									return 0;
 3872              		.loc 1 895 0
 3873 0662 0023     		movs	r3, #0
 3874 0664 00F00DBD 		b	.L167
 3875              	.L231:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3876              		.loc 1 891 0 discriminator 2
 3877 0668 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3878 066a 0133     		adds	r3, r3, #1
 3879 066c FB73     		strb	r3, [r7, #15]
 3880              	.L229:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3881              		.loc 1 891 0 is_stmt 0 discriminator 1
 3882 066e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3883 0670 0B2B     		cmp	r3, #11
 3884 0672 D7D9     		bls	.L232
 896:.\Protocolo.c **** 								}								
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 87


 897:.\Protocolo.c **** 							}
 898:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3885              		.loc 1 898 0 is_stmt 1
 3886 0674 0023     		movs	r3, #0
 3887 0676 FB73     		strb	r3, [r7, #15]
 3888 0678 0DE0     		b	.L233
 3889              	.L234:
 899:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3890              		.loc 1 899 0 discriminator 3
 3891 067a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3892 067c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3893 067e 4832     		adds	r2, r2, #72
 3894 0680 7F49     		ldr	r1, .L359
 3895 0682 8A5C     		ldrb	r2, [r1, r2]
 3896 0684 D1B2     		uxtb	r1, r2
 3897 0686 7F4A     		ldr	r2, .L359+4
 3898 0688 1344     		add	r3, r3, r2
 3899 068a 0A46     		mov	r2, r1
 3900 068c 83F84F20 		strb	r2, [r3, #79]
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3901              		.loc 1 898 0 discriminator 3
 3902 0690 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3903 0692 0133     		adds	r3, r3, #1
 3904 0694 FB73     		strb	r3, [r7, #15]
 3905              	.L233:
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3906              		.loc 1 898 0 is_stmt 0 discriminator 1
 3907 0696 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3908 0698 042B     		cmp	r3, #4
 3909 069a EED9     		bls	.L234
 900:.\Protocolo.c **** 							}
 901:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3910              		.loc 1 901 0 is_stmt 1
 3911 069c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 902:.\Protocolo.c ****     						return 2;                            
 3912              		.loc 1 902 0
 3913 06a0 0223     		movs	r3, #2
 3914 06a2 00F0EEBC 		b	.L167
 3915              	.L224:
 903:.\Protocolo.c **** 						}
 904:.\Protocolo.c **** 						if(nmangueras==3){
 3916              		.loc 1 904 0
 3917 06a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3918 06a8 032B     		cmp	r3, #3
 3919 06aa 40F0D980 		bne	.L235
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3920              		.loc 1 905 0
 3921 06ae 0023     		movs	r3, #0
 3922 06b0 FB73     		strb	r3, [r7, #15]
 3923 06b2 21E0     		b	.L236
 3924              	.L239:
 906:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3925              		.loc 1 906 0
 3926 06b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3927 06b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3928 06b8 2E32     		adds	r2, r2, #46
 3929 06ba 7149     		ldr	r1, .L359
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 88


 3930 06bc 8A5C     		ldrb	r2, [r1, r2]
 3931 06be D1B2     		uxtb	r1, r2
 3932 06c0 704A     		ldr	r2, .L359+4
 3933 06c2 1344     		add	r3, r3, r2
 3934 06c4 0A46     		mov	r2, r1
 3935 06c6 9A76     		strb	r2, [r3, #26]
 907:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3936              		.loc 1 907 0
 3937 06c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3938 06ca 6E4A     		ldr	r2, .L359+4
 3939 06cc 1344     		add	r3, r3, r2
 3940 06ce 9B7E     		ldrb	r3, [r3, #26]
 3941 06d0 DBB2     		uxtb	r3, r3
 3942 06d2 002B     		cmp	r3, #0
 3943 06d4 08D0     		beq	.L237
 3944              		.loc 1 907 0 is_stmt 0 discriminator 1
 3945 06d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3946 06d8 6A4A     		ldr	r2, .L359+4
 3947 06da 1344     		add	r3, r3, r2
 3948 06dc 9B7E     		ldrb	r3, [r3, #26]
 3949 06de DBB2     		uxtb	r3, r3
 3950 06e0 03F0F003 		and	r3, r3, #240
 3951 06e4 E02B     		cmp	r3, #224
 3952 06e6 04D0     		beq	.L238
 3953              	.L237:
 908:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3954              		.loc 1 908 0 is_stmt 1
 3955 06e8 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 909:.\Protocolo.c **** 									return 0;
 3956              		.loc 1 909 0
 3957 06ec 0023     		movs	r3, #0
 3958 06ee 00F0C8BC 		b	.L167
 3959              	.L238:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3960              		.loc 1 905 0 discriminator 2
 3961 06f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3962 06f4 0133     		adds	r3, r3, #1
 3963 06f6 FB73     		strb	r3, [r7, #15]
 3964              	.L236:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3965              		.loc 1 905 0 is_stmt 0 discriminator 1
 3966 06f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3967 06fa 0B2B     		cmp	r3, #11
 3968 06fc DAD9     		bls	.L239
 910:.\Protocolo.c **** 								}								
 911:.\Protocolo.c **** 							}
 912:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3969              		.loc 1 912 0 is_stmt 1
 3970 06fe 0023     		movs	r3, #0
 3971 0700 FB73     		strb	r3, [r7, #15]
 3972 0702 24E0     		b	.L240
 3973              	.L243:
 913:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3974              		.loc 1 913 0
 3975 0704 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3976 0706 0C33     		adds	r3, r3, #12
 3977 0708 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 89


 3978 070a 3B32     		adds	r2, r2, #59
 3979 070c 5C49     		ldr	r1, .L359
 3980 070e 8A5C     		ldrb	r2, [r1, r2]
 3981 0710 D1B2     		uxtb	r1, r2
 3982 0712 5C4A     		ldr	r2, .L359+4
 3983 0714 1344     		add	r3, r3, r2
 3984 0716 0A46     		mov	r2, r1
 3985 0718 9A76     		strb	r2, [r3, #26]
 914:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3986              		.loc 1 914 0
 3987 071a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3988 071c 0C33     		adds	r3, r3, #12
 3989 071e 594A     		ldr	r2, .L359+4
 3990 0720 1344     		add	r3, r3, r2
 3991 0722 9B7E     		ldrb	r3, [r3, #26]
 3992 0724 DBB2     		uxtb	r3, r3
 3993 0726 002B     		cmp	r3, #0
 3994 0728 09D0     		beq	.L241
 3995              		.loc 1 914 0 is_stmt 0 discriminator 1
 3996 072a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3997 072c 0C33     		adds	r3, r3, #12
 3998 072e 554A     		ldr	r2, .L359+4
 3999 0730 1344     		add	r3, r3, r2
 4000 0732 9B7E     		ldrb	r3, [r3, #26]
 4001 0734 DBB2     		uxtb	r3, r3
 4002 0736 03F0F003 		and	r3, r3, #240
 4003 073a E02B     		cmp	r3, #224
 4004 073c 04D0     		beq	.L242
 4005              	.L241:
 915:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4006              		.loc 1 915 0 is_stmt 1
 4007 073e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 916:.\Protocolo.c **** 									return 0;
 4008              		.loc 1 916 0
 4009 0742 0023     		movs	r3, #0
 4010 0744 00F09DBC 		b	.L167
 4011              	.L242:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4012              		.loc 1 912 0 discriminator 2
 4013 0748 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4014 074a 0133     		adds	r3, r3, #1
 4015 074c FB73     		strb	r3, [r7, #15]
 4016              	.L240:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4017              		.loc 1 912 0 is_stmt 0 discriminator 1
 4018 074e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4019 0750 0B2B     		cmp	r3, #11
 4020 0752 D7D9     		bls	.L243
 917:.\Protocolo.c **** 								}								
 918:.\Protocolo.c **** 							}
 919:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4021              		.loc 1 919 0 is_stmt 1
 4022 0754 0023     		movs	r3, #0
 4023 0756 FB73     		strb	r3, [r7, #15]
 4024 0758 0DE0     		b	.L244
 4025              	.L245:
 920:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 90


 4026              		.loc 1 920 0 discriminator 3
 4027 075a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4028 075c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4029 075e 4832     		adds	r2, r2, #72
 4030 0760 4749     		ldr	r1, .L359
 4031 0762 8A5C     		ldrb	r2, [r1, r2]
 4032 0764 D1B2     		uxtb	r1, r2
 4033 0766 474A     		ldr	r2, .L359+4
 4034 0768 1344     		add	r3, r3, r2
 4035 076a 0A46     		mov	r2, r1
 4036 076c 83F84F20 		strb	r2, [r3, #79]
 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4037              		.loc 1 919 0 discriminator 3
 4038 0770 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4039 0772 0133     		adds	r3, r3, #1
 4040 0774 FB73     		strb	r3, [r7, #15]
 4041              	.L244:
 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4042              		.loc 1 919 0 is_stmt 0 discriminator 1
 4043 0776 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4044 0778 042B     		cmp	r3, #4
 4045 077a EED9     		bls	.L245
 921:.\Protocolo.c **** 							}					
 922:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4046              		.loc 1 922 0 is_stmt 1
 4047 077c 0023     		movs	r3, #0
 4048 077e FB73     		strb	r3, [r7, #15]
 4049 0780 24E0     		b	.L246
 4050              	.L249:
 923:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4051              		.loc 1 923 0
 4052 0782 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4053 0784 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4054 0786 5832     		adds	r2, r2, #88
 4055 0788 3D49     		ldr	r1, .L359
 4056 078a 8A5C     		ldrb	r2, [r1, r2]
 4057 078c D1B2     		uxtb	r1, r2
 4058 078e 3D4A     		ldr	r2, .L359+4
 4059 0790 1344     		add	r3, r3, r2
 4060 0792 0A46     		mov	r2, r1
 4061 0794 83F83220 		strb	r2, [r3, #50]
 924:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 4062              		.loc 1 924 0
 4063 0798 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4064 079a 3A4A     		ldr	r2, .L359+4
 4065 079c 1344     		add	r3, r3, r2
 4066 079e 93F83230 		ldrb	r3, [r3, #50]
 4067 07a2 DBB2     		uxtb	r3, r3
 4068 07a4 002B     		cmp	r3, #0
 4069 07a6 09D0     		beq	.L247
 4070              		.loc 1 924 0 is_stmt 0 discriminator 1
 4071 07a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4072 07aa 364A     		ldr	r2, .L359+4
 4073 07ac 1344     		add	r3, r3, r2
 4074 07ae 93F83230 		ldrb	r3, [r3, #50]
 4075 07b2 DBB2     		uxtb	r3, r3
 4076 07b4 03F0F003 		and	r3, r3, #240
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 91


 4077 07b8 E02B     		cmp	r3, #224
 4078 07ba 04D0     		beq	.L248
 4079              	.L247:
 925:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4080              		.loc 1 925 0 is_stmt 1
 4081 07bc FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 926:.\Protocolo.c **** 									return 0;
 4082              		.loc 1 926 0
 4083 07c0 0023     		movs	r3, #0
 4084 07c2 00F05EBC 		b	.L167
 4085              	.L248:
 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4086              		.loc 1 922 0 discriminator 2
 4087 07c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4088 07c8 0133     		adds	r3, r3, #1
 4089 07ca FB73     		strb	r3, [r7, #15]
 4090              	.L246:
 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4091              		.loc 1 922 0 is_stmt 0 discriminator 1
 4092 07cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4093 07ce 0B2B     		cmp	r3, #11
 4094 07d0 D7D9     		bls	.L249
 927:.\Protocolo.c **** 								}								
 928:.\Protocolo.c **** 							}
 929:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4095              		.loc 1 929 0 is_stmt 1
 4096 07d2 0023     		movs	r3, #0
 4097 07d4 FB73     		strb	r3, [r7, #15]
 4098 07d6 27E0     		b	.L250
 4099              	.L253:
 930:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4100              		.loc 1 930 0
 4101 07d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4102 07da 0C33     		adds	r3, r3, #12
 4103 07dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4104 07de 6532     		adds	r2, r2, #101
 4105 07e0 2749     		ldr	r1, .L359
 4106 07e2 8A5C     		ldrb	r2, [r1, r2]
 4107 07e4 D1B2     		uxtb	r1, r2
 4108 07e6 274A     		ldr	r2, .L359+4
 4109 07e8 1344     		add	r3, r3, r2
 4110 07ea 0A46     		mov	r2, r1
 4111 07ec 83F83220 		strb	r2, [r3, #50]
 931:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 4112              		.loc 1 931 0
 4113 07f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4114 07f2 0C33     		adds	r3, r3, #12
 4115 07f4 234A     		ldr	r2, .L359+4
 4116 07f6 1344     		add	r3, r3, r2
 4117 07f8 93F83230 		ldrb	r3, [r3, #50]
 4118 07fc DBB2     		uxtb	r3, r3
 4119 07fe 002B     		cmp	r3, #0
 4120 0800 0AD0     		beq	.L251
 4121              		.loc 1 931 0 is_stmt 0 discriminator 1
 4122 0802 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4123 0804 0C33     		adds	r3, r3, #12
 4124 0806 1F4A     		ldr	r2, .L359+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 92


 4125 0808 1344     		add	r3, r3, r2
 4126 080a 93F83230 		ldrb	r3, [r3, #50]
 4127 080e DBB2     		uxtb	r3, r3
 4128 0810 03F0F003 		and	r3, r3, #240
 4129 0814 E02B     		cmp	r3, #224
 4130 0816 04D0     		beq	.L252
 4131              	.L251:
 932:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4132              		.loc 1 932 0 is_stmt 1
 4133 0818 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 933:.\Protocolo.c **** 									return 0;
 4134              		.loc 1 933 0
 4135 081c 0023     		movs	r3, #0
 4136 081e 00F030BC 		b	.L167
 4137              	.L252:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4138              		.loc 1 929 0 discriminator 2
 4139 0822 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4140 0824 0133     		adds	r3, r3, #1
 4141 0826 FB73     		strb	r3, [r7, #15]
 4142              	.L250:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4143              		.loc 1 929 0 is_stmt 0 discriminator 1
 4144 0828 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4145 082a 0B2B     		cmp	r3, #11
 4146 082c D4D9     		bls	.L253
 934:.\Protocolo.c **** 								}								
 935:.\Protocolo.c **** 							}
 936:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4147              		.loc 1 936 0 is_stmt 1
 4148 082e 0023     		movs	r3, #0
 4149 0830 FB73     		strb	r3, [r7, #15]
 4150 0832 0DE0     		b	.L254
 4151              	.L255:
 937:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4152              		.loc 1 937 0 discriminator 3
 4153 0834 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4154 0836 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4155 0838 7232     		adds	r2, r2, #114
 4156 083a 1149     		ldr	r1, .L359
 4157 083c 8A5C     		ldrb	r2, [r1, r2]
 4158 083e D1B2     		uxtb	r1, r2
 4159 0840 104A     		ldr	r2, .L359+4
 4160 0842 1344     		add	r3, r3, r2
 4161 0844 0A46     		mov	r2, r1
 4162 0846 83F85420 		strb	r2, [r3, #84]
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4163              		.loc 1 936 0 discriminator 3
 4164 084a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4165 084c 0133     		adds	r3, r3, #1
 4166 084e FB73     		strb	r3, [r7, #15]
 4167              	.L254:
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4168              		.loc 1 936 0 is_stmt 0 discriminator 1
 4169 0850 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4170 0852 042B     		cmp	r3, #4
 4171 0854 EED9     		bls	.L255
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 93


 938:.\Protocolo.c **** 							}
 939:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4172              		.loc 1 939 0 is_stmt 1
 4173 0856 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 940:.\Protocolo.c ****     						return 3;                            
 4174              		.loc 1 940 0
 4175 085a 0323     		movs	r3, #3
 4176 085c 00F011BC 		b	.L167
 4177              	.L235:
 941:.\Protocolo.c **** 						}
 942:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4178              		.loc 1 942 0
 4179 0860 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 943:.\Protocolo.c **** 						return 1;			
 4180              		.loc 1 943 0
 4181 0864 0123     		movs	r3, #1
 4182 0866 00F00CBC 		b	.L167
 4183              	.L209:
 944:.\Protocolo.c **** 					}
 945:.\Protocolo.c **** 					else{
 946:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4184              		.loc 1 946 0
 4185 086a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 947:.\Protocolo.c **** 						return 0;					
 4186              		.loc 1 947 0
 4187 086e 0023     		movs	r3, #0
 4188 0870 00F007BC 		b	.L167
 4189              	.L208:
 948:.\Protocolo.c **** 					}
 949:.\Protocolo.c **** 				}
 950:.\Protocolo.c **** 				else{
 951:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4190              		.loc 1 951 0
 4191 0874 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 952:.\Protocolo.c **** 					return 0;		
 4192              		.loc 1 952 0
 4193 0878 0023     		movs	r3, #0
 4194 087a 00F002BC 		b	.L167
 4195              	.L360:
 4196 087e 00BF     		.align	2
 4197              	.L359:
 4198 0880 00000000 		.word	Surtidor_rxBuffer
 4199 0884 00000000 		.word	lado1
 4200              	.L155:
 953:.\Protocolo.c **** 				}	
 954:.\Protocolo.c **** 			}
 955:.\Protocolo.c **** 		}
 956:.\Protocolo.c **** 		else{
 957:.\Protocolo.c **** 			if(version[1]!=7){
 4201              		.loc 1 957 0
 4202 0888 A24B     		ldr	r3, .L361
 4203 088a 5B78     		ldrb	r3, [r3, #1]
 4204 088c DBB2     		uxtb	r3, r3
 4205 088e 072B     		cmp	r3, #7
 4206 0890 00F0FC81 		beq	.L256
 958:.\Protocolo.c **** 				CyDelay(900);
 4207              		.loc 1 958 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 94


 4208 0894 4FF46170 		mov	r0, #900
 4209 0898 FFF7FEFF 		bl	CyDelay
 959:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4210              		.loc 1 959 0
 4211 089c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4212 08a0 0346     		mov	r3, r0
 4213 08a2 FB73     		strb	r3, [r7, #15]
 960:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){				
 4214              		.loc 1 960 0
 4215 08a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4216 08a6 222B     		cmp	r3, #34
 4217 08a8 06D0     		beq	.L257
 4218              		.loc 1 960 0 is_stmt 0 discriminator 1
 4219 08aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4220 08ac 402B     		cmp	r3, #64
 4221 08ae 03D0     		beq	.L257
 4222              		.loc 1 960 0 discriminator 2
 4223 08b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4224 08b2 5E2B     		cmp	r3, #94
 4225 08b4 40F0E681 		bne	.L258
 4226              	.L257:
 961:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4227              		.loc 1 961 0 is_stmt 1
 4228 08b8 974B     		ldr	r3, .L361+4
 4229 08ba 1B78     		ldrb	r3, [r3]
 4230 08bc DBB2     		uxtb	r3, r3
 4231 08be FF2B     		cmp	r3, #255
 4232 08c0 40F0DC81 		bne	.L259
 4233              		.loc 1 961 0 is_stmt 0 discriminator 1
 4234 08c4 944B     		ldr	r3, .L361+4
 4235 08c6 5B78     		ldrb	r3, [r3, #1]
 4236 08c8 DBB2     		uxtb	r3, r3
 4237 08ca F62B     		cmp	r3, #246
 4238 08cc 40F0D681 		bne	.L259
 4239              		.loc 1 961 0 discriminator 2
 4240 08d0 914B     		ldr	r3, .L361+4
 4241 08d2 DB78     		ldrb	r3, [r3, #3]
 4242 08d4 DBB2     		uxtb	r3, r3
 4243 08d6 F92B     		cmp	r3, #249
 4244 08d8 40F0D081 		bne	.L259
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4245              		.loc 1 962 0 is_stmt 1
 4246 08dc 0023     		movs	r3, #0
 4247 08de BB73     		strb	r3, [r7, #14]
 4248 08e0 16E0     		b	.L260
 4249              	.L263:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4250              		.loc 1 963 0
 4251 08e2 0023     		movs	r3, #0
 4252 08e4 FB73     		strb	r3, [r7, #15]
 4253 08e6 0DE0     		b	.L261
 4254              	.L262:
 964:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4255              		.loc 1 964 0 discriminator 3
 4256 08e8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4257 08ea F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4258 08ec 8B48     		ldr	r0, .L361+8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 95


 4259 08ee 1346     		mov	r3, r2
 4260 08f0 5B00     		lsls	r3, r3, #1
 4261 08f2 1344     		add	r3, r3, r2
 4262 08f4 DB00     		lsls	r3, r3, #3
 4263 08f6 0B44     		add	r3, r3, r1
 4264 08f8 0344     		add	r3, r3, r0
 4265 08fa 0022     		movs	r2, #0
 4266 08fc 9A70     		strb	r2, [r3, #2]
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4267              		.loc 1 963 0 discriminator 3
 4268 08fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4269 0900 0133     		adds	r3, r3, #1
 4270 0902 FB73     		strb	r3, [r7, #15]
 4271              	.L261:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4272              		.loc 1 963 0 is_stmt 0 discriminator 1
 4273 0904 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4274 0906 172B     		cmp	r3, #23
 4275 0908 EED9     		bls	.L262
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4276              		.loc 1 962 0 is_stmt 1 discriminator 2
 4277 090a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4278 090c 0133     		adds	r3, r3, #1
 4279 090e BB73     		strb	r3, [r7, #14]
 4280              	.L260:
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4281              		.loc 1 962 0 is_stmt 0 discriminator 1
 4282 0910 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4283 0912 022B     		cmp	r3, #2
 4284 0914 E5D9     		bls	.L263
 965:.\Protocolo.c ****                     		}
 966:.\Protocolo.c ****                     	}                        
 967:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4285              		.loc 1 967 0 is_stmt 1
 4286 0916 0023     		movs	r3, #0
 4287 0918 FB73     		strb	r3, [r7, #15]
 4288 091a 20E0     		b	.L264
 4289              	.L267:
 968:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4290              		.loc 1 968 0
 4291 091c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4292 091e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4293 0920 0432     		adds	r2, r2, #4
 4294 0922 7D49     		ldr	r1, .L361+4
 4295 0924 8A5C     		ldrb	r2, [r1, r2]
 4296 0926 D1B2     		uxtb	r1, r2
 4297 0928 7C4A     		ldr	r2, .L361+8
 4298 092a 1344     		add	r3, r3, r2
 4299 092c 0A46     		mov	r2, r1
 4300 092e 9A70     		strb	r2, [r3, #2]
 969:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4301              		.loc 1 969 0
 4302 0930 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4303 0932 7A4A     		ldr	r2, .L361+8
 4304 0934 1344     		add	r3, r3, r2
 4305 0936 9B78     		ldrb	r3, [r3, #2]
 4306 0938 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 96


 4307 093a 002B     		cmp	r3, #0
 4308 093c 08D0     		beq	.L265
 4309              		.loc 1 969 0 is_stmt 0 discriminator 1
 4310 093e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4311 0940 764A     		ldr	r2, .L361+8
 4312 0942 1344     		add	r3, r3, r2
 4313 0944 9B78     		ldrb	r3, [r3, #2]
 4314 0946 DBB2     		uxtb	r3, r3
 4315 0948 03F0F003 		and	r3, r3, #240
 4316 094c E02B     		cmp	r3, #224
 4317 094e 03D0     		beq	.L266
 4318              	.L265:
 970:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4319              		.loc 1 970 0 is_stmt 1
 4320 0950 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 971:.\Protocolo.c **** 								return 0;
 4321              		.loc 1 971 0
 4322 0954 0023     		movs	r3, #0
 4323 0956 94E3     		b	.L167
 4324              	.L266:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4325              		.loc 1 967 0 discriminator 2
 4326 0958 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4327 095a 0133     		adds	r3, r3, #1
 4328 095c FB73     		strb	r3, [r7, #15]
 4329              	.L264:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4330              		.loc 1 967 0 is_stmt 0 discriminator 1
 4331 095e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4332 0960 072B     		cmp	r3, #7
 4333 0962 DBD9     		bls	.L267
 972:.\Protocolo.c **** 							}							
 973:.\Protocolo.c **** 						}
 974:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4334              		.loc 1 974 0 is_stmt 1
 4335 0964 0023     		movs	r3, #0
 4336 0966 FB73     		strb	r3, [r7, #15]
 4337 0968 23E0     		b	.L268
 4338              	.L271:
 975:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4339              		.loc 1 975 0
 4340 096a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4341 096c 0C33     		adds	r3, r3, #12
 4342 096e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4343 0970 0D32     		adds	r2, r2, #13
 4344 0972 6949     		ldr	r1, .L361+4
 4345 0974 8A5C     		ldrb	r2, [r1, r2]
 4346 0976 D1B2     		uxtb	r1, r2
 4347 0978 684A     		ldr	r2, .L361+8
 4348 097a 1344     		add	r3, r3, r2
 4349 097c 0A46     		mov	r2, r1
 4350 097e 9A70     		strb	r2, [r3, #2]
 976:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4351              		.loc 1 976 0
 4352 0980 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4353 0982 0C33     		adds	r3, r3, #12
 4354 0984 654A     		ldr	r2, .L361+8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 97


 4355 0986 1344     		add	r3, r3, r2
 4356 0988 9B78     		ldrb	r3, [r3, #2]
 4357 098a DBB2     		uxtb	r3, r3
 4358 098c 002B     		cmp	r3, #0
 4359 098e 09D0     		beq	.L269
 4360              		.loc 1 976 0 is_stmt 0 discriminator 1
 4361 0990 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4362 0992 0C33     		adds	r3, r3, #12
 4363 0994 614A     		ldr	r2, .L361+8
 4364 0996 1344     		add	r3, r3, r2
 4365 0998 9B78     		ldrb	r3, [r3, #2]
 4366 099a DBB2     		uxtb	r3, r3
 4367 099c 03F0F003 		and	r3, r3, #240
 4368 09a0 E02B     		cmp	r3, #224
 4369 09a2 03D0     		beq	.L270
 4370              	.L269:
 977:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4371              		.loc 1 977 0 is_stmt 1
 4372 09a4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 978:.\Protocolo.c **** 								return 0;
 4373              		.loc 1 978 0
 4374 09a8 0023     		movs	r3, #0
 4375 09aa 6AE3     		b	.L167
 4376              	.L270:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4377              		.loc 1 974 0 discriminator 2
 4378 09ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4379 09ae 0133     		adds	r3, r3, #1
 4380 09b0 FB73     		strb	r3, [r7, #15]
 4381              	.L268:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4382              		.loc 1 974 0 is_stmt 0 discriminator 1
 4383 09b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4384 09b4 072B     		cmp	r3, #7
 4385 09b6 D8D9     		bls	.L271
 979:.\Protocolo.c **** 							}							
 980:.\Protocolo.c **** 						}
 981:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 4386              		.loc 1 981 0 is_stmt 1
 4387 09b8 0023     		movs	r3, #0
 4388 09ba FB73     		strb	r3, [r7, #15]
 4389 09bc 0DE0     		b	.L272
 4390              	.L273:
 982:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4391              		.loc 1 982 0 discriminator 3
 4392 09be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4393 09c0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4394 09c2 1632     		adds	r2, r2, #22
 4395 09c4 5449     		ldr	r1, .L361+4
 4396 09c6 8A5C     		ldrb	r2, [r1, r2]
 4397 09c8 D1B2     		uxtb	r1, r2
 4398 09ca 544A     		ldr	r2, .L361+8
 4399 09cc 1344     		add	r3, r3, r2
 4400 09ce 0A46     		mov	r2, r1
 4401 09d0 83F84A20 		strb	r2, [r3, #74]
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4402              		.loc 1 981 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 98


 4403 09d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4404 09d6 0133     		adds	r3, r3, #1
 4405 09d8 FB73     		strb	r3, [r7, #15]
 4406              	.L272:
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4407              		.loc 1 981 0 is_stmt 0 discriminator 1
 4408 09da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4409 09dc 032B     		cmp	r3, #3
 4410 09de EED9     		bls	.L273
 983:.\Protocolo.c **** 						}				
 984:.\Protocolo.c **** 						if(nmangueras==2){
 4411              		.loc 1 984 0 is_stmt 1
 4412 09e0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4413 09e2 022B     		cmp	r3, #2
 4414 09e4 68D1     		bne	.L274
 985:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4415              		.loc 1 985 0
 4416 09e6 0023     		movs	r3, #0
 4417 09e8 FB73     		strb	r3, [r7, #15]
 4418 09ea 20E0     		b	.L275
 4419              	.L278:
 986:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4420              		.loc 1 986 0
 4421 09ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4422 09ee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4423 09f0 2232     		adds	r2, r2, #34
 4424 09f2 4949     		ldr	r1, .L361+4
 4425 09f4 8A5C     		ldrb	r2, [r1, r2]
 4426 09f6 D1B2     		uxtb	r1, r2
 4427 09f8 484A     		ldr	r2, .L361+8
 4428 09fa 1344     		add	r3, r3, r2
 4429 09fc 0A46     		mov	r2, r1
 4430 09fe 9A76     		strb	r2, [r3, #26]
 987:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4431              		.loc 1 987 0
 4432 0a00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4433 0a02 464A     		ldr	r2, .L361+8
 4434 0a04 1344     		add	r3, r3, r2
 4435 0a06 9B7E     		ldrb	r3, [r3, #26]
 4436 0a08 DBB2     		uxtb	r3, r3
 4437 0a0a 002B     		cmp	r3, #0
 4438 0a0c 08D0     		beq	.L276
 4439              		.loc 1 987 0 is_stmt 0 discriminator 1
 4440 0a0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4441 0a10 424A     		ldr	r2, .L361+8
 4442 0a12 1344     		add	r3, r3, r2
 4443 0a14 9B7E     		ldrb	r3, [r3, #26]
 4444 0a16 DBB2     		uxtb	r3, r3
 4445 0a18 03F0F003 		and	r3, r3, #240
 4446 0a1c E02B     		cmp	r3, #224
 4447 0a1e 03D0     		beq	.L277
 4448              	.L276:
 988:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4449              		.loc 1 988 0 is_stmt 1
 4450 0a20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 989:.\Protocolo.c **** 									return 0;
 4451              		.loc 1 989 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 99


 4452 0a24 0023     		movs	r3, #0
 4453 0a26 2CE3     		b	.L167
 4454              	.L277:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4455              		.loc 1 985 0 discriminator 2
 4456 0a28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4457 0a2a 0133     		adds	r3, r3, #1
 4458 0a2c FB73     		strb	r3, [r7, #15]
 4459              	.L275:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4460              		.loc 1 985 0 is_stmt 0 discriminator 1
 4461 0a2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4462 0a30 072B     		cmp	r3, #7
 4463 0a32 DBD9     		bls	.L278
 990:.\Protocolo.c **** 								}								
 991:.\Protocolo.c **** 							}
 992:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4464              		.loc 1 992 0 is_stmt 1
 4465 0a34 0023     		movs	r3, #0
 4466 0a36 FB73     		strb	r3, [r7, #15]
 4467 0a38 23E0     		b	.L279
 4468              	.L282:
 993:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4469              		.loc 1 993 0
 4470 0a3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4471 0a3c 0C33     		adds	r3, r3, #12
 4472 0a3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4473 0a40 2B32     		adds	r2, r2, #43
 4474 0a42 3549     		ldr	r1, .L361+4
 4475 0a44 8A5C     		ldrb	r2, [r1, r2]
 4476 0a46 D1B2     		uxtb	r1, r2
 4477 0a48 344A     		ldr	r2, .L361+8
 4478 0a4a 1344     		add	r3, r3, r2
 4479 0a4c 0A46     		mov	r2, r1
 4480 0a4e 9A76     		strb	r2, [r3, #26]
 994:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4481              		.loc 1 994 0
 4482 0a50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4483 0a52 0C33     		adds	r3, r3, #12
 4484 0a54 314A     		ldr	r2, .L361+8
 4485 0a56 1344     		add	r3, r3, r2
 4486 0a58 9B7E     		ldrb	r3, [r3, #26]
 4487 0a5a DBB2     		uxtb	r3, r3
 4488 0a5c 002B     		cmp	r3, #0
 4489 0a5e 09D0     		beq	.L280
 4490              		.loc 1 994 0 is_stmt 0 discriminator 1
 4491 0a60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4492 0a62 0C33     		adds	r3, r3, #12
 4493 0a64 2D4A     		ldr	r2, .L361+8
 4494 0a66 1344     		add	r3, r3, r2
 4495 0a68 9B7E     		ldrb	r3, [r3, #26]
 4496 0a6a DBB2     		uxtb	r3, r3
 4497 0a6c 03F0F003 		and	r3, r3, #240
 4498 0a70 E02B     		cmp	r3, #224
 4499 0a72 03D0     		beq	.L281
 4500              	.L280:
 995:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 100


 4501              		.loc 1 995 0 is_stmt 1
 4502 0a74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 996:.\Protocolo.c **** 									return 0;
 4503              		.loc 1 996 0
 4504 0a78 0023     		movs	r3, #0
 4505 0a7a 02E3     		b	.L167
 4506              	.L281:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4507              		.loc 1 992 0 discriminator 2
 4508 0a7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4509 0a7e 0133     		adds	r3, r3, #1
 4510 0a80 FB73     		strb	r3, [r7, #15]
 4511              	.L279:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4512              		.loc 1 992 0 is_stmt 0 discriminator 1
 4513 0a82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4514 0a84 072B     		cmp	r3, #7
 4515 0a86 D8D9     		bls	.L282
 997:.\Protocolo.c **** 								}								
 998:.\Protocolo.c **** 							}
 999:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4516              		.loc 1 999 0 is_stmt 1
 4517 0a88 0023     		movs	r3, #0
 4518 0a8a FB73     		strb	r3, [r7, #15]
 4519 0a8c 0DE0     		b	.L283
 4520              	.L284:
1000:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4521              		.loc 1 1000 0 discriminator 3
 4522 0a8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4523 0a90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4524 0a92 3432     		adds	r2, r2, #52
 4525 0a94 2049     		ldr	r1, .L361+4
 4526 0a96 8A5C     		ldrb	r2, [r1, r2]
 4527 0a98 D1B2     		uxtb	r1, r2
 4528 0a9a 204A     		ldr	r2, .L361+8
 4529 0a9c 1344     		add	r3, r3, r2
 4530 0a9e 0A46     		mov	r2, r1
 4531 0aa0 83F84F20 		strb	r2, [r3, #79]
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4532              		.loc 1 999 0 discriminator 3
 4533 0aa4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4534 0aa6 0133     		adds	r3, r3, #1
 4535 0aa8 FB73     		strb	r3, [r7, #15]
 4536              	.L283:
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4537              		.loc 1 999 0 is_stmt 0 discriminator 1
 4538 0aaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4539 0aac 032B     		cmp	r3, #3
 4540 0aae EED9     		bls	.L284
1001:.\Protocolo.c **** 							}
1002:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4541              		.loc 1 1002 0 is_stmt 1
 4542 0ab0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1003:.\Protocolo.c ****     						return 2;                            
 4543              		.loc 1 1003 0
 4544 0ab4 0223     		movs	r3, #2
 4545 0ab6 E4E2     		b	.L167
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 101


 4546              	.L274:
1004:.\Protocolo.c **** 						}
1005:.\Protocolo.c **** 						if(nmangueras==3){
 4547              		.loc 1 1005 0
 4548 0ab8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4549 0aba 032B     		cmp	r3, #3
 4550 0abc 40F0DA80 		bne	.L285
1006:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4551              		.loc 1 1006 0
 4552 0ac0 0023     		movs	r3, #0
 4553 0ac2 FB73     		strb	r3, [r7, #15]
 4554 0ac4 20E0     		b	.L286
 4555              	.L289:
1007:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4556              		.loc 1 1007 0
 4557 0ac6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4558 0ac8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4559 0aca 2232     		adds	r2, r2, #34
 4560 0acc 1249     		ldr	r1, .L361+4
 4561 0ace 8A5C     		ldrb	r2, [r1, r2]
 4562 0ad0 D1B2     		uxtb	r1, r2
 4563 0ad2 124A     		ldr	r2, .L361+8
 4564 0ad4 1344     		add	r3, r3, r2
 4565 0ad6 0A46     		mov	r2, r1
 4566 0ad8 9A76     		strb	r2, [r3, #26]
1008:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4567              		.loc 1 1008 0
 4568 0ada FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4569 0adc 0F4A     		ldr	r2, .L361+8
 4570 0ade 1344     		add	r3, r3, r2
 4571 0ae0 9B7E     		ldrb	r3, [r3, #26]
 4572 0ae2 DBB2     		uxtb	r3, r3
 4573 0ae4 002B     		cmp	r3, #0
 4574 0ae6 08D0     		beq	.L287
 4575              		.loc 1 1008 0 is_stmt 0 discriminator 1
 4576 0ae8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4577 0aea 0C4A     		ldr	r2, .L361+8
 4578 0aec 1344     		add	r3, r3, r2
 4579 0aee 9B7E     		ldrb	r3, [r3, #26]
 4580 0af0 DBB2     		uxtb	r3, r3
 4581 0af2 03F0F003 		and	r3, r3, #240
 4582 0af6 E02B     		cmp	r3, #224
 4583 0af8 03D0     		beq	.L288
 4584              	.L287:
1009:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4585              		.loc 1 1009 0 is_stmt 1
 4586 0afa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1010:.\Protocolo.c **** 									return 0;
 4587              		.loc 1 1010 0
 4588 0afe 0023     		movs	r3, #0
 4589 0b00 BFE2     		b	.L167
 4590              	.L288:
1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4591              		.loc 1 1006 0 discriminator 2
 4592 0b02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4593 0b04 0133     		adds	r3, r3, #1
 4594 0b06 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 102


 4595              	.L286:
1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4596              		.loc 1 1006 0 is_stmt 0 discriminator 1
 4597 0b08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4598 0b0a 072B     		cmp	r3, #7
 4599 0b0c DBD9     		bls	.L289
1011:.\Protocolo.c **** 								}								
1012:.\Protocolo.c **** 							}
1013:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4600              		.loc 1 1013 0 is_stmt 1
 4601 0b0e 0023     		movs	r3, #0
 4602 0b10 FB73     		strb	r3, [r7, #15]
 4603 0b12 29E0     		b	.L290
 4604              	.L362:
 4605              		.align	2
 4606              	.L361:
 4607 0b14 00000000 		.word	version
 4608 0b18 00000000 		.word	Surtidor_rxBuffer
 4609 0b1c 00000000 		.word	lado2
 4610              	.L293:
1014:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4611              		.loc 1 1014 0
 4612 0b20 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4613 0b22 0C33     		adds	r3, r3, #12
 4614 0b24 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4615 0b26 2B32     		adds	r2, r2, #43
 4616 0b28 AE49     		ldr	r1, .L363
 4617 0b2a 8A5C     		ldrb	r2, [r1, r2]
 4618 0b2c D1B2     		uxtb	r1, r2
 4619 0b2e AE4A     		ldr	r2, .L363+4
 4620 0b30 1344     		add	r3, r3, r2
 4621 0b32 0A46     		mov	r2, r1
 4622 0b34 9A76     		strb	r2, [r3, #26]
1015:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4623              		.loc 1 1015 0
 4624 0b36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4625 0b38 0C33     		adds	r3, r3, #12
 4626 0b3a AB4A     		ldr	r2, .L363+4
 4627 0b3c 1344     		add	r3, r3, r2
 4628 0b3e 9B7E     		ldrb	r3, [r3, #26]
 4629 0b40 DBB2     		uxtb	r3, r3
 4630 0b42 002B     		cmp	r3, #0
 4631 0b44 09D0     		beq	.L291
 4632              		.loc 1 1015 0 is_stmt 0 discriminator 1
 4633 0b46 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4634 0b48 0C33     		adds	r3, r3, #12
 4635 0b4a A74A     		ldr	r2, .L363+4
 4636 0b4c 1344     		add	r3, r3, r2
 4637 0b4e 9B7E     		ldrb	r3, [r3, #26]
 4638 0b50 DBB2     		uxtb	r3, r3
 4639 0b52 03F0F003 		and	r3, r3, #240
 4640 0b56 E02B     		cmp	r3, #224
 4641 0b58 03D0     		beq	.L292
 4642              	.L291:
1016:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4643              		.loc 1 1016 0 is_stmt 1
 4644 0b5a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 103


1017:.\Protocolo.c **** 									return 0;
 4645              		.loc 1 1017 0
 4646 0b5e 0023     		movs	r3, #0
 4647 0b60 8FE2     		b	.L167
 4648              	.L292:
1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4649              		.loc 1 1013 0 discriminator 2
 4650 0b62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4651 0b64 0133     		adds	r3, r3, #1
 4652 0b66 FB73     		strb	r3, [r7, #15]
 4653              	.L290:
1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4654              		.loc 1 1013 0 is_stmt 0 discriminator 1
 4655 0b68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4656 0b6a 072B     		cmp	r3, #7
 4657 0b6c D8D9     		bls	.L293
1018:.\Protocolo.c **** 								}								
1019:.\Protocolo.c **** 							}
1020:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4658              		.loc 1 1020 0 is_stmt 1
 4659 0b6e 0023     		movs	r3, #0
 4660 0b70 FB73     		strb	r3, [r7, #15]
 4661 0b72 0DE0     		b	.L294
 4662              	.L295:
1021:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4663              		.loc 1 1021 0 discriminator 3
 4664 0b74 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4665 0b76 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4666 0b78 3432     		adds	r2, r2, #52
 4667 0b7a 9A49     		ldr	r1, .L363
 4668 0b7c 8A5C     		ldrb	r2, [r1, r2]
 4669 0b7e D1B2     		uxtb	r1, r2
 4670 0b80 994A     		ldr	r2, .L363+4
 4671 0b82 1344     		add	r3, r3, r2
 4672 0b84 0A46     		mov	r2, r1
 4673 0b86 83F84F20 		strb	r2, [r3, #79]
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4674              		.loc 1 1020 0 discriminator 3
 4675 0b8a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4676 0b8c 0133     		adds	r3, r3, #1
 4677 0b8e FB73     		strb	r3, [r7, #15]
 4678              	.L294:
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4679              		.loc 1 1020 0 is_stmt 0 discriminator 1
 4680 0b90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4681 0b92 032B     		cmp	r3, #3
 4682 0b94 EED9     		bls	.L295
1022:.\Protocolo.c **** 							}						
1023:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4683              		.loc 1 1023 0 is_stmt 1
 4684 0b96 0023     		movs	r3, #0
 4685 0b98 FB73     		strb	r3, [r7, #15]
 4686 0b9a 23E0     		b	.L296
 4687              	.L299:
1024:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4688              		.loc 1 1024 0
 4689 0b9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 104


 4690 0b9e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4691 0ba0 4032     		adds	r2, r2, #64
 4692 0ba2 9049     		ldr	r1, .L363
 4693 0ba4 8A5C     		ldrb	r2, [r1, r2]
 4694 0ba6 D1B2     		uxtb	r1, r2
 4695 0ba8 8F4A     		ldr	r2, .L363+4
 4696 0baa 1344     		add	r3, r3, r2
 4697 0bac 0A46     		mov	r2, r1
 4698 0bae 83F83220 		strb	r2, [r3, #50]
1025:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 4699              		.loc 1 1025 0
 4700 0bb2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4701 0bb4 8C4A     		ldr	r2, .L363+4
 4702 0bb6 1344     		add	r3, r3, r2
 4703 0bb8 93F83230 		ldrb	r3, [r3, #50]
 4704 0bbc DBB2     		uxtb	r3, r3
 4705 0bbe 002B     		cmp	r3, #0
 4706 0bc0 09D0     		beq	.L297
 4707              		.loc 1 1025 0 is_stmt 0 discriminator 1
 4708 0bc2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4709 0bc4 884A     		ldr	r2, .L363+4
 4710 0bc6 1344     		add	r3, r3, r2
 4711 0bc8 93F83230 		ldrb	r3, [r3, #50]
 4712 0bcc DBB2     		uxtb	r3, r3
 4713 0bce 03F0F003 		and	r3, r3, #240
 4714 0bd2 E02B     		cmp	r3, #224
 4715 0bd4 03D0     		beq	.L298
 4716              	.L297:
1026:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4717              		.loc 1 1026 0 is_stmt 1
 4718 0bd6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1027:.\Protocolo.c **** 									return 0;
 4719              		.loc 1 1027 0
 4720 0bda 0023     		movs	r3, #0
 4721 0bdc 51E2     		b	.L167
 4722              	.L298:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4723              		.loc 1 1023 0 discriminator 2
 4724 0bde FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4725 0be0 0133     		adds	r3, r3, #1
 4726 0be2 FB73     		strb	r3, [r7, #15]
 4727              	.L296:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4728              		.loc 1 1023 0 is_stmt 0 discriminator 1
 4729 0be4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4730 0be6 072B     		cmp	r3, #7
 4731 0be8 D8D9     		bls	.L299
1028:.\Protocolo.c **** 								}								
1029:.\Protocolo.c **** 							}
1030:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4732              		.loc 1 1030 0 is_stmt 1
 4733 0bea 0023     		movs	r3, #0
 4734 0bec FB73     		strb	r3, [r7, #15]
 4735 0bee 26E0     		b	.L300
 4736              	.L303:
1031:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4737              		.loc 1 1031 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 105


 4738 0bf0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4739 0bf2 0C33     		adds	r3, r3, #12
 4740 0bf4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4741 0bf6 4932     		adds	r2, r2, #73
 4742 0bf8 7A49     		ldr	r1, .L363
 4743 0bfa 8A5C     		ldrb	r2, [r1, r2]
 4744 0bfc D1B2     		uxtb	r1, r2
 4745 0bfe 7A4A     		ldr	r2, .L363+4
 4746 0c00 1344     		add	r3, r3, r2
 4747 0c02 0A46     		mov	r2, r1
 4748 0c04 83F83220 		strb	r2, [r3, #50]
1032:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 4749              		.loc 1 1032 0
 4750 0c08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4751 0c0a 0C33     		adds	r3, r3, #12
 4752 0c0c 764A     		ldr	r2, .L363+4
 4753 0c0e 1344     		add	r3, r3, r2
 4754 0c10 93F83230 		ldrb	r3, [r3, #50]
 4755 0c14 DBB2     		uxtb	r3, r3
 4756 0c16 002B     		cmp	r3, #0
 4757 0c18 0AD0     		beq	.L301
 4758              		.loc 1 1032 0 is_stmt 0 discriminator 1
 4759 0c1a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4760 0c1c 0C33     		adds	r3, r3, #12
 4761 0c1e 724A     		ldr	r2, .L363+4
 4762 0c20 1344     		add	r3, r3, r2
 4763 0c22 93F83230 		ldrb	r3, [r3, #50]
 4764 0c26 DBB2     		uxtb	r3, r3
 4765 0c28 03F0F003 		and	r3, r3, #240
 4766 0c2c E02B     		cmp	r3, #224
 4767 0c2e 03D0     		beq	.L302
 4768              	.L301:
1033:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4769              		.loc 1 1033 0 is_stmt 1
 4770 0c30 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1034:.\Protocolo.c **** 									return 0;
 4771              		.loc 1 1034 0
 4772 0c34 0023     		movs	r3, #0
 4773 0c36 24E2     		b	.L167
 4774              	.L302:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4775              		.loc 1 1030 0 discriminator 2
 4776 0c38 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4777 0c3a 0133     		adds	r3, r3, #1
 4778 0c3c FB73     		strb	r3, [r7, #15]
 4779              	.L300:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4780              		.loc 1 1030 0 is_stmt 0 discriminator 1
 4781 0c3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4782 0c40 072B     		cmp	r3, #7
 4783 0c42 D5D9     		bls	.L303
1035:.\Protocolo.c **** 								}								
1036:.\Protocolo.c **** 							}
1037:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4784              		.loc 1 1037 0 is_stmt 1
 4785 0c44 0023     		movs	r3, #0
 4786 0c46 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 106


 4787 0c48 0DE0     		b	.L304
 4788              	.L305:
1038:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4789              		.loc 1 1038 0 discriminator 3
 4790 0c4a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4791 0c4c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4792 0c4e 5232     		adds	r2, r2, #82
 4793 0c50 6449     		ldr	r1, .L363
 4794 0c52 8A5C     		ldrb	r2, [r1, r2]
 4795 0c54 D1B2     		uxtb	r1, r2
 4796 0c56 644A     		ldr	r2, .L363+4
 4797 0c58 1344     		add	r3, r3, r2
 4798 0c5a 0A46     		mov	r2, r1
 4799 0c5c 83F85420 		strb	r2, [r3, #84]
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4800              		.loc 1 1037 0 discriminator 3
 4801 0c60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4802 0c62 0133     		adds	r3, r3, #1
 4803 0c64 FB73     		strb	r3, [r7, #15]
 4804              	.L304:
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4805              		.loc 1 1037 0 is_stmt 0 discriminator 1
 4806 0c66 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4807 0c68 032B     		cmp	r3, #3
 4808 0c6a EED9     		bls	.L305
1039:.\Protocolo.c **** 							}
1040:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4809              		.loc 1 1040 0 is_stmt 1
 4810 0c6c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1041:.\Protocolo.c ****     						return 3;                            
 4811              		.loc 1 1041 0
 4812 0c70 0323     		movs	r3, #3
 4813 0c72 06E2     		b	.L167
 4814              	.L285:
1042:.\Protocolo.c **** 						}
1043:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4815              		.loc 1 1043 0
 4816 0c74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1044:.\Protocolo.c **** 						return 1;			
 4817              		.loc 1 1044 0
 4818 0c78 0123     		movs	r3, #1
 4819 0c7a 02E2     		b	.L167
 4820              	.L259:
1045:.\Protocolo.c **** 					}
1046:.\Protocolo.c **** 					else{
1047:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4821              		.loc 1 1047 0
 4822 0c7c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1048:.\Protocolo.c **** 						return 0;		
 4823              		.loc 1 1048 0
 4824 0c80 0023     		movs	r3, #0
 4825 0c82 FEE1     		b	.L167
 4826              	.L258:
1049:.\Protocolo.c **** 					}
1050:.\Protocolo.c **** 				}
1051:.\Protocolo.c **** 				else{
1052:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 107


 4827              		.loc 1 1052 0
 4828 0c84 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1053:.\Protocolo.c **** 					return 0;		
 4829              		.loc 1 1053 0
 4830 0c88 0023     		movs	r3, #0
 4831 0c8a FAE1     		b	.L167
 4832              	.L256:
1054:.\Protocolo.c **** 				}				
1055:.\Protocolo.c **** 			}
1056:.\Protocolo.c **** 			else{
1057:.\Protocolo.c **** 				CyDelay(900);
 4833              		.loc 1 1057 0
 4834 0c8c 4FF46170 		mov	r0, #900
 4835 0c90 FFF7FEFF 		bl	CyDelay
1058:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4836              		.loc 1 1058 0
 4837 0c94 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4838 0c98 0346     		mov	r3, r0
 4839 0c9a FB73     		strb	r3, [r7, #15]
1059:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){					
 4840              		.loc 1 1059 0
 4841 0c9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4842 0c9e 2E2B     		cmp	r3, #46
 4843 0ca0 06D0     		beq	.L306
 4844              		.loc 1 1059 0 is_stmt 0 discriminator 1
 4845 0ca2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4846 0ca4 582B     		cmp	r3, #88
 4847 0ca6 03D0     		beq	.L306
 4848              		.loc 1 1059 0 discriminator 2
 4849 0ca8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4850 0caa 822B     		cmp	r3, #130
 4851 0cac 40F0E481 		bne	.L307
 4852              	.L306:
1060:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4853              		.loc 1 1060 0 is_stmt 1
 4854 0cb0 4C4B     		ldr	r3, .L363
 4855 0cb2 1B78     		ldrb	r3, [r3]
 4856 0cb4 DBB2     		uxtb	r3, r3
 4857 0cb6 FF2B     		cmp	r3, #255
 4858 0cb8 40F0DA81 		bne	.L308
 4859              		.loc 1 1060 0 is_stmt 0 discriminator 1
 4860 0cbc 494B     		ldr	r3, .L363
 4861 0cbe 5B78     		ldrb	r3, [r3, #1]
 4862 0cc0 DBB2     		uxtb	r3, r3
 4863 0cc2 F62B     		cmp	r3, #246
 4864 0cc4 40F0D481 		bne	.L308
 4865              		.loc 1 1060 0 discriminator 2
 4866 0cc8 464B     		ldr	r3, .L363
 4867 0cca DB78     		ldrb	r3, [r3, #3]
 4868 0ccc DBB2     		uxtb	r3, r3
 4869 0cce F92B     		cmp	r3, #249
 4870 0cd0 40F0CE81 		bne	.L308
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4871              		.loc 1 1061 0 is_stmt 1
 4872 0cd4 0023     		movs	r3, #0
 4873 0cd6 BB73     		strb	r3, [r7, #14]
 4874 0cd8 16E0     		b	.L309
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 108


 4875              	.L312:
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4876              		.loc 1 1062 0
 4877 0cda 0023     		movs	r3, #0
 4878 0cdc FB73     		strb	r3, [r7, #15]
 4879 0cde 0DE0     		b	.L310
 4880              	.L311:
1063:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4881              		.loc 1 1063 0 discriminator 3
 4882 0ce0 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4883 0ce2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4884 0ce4 4048     		ldr	r0, .L363+4
 4885 0ce6 1346     		mov	r3, r2
 4886 0ce8 5B00     		lsls	r3, r3, #1
 4887 0cea 1344     		add	r3, r3, r2
 4888 0cec DB00     		lsls	r3, r3, #3
 4889 0cee 0B44     		add	r3, r3, r1
 4890 0cf0 0344     		add	r3, r3, r0
 4891 0cf2 0022     		movs	r2, #0
 4892 0cf4 9A70     		strb	r2, [r3, #2]
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4893              		.loc 1 1062 0 discriminator 3
 4894 0cf6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4895 0cf8 0133     		adds	r3, r3, #1
 4896 0cfa FB73     		strb	r3, [r7, #15]
 4897              	.L310:
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4898              		.loc 1 1062 0 is_stmt 0 discriminator 1
 4899 0cfc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4900 0cfe 172B     		cmp	r3, #23
 4901 0d00 EED9     		bls	.L311
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4902              		.loc 1 1061 0 is_stmt 1 discriminator 2
 4903 0d02 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4904 0d04 0133     		adds	r3, r3, #1
 4905 0d06 BB73     		strb	r3, [r7, #14]
 4906              	.L309:
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4907              		.loc 1 1061 0 is_stmt 0 discriminator 1
 4908 0d08 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4909 0d0a 022B     		cmp	r3, #2
 4910 0d0c E5D9     		bls	.L312
1064:.\Protocolo.c ****                     		}
1065:.\Protocolo.c ****                     	}                         
1066:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4911              		.loc 1 1066 0 is_stmt 1
 4912 0d0e 0023     		movs	r3, #0
 4913 0d10 FB73     		strb	r3, [r7, #15]
 4914 0d12 20E0     		b	.L313
 4915              	.L316:
1067:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4916              		.loc 1 1067 0
 4917 0d14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4918 0d16 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4919 0d18 0432     		adds	r2, r2, #4
 4920 0d1a 3249     		ldr	r1, .L363
 4921 0d1c 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 109


 4922 0d1e D1B2     		uxtb	r1, r2
 4923 0d20 314A     		ldr	r2, .L363+4
 4924 0d22 1344     		add	r3, r3, r2
 4925 0d24 0A46     		mov	r2, r1
 4926 0d26 9A70     		strb	r2, [r3, #2]
1068:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4927              		.loc 1 1068 0
 4928 0d28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4929 0d2a 2F4A     		ldr	r2, .L363+4
 4930 0d2c 1344     		add	r3, r3, r2
 4931 0d2e 9B78     		ldrb	r3, [r3, #2]
 4932 0d30 DBB2     		uxtb	r3, r3
 4933 0d32 002B     		cmp	r3, #0
 4934 0d34 08D0     		beq	.L314
 4935              		.loc 1 1068 0 is_stmt 0 discriminator 1
 4936 0d36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4937 0d38 2B4A     		ldr	r2, .L363+4
 4938 0d3a 1344     		add	r3, r3, r2
 4939 0d3c 9B78     		ldrb	r3, [r3, #2]
 4940 0d3e DBB2     		uxtb	r3, r3
 4941 0d40 03F0F003 		and	r3, r3, #240
 4942 0d44 E02B     		cmp	r3, #224
 4943 0d46 03D0     		beq	.L315
 4944              	.L314:
1069:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4945              		.loc 1 1069 0 is_stmt 1
 4946 0d48 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1070:.\Protocolo.c **** 								return 0;
 4947              		.loc 1 1070 0
 4948 0d4c 0023     		movs	r3, #0
 4949 0d4e 98E1     		b	.L167
 4950              	.L315:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4951              		.loc 1 1066 0 discriminator 2
 4952 0d50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4953 0d52 0133     		adds	r3, r3, #1
 4954 0d54 FB73     		strb	r3, [r7, #15]
 4955              	.L313:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4956              		.loc 1 1066 0 is_stmt 0 discriminator 1
 4957 0d56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4958 0d58 0B2B     		cmp	r3, #11
 4959 0d5a DBD9     		bls	.L316
1071:.\Protocolo.c **** 							}							
1072:.\Protocolo.c **** 						}
1073:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4960              		.loc 1 1073 0 is_stmt 1
 4961 0d5c 0023     		movs	r3, #0
 4962 0d5e FB73     		strb	r3, [r7, #15]
 4963 0d60 23E0     		b	.L317
 4964              	.L320:
1074:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4965              		.loc 1 1074 0
 4966 0d62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4967 0d64 0C33     		adds	r3, r3, #12
 4968 0d66 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4969 0d68 1132     		adds	r2, r2, #17
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 110


 4970 0d6a 1E49     		ldr	r1, .L363
 4971 0d6c 8A5C     		ldrb	r2, [r1, r2]
 4972 0d6e D1B2     		uxtb	r1, r2
 4973 0d70 1D4A     		ldr	r2, .L363+4
 4974 0d72 1344     		add	r3, r3, r2
 4975 0d74 0A46     		mov	r2, r1
 4976 0d76 9A70     		strb	r2, [r3, #2]
1075:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4977              		.loc 1 1075 0
 4978 0d78 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4979 0d7a 0C33     		adds	r3, r3, #12
 4980 0d7c 1A4A     		ldr	r2, .L363+4
 4981 0d7e 1344     		add	r3, r3, r2
 4982 0d80 9B78     		ldrb	r3, [r3, #2]
 4983 0d82 DBB2     		uxtb	r3, r3
 4984 0d84 002B     		cmp	r3, #0
 4985 0d86 09D0     		beq	.L318
 4986              		.loc 1 1075 0 is_stmt 0 discriminator 1
 4987 0d88 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4988 0d8a 0C33     		adds	r3, r3, #12
 4989 0d8c 164A     		ldr	r2, .L363+4
 4990 0d8e 1344     		add	r3, r3, r2
 4991 0d90 9B78     		ldrb	r3, [r3, #2]
 4992 0d92 DBB2     		uxtb	r3, r3
 4993 0d94 03F0F003 		and	r3, r3, #240
 4994 0d98 E02B     		cmp	r3, #224
 4995 0d9a 03D0     		beq	.L319
 4996              	.L318:
1076:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4997              		.loc 1 1076 0 is_stmt 1
 4998 0d9c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1077:.\Protocolo.c **** 								return 0;
 4999              		.loc 1 1077 0
 5000 0da0 0023     		movs	r3, #0
 5001 0da2 6EE1     		b	.L167
 5002              	.L319:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 5003              		.loc 1 1073 0 discriminator 2
 5004 0da4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5005 0da6 0133     		adds	r3, r3, #1
 5006 0da8 FB73     		strb	r3, [r7, #15]
 5007              	.L317:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 5008              		.loc 1 1073 0 is_stmt 0 discriminator 1
 5009 0daa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5010 0dac 0B2B     		cmp	r3, #11
 5011 0dae D8D9     		bls	.L320
1078:.\Protocolo.c **** 							}							
1079:.\Protocolo.c **** 						}
1080:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 5012              		.loc 1 1080 0 is_stmt 1
 5013 0db0 0023     		movs	r3, #0
 5014 0db2 FB73     		strb	r3, [r7, #15]
 5015 0db4 0DE0     		b	.L321
 5016              	.L322:
1081:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5017              		.loc 1 1081 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 111


 5018 0db6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5019 0db8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5020 0dba 1E32     		adds	r2, r2, #30
 5021 0dbc 0949     		ldr	r1, .L363
 5022 0dbe 8A5C     		ldrb	r2, [r1, r2]
 5023 0dc0 D1B2     		uxtb	r1, r2
 5024 0dc2 094A     		ldr	r2, .L363+4
 5025 0dc4 1344     		add	r3, r3, r2
 5026 0dc6 0A46     		mov	r2, r1
 5027 0dc8 83F84A20 		strb	r2, [r3, #74]
1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5028              		.loc 1 1080 0 discriminator 3
 5029 0dcc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5030 0dce 0133     		adds	r3, r3, #1
 5031 0dd0 FB73     		strb	r3, [r7, #15]
 5032              	.L321:
1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5033              		.loc 1 1080 0 is_stmt 0 discriminator 1
 5034 0dd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5035 0dd4 042B     		cmp	r3, #4
 5036 0dd6 EED9     		bls	.L322
1082:.\Protocolo.c **** 						}				
1083:.\Protocolo.c **** 						if(nmangueras==2){
 5037              		.loc 1 1083 0 is_stmt 1
 5038 0dd8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5039 0dda 022B     		cmp	r3, #2
 5040 0ddc 6CD1     		bne	.L323
1084:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5041              		.loc 1 1084 0
 5042 0dde 0023     		movs	r3, #0
 5043 0de0 FB73     		strb	r3, [r7, #15]
 5044 0de2 24E0     		b	.L324
 5045              	.L364:
 5046              		.align	2
 5047              	.L363:
 5048 0de4 00000000 		.word	Surtidor_rxBuffer
 5049 0de8 00000000 		.word	lado2
 5050              	.L327:
1085:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5051              		.loc 1 1085 0
 5052 0dec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5053 0dee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5054 0df0 2E32     		adds	r2, r2, #46
 5055 0df2 A649     		ldr	r1, .L365
 5056 0df4 8A5C     		ldrb	r2, [r1, r2]
 5057 0df6 D1B2     		uxtb	r1, r2
 5058 0df8 A54A     		ldr	r2, .L365+4
 5059 0dfa 1344     		add	r3, r3, r2
 5060 0dfc 0A46     		mov	r2, r1
 5061 0dfe 9A76     		strb	r2, [r3, #26]
1086:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5062              		.loc 1 1086 0
 5063 0e00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5064 0e02 A34A     		ldr	r2, .L365+4
 5065 0e04 1344     		add	r3, r3, r2
 5066 0e06 9B7E     		ldrb	r3, [r3, #26]
 5067 0e08 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 112


 5068 0e0a 002B     		cmp	r3, #0
 5069 0e0c 08D0     		beq	.L325
 5070              		.loc 1 1086 0 is_stmt 0 discriminator 1
 5071 0e0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5072 0e10 9F4A     		ldr	r2, .L365+4
 5073 0e12 1344     		add	r3, r3, r2
 5074 0e14 9B7E     		ldrb	r3, [r3, #26]
 5075 0e16 DBB2     		uxtb	r3, r3
 5076 0e18 03F0F003 		and	r3, r3, #240
 5077 0e1c E02B     		cmp	r3, #224
 5078 0e1e 03D0     		beq	.L326
 5079              	.L325:
1087:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5080              		.loc 1 1087 0 is_stmt 1
 5081 0e20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1088:.\Protocolo.c **** 									return 0;
 5082              		.loc 1 1088 0
 5083 0e24 0023     		movs	r3, #0
 5084 0e26 2CE1     		b	.L167
 5085              	.L326:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5086              		.loc 1 1084 0 discriminator 2
 5087 0e28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5088 0e2a 0133     		adds	r3, r3, #1
 5089 0e2c FB73     		strb	r3, [r7, #15]
 5090              	.L324:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5091              		.loc 1 1084 0 is_stmt 0 discriminator 1
 5092 0e2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5093 0e30 0B2B     		cmp	r3, #11
 5094 0e32 DBD9     		bls	.L327
1089:.\Protocolo.c **** 								}								
1090:.\Protocolo.c **** 							}
1091:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5095              		.loc 1 1091 0 is_stmt 1
 5096 0e34 0023     		movs	r3, #0
 5097 0e36 FB73     		strb	r3, [r7, #15]
 5098 0e38 23E0     		b	.L328
 5099              	.L331:
1092:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5100              		.loc 1 1092 0
 5101 0e3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5102 0e3c 0C33     		adds	r3, r3, #12
 5103 0e3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5104 0e40 3B32     		adds	r2, r2, #59
 5105 0e42 9249     		ldr	r1, .L365
 5106 0e44 8A5C     		ldrb	r2, [r1, r2]
 5107 0e46 D1B2     		uxtb	r1, r2
 5108 0e48 914A     		ldr	r2, .L365+4
 5109 0e4a 1344     		add	r3, r3, r2
 5110 0e4c 0A46     		mov	r2, r1
 5111 0e4e 9A76     		strb	r2, [r3, #26]
1093:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5112              		.loc 1 1093 0
 5113 0e50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5114 0e52 0C33     		adds	r3, r3, #12
 5115 0e54 8E4A     		ldr	r2, .L365+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 113


 5116 0e56 1344     		add	r3, r3, r2
 5117 0e58 9B7E     		ldrb	r3, [r3, #26]
 5118 0e5a DBB2     		uxtb	r3, r3
 5119 0e5c 002B     		cmp	r3, #0
 5120 0e5e 09D0     		beq	.L329
 5121              		.loc 1 1093 0 is_stmt 0 discriminator 1
 5122 0e60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5123 0e62 0C33     		adds	r3, r3, #12
 5124 0e64 8A4A     		ldr	r2, .L365+4
 5125 0e66 1344     		add	r3, r3, r2
 5126 0e68 9B7E     		ldrb	r3, [r3, #26]
 5127 0e6a DBB2     		uxtb	r3, r3
 5128 0e6c 03F0F003 		and	r3, r3, #240
 5129 0e70 E02B     		cmp	r3, #224
 5130 0e72 03D0     		beq	.L330
 5131              	.L329:
1094:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5132              		.loc 1 1094 0 is_stmt 1
 5133 0e74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1095:.\Protocolo.c **** 									return 0;
 5134              		.loc 1 1095 0
 5135 0e78 0023     		movs	r3, #0
 5136 0e7a 02E1     		b	.L167
 5137              	.L330:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5138              		.loc 1 1091 0 discriminator 2
 5139 0e7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5140 0e7e 0133     		adds	r3, r3, #1
 5141 0e80 FB73     		strb	r3, [r7, #15]
 5142              	.L328:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5143              		.loc 1 1091 0 is_stmt 0 discriminator 1
 5144 0e82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5145 0e84 0B2B     		cmp	r3, #11
 5146 0e86 D8D9     		bls	.L331
1096:.\Protocolo.c **** 								}								
1097:.\Protocolo.c **** 							}
1098:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5147              		.loc 1 1098 0 is_stmt 1
 5148 0e88 0023     		movs	r3, #0
 5149 0e8a FB73     		strb	r3, [r7, #15]
 5150 0e8c 0DE0     		b	.L332
 5151              	.L333:
1099:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5152              		.loc 1 1099 0 discriminator 3
 5153 0e8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5154 0e90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5155 0e92 4832     		adds	r2, r2, #72
 5156 0e94 7D49     		ldr	r1, .L365
 5157 0e96 8A5C     		ldrb	r2, [r1, r2]
 5158 0e98 D1B2     		uxtb	r1, r2
 5159 0e9a 7D4A     		ldr	r2, .L365+4
 5160 0e9c 1344     		add	r3, r3, r2
 5161 0e9e 0A46     		mov	r2, r1
 5162 0ea0 83F84F20 		strb	r2, [r3, #79]
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5163              		.loc 1 1098 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 114


 5164 0ea4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5165 0ea6 0133     		adds	r3, r3, #1
 5166 0ea8 FB73     		strb	r3, [r7, #15]
 5167              	.L332:
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5168              		.loc 1 1098 0 is_stmt 0 discriminator 1
 5169 0eaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5170 0eac 042B     		cmp	r3, #4
 5171 0eae EED9     		bls	.L333
1100:.\Protocolo.c **** 							}
1101:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5172              		.loc 1 1101 0 is_stmt 1
 5173 0eb0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1102:.\Protocolo.c ****     						return 2;                            
 5174              		.loc 1 1102 0
 5175 0eb4 0223     		movs	r3, #2
 5176 0eb6 E4E0     		b	.L167
 5177              	.L323:
1103:.\Protocolo.c **** 						}
1104:.\Protocolo.c **** 						if(nmangueras==3){
 5178              		.loc 1 1104 0
 5179 0eb8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5180 0eba 032B     		cmp	r3, #3
 5181 0ebc 40F0D480 		bne	.L334
1105:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5182              		.loc 1 1105 0
 5183 0ec0 0023     		movs	r3, #0
 5184 0ec2 FB73     		strb	r3, [r7, #15]
 5185 0ec4 20E0     		b	.L335
 5186              	.L338:
1106:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5187              		.loc 1 1106 0
 5188 0ec6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5189 0ec8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5190 0eca 2E32     		adds	r2, r2, #46
 5191 0ecc 6F49     		ldr	r1, .L365
 5192 0ece 8A5C     		ldrb	r2, [r1, r2]
 5193 0ed0 D1B2     		uxtb	r1, r2
 5194 0ed2 6F4A     		ldr	r2, .L365+4
 5195 0ed4 1344     		add	r3, r3, r2
 5196 0ed6 0A46     		mov	r2, r1
 5197 0ed8 9A76     		strb	r2, [r3, #26]
1107:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5198              		.loc 1 1107 0
 5199 0eda FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5200 0edc 6C4A     		ldr	r2, .L365+4
 5201 0ede 1344     		add	r3, r3, r2
 5202 0ee0 9B7E     		ldrb	r3, [r3, #26]
 5203 0ee2 DBB2     		uxtb	r3, r3
 5204 0ee4 002B     		cmp	r3, #0
 5205 0ee6 08D0     		beq	.L336
 5206              		.loc 1 1107 0 is_stmt 0 discriminator 1
 5207 0ee8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5208 0eea 694A     		ldr	r2, .L365+4
 5209 0eec 1344     		add	r3, r3, r2
 5210 0eee 9B7E     		ldrb	r3, [r3, #26]
 5211 0ef0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 115


 5212 0ef2 03F0F003 		and	r3, r3, #240
 5213 0ef6 E02B     		cmp	r3, #224
 5214 0ef8 03D0     		beq	.L337
 5215              	.L336:
1108:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5216              		.loc 1 1108 0 is_stmt 1
 5217 0efa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1109:.\Protocolo.c **** 									return 0;
 5218              		.loc 1 1109 0
 5219 0efe 0023     		movs	r3, #0
 5220 0f00 BFE0     		b	.L167
 5221              	.L337:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5222              		.loc 1 1105 0 discriminator 2
 5223 0f02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5224 0f04 0133     		adds	r3, r3, #1
 5225 0f06 FB73     		strb	r3, [r7, #15]
 5226              	.L335:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5227              		.loc 1 1105 0 is_stmt 0 discriminator 1
 5228 0f08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5229 0f0a 0B2B     		cmp	r3, #11
 5230 0f0c DBD9     		bls	.L338
1110:.\Protocolo.c **** 								}								
1111:.\Protocolo.c **** 							}
1112:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5231              		.loc 1 1112 0 is_stmt 1
 5232 0f0e 0023     		movs	r3, #0
 5233 0f10 FB73     		strb	r3, [r7, #15]
 5234 0f12 23E0     		b	.L339
 5235              	.L342:
1113:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5236              		.loc 1 1113 0
 5237 0f14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5238 0f16 0C33     		adds	r3, r3, #12
 5239 0f18 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5240 0f1a 3B32     		adds	r2, r2, #59
 5241 0f1c 5B49     		ldr	r1, .L365
 5242 0f1e 8A5C     		ldrb	r2, [r1, r2]
 5243 0f20 D1B2     		uxtb	r1, r2
 5244 0f22 5B4A     		ldr	r2, .L365+4
 5245 0f24 1344     		add	r3, r3, r2
 5246 0f26 0A46     		mov	r2, r1
 5247 0f28 9A76     		strb	r2, [r3, #26]
1114:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5248              		.loc 1 1114 0
 5249 0f2a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5250 0f2c 0C33     		adds	r3, r3, #12
 5251 0f2e 584A     		ldr	r2, .L365+4
 5252 0f30 1344     		add	r3, r3, r2
 5253 0f32 9B7E     		ldrb	r3, [r3, #26]
 5254 0f34 DBB2     		uxtb	r3, r3
 5255 0f36 002B     		cmp	r3, #0
 5256 0f38 09D0     		beq	.L340
 5257              		.loc 1 1114 0 is_stmt 0 discriminator 1
 5258 0f3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5259 0f3c 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 116


 5260 0f3e 544A     		ldr	r2, .L365+4
 5261 0f40 1344     		add	r3, r3, r2
 5262 0f42 9B7E     		ldrb	r3, [r3, #26]
 5263 0f44 DBB2     		uxtb	r3, r3
 5264 0f46 03F0F003 		and	r3, r3, #240
 5265 0f4a E02B     		cmp	r3, #224
 5266 0f4c 03D0     		beq	.L341
 5267              	.L340:
1115:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5268              		.loc 1 1115 0 is_stmt 1
 5269 0f4e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1116:.\Protocolo.c **** 									return 0;
 5270              		.loc 1 1116 0
 5271 0f52 0023     		movs	r3, #0
 5272 0f54 95E0     		b	.L167
 5273              	.L341:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5274              		.loc 1 1112 0 discriminator 2
 5275 0f56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5276 0f58 0133     		adds	r3, r3, #1
 5277 0f5a FB73     		strb	r3, [r7, #15]
 5278              	.L339:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5279              		.loc 1 1112 0 is_stmt 0 discriminator 1
 5280 0f5c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5281 0f5e 0B2B     		cmp	r3, #11
 5282 0f60 D8D9     		bls	.L342
1117:.\Protocolo.c **** 								}								
1118:.\Protocolo.c **** 							}
1119:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5283              		.loc 1 1119 0 is_stmt 1
 5284 0f62 0023     		movs	r3, #0
 5285 0f64 FB73     		strb	r3, [r7, #15]
 5286 0f66 0DE0     		b	.L343
 5287              	.L344:
1120:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5288              		.loc 1 1120 0 discriminator 3
 5289 0f68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5290 0f6a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5291 0f6c 4832     		adds	r2, r2, #72
 5292 0f6e 4749     		ldr	r1, .L365
 5293 0f70 8A5C     		ldrb	r2, [r1, r2]
 5294 0f72 D1B2     		uxtb	r1, r2
 5295 0f74 464A     		ldr	r2, .L365+4
 5296 0f76 1344     		add	r3, r3, r2
 5297 0f78 0A46     		mov	r2, r1
 5298 0f7a 83F84F20 		strb	r2, [r3, #79]
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5299              		.loc 1 1119 0 discriminator 3
 5300 0f7e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5301 0f80 0133     		adds	r3, r3, #1
 5302 0f82 FB73     		strb	r3, [r7, #15]
 5303              	.L343:
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5304              		.loc 1 1119 0 is_stmt 0 discriminator 1
 5305 0f84 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5306 0f86 042B     		cmp	r3, #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 117


 5307 0f88 EED9     		bls	.L344
1121:.\Protocolo.c **** 							}					
1122:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5308              		.loc 1 1122 0 is_stmt 1
 5309 0f8a 0023     		movs	r3, #0
 5310 0f8c FB73     		strb	r3, [r7, #15]
 5311 0f8e 23E0     		b	.L345
 5312              	.L348:
1123:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5313              		.loc 1 1123 0
 5314 0f90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5315 0f92 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5316 0f94 5832     		adds	r2, r2, #88
 5317 0f96 3D49     		ldr	r1, .L365
 5318 0f98 8A5C     		ldrb	r2, [r1, r2]
 5319 0f9a D1B2     		uxtb	r1, r2
 5320 0f9c 3C4A     		ldr	r2, .L365+4
 5321 0f9e 1344     		add	r3, r3, r2
 5322 0fa0 0A46     		mov	r2, r1
 5323 0fa2 83F83220 		strb	r2, [r3, #50]
1124:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 5324              		.loc 1 1124 0
 5325 0fa6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5326 0fa8 394A     		ldr	r2, .L365+4
 5327 0faa 1344     		add	r3, r3, r2
 5328 0fac 93F83230 		ldrb	r3, [r3, #50]
 5329 0fb0 DBB2     		uxtb	r3, r3
 5330 0fb2 002B     		cmp	r3, #0
 5331 0fb4 09D0     		beq	.L346
 5332              		.loc 1 1124 0 is_stmt 0 discriminator 1
 5333 0fb6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5334 0fb8 354A     		ldr	r2, .L365+4
 5335 0fba 1344     		add	r3, r3, r2
 5336 0fbc 93F83230 		ldrb	r3, [r3, #50]
 5337 0fc0 DBB2     		uxtb	r3, r3
 5338 0fc2 03F0F003 		and	r3, r3, #240
 5339 0fc6 E02B     		cmp	r3, #224
 5340 0fc8 03D0     		beq	.L347
 5341              	.L346:
1125:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5342              		.loc 1 1125 0 is_stmt 1
 5343 0fca FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1126:.\Protocolo.c **** 									return 0;
 5344              		.loc 1 1126 0
 5345 0fce 0023     		movs	r3, #0
 5346 0fd0 57E0     		b	.L167
 5347              	.L347:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5348              		.loc 1 1122 0 discriminator 2
 5349 0fd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5350 0fd4 0133     		adds	r3, r3, #1
 5351 0fd6 FB73     		strb	r3, [r7, #15]
 5352              	.L345:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5353              		.loc 1 1122 0 is_stmt 0 discriminator 1
 5354 0fd8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5355 0fda 0B2B     		cmp	r3, #11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 118


 5356 0fdc D8D9     		bls	.L348
1127:.\Protocolo.c **** 								}								
1128:.\Protocolo.c **** 							}
1129:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5357              		.loc 1 1129 0 is_stmt 1
 5358 0fde 0023     		movs	r3, #0
 5359 0fe0 FB73     		strb	r3, [r7, #15]
 5360 0fe2 26E0     		b	.L349
 5361              	.L352:
1130:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5362              		.loc 1 1130 0
 5363 0fe4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5364 0fe6 0C33     		adds	r3, r3, #12
 5365 0fe8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5366 0fea 6532     		adds	r2, r2, #101
 5367 0fec 2749     		ldr	r1, .L365
 5368 0fee 8A5C     		ldrb	r2, [r1, r2]
 5369 0ff0 D1B2     		uxtb	r1, r2
 5370 0ff2 274A     		ldr	r2, .L365+4
 5371 0ff4 1344     		add	r3, r3, r2
 5372 0ff6 0A46     		mov	r2, r1
 5373 0ff8 83F83220 		strb	r2, [r3, #50]
1131:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 5374              		.loc 1 1131 0
 5375 0ffc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5376 0ffe 0C33     		adds	r3, r3, #12
 5377 1000 234A     		ldr	r2, .L365+4
 5378 1002 1344     		add	r3, r3, r2
 5379 1004 93F83230 		ldrb	r3, [r3, #50]
 5380 1008 DBB2     		uxtb	r3, r3
 5381 100a 002B     		cmp	r3, #0
 5382 100c 0AD0     		beq	.L350
 5383              		.loc 1 1131 0 is_stmt 0 discriminator 1
 5384 100e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5385 1010 0C33     		adds	r3, r3, #12
 5386 1012 1F4A     		ldr	r2, .L365+4
 5387 1014 1344     		add	r3, r3, r2
 5388 1016 93F83230 		ldrb	r3, [r3, #50]
 5389 101a DBB2     		uxtb	r3, r3
 5390 101c 03F0F003 		and	r3, r3, #240
 5391 1020 E02B     		cmp	r3, #224
 5392 1022 03D0     		beq	.L351
 5393              	.L350:
1132:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5394              		.loc 1 1132 0 is_stmt 1
 5395 1024 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1133:.\Protocolo.c **** 									return 0;
 5396              		.loc 1 1133 0
 5397 1028 0023     		movs	r3, #0
 5398 102a 2AE0     		b	.L167
 5399              	.L351:
1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5400              		.loc 1 1129 0 discriminator 2
 5401 102c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5402 102e 0133     		adds	r3, r3, #1
 5403 1030 FB73     		strb	r3, [r7, #15]
 5404              	.L349:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 119


1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5405              		.loc 1 1129 0 is_stmt 0 discriminator 1
 5406 1032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5407 1034 0B2B     		cmp	r3, #11
 5408 1036 D5D9     		bls	.L352
1134:.\Protocolo.c **** 								}								
1135:.\Protocolo.c **** 							}
1136:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5409              		.loc 1 1136 0 is_stmt 1
 5410 1038 0023     		movs	r3, #0
 5411 103a FB73     		strb	r3, [r7, #15]
 5412 103c 0DE0     		b	.L353
 5413              	.L354:
1137:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5414              		.loc 1 1137 0 discriminator 3
 5415 103e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5416 1040 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5417 1042 7232     		adds	r2, r2, #114
 5418 1044 1149     		ldr	r1, .L365
 5419 1046 8A5C     		ldrb	r2, [r1, r2]
 5420 1048 D1B2     		uxtb	r1, r2
 5421 104a 114A     		ldr	r2, .L365+4
 5422 104c 1344     		add	r3, r3, r2
 5423 104e 0A46     		mov	r2, r1
 5424 1050 83F85420 		strb	r2, [r3, #84]
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5425              		.loc 1 1136 0 discriminator 3
 5426 1054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5427 1056 0133     		adds	r3, r3, #1
 5428 1058 FB73     		strb	r3, [r7, #15]
 5429              	.L353:
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5430              		.loc 1 1136 0 is_stmt 0 discriminator 1
 5431 105a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5432 105c 042B     		cmp	r3, #4
 5433 105e EED9     		bls	.L354
1138:.\Protocolo.c **** 							}
1139:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5434              		.loc 1 1139 0 is_stmt 1
 5435 1060 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1140:.\Protocolo.c ****     						return 3;                            
 5436              		.loc 1 1140 0
 5437 1064 0323     		movs	r3, #3
 5438 1066 0CE0     		b	.L167
 5439              	.L334:
1141:.\Protocolo.c **** 						}
1142:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5440              		.loc 1 1142 0
 5441 1068 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1143:.\Protocolo.c **** 						return 1;			
 5442              		.loc 1 1143 0
 5443 106c 0123     		movs	r3, #1
 5444 106e 08E0     		b	.L167
 5445              	.L308:
1144:.\Protocolo.c **** 					}
1145:.\Protocolo.c **** 					else{
1146:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 120


 5446              		.loc 1 1146 0
 5447 1070 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1147:.\Protocolo.c **** 						return 0;		
 5448              		.loc 1 1147 0
 5449 1074 0023     		movs	r3, #0
 5450 1076 04E0     		b	.L167
 5451              	.L307:
1148:.\Protocolo.c **** 					}
1149:.\Protocolo.c **** 				}
1150:.\Protocolo.c **** 				else{
1151:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 5452              		.loc 1 1151 0
 5453 1078 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1152:.\Protocolo.c **** 					return 0;		
 5454              		.loc 1 1152 0
 5455 107c 0023     		movs	r3, #0
 5456 107e 00E0     		b	.L167
 5457              	.L154:
1153:.\Protocolo.c **** 				}				
1154:.\Protocolo.c **** 			}		
1155:.\Protocolo.c **** 		}
1156:.\Protocolo.c **** 	}
1157:.\Protocolo.c **** 	else{
1158:.\Protocolo.c **** 		return 0;
 5458              		.loc 1 1158 0
 5459 1080 0023     		movs	r3, #0
 5460              	.L167:
1159:.\Protocolo.c **** 	}
1160:.\Protocolo.c **** }
 5461              		.loc 1 1160 0
 5462 1082 1846     		mov	r0, r3
 5463 1084 1037     		adds	r7, r7, #16
 5464              		.cfi_def_cfa_offset 8
 5465 1086 BD46     		mov	sp, r7
 5466              		.cfi_def_cfa_register 13
 5467              		@ sp needed
 5468 1088 80BD     		pop	{r7, pc}
 5469              	.L366:
 5470 108a 00BF     		.align	2
 5471              	.L365:
 5472 108c 00000000 		.word	Surtidor_rxBuffer
 5473 1090 00000000 		.word	lado2
 5474              		.cfi_endproc
 5475              	.LFE72:
 5476              		.size	totales, .-totales
 5477              		.text
 5478              	.Letext0:
 5479              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5480              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5481              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5482              		.file 5 ".\\VariablesG.h"
 5483              		.file 6 "Generated_Source\\PSoC5/Surtidor.h"
 5484              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 5485              		.section	.debug_info,"",%progbits
 5486              	.Ldebug_info0:
 5487 0000 DC0B0000 		.4byte	0xbdc
 5488 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 121


 5489 0006 00000000 		.4byte	.Ldebug_abbrev0
 5490 000a 04       		.byte	0x4
 5491 000b 01       		.uleb128 0x1
 5492 000c 15030000 		.4byte	.LASF129
 5493 0010 01       		.byte	0x1
 5494 0011 64010000 		.4byte	.LASF130
 5495 0015 39000000 		.4byte	.LASF131
 5496 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5497 001d 00000000 		.4byte	0
 5498 0021 00000000 		.4byte	.Ldebug_line0
 5499 0025 02       		.uleb128 0x2
 5500 0026 01       		.byte	0x1
 5501 0027 06       		.byte	0x6
 5502 0028 0A050000 		.4byte	.LASF0
 5503 002c 02       		.uleb128 0x2
 5504 002d 01       		.byte	0x1
 5505 002e 08       		.byte	0x8
 5506 002f BA040000 		.4byte	.LASF1
 5507 0033 02       		.uleb128 0x2
 5508 0034 02       		.byte	0x2
 5509 0035 05       		.byte	0x5
 5510 0036 1A040000 		.4byte	.LASF2
 5511 003a 02       		.uleb128 0x2
 5512 003b 02       		.byte	0x2
 5513 003c 07       		.byte	0x7
 5514 003d 2C050000 		.4byte	.LASF3
 5515 0041 03       		.uleb128 0x3
 5516 0042 9E000000 		.4byte	.LASF9
 5517 0046 02       		.byte	0x2
 5518 0047 3F       		.byte	0x3f
 5519 0048 4C000000 		.4byte	0x4c
 5520 004c 02       		.uleb128 0x2
 5521 004d 04       		.byte	0x4
 5522 004e 05       		.byte	0x5
 5523 004f 24040000 		.4byte	.LASF4
 5524 0053 02       		.uleb128 0x2
 5525 0054 04       		.byte	0x4
 5526 0055 07       		.byte	0x7
 5527 0056 8B040000 		.4byte	.LASF5
 5528 005a 02       		.uleb128 0x2
 5529 005b 08       		.byte	0x8
 5530 005c 05       		.byte	0x5
 5531 005d E8020000 		.4byte	.LASF6
 5532 0061 02       		.uleb128 0x2
 5533 0062 08       		.byte	0x8
 5534 0063 07       		.byte	0x7
 5535 0064 4D010000 		.4byte	.LASF7
 5536 0068 04       		.uleb128 0x4
 5537 0069 04       		.byte	0x4
 5538 006a 05       		.byte	0x5
 5539 006b 696E7400 		.ascii	"int\000"
 5540 006f 02       		.uleb128 0x2
 5541 0070 04       		.byte	0x4
 5542 0071 07       		.byte	0x7
 5543 0072 89000000 		.4byte	.LASF8
 5544 0076 03       		.uleb128 0x3
 5545 0077 9D040000 		.4byte	.LASF10
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 122


 5546 007b 03       		.byte	0x3
 5547 007c 2C       		.byte	0x2c
 5548 007d 41000000 		.4byte	0x41
 5549 0081 03       		.uleb128 0x3
 5550 0082 45050000 		.4byte	.LASF11
 5551 0086 04       		.byte	0x4
 5552 0087 B4       		.byte	0xb4
 5553 0088 2C000000 		.4byte	0x2c
 5554 008c 03       		.uleb128 0x3
 5555 008d 73020000 		.4byte	.LASF12
 5556 0091 04       		.byte	0x4
 5557 0092 B5       		.byte	0xb5
 5558 0093 3A000000 		.4byte	0x3a
 5559 0097 02       		.uleb128 0x2
 5560 0098 04       		.byte	0x4
 5561 0099 04       		.byte	0x4
 5562 009a 0E010000 		.4byte	.LASF13
 5563 009e 02       		.uleb128 0x2
 5564 009f 08       		.byte	0x8
 5565 00a0 04       		.byte	0x4
 5566 00a1 4B050000 		.4byte	.LASF14
 5567 00a5 02       		.uleb128 0x2
 5568 00a6 01       		.byte	0x1
 5569 00a7 08       		.byte	0x8
 5570 00a8 58020000 		.4byte	.LASF15
 5571 00ac 05       		.uleb128 0x5
 5572 00ad 81000000 		.4byte	0x81
 5573 00b1 05       		.uleb128 0x5
 5574 00b2 8C000000 		.4byte	0x8c
 5575 00b6 02       		.uleb128 0x2
 5576 00b7 04       		.byte	0x4
 5577 00b8 07       		.byte	0x7
 5578 00b9 82040000 		.4byte	.LASF16
 5579 00bd 06       		.uleb128 0x6
 5580 00be 81000000 		.4byte	0x81
 5581 00c2 CD000000 		.4byte	0xcd
 5582 00c6 07       		.uleb128 0x7
 5583 00c7 B6000000 		.4byte	0xb6
 5584 00cb 03       		.byte	0x3
 5585 00cc 00       		.byte	0
 5586 00cd 08       		.uleb128 0x8
 5587 00ce 3A040000 		.4byte	.LASF21
 5588 00d2 5D       		.byte	0x5d
 5589 00d3 05       		.byte	0x5
 5590 00d4 5D       		.byte	0x5d
 5591 00d5 22010000 		.4byte	0x122
 5592 00d9 09       		.uleb128 0x9
 5593 00da 64697200 		.ascii	"dir\000"
 5594 00de 05       		.byte	0x5
 5595 00df 5E       		.byte	0x5e
 5596 00e0 AC000000 		.4byte	0xac
 5597 00e4 00       		.byte	0
 5598 00e5 0A       		.uleb128 0xa
 5599 00e6 D9030000 		.4byte	.LASF17
 5600 00ea 05       		.byte	0x5
 5601 00eb 5F       		.byte	0x5f
 5602 00ec AC000000 		.4byte	0xac
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 123


 5603 00f0 01       		.byte	0x1
 5604 00f1 0A       		.uleb128 0xa
 5605 00f2 AB020000 		.4byte	.LASF18
 5606 00f6 05       		.byte	0x5
 5607 00f7 60       		.byte	0x60
 5608 00f8 38010000 		.4byte	0x138
 5609 00fc 02       		.byte	0x2
 5610 00fd 09       		.uleb128 0x9
 5611 00fe 70707500 		.ascii	"ppu\000"
 5612 0102 05       		.byte	0x5
 5613 0103 61       		.byte	0x61
 5614 0104 53010000 		.4byte	0x153
 5615 0108 4A       		.byte	0x4a
 5616 0109 0A       		.uleb128 0xa
 5617 010a 8C050000 		.4byte	.LASF19
 5618 010e 05       		.byte	0x5
 5619 010f 62       		.byte	0x62
 5620 0110 6E010000 		.4byte	0x16e
 5621 0114 59       		.byte	0x59
 5622 0115 0A       		.uleb128 0xa
 5623 0116 69020000 		.4byte	.LASF20
 5624 011a 05       		.byte	0x5
 5625 011b 63       		.byte	0x63
 5626 011c AC000000 		.4byte	0xac
 5627 0120 5C       		.byte	0x5c
 5628 0121 00       		.byte	0
 5629 0122 06       		.uleb128 0x6
 5630 0123 81000000 		.4byte	0x81
 5631 0127 38010000 		.4byte	0x138
 5632 012b 07       		.uleb128 0x7
 5633 012c B6000000 		.4byte	0xb6
 5634 0130 02       		.byte	0x2
 5635 0131 07       		.uleb128 0x7
 5636 0132 B6000000 		.4byte	0xb6
 5637 0136 17       		.byte	0x17
 5638 0137 00       		.byte	0
 5639 0138 05       		.uleb128 0x5
 5640 0139 22010000 		.4byte	0x122
 5641 013d 06       		.uleb128 0x6
 5642 013e 81000000 		.4byte	0x81
 5643 0142 53010000 		.4byte	0x153
 5644 0146 07       		.uleb128 0x7
 5645 0147 B6000000 		.4byte	0xb6
 5646 014b 02       		.byte	0x2
 5647 014c 07       		.uleb128 0x7
 5648 014d B6000000 		.4byte	0xb6
 5649 0151 04       		.byte	0x4
 5650 0152 00       		.byte	0
 5651 0153 05       		.uleb128 0x5
 5652 0154 3D010000 		.4byte	0x13d
 5653 0158 06       		.uleb128 0x6
 5654 0159 81000000 		.4byte	0x81
 5655 015d 6E010000 		.4byte	0x16e
 5656 0161 07       		.uleb128 0x7
 5657 0162 B6000000 		.4byte	0xb6
 5658 0166 02       		.byte	0x2
 5659 0167 07       		.uleb128 0x7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 124


 5660 0168 B6000000 		.4byte	0xb6
 5661 016c 00       		.byte	0
 5662 016d 00       		.byte	0
 5663 016e 05       		.uleb128 0x5
 5664 016f 58010000 		.4byte	0x158
 5665 0173 08       		.uleb128 0x8
 5666 0174 BF030000 		.4byte	.LASF22
 5667 0178 76       		.byte	0x76
 5668 0179 05       		.byte	0x5
 5669 017a 76       		.byte	0x76
 5670 017b 62020000 		.4byte	0x262
 5671 017f 0A       		.uleb128 0xa
 5672 0180 DA000000 		.4byte	.LASF23
 5673 0184 05       		.byte	0x5
 5674 0185 77       		.byte	0x77
 5675 0186 81000000 		.4byte	0x81
 5676 018a 00       		.byte	0
 5677 018b 0A       		.uleb128 0xa
 5678 018c 8C050000 		.4byte	.LASF19
 5679 0190 05       		.byte	0x5
 5680 0191 78       		.byte	0x78
 5681 0192 81000000 		.4byte	0x81
 5682 0196 01       		.byte	0x1
 5683 0197 09       		.uleb128 0x9
 5684 0198 70707500 		.ascii	"ppu\000"
 5685 019c 05       		.byte	0x5
 5686 019d 79       		.byte	0x79
 5687 019e 62020000 		.4byte	0x262
 5688 01a2 02       		.byte	0x2
 5689 01a3 0A       		.uleb128 0xa
 5690 01a4 C6030000 		.4byte	.LASF24
 5691 01a8 05       		.byte	0x5
 5692 01a9 7A       		.byte	0x7a
 5693 01aa 72020000 		.4byte	0x272
 5694 01ae 07       		.byte	0x7
 5695 01af 0A       		.uleb128 0xa
 5696 01b0 ED010000 		.4byte	.LASF25
 5697 01b4 05       		.byte	0x5
 5698 01b5 7B       		.byte	0x7b
 5699 01b6 72020000 		.4byte	0x272
 5700 01ba 10       		.byte	0x10
 5701 01bb 0A       		.uleb128 0xa
 5702 01bc F6020000 		.4byte	.LASF26
 5703 01c0 05       		.byte	0x5
 5704 01c1 7C       		.byte	0x7c
 5705 01c2 81000000 		.4byte	0x81
 5706 01c6 19       		.byte	0x19
 5707 01c7 0A       		.uleb128 0xa
 5708 01c8 76050000 		.4byte	.LASF27
 5709 01cc 05       		.byte	0x5
 5710 01cd 7D       		.byte	0x7d
 5711 01ce 81000000 		.4byte	0x81
 5712 01d2 1A       		.byte	0x1a
 5713 01d3 0A       		.uleb128 0xa
 5714 01d4 07010000 		.4byte	.LASF28
 5715 01d8 05       		.byte	0x5
 5716 01d9 7E       		.byte	0x7e
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 125


 5717 01da 82020000 		.4byte	0x282
 5718 01de 1B       		.byte	0x1b
 5719 01df 09       		.uleb128 0x9
 5720 01e0 696400   		.ascii	"id\000"
 5721 01e3 05       		.byte	0x5
 5722 01e4 7F       		.byte	0x7f
 5723 01e5 92020000 		.4byte	0x292
 5724 01e9 23       		.byte	0x23
 5725 01ea 0A       		.uleb128 0xa
 5726 01eb 9F020000 		.4byte	.LASF29
 5727 01ef 05       		.byte	0x5
 5728 01f0 80       		.byte	0x80
 5729 01f1 92020000 		.4byte	0x292
 5730 01f5 33       		.byte	0x33
 5731 01f6 09       		.uleb128 0x9
 5732 01f7 6B6D00   		.ascii	"km\000"
 5733 01fa 05       		.byte	0x5
 5734 01fb 81       		.byte	0x81
 5735 01fc A2020000 		.4byte	0x2a2
 5736 0200 43       		.byte	0x43
 5737 0201 0A       		.uleb128 0xa
 5738 0202 C0010000 		.4byte	.LASF30
 5739 0206 05       		.byte	0x5
 5740 0207 82       		.byte	0x82
 5741 0208 72020000 		.4byte	0x272
 5742 020c 4E       		.byte	0x4e
 5743 020d 0A       		.uleb128 0xa
 5744 020e 44010000 		.4byte	.LASF31
 5745 0212 05       		.byte	0x5
 5746 0213 83       		.byte	0x83
 5747 0214 81000000 		.4byte	0x81
 5748 0218 57       		.byte	0x57
 5749 0219 0A       		.uleb128 0xa
 5750 021a 94020000 		.4byte	.LASF32
 5751 021e 05       		.byte	0x5
 5752 021f 84       		.byte	0x84
 5753 0220 81000000 		.4byte	0x81
 5754 0224 58       		.byte	0x58
 5755 0225 0A       		.uleb128 0xa
 5756 0226 0E030000 		.4byte	.LASF33
 5757 022a 05       		.byte	0x5
 5758 022b 85       		.byte	0x85
 5759 022c A2020000 		.4byte	0x2a2
 5760 0230 59       		.byte	0x59
 5761 0231 0A       		.uleb128 0xa
 5762 0232 00000000 		.4byte	.LASF34
 5763 0236 05       		.byte	0x5
 5764 0237 86       		.byte	0x86
 5765 0238 A2020000 		.4byte	0x2a2
 5766 023c 64       		.byte	0x64
 5767 023d 0A       		.uleb128 0xa
 5768 023e A5020000 		.4byte	.LASF35
 5769 0242 05       		.byte	0x5
 5770 0243 87       		.byte	0x87
 5771 0244 81000000 		.4byte	0x81
 5772 0248 6F       		.byte	0x6f
 5773 0249 0A       		.uleb128 0xa
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 126


 5774 024a AF040000 		.4byte	.LASF36
 5775 024e 05       		.byte	0x5
 5776 024f 88       		.byte	0x88
 5777 0250 81000000 		.4byte	0x81
 5778 0254 70       		.byte	0x70
 5779 0255 0A       		.uleb128 0xa
 5780 0256 E0030000 		.4byte	.LASF37
 5781 025a 05       		.byte	0x5
 5782 025b 89       		.byte	0x89
 5783 025c 62020000 		.4byte	0x262
 5784 0260 71       		.byte	0x71
 5785 0261 00       		.byte	0
 5786 0262 06       		.uleb128 0x6
 5787 0263 81000000 		.4byte	0x81
 5788 0267 72020000 		.4byte	0x272
 5789 026b 07       		.uleb128 0x7
 5790 026c B6000000 		.4byte	0xb6
 5791 0270 04       		.byte	0x4
 5792 0271 00       		.byte	0
 5793 0272 06       		.uleb128 0x6
 5794 0273 81000000 		.4byte	0x81
 5795 0277 82020000 		.4byte	0x282
 5796 027b 07       		.uleb128 0x7
 5797 027c B6000000 		.4byte	0xb6
 5798 0280 08       		.byte	0x8
 5799 0281 00       		.byte	0
 5800 0282 06       		.uleb128 0x6
 5801 0283 81000000 		.4byte	0x81
 5802 0287 92020000 		.4byte	0x292
 5803 028b 07       		.uleb128 0x7
 5804 028c B6000000 		.4byte	0xb6
 5805 0290 07       		.byte	0x7
 5806 0291 00       		.byte	0
 5807 0292 06       		.uleb128 0x6
 5808 0293 81000000 		.4byte	0x81
 5809 0297 A2020000 		.4byte	0x2a2
 5810 029b 07       		.uleb128 0x7
 5811 029c B6000000 		.4byte	0xb6
 5812 02a0 0F       		.byte	0xf
 5813 02a1 00       		.byte	0
 5814 02a2 06       		.uleb128 0x6
 5815 02a3 81000000 		.4byte	0x81
 5816 02a7 B2020000 		.4byte	0x2b2
 5817 02ab 07       		.uleb128 0x7
 5818 02ac B6000000 		.4byte	0xb6
 5819 02b0 0A       		.byte	0xa
 5820 02b1 00       		.byte	0
 5821 02b2 0B       		.uleb128 0xb
 5822 02b3 92050000 		.4byte	.LASF132
 5823 02b7 01       		.byte	0x1
 5824 02b8 3F       		.byte	0x3f
 5825 02b9 00000000 		.4byte	.LFB63
 5826 02bd 14000000 		.4byte	.LFE63-.LFB63
 5827 02c1 01       		.uleb128 0x1
 5828 02c2 9C       		.byte	0x9c
 5829 02c3 0C       		.uleb128 0xc
 5830 02c4 C8040000 		.4byte	.LASF38
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 127


 5831 02c8 01       		.byte	0x1
 5832 02c9 56       		.byte	0x56
 5833 02ca 81000000 		.4byte	0x81
 5834 02ce 00000000 		.4byte	.LFB64
 5835 02d2 98000000 		.4byte	.LFE64-.LFB64
 5836 02d6 01       		.uleb128 0x1
 5837 02d7 9C       		.byte	0x9c
 5838 02d8 F9020000 		.4byte	0x2f9
 5839 02dc 0D       		.uleb128 0xd
 5840 02dd 64697200 		.ascii	"dir\000"
 5841 02e1 01       		.byte	0x1
 5842 02e2 56       		.byte	0x56
 5843 02e3 81000000 		.4byte	0x81
 5844 02e7 02       		.uleb128 0x2
 5845 02e8 91       		.byte	0x91
 5846 02e9 6F       		.sleb128 -17
 5847 02ea 0E       		.uleb128 0xe
 5848 02eb D9030000 		.4byte	.LASF17
 5849 02ef 01       		.byte	0x1
 5850 02f0 57       		.byte	0x57
 5851 02f1 81000000 		.4byte	0x81
 5852 02f5 02       		.uleb128 0x2
 5853 02f6 91       		.byte	0x91
 5854 02f7 77       		.sleb128 -9
 5855 02f8 00       		.byte	0
 5856 02f9 0C       		.uleb128 0xc
 5857 02fa E5010000 		.4byte	.LASF39
 5858 02fe 01       		.byte	0x1
 5859 02ff 86       		.byte	0x86
 5860 0300 81000000 		.4byte	0x81
 5861 0304 00000000 		.4byte	.LFB65
 5862 0308 A0000000 		.4byte	.LFE65-.LFB65
 5863 030c 01       		.uleb128 0x1
 5864 030d 9C       		.byte	0x9c
 5865 030e 1F030000 		.4byte	0x31f
 5866 0312 0F       		.uleb128 0xf
 5867 0313 7800     		.ascii	"x\000"
 5868 0315 01       		.byte	0x1
 5869 0316 87       		.byte	0x87
 5870 0317 81000000 		.4byte	0x81
 5871 031b 02       		.uleb128 0x2
 5872 031c 91       		.byte	0x91
 5873 031d 77       		.sleb128 -9
 5874 031e 00       		.byte	0
 5875 031f 10       		.uleb128 0x10
 5876 0320 E3040000 		.4byte	.LASF43
 5877 0324 01       		.byte	0x1
 5878 0325 B2       		.byte	0xb2
 5879 0326 00000000 		.4byte	.LFB66
 5880 032a 36000000 		.4byte	.LFE66-.LFB66
 5881 032e 01       		.uleb128 0x1
 5882 032f 9C       		.byte	0x9c
 5883 0330 51030000 		.4byte	0x351
 5884 0334 0D       		.uleb128 0xd
 5885 0335 76616C00 		.ascii	"val\000"
 5886 0339 01       		.byte	0x1
 5887 033a B2       		.byte	0xb2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 128


 5888 033b 81000000 		.4byte	0x81
 5889 033f 02       		.uleb128 0x2
 5890 0340 91       		.byte	0x91
 5891 0341 6F       		.sleb128 -17
 5892 0342 0E       		.uleb128 0xe
 5893 0343 D9030000 		.4byte	.LASF17
 5894 0347 01       		.byte	0x1
 5895 0348 B3       		.byte	0xb3
 5896 0349 81000000 		.4byte	0x81
 5897 034d 02       		.uleb128 0x2
 5898 034e 91       		.byte	0x91
 5899 034f 77       		.sleb128 -9
 5900 0350 00       		.byte	0
 5901 0351 0C       		.uleb128 0xc
 5902 0352 6E040000 		.4byte	.LASF40
 5903 0356 01       		.byte	0x1
 5904 0357 CF       		.byte	0xcf
 5905 0358 81000000 		.4byte	0x81
 5906 035c 00000000 		.4byte	.LFB67
 5907 0360 7C010000 		.4byte	.LFE67-.LFB67
 5908 0364 01       		.uleb128 0x1
 5909 0365 9C       		.byte	0x9c
 5910 0366 A1030000 		.4byte	0x3a1
 5911 036a 0D       		.uleb128 0xd
 5912 036b 76616C00 		.ascii	"val\000"
 5913 036f 01       		.byte	0x1
 5914 0370 CF       		.byte	0xcf
 5915 0371 81000000 		.4byte	0x81
 5916 0375 02       		.uleb128 0x2
 5917 0376 91       		.byte	0x91
 5918 0377 4F       		.sleb128 -49
 5919 0378 0E       		.uleb128 0xe
 5920 0379 52050000 		.4byte	.LASF41
 5921 037d 01       		.byte	0x1
 5922 037e D0       		.byte	0xd0
 5923 037f A1030000 		.4byte	0x3a1
 5924 0383 02       		.uleb128 0x2
 5925 0384 91       		.byte	0x91
 5926 0385 5C       		.sleb128 -36
 5927 0386 0F       		.uleb128 0xf
 5928 0387 7800     		.ascii	"x\000"
 5929 0389 01       		.byte	0x1
 5930 038a D0       		.byte	0xd0
 5931 038b 81000000 		.4byte	0x81
 5932 038f 02       		.uleb128 0x2
 5933 0390 91       		.byte	0x91
 5934 0391 6F       		.sleb128 -17
 5935 0392 0E       		.uleb128 0xe
 5936 0393 3F020000 		.4byte	.LASF42
 5937 0397 01       		.byte	0x1
 5938 0398 D0       		.byte	0xd0
 5939 0399 72020000 		.4byte	0x272
 5940 039d 02       		.uleb128 0x2
 5941 039e 91       		.byte	0x91
 5942 039f 50       		.sleb128 -48
 5943 03a0 00       		.byte	0
 5944 03a1 06       		.uleb128 0x6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 129


 5945 03a2 81000000 		.4byte	0x81
 5946 03a6 B1030000 		.4byte	0x3b1
 5947 03aa 07       		.uleb128 0x7
 5948 03ab B6000000 		.4byte	0xb6
 5949 03af 12       		.byte	0x12
 5950 03b0 00       		.byte	0
 5951 03b1 11       		.uleb128 0x11
 5952 03b2 37020000 		.4byte	.LASF44
 5953 03b6 01       		.byte	0x1
 5954 03b7 2001     		.2byte	0x120
 5955 03b9 00000000 		.4byte	.LFB68
 5956 03bd 24000000 		.4byte	.LFE68-.LFB68
 5957 03c1 01       		.uleb128 0x1
 5958 03c2 9C       		.byte	0x9c
 5959 03c3 D7030000 		.4byte	0x3d7
 5960 03c7 12       		.uleb128 0x12
 5961 03c8 76616C00 		.ascii	"val\000"
 5962 03cc 01       		.byte	0x1
 5963 03cd 2001     		.2byte	0x120
 5964 03cf 81000000 		.4byte	0x81
 5965 03d3 02       		.uleb128 0x2
 5966 03d4 91       		.byte	0x91
 5967 03d5 77       		.sleb128 -9
 5968 03d6 00       		.byte	0
 5969 03d7 13       		.uleb128 0x13
 5970 03d8 F5010000 		.4byte	.LASF45
 5971 03dc 01       		.byte	0x1
 5972 03dd 3501     		.2byte	0x135
 5973 03df 81000000 		.4byte	0x81
 5974 03e3 00000000 		.4byte	.LFB69
 5975 03e7 54030000 		.4byte	.LFE69-.LFB69
 5976 03eb 01       		.uleb128 0x1
 5977 03ec 9C       		.byte	0x9c
 5978 03ed 0E040000 		.4byte	0x40e
 5979 03f1 12       		.uleb128 0x12
 5980 03f2 64697200 		.ascii	"dir\000"
 5981 03f6 01       		.byte	0x1
 5982 03f7 3501     		.2byte	0x135
 5983 03f9 81000000 		.4byte	0x81
 5984 03fd 02       		.uleb128 0x2
 5985 03fe 91       		.byte	0x91
 5986 03ff 6F       		.sleb128 -17
 5987 0400 14       		.uleb128 0x14
 5988 0401 7800     		.ascii	"x\000"
 5989 0403 01       		.byte	0x1
 5990 0404 3601     		.2byte	0x136
 5991 0406 81000000 		.4byte	0x81
 5992 040a 02       		.uleb128 0x2
 5993 040b 91       		.byte	0x91
 5994 040c 77       		.sleb128 -9
 5995 040d 00       		.byte	0
 5996 040e 13       		.uleb128 0x13
 5997 040f 78040000 		.4byte	.LASF46
 5998 0413 01       		.byte	0x1
 5999 0414 8D01     		.2byte	0x18d
 6000 0416 81000000 		.4byte	0x81
 6001 041a 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 130


 6002 041e 80080000 		.4byte	.LFE70-.LFB70
 6003 0422 01       		.uleb128 0x1
 6004 0423 9C       		.byte	0x9c
 6005 0424 AE040000 		.4byte	0x4ae
 6006 0428 12       		.uleb128 0x12
 6007 0429 64697200 		.ascii	"dir\000"
 6008 042d 01       		.byte	0x1
 6009 042e 8D01     		.2byte	0x18d
 6010 0430 81000000 		.4byte	0x81
 6011 0434 02       		.uleb128 0x2
 6012 0435 91       		.byte	0x91
 6013 0436 5F       		.sleb128 -33
 6014 0437 15       		.uleb128 0x15
 6015 0438 8C050000 		.4byte	.LASF19
 6016 043c 01       		.byte	0x1
 6017 043d 8D01     		.2byte	0x18d
 6018 043f 81000000 		.4byte	0x81
 6019 0443 02       		.uleb128 0x2
 6020 0444 91       		.byte	0x91
 6021 0445 5E       		.sleb128 -34
 6022 0446 15       		.uleb128 0x15
 6023 0447 16050000 		.4byte	.LASF47
 6024 044b 01       		.byte	0x1
 6025 044c 8D01     		.2byte	0x18d
 6026 044e AE040000 		.4byte	0x4ae
 6027 0452 02       		.uleb128 0x2
 6028 0453 91       		.byte	0x91
 6029 0454 58       		.sleb128 -40
 6030 0455 15       		.uleb128 0x15
 6031 0456 07010000 		.4byte	.LASF28
 6032 045a 01       		.byte	0x1
 6033 045b 8D01     		.2byte	0x18d
 6034 045d 81000000 		.4byte	0x81
 6035 0461 02       		.uleb128 0x2
 6036 0462 91       		.byte	0x91
 6037 0463 5D       		.sleb128 -35
 6038 0464 16       		.uleb128 0x16
 6039 0465 82000000 		.4byte	.LASF48
 6040 0469 01       		.byte	0x1
 6041 046a 8E01     		.2byte	0x18e
 6042 046c B4040000 		.4byte	0x4b4
 6043 0470 02       		.uleb128 0x2
 6044 0471 91       		.byte	0x91
 6045 0472 60       		.sleb128 -32
 6046 0473 16       		.uleb128 0x16
 6047 0474 BA030000 		.4byte	.LASF49
 6048 0478 01       		.byte	0x1
 6049 0479 8E01     		.2byte	0x18e
 6050 047b 81000000 		.4byte	0x81
 6051 047f 02       		.uleb128 0x2
 6052 0480 91       		.byte	0x91
 6053 0481 77       		.sleb128 -9
 6054 0482 16       		.uleb128 0x16
 6055 0483 51040000 		.4byte	.LASF50
 6056 0487 01       		.byte	0x1
 6057 0488 8E01     		.2byte	0x18e
 6058 048a 81000000 		.4byte	0x81
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 131


 6059 048e 02       		.uleb128 0x2
 6060 048f 91       		.byte	0x91
 6061 0490 76       		.sleb128 -10
 6062 0491 14       		.uleb128 0x14
 6063 0492 6900     		.ascii	"i\000"
 6064 0494 01       		.byte	0x1
 6065 0495 8E01     		.2byte	0x18e
 6066 0497 81000000 		.4byte	0x81
 6067 049b 02       		.uleb128 0x2
 6068 049c 91       		.byte	0x91
 6069 049d 75       		.sleb128 -11
 6070 049e 16       		.uleb128 0x16
 6071 049f BD000000 		.4byte	.LASF51
 6072 04a3 01       		.byte	0x1
 6073 04a4 8E01     		.2byte	0x18e
 6074 04a6 81000000 		.4byte	0x81
 6075 04aa 02       		.uleb128 0x2
 6076 04ab 91       		.byte	0x91
 6077 04ac 74       		.sleb128 -12
 6078 04ad 00       		.byte	0
 6079 04ae 17       		.uleb128 0x17
 6080 04af 04       		.byte	0x4
 6081 04b0 81000000 		.4byte	0x81
 6082 04b4 06       		.uleb128 0x6
 6083 04b5 81000000 		.4byte	0x81
 6084 04b9 C4040000 		.4byte	0x4c4
 6085 04bd 07       		.uleb128 0x7
 6086 04be B6000000 		.4byte	0xb6
 6087 04c2 11       		.byte	0x11
 6088 04c3 00       		.byte	0
 6089 04c4 13       		.uleb128 0x13
 6090 04c5 FF020000 		.4byte	.LASF52
 6091 04c9 01       		.byte	0x1
 6092 04ca 9102     		.2byte	0x291
 6093 04cc 81000000 		.4byte	0x81
 6094 04d0 00000000 		.4byte	.LFB71
 6095 04d4 7C020000 		.4byte	.LFE71-.LFB71
 6096 04d8 01       		.uleb128 0x1
 6097 04d9 9C       		.byte	0x9c
 6098 04da 37050000 		.4byte	0x537
 6099 04de 12       		.uleb128 0x12
 6100 04df 64697200 		.ascii	"dir\000"
 6101 04e3 01       		.byte	0x1
 6102 04e4 9102     		.2byte	0x291
 6103 04e6 81000000 		.4byte	0x81
 6104 04ea 02       		.uleb128 0x2
 6105 04eb 91       		.byte	0x91
 6106 04ec 5F       		.sleb128 -33
 6107 04ed 15       		.uleb128 0x15
 6108 04ee A8000000 		.4byte	.LASF53
 6109 04f2 01       		.byte	0x1
 6110 04f3 9102     		.2byte	0x291
 6111 04f5 AE040000 		.4byte	0x4ae
 6112 04f9 02       		.uleb128 0x2
 6113 04fa 91       		.byte	0x91
 6114 04fb 58       		.sleb128 -40
 6115 04fc 15       		.uleb128 0x15
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 132


 6116 04fd B5000000 		.4byte	.LASF54
 6117 0501 01       		.byte	0x1
 6118 0502 9102     		.2byte	0x291
 6119 0504 81000000 		.4byte	0x81
 6120 0508 02       		.uleb128 0x2
 6121 0509 91       		.byte	0x91
 6122 050a 5E       		.sleb128 -34
 6123 050b 16       		.uleb128 0x16
 6124 050c 82000000 		.4byte	.LASF48
 6125 0510 01       		.byte	0x1
 6126 0511 9202     		.2byte	0x292
 6127 0513 37050000 		.4byte	0x537
 6128 0517 02       		.uleb128 0x2
 6129 0518 91       		.byte	0x91
 6130 0519 64       		.sleb128 -28
 6131 051a 16       		.uleb128 0x16
 6132 051b BA030000 		.4byte	.LASF49
 6133 051f 01       		.byte	0x1
 6134 0520 9202     		.2byte	0x292
 6135 0522 81000000 		.4byte	0x81
 6136 0526 02       		.uleb128 0x2
 6137 0527 91       		.byte	0x91
 6138 0528 77       		.sleb128 -9
 6139 0529 14       		.uleb128 0x14
 6140 052a 7800     		.ascii	"x\000"
 6141 052c 01       		.byte	0x1
 6142 052d 9202     		.2byte	0x292
 6143 052f 81000000 		.4byte	0x81
 6144 0533 02       		.uleb128 0x2
 6145 0534 91       		.byte	0x91
 6146 0535 76       		.sleb128 -10
 6147 0536 00       		.byte	0
 6148 0537 06       		.uleb128 0x6
 6149 0538 81000000 		.4byte	0x81
 6150 053c 47050000 		.4byte	0x547
 6151 0540 07       		.uleb128 0x7
 6152 0541 B6000000 		.4byte	0xb6
 6153 0545 0E       		.byte	0xe
 6154 0546 00       		.byte	0
 6155 0547 13       		.uleb128 0x13
 6156 0548 AB020000 		.4byte	.LASF18
 6157 054c 01       		.byte	0x1
 6158 054d EA02     		.2byte	0x2ea
 6159 054f 81000000 		.4byte	0x81
 6160 0553 00000000 		.4byte	.LFB72
 6161 0557 94100000 		.4byte	.LFE72-.LFB72
 6162 055b 01       		.uleb128 0x1
 6163 055c 9C       		.byte	0x9c
 6164 055d 9A050000 		.4byte	0x59a
 6165 0561 12       		.uleb128 0x12
 6166 0562 64697200 		.ascii	"dir\000"
 6167 0566 01       		.byte	0x1
 6168 0567 EA02     		.2byte	0x2ea
 6169 0569 81000000 		.4byte	0x81
 6170 056d 02       		.uleb128 0x2
 6171 056e 91       		.byte	0x91
 6172 056f 6F       		.sleb128 -17
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 133


 6173 0570 15       		.uleb128 0x15
 6174 0571 07040000 		.4byte	.LASF55
 6175 0575 01       		.byte	0x1
 6176 0576 EA02     		.2byte	0x2ea
 6177 0578 81000000 		.4byte	0x81
 6178 057c 02       		.uleb128 0x2
 6179 057d 91       		.byte	0x91
 6180 057e 6E       		.sleb128 -18
 6181 057f 14       		.uleb128 0x14
 6182 0580 7800     		.ascii	"x\000"
 6183 0582 01       		.byte	0x1
 6184 0583 EB02     		.2byte	0x2eb
 6185 0585 81000000 		.4byte	0x81
 6186 0589 02       		.uleb128 0x2
 6187 058a 91       		.byte	0x91
 6188 058b 77       		.sleb128 -9
 6189 058c 14       		.uleb128 0x14
 6190 058d 7900     		.ascii	"y\000"
 6191 058f 01       		.byte	0x1
 6192 0590 EB02     		.2byte	0x2eb
 6193 0592 81000000 		.4byte	0x81
 6194 0596 02       		.uleb128 0x2
 6195 0597 91       		.byte	0x91
 6196 0598 76       		.sleb128 -10
 6197 0599 00       		.byte	0
 6198 059a 06       		.uleb128 0x6
 6199 059b 81000000 		.4byte	0x81
 6200 059f AA050000 		.4byte	0x5aa
 6201 05a3 07       		.uleb128 0x7
 6202 05a4 B6000000 		.4byte	0xb6
 6203 05a8 FF       		.byte	0xff
 6204 05a9 00       		.byte	0
 6205 05aa 18       		.uleb128 0x18
 6206 05ab AE010000 		.4byte	.LASF56
 6207 05af 06       		.byte	0x6
 6208 05b0 3E01     		.2byte	0x13e
 6209 05b2 B6050000 		.4byte	0x5b6
 6210 05b6 05       		.uleb128 0x5
 6211 05b7 9A050000 		.4byte	0x59a
 6212 05bb 18       		.uleb128 0x18
 6213 05bc 2D040000 		.4byte	.LASF57
 6214 05c0 07       		.byte	0x7
 6215 05c1 2A06     		.2byte	0x62a
 6216 05c3 C7050000 		.4byte	0x5c7
 6217 05c7 05       		.uleb128 0x5
 6218 05c8 76000000 		.4byte	0x76
 6219 05cc 19       		.uleb128 0x19
 6220 05cd C0020000 		.4byte	.LASF58
 6221 05d1 05       		.byte	0x5
 6222 05d2 43       		.byte	0x43
 6223 05d3 AC000000 		.4byte	0xac
 6224 05d7 05       		.uleb128 0x5
 6225 05d8 03       		.byte	0x3
 6226 05d9 00000000 		.4byte	count_teclas1
 6227 05dd 19       		.uleb128 0x19
 6228 05de 43040000 		.4byte	.LASF59
 6229 05e2 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 134


 6230 05e3 43       		.byte	0x43
 6231 05e4 AC000000 		.4byte	0xac
 6232 05e8 05       		.uleb128 0x5
 6233 05e9 03       		.byte	0x3
 6234 05ea 00000000 		.4byte	comas1
 6235 05ee 19       		.uleb128 0x19
 6236 05ef 4A040000 		.4byte	.LASF60
 6237 05f3 05       		.byte	0x5
 6238 05f4 43       		.byte	0x43
 6239 05f5 AC000000 		.4byte	0xac
 6240 05f9 05       		.uleb128 0x5
 6241 05fa 03       		.byte	0x3
 6242 05fb 00000000 		.4byte	comas2
 6243 05ff 19       		.uleb128 0x19
 6244 0600 70000000 		.4byte	.LASF61
 6245 0604 05       		.byte	0x5
 6246 0605 43       		.byte	0x43
 6247 0606 AC000000 		.4byte	0xac
 6248 060a 05       		.uleb128 0x5
 6249 060b 03       		.byte	0x3
 6250 060c 00000000 		.4byte	id_coma1
 6251 0610 19       		.uleb128 0x19
 6252 0611 04020000 		.4byte	.LASF62
 6253 0615 05       		.byte	0x5
 6254 0616 43       		.byte	0x43
 6255 0617 AC000000 		.4byte	0xac
 6256 061b 05       		.uleb128 0x5
 6257 061c 03       		.byte	0x3
 6258 061d 00000000 		.4byte	id_teclado1
 6259 0621 19       		.uleb128 0x19
 6260 0622 CE020000 		.4byte	.LASF63
 6261 0626 05       		.byte	0x5
 6262 0627 43       		.byte	0x43
 6263 0628 AC000000 		.4byte	0xac
 6264 062c 05       		.uleb128 0x5
 6265 062d 03       		.byte	0x3
 6266 062e 00000000 		.4byte	count_teclas2
 6267 0632 19       		.uleb128 0x19
 6268 0633 79000000 		.4byte	.LASF64
 6269 0637 05       		.byte	0x5
 6270 0638 43       		.byte	0x43
 6271 0639 AC000000 		.4byte	0xac
 6272 063d 05       		.uleb128 0x5
 6273 063e 03       		.byte	0x3
 6274 063f 00000000 		.4byte	id_coma2
 6275 0643 19       		.uleb128 0x19
 6276 0644 10020000 		.4byte	.LASF65
 6277 0648 05       		.byte	0x5
 6278 0649 43       		.byte	0x43
 6279 064a AC000000 		.4byte	0xac
 6280 064e 05       		.uleb128 0x5
 6281 064f 03       		.byte	0x3
 6282 0650 00000000 		.4byte	id_teclado2
 6283 0654 19       		.uleb128 0x19
 6284 0655 DC020000 		.4byte	.LASF66
 6285 0659 05       		.byte	0x5
 6286 065a 44       		.byte	0x44
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 135


 6287 065b B1000000 		.4byte	0xb1
 6288 065f 05       		.uleb128 0x5
 6289 0660 03       		.byte	0x3
 6290 0661 00000000 		.4byte	posx1
 6291 0665 19       		.uleb128 0x19
 6292 0666 AE030000 		.4byte	.LASF67
 6293 066a 05       		.byte	0x5
 6294 066b 44       		.byte	0x44
 6295 066c B1000000 		.4byte	0xb1
 6296 0670 05       		.uleb128 0x5
 6297 0671 03       		.byte	0x3
 6298 0672 00000000 		.4byte	posy1
 6299 0676 19       		.uleb128 0x19
 6300 0677 9E050000 		.4byte	.LASF68
 6301 067b 05       		.byte	0x5
 6302 067c 44       		.byte	0x44
 6303 067d B1000000 		.4byte	0xb1
 6304 0681 05       		.uleb128 0x5
 6305 0682 03       		.byte	0x3
 6306 0683 00000000 		.4byte	sizeletra1
 6307 0687 19       		.uleb128 0x19
 6308 0688 E2020000 		.4byte	.LASF69
 6309 068c 05       		.byte	0x5
 6310 068d 44       		.byte	0x44
 6311 068e B1000000 		.4byte	0xb1
 6312 0692 05       		.uleb128 0x5
 6313 0693 03       		.byte	0x3
 6314 0694 00000000 		.4byte	posx2
 6315 0698 19       		.uleb128 0x19
 6316 0699 B4030000 		.4byte	.LASF70
 6317 069d 05       		.byte	0x5
 6318 069e 44       		.byte	0x44
 6319 069f B1000000 		.4byte	0xb1
 6320 06a3 05       		.uleb128 0x5
 6321 06a4 03       		.byte	0x3
 6322 06a5 00000000 		.4byte	posy2
 6323 06a9 19       		.uleb128 0x19
 6324 06aa A9050000 		.4byte	.LASF71
 6325 06ae 05       		.byte	0x5
 6326 06af 44       		.byte	0x44
 6327 06b0 B1000000 		.4byte	0xb1
 6328 06b4 05       		.uleb128 0x5
 6329 06b5 03       		.byte	0x3
 6330 06b6 00000000 		.4byte	sizeletra2
 6331 06ba 19       		.uleb128 0x19
 6332 06bb CA000000 		.4byte	.LASF72
 6333 06bf 05       		.byte	0x5
 6334 06c0 45       		.byte	0x45
 6335 06c1 AC000000 		.4byte	0xac
 6336 06c5 05       		.uleb128 0x5
 6337 06c6 03       		.byte	0x3
 6338 06c7 00000000 		.4byte	teclas1
 6339 06cb 19       		.uleb128 0x19
 6340 06cc D2000000 		.4byte	.LASF73
 6341 06d0 05       		.byte	0x5
 6342 06d1 45       		.byte	0x45
 6343 06d2 AC000000 		.4byte	0xac
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 136


 6344 06d6 05       		.uleb128 0x5
 6345 06d7 03       		.byte	0x3
 6346 06d8 00000000 		.4byte	teclas2
 6347 06dc 19       		.uleb128 0x19
 6348 06dd 09000000 		.4byte	.LASF74
 6349 06e1 05       		.byte	0x5
 6350 06e2 46       		.byte	0x46
 6351 06e3 AC000000 		.4byte	0xac
 6352 06e7 05       		.uleb128 0x5
 6353 06e8 03       		.byte	0x3
 6354 06e9 00000000 		.4byte	flujo_LCD1
 6355 06ed 19       		.uleb128 0x19
 6356 06ee 14000000 		.4byte	.LASF75
 6357 06f2 05       		.byte	0x5
 6358 06f3 46       		.byte	0x46
 6359 06f4 AC000000 		.4byte	0xac
 6360 06f8 05       		.uleb128 0x5
 6361 06f9 03       		.byte	0x3
 6362 06fa 00000000 		.4byte	flujo_LCD2
 6363 06fe 19       		.uleb128 0x19
 6364 06ff CF010000 		.4byte	.LASF76
 6365 0703 05       		.byte	0x5
 6366 0704 47       		.byte	0x47
 6367 0705 AC000000 		.4byte	0xac
 6368 0709 05       		.uleb128 0x5
 6369 070a 03       		.byte	0x3
 6370 070b 00000000 		.4byte	flujo_pos1
 6371 070f 19       		.uleb128 0x19
 6372 0710 DA010000 		.4byte	.LASF77
 6373 0714 05       		.byte	0x5
 6374 0715 47       		.byte	0x47
 6375 0716 AC000000 		.4byte	0xac
 6376 071a 05       		.uleb128 0x5
 6377 071b 03       		.byte	0x3
 6378 071c 00000000 		.4byte	flujo_pos2
 6379 0720 19       		.uleb128 0x19
 6380 0721 8B010000 		.4byte	.LASF78
 6381 0725 05       		.byte	0x5
 6382 0726 48       		.byte	0x48
 6383 0727 AC000000 		.4byte	0xac
 6384 072b 05       		.uleb128 0x5
 6385 072c 03       		.byte	0x3
 6386 072d 00000000 		.4byte	seleccion_pos
 6387 0731 19       		.uleb128 0x19
 6388 0732 D3040000 		.4byte	.LASF79
 6389 0736 05       		.byte	0x5
 6390 0737 49       		.byte	0x49
 6391 0738 AC000000 		.4byte	0xac
 6392 073c 05       		.uleb128 0x5
 6393 073d 03       		.byte	0x3
 6394 073e 00000000 		.4byte	flujo_pos
 6395 0742 19       		.uleb128 0x19
 6396 0743 78010000 		.4byte	.LASF80
 6397 0747 05       		.byte	0x5
 6398 0748 4A       		.byte	0x4a
 6399 0749 AC000000 		.4byte	0xac
 6400 074d 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 137


 6401 074e 03       		.byte	0x3
 6402 074f 00000000 		.4byte	venta_activa
 6403 0753 19       		.uleb128 0x19
 6404 0754 36010000 		.4byte	.LASF81
 6405 0758 05       		.byte	0x5
 6406 0759 4A       		.byte	0x4a
 6407 075a AC000000 		.4byte	0xac
 6408 075e 05       		.uleb128 0x5
 6409 075f 03       		.byte	0x3
 6410 0760 00000000 		.4byte	venta_activa2
 6411 0764 06       		.uleb128 0x6
 6412 0765 81000000 		.4byte	0x81
 6413 0769 74070000 		.4byte	0x774
 6414 076d 07       		.uleb128 0x7
 6415 076e B6000000 		.4byte	0xb6
 6416 0772 1D       		.byte	0x1d
 6417 0773 00       		.byte	0
 6418 0774 19       		.uleb128 0x19
 6419 0775 CD030000 		.4byte	.LASF82
 6420 0779 05       		.byte	0x5
 6421 077a 4B       		.byte	0x4b
 6422 077b 85070000 		.4byte	0x785
 6423 077f 05       		.uleb128 0x5
 6424 0780 03       		.byte	0x3
 6425 0781 00000000 		.4byte	Buffer_LCD1
 6426 0785 05       		.uleb128 0x5
 6427 0786 64070000 		.4byte	0x764
 6428 078a 19       		.uleb128 0x19
 6429 078b 4C020000 		.4byte	.LASF83
 6430 078f 05       		.byte	0x5
 6431 0790 4C       		.byte	0x4c
 6432 0791 9B070000 		.4byte	0x79b
 6433 0795 05       		.uleb128 0x5
 6434 0796 03       		.byte	0x3
 6435 0797 00000000 		.4byte	Buffer_LCD2
 6436 079b 05       		.uleb128 0x5
 6437 079c 64070000 		.4byte	0x764
 6438 07a0 19       		.uleb128 0x19
 6439 07a1 1C050000 		.4byte	.LASF84
 6440 07a5 05       		.byte	0x5
 6441 07a6 4D       		.byte	0x4d
 6442 07a7 AC000000 		.4byte	0xac
 6443 07ab 05       		.uleb128 0x5
 6444 07ac 03       		.byte	0x3
 6445 07ad 00000000 		.4byte	count_protector
 6446 07b1 19       		.uleb128 0x19
 6447 07b2 1F000000 		.4byte	.LASF85
 6448 07b6 05       		.byte	0x5
 6449 07b7 4D       		.byte	0x4d
 6450 07b8 AC000000 		.4byte	0xac
 6451 07bc 05       		.uleb128 0x5
 6452 07bd 03       		.byte	0x3
 6453 07be 00000000 		.4byte	count_protector2
 6454 07c2 19       		.uleb128 0x19
 6455 07c3 B3020000 		.4byte	.LASF86
 6456 07c7 05       		.byte	0x5
 6457 07c8 4E       		.byte	0x4e
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 138


 6458 07c9 D3070000 		.4byte	0x7d3
 6459 07cd 05       		.uleb128 0x5
 6460 07ce 03       		.byte	0x3
 6461 07cf 00000000 		.4byte	password_lcd
 6462 07d3 05       		.uleb128 0x5
 6463 07d4 72020000 		.4byte	0x272
 6464 07d8 19       		.uleb128 0x19
 6465 07d9 7F050000 		.4byte	.LASF87
 6466 07dd 05       		.byte	0x5
 6467 07de 4F       		.byte	0x4f
 6468 07df B1000000 		.4byte	0xb1
 6469 07e3 05       		.uleb128 0x5
 6470 07e4 03       		.byte	0x3
 6471 07e5 00000000 		.4byte	imagen_grado
 6472 07e9 06       		.uleb128 0x6
 6473 07ea 8C000000 		.4byte	0x8c
 6474 07ee FF070000 		.4byte	0x7ff
 6475 07f2 07       		.uleb128 0x7
 6476 07f3 B6000000 		.4byte	0xb6
 6477 07f7 01       		.byte	0x1
 6478 07f8 07       		.uleb128 0x7
 6479 07f9 B6000000 		.4byte	0xb6
 6480 07fd 01       		.byte	0x1
 6481 07fe 00       		.byte	0
 6482 07ff 19       		.uleb128 0x19
 6483 0800 FD000000 		.4byte	.LASF88
 6484 0804 05       		.byte	0x5
 6485 0805 50       		.byte	0x50
 6486 0806 10080000 		.4byte	0x810
 6487 080a 05       		.uleb128 0x5
 6488 080b 03       		.byte	0x3
 6489 080c 00000000 		.4byte	prox_caso
 6490 0810 05       		.uleb128 0x5
 6491 0811 E9070000 		.4byte	0x7e9
 6492 0815 06       		.uleb128 0x6
 6493 0816 81000000 		.4byte	0x81
 6494 081a 25080000 		.4byte	0x825
 6495 081e 07       		.uleb128 0x7
 6496 081f B6000000 		.4byte	0xb6
 6497 0823 02       		.byte	0x2
 6498 0824 00       		.byte	0
 6499 0825 19       		.uleb128 0x19
 6500 0826 5D020000 		.4byte	.LASF89
 6501 082a 05       		.byte	0x5
 6502 082b 51       		.byte	0x51
 6503 082c 36080000 		.4byte	0x836
 6504 0830 05       		.uleb128 0x5
 6505 0831 03       		.byte	0x3
 6506 0832 00000000 		.4byte	bloqueo_LCD
 6507 0836 05       		.uleb128 0x5
 6508 0837 15080000 		.4byte	0x815
 6509 083b 19       		.uleb128 0x19
 6510 083c 6A050000 		.4byte	.LASF90
 6511 0840 05       		.byte	0x5
 6512 0841 52       		.byte	0x52
 6513 0842 4C080000 		.4byte	0x84c
 6514 0846 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 139


 6515 0847 03       		.byte	0x3
 6516 0848 00000000 		.4byte	id_estacion
 6517 084c 05       		.uleb128 0x5
 6518 084d 62020000 		.4byte	0x262
 6519 0851 19       		.uleb128 0x19
 6520 0852 1C020000 		.4byte	.LASF91
 6521 0856 05       		.byte	0x5
 6522 0857 53       		.byte	0x53
 6523 0858 62080000 		.4byte	0x862
 6524 085c 05       		.uleb128 0x5
 6525 085d 03       		.byte	0x3
 6526 085e 00000000 		.4byte	id_venta
 6527 0862 05       		.uleb128 0x5
 6528 0863 82020000 		.4byte	0x282
 6529 0867 06       		.uleb128 0x6
 6530 0868 81000000 		.4byte	0x81
 6531 086c 77080000 		.4byte	0x877
 6532 0870 07       		.uleb128 0x7
 6533 0871 B6000000 		.4byte	0xb6
 6534 0875 C7       		.byte	0xc7
 6535 0876 00       		.byte	0
 6536 0877 19       		.uleb128 0x19
 6537 0878 5C050000 		.4byte	.LASF92
 6538 087c 05       		.byte	0x5
 6539 087d 54       		.byte	0x54
 6540 087e 88080000 		.4byte	0x888
 6541 0882 05       		.uleb128 0x5
 6542 0883 03       		.byte	0x3
 6543 0884 00000000 		.4byte	trama_totales
 6544 0888 05       		.uleb128 0x5
 6545 0889 67080000 		.4byte	0x867
 6546 088d 19       		.uleb128 0x19
 6547 088e EF030000 		.4byte	.LASF93
 6548 0892 05       		.byte	0x5
 6549 0893 58       		.byte	0x58
 6550 0894 AC000000 		.4byte	0xac
 6551 0898 05       		.uleb128 0x5
 6552 0899 03       		.byte	0x3
 6553 089a 00000000 		.4byte	ppux10
 6554 089e 06       		.uleb128 0x6
 6555 089f 81000000 		.4byte	0x81
 6556 08a3 AE080000 		.4byte	0x8ae
 6557 08a7 07       		.uleb128 0x7
 6558 08a8 B6000000 		.4byte	0xb6
 6559 08ac 10       		.byte	0x10
 6560 08ad 00       		.byte	0
 6561 08ae 19       		.uleb128 0x19
 6562 08af 56040000 		.4byte	.LASF94
 6563 08b3 05       		.byte	0x5
 6564 08b4 59       		.byte	0x59
 6565 08b5 BF080000 		.4byte	0x8bf
 6566 08b9 05       		.uleb128 0x5
 6567 08ba 03       		.byte	0x3
 6568 08bb 00000000 		.4byte	nombre_pro1
 6569 08bf 05       		.uleb128 0x5
 6570 08c0 9E080000 		.4byte	0x89e
 6571 08c4 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 140


 6572 08c5 FE040000 		.4byte	.LASF95
 6573 08c9 05       		.byte	0x5
 6574 08ca 59       		.byte	0x59
 6575 08cb D5080000 		.4byte	0x8d5
 6576 08cf 05       		.uleb128 0x5
 6577 08d0 03       		.byte	0x3
 6578 08d1 00000000 		.4byte	nombre_pro2
 6579 08d5 05       		.uleb128 0x5
 6580 08d6 9E080000 		.4byte	0x89e
 6581 08da 19       		.uleb128 0x19
 6582 08db 62040000 		.4byte	.LASF96
 6583 08df 05       		.byte	0x5
 6584 08e0 59       		.byte	0x59
 6585 08e1 EB080000 		.4byte	0x8eb
 6586 08e5 05       		.uleb128 0x5
 6587 08e6 03       		.byte	0x3
 6588 08e7 00000000 		.4byte	nombre_pro3
 6589 08eb 05       		.uleb128 0x5
 6590 08ec 9E080000 		.4byte	0x89e
 6591 08f0 19       		.uleb128 0x19
 6592 08f1 96000000 		.4byte	.LASF97
 6593 08f5 05       		.byte	0x5
 6594 08f6 5A       		.byte	0x5a
 6595 08f7 01090000 		.4byte	0x901
 6596 08fb 05       		.uleb128 0x5
 6597 08fc 03       		.byte	0x3
 6598 08fd 00000000 		.4byte	version
 6599 0901 05       		.uleb128 0x5
 6600 0902 BD000000 		.4byte	0xbd
 6601 0906 19       		.uleb128 0x19
 6602 0907 C6010000 		.4byte	.LASF98
 6603 090b 05       		.byte	0x5
 6604 090c 5B       		.byte	0x5b
 6605 090d AC000000 		.4byte	0xac
 6606 0911 05       		.uleb128 0x5
 6607 0912 03       		.byte	0x3
 6608 0913 00000000 		.4byte	kmscreen
 6609 0917 19       		.uleb128 0x19
 6610 0918 A5040000 		.4byte	.LASF99
 6611 091c 05       		.byte	0x5
 6612 091d 5B       		.byte	0x5b
 6613 091e AC000000 		.4byte	0xac
 6614 0922 05       		.uleb128 0x5
 6615 0923 03       		.byte	0x3
 6616 0924 00000000 		.4byte	pantallas
 6617 0928 19       		.uleb128 0x19
 6618 0929 30000000 		.4byte	.LASF100
 6619 092d 05       		.byte	0x5
 6620 092e 5B       		.byte	0x5b
 6621 092f AC000000 		.4byte	0xac
 6622 0933 05       		.uleb128 0x5
 6623 0934 03       		.byte	0x3
 6624 0935 00000000 		.4byte	efectivo
 6625 0939 19       		.uleb128 0x19
 6626 093a 72010000 		.4byte	.LASF101
 6627 093e 05       		.byte	0x5
 6628 093f 65       		.byte	0x65
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 141


 6629 0940 CD000000 		.4byte	0xcd
 6630 0944 05       		.uleb128 0x5
 6631 0945 03       		.byte	0x3
 6632 0946 00000000 		.4byte	lado1
 6633 094a 19       		.uleb128 0x19
 6634 094b DD040000 		.4byte	.LASF102
 6635 094f 05       		.byte	0x5
 6636 0950 66       		.byte	0x66
 6637 0951 CD000000 		.4byte	0xcd
 6638 0955 05       		.uleb128 0x5
 6639 0956 03       		.byte	0x3
 6640 0957 00000000 		.4byte	lado2
 6641 095b 19       		.uleb128 0x19
 6642 095c 85010000 		.4byte	.LASF103
 6643 0960 05       		.byte	0x5
 6644 0961 67       		.byte	0x67
 6645 0962 CD000000 		.4byte	0xcd
 6646 0966 05       		.uleb128 0x5
 6647 0967 03       		.byte	0x3
 6648 0968 00000000 		.4byte	lado3
 6649 096c 19       		.uleb128 0x19
 6650 096d ED040000 		.4byte	.LASF104
 6651 0971 05       		.byte	0x5
 6652 0972 68       		.byte	0x68
 6653 0973 CD000000 		.4byte	0xcd
 6654 0977 05       		.uleb128 0x5
 6655 0978 03       		.byte	0x3
 6656 0979 00000000 		.4byte	lado4
 6657 097d 06       		.uleb128 0x6
 6658 097e 81000000 		.4byte	0x81
 6659 0982 8D090000 		.4byte	0x98d
 6660 0986 07       		.uleb128 0x7
 6661 0987 B6000000 		.4byte	0xb6
 6662 098b 20       		.byte	0x20
 6663 098c 00       		.byte	0
 6664 098d 19       		.uleb128 0x19
 6665 098e F6030000 		.4byte	.LASF105
 6666 0992 05       		.byte	0x5
 6667 0993 6C       		.byte	0x6c
 6668 0994 9E090000 		.4byte	0x99e
 6669 0998 05       		.uleb128 0x5
 6670 0999 03       		.byte	0x3
 6671 099a 00000000 		.4byte	nombre
 6672 099e 05       		.uleb128 0x5
 6673 099f 7D090000 		.4byte	0x97d
 6674 09a3 1A       		.uleb128 0x1a
 6675 09a4 6E697400 		.ascii	"nit\000"
 6676 09a8 05       		.byte	0x5
 6677 09a9 6D       		.byte	0x6d
 6678 09aa B4090000 		.4byte	0x9b4
 6679 09ae 05       		.uleb128 0x5
 6680 09af 03       		.byte	0x3
 6681 09b0 00000000 		.4byte	nit
 6682 09b4 05       		.uleb128 0x5
 6683 09b5 37050000 		.4byte	0x537
 6684 09b9 06       		.uleb128 0x6
 6685 09ba 81000000 		.4byte	0x81
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 142


 6686 09be C9090000 		.4byte	0x9c9
 6687 09c2 07       		.uleb128 0x7
 6688 09c3 B6000000 		.4byte	0xb6
 6689 09c7 13       		.byte	0x13
 6690 09c8 00       		.byte	0
 6691 09c9 19       		.uleb128 0x19
 6692 09ca FB010000 		.4byte	.LASF106
 6693 09ce 05       		.byte	0x5
 6694 09cf 6E       		.byte	0x6e
 6695 09d0 DA090000 		.4byte	0x9da
 6696 09d4 05       		.uleb128 0x5
 6697 09d5 03       		.byte	0x3
 6698 09d6 00000000 		.4byte	telefono
 6699 09da 05       		.uleb128 0x5
 6700 09db B9090000 		.4byte	0x9b9
 6701 09df 19       		.uleb128 0x19
 6702 09e0 F3000000 		.4byte	.LASF107
 6703 09e4 05       		.byte	0x5
 6704 09e5 6F       		.byte	0x6f
 6705 09e6 F0090000 		.4byte	0x9f0
 6706 09ea 05       		.uleb128 0x5
 6707 09eb 03       		.byte	0x3
 6708 09ec 00000000 		.4byte	direccion
 6709 09f0 05       		.uleb128 0x5
 6710 09f1 7D090000 		.4byte	0x97d
 6711 09f5 06       		.uleb128 0x6
 6712 09f6 81000000 		.4byte	0x81
 6713 09fa 050A0000 		.4byte	0xa05
 6714 09fe 07       		.uleb128 0x7
 6715 09ff B6000000 		.4byte	0xb6
 6716 0a03 1F       		.byte	0x1f
 6717 0a04 00       		.byte	0
 6718 0a05 19       		.uleb128 0x19
 6719 0a06 2A010000 		.4byte	.LASF108
 6720 0a0a 05       		.byte	0x5
 6721 0a0b 70       		.byte	0x70
 6722 0a0c 160A0000 		.4byte	0xa16
 6723 0a10 05       		.uleb128 0x5
 6724 0a11 03       		.byte	0x3
 6725 0a12 00000000 		.4byte	lema1
 6726 0a16 05       		.uleb128 0x5
 6727 0a17 F5090000 		.4byte	0x9f5
 6728 0a1b 19       		.uleb128 0x19
 6729 0a1c 30010000 		.4byte	.LASF109
 6730 0a20 05       		.byte	0x5
 6731 0a21 71       		.byte	0x71
 6732 0a22 2C0A0000 		.4byte	0xa2c
 6733 0a26 05       		.uleb128 0x5
 6734 0a27 03       		.byte	0x3
 6735 0a28 00000000 		.4byte	lema2
 6736 0a2c 05       		.uleb128 0x5
 6737 0a2d F5090000 		.4byte	0x9f5
 6738 0a31 06       		.uleb128 0x6
 6739 0a32 81000000 		.4byte	0x81
 6740 0a36 410A0000 		.4byte	0xa41
 6741 0a3a 07       		.uleb128 0x7
 6742 0a3b B6000000 		.4byte	0xb6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 143


 6743 0a3f 01       		.byte	0x1
 6744 0a40 00       		.byte	0
 6745 0a41 19       		.uleb128 0x19
 6746 0a42 12040000 		.4byte	.LASF110
 6747 0a46 05       		.byte	0x5
 6748 0a47 72       		.byte	0x72
 6749 0a48 520A0000 		.4byte	0xa52
 6750 0a4c 05       		.uleb128 0x5
 6751 0a4d 03       		.byte	0x3
 6752 0a4e 00000000 		.4byte	id_logo
 6753 0a52 05       		.uleb128 0x5
 6754 0a53 310A0000 		.4byte	0xa31
 6755 0a57 1A       		.uleb128 0x1a
 6756 0a58 6B6D00   		.ascii	"km\000"
 6757 0a5b 05       		.byte	0x5
 6758 0a5c 73       		.byte	0x73
 6759 0a5d 670A0000 		.4byte	0xa67
 6760 0a61 05       		.uleb128 0x5
 6761 0a62 03       		.byte	0x3
 6762 0a63 00000000 		.4byte	km
 6763 0a67 05       		.uleb128 0x5
 6764 0a68 310A0000 		.4byte	0xa31
 6765 0a6c 19       		.uleb128 0x19
 6766 0a6d 3F050000 		.4byte	.LASF111
 6767 0a71 05       		.byte	0x5
 6768 0a72 74       		.byte	0x74
 6769 0a73 15080000 		.4byte	0x815
 6770 0a77 05       		.uleb128 0x5
 6771 0a78 03       		.byte	0x3
 6772 0a79 00000000 		.4byte	fecha
 6773 0a7d 19       		.uleb128 0x19
 6774 0a7e C5000000 		.4byte	.LASF112
 6775 0a82 05       		.byte	0x5
 6776 0a83 75       		.byte	0x75
 6777 0a84 310A0000 		.4byte	0xa31
 6778 0a88 05       		.uleb128 0x5
 6779 0a89 03       		.byte	0x3
 6780 0a8a 00000000 		.4byte	hora
 6781 0a8e 19       		.uleb128 0x19
 6782 0a8f E3000000 		.4byte	.LASF113
 6783 0a93 05       		.byte	0x5
 6784 0a94 8B       		.byte	0x8b
 6785 0a95 73010000 		.4byte	0x173
 6786 0a99 05       		.uleb128 0x5
 6787 0a9a 03       		.byte	0x3
 6788 0a9b 00000000 		.4byte	rventa1
 6789 0a9f 19       		.uleb128 0x19
 6790 0aa0 EB000000 		.4byte	.LASF114
 6791 0aa4 05       		.byte	0x5
 6792 0aa5 8C       		.byte	0x8c
 6793 0aa6 73010000 		.4byte	0x173
 6794 0aaa 05       		.uleb128 0x5
 6795 0aab 03       		.byte	0x3
 6796 0aac 00000000 		.4byte	rventa2
 6797 0ab0 19       		.uleb128 0x19
 6798 0ab1 AF000000 		.4byte	.LASF115
 6799 0ab5 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 144


 6800 0ab6 91       		.byte	0x91
 6801 0ab7 81000000 		.4byte	0x81
 6802 0abb 05       		.uleb128 0x5
 6803 0abc 03       		.byte	0x3
 6804 0abd 00000000 		.4byte	ok_RF
 6805 0ac1 19       		.uleb128 0x19
 6806 0ac2 F3040000 		.4byte	.LASF116
 6807 0ac6 05       		.byte	0x5
 6808 0ac7 92       		.byte	0x92
 6809 0ac8 81000000 		.4byte	0x81
 6810 0acc 05       		.uleb128 0x5
 6811 0acd 03       		.byte	0x3
 6812 0ace 00000000 		.4byte	ok_datosRF
 6813 0ad2 19       		.uleb128 0x19
 6814 0ad3 30020000 		.4byte	.LASF117
 6815 0ad7 05       		.byte	0x5
 6816 0ad8 93       		.byte	0x93
 6817 0ad9 67080000 		.4byte	0x867
 6818 0add 05       		.uleb128 0x5
 6819 0ade 03       		.byte	0x3
 6820 0adf 00000000 		.4byte	rf_mod
 6821 0ae3 06       		.uleb128 0x6
 6822 0ae4 81000000 		.4byte	0x81
 6823 0ae8 F30A0000 		.4byte	0xaf3
 6824 0aec 07       		.uleb128 0x7
 6825 0aed B6000000 		.4byte	0xb6
 6826 0af1 3F       		.byte	0x3f
 6827 0af2 00       		.byte	0
 6828 0af3 19       		.uleb128 0x19
 6829 0af4 1F010000 		.4byte	.LASF118
 6830 0af8 05       		.byte	0x5
 6831 0af9 98       		.byte	0x98
 6832 0afa E30A0000 		.4byte	0xae3
 6833 0afe 05       		.uleb128 0x5
 6834 0aff 03       		.byte	0x3
 6835 0b00 00000000 		.4byte	buffer_i2c
 6836 0b04 19       		.uleb128 0x19
 6837 0b05 FD030000 		.4byte	.LASF119
 6838 0b09 05       		.byte	0x5
 6839 0b0a 9D       		.byte	0x9d
 6840 0b0b 81000000 		.4byte	0x81
 6841 0b0f 05       		.uleb128 0x5
 6842 0b10 03       		.byte	0x3
 6843 0b11 00000000 		.4byte	crc_total
 6844 0b15 19       		.uleb128 0x19
 6845 0b16 86020000 		.4byte	.LASF120
 6846 0b1a 05       		.byte	0x5
 6847 0b1b A1       		.byte	0xa1
 6848 0b1c 310A0000 		.4byte	0xa31
 6849 0b20 05       		.uleb128 0x5
 6850 0b21 03       		.byte	0x3
 6851 0b22 00000000 		.4byte	print1
 6852 0b26 19       		.uleb128 0x19
 6853 0b27 8D020000 		.4byte	.LASF121
 6854 0b2b 05       		.byte	0x5
 6855 0b2c A2       		.byte	0xa2
 6856 0b2d 310A0000 		.4byte	0xa31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 145


 6857 0b31 05       		.uleb128 0x5
 6858 0b32 03       		.byte	0x3
 6859 0b33 00000000 		.4byte	print2
 6860 0b37 19       		.uleb128 0x19
 6861 0b38 94020000 		.4byte	.LASF32
 6862 0b3c 05       		.byte	0x5
 6863 0b3d A7       		.byte	0xa7
 6864 0b3e 81000000 		.4byte	0x81
 6865 0b42 05       		.uleb128 0x5
 6866 0b43 03       		.byte	0x3
 6867 0b44 00000000 		.4byte	tipo_venta
 6868 0b48 19       		.uleb128 0x19
 6869 0b49 A3030000 		.4byte	.LASF122
 6870 0b4d 01       		.byte	0x1
 6871 0b4e 2F       		.byte	0x2f
 6872 0b4f 81000000 		.4byte	0x81
 6873 0b53 05       		.uleb128 0x5
 6874 0b54 03       		.byte	0x3
 6875 0b55 00000000 		.4byte	rx_timeout
 6876 0b59 19       		.uleb128 0x19
 6877 0b5a 99010000 		.4byte	.LASF123
 6878 0b5e 01       		.byte	0x1
 6879 0b5f 30       		.byte	0x30
 6880 0b60 9E080000 		.4byte	0x89e
 6881 0b64 05       		.uleb128 0x5
 6882 0b65 03       		.byte	0x3
 6883 0b66 00000000 		.4byte	msn_tc
 6884 0b6a 06       		.uleb128 0x6
 6885 0b6b 81000000 		.4byte	0x81
 6886 0b6f 7A0B0000 		.4byte	0xb7a
 6887 0b73 07       		.uleb128 0x7
 6888 0b74 B6000000 		.4byte	0xb6
 6889 0b78 0C       		.byte	0xc
 6890 0b79 00       		.byte	0
 6891 0b7a 19       		.uleb128 0x19
 6892 0b7b A7010000 		.4byte	.LASF124
 6893 0b7f 01       		.byte	0x1
 6894 0b80 31       		.byte	0x31
 6895 0b81 6A0B0000 		.4byte	0xb6a
 6896 0b85 05       		.uleb128 0x5
 6897 0b86 03       		.byte	0x3
 6898 0b87 00000000 		.4byte	msn_te
 6899 0b8b 06       		.uleb128 0x6
 6900 0b8c 81000000 		.4byte	0x81
 6901 0b90 9B0B0000 		.4byte	0xb9b
 6902 0b94 07       		.uleb128 0x7
 6903 0b95 B6000000 		.4byte	0xb6
 6904 0b99 0D       		.byte	0xd
 6905 0b9a 00       		.byte	0
 6906 0b9b 19       		.uleb128 0x19
 6907 0b9c A0010000 		.4byte	.LASF125
 6908 0ba0 01       		.byte	0x1
 6909 0ba1 32       		.byte	0x32
 6910 0ba2 8B0B0000 		.4byte	0xb8b
 6911 0ba6 05       		.uleb128 0x5
 6912 0ba7 03       		.byte	0x3
 6913 0ba8 00000000 		.4byte	msn_td
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 146


 6914 0bac 19       		.uleb128 0x19
 6915 0bad 25020000 		.4byte	.LASF126
 6916 0bb1 01       		.byte	0x1
 6917 0bb2 33       		.byte	0x33
 6918 0bb3 37050000 		.4byte	0x537
 6919 0bb7 05       		.uleb128 0x5
 6920 0bb8 03       		.byte	0x3
 6921 0bb9 00000000 		.4byte	msn_lecact
 6922 0bbd 19       		.uleb128 0x19
 6923 0bbe 14010000 		.4byte	.LASF127
 6924 0bc2 01       		.byte	0x1
 6925 0bc3 34       		.byte	0x34
 6926 0bc4 9E080000 		.4byte	0x89e
 6927 0bc8 05       		.uleb128 0x5
 6928 0bc9 03       		.byte	0x3
 6929 0bca 00000000 		.4byte	msn_lecaan
 6930 0bce 19       		.uleb128 0x19
 6931 0bcf 7A020000 		.4byte	.LASF128
 6932 0bd3 01       		.byte	0x1
 6933 0bd4 35       		.byte	0x35
 6934 0bd5 B4040000 		.4byte	0x4b4
 6935 0bd9 05       		.uleb128 0x5
 6936 0bda 03       		.byte	0x3
 6937 0bdb 00000000 		.4byte	msn_tventas
 6938 0bdf 00       		.byte	0
 6939              		.section	.debug_abbrev,"",%progbits
 6940              	.Ldebug_abbrev0:
 6941 0000 01       		.uleb128 0x1
 6942 0001 11       		.uleb128 0x11
 6943 0002 01       		.byte	0x1
 6944 0003 25       		.uleb128 0x25
 6945 0004 0E       		.uleb128 0xe
 6946 0005 13       		.uleb128 0x13
 6947 0006 0B       		.uleb128 0xb
 6948 0007 03       		.uleb128 0x3
 6949 0008 0E       		.uleb128 0xe
 6950 0009 1B       		.uleb128 0x1b
 6951 000a 0E       		.uleb128 0xe
 6952 000b 55       		.uleb128 0x55
 6953 000c 17       		.uleb128 0x17
 6954 000d 11       		.uleb128 0x11
 6955 000e 01       		.uleb128 0x1
 6956 000f 10       		.uleb128 0x10
 6957 0010 17       		.uleb128 0x17
 6958 0011 00       		.byte	0
 6959 0012 00       		.byte	0
 6960 0013 02       		.uleb128 0x2
 6961 0014 24       		.uleb128 0x24
 6962 0015 00       		.byte	0
 6963 0016 0B       		.uleb128 0xb
 6964 0017 0B       		.uleb128 0xb
 6965 0018 3E       		.uleb128 0x3e
 6966 0019 0B       		.uleb128 0xb
 6967 001a 03       		.uleb128 0x3
 6968 001b 0E       		.uleb128 0xe
 6969 001c 00       		.byte	0
 6970 001d 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 147


 6971 001e 03       		.uleb128 0x3
 6972 001f 16       		.uleb128 0x16
 6973 0020 00       		.byte	0
 6974 0021 03       		.uleb128 0x3
 6975 0022 0E       		.uleb128 0xe
 6976 0023 3A       		.uleb128 0x3a
 6977 0024 0B       		.uleb128 0xb
 6978 0025 3B       		.uleb128 0x3b
 6979 0026 0B       		.uleb128 0xb
 6980 0027 49       		.uleb128 0x49
 6981 0028 13       		.uleb128 0x13
 6982 0029 00       		.byte	0
 6983 002a 00       		.byte	0
 6984 002b 04       		.uleb128 0x4
 6985 002c 24       		.uleb128 0x24
 6986 002d 00       		.byte	0
 6987 002e 0B       		.uleb128 0xb
 6988 002f 0B       		.uleb128 0xb
 6989 0030 3E       		.uleb128 0x3e
 6990 0031 0B       		.uleb128 0xb
 6991 0032 03       		.uleb128 0x3
 6992 0033 08       		.uleb128 0x8
 6993 0034 00       		.byte	0
 6994 0035 00       		.byte	0
 6995 0036 05       		.uleb128 0x5
 6996 0037 35       		.uleb128 0x35
 6997 0038 00       		.byte	0
 6998 0039 49       		.uleb128 0x49
 6999 003a 13       		.uleb128 0x13
 7000 003b 00       		.byte	0
 7001 003c 00       		.byte	0
 7002 003d 06       		.uleb128 0x6
 7003 003e 01       		.uleb128 0x1
 7004 003f 01       		.byte	0x1
 7005 0040 49       		.uleb128 0x49
 7006 0041 13       		.uleb128 0x13
 7007 0042 01       		.uleb128 0x1
 7008 0043 13       		.uleb128 0x13
 7009 0044 00       		.byte	0
 7010 0045 00       		.byte	0
 7011 0046 07       		.uleb128 0x7
 7012 0047 21       		.uleb128 0x21
 7013 0048 00       		.byte	0
 7014 0049 49       		.uleb128 0x49
 7015 004a 13       		.uleb128 0x13
 7016 004b 2F       		.uleb128 0x2f
 7017 004c 0B       		.uleb128 0xb
 7018 004d 00       		.byte	0
 7019 004e 00       		.byte	0
 7020 004f 08       		.uleb128 0x8
 7021 0050 13       		.uleb128 0x13
 7022 0051 01       		.byte	0x1
 7023 0052 03       		.uleb128 0x3
 7024 0053 0E       		.uleb128 0xe
 7025 0054 0B       		.uleb128 0xb
 7026 0055 0B       		.uleb128 0xb
 7027 0056 3A       		.uleb128 0x3a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 148


 7028 0057 0B       		.uleb128 0xb
 7029 0058 3B       		.uleb128 0x3b
 7030 0059 0B       		.uleb128 0xb
 7031 005a 01       		.uleb128 0x1
 7032 005b 13       		.uleb128 0x13
 7033 005c 00       		.byte	0
 7034 005d 00       		.byte	0
 7035 005e 09       		.uleb128 0x9
 7036 005f 0D       		.uleb128 0xd
 7037 0060 00       		.byte	0
 7038 0061 03       		.uleb128 0x3
 7039 0062 08       		.uleb128 0x8
 7040 0063 3A       		.uleb128 0x3a
 7041 0064 0B       		.uleb128 0xb
 7042 0065 3B       		.uleb128 0x3b
 7043 0066 0B       		.uleb128 0xb
 7044 0067 49       		.uleb128 0x49
 7045 0068 13       		.uleb128 0x13
 7046 0069 38       		.uleb128 0x38
 7047 006a 0B       		.uleb128 0xb
 7048 006b 00       		.byte	0
 7049 006c 00       		.byte	0
 7050 006d 0A       		.uleb128 0xa
 7051 006e 0D       		.uleb128 0xd
 7052 006f 00       		.byte	0
 7053 0070 03       		.uleb128 0x3
 7054 0071 0E       		.uleb128 0xe
 7055 0072 3A       		.uleb128 0x3a
 7056 0073 0B       		.uleb128 0xb
 7057 0074 3B       		.uleb128 0x3b
 7058 0075 0B       		.uleb128 0xb
 7059 0076 49       		.uleb128 0x49
 7060 0077 13       		.uleb128 0x13
 7061 0078 38       		.uleb128 0x38
 7062 0079 0B       		.uleb128 0xb
 7063 007a 00       		.byte	0
 7064 007b 00       		.byte	0
 7065 007c 0B       		.uleb128 0xb
 7066 007d 2E       		.uleb128 0x2e
 7067 007e 00       		.byte	0
 7068 007f 3F       		.uleb128 0x3f
 7069 0080 19       		.uleb128 0x19
 7070 0081 03       		.uleb128 0x3
 7071 0082 0E       		.uleb128 0xe
 7072 0083 3A       		.uleb128 0x3a
 7073 0084 0B       		.uleb128 0xb
 7074 0085 3B       		.uleb128 0x3b
 7075 0086 0B       		.uleb128 0xb
 7076 0087 27       		.uleb128 0x27
 7077 0088 19       		.uleb128 0x19
 7078 0089 11       		.uleb128 0x11
 7079 008a 01       		.uleb128 0x1
 7080 008b 12       		.uleb128 0x12
 7081 008c 06       		.uleb128 0x6
 7082 008d 40       		.uleb128 0x40
 7083 008e 18       		.uleb128 0x18
 7084 008f 9642     		.uleb128 0x2116
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 149


 7085 0091 19       		.uleb128 0x19
 7086 0092 00       		.byte	0
 7087 0093 00       		.byte	0
 7088 0094 0C       		.uleb128 0xc
 7089 0095 2E       		.uleb128 0x2e
 7090 0096 01       		.byte	0x1
 7091 0097 3F       		.uleb128 0x3f
 7092 0098 19       		.uleb128 0x19
 7093 0099 03       		.uleb128 0x3
 7094 009a 0E       		.uleb128 0xe
 7095 009b 3A       		.uleb128 0x3a
 7096 009c 0B       		.uleb128 0xb
 7097 009d 3B       		.uleb128 0x3b
 7098 009e 0B       		.uleb128 0xb
 7099 009f 27       		.uleb128 0x27
 7100 00a0 19       		.uleb128 0x19
 7101 00a1 49       		.uleb128 0x49
 7102 00a2 13       		.uleb128 0x13
 7103 00a3 11       		.uleb128 0x11
 7104 00a4 01       		.uleb128 0x1
 7105 00a5 12       		.uleb128 0x12
 7106 00a6 06       		.uleb128 0x6
 7107 00a7 40       		.uleb128 0x40
 7108 00a8 18       		.uleb128 0x18
 7109 00a9 9642     		.uleb128 0x2116
 7110 00ab 19       		.uleb128 0x19
 7111 00ac 01       		.uleb128 0x1
 7112 00ad 13       		.uleb128 0x13
 7113 00ae 00       		.byte	0
 7114 00af 00       		.byte	0
 7115 00b0 0D       		.uleb128 0xd
 7116 00b1 05       		.uleb128 0x5
 7117 00b2 00       		.byte	0
 7118 00b3 03       		.uleb128 0x3
 7119 00b4 08       		.uleb128 0x8
 7120 00b5 3A       		.uleb128 0x3a
 7121 00b6 0B       		.uleb128 0xb
 7122 00b7 3B       		.uleb128 0x3b
 7123 00b8 0B       		.uleb128 0xb
 7124 00b9 49       		.uleb128 0x49
 7125 00ba 13       		.uleb128 0x13
 7126 00bb 02       		.uleb128 0x2
 7127 00bc 18       		.uleb128 0x18
 7128 00bd 00       		.byte	0
 7129 00be 00       		.byte	0
 7130 00bf 0E       		.uleb128 0xe
 7131 00c0 34       		.uleb128 0x34
 7132 00c1 00       		.byte	0
 7133 00c2 03       		.uleb128 0x3
 7134 00c3 0E       		.uleb128 0xe
 7135 00c4 3A       		.uleb128 0x3a
 7136 00c5 0B       		.uleb128 0xb
 7137 00c6 3B       		.uleb128 0x3b
 7138 00c7 0B       		.uleb128 0xb
 7139 00c8 49       		.uleb128 0x49
 7140 00c9 13       		.uleb128 0x13
 7141 00ca 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 150


 7142 00cb 18       		.uleb128 0x18
 7143 00cc 00       		.byte	0
 7144 00cd 00       		.byte	0
 7145 00ce 0F       		.uleb128 0xf
 7146 00cf 34       		.uleb128 0x34
 7147 00d0 00       		.byte	0
 7148 00d1 03       		.uleb128 0x3
 7149 00d2 08       		.uleb128 0x8
 7150 00d3 3A       		.uleb128 0x3a
 7151 00d4 0B       		.uleb128 0xb
 7152 00d5 3B       		.uleb128 0x3b
 7153 00d6 0B       		.uleb128 0xb
 7154 00d7 49       		.uleb128 0x49
 7155 00d8 13       		.uleb128 0x13
 7156 00d9 02       		.uleb128 0x2
 7157 00da 18       		.uleb128 0x18
 7158 00db 00       		.byte	0
 7159 00dc 00       		.byte	0
 7160 00dd 10       		.uleb128 0x10
 7161 00de 2E       		.uleb128 0x2e
 7162 00df 01       		.byte	0x1
 7163 00e0 3F       		.uleb128 0x3f
 7164 00e1 19       		.uleb128 0x19
 7165 00e2 03       		.uleb128 0x3
 7166 00e3 0E       		.uleb128 0xe
 7167 00e4 3A       		.uleb128 0x3a
 7168 00e5 0B       		.uleb128 0xb
 7169 00e6 3B       		.uleb128 0x3b
 7170 00e7 0B       		.uleb128 0xb
 7171 00e8 27       		.uleb128 0x27
 7172 00e9 19       		.uleb128 0x19
 7173 00ea 11       		.uleb128 0x11
 7174 00eb 01       		.uleb128 0x1
 7175 00ec 12       		.uleb128 0x12
 7176 00ed 06       		.uleb128 0x6
 7177 00ee 40       		.uleb128 0x40
 7178 00ef 18       		.uleb128 0x18
 7179 00f0 9642     		.uleb128 0x2116
 7180 00f2 19       		.uleb128 0x19
 7181 00f3 01       		.uleb128 0x1
 7182 00f4 13       		.uleb128 0x13
 7183 00f5 00       		.byte	0
 7184 00f6 00       		.byte	0
 7185 00f7 11       		.uleb128 0x11
 7186 00f8 2E       		.uleb128 0x2e
 7187 00f9 01       		.byte	0x1
 7188 00fa 3F       		.uleb128 0x3f
 7189 00fb 19       		.uleb128 0x19
 7190 00fc 03       		.uleb128 0x3
 7191 00fd 0E       		.uleb128 0xe
 7192 00fe 3A       		.uleb128 0x3a
 7193 00ff 0B       		.uleb128 0xb
 7194 0100 3B       		.uleb128 0x3b
 7195 0101 05       		.uleb128 0x5
 7196 0102 27       		.uleb128 0x27
 7197 0103 19       		.uleb128 0x19
 7198 0104 11       		.uleb128 0x11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 151


 7199 0105 01       		.uleb128 0x1
 7200 0106 12       		.uleb128 0x12
 7201 0107 06       		.uleb128 0x6
 7202 0108 40       		.uleb128 0x40
 7203 0109 18       		.uleb128 0x18
 7204 010a 9642     		.uleb128 0x2116
 7205 010c 19       		.uleb128 0x19
 7206 010d 01       		.uleb128 0x1
 7207 010e 13       		.uleb128 0x13
 7208 010f 00       		.byte	0
 7209 0110 00       		.byte	0
 7210 0111 12       		.uleb128 0x12
 7211 0112 05       		.uleb128 0x5
 7212 0113 00       		.byte	0
 7213 0114 03       		.uleb128 0x3
 7214 0115 08       		.uleb128 0x8
 7215 0116 3A       		.uleb128 0x3a
 7216 0117 0B       		.uleb128 0xb
 7217 0118 3B       		.uleb128 0x3b
 7218 0119 05       		.uleb128 0x5
 7219 011a 49       		.uleb128 0x49
 7220 011b 13       		.uleb128 0x13
 7221 011c 02       		.uleb128 0x2
 7222 011d 18       		.uleb128 0x18
 7223 011e 00       		.byte	0
 7224 011f 00       		.byte	0
 7225 0120 13       		.uleb128 0x13
 7226 0121 2E       		.uleb128 0x2e
 7227 0122 01       		.byte	0x1
 7228 0123 3F       		.uleb128 0x3f
 7229 0124 19       		.uleb128 0x19
 7230 0125 03       		.uleb128 0x3
 7231 0126 0E       		.uleb128 0xe
 7232 0127 3A       		.uleb128 0x3a
 7233 0128 0B       		.uleb128 0xb
 7234 0129 3B       		.uleb128 0x3b
 7235 012a 05       		.uleb128 0x5
 7236 012b 27       		.uleb128 0x27
 7237 012c 19       		.uleb128 0x19
 7238 012d 49       		.uleb128 0x49
 7239 012e 13       		.uleb128 0x13
 7240 012f 11       		.uleb128 0x11
 7241 0130 01       		.uleb128 0x1
 7242 0131 12       		.uleb128 0x12
 7243 0132 06       		.uleb128 0x6
 7244 0133 40       		.uleb128 0x40
 7245 0134 18       		.uleb128 0x18
 7246 0135 9642     		.uleb128 0x2116
 7247 0137 19       		.uleb128 0x19
 7248 0138 01       		.uleb128 0x1
 7249 0139 13       		.uleb128 0x13
 7250 013a 00       		.byte	0
 7251 013b 00       		.byte	0
 7252 013c 14       		.uleb128 0x14
 7253 013d 34       		.uleb128 0x34
 7254 013e 00       		.byte	0
 7255 013f 03       		.uleb128 0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 152


 7256 0140 08       		.uleb128 0x8
 7257 0141 3A       		.uleb128 0x3a
 7258 0142 0B       		.uleb128 0xb
 7259 0143 3B       		.uleb128 0x3b
 7260 0144 05       		.uleb128 0x5
 7261 0145 49       		.uleb128 0x49
 7262 0146 13       		.uleb128 0x13
 7263 0147 02       		.uleb128 0x2
 7264 0148 18       		.uleb128 0x18
 7265 0149 00       		.byte	0
 7266 014a 00       		.byte	0
 7267 014b 15       		.uleb128 0x15
 7268 014c 05       		.uleb128 0x5
 7269 014d 00       		.byte	0
 7270 014e 03       		.uleb128 0x3
 7271 014f 0E       		.uleb128 0xe
 7272 0150 3A       		.uleb128 0x3a
 7273 0151 0B       		.uleb128 0xb
 7274 0152 3B       		.uleb128 0x3b
 7275 0153 05       		.uleb128 0x5
 7276 0154 49       		.uleb128 0x49
 7277 0155 13       		.uleb128 0x13
 7278 0156 02       		.uleb128 0x2
 7279 0157 18       		.uleb128 0x18
 7280 0158 00       		.byte	0
 7281 0159 00       		.byte	0
 7282 015a 16       		.uleb128 0x16
 7283 015b 34       		.uleb128 0x34
 7284 015c 00       		.byte	0
 7285 015d 03       		.uleb128 0x3
 7286 015e 0E       		.uleb128 0xe
 7287 015f 3A       		.uleb128 0x3a
 7288 0160 0B       		.uleb128 0xb
 7289 0161 3B       		.uleb128 0x3b
 7290 0162 05       		.uleb128 0x5
 7291 0163 49       		.uleb128 0x49
 7292 0164 13       		.uleb128 0x13
 7293 0165 02       		.uleb128 0x2
 7294 0166 18       		.uleb128 0x18
 7295 0167 00       		.byte	0
 7296 0168 00       		.byte	0
 7297 0169 17       		.uleb128 0x17
 7298 016a 0F       		.uleb128 0xf
 7299 016b 00       		.byte	0
 7300 016c 0B       		.uleb128 0xb
 7301 016d 0B       		.uleb128 0xb
 7302 016e 49       		.uleb128 0x49
 7303 016f 13       		.uleb128 0x13
 7304 0170 00       		.byte	0
 7305 0171 00       		.byte	0
 7306 0172 18       		.uleb128 0x18
 7307 0173 34       		.uleb128 0x34
 7308 0174 00       		.byte	0
 7309 0175 03       		.uleb128 0x3
 7310 0176 0E       		.uleb128 0xe
 7311 0177 3A       		.uleb128 0x3a
 7312 0178 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 153


 7313 0179 3B       		.uleb128 0x3b
 7314 017a 05       		.uleb128 0x5
 7315 017b 49       		.uleb128 0x49
 7316 017c 13       		.uleb128 0x13
 7317 017d 3F       		.uleb128 0x3f
 7318 017e 19       		.uleb128 0x19
 7319 017f 3C       		.uleb128 0x3c
 7320 0180 19       		.uleb128 0x19
 7321 0181 00       		.byte	0
 7322 0182 00       		.byte	0
 7323 0183 19       		.uleb128 0x19
 7324 0184 34       		.uleb128 0x34
 7325 0185 00       		.byte	0
 7326 0186 03       		.uleb128 0x3
 7327 0187 0E       		.uleb128 0xe
 7328 0188 3A       		.uleb128 0x3a
 7329 0189 0B       		.uleb128 0xb
 7330 018a 3B       		.uleb128 0x3b
 7331 018b 0B       		.uleb128 0xb
 7332 018c 49       		.uleb128 0x49
 7333 018d 13       		.uleb128 0x13
 7334 018e 3F       		.uleb128 0x3f
 7335 018f 19       		.uleb128 0x19
 7336 0190 02       		.uleb128 0x2
 7337 0191 18       		.uleb128 0x18
 7338 0192 00       		.byte	0
 7339 0193 00       		.byte	0
 7340 0194 1A       		.uleb128 0x1a
 7341 0195 34       		.uleb128 0x34
 7342 0196 00       		.byte	0
 7343 0197 03       		.uleb128 0x3
 7344 0198 08       		.uleb128 0x8
 7345 0199 3A       		.uleb128 0x3a
 7346 019a 0B       		.uleb128 0xb
 7347 019b 3B       		.uleb128 0x3b
 7348 019c 0B       		.uleb128 0xb
 7349 019d 49       		.uleb128 0x49
 7350 019e 13       		.uleb128 0x13
 7351 019f 3F       		.uleb128 0x3f
 7352 01a0 19       		.uleb128 0x19
 7353 01a1 02       		.uleb128 0x2
 7354 01a2 18       		.uleb128 0x18
 7355 01a3 00       		.byte	0
 7356 01a4 00       		.byte	0
 7357 01a5 00       		.byte	0
 7358              		.section	.debug_aranges,"",%progbits
 7359 0000 64000000 		.4byte	0x64
 7360 0004 0200     		.2byte	0x2
 7361 0006 00000000 		.4byte	.Ldebug_info0
 7362 000a 04       		.byte	0x4
 7363 000b 00       		.byte	0
 7364 000c 0000     		.2byte	0
 7365 000e 0000     		.2byte	0
 7366 0010 00000000 		.4byte	.LFB63
 7367 0014 14000000 		.4byte	.LFE63-.LFB63
 7368 0018 00000000 		.4byte	.LFB64
 7369 001c 98000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 154


 7370 0020 00000000 		.4byte	.LFB65
 7371 0024 A0000000 		.4byte	.LFE65-.LFB65
 7372 0028 00000000 		.4byte	.LFB66
 7373 002c 36000000 		.4byte	.LFE66-.LFB66
 7374 0030 00000000 		.4byte	.LFB67
 7375 0034 7C010000 		.4byte	.LFE67-.LFB67
 7376 0038 00000000 		.4byte	.LFB68
 7377 003c 24000000 		.4byte	.LFE68-.LFB68
 7378 0040 00000000 		.4byte	.LFB69
 7379 0044 54030000 		.4byte	.LFE69-.LFB69
 7380 0048 00000000 		.4byte	.LFB70
 7381 004c 80080000 		.4byte	.LFE70-.LFB70
 7382 0050 00000000 		.4byte	.LFB71
 7383 0054 7C020000 		.4byte	.LFE71-.LFB71
 7384 0058 00000000 		.4byte	.LFB72
 7385 005c 94100000 		.4byte	.LFE72-.LFB72
 7386 0060 00000000 		.4byte	0
 7387 0064 00000000 		.4byte	0
 7388              		.section	.debug_ranges,"",%progbits
 7389              	.Ldebug_ranges0:
 7390 0000 00000000 		.4byte	.LFB63
 7391 0004 14000000 		.4byte	.LFE63
 7392 0008 00000000 		.4byte	.LFB64
 7393 000c 98000000 		.4byte	.LFE64
 7394 0010 00000000 		.4byte	.LFB65
 7395 0014 A0000000 		.4byte	.LFE65
 7396 0018 00000000 		.4byte	.LFB66
 7397 001c 36000000 		.4byte	.LFE66
 7398 0020 00000000 		.4byte	.LFB67
 7399 0024 7C010000 		.4byte	.LFE67
 7400 0028 00000000 		.4byte	.LFB68
 7401 002c 24000000 		.4byte	.LFE68
 7402 0030 00000000 		.4byte	.LFB69
 7403 0034 54030000 		.4byte	.LFE69
 7404 0038 00000000 		.4byte	.LFB70
 7405 003c 80080000 		.4byte	.LFE70
 7406 0040 00000000 		.4byte	.LFB71
 7407 0044 7C020000 		.4byte	.LFE71
 7408 0048 00000000 		.4byte	.LFB72
 7409 004c 94100000 		.4byte	.LFE72
 7410 0050 00000000 		.4byte	0
 7411 0054 00000000 		.4byte	0
 7412              		.section	.debug_line,"",%progbits
 7413              	.Ldebug_line0:
 7414 0000 020B0000 		.section	.debug_str,"MS",%progbits,1
 7414      02006E01 
 7414      00000201 
 7414      FB0E0D00 
 7414      01010101 
 7415              	.LASF34:
 7416 0000 70617373 		.ascii	"password\000"
 7416      776F7264 
 7416      00
 7417              	.LASF74:
 7418 0009 666C756A 		.ascii	"flujo_LCD1\000"
 7418      6F5F4C43 
 7418      443100
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 155


 7419              	.LASF75:
 7420 0014 666C756A 		.ascii	"flujo_LCD2\000"
 7420      6F5F4C43 
 7420      443200
 7421              	.LASF85:
 7422 001f 636F756E 		.ascii	"count_protector2\000"
 7422      745F7072 
 7422      6F746563 
 7422      746F7232 
 7422      00
 7423              	.LASF100:
 7424 0030 65666563 		.ascii	"efectivo\000"
 7424      7469766F 
 7424      00
 7425              	.LASF131:
 7426 0039 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Documents\\Prueba_GRPFleet\\B"
 7426      73657273 
 7426      5C526563 
 7426      65706369 
 7426      6F6E5C44 
 7427 0067 42422E63 		.ascii	"BB.cydsn\000"
 7427      7964736E 
 7427      00
 7428              	.LASF61:
 7429 0070 69645F63 		.ascii	"id_coma1\000"
 7429      6F6D6131 
 7429      00
 7430              	.LASF64:
 7431 0079 69645F63 		.ascii	"id_coma2\000"
 7431      6F6D6132 
 7431      00
 7432              	.LASF48:
 7433 0082 62756666 		.ascii	"buffer\000"
 7433      657200
 7434              	.LASF8:
 7435 0089 756E7369 		.ascii	"unsigned int\000"
 7435      676E6564 
 7435      20696E74 
 7435      00
 7436              	.LASF97:
 7437 0096 76657273 		.ascii	"version\000"
 7437      696F6E00 
 7438              	.LASF9:
 7439 009e 5F5F696E 		.ascii	"__int32_t\000"
 7439      7433325F 
 7439      7400
 7440              	.LASF53:
 7441 00a8 70726563 		.ascii	"precio\000"
 7441      696F00
 7442              	.LASF115:
 7443 00af 6F6B5F52 		.ascii	"ok_RF\000"
 7443      4600
 7444              	.LASF54:
 7445 00b5 6E756D5F 		.ascii	"num_man\000"
 7445      6D616E00 
 7446              	.LASF51:
 7447 00bd 64656369 		.ascii	"decimal\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 156


 7447      6D616C00 
 7448              	.LASF112:
 7449 00c5 686F7261 		.ascii	"hora\000"
 7449      00
 7450              	.LASF72:
 7451 00ca 7465636C 		.ascii	"teclas1\000"
 7451      61733100 
 7452              	.LASF73:
 7453 00d2 7465636C 		.ascii	"teclas2\000"
 7453      61733200 
 7454              	.LASF23:
 7455 00da 706F7369 		.ascii	"posicion\000"
 7455      63696F6E 
 7455      00
 7456              	.LASF113:
 7457 00e3 7276656E 		.ascii	"rventa1\000"
 7457      74613100 
 7458              	.LASF114:
 7459 00eb 7276656E 		.ascii	"rventa2\000"
 7459      74613200 
 7460              	.LASF107:
 7461 00f3 64697265 		.ascii	"direccion\000"
 7461      6363696F 
 7461      6E00
 7462              	.LASF88:
 7463 00fd 70726F78 		.ascii	"prox_caso\000"
 7463      5F636173 
 7463      6F00
 7464              	.LASF28:
 7465 0107 70726573 		.ascii	"preset\000"
 7465      657400
 7466              	.LASF13:
 7467 010e 666C6F61 		.ascii	"float\000"
 7467      7400
 7468              	.LASF127:
 7469 0114 6D736E5F 		.ascii	"msn_lecaan\000"
 7469      6C656361 
 7469      616E00
 7470              	.LASF118:
 7471 011f 62756666 		.ascii	"buffer_i2c\000"
 7471      65725F69 
 7471      326300
 7472              	.LASF108:
 7473 012a 6C656D61 		.ascii	"lema1\000"
 7473      3100
 7474              	.LASF109:
 7475 0130 6C656D61 		.ascii	"lema2\000"
 7475      3200
 7476              	.LASF81:
 7477 0136 76656E74 		.ascii	"venta_activa2\000"
 7477      615F6163 
 7477      74697661 
 7477      3200
 7478              	.LASF31:
 7479 0144 696D7072 		.ascii	"imprimir\000"
 7479      696D6972 
 7479      00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 157


 7480              	.LASF7:
 7481 014d 6C6F6E67 		.ascii	"long long unsigned int\000"
 7481      206C6F6E 
 7481      6720756E 
 7481      7369676E 
 7481      65642069 
 7482              	.LASF130:
 7483 0164 2E5C5072 		.ascii	".\\Protocolo.c\000"
 7483      6F746F63 
 7483      6F6C6F2E 
 7483      6300
 7484              	.LASF101:
 7485 0172 6C61646F 		.ascii	"lado1\000"
 7485      3100
 7486              	.LASF80:
 7487 0178 76656E74 		.ascii	"venta_activa\000"
 7487      615F6163 
 7487      74697661 
 7487      00
 7488              	.LASF103:
 7489 0185 6C61646F 		.ascii	"lado3\000"
 7489      3300
 7490              	.LASF78:
 7491 018b 73656C65 		.ascii	"seleccion_pos\000"
 7491      6363696F 
 7491      6E5F706F 
 7491      7300
 7492              	.LASF123:
 7493 0199 6D736E5F 		.ascii	"msn_tc\000"
 7493      746300
 7494              	.LASF125:
 7495 01a0 6D736E5F 		.ascii	"msn_td\000"
 7495      746400
 7496              	.LASF124:
 7497 01a7 6D736E5F 		.ascii	"msn_te\000"
 7497      746500
 7498              	.LASF56:
 7499 01ae 53757274 		.ascii	"Surtidor_rxBuffer\000"
 7499      69646F72 
 7499      5F727842 
 7499      75666665 
 7499      7200
 7500              	.LASF30:
 7501 01c0 706C6163 		.ascii	"placa\000"
 7501      6100
 7502              	.LASF98:
 7503 01c6 6B6D7363 		.ascii	"kmscreen\000"
 7503      7265656E 
 7503      00
 7504              	.LASF76:
 7505 01cf 666C756A 		.ascii	"flujo_pos1\000"
 7505      6F5F706F 
 7505      733100
 7506              	.LASF77:
 7507 01da 666C756A 		.ascii	"flujo_pos2\000"
 7507      6F5F706F 
 7507      733200
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 158


 7508              	.LASF39:
 7509 01e5 7665725F 		.ascii	"ver_pos\000"
 7509      706F7300 
 7510              	.LASF25:
 7511 01ed 766F6C75 		.ascii	"volumen\000"
 7511      6D656E00 
 7512              	.LASF45:
 7513 01f5 76656E74 		.ascii	"venta\000"
 7513      6100
 7514              	.LASF106:
 7515 01fb 74656C65 		.ascii	"telefono\000"
 7515      666F6E6F 
 7515      00
 7516              	.LASF62:
 7517 0204 69645F74 		.ascii	"id_teclado1\000"
 7517      65636C61 
 7517      646F3100 
 7518              	.LASF65:
 7519 0210 69645F74 		.ascii	"id_teclado2\000"
 7519      65636C61 
 7519      646F3200 
 7520              	.LASF91:
 7521 021c 69645F76 		.ascii	"id_venta\000"
 7521      656E7461 
 7521      00
 7522              	.LASF126:
 7523 0225 6D736E5F 		.ascii	"msn_lecact\000"
 7523      6C656361 
 7523      637400
 7524              	.LASF117:
 7525 0230 72665F6D 		.ascii	"rf_mod\000"
 7525      6F6400
 7526              	.LASF44:
 7527 0237 64657465 		.ascii	"detener\000"
 7527      6E657200 
 7528              	.LASF42:
 7529 023f 636F6D61 		.ascii	"comand_exten\000"
 7529      6E645F65 
 7529      7874656E 
 7529      00
 7530              	.LASF83:
 7531 024c 42756666 		.ascii	"Buffer_LCD2\000"
 7531      65725F4C 
 7531      43443200 
 7532              	.LASF15:
 7533 0258 63686172 		.ascii	"char\000"
 7533      00
 7534              	.LASF89:
 7535 025d 626C6F71 		.ascii	"bloqueo_LCD\000"
 7535      75656F5F 
 7535      4C434400 
 7536              	.LASF20:
 7537 0269 6D616E67 		.ascii	"mangueras\000"
 7537      75657261 
 7537      7300
 7538              	.LASF12:
 7539 0273 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 159


 7539      313600
 7540              	.LASF128:
 7541 027a 6D736E5F 		.ascii	"msn_tventas\000"
 7541      7476656E 
 7541      74617300 
 7542              	.LASF120:
 7543 0286 7072696E 		.ascii	"print1\000"
 7543      743100
 7544              	.LASF121:
 7545 028d 7072696E 		.ascii	"print2\000"
 7545      743200
 7546              	.LASF32:
 7547 0294 7469706F 		.ascii	"tipo_venta\000"
 7547      5F76656E 
 7547      746100
 7548              	.LASF29:
 7549 029f 69645F65 		.ascii	"id_ef\000"
 7549      6600
 7550              	.LASF35:
 7551 02a5 7475726E 		.ascii	"turno\000"
 7551      6F00
 7552              	.LASF18:
 7553 02ab 746F7461 		.ascii	"totales\000"
 7553      6C657300 
 7554              	.LASF86:
 7555 02b3 70617373 		.ascii	"password_lcd\000"
 7555      776F7264 
 7555      5F6C6364 
 7555      00
 7556              	.LASF58:
 7557 02c0 636F756E 		.ascii	"count_teclas1\000"
 7557      745F7465 
 7557      636C6173 
 7557      3100
 7558              	.LASF63:
 7559 02ce 636F756E 		.ascii	"count_teclas2\000"
 7559      745F7465 
 7559      636C6173 
 7559      3200
 7560              	.LASF66:
 7561 02dc 706F7378 		.ascii	"posx1\000"
 7561      3100
 7562              	.LASF69:
 7563 02e2 706F7378 		.ascii	"posx2\000"
 7563      3200
 7564              	.LASF6:
 7565 02e8 6C6F6E67 		.ascii	"long long int\000"
 7565      206C6F6E 
 7565      6720696E 
 7565      7400
 7566              	.LASF26:
 7567 02f6 70726F64 		.ascii	"producto\000"
 7567      7563746F 
 7567      00
 7568              	.LASF52:
 7569 02ff 63616D62 		.ascii	"cambiar_precio\000"
 7569      6961725F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 160


 7569      70726563 
 7569      696F00
 7570              	.LASF33:
 7571 030e 63656475 		.ascii	"cedula\000"
 7571      6C6100
 7572              	.LASF129:
 7573 0315 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7573      4320342E 
 7573      392E3320 
 7573      32303135 
 7573      30333033 
 7574 0348 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7574      20726576 
 7574      6973696F 
 7574      6E203232 
 7574      31323230 
 7575 037b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7575      66756E63 
 7575      74696F6E 
 7575      2D736563 
 7575      74696F6E 
 7576              	.LASF122:
 7577 03a3 72785F74 		.ascii	"rx_timeout\000"
 7577      696D656F 
 7577      757400
 7578              	.LASF67:
 7579 03ae 706F7379 		.ascii	"posy1\000"
 7579      3100
 7580              	.LASF70:
 7581 03b4 706F7379 		.ascii	"posy2\000"
 7581      3200
 7582              	.LASF49:
 7583 03ba 73697A65 		.ascii	"size\000"
 7583      00
 7584              	.LASF22:
 7585 03bf 72656369 		.ascii	"recibo\000"
 7585      626F00
 7586              	.LASF24:
 7587 03c6 64696E65 		.ascii	"dinero\000"
 7587      726F00
 7588              	.LASF82:
 7589 03cd 42756666 		.ascii	"Buffer_LCD1\000"
 7589      65725F4C 
 7589      43443100 
 7590              	.LASF17:
 7591 03d9 65737461 		.ascii	"estado\000"
 7591      646F00
 7592              	.LASF37:
 7593 03e0 70617373 		.ascii	"password_local\000"
 7593      776F7264 
 7593      5F6C6F63 
 7593      616C00
 7594              	.LASF93:
 7595 03ef 70707578 		.ascii	"ppux10\000"
 7595      313000
 7596              	.LASF105:
 7597 03f6 6E6F6D62 		.ascii	"nombre\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 161


 7597      726500
 7598              	.LASF119:
 7599 03fd 6372635F 		.ascii	"crc_total\000"
 7599      746F7461 
 7599      6C00
 7600              	.LASF55:
 7601 0407 6E6D616E 		.ascii	"nmangueras\000"
 7601      67756572 
 7601      617300
 7602              	.LASF110:
 7603 0412 69645F6C 		.ascii	"id_logo\000"
 7603      6F676F00 
 7604              	.LASF2:
 7605 041a 73686F72 		.ascii	"short int\000"
 7605      7420696E 
 7605      7400
 7606              	.LASF4:
 7607 0424 6C6F6E67 		.ascii	"long int\000"
 7607      20696E74 
 7607      00
 7608              	.LASF57:
 7609 042d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7609      52784275 
 7609      66666572 
 7609      00
 7610              	.LASF21:
 7611 043a 73757274 		.ascii	"surtidor\000"
 7611      69646F72 
 7611      00
 7612              	.LASF59:
 7613 0443 636F6D61 		.ascii	"comas1\000"
 7613      733100
 7614              	.LASF60:
 7615 044a 636F6D61 		.ascii	"comas2\000"
 7615      733200
 7616              	.LASF50:
 7617 0451 74656D70 		.ascii	"temp\000"
 7617      00
 7618              	.LASF94:
 7619 0456 6E6F6D62 		.ascii	"nombre_pro1\000"
 7619      72655F70 
 7619      726F3100 
 7620              	.LASF96:
 7621 0462 6E6F6D62 		.ascii	"nombre_pro3\000"
 7621      72655F70 
 7621      726F3300 
 7622              	.LASF40:
 7623 046e 65737461 		.ascii	"estado_ex\000"
 7623      646F5F65 
 7623      7800
 7624              	.LASF46:
 7625 0478 70726F67 		.ascii	"programar\000"
 7625      72616D61 
 7625      7200
 7626              	.LASF16:
 7627 0482 73697A65 		.ascii	"sizetype\000"
 7627      74797065 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 162


 7627      00
 7628              	.LASF5:
 7629 048b 6C6F6E67 		.ascii	"long unsigned int\000"
 7629      20756E73 
 7629      69676E65 
 7629      6420696E 
 7629      7400
 7630              	.LASF10:
 7631 049d 696E7433 		.ascii	"int32_t\000"
 7631      325F7400 
 7632              	.LASF99:
 7633 04a5 70616E74 		.ascii	"pantallas\000"
 7633      616C6C61 
 7633      7300
 7634              	.LASF36:
 7635 04af 6175746F 		.ascii	"autorizado\000"
 7635      72697A61 
 7635      646F00
 7636              	.LASF1:
 7637 04ba 756E7369 		.ascii	"unsigned char\000"
 7637      676E6564 
 7637      20636861 
 7637      7200
 7638              	.LASF38:
 7639 04c8 6765745F 		.ascii	"get_estado\000"
 7639      65737461 
 7639      646F00
 7640              	.LASF79:
 7641 04d3 666C756A 		.ascii	"flujo_pos\000"
 7641      6F5F706F 
 7641      7300
 7642              	.LASF102:
 7643 04dd 6C61646F 		.ascii	"lado2\000"
 7643      3200
 7644              	.LASF43:
 7645 04e3 7665725F 		.ascii	"ver_error\000"
 7645      6572726F 
 7645      7200
 7646              	.LASF104:
 7647 04ed 6C61646F 		.ascii	"lado4\000"
 7647      3400
 7648              	.LASF116:
 7649 04f3 6F6B5F64 		.ascii	"ok_datosRF\000"
 7649      61746F73 
 7649      524600
 7650              	.LASF95:
 7651 04fe 6E6F6D62 		.ascii	"nombre_pro2\000"
 7651      72655F70 
 7651      726F3200 
 7652              	.LASF0:
 7653 050a 7369676E 		.ascii	"signed char\000"
 7653      65642063 
 7653      68617200 
 7654              	.LASF47:
 7655 0516 76616C6F 		.ascii	"valor\000"
 7655      7200
 7656              	.LASF84:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 163


 7657 051c 636F756E 		.ascii	"count_protector\000"
 7657      745F7072 
 7657      6F746563 
 7657      746F7200 
 7658              	.LASF3:
 7659 052c 73686F72 		.ascii	"short unsigned int\000"
 7659      7420756E 
 7659      7369676E 
 7659      65642069 
 7659      6E7400
 7660              	.LASF111:
 7661 053f 66656368 		.ascii	"fecha\000"
 7661      6100
 7662              	.LASF11:
 7663 0545 75696E74 		.ascii	"uint8\000"
 7663      3800
 7664              	.LASF14:
 7665 054b 646F7562 		.ascii	"double\000"
 7665      6C6500
 7666              	.LASF41:
 7667 0552 72785F65 		.ascii	"rx_extend\000"
 7667      7874656E 
 7667      6400
 7668              	.LASF92:
 7669 055c 7472616D 		.ascii	"trama_totales\000"
 7669      615F746F 
 7669      74616C65 
 7669      7300
 7670              	.LASF90:
 7671 056a 69645F65 		.ascii	"id_estacion\000"
 7671      73746163 
 7671      696F6E00 
 7672              	.LASF27:
 7673 0576 6D616E67 		.ascii	"manguera\000"
 7673      75657261 
 7673      00
 7674              	.LASF87:
 7675 057f 696D6167 		.ascii	"imagen_grado\000"
 7675      656E5F67 
 7675      7261646F 
 7675      00
 7676              	.LASF19:
 7677 058c 67726164 		.ascii	"grado\000"
 7677      6F00
 7678              	.LASF132:
 7679 0592 52785F53 		.ascii	"Rx_Surtidor\000"
 7679      75727469 
 7679      646F7200 
 7680              	.LASF68:
 7681 059e 73697A65 		.ascii	"sizeletra1\000"
 7681      6C657472 
 7681      613100
 7682              	.LASF71:
 7683 05a9 73697A65 		.ascii	"sizeletra2\000"
 7683      6C657472 
 7683      613200
 7684              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccYfuIx2.s 			page 164


