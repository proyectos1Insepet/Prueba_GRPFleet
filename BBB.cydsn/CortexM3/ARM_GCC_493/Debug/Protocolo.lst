ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Protocolo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	count_teclas1,1,1
  19              		.comm	comas1,1,1
  20              		.comm	comas2,1,1
  21              		.comm	id_coma1,1,1
  22              		.comm	id_teclado1,1,1
  23              		.comm	count_teclas2,1,1
  24              		.comm	id_coma2,1,1
  25              		.comm	id_teclado2,1,1
  26              		.comm	posx1,2,2
  27              		.comm	posy1,2,2
  28              		.comm	sizeletra1,2,2
  29              		.comm	posx2,2,2
  30              		.comm	posy2,2,2
  31              		.comm	sizeletra2,2,2
  32              		.comm	teclas1,1,1
  33              		.comm	teclas2,1,1
  34              		.comm	flujo_LCD1,1,1
  35              		.comm	flujo_LCD2,1,1
  36              		.comm	flujo_pos1,1,1
  37              		.comm	flujo_pos2,1,1
  38              		.comm	seleccion_pos,1,1
  39              		.comm	flujo_pos,1,1
  40              		.comm	venta_activa,1,1
  41              		.comm	venta_activa2,1,1
  42              		.comm	Buffer_LCD1,30,4
  43              		.comm	Buffer_LCD2,30,4
  44              		.comm	count_protector,1,1
  45              		.comm	count_protector2,1,1
  46              		.comm	password_lcd,9,4
  47              		.comm	imagen_grado,2,2
  48              		.comm	prox_caso,8,4
  49              		.comm	bloqueo_LCD,3,4
  50              		.comm	id_estacion,5,4
  51              		.comm	id_venta,8,4
  52              		.comm	trama_totales,200,4
  53              		.comm	ppux10,1,1
  54              		.comm	nombre_pro1,17,4
  55              		.comm	nombre_pro2,17,4
  56              		.comm	nombre_pro3,17,4
  57              		.comm	version,4,4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 2


  58              		.comm	lado1,93,4
  59              		.comm	lado2,93,4
  60              		.comm	nombre,33,4
  61              		.comm	nit,15,4
  62              		.comm	telefono,20,4
  63              		.comm	direccion,33,4
  64              		.comm	lema1,32,4
  65              		.comm	lema2,32,4
  66              		.comm	id_logo,2,4
  67              		.comm	km,2,4
  68              		.comm	fecha,3,4
  69              		.comm	hora,2,4
  70              		.comm	rventa1,118,4
  71              		.comm	rventa2,118,4
  72              		.comm	ok_RF,1,1
  73              		.comm	ok_datosRF,1,1
  74              		.comm	rf_mod,200,4
  75              		.comm	buffer_i2c,64,4
  76              		.comm	crc_total,1,1
  77              		.comm	print1,2,4
  78              		.comm	print2,2,4
  79              		.comm	tipo_venta,1,1
  80              		.comm	rx_timeout,1,1
  81              		.global	msn_tc
  82              		.data
  83              		.align	2
  84              		.type	msn_tc, %object
  85              		.size	msn_tc, 17
  86              	msn_tc:
  87 0000 544F5441 		.ascii	"TOTALES CORRIENTE"
  87      4C455320 
  87      434F5252 
  87      49454E54 
  87      45
  88              		.global	msn_te
  89 0011 000000   		.align	2
  90              		.type	msn_te, %object
  91              		.size	msn_te, 13
  92              	msn_te:
  93 0014 544F5441 		.ascii	"TOTALES EXTRA"
  93      4C455320 
  93      45585452 
  93      41
  94              		.global	msn_td
  95 0021 000000   		.align	2
  96              		.type	msn_td, %object
  97              		.size	msn_td, 14
  98              	msn_td:
  99 0024 544F5441 		.ascii	"TOTALES DIESEL"
  99      4C455320 
  99      44494553 
  99      454C
 100              		.global	msn_lecact
 101 0032 0000     		.align	2
 102              		.type	msn_lecact, %object
 103              		.size	msn_lecact, 15
 104              	msn_lecact:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 3


 105 0034 4C656374 		.ascii	"Lectura Actual:"
 105      75726120 
 105      41637475 
 105      616C3A
 106              		.global	msn_lecaan
 107 0043 00       		.align	2
 108              		.type	msn_lecaan, %object
 109              		.size	msn_lecaan, 17
 110              	msn_lecaan:
 111 0044 4C656374 		.ascii	"Lectura Anterior:"
 111      75726120 
 111      416E7465 
 111      72696F72 
 111      3A
 112              		.global	msn_tventas
 113 0055 000000   		.align	2
 114              		.type	msn_tventas, %object
 115              		.size	msn_tventas, 18
 116              	msn_tventas:
 117 0058 546F7461 		.ascii	"Total de Ventas: $"
 117      6C206465 
 117      2056656E 
 117      7461733A 
 117      2024
 118 006a 0000     		.section	.text.Rx_Surtidor,"ax",%progbits
 119              		.align	2
 120              		.global	Rx_Surtidor
 121              		.thumb
 122              		.thumb_func
 123              		.type	Rx_Surtidor, %function
 124              	Rx_Surtidor:
 125              	.LFB63:
 126              		.file 1 ".\\Protocolo.c"
   1:.\Protocolo.c **** /*
   2:.\Protocolo.c **** ***************************************************************************************************
   3:.\Protocolo.c **** *                                           GRP550/700 CODE
   4:.\Protocolo.c **** 
   5:.\Protocolo.c **** *
   6:.\Protocolo.c **** *                             (c) Copyright 2013; Sistemas Insepet LTDA
   7:.\Protocolo.c **** *
   8:.\Protocolo.c **** *               All rights reserved.  Protected by international copyright laws.
   9:.\Protocolo.c **** *               Knowledge of the source code may NOT be used to develop a similar product.
  10:.\Protocolo.c **** *               Please help us continue to provide the Embedded community with the finest
  11:.\Protocolo.c **** *               software available.  Your honesty is greatly appreciated.
  12:.\Protocolo.c **** ***************************************************************************************************
  13:.\Protocolo.c **** */
  14:.\Protocolo.c **** 
  15:.\Protocolo.c **** /*
  16:.\Protocolo.c **** ***************************************************************************************************
  17:.\Protocolo.c **** *
  18:.\Protocolo.c **** *                                             GRP550/700 CODE
  19:.\Protocolo.c **** *
  20:.\Protocolo.c **** *                                             CYPRESS PSoC5LP
  21:.\Protocolo.c **** *                                                with the
  22:.\Protocolo.c **** *                                            CY8C5969AXI-LP035
  23:.\Protocolo.c **** *
  24:.\Protocolo.c **** * Filename      : Protocolo.c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 4


  25:.\Protocolo.c **** * Version       : V1.00
  26:.\Protocolo.c **** * Programmer(s) : 
  27:.\Protocolo.c ****                   
  28:.\Protocolo.c **** ***************************************************************************************************
  29:.\Protocolo.c **** */
  30:.\Protocolo.c **** 
  31:.\Protocolo.c **** 
  32:.\Protocolo.c **** /*
  33:.\Protocolo.c **** ***************************************************************************************************
  34:.\Protocolo.c **** *                                             INCLUDE FILES
  35:.\Protocolo.c **** ***************************************************************************************************
  36:.\Protocolo.c **** */
  37:.\Protocolo.c **** #include <device.h>
  38:.\Protocolo.c **** #include "VariablesG.h"
  39:.\Protocolo.c **** #include "i2c.h"
  40:.\Protocolo.c **** #include "Print.h"
  41:.\Protocolo.c **** 
  42:.\Protocolo.c **** /*
  43:.\Protocolo.c **** ***************************************************************************************************
  44:.\Protocolo.c **** *                                            	MENSAJES
  45:.\Protocolo.c **** ***************************************************************************************************
  46:.\Protocolo.c **** */
  47:.\Protocolo.c **** uint8 rx_timeout;								//0 inicia espera  1 se cumplio el tiempo
  48:.\Protocolo.c **** uint8 msn_tc[17]="TOTALES CORRIENTE";
  49:.\Protocolo.c **** uint8 msn_te[13]="TOTALES EXTRA";
  50:.\Protocolo.c **** uint8 msn_td[14]="TOTALES DIESEL";
  51:.\Protocolo.c **** uint8 msn_lecact[15]="Lectura Actual:";
  52:.\Protocolo.c **** uint8 msn_lecaan[17]="Lectura Anterior:";
  53:.\Protocolo.c **** uint8 msn_tventas[18]="Total de Ventas: $";
  54:.\Protocolo.c **** 
  55:.\Protocolo.c **** /*
  56:.\Protocolo.c **** ***************************************************************************************************
  57:.\Protocolo.c **** *                                        CY_ISR(modo_mux)
  58:.\Protocolo.c **** *
  59:.\Protocolo.c **** * Description : 
  60:.\Protocolo.c **** *               
  61:.\Protocolo.c **** ***************************************************************************************************
  62:.\Protocolo.c **** */
  63:.\Protocolo.c **** CY_ISR(Rx_Surtidor){
 127              		.loc 1 63 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131 0000 80B5     		push	{r7, lr}
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 7, -8
 134              		.cfi_offset 14, -4
 135 0002 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
  64:.\Protocolo.c ****     Timer_RxSurtidor_ReadStatusRegister();
 137              		.loc 1 64 0
 138 0004 FFF7FEFF 		bl	Timer_RxSurtidor_ReadStatusRegister
  65:.\Protocolo.c **** 	rx_timeout=1;	
 139              		.loc 1 65 0
 140 0008 014B     		ldr	r3, .L2
 141 000a 0122     		movs	r2, #1
 142 000c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 5


  66:.\Protocolo.c **** }
 143              		.loc 1 66 0
 144 000e 80BD     		pop	{r7, pc}
 145              	.L3:
 146              		.align	2
 147              	.L2:
 148 0010 00000000 		.word	rx_timeout
 149              		.cfi_endproc
 150              	.LFE63:
 151              		.size	Rx_Surtidor, .-Rx_Surtidor
 152              		.section	.text.get_estado,"ax",%progbits
 153              		.align	2
 154              		.global	get_estado
 155              		.thumb
 156              		.thumb_func
 157              		.type	get_estado, %function
 158              	get_estado:
 159              	.LFB64:
  67:.\Protocolo.c **** 
  68:.\Protocolo.c **** 
  69:.\Protocolo.c **** /*
  70:.\Protocolo.c **** ***************************************************************************************************
  71:.\Protocolo.c **** *                                         ver_estado( void )
  72:.\Protocolo.c **** *
  73:.\Protocolo.c **** * Description : 
  74:.\Protocolo.c **** *               
  75:.\Protocolo.c **** *
  76:.\Protocolo.c **** * Argument(s) : none
  77:.\Protocolo.c **** *
  78:.\Protocolo.c **** * Return(s)   : none
  79:.\Protocolo.c **** *
  80:.\Protocolo.c **** * Caller(s)   : 
  81:.\Protocolo.c **** *
  82:.\Protocolo.c **** * Note(s)     : none.
  83:.\Protocolo.c **** ***************************************************************************************************
  84:.\Protocolo.c **** */
  85:.\Protocolo.c **** 
  86:.\Protocolo.c **** uint8 get_estado(uint8 dir){
 160              		.loc 1 86 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 16
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164 0000 80B5     		push	{r7, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 84B0     		sub	sp, sp, #16
 169              		.cfi_def_cfa_offset 24
 170 0004 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
 172 0006 0346     		mov	r3, r0
 173 0008 FB71     		strb	r3, [r7, #7]
  87:.\Protocolo.c ****     uint8 estado;
  88:.\Protocolo.c ****     Surtidor_ClearRxBuffer();	
 174              		.loc 1 88 0
 175 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  89:.\Protocolo.c ****     Surtidor_PutChar(dir);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 6


 176              		.loc 1 89 0
 177 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 178 0010 1846     		mov	r0, r3
 179 0012 FFF7FEFF 		bl	Surtidor_PutChar
  90:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 180              		.loc 1 90 0
 181 0016 1E48     		ldr	r0, .L9
 182 0018 FFF7FEFF 		bl	isr_1_StartEx
  91:.\Protocolo.c ****     Timer_RxSurtidor_Start();
 183              		.loc 1 91 0
 184 001c FFF7FEFF 		bl	Timer_RxSurtidor_Start
  92:.\Protocolo.c **** 	rx_timeout=0;
 185              		.loc 1 92 0
 186 0020 1C4B     		ldr	r3, .L9+4
 187 0022 0022     		movs	r2, #0
 188 0024 1A70     		strb	r2, [r3]
  93:.\Protocolo.c ****     CyDelay(10);
 189              		.loc 1 93 0
 190 0026 0A20     		movs	r0, #10
 191 0028 FFF7FEFF 		bl	CyDelay
  94:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 192              		.loc 1 94 0
 193 002c 0BE0     		b	.L5
 194              	.L7:
  95:.\Protocolo.c **** 		if(rx_timeout==1){
 195              		.loc 1 95 0
 196 002e 194B     		ldr	r3, .L9+4
 197 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 198 0032 012B     		cmp	r3, #1
 199 0034 07D1     		bne	.L5
  96:.\Protocolo.c **** 			isr_1_Stop();
 200              		.loc 1 96 0
 201 0036 FFF7FEFF 		bl	isr_1_Stop
  97:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 202              		.loc 1 97 0
 203 003a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  98:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 204              		.loc 1 98 0
 205 003e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  99:.\Protocolo.c **** 			return 0;
 206              		.loc 1 99 0
 207 0042 0023     		movs	r3, #0
 208 0044 20E0     		b	.L6
 209              	.L5:
  94:.\Protocolo.c **** 		if(rx_timeout==1){
 210              		.loc 1 94 0
 211 0046 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 212 004a 0346     		mov	r3, r0
 213 004c 002B     		cmp	r3, #0
 214 004e EED0     		beq	.L7
 100:.\Protocolo.c **** 		}
 101:.\Protocolo.c **** 	}
 102:.\Protocolo.c ****     estado=Surtidor_ReadRxData();
 215              		.loc 1 102 0
 216 0050 FFF7FEFF 		bl	Surtidor_ReadRxData
 217 0054 0346     		mov	r3, r0
 218 0056 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 7


 103:.\Protocolo.c **** 	if((estado&0x0F)==dir){
 219              		.loc 1 103 0
 220 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 221 005a 03F00F02 		and	r2, r3, #15
 222 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 223 0060 9A42     		cmp	r2, r3
 224 0062 0AD1     		bne	.L8
 104:.\Protocolo.c **** 		estado=(estado&0xF0)>>4;
 225              		.loc 1 104 0
 226 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 227 0066 1B09     		lsrs	r3, r3, #4
 228 0068 FB73     		strb	r3, [r7, #15]
 105:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 229              		.loc 1 105 0
 230 006a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 106:.\Protocolo.c **** 		isr_1_Stop();
 231              		.loc 1 106 0
 232 006e FFF7FEFF 		bl	isr_1_Stop
 107:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 233              		.loc 1 107 0
 234 0072 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 108:.\Protocolo.c **** 	    return estado;
 235              		.loc 1 108 0
 236 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 237 0078 06E0     		b	.L6
 238              	.L8:
 109:.\Protocolo.c **** 	}
 110:.\Protocolo.c **** 	else{
 111:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 239              		.loc 1 111 0
 240 007a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 112:.\Protocolo.c **** 		isr_1_Stop();
 241              		.loc 1 112 0
 242 007e FFF7FEFF 		bl	isr_1_Stop
 113:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 243              		.loc 1 113 0
 244 0082 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 114:.\Protocolo.c **** 	    return 0;	
 245              		.loc 1 114 0
 246 0086 0023     		movs	r3, #0
 247              	.L6:
 115:.\Protocolo.c **** 	}
 116:.\Protocolo.c **** }
 248              		.loc 1 116 0
 249 0088 1846     		mov	r0, r3
 250 008a 1037     		adds	r7, r7, #16
 251              		.cfi_def_cfa_offset 8
 252 008c BD46     		mov	sp, r7
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 008e 80BD     		pop	{r7, pc}
 256              	.L10:
 257              		.align	2
 258              	.L9:
 259 0090 00000000 		.word	Rx_Surtidor
 260 0094 00000000 		.word	rx_timeout
 261              		.cfi_endproc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 8


 262              	.LFE64:
 263              		.size	get_estado, .-get_estado
 264              		.section	.text.ver_pos,"ax",%progbits
 265              		.align	2
 266              		.global	ver_pos
 267              		.thumb
 268              		.thumb_func
 269              		.type	ver_pos, %function
 270              	ver_pos:
 271              	.LFB65:
 117:.\Protocolo.c **** 
 118:.\Protocolo.c **** /*
 119:.\Protocolo.c **** ***************************************************************************************************
 120:.\Protocolo.c **** *                                         ver_pos( void )
 121:.\Protocolo.c **** *
 122:.\Protocolo.c **** * Description : 
 123:.\Protocolo.c **** *               
 124:.\Protocolo.c **** *
 125:.\Protocolo.c **** * Argument(s) : none
 126:.\Protocolo.c **** *
 127:.\Protocolo.c **** * Return(s)   : none
 128:.\Protocolo.c **** *
 129:.\Protocolo.c **** * Caller(s)   : 
 130:.\Protocolo.c **** *
 131:.\Protocolo.c **** * Note(s)     : none.
 132:.\Protocolo.c **** ***************************************************************************************************
 133:.\Protocolo.c **** */
 134:.\Protocolo.c **** uint8 ver_pos (void){
 272              		.loc 1 134 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 8
 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276 0000 80B5     		push	{r7, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 7, -8
 279              		.cfi_offset 14, -4
 280 0002 82B0     		sub	sp, sp, #8
 281              		.cfi_def_cfa_offset 16
 282 0004 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
 135:.\Protocolo.c **** uint8 x;
 136:.\Protocolo.c **** lado1.dir=0xff;
 284              		.loc 1 136 0
 285 0006 244B     		ldr	r3, .L19
 286 0008 FF22     		movs	r2, #255
 287 000a 1A70     		strb	r2, [r3]
 137:.\Protocolo.c **** lado2.dir=0xff;
 288              		.loc 1 137 0
 289 000c 234B     		ldr	r3, .L19+4
 290 000e FF22     		movs	r2, #255
 291 0010 1A70     		strb	r2, [r3]
 138:.\Protocolo.c **** 	CyDelay(5);
 292              		.loc 1 138 0
 293 0012 0520     		movs	r0, #5
 294 0014 FFF7FEFF 		bl	CyDelay
 139:.\Protocolo.c ****     if(get_estado(0)!=0){
 295              		.loc 1 139 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 9


 296 0018 0020     		movs	r0, #0
 297 001a FFF7FEFF 		bl	get_estado
 298 001e 0346     		mov	r3, r0
 299 0020 002B     		cmp	r3, #0
 300 0022 02D0     		beq	.L12
 140:.\Protocolo.c **** 		lado2.dir=0;
 301              		.loc 1 140 0
 302 0024 1D4B     		ldr	r3, .L19+4
 303 0026 0022     		movs	r2, #0
 304 0028 1A70     		strb	r2, [r3]
 305              	.L12:
 141:.\Protocolo.c **** 	}	
 142:.\Protocolo.c ****     for(x=1;x<=15;x++){
 306              		.loc 1 142 0
 307 002a 0123     		movs	r3, #1
 308 002c FB71     		strb	r3, [r7, #7]
 309 002e 1FE0     		b	.L13
 310              	.L17:
 143:.\Protocolo.c **** 		CyDelay(5);
 311              		.loc 1 143 0
 312 0030 0520     		movs	r0, #5
 313 0032 FFF7FEFF 		bl	CyDelay
 144:.\Protocolo.c ****         if(get_estado(x)!=0){
 314              		.loc 1 144 0
 315 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 316 0038 1846     		mov	r0, r3
 317 003a FFF7FEFF 		bl	get_estado
 318 003e 0346     		mov	r3, r0
 319 0040 002B     		cmp	r3, #0
 320 0042 12D0     		beq	.L14
 145:.\Protocolo.c **** 			if(lado1.dir==0xFF){
 321              		.loc 1 145 0
 322 0044 144B     		ldr	r3, .L19
 323 0046 1B78     		ldrb	r3, [r3]
 324 0048 DBB2     		uxtb	r3, r3
 325 004a FF2B     		cmp	r3, #255
 326 004c 03D1     		bne	.L15
 146:.\Protocolo.c **** 				lado1.dir=x;
 327              		.loc 1 146 0
 328 004e 124A     		ldr	r2, .L19
 329 0050 FB79     		ldrb	r3, [r7, #7]
 330 0052 1370     		strb	r3, [r2]
 331 0054 09E0     		b	.L14
 332              	.L15:
 147:.\Protocolo.c **** 			}
 148:.\Protocolo.c **** 			else if(lado2.dir==0xFF){
 333              		.loc 1 148 0
 334 0056 114B     		ldr	r3, .L19+4
 335 0058 1B78     		ldrb	r3, [r3]
 336 005a DBB2     		uxtb	r3, r3
 337 005c FF2B     		cmp	r3, #255
 338 005e 04D1     		bne	.L14
 149:.\Protocolo.c **** 				lado2.dir=x;
 339              		.loc 1 149 0
 340 0060 0E4A     		ldr	r2, .L19+4
 341 0062 FB79     		ldrb	r3, [r7, #7]
 342 0064 1370     		strb	r3, [r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 10


 150:.\Protocolo.c **** 				return 1;
 343              		.loc 1 150 0
 344 0066 0123     		movs	r3, #1
 345 0068 12E0     		b	.L16
 346              	.L14:
 142:.\Protocolo.c **** 		CyDelay(5);
 347              		.loc 1 142 0 discriminator 2
 348 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 349 006c 0133     		adds	r3, r3, #1
 350 006e FB71     		strb	r3, [r7, #7]
 351              	.L13:
 142:.\Protocolo.c **** 		CyDelay(5);
 352              		.loc 1 142 0 is_stmt 0 discriminator 1
 353 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 354 0072 0F2B     		cmp	r3, #15
 355 0074 DCD9     		bls	.L17
 151:.\Protocolo.c **** 			}
 152:.\Protocolo.c **** 		}
 153:.\Protocolo.c **** 	}
 154:.\Protocolo.c **** 	if((lado1.dir!=0xFF)&&(lado2.dir!=0xFF)){
 356              		.loc 1 154 0 is_stmt 1
 357 0076 084B     		ldr	r3, .L19
 358 0078 1B78     		ldrb	r3, [r3]
 359 007a DBB2     		uxtb	r3, r3
 360 007c FF2B     		cmp	r3, #255
 361 007e 06D0     		beq	.L18
 362              		.loc 1 154 0 is_stmt 0 discriminator 1
 363 0080 064B     		ldr	r3, .L19+4
 364 0082 1B78     		ldrb	r3, [r3]
 365 0084 DBB2     		uxtb	r3, r3
 366 0086 FF2B     		cmp	r3, #255
 367 0088 01D0     		beq	.L18
 155:.\Protocolo.c **** 		return 1;
 368              		.loc 1 155 0 is_stmt 1
 369 008a 0123     		movs	r3, #1
 370 008c 00E0     		b	.L16
 371              	.L18:
 156:.\Protocolo.c **** 	}
 157:.\Protocolo.c **** 	else{
 158:.\Protocolo.c **** 		return 0;
 372              		.loc 1 158 0
 373 008e 0023     		movs	r3, #0
 374              	.L16:
 159:.\Protocolo.c **** 	}
 160:.\Protocolo.c **** }
 375              		.loc 1 160 0
 376 0090 1846     		mov	r0, r3
 377 0092 0837     		adds	r7, r7, #8
 378              		.cfi_def_cfa_offset 8
 379 0094 BD46     		mov	sp, r7
 380              		.cfi_def_cfa_register 13
 381              		@ sp needed
 382 0096 80BD     		pop	{r7, pc}
 383              	.L20:
 384              		.align	2
 385              	.L19:
 386 0098 00000000 		.word	lado1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 11


 387 009c 00000000 		.word	lado2
 388              		.cfi_endproc
 389              	.LFE65:
 390              		.size	ver_pos, .-ver_pos
 391              		.section	.text.ver_error,"ax",%progbits
 392              		.align	2
 393              		.global	ver_error
 394              		.thumb
 395              		.thumb_func
 396              		.type	ver_error, %function
 397              	ver_error:
 398              	.LFB66:
 161:.\Protocolo.c **** 
 162:.\Protocolo.c **** /*
 163:.\Protocolo.c **** ***************************************************************************************************
 164:.\Protocolo.c **** *                                         void ver_error(uint8 val)
 165:.\Protocolo.c **** *
 166:.\Protocolo.c **** * Description : 
 167:.\Protocolo.c **** *               
 168:.\Protocolo.c **** *
 169:.\Protocolo.c **** * Argument(s) : none
 170:.\Protocolo.c **** *
 171:.\Protocolo.c **** * Return(s)   : none
 172:.\Protocolo.c **** *
 173:.\Protocolo.c **** * Caller(s)   : 
 174:.\Protocolo.c **** *
 175:.\Protocolo.c **** * Note(s)     : none.
 176:.\Protocolo.c **** ***************************************************************************************************
 177:.\Protocolo.c **** */
 178:.\Protocolo.c **** void ver_error(uint8 val){
 399              		.loc 1 178 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 16
 402              		@ frame_needed = 1, uses_anonymous_args = 0
 403 0000 80B5     		push	{r7, lr}
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 84B0     		sub	sp, sp, #16
 408              		.cfi_def_cfa_offset 24
 409 0004 00AF     		add	r7, sp, #0
 410              		.cfi_def_cfa_register 7
 411 0006 0346     		mov	r3, r0
 412 0008 FB71     		strb	r3, [r7, #7]
 179:.\Protocolo.c ****     uint8 estado;
 180:.\Protocolo.c ****     Surtidor_PutChar(val);
 413              		.loc 1 180 0
 414 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 000c 1846     		mov	r0, r3
 416 000e FFF7FEFF 		bl	Surtidor_PutChar
 181:.\Protocolo.c ****     CyDelay(200);
 417              		.loc 1 181 0
 418 0012 C820     		movs	r0, #200
 419 0014 FFF7FEFF 		bl	CyDelay
 182:.\Protocolo.c ****     if(Surtidor_GetRxBufferSize()>=1){
 420              		.loc 1 182 0
 421 0018 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 12


 422 001c 0346     		mov	r3, r0
 423 001e 002B     		cmp	r3, #0
 424 0020 06D0     		beq	.L21
 183:.\Protocolo.c ****        estado=(Surtidor_ReadRxData()&0xF0)>>4;
 425              		.loc 1 183 0
 426 0022 FFF7FEFF 		bl	Surtidor_ReadRxData
 427 0026 0346     		mov	r3, r0
 428 0028 1B09     		lsrs	r3, r3, #4
 429 002a FB73     		strb	r3, [r7, #15]
 184:.\Protocolo.c ****        Surtidor_ClearRxBuffer();
 430              		.loc 1 184 0
 431 002c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 432              	.L21:
 185:.\Protocolo.c ****        if(estado==0){
 186:.\Protocolo.c **** 
 187:.\Protocolo.c ****        }
 188:.\Protocolo.c ****     }    
 189:.\Protocolo.c **** }
 433              		.loc 1 189 0
 434 0030 1037     		adds	r7, r7, #16
 435              		.cfi_def_cfa_offset 8
 436 0032 BD46     		mov	sp, r7
 437              		.cfi_def_cfa_register 13
 438              		@ sp needed
 439 0034 80BD     		pop	{r7, pc}
 440              		.cfi_endproc
 441              	.LFE66:
 442              		.size	ver_error, .-ver_error
 443 0036 00BF     		.section	.rodata
 444              		.align	2
 445              	.LC0:
 446 0000 FF       		.byte	-1
 447 0001 E9       		.byte	-23
 448 0002 FE       		.byte	-2
 449 0003 E0       		.byte	-32
 450 0004 E1       		.byte	-31
 451 0005 E0       		.byte	-32
 452 0006 FB       		.byte	-5
 453 0007 EE       		.byte	-18
 454 0008 F0       		.byte	-16
 455 0009 000000   		.section	.text.estado_ex,"ax",%progbits
 456              		.align	2
 457              		.global	estado_ex
 458              		.thumb
 459              		.thumb_func
 460              		.type	estado_ex, %function
 461              	estado_ex:
 462              	.LFB67:
 190:.\Protocolo.c **** 
 191:.\Protocolo.c **** /*
 192:.\Protocolo.c **** ***************************************************************************************************
 193:.\Protocolo.c **** *                                         estado_ex(uint8 val)
 194:.\Protocolo.c **** *
 195:.\Protocolo.c **** * Description : 
 196:.\Protocolo.c **** *               
 197:.\Protocolo.c **** *
 198:.\Protocolo.c **** * Argument(s) : none
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 13


 199:.\Protocolo.c **** *
 200:.\Protocolo.c **** * Return(s)   : none
 201:.\Protocolo.c **** *
 202:.\Protocolo.c **** * Caller(s)   : 
 203:.\Protocolo.c **** *
 204:.\Protocolo.c **** * Note(s)     : none.
 205:.\Protocolo.c **** ***************************************************************************************************
 206:.\Protocolo.c **** */
 207:.\Protocolo.c **** uint8 estado_ex(uint8 val){
 463              		.loc 1 207 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 40
 466              		@ frame_needed = 1, uses_anonymous_args = 0
 467 0000 90B5     		push	{r4, r7, lr}
 468              		.cfi_def_cfa_offset 12
 469              		.cfi_offset 4, -12
 470              		.cfi_offset 7, -8
 471              		.cfi_offset 14, -4
 472 0002 8BB0     		sub	sp, sp, #44
 473              		.cfi_def_cfa_offset 56
 474 0004 00AF     		add	r7, sp, #0
 475              		.cfi_def_cfa_register 7
 476 0006 0346     		mov	r3, r0
 477 0008 FB71     		strb	r3, [r7, #7]
 208:.\Protocolo.c ****     uint8 rx_extend[19],x,comand_exten[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0};
 478              		.loc 1 208 0
 479 000a 594A     		ldr	r2, .L41
 480 000c 07F10803 		add	r3, r7, #8
 481 0010 1068     		ldr	r0, [r2]	@ unaligned
 482 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
 483 0014 03C3     		stmia	r3!, {r0, r1}
 484 0016 127A     		ldrb	r2, [r2, #8]
 485 0018 1A70     		strb	r2, [r3]
 209:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 486              		.loc 1 209 0
 487 001a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 210:.\Protocolo.c ****     Surtidor_PutChar(0x20|val);
 488              		.loc 1 210 0
 489 001e FB79     		ldrb	r3, [r7, #7]
 490 0020 43F02003 		orr	r3, r3, #32
 491 0024 DBB2     		uxtb	r3, r3
 492 0026 1846     		mov	r0, r3
 493 0028 FFF7FEFF 		bl	Surtidor_PutChar
 211:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 494              		.loc 1 211 0
 495 002c 5148     		ldr	r0, .L41+4
 496 002e FFF7FEFF 		bl	isr_1_StartEx
 212:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 497              		.loc 1 212 0
 498 0032 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 213:.\Protocolo.c ****     rx_timeout=0;
 499              		.loc 1 213 0
 500 0036 504B     		ldr	r3, .L41+8
 501 0038 0022     		movs	r2, #0
 502 003a 1A70     		strb	r2, [r3]
 214:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 503              		.loc 1 214 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 14


 504 003c 0BE0     		b	.L24
 505              	.L26:
 215:.\Protocolo.c **** 		if(rx_timeout==1){
 506              		.loc 1 215 0
 507 003e 4E4B     		ldr	r3, .L41+8
 508 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 509 0042 012B     		cmp	r3, #1
 510 0044 07D1     		bne	.L24
 216:.\Protocolo.c **** 			isr_1_Stop();
 511              		.loc 1 216 0
 512 0046 FFF7FEFF 		bl	isr_1_Stop
 217:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 513              		.loc 1 217 0
 514 004a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 218:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 515              		.loc 1 218 0
 516 004e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 219:.\Protocolo.c **** 			return 0;
 517              		.loc 1 219 0
 518 0052 0023     		movs	r3, #0
 519 0054 88E0     		b	.L39
 520              	.L24:
 214:.\Protocolo.c **** 		if(rx_timeout==1){
 521              		.loc 1 214 0
 522 0056 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 523 005a 0346     		mov	r3, r0
 524 005c 002B     		cmp	r3, #0
 525 005e EED0     		beq	.L26
 220:.\Protocolo.c **** 		}
 221:.\Protocolo.c **** 	}
 222:.\Protocolo.c **** 	isr_1_Stop();
 526              		.loc 1 222 0
 527 0060 FFF7FEFF 		bl	isr_1_Stop
 223:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 528              		.loc 1 223 0
 529 0064 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 224:.\Protocolo.c ****     if(Surtidor_ReadRxData()==(0xD0|val)){
 530              		.loc 1 224 0
 531 0068 FFF7FEFF 		bl	Surtidor_ReadRxData
 532 006c 0346     		mov	r3, r0
 533 006e 1A46     		mov	r2, r3
 534 0070 FB79     		ldrb	r3, [r7, #7]
 535 0072 63F02F03 		orn	r3, r3, #47
 536 0076 DBB2     		uxtb	r3, r3
 537 0078 9A42     		cmp	r2, r3
 538 007a 74D1     		bne	.L27
 225:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 539              		.loc 1 225 0
 540 007c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 226:.\Protocolo.c **** 		CyDelay(5);
 541              		.loc 1 226 0
 542 0080 0520     		movs	r0, #5
 543 0082 FFF7FEFF 		bl	CyDelay
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 544              		.loc 1 227 0
 545 0086 0023     		movs	r3, #0
 546 0088 87F82730 		strb	r3, [r7, #39]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 15


 547 008c 0EE0     		b	.L28
 548              	.L29:
 228:.\Protocolo.c ****            Surtidor_PutChar(comand_exten[x]); 
 549              		.loc 1 228 0 discriminator 3
 550 008e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 551 0092 07F12802 		add	r2, r7, #40
 552 0096 1344     		add	r3, r3, r2
 553 0098 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 554 009c 1846     		mov	r0, r3
 555 009e FFF7FEFF 		bl	Surtidor_PutChar
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 556              		.loc 1 227 0 discriminator 3
 557 00a2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 558 00a6 0133     		adds	r3, r3, #1
 559 00a8 87F82730 		strb	r3, [r7, #39]
 560              	.L28:
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 561              		.loc 1 227 0 is_stmt 0 discriminator 1
 562 00ac 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 563 00b0 082B     		cmp	r3, #8
 564 00b2 ECD9     		bls	.L29
 229:.\Protocolo.c ****         }
 230:.\Protocolo.c **** 		isr_1_StartEx(Rx_Surtidor);
 565              		.loc 1 230 0 is_stmt 1
 566 00b4 2F48     		ldr	r0, .L41+4
 567 00b6 FFF7FEFF 		bl	isr_1_StartEx
 231:.\Protocolo.c **** 	    Timer_RxSurtidor_Start();	
 568              		.loc 1 231 0
 569 00ba FFF7FEFF 		bl	Timer_RxSurtidor_Start
 232:.\Protocolo.c **** 	    rx_timeout=0;
 570              		.loc 1 232 0
 571 00be 2E4B     		ldr	r3, .L41+8
 572 00c0 0022     		movs	r2, #0
 573 00c2 1A70     		strb	r2, [r3]
 233:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 574              		.loc 1 233 0
 575 00c4 0BE0     		b	.L30
 576              	.L31:
 234:.\Protocolo.c **** 			if(rx_timeout==1){
 577              		.loc 1 234 0
 578 00c6 2C4B     		ldr	r3, .L41+8
 579 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 580 00ca 012B     		cmp	r3, #1
 581 00cc 07D1     		bne	.L30
 235:.\Protocolo.c **** 				isr_1_Stop();
 582              		.loc 1 235 0
 583 00ce FFF7FEFF 		bl	isr_1_Stop
 236:.\Protocolo.c **** 				Timer_RxSurtidor_Stop();
 584              		.loc 1 236 0
 585 00d2 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 237:.\Protocolo.c **** 	    		Surtidor_ClearRxBuffer();			
 586              		.loc 1 237 0
 587 00d6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 238:.\Protocolo.c **** 				return 0;
 588              		.loc 1 238 0
 589 00da 0023     		movs	r3, #0
 590 00dc 44E0     		b	.L39
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 16


 591              	.L30:
 233:.\Protocolo.c **** 			if(rx_timeout==1){
 592              		.loc 1 233 0
 593 00de FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 594 00e2 0346     		mov	r3, r0
 595 00e4 132B     		cmp	r3, #19
 596 00e6 EED1     		bne	.L31
 239:.\Protocolo.c **** 			}
 240:.\Protocolo.c **** 		}       
 241:.\Protocolo.c **** 		isr_1_Stop();
 597              		.loc 1 241 0
 598 00e8 FFF7FEFF 		bl	isr_1_Stop
 242:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();		
 599              		.loc 1 242 0
 600 00ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 601              		.loc 1 243 0
 602 00f0 0023     		movs	r3, #0
 603 00f2 87F82730 		strb	r3, [r7, #39]
 604 00f6 0FE0     		b	.L32
 605              	.L33:
 244:.\Protocolo.c ****            rx_extend[x]=Surtidor_ReadRxData(); 
 606              		.loc 1 244 0 discriminator 3
 607 00f8 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 608 00fc FFF7FEFF 		bl	Surtidor_ReadRxData
 609 0100 0346     		mov	r3, r0
 610 0102 1A46     		mov	r2, r3
 611 0104 07F12803 		add	r3, r7, #40
 612 0108 2344     		add	r3, r3, r4
 613 010a 03F8142C 		strb	r2, [r3, #-20]
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 614              		.loc 1 243 0 discriminator 3
 615 010e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 616 0112 0133     		adds	r3, r3, #1
 617 0114 87F82730 		strb	r3, [r7, #39]
 618              	.L32:
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 619              		.loc 1 243 0 is_stmt 0 discriminator 1
 620 0118 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 621 011c 122B     		cmp	r3, #18
 622 011e EBD9     		bls	.L33
 245:.\Protocolo.c ****         }
 246:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 623              		.loc 1 246 0 is_stmt 1
 624 0120 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 247:.\Protocolo.c ****         if((rx_extend[0]==0xBA)&&(rx_extend[17]==0x8D)&&(rx_extend[18]==0x8A)&&(rx_extend[12]==0xB1
 625              		.loc 1 247 0
 626 0124 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 627 0126 BA2B     		cmp	r3, #186
 628 0128 1BD1     		bne	.L34
 629              		.loc 1 247 0 is_stmt 0 discriminator 1
 630 012a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 631 012e 8D2B     		cmp	r3, #141
 632 0130 17D1     		bne	.L34
 633              		.loc 1 247 0 discriminator 2
 634 0132 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 635 0136 8A2B     		cmp	r3, #138
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 17


 636 0138 13D1     		bne	.L34
 637              		.loc 1 247 0 discriminator 3
 638 013a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 639 013e B12B     		cmp	r3, #177
 640 0140 0FD1     		bne	.L34
 248:.\Protocolo.c ****             switch(rx_extend[14]){
 641              		.loc 1 248 0 is_stmt 1
 642 0142 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 643 0146 B22B     		cmp	r3, #178
 644 0148 05D0     		beq	.L36
 645 014a B32B     		cmp	r3, #179
 646 014c 05D0     		beq	.L37
 647 014e B12B     		cmp	r3, #177
 648 0150 05D1     		bne	.L40
 249:.\Protocolo.c ****                 case 0xB1:
 250:.\Protocolo.c ****                     return 1;
 649              		.loc 1 250 0
 650 0152 0123     		movs	r3, #1
 651 0154 08E0     		b	.L39
 652              	.L36:
 251:.\Protocolo.c ****                 break;
 252:.\Protocolo.c ****                 case 0xB2:
 253:.\Protocolo.c ****                     return 2;
 653              		.loc 1 253 0
 654 0156 0223     		movs	r3, #2
 655 0158 06E0     		b	.L39
 656              	.L37:
 254:.\Protocolo.c ****                 break;
 255:.\Protocolo.c ****                 case 0xB3:
 256:.\Protocolo.c ****                     return 3;
 657              		.loc 1 256 0
 658 015a 0323     		movs	r3, #3
 659 015c 04E0     		b	.L39
 660              	.L40:
 257:.\Protocolo.c ****                 break;
 258:.\Protocolo.c ****                 default:
 259:.\Protocolo.c ****                 	return 0;
 661              		.loc 1 259 0
 662 015e 0023     		movs	r3, #0
 663 0160 02E0     		b	.L39
 664              	.L34:
 260:.\Protocolo.c **** 				break;
 261:.\Protocolo.c ****             }
 262:.\Protocolo.c ****         }
 263:.\Protocolo.c ****         else{
 264:.\Protocolo.c ****             return 0;
 665              		.loc 1 264 0
 666 0162 0023     		movs	r3, #0
 667 0164 00E0     		b	.L39
 668              	.L27:
 265:.\Protocolo.c ****         }
 266:.\Protocolo.c ****     }
 267:.\Protocolo.c ****     else{
 268:.\Protocolo.c ****         return 0;
 669              		.loc 1 268 0
 670 0166 0023     		movs	r3, #0
 671              	.L39:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 18


 269:.\Protocolo.c ****     }
 270:.\Protocolo.c **** }
 672              		.loc 1 270 0
 673 0168 1846     		mov	r0, r3
 674 016a 2C37     		adds	r7, r7, #44
 675              		.cfi_def_cfa_offset 12
 676 016c BD46     		mov	sp, r7
 677              		.cfi_def_cfa_register 13
 678              		@ sp needed
 679 016e 90BD     		pop	{r4, r7, pc}
 680              	.L42:
 681              		.align	2
 682              	.L41:
 683 0170 00000000 		.word	.LC0
 684 0174 00000000 		.word	Rx_Surtidor
 685 0178 00000000 		.word	rx_timeout
 686              		.cfi_endproc
 687              	.LFE67:
 688              		.size	estado_ex, .-estado_ex
 689              		.section	.text.detener,"ax",%progbits
 690              		.align	2
 691              		.global	detener
 692              		.thumb
 693              		.thumb_func
 694              		.type	detener, %function
 695              	detener:
 696              	.LFB68:
 271:.\Protocolo.c **** 
 272:.\Protocolo.c **** /*
 273:.\Protocolo.c **** ***************************************************************************************************
 274:.\Protocolo.c **** *                                         void detener(uint8 val)
 275:.\Protocolo.c **** *
 276:.\Protocolo.c **** * Description : 
 277:.\Protocolo.c **** *               
 278:.\Protocolo.c **** *
 279:.\Protocolo.c **** * Argument(s) : none
 280:.\Protocolo.c **** *
 281:.\Protocolo.c **** * Return(s)   : none
 282:.\Protocolo.c **** *
 283:.\Protocolo.c **** * Caller(s)   : 
 284:.\Protocolo.c **** *
 285:.\Protocolo.c **** * Note(s)     : none.
 286:.\Protocolo.c **** ***************************************************************************************************
 287:.\Protocolo.c **** */
 288:.\Protocolo.c **** void detener(uint8 val){
 697              		.loc 1 288 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 8
 700              		@ frame_needed = 1, uses_anonymous_args = 0
 701 0000 80B5     		push	{r7, lr}
 702              		.cfi_def_cfa_offset 8
 703              		.cfi_offset 7, -8
 704              		.cfi_offset 14, -4
 705 0002 82B0     		sub	sp, sp, #8
 706              		.cfi_def_cfa_offset 16
 707 0004 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 19


 709 0006 0346     		mov	r3, r0
 710 0008 FB71     		strb	r3, [r7, #7]
 289:.\Protocolo.c ****     Surtidor_PutChar(0x30|val);
 711              		.loc 1 289 0
 712 000a FB79     		ldrb	r3, [r7, #7]
 713 000c 43F03003 		orr	r3, r3, #48
 714 0010 DBB2     		uxtb	r3, r3
 715 0012 1846     		mov	r0, r3
 716 0014 FFF7FEFF 		bl	Surtidor_PutChar
 290:.\Protocolo.c ****     CyDelay(200);
 717              		.loc 1 290 0
 718 0018 C820     		movs	r0, #200
 719 001a FFF7FEFF 		bl	CyDelay
 291:.\Protocolo.c **** }
 720              		.loc 1 291 0
 721 001e 0837     		adds	r7, r7, #8
 722              		.cfi_def_cfa_offset 8
 723 0020 BD46     		mov	sp, r7
 724              		.cfi_def_cfa_register 13
 725              		@ sp needed
 726 0022 80BD     		pop	{r7, pc}
 727              		.cfi_endproc
 728              	.LFE68:
 729              		.size	detener, .-detener
 730              		.section	.text.venta,"ax",%progbits
 731              		.align	2
 732              		.global	venta
 733              		.thumb
 734              		.thumb_func
 735              		.type	venta, %function
 736              	venta:
 737              	.LFB69:
 292:.\Protocolo.c **** 
 293:.\Protocolo.c **** /*
 294:.\Protocolo.c **** ***************************************************************************************************
 295:.\Protocolo.c **** *                                         void venta(uint8 val)
 296:.\Protocolo.c **** *
 297:.\Protocolo.c **** * Description : 
 298:.\Protocolo.c **** *               
 299:.\Protocolo.c **** *
 300:.\Protocolo.c **** * Argument(s) : none
 301:.\Protocolo.c **** *
 302:.\Protocolo.c **** * Return(s)   : none
 303:.\Protocolo.c **** *
 304:.\Protocolo.c **** * Caller(s)   : 
 305:.\Protocolo.c **** *
 306:.\Protocolo.c **** * Note(s)     : none.
 307:.\Protocolo.c **** ***************************************************************************************************
 308:.\Protocolo.c **** */
 309:.\Protocolo.c **** uint8 venta(uint8 dir){
 738              		.loc 1 309 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 16
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742 0000 80B5     		push	{r7, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 7, -8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 20


 745              		.cfi_offset 14, -4
 746 0002 84B0     		sub	sp, sp, #16
 747              		.cfi_def_cfa_offset 24
 748 0004 00AF     		add	r7, sp, #0
 749              		.cfi_def_cfa_register 7
 750 0006 0346     		mov	r3, r0
 751 0008 FB71     		strb	r3, [r7, #7]
 310:.\Protocolo.c **** 	uint8 x;
 311:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 752              		.loc 1 311 0
 753 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 312:.\Protocolo.c **** 	Surtidor_PutChar(0x40|dir);
 754              		.loc 1 312 0
 755 000e FB79     		ldrb	r3, [r7, #7]
 756 0010 43F04003 		orr	r3, r3, #64
 757 0014 DBB2     		uxtb	r3, r3
 758 0016 1846     		mov	r0, r3
 759 0018 FFF7FEFF 		bl	Surtidor_PutChar
 313:.\Protocolo.c ****     CyDelay(300);
 760              		.loc 1 313 0
 761 001c 4FF49670 		mov	r0, #300
 762 0020 FFF7FEFF 		bl	CyDelay
 314:.\Protocolo.c **** 	if((version[1]!=7)&&(Surtidor_GetRxBufferSize()==33)){
 763              		.loc 1 314 0
 764 0024 AB4B     		ldr	r3, .L78
 765 0026 5B78     		ldrb	r3, [r3, #1]
 766 0028 DBB2     		uxtb	r3, r3
 767 002a 072B     		cmp	r3, #7
 768 002c 00F0BC80 		beq	.L45
 769              		.loc 1 314 0 is_stmt 0 discriminator 1
 770 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 771 0034 0346     		mov	r3, r0
 772 0036 212B     		cmp	r3, #33
 773 0038 40F0B680 		bne	.L45
 315:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[32]==0xF0)){
 774              		.loc 1 315 0 is_stmt 1
 775 003c A64B     		ldr	r3, .L78+4
 776 003e 1B78     		ldrb	r3, [r3]
 777 0040 DBB2     		uxtb	r3, r3
 778 0042 FF2B     		cmp	r3, #255
 779 0044 40F0AE80 		bne	.L46
 780              		.loc 1 315 0 is_stmt 0 discriminator 1
 781 0048 A34B     		ldr	r3, .L78+4
 782 004a 9B78     		ldrb	r3, [r3, #2]
 783 004c DBB2     		uxtb	r3, r3
 784 004e F82B     		cmp	r3, #248
 785 0050 40F0A880 		bne	.L46
 786              		.loc 1 315 0 discriminator 2
 787 0054 A04B     		ldr	r3, .L78+4
 788 0056 93F82030 		ldrb	r3, [r3, #32]
 789 005a DBB2     		uxtb	r3, r3
 790 005c F02B     		cmp	r3, #240
 791 005e 40F0A180 		bne	.L46
 316:.\Protocolo.c **** 			if(dir==lado1.dir){
 792              		.loc 1 316 0 is_stmt 1
 793 0062 9E4B     		ldr	r3, .L78+8
 794 0064 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 21


 795 0066 DBB2     		uxtb	r3, r3
 796 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 797 006a 9A42     		cmp	r2, r3
 798 006c 4CD1     		bne	.L47
 317:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 799              		.loc 1 317 0
 800 006e 9A4B     		ldr	r3, .L78+4
 801 0070 5B7A     		ldrb	r3, [r3, #9]
 802 0072 DBB2     		uxtb	r3, r3
 803 0074 03F00F03 		and	r3, r3, #15
 804 0078 DBB2     		uxtb	r3, r3
 805 007a 0133     		adds	r3, r3, #1
 806 007c DAB2     		uxtb	r2, r3
 807 007e 984B     		ldr	r3, .L78+12
 808 0080 5A76     		strb	r2, [r3, #25]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 809              		.loc 1 318 0
 810 0082 0023     		movs	r3, #0
 811 0084 FB73     		strb	r3, [r7, #15]
 812 0086 0FE0     		b	.L48
 813              	.L49:
 319:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 814              		.loc 1 319 0 discriminator 3
 815 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 816 008a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 817 008c 0C32     		adds	r2, r2, #12
 818 008e 9249     		ldr	r1, .L78+4
 819 0090 8A5C     		ldrb	r2, [r1, r2]
 820 0092 D2B2     		uxtb	r2, r2
 821 0094 02F00F02 		and	r2, r2, #15
 822 0098 D1B2     		uxtb	r1, r2
 823 009a 914A     		ldr	r2, .L78+12
 824 009c 1344     		add	r3, r3, r2
 825 009e 0A46     		mov	r2, r1
 826 00a0 9A70     		strb	r2, [r3, #2]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 827              		.loc 1 318 0 discriminator 3
 828 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 829 00a4 0133     		adds	r3, r3, #1
 830 00a6 FB73     		strb	r3, [r7, #15]
 831              	.L48:
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 832              		.loc 1 318 0 is_stmt 0 discriminator 1
 833 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 834 00aa 032B     		cmp	r3, #3
 835 00ac ECD9     		bls	.L49
 320:.\Protocolo.c **** 				}
 321:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 836              		.loc 1 321 0 is_stmt 1
 837 00ae 0023     		movs	r3, #0
 838 00b0 FB73     		strb	r3, [r7, #15]
 839 00b2 0FE0     		b	.L50
 840              	.L51:
 322:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 841              		.loc 1 322 0 discriminator 3
 842 00b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 843 00b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 22


 844 00b8 1132     		adds	r2, r2, #17
 845 00ba 8749     		ldr	r1, .L78+4
 846 00bc 8A5C     		ldrb	r2, [r1, r2]
 847 00be D2B2     		uxtb	r2, r2
 848 00c0 02F00F02 		and	r2, r2, #15
 849 00c4 D1B2     		uxtb	r1, r2
 850 00c6 864A     		ldr	r2, .L78+12
 851 00c8 1344     		add	r3, r3, r2
 852 00ca 0A46     		mov	r2, r1
 853 00cc 1A74     		strb	r2, [r3, #16]
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 854              		.loc 1 321 0 discriminator 3
 855 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 856 00d0 0133     		adds	r3, r3, #1
 857 00d2 FB73     		strb	r3, [r7, #15]
 858              	.L50:
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 859              		.loc 1 321 0 is_stmt 0 discriminator 1
 860 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 861 00d6 052B     		cmp	r3, #5
 862 00d8 ECD9     		bls	.L51
 323:.\Protocolo.c **** 				}			
 324:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 863              		.loc 1 324 0 is_stmt 1
 864 00da 0023     		movs	r3, #0
 865 00dc FB73     		strb	r3, [r7, #15]
 866 00de 0FE0     		b	.L52
 867              	.L53:
 325:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 868              		.loc 1 325 0 discriminator 3
 869 00e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 870 00e2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 871 00e4 1832     		adds	r2, r2, #24
 872 00e6 7C49     		ldr	r1, .L78+4
 873 00e8 8A5C     		ldrb	r2, [r1, r2]
 874 00ea D2B2     		uxtb	r2, r2
 875 00ec 02F00F02 		and	r2, r2, #15
 876 00f0 D1B2     		uxtb	r1, r2
 877 00f2 7B4A     		ldr	r2, .L78+12
 878 00f4 1344     		add	r3, r3, r2
 879 00f6 0A46     		mov	r2, r1
 880 00f8 DA71     		strb	r2, [r3, #7]
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 881              		.loc 1 324 0 discriminator 3
 882 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 883 00fc 0133     		adds	r3, r3, #1
 884 00fe FB73     		strb	r3, [r7, #15]
 885              	.L52:
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 886              		.loc 1 324 0 is_stmt 0 discriminator 1
 887 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 888 0102 052B     		cmp	r3, #5
 889 0104 ECD9     		bls	.L53
 890 0106 4BE0     		b	.L54
 891              	.L47:
 326:.\Protocolo.c **** 				}
 327:.\Protocolo.c **** 			}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 23


 328:.\Protocolo.c **** 			else{
 329:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 892              		.loc 1 329 0 is_stmt 1
 893 0108 734B     		ldr	r3, .L78+4
 894 010a 5B7A     		ldrb	r3, [r3, #9]
 895 010c DBB2     		uxtb	r3, r3
 896 010e 03F00F03 		and	r3, r3, #15
 897 0112 DBB2     		uxtb	r3, r3
 898 0114 0133     		adds	r3, r3, #1
 899 0116 DAB2     		uxtb	r2, r3
 900 0118 724B     		ldr	r3, .L78+16
 901 011a 5A76     		strb	r2, [r3, #25]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 902              		.loc 1 330 0
 903 011c 0023     		movs	r3, #0
 904 011e FB73     		strb	r3, [r7, #15]
 905 0120 0FE0     		b	.L55
 906              	.L56:
 331:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 907              		.loc 1 331 0 discriminator 3
 908 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 909 0124 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 910 0126 0C32     		adds	r2, r2, #12
 911 0128 6B49     		ldr	r1, .L78+4
 912 012a 8A5C     		ldrb	r2, [r1, r2]
 913 012c D2B2     		uxtb	r2, r2
 914 012e 02F00F02 		and	r2, r2, #15
 915 0132 D1B2     		uxtb	r1, r2
 916 0134 6B4A     		ldr	r2, .L78+16
 917 0136 1344     		add	r3, r3, r2
 918 0138 0A46     		mov	r2, r1
 919 013a 9A70     		strb	r2, [r3, #2]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 920              		.loc 1 330 0 discriminator 3
 921 013c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 922 013e 0133     		adds	r3, r3, #1
 923 0140 FB73     		strb	r3, [r7, #15]
 924              	.L55:
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 925              		.loc 1 330 0 is_stmt 0 discriminator 1
 926 0142 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 927 0144 032B     		cmp	r3, #3
 928 0146 ECD9     		bls	.L56
 332:.\Protocolo.c **** 				}
 333:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 929              		.loc 1 333 0 is_stmt 1
 930 0148 0023     		movs	r3, #0
 931 014a FB73     		strb	r3, [r7, #15]
 932 014c 0FE0     		b	.L57
 933              	.L58:
 334:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 934              		.loc 1 334 0 discriminator 3
 935 014e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 936 0150 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 937 0152 1132     		adds	r2, r2, #17
 938 0154 6049     		ldr	r1, .L78+4
 939 0156 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 24


 940 0158 D2B2     		uxtb	r2, r2
 941 015a 02F00F02 		and	r2, r2, #15
 942 015e D1B2     		uxtb	r1, r2
 943 0160 604A     		ldr	r2, .L78+16
 944 0162 1344     		add	r3, r3, r2
 945 0164 0A46     		mov	r2, r1
 946 0166 1A74     		strb	r2, [r3, #16]
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 947              		.loc 1 333 0 discriminator 3
 948 0168 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 949 016a 0133     		adds	r3, r3, #1
 950 016c FB73     		strb	r3, [r7, #15]
 951              	.L57:
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 952              		.loc 1 333 0 is_stmt 0 discriminator 1
 953 016e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 954 0170 052B     		cmp	r3, #5
 955 0172 ECD9     		bls	.L58
 335:.\Protocolo.c **** 				}			
 336:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 956              		.loc 1 336 0 is_stmt 1
 957 0174 0023     		movs	r3, #0
 958 0176 FB73     		strb	r3, [r7, #15]
 959 0178 0FE0     		b	.L59
 960              	.L60:
 337:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 961              		.loc 1 337 0 discriminator 3
 962 017a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 963 017c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 964 017e 1832     		adds	r2, r2, #24
 965 0180 5549     		ldr	r1, .L78+4
 966 0182 8A5C     		ldrb	r2, [r1, r2]
 967 0184 D2B2     		uxtb	r2, r2
 968 0186 02F00F02 		and	r2, r2, #15
 969 018a D1B2     		uxtb	r1, r2
 970 018c 554A     		ldr	r2, .L78+16
 971 018e 1344     		add	r3, r3, r2
 972 0190 0A46     		mov	r2, r1
 973 0192 DA71     		strb	r2, [r3, #7]
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 974              		.loc 1 336 0 discriminator 3
 975 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 976 0196 0133     		adds	r3, r3, #1
 977 0198 FB73     		strb	r3, [r7, #15]
 978              	.L59:
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 979              		.loc 1 336 0 is_stmt 0 discriminator 1
 980 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 981 019c 052B     		cmp	r3, #5
 982 019e ECD9     		bls	.L60
 983              	.L54:
 338:.\Protocolo.c **** 				}			
 339:.\Protocolo.c **** 			}
 340:.\Protocolo.c **** 			return 1;
 984              		.loc 1 340 0 is_stmt 1
 985 01a0 0123     		movs	r3, #1
 986 01a2 CFE0     		b	.L61
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 25


 987              	.L46:
 341:.\Protocolo.c **** 		}
 342:.\Protocolo.c **** 		else{
 343:.\Protocolo.c **** 			return 0;
 988              		.loc 1 343 0
 989 01a4 0023     		movs	r3, #0
 990 01a6 CDE0     		b	.L61
 991              	.L45:
 344:.\Protocolo.c **** 		}
 345:.\Protocolo.c **** 	}
 346:.\Protocolo.c **** 	else if((version[1]==7)&&(Surtidor_GetRxBufferSize()==39)){
 992              		.loc 1 346 0
 993 01a8 4A4B     		ldr	r3, .L78
 994 01aa 5B78     		ldrb	r3, [r3, #1]
 995 01ac DBB2     		uxtb	r3, r3
 996 01ae 072B     		cmp	r3, #7
 997 01b0 40F0C780 		bne	.L62
 998              		.loc 1 346 0 is_stmt 0 discriminator 1
 999 01b4 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 1000 01b8 0346     		mov	r3, r0
 1001 01ba 272B     		cmp	r3, #39
 1002 01bc 40F0C180 		bne	.L62
 347:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[38]==0xF0)){
 1003              		.loc 1 347 0 is_stmt 1
 1004 01c0 454B     		ldr	r3, .L78+4
 1005 01c2 1B78     		ldrb	r3, [r3]
 1006 01c4 DBB2     		uxtb	r3, r3
 1007 01c6 FF2B     		cmp	r3, #255
 1008 01c8 40F0B980 		bne	.L63
 1009              		.loc 1 347 0 is_stmt 0 discriminator 1
 1010 01cc 424B     		ldr	r3, .L78+4
 1011 01ce 9B78     		ldrb	r3, [r3, #2]
 1012 01d0 DBB2     		uxtb	r3, r3
 1013 01d2 F82B     		cmp	r3, #248
 1014 01d4 40F0B380 		bne	.L63
 1015              		.loc 1 347 0 discriminator 2
 1016 01d8 3F4B     		ldr	r3, .L78+4
 1017 01da 93F82630 		ldrb	r3, [r3, #38]
 1018 01de DBB2     		uxtb	r3, r3
 1019 01e0 F02B     		cmp	r3, #240
 1020 01e2 40F0AC80 		bne	.L63
 348:.\Protocolo.c **** 			if(dir==lado1.dir){
 1021              		.loc 1 348 0 is_stmt 1
 1022 01e6 3D4B     		ldr	r3, .L78+8
 1023 01e8 1B78     		ldrb	r3, [r3]
 1024 01ea DBB2     		uxtb	r3, r3
 1025 01ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1026 01ee 9A42     		cmp	r2, r3
 1027 01f0 4CD1     		bne	.L64
 349:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1028              		.loc 1 349 0
 1029 01f2 394B     		ldr	r3, .L78+4
 1030 01f4 5B7A     		ldrb	r3, [r3, #9]
 1031 01f6 DBB2     		uxtb	r3, r3
 1032 01f8 03F00F03 		and	r3, r3, #15
 1033 01fc DBB2     		uxtb	r3, r3
 1034 01fe 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 26


 1035 0200 DAB2     		uxtb	r2, r3
 1036 0202 374B     		ldr	r3, .L78+12
 1037 0204 5A76     		strb	r2, [r3, #25]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1038              		.loc 1 350 0
 1039 0206 0023     		movs	r3, #0
 1040 0208 FB73     		strb	r3, [r7, #15]
 1041 020a 0FE0     		b	.L65
 1042              	.L66:
 351:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1043              		.loc 1 351 0 discriminator 3
 1044 020c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1045 020e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1046 0210 0C32     		adds	r2, r2, #12
 1047 0212 3149     		ldr	r1, .L78+4
 1048 0214 8A5C     		ldrb	r2, [r1, r2]
 1049 0216 D2B2     		uxtb	r2, r2
 1050 0218 02F00F02 		and	r2, r2, #15
 1051 021c D1B2     		uxtb	r1, r2
 1052 021e 304A     		ldr	r2, .L78+12
 1053 0220 1344     		add	r3, r3, r2
 1054 0222 0A46     		mov	r2, r1
 1055 0224 9A70     		strb	r2, [r3, #2]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1056              		.loc 1 350 0 discriminator 3
 1057 0226 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1058 0228 0133     		adds	r3, r3, #1
 1059 022a FB73     		strb	r3, [r7, #15]
 1060              	.L65:
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1061              		.loc 1 350 0 is_stmt 0 discriminator 1
 1062 022c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1063 022e 052B     		cmp	r3, #5
 1064 0230 ECD9     		bls	.L66
 352:.\Protocolo.c **** 				}
 353:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1065              		.loc 1 353 0 is_stmt 1
 1066 0232 0023     		movs	r3, #0
 1067 0234 FB73     		strb	r3, [r7, #15]
 1068 0236 0FE0     		b	.L67
 1069              	.L68:
 354:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1070              		.loc 1 354 0 discriminator 3
 1071 0238 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1072 023a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1073 023c 1332     		adds	r2, r2, #19
 1074 023e 2649     		ldr	r1, .L78+4
 1075 0240 8A5C     		ldrb	r2, [r1, r2]
 1076 0242 D2B2     		uxtb	r2, r2
 1077 0244 02F00F02 		and	r2, r2, #15
 1078 0248 D1B2     		uxtb	r1, r2
 1079 024a 254A     		ldr	r2, .L78+12
 1080 024c 1344     		add	r3, r3, r2
 1081 024e 0A46     		mov	r2, r1
 1082 0250 1A74     		strb	r2, [r3, #16]
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1083              		.loc 1 353 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 27


 1084 0252 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1085 0254 0133     		adds	r3, r3, #1
 1086 0256 FB73     		strb	r3, [r7, #15]
 1087              	.L67:
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1088              		.loc 1 353 0 is_stmt 0 discriminator 1
 1089 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1090 025a 072B     		cmp	r3, #7
 1091 025c ECD9     		bls	.L68
 355:.\Protocolo.c **** 				}			
 356:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1092              		.loc 1 356 0 is_stmt 1
 1093 025e 0023     		movs	r3, #0
 1094 0260 FB73     		strb	r3, [r7, #15]
 1095 0262 0FE0     		b	.L69
 1096              	.L70:
 357:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1097              		.loc 1 357 0 discriminator 3
 1098 0264 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1099 0266 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1100 0268 1C32     		adds	r2, r2, #28
 1101 026a 1B49     		ldr	r1, .L78+4
 1102 026c 8A5C     		ldrb	r2, [r1, r2]
 1103 026e D2B2     		uxtb	r2, r2
 1104 0270 02F00F02 		and	r2, r2, #15
 1105 0274 D1B2     		uxtb	r1, r2
 1106 0276 1A4A     		ldr	r2, .L78+12
 1107 0278 1344     		add	r3, r3, r2
 1108 027a 0A46     		mov	r2, r1
 1109 027c DA71     		strb	r2, [r3, #7]
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1110              		.loc 1 356 0 discriminator 3
 1111 027e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1112 0280 0133     		adds	r3, r3, #1
 1113 0282 FB73     		strb	r3, [r7, #15]
 1114              	.L69:
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1115              		.loc 1 356 0 is_stmt 0 discriminator 1
 1116 0284 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1117 0286 072B     		cmp	r3, #7
 1118 0288 ECD9     		bls	.L70
 1119 028a 56E0     		b	.L71
 1120              	.L64:
 358:.\Protocolo.c **** 				}
 359:.\Protocolo.c **** 			}
 360:.\Protocolo.c **** 			else{
 361:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1121              		.loc 1 361 0 is_stmt 1
 1122 028c 124B     		ldr	r3, .L78+4
 1123 028e 5B7A     		ldrb	r3, [r3, #9]
 1124 0290 DBB2     		uxtb	r3, r3
 1125 0292 03F00F03 		and	r3, r3, #15
 1126 0296 DBB2     		uxtb	r3, r3
 1127 0298 0133     		adds	r3, r3, #1
 1128 029a DAB2     		uxtb	r2, r3
 1129 029c 114B     		ldr	r3, .L78+16
 1130 029e 5A76     		strb	r2, [r3, #25]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 28


 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1131              		.loc 1 362 0
 1132 02a0 0023     		movs	r3, #0
 1133 02a2 FB73     		strb	r3, [r7, #15]
 1134 02a4 0FE0     		b	.L72
 1135              	.L73:
 363:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1136              		.loc 1 363 0 discriminator 3
 1137 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1138 02a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1139 02aa 0C32     		adds	r2, r2, #12
 1140 02ac 0A49     		ldr	r1, .L78+4
 1141 02ae 8A5C     		ldrb	r2, [r1, r2]
 1142 02b0 D2B2     		uxtb	r2, r2
 1143 02b2 02F00F02 		and	r2, r2, #15
 1144 02b6 D1B2     		uxtb	r1, r2
 1145 02b8 0A4A     		ldr	r2, .L78+16
 1146 02ba 1344     		add	r3, r3, r2
 1147 02bc 0A46     		mov	r2, r1
 1148 02be 9A70     		strb	r2, [r3, #2]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1149              		.loc 1 362 0 discriminator 3
 1150 02c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1151 02c2 0133     		adds	r3, r3, #1
 1152 02c4 FB73     		strb	r3, [r7, #15]
 1153              	.L72:
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1154              		.loc 1 362 0 is_stmt 0 discriminator 1
 1155 02c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1156 02c8 052B     		cmp	r3, #5
 1157 02ca ECD9     		bls	.L73
 364:.\Protocolo.c **** 				}
 365:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1158              		.loc 1 365 0 is_stmt 1
 1159 02cc 0023     		movs	r3, #0
 1160 02ce FB73     		strb	r3, [r7, #15]
 1161 02d0 1AE0     		b	.L74
 1162              	.L79:
 1163 02d2 00BF     		.align	2
 1164              	.L78:
 1165 02d4 00000000 		.word	version
 1166 02d8 00000000 		.word	Surtidor_rxBuffer
 1167 02dc 00000000 		.word	lado1
 1168 02e0 00000000 		.word	rventa1
 1169 02e4 00000000 		.word	rventa2
 1170              	.L75:
 366:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1171              		.loc 1 366 0 discriminator 3
 1172 02e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1173 02ea FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1174 02ec 1332     		adds	r2, r2, #19
 1175 02ee 1749     		ldr	r1, .L80
 1176 02f0 8A5C     		ldrb	r2, [r1, r2]
 1177 02f2 D2B2     		uxtb	r2, r2
 1178 02f4 02F00F02 		and	r2, r2, #15
 1179 02f8 D1B2     		uxtb	r1, r2
 1180 02fa 154A     		ldr	r2, .L80+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 29


 1181 02fc 1344     		add	r3, r3, r2
 1182 02fe 0A46     		mov	r2, r1
 1183 0300 1A74     		strb	r2, [r3, #16]
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1184              		.loc 1 365 0 discriminator 3
 1185 0302 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1186 0304 0133     		adds	r3, r3, #1
 1187 0306 FB73     		strb	r3, [r7, #15]
 1188              	.L74:
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1189              		.loc 1 365 0 is_stmt 0 discriminator 1
 1190 0308 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1191 030a 072B     		cmp	r3, #7
 1192 030c ECD9     		bls	.L75
 367:.\Protocolo.c **** 				}			
 368:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1193              		.loc 1 368 0 is_stmt 1
 1194 030e 0023     		movs	r3, #0
 1195 0310 FB73     		strb	r3, [r7, #15]
 1196 0312 0FE0     		b	.L76
 1197              	.L77:
 369:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1198              		.loc 1 369 0 discriminator 3
 1199 0314 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1200 0316 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1201 0318 1C32     		adds	r2, r2, #28
 1202 031a 0C49     		ldr	r1, .L80
 1203 031c 8A5C     		ldrb	r2, [r1, r2]
 1204 031e D2B2     		uxtb	r2, r2
 1205 0320 02F00F02 		and	r2, r2, #15
 1206 0324 D1B2     		uxtb	r1, r2
 1207 0326 0A4A     		ldr	r2, .L80+4
 1208 0328 1344     		add	r3, r3, r2
 1209 032a 0A46     		mov	r2, r1
 1210 032c DA71     		strb	r2, [r3, #7]
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1211              		.loc 1 368 0 discriminator 3
 1212 032e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1213 0330 0133     		adds	r3, r3, #1
 1214 0332 FB73     		strb	r3, [r7, #15]
 1215              	.L76:
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1216              		.loc 1 368 0 is_stmt 0 discriminator 1
 1217 0334 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1218 0336 072B     		cmp	r3, #7
 1219 0338 ECD9     		bls	.L77
 1220              	.L71:
 370:.\Protocolo.c **** 				}			
 371:.\Protocolo.c **** 			}
 372:.\Protocolo.c **** 			return 1;
 1221              		.loc 1 372 0 is_stmt 1
 1222 033a 0123     		movs	r3, #1
 1223 033c 02E0     		b	.L61
 1224              	.L63:
 373:.\Protocolo.c **** 		}
 374:.\Protocolo.c **** 		else{
 375:.\Protocolo.c **** 			return 0;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 30


 1225              		.loc 1 375 0
 1226 033e 0023     		movs	r3, #0
 1227 0340 00E0     		b	.L61
 1228              	.L62:
 376:.\Protocolo.c **** 		}
 377:.\Protocolo.c **** 	}
 378:.\Protocolo.c **** 	return 0;
 1229              		.loc 1 378 0
 1230 0342 0023     		movs	r3, #0
 1231              	.L61:
 379:.\Protocolo.c **** }
 1232              		.loc 1 379 0
 1233 0344 1846     		mov	r0, r3
 1234 0346 1037     		adds	r7, r7, #16
 1235              		.cfi_def_cfa_offset 8
 1236 0348 BD46     		mov	sp, r7
 1237              		.cfi_def_cfa_register 13
 1238              		@ sp needed
 1239 034a 80BD     		pop	{r7, pc}
 1240              	.L81:
 1241              		.align	2
 1242              	.L80:
 1243 034c 00000000 		.word	Surtidor_rxBuffer
 1244 0350 00000000 		.word	rventa2
 1245              		.cfi_endproc
 1246              	.LFE69:
 1247              		.size	venta, .-venta
 1248              		.section	.text.programar,"ax",%progbits
 1249              		.align	2
 1250              		.global	programar
 1251              		.thumb
 1252              		.thumb_func
 1253              		.type	programar, %function
 1254              	programar:
 1255              	.LFB70:
 380:.\Protocolo.c **** 
 381:.\Protocolo.c **** /*
 382:.\Protocolo.c **** ***************************************************************************************************
 383:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 384:.\Protocolo.c **** *
 385:.\Protocolo.c **** * Description : 
 386:.\Protocolo.c **** *               
 387:.\Protocolo.c **** *
 388:.\Protocolo.c **** * Argument(s) : none
 389:.\Protocolo.c **** *
 390:.\Protocolo.c **** * Return(s)   : none
 391:.\Protocolo.c **** *
 392:.\Protocolo.c **** * Caller(s)   : 
 393:.\Protocolo.c **** *
 394:.\Protocolo.c **** * Note(s)     : none.
 395:.\Protocolo.c **** ***************************************************************************************************
 396:.\Protocolo.c **** */
 397:.\Protocolo.c **** uint8 programar(uint8 dir, uint8 grado, uint8 *valor, uint8 preset){
 1256              		.loc 1 397 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 32
 1259              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 31


 1260 0000 80B5     		push	{r7, lr}
 1261              		.cfi_def_cfa_offset 8
 1262              		.cfi_offset 7, -8
 1263              		.cfi_offset 14, -4
 1264 0002 88B0     		sub	sp, sp, #32
 1265              		.cfi_def_cfa_offset 40
 1266 0004 00AF     		add	r7, sp, #0
 1267              		.cfi_def_cfa_register 7
 1268 0006 3A60     		str	r2, [r7]
 1269 0008 1A46     		mov	r2, r3
 1270 000a 0346     		mov	r3, r0
 1271 000c FB71     		strb	r3, [r7, #7]
 1272 000e 0B46     		mov	r3, r1
 1273 0010 BB71     		strb	r3, [r7, #6]
 1274 0012 1346     		mov	r3, r2
 1275 0014 7B71     		strb	r3, [r7, #5]
 398:.\Protocolo.c **** 	uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,temp,i,decimal;
 1276              		.loc 1 398 0
 1277 0016 07F10803 		add	r3, r7, #8
 1278 001a 0022     		movs	r2, #0
 1279 001c 1A60     		str	r2, [r3]
 1280 001e 0433     		adds	r3, r3, #4
 1281 0020 0022     		movs	r2, #0
 1282 0022 1A60     		str	r2, [r3]
 1283 0024 0433     		adds	r3, r3, #4
 1284 0026 0022     		movs	r2, #0
 1285 0028 1A60     		str	r2, [r3]
 1286 002a 0433     		adds	r3, r3, #4
 1287 002c 0022     		movs	r2, #0
 1288 002e 1A60     		str	r2, [r3]
 1289 0030 0433     		adds	r3, r3, #4
 1290 0032 0022     		movs	r2, #0
 1291 0034 1A80     		strh	r2, [r3]	@ movhi
 1292 0036 0233     		adds	r3, r3, #2
 399:.\Protocolo.c **** 	temp=4;
 1293              		.loc 1 399 0
 1294 0038 0423     		movs	r3, #4
 1295 003a BB77     		strb	r3, [r7, #30]
 400:.\Protocolo.c **** 	if(preset==3){
 1296              		.loc 1 400 0
 1297 003c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1298 003e 032B     		cmp	r3, #3
 1299 0040 01D1     		bne	.L83
 401:.\Protocolo.c **** 		preset=2;
 1300              		.loc 1 401 0
 1301 0042 0223     		movs	r3, #2
 1302 0044 7B71     		strb	r3, [r7, #5]
 1303              	.L83:
 402:.\Protocolo.c **** 	}
 403:.\Protocolo.c **** 	if(((version[1]==5)||(version[1]==6))&&(preset==1)){
 1304              		.loc 1 403 0
 1305 0046 B34B     		ldr	r3, .L126
 1306 0048 5B78     		ldrb	r3, [r3, #1]
 1307 004a DBB2     		uxtb	r3, r3
 1308 004c 052B     		cmp	r3, #5
 1309 004e 04D0     		beq	.L84
 1310              		.loc 1 403 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 32


 1311 0050 B04B     		ldr	r3, .L126
 1312 0052 5B78     		ldrb	r3, [r3, #1]
 1313 0054 DBB2     		uxtb	r3, r3
 1314 0056 062B     		cmp	r3, #6
 1315 0058 04D1     		bne	.L85
 1316              	.L84:
 1317              		.loc 1 403 0 discriminator 3
 1318 005a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1319 005c 012B     		cmp	r3, #1
 1320 005e 01D1     		bne	.L85
 404:.\Protocolo.c **** 		temp=3;
 1321              		.loc 1 404 0 is_stmt 1
 1322 0060 0323     		movs	r3, #3
 1323 0062 BB77     		strb	r3, [r7, #30]
 1324              	.L85:
 405:.\Protocolo.c **** 	}
 406:.\Protocolo.c **** 	if((version[1]==5)&&(preset==2)){
 1325              		.loc 1 406 0
 1326 0064 AB4B     		ldr	r3, .L126
 1327 0066 5B78     		ldrb	r3, [r3, #1]
 1328 0068 DBB2     		uxtb	r3, r3
 1329 006a 052B     		cmp	r3, #5
 1330 006c 04D1     		bne	.L86
 1331              		.loc 1 406 0 is_stmt 0 discriminator 1
 1332 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1333 0070 022B     		cmp	r3, #2
 1334 0072 01D1     		bne	.L86
 407:.\Protocolo.c **** 		temp=5;
 1335              		.loc 1 407 0 is_stmt 1
 1336 0074 0523     		movs	r3, #5
 1337 0076 BB77     		strb	r3, [r7, #30]
 1338              	.L86:
 408:.\Protocolo.c **** 	}
 409:.\Protocolo.c **** 	if((version[1]==7)&&(preset==1)){
 1339              		.loc 1 409 0
 1340 0078 A64B     		ldr	r3, .L126
 1341 007a 5B78     		ldrb	r3, [r3, #1]
 1342 007c DBB2     		uxtb	r3, r3
 1343 007e 072B     		cmp	r3, #7
 1344 0080 04D1     		bne	.L87
 1345              		.loc 1 409 0 is_stmt 0 discriminator 1
 1346 0082 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1347 0084 012B     		cmp	r3, #1
 1348 0086 01D1     		bne	.L87
 410:.\Protocolo.c **** 		temp=0;
 1349              		.loc 1 410 0 is_stmt 1
 1350 0088 0023     		movs	r3, #0
 1351 008a BB77     		strb	r3, [r7, #30]
 1352              	.L87:
 411:.\Protocolo.c **** 	}
 412:.\Protocolo.c **** 	if((version[1]==7)&&(preset==2)){
 1353              		.loc 1 412 0
 1354 008c A14B     		ldr	r3, .L126
 1355 008e 5B78     		ldrb	r3, [r3, #1]
 1356 0090 DBB2     		uxtb	r3, r3
 1357 0092 072B     		cmp	r3, #7
 1358 0094 04D1     		bne	.L88
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 33


 1359              		.loc 1 412 0 is_stmt 0 discriminator 1
 1360 0096 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1361 0098 022B     		cmp	r3, #2
 1362 009a 01D1     		bne	.L88
 413:.\Protocolo.c **** 		temp=2;
 1363              		.loc 1 413 0 is_stmt 1
 1364 009c 0223     		movs	r3, #2
 1365 009e BB77     		strb	r3, [r7, #30]
 1366              	.L88:
 414:.\Protocolo.c **** 	}	
 415:.\Protocolo.c **** 	decimal=0;
 1367              		.loc 1 415 0
 1368 00a0 0023     		movs	r3, #0
 1369 00a2 3B77     		strb	r3, [r7, #28]
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1370              		.loc 1 416 0
 1371 00a4 0123     		movs	r3, #1
 1372 00a6 7B77     		strb	r3, [r7, #29]
 1373 00a8 0AE0     		b	.L89
 1374              	.L91:
 417:.\Protocolo.c **** 		if(valor[i]==','){
 1375              		.loc 1 417 0
 1376 00aa 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1377 00ac 3A68     		ldr	r2, [r7]
 1378 00ae 1344     		add	r3, r3, r2
 1379 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1380 00b2 2C2B     		cmp	r3, #44
 1381 00b4 01D1     		bne	.L90
 418:.\Protocolo.c **** 			decimal=i;	
 1382              		.loc 1 418 0
 1383 00b6 7B7F     		ldrb	r3, [r7, #29]
 1384 00b8 3B77     		strb	r3, [r7, #28]
 1385              	.L90:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1386              		.loc 1 416 0 discriminator 2
 1387 00ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1388 00bc 0133     		adds	r3, r3, #1
 1389 00be 7B77     		strb	r3, [r7, #29]
 1390              	.L89:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1391              		.loc 1 416 0 is_stmt 0 discriminator 1
 1392 00c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1393 00c2 072B     		cmp	r3, #7
 1394 00c4 F1D9     		bls	.L91
 419:.\Protocolo.c **** 		}
 420:.\Protocolo.c **** 	}
 421:.\Protocolo.c **** 	if(decimal>4){
 1395              		.loc 1 421 0 is_stmt 1
 1396 00c6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1397 00c8 042B     		cmp	r3, #4
 1398 00ca 01D9     		bls	.L92
 422:.\Protocolo.c **** 		return 0;
 1399              		.loc 1 422 0
 1400 00cc 0023     		movs	r3, #0
 1401 00ce CFE3     		b	.L125
 1402              	.L92:
 423:.\Protocolo.c **** 	}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 34


 424:.\Protocolo.c **** 	if(version[1]!=7){		
 1403              		.loc 1 424 0
 1404 00d0 904B     		ldr	r3, .L126
 1405 00d2 5B78     		ldrb	r3, [r3, #1]
 1406 00d4 DBB2     		uxtb	r3, r3
 1407 00d6 072B     		cmp	r3, #7
 1408 00d8 00F00582 		beq	.L94
 425:.\Protocolo.c **** 		buffer[0]=0xFF;
 1409              		.loc 1 425 0
 1410 00dc FF23     		movs	r3, #255
 1411 00de 3B72     		strb	r3, [r7, #8]
 426:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1412              		.loc 1 426 0
 1413 00e0 BB7F     		ldrb	r3, [r7, #30]
 1414 00e2 63F01F03 		orn	r3, r3, #31
 1415 00e6 DBB2     		uxtb	r3, r3
 1416 00e8 7B72     		strb	r3, [r7, #9]
 427:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1417              		.loc 1 427 0
 1418 00ea 7B79     		ldrb	r3, [r7, #5]
 1419 00ec 63F00F03 		orn	r3, r3, #15
 1420 00f0 DBB2     		uxtb	r3, r3
 1421 00f2 BB72     		strb	r3, [r7, #10]
 428:.\Protocolo.c **** 		buffer[3]=0xF4;
 1422              		.loc 1 428 0
 1423 00f4 F423     		movs	r3, #244
 1424 00f6 FB72     		strb	r3, [r7, #11]
 429:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1425              		.loc 1 429 0
 1426 00f8 F823     		movs	r3, #248
 1427 00fa 3B73     		strb	r3, [r7, #12]
 430:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1428              		.loc 1 430 0
 1429 00fc 3B68     		ldr	r3, [r7]
 1430 00fe 0133     		adds	r3, r3, #1
 1431 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1432 0102 63F01F03 		orn	r3, r3, #31
 1433 0106 DBB2     		uxtb	r3, r3
 1434 0108 7B73     		strb	r3, [r7, #13]
 431:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1435              		.loc 1 431 0
 1436 010a 3B68     		ldr	r3, [r7]
 1437 010c 0233     		adds	r3, r3, #2
 1438 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 0110 63F01F03 		orn	r3, r3, #31
 1440 0114 DBB2     		uxtb	r3, r3
 1441 0116 BB73     		strb	r3, [r7, #14]
 432:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1442              		.loc 1 432 0
 1443 0118 3B68     		ldr	r3, [r7]
 1444 011a 0333     		adds	r3, r3, #3
 1445 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1446 011e 63F01F03 		orn	r3, r3, #31
 1447 0122 DBB2     		uxtb	r3, r3
 1448 0124 FB73     		strb	r3, [r7, #15]
 433:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1449              		.loc 1 433 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 35


 1450 0126 3B68     		ldr	r3, [r7]
 1451 0128 0433     		adds	r3, r3, #4
 1452 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 012c 63F01F03 		orn	r3, r3, #31
 1454 0130 DBB2     		uxtb	r3, r3
 1455 0132 3B74     		strb	r3, [r7, #16]
 434:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1456              		.loc 1 434 0
 1457 0134 3B68     		ldr	r3, [r7]
 1458 0136 0533     		adds	r3, r3, #5
 1459 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1460 013a 63F01F03 		orn	r3, r3, #31
 1461 013e DBB2     		uxtb	r3, r3
 1462 0140 7B74     		strb	r3, [r7, #17]
 435:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);
 1463              		.loc 1 435 0
 1464 0142 3B68     		ldr	r3, [r7]
 1465 0144 0633     		adds	r3, r3, #6
 1466 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1467 0148 63F01F03 		orn	r3, r3, #31
 1468 014c DBB2     		uxtb	r3, r3
 1469 014e BB74     		strb	r3, [r7, #18]
 436:.\Protocolo.c **** 		if(version[2]==2){
 1470              		.loc 1 436 0
 1471 0150 704B     		ldr	r3, .L126
 1472 0152 9B78     		ldrb	r3, [r3, #2]
 1473 0154 DBB2     		uxtb	r3, r3
 1474 0156 022B     		cmp	r3, #2
 1475 0158 40F0A580 		bne	.L95
 437:.\Protocolo.c **** 			if(decimal==4){
 1476              		.loc 1 437 0
 1477 015c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1478 015e 042B     		cmp	r3, #4
 1479 0160 29D1     		bne	.L96
 438:.\Protocolo.c **** 				buffer[5]=(valor[2]|0xE0);
 1480              		.loc 1 438 0
 1481 0162 3B68     		ldr	r3, [r7]
 1482 0164 0233     		adds	r3, r3, #2
 1483 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1484 0168 63F01F03 		orn	r3, r3, #31
 1485 016c DBB2     		uxtb	r3, r3
 1486 016e 7B73     		strb	r3, [r7, #13]
 439:.\Protocolo.c **** 				buffer[6]=(valor[3]|0xE0);
 1487              		.loc 1 439 0
 1488 0170 3B68     		ldr	r3, [r7]
 1489 0172 0333     		adds	r3, r3, #3
 1490 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1491 0176 63F01F03 		orn	r3, r3, #31
 1492 017a DBB2     		uxtb	r3, r3
 1493 017c BB73     		strb	r3, [r7, #14]
 440:.\Protocolo.c **** 				buffer[7]=(valor[5]|0xE0);
 1494              		.loc 1 440 0
 1495 017e 3B68     		ldr	r3, [r7]
 1496 0180 0533     		adds	r3, r3, #5
 1497 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1498 0184 63F01F03 		orn	r3, r3, #31
 1499 0188 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 36


 1500 018a FB73     		strb	r3, [r7, #15]
 441:.\Protocolo.c **** 				buffer[8]=(valor[6]|0xE0);
 1501              		.loc 1 441 0
 1502 018c 3B68     		ldr	r3, [r7]
 1503 018e 0633     		adds	r3, r3, #6
 1504 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1505 0192 63F01F03 		orn	r3, r3, #31
 1506 0196 DBB2     		uxtb	r3, r3
 1507 0198 3B74     		strb	r3, [r7, #16]
 442:.\Protocolo.c **** 				buffer[9]=(valor[7]|0xE0);
 1508              		.loc 1 442 0
 1509 019a 3B68     		ldr	r3, [r7]
 1510 019c 0733     		adds	r3, r3, #7
 1511 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1512 01a0 63F01F03 		orn	r3, r3, #31
 1513 01a4 DBB2     		uxtb	r3, r3
 1514 01a6 7B74     		strb	r3, [r7, #17]
 443:.\Protocolo.c **** 				buffer[10]=(valor[8]|0xE0);
 1515              		.loc 1 443 0
 1516 01a8 3B68     		ldr	r3, [r7]
 1517 01aa 0833     		adds	r3, r3, #8
 1518 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1519 01ae 63F01F03 		orn	r3, r3, #31
 1520 01b2 DBB2     		uxtb	r3, r3
 1521 01b4 BB74     		strb	r3, [r7, #18]
 1522              	.L96:
 444:.\Protocolo.c **** 			}
 445:.\Protocolo.c **** 			if(decimal==3){
 1523              		.loc 1 445 0
 1524 01b6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1525 01b8 032B     		cmp	r3, #3
 1526 01ba 29D1     		bne	.L97
 446:.\Protocolo.c **** 				buffer[5]=(valor[1]|0xE0);
 1527              		.loc 1 446 0
 1528 01bc 3B68     		ldr	r3, [r7]
 1529 01be 0133     		adds	r3, r3, #1
 1530 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1531 01c2 63F01F03 		orn	r3, r3, #31
 1532 01c6 DBB2     		uxtb	r3, r3
 1533 01c8 7B73     		strb	r3, [r7, #13]
 447:.\Protocolo.c **** 				buffer[6]=(valor[2]|0xE0);
 1534              		.loc 1 447 0
 1535 01ca 3B68     		ldr	r3, [r7]
 1536 01cc 0233     		adds	r3, r3, #2
 1537 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1538 01d0 63F01F03 		orn	r3, r3, #31
 1539 01d4 DBB2     		uxtb	r3, r3
 1540 01d6 BB73     		strb	r3, [r7, #14]
 448:.\Protocolo.c **** 				buffer[7]=(valor[4]|0xE0);
 1541              		.loc 1 448 0
 1542 01d8 3B68     		ldr	r3, [r7]
 1543 01da 0433     		adds	r3, r3, #4
 1544 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1545 01de 63F01F03 		orn	r3, r3, #31
 1546 01e2 DBB2     		uxtb	r3, r3
 1547 01e4 FB73     		strb	r3, [r7, #15]
 449:.\Protocolo.c **** 				buffer[8]=(valor[5]|0xE0);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 37


 1548              		.loc 1 449 0
 1549 01e6 3B68     		ldr	r3, [r7]
 1550 01e8 0533     		adds	r3, r3, #5
 1551 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1552 01ec 63F01F03 		orn	r3, r3, #31
 1553 01f0 DBB2     		uxtb	r3, r3
 1554 01f2 3B74     		strb	r3, [r7, #16]
 450:.\Protocolo.c **** 				buffer[9]=(valor[6]|0xE0);
 1555              		.loc 1 450 0
 1556 01f4 3B68     		ldr	r3, [r7]
 1557 01f6 0633     		adds	r3, r3, #6
 1558 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1559 01fa 63F01F03 		orn	r3, r3, #31
 1560 01fe DBB2     		uxtb	r3, r3
 1561 0200 7B74     		strb	r3, [r7, #17]
 451:.\Protocolo.c **** 				buffer[10]=(valor[7]|0xE0);
 1562              		.loc 1 451 0
 1563 0202 3B68     		ldr	r3, [r7]
 1564 0204 0733     		adds	r3, r3, #7
 1565 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1566 0208 63F01F03 		orn	r3, r3, #31
 1567 020c DBB2     		uxtb	r3, r3
 1568 020e BB74     		strb	r3, [r7, #18]
 1569              	.L97:
 452:.\Protocolo.c **** 			}
 453:.\Protocolo.c **** 			if(decimal==2){
 1570              		.loc 1 453 0
 1571 0210 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1572 0212 022B     		cmp	r3, #2
 1573 0214 24D1     		bne	.L98
 454:.\Protocolo.c **** 				buffer[5]=0xE0;
 1574              		.loc 1 454 0
 1575 0216 E023     		movs	r3, #224
 1576 0218 7B73     		strb	r3, [r7, #13]
 455:.\Protocolo.c **** 				buffer[6]=(valor[1]|0xE0);
 1577              		.loc 1 455 0
 1578 021a 3B68     		ldr	r3, [r7]
 1579 021c 0133     		adds	r3, r3, #1
 1580 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1581 0220 63F01F03 		orn	r3, r3, #31
 1582 0224 DBB2     		uxtb	r3, r3
 1583 0226 BB73     		strb	r3, [r7, #14]
 456:.\Protocolo.c **** 				buffer[7]=(valor[3]|0xE0);
 1584              		.loc 1 456 0
 1585 0228 3B68     		ldr	r3, [r7]
 1586 022a 0333     		adds	r3, r3, #3
 1587 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1588 022e 63F01F03 		orn	r3, r3, #31
 1589 0232 DBB2     		uxtb	r3, r3
 1590 0234 FB73     		strb	r3, [r7, #15]
 457:.\Protocolo.c **** 				buffer[8]=(valor[4]|0xE0);
 1591              		.loc 1 457 0
 1592 0236 3B68     		ldr	r3, [r7]
 1593 0238 0433     		adds	r3, r3, #4
 1594 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1595 023c 63F01F03 		orn	r3, r3, #31
 1596 0240 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 38


 1597 0242 3B74     		strb	r3, [r7, #16]
 458:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);	
 1598              		.loc 1 458 0
 1599 0244 3B68     		ldr	r3, [r7]
 1600 0246 0533     		adds	r3, r3, #5
 1601 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1602 024a 63F01F03 		orn	r3, r3, #31
 1603 024e DBB2     		uxtb	r3, r3
 1604 0250 7B74     		strb	r3, [r7, #17]
 459:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1605              		.loc 1 459 0
 1606 0252 3B68     		ldr	r3, [r7]
 1607 0254 0633     		adds	r3, r3, #6
 1608 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1609 0258 63F01F03 		orn	r3, r3, #31
 1610 025c DBB2     		uxtb	r3, r3
 1611 025e BB74     		strb	r3, [r7, #18]
 1612              	.L98:
 460:.\Protocolo.c **** 			}
 461:.\Protocolo.c **** 			if(decimal==0){
 1613              		.loc 1 461 0
 1614 0260 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1615 0262 002B     		cmp	r3, #0
 1616 0264 1FD1     		bne	.L95
 462:.\Protocolo.c **** 				buffer[5]=0xE0;
 1617              		.loc 1 462 0
 1618 0266 E023     		movs	r3, #224
 1619 0268 7B73     		strb	r3, [r7, #13]
 463:.\Protocolo.c **** 				buffer[6]=0xE0;
 1620              		.loc 1 463 0
 1621 026a E023     		movs	r3, #224
 1622 026c BB73     		strb	r3, [r7, #14]
 464:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1623              		.loc 1 464 0
 1624 026e 3B68     		ldr	r3, [r7]
 1625 0270 0133     		adds	r3, r3, #1
 1626 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1627 0274 63F01F03 		orn	r3, r3, #31
 1628 0278 DBB2     		uxtb	r3, r3
 1629 027a FB73     		strb	r3, [r7, #15]
 465:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1630              		.loc 1 465 0
 1631 027c 3B68     		ldr	r3, [r7]
 1632 027e 0233     		adds	r3, r3, #2
 1633 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1634 0282 63F01F03 		orn	r3, r3, #31
 1635 0286 DBB2     		uxtb	r3, r3
 1636 0288 3B74     		strb	r3, [r7, #16]
 466:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1637              		.loc 1 466 0
 1638 028a 3B68     		ldr	r3, [r7]
 1639 028c 0333     		adds	r3, r3, #3
 1640 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1641 0290 63F01F03 		orn	r3, r3, #31
 1642 0294 DBB2     		uxtb	r3, r3
 1643 0296 7B74     		strb	r3, [r7, #17]
 467:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 39


 1644              		.loc 1 467 0
 1645 0298 3B68     		ldr	r3, [r7]
 1646 029a 0433     		adds	r3, r3, #4
 1647 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1648 029e 63F01F03 		orn	r3, r3, #31
 1649 02a2 DBB2     		uxtb	r3, r3
 1650 02a4 BB74     		strb	r3, [r7, #18]
 1651              	.L95:
 468:.\Protocolo.c **** 			}			
 469:.\Protocolo.c **** 		}
 470:.\Protocolo.c **** 		buffer[11]=0xFB;
 1652              		.loc 1 470 0
 1653 02a6 FB23     		movs	r3, #251
 1654 02a8 FB74     		strb	r3, [r7, #19]
 471:.\Protocolo.c **** 		buffer[12]=0;
 1655              		.loc 1 471 0
 1656 02aa 0023     		movs	r3, #0
 1657 02ac 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1658              		.loc 1 472 0
 1659 02ae 0023     		movs	r3, #0
 1660 02b0 7B77     		strb	r3, [r7, #29]
 1661 02b2 0FE0     		b	.L99
 1662              	.L100:
 473:.\Protocolo.c **** 			buffer[12]+=(buffer[i]&0x0F);	
 1663              		.loc 1 473 0 discriminator 3
 1664 02b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1665 02b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1666 02b8 07F12001 		add	r1, r7, #32
 1667 02bc 0B44     		add	r3, r3, r1
 1668 02be 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1669 02c2 03F00F03 		and	r3, r3, #15
 1670 02c6 DBB2     		uxtb	r3, r3
 1671 02c8 1344     		add	r3, r3, r2
 1672 02ca DBB2     		uxtb	r3, r3
 1673 02cc 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1674              		.loc 1 472 0 discriminator 3
 1675 02ce 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1676 02d0 0133     		adds	r3, r3, #1
 1677 02d2 7B77     		strb	r3, [r7, #29]
 1678              	.L99:
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1679              		.loc 1 472 0 is_stmt 0 discriminator 1
 1680 02d4 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1681 02d6 0B2B     		cmp	r3, #11
 1682 02d8 ECD9     		bls	.L100
 474:.\Protocolo.c **** 		}
 475:.\Protocolo.c **** 		buffer[12]=(((~buffer[12])+1)&0x0F)|0xE0;
 1683              		.loc 1 475 0 is_stmt 1
 1684 02da 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1685 02dc 5B42     		negs	r3, r3
 1686 02de DBB2     		uxtb	r3, r3
 1687 02e0 DBB2     		uxtb	r3, r3
 1688 02e2 03F00F03 		and	r3, r3, #15
 1689 02e6 DBB2     		uxtb	r3, r3
 1690 02e8 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 40


 1691 02ec DBB2     		uxtb	r3, r3
 1692 02ee DBB2     		uxtb	r3, r3
 1693 02f0 3B75     		strb	r3, [r7, #20]
 476:.\Protocolo.c **** 		buffer[13]=0xF0;
 1694              		.loc 1 476 0
 1695 02f2 F023     		movs	r3, #240
 1696 02f4 7B75     		strb	r3, [r7, #21]
 477:.\Protocolo.c **** 		size=13;
 1697              		.loc 1 477 0
 1698 02f6 0D23     		movs	r3, #13
 1699 02f8 FB77     		strb	r3, [r7, #31]
 478:.\Protocolo.c **** 		if(version[1]==5){
 1700              		.loc 1 478 0
 1701 02fa 064B     		ldr	r3, .L126
 1702 02fc 5B78     		ldrb	r3, [r3, #1]
 1703 02fe DBB2     		uxtb	r3, r3
 1704 0300 052B     		cmp	r3, #5
 1705 0302 2CD1     		bne	.L101
 479:.\Protocolo.c **** 			buffer[10]=0xFB;
 1706              		.loc 1 479 0
 1707 0304 FB23     		movs	r3, #251
 1708 0306 BB74     		strb	r3, [r7, #18]
 480:.\Protocolo.c **** 			buffer[11]=0;
 1709              		.loc 1 480 0
 1710 0308 0023     		movs	r3, #0
 1711 030a FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1712              		.loc 1 481 0
 1713 030c 0023     		movs	r3, #0
 1714 030e 7B77     		strb	r3, [r7, #29]
 1715 0310 12E0     		b	.L102
 1716              	.L127:
 1717 0312 00BF     		.align	2
 1718              	.L126:
 1719 0314 00000000 		.word	version
 1720              	.L103:
 482:.\Protocolo.c **** 				buffer[11]+=(buffer[i]&0x0F);	
 1721              		.loc 1 482 0 discriminator 3
 1722 0318 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 1723 031a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1724 031c 07F12001 		add	r1, r7, #32
 1725 0320 0B44     		add	r3, r3, r1
 1726 0322 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1727 0326 03F00F03 		and	r3, r3, #15
 1728 032a DBB2     		uxtb	r3, r3
 1729 032c 1344     		add	r3, r3, r2
 1730 032e DBB2     		uxtb	r3, r3
 1731 0330 FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1732              		.loc 1 481 0 discriminator 3
 1733 0332 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1734 0334 0133     		adds	r3, r3, #1
 1735 0336 7B77     		strb	r3, [r7, #29]
 1736              	.L102:
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1737              		.loc 1 481 0 is_stmt 0 discriminator 1
 1738 0338 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 41


 1739 033a 0A2B     		cmp	r3, #10
 1740 033c ECD9     		bls	.L103
 483:.\Protocolo.c **** 			}
 484:.\Protocolo.c **** 			buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 1741              		.loc 1 484 0 is_stmt 1
 1742 033e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1743 0340 5B42     		negs	r3, r3
 1744 0342 DBB2     		uxtb	r3, r3
 1745 0344 DBB2     		uxtb	r3, r3
 1746 0346 03F00F03 		and	r3, r3, #15
 1747 034a DBB2     		uxtb	r3, r3
 1748 034c 63F01F03 		orn	r3, r3, #31
 1749 0350 DBB2     		uxtb	r3, r3
 1750 0352 DBB2     		uxtb	r3, r3
 1751 0354 FB74     		strb	r3, [r7, #19]
 485:.\Protocolo.c **** 			buffer[12]=0xF0;
 1752              		.loc 1 485 0
 1753 0356 F023     		movs	r3, #240
 1754 0358 3B75     		strb	r3, [r7, #20]
 486:.\Protocolo.c **** 			size=12;		
 1755              		.loc 1 486 0
 1756 035a 0C23     		movs	r3, #12
 1757 035c FB77     		strb	r3, [r7, #31]
 1758              	.L101:
 487:.\Protocolo.c **** 		}
 488:.\Protocolo.c **** 		if(preset==1){
 1759              		.loc 1 488 0
 1760 035e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1761 0360 012B     		cmp	r3, #1
 1762 0362 40F0C080 		bne	.L94
 489:.\Protocolo.c **** 			buffer[4]=0xF6;
 1763              		.loc 1 489 0
 1764 0366 F623     		movs	r3, #246
 1765 0368 3B73     		strb	r3, [r7, #12]
 490:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 1766              		.loc 1 490 0
 1767 036a BB79     		ldrb	r3, [r7, #6]
 1768 036c 013B     		subs	r3, r3, #1
 1769 036e DBB2     		uxtb	r3, r3
 1770 0370 DBB2     		uxtb	r3, r3
 1771 0372 63F01F03 		orn	r3, r3, #31
 1772 0376 DBB2     		uxtb	r3, r3
 1773 0378 DBB2     		uxtb	r3, r3
 1774 037a 7B73     		strb	r3, [r7, #13]
 491:.\Protocolo.c **** 			buffer[6]=0xF8;
 1775              		.loc 1 491 0
 1776 037c F823     		movs	r3, #248
 1777 037e BB73     		strb	r3, [r7, #14]
 492:.\Protocolo.c **** 			if(decimal==4){
 1778              		.loc 1 492 0
 1779 0380 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1780 0382 042B     		cmp	r3, #4
 1781 0384 22D1     		bne	.L104
 493:.\Protocolo.c **** 				buffer[7]=(valor[2]|0xE0);
 1782              		.loc 1 493 0
 1783 0386 3B68     		ldr	r3, [r7]
 1784 0388 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 42


 1785 038a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1786 038c 63F01F03 		orn	r3, r3, #31
 1787 0390 DBB2     		uxtb	r3, r3
 1788 0392 FB73     		strb	r3, [r7, #15]
 494:.\Protocolo.c **** 				buffer[8]=(valor[3]|0xE0);
 1789              		.loc 1 494 0
 1790 0394 3B68     		ldr	r3, [r7]
 1791 0396 0333     		adds	r3, r3, #3
 1792 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1793 039a 63F01F03 		orn	r3, r3, #31
 1794 039e DBB2     		uxtb	r3, r3
 1795 03a0 3B74     		strb	r3, [r7, #16]
 495:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);
 1796              		.loc 1 495 0
 1797 03a2 3B68     		ldr	r3, [r7]
 1798 03a4 0533     		adds	r3, r3, #5
 1799 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1800 03a8 63F01F03 		orn	r3, r3, #31
 1801 03ac DBB2     		uxtb	r3, r3
 1802 03ae 7B74     		strb	r3, [r7, #17]
 496:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1803              		.loc 1 496 0
 1804 03b0 3B68     		ldr	r3, [r7]
 1805 03b2 0633     		adds	r3, r3, #6
 1806 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1807 03b6 63F01F03 		orn	r3, r3, #31
 1808 03ba DBB2     		uxtb	r3, r3
 1809 03bc BB74     		strb	r3, [r7, #18]
 497:.\Protocolo.c **** 				buffer[11]=(valor[7]|0xE0);
 1810              		.loc 1 497 0
 1811 03be 3B68     		ldr	r3, [r7]
 1812 03c0 0733     		adds	r3, r3, #7
 1813 03c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1814 03c4 63F01F03 		orn	r3, r3, #31
 1815 03c8 DBB2     		uxtb	r3, r3
 1816 03ca FB74     		strb	r3, [r7, #19]
 1817              	.L104:
 498:.\Protocolo.c **** 			}
 499:.\Protocolo.c **** 			if(decimal==3){
 1818              		.loc 1 499 0
 1819 03cc 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1820 03ce 032B     		cmp	r3, #3
 1821 03d0 22D1     		bne	.L105
 500:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1822              		.loc 1 500 0
 1823 03d2 3B68     		ldr	r3, [r7]
 1824 03d4 0133     		adds	r3, r3, #1
 1825 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1826 03d8 63F01F03 		orn	r3, r3, #31
 1827 03dc DBB2     		uxtb	r3, r3
 1828 03de FB73     		strb	r3, [r7, #15]
 501:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1829              		.loc 1 501 0
 1830 03e0 3B68     		ldr	r3, [r7]
 1831 03e2 0233     		adds	r3, r3, #2
 1832 03e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1833 03e6 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 43


 1834 03ea DBB2     		uxtb	r3, r3
 1835 03ec 3B74     		strb	r3, [r7, #16]
 502:.\Protocolo.c **** 				buffer[9]=(valor[4]|0xE0);
 1836              		.loc 1 502 0
 1837 03ee 3B68     		ldr	r3, [r7]
 1838 03f0 0433     		adds	r3, r3, #4
 1839 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1840 03f4 63F01F03 		orn	r3, r3, #31
 1841 03f8 DBB2     		uxtb	r3, r3
 1842 03fa 7B74     		strb	r3, [r7, #17]
 503:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 1843              		.loc 1 503 0
 1844 03fc 3B68     		ldr	r3, [r7]
 1845 03fe 0533     		adds	r3, r3, #5
 1846 0400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1847 0402 63F01F03 		orn	r3, r3, #31
 1848 0406 DBB2     		uxtb	r3, r3
 1849 0408 BB74     		strb	r3, [r7, #18]
 504:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);		
 1850              		.loc 1 504 0
 1851 040a 3B68     		ldr	r3, [r7]
 1852 040c 0633     		adds	r3, r3, #6
 1853 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1854 0410 63F01F03 		orn	r3, r3, #31
 1855 0414 DBB2     		uxtb	r3, r3
 1856 0416 FB74     		strb	r3, [r7, #19]
 1857              	.L105:
 505:.\Protocolo.c **** 			}
 506:.\Protocolo.c **** 			if(decimal==2){
 1858              		.loc 1 506 0
 1859 0418 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1860 041a 022B     		cmp	r3, #2
 1861 041c 1DD1     		bne	.L106
 507:.\Protocolo.c **** 				buffer[7]=0xE0;
 1862              		.loc 1 507 0
 1863 041e E023     		movs	r3, #224
 1864 0420 FB73     		strb	r3, [r7, #15]
 508:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 1865              		.loc 1 508 0
 1866 0422 3B68     		ldr	r3, [r7]
 1867 0424 0133     		adds	r3, r3, #1
 1868 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1869 0428 63F01F03 		orn	r3, r3, #31
 1870 042c DBB2     		uxtb	r3, r3
 1871 042e 3B74     		strb	r3, [r7, #16]
 509:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1872              		.loc 1 509 0
 1873 0430 3B68     		ldr	r3, [r7]
 1874 0432 0333     		adds	r3, r3, #3
 1875 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1876 0436 63F01F03 		orn	r3, r3, #31
 1877 043a DBB2     		uxtb	r3, r3
 1878 043c 7B74     		strb	r3, [r7, #17]
 510:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1879              		.loc 1 510 0
 1880 043e 3B68     		ldr	r3, [r7]
 1881 0440 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 44


 1882 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1883 0444 63F01F03 		orn	r3, r3, #31
 1884 0448 DBB2     		uxtb	r3, r3
 1885 044a BB74     		strb	r3, [r7, #18]
 511:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);		
 1886              		.loc 1 511 0
 1887 044c 3B68     		ldr	r3, [r7]
 1888 044e 0533     		adds	r3, r3, #5
 1889 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1890 0452 63F01F03 		orn	r3, r3, #31
 1891 0456 DBB2     		uxtb	r3, r3
 1892 0458 FB74     		strb	r3, [r7, #19]
 1893              	.L106:
 512:.\Protocolo.c **** 			}
 513:.\Protocolo.c **** 			if(decimal==0){
 1894              		.loc 1 513 0
 1895 045a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1896 045c 002B     		cmp	r3, #0
 1897 045e 18D1     		bne	.L107
 514:.\Protocolo.c **** 				buffer[7]=0xE0;
 1898              		.loc 1 514 0
 1899 0460 E023     		movs	r3, #224
 1900 0462 FB73     		strb	r3, [r7, #15]
 515:.\Protocolo.c **** 				buffer[8]=0xE0;
 1901              		.loc 1 515 0
 1902 0464 E023     		movs	r3, #224
 1903 0466 3B74     		strb	r3, [r7, #16]
 516:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 1904              		.loc 1 516 0
 1905 0468 3B68     		ldr	r3, [r7]
 1906 046a 0133     		adds	r3, r3, #1
 1907 046c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1908 046e 63F01F03 		orn	r3, r3, #31
 1909 0472 DBB2     		uxtb	r3, r3
 1910 0474 7B74     		strb	r3, [r7, #17]
 517:.\Protocolo.c **** 				buffer[10]=(valor[2]|0xE0);
 1911              		.loc 1 517 0
 1912 0476 3B68     		ldr	r3, [r7]
 1913 0478 0233     		adds	r3, r3, #2
 1914 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1915 047c 63F01F03 		orn	r3, r3, #31
 1916 0480 DBB2     		uxtb	r3, r3
 1917 0482 BB74     		strb	r3, [r7, #18]
 518:.\Protocolo.c **** 				buffer[11]=(valor[3]|0xE0);		
 1918              		.loc 1 518 0
 1919 0484 3B68     		ldr	r3, [r7]
 1920 0486 0333     		adds	r3, r3, #3
 1921 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1922 048a 63F01F03 		orn	r3, r3, #31
 1923 048e DBB2     		uxtb	r3, r3
 1924 0490 FB74     		strb	r3, [r7, #19]
 1925              	.L107:
 519:.\Protocolo.c **** 			}			
 520:.\Protocolo.c **** 			buffer[12]=0xFB;
 1926              		.loc 1 520 0
 1927 0492 FB23     		movs	r3, #251
 1928 0494 3B75     		strb	r3, [r7, #20]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 45


 521:.\Protocolo.c **** 			buffer[13]=0;
 1929              		.loc 1 521 0
 1930 0496 0023     		movs	r3, #0
 1931 0498 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1932              		.loc 1 522 0
 1933 049a 0023     		movs	r3, #0
 1934 049c 7B77     		strb	r3, [r7, #29]
 1935 049e 0FE0     		b	.L108
 1936              	.L109:
 523:.\Protocolo.c **** 				buffer[13]+=(buffer[i]&0x0F);	
 1937              		.loc 1 523 0 discriminator 3
 1938 04a0 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1939 04a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1940 04a4 07F12001 		add	r1, r7, #32
 1941 04a8 0B44     		add	r3, r3, r1
 1942 04aa 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1943 04ae 03F00F03 		and	r3, r3, #15
 1944 04b2 DBB2     		uxtb	r3, r3
 1945 04b4 1344     		add	r3, r3, r2
 1946 04b6 DBB2     		uxtb	r3, r3
 1947 04b8 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1948              		.loc 1 522 0 discriminator 3
 1949 04ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1950 04bc 0133     		adds	r3, r3, #1
 1951 04be 7B77     		strb	r3, [r7, #29]
 1952              	.L108:
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1953              		.loc 1 522 0 is_stmt 0 discriminator 1
 1954 04c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1955 04c2 0C2B     		cmp	r3, #12
 1956 04c4 ECD9     		bls	.L109
 524:.\Protocolo.c **** 			}
 525:.\Protocolo.c **** 			buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;			
 1957              		.loc 1 525 0 is_stmt 1
 1958 04c6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1959 04c8 5B42     		negs	r3, r3
 1960 04ca DBB2     		uxtb	r3, r3
 1961 04cc DBB2     		uxtb	r3, r3
 1962 04ce 03F00F03 		and	r3, r3, #15
 1963 04d2 DBB2     		uxtb	r3, r3
 1964 04d4 63F01F03 		orn	r3, r3, #31
 1965 04d8 DBB2     		uxtb	r3, r3
 1966 04da DBB2     		uxtb	r3, r3
 1967 04dc 7B75     		strb	r3, [r7, #21]
 526:.\Protocolo.c **** 			buffer[14]=0xF0;
 1968              		.loc 1 526 0
 1969 04de F023     		movs	r3, #240
 1970 04e0 BB75     		strb	r3, [r7, #22]
 527:.\Protocolo.c **** 			size=14;
 1971              		.loc 1 527 0
 1972 04e2 0E23     		movs	r3, #14
 1973 04e4 FB77     		strb	r3, [r7, #31]
 1974              	.L94:
 528:.\Protocolo.c **** 		}	
 529:.\Protocolo.c **** 	}	
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 46


 530:.\Protocolo.c **** 	if(version[1]==7){
 1975              		.loc 1 530 0
 1976 04e6 A24B     		ldr	r3, .L128
 1977 04e8 5B78     		ldrb	r3, [r3, #1]
 1978 04ea DBB2     		uxtb	r3, r3
 1979 04ec 072B     		cmp	r3, #7
 1980 04ee 40F06481 		bne	.L110
 531:.\Protocolo.c **** 		buffer[0]=0xFF;
 1981              		.loc 1 531 0
 1982 04f2 FF23     		movs	r3, #255
 1983 04f4 3B72     		strb	r3, [r7, #8]
 532:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1984              		.loc 1 532 0
 1985 04f6 BB7F     		ldrb	r3, [r7, #30]
 1986 04f8 63F01F03 		orn	r3, r3, #31
 1987 04fc DBB2     		uxtb	r3, r3
 1988 04fe 7B72     		strb	r3, [r7, #9]
 533:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1989              		.loc 1 533 0
 1990 0500 7B79     		ldrb	r3, [r7, #5]
 1991 0502 63F00F03 		orn	r3, r3, #15
 1992 0506 DBB2     		uxtb	r3, r3
 1993 0508 BB72     		strb	r3, [r7, #10]
 534:.\Protocolo.c **** 		buffer[3]=0xF4;
 1994              		.loc 1 534 0
 1995 050a F423     		movs	r3, #244
 1996 050c FB72     		strb	r3, [r7, #11]
 535:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1997              		.loc 1 535 0
 1998 050e F823     		movs	r3, #248
 1999 0510 3B73     		strb	r3, [r7, #12]
 536:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 2000              		.loc 1 536 0
 2001 0512 3B68     		ldr	r3, [r7]
 2002 0514 0133     		adds	r3, r3, #1
 2003 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2004 0518 63F01F03 		orn	r3, r3, #31
 2005 051c DBB2     		uxtb	r3, r3
 2006 051e 7B73     		strb	r3, [r7, #13]
 537:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 2007              		.loc 1 537 0
 2008 0520 3B68     		ldr	r3, [r7]
 2009 0522 0233     		adds	r3, r3, #2
 2010 0524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2011 0526 63F01F03 		orn	r3, r3, #31
 2012 052a DBB2     		uxtb	r3, r3
 2013 052c BB73     		strb	r3, [r7, #14]
 538:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 2014              		.loc 1 538 0
 2015 052e 3B68     		ldr	r3, [r7]
 2016 0530 0333     		adds	r3, r3, #3
 2017 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2018 0534 63F01F03 		orn	r3, r3, #31
 2019 0538 DBB2     		uxtb	r3, r3
 2020 053a FB73     		strb	r3, [r7, #15]
 539:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 2021              		.loc 1 539 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 47


 2022 053c 3B68     		ldr	r3, [r7]
 2023 053e 0433     		adds	r3, r3, #4
 2024 0540 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2025 0542 63F01F03 		orn	r3, r3, #31
 2026 0546 DBB2     		uxtb	r3, r3
 2027 0548 3B74     		strb	r3, [r7, #16]
 540:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 2028              		.loc 1 540 0
 2029 054a 3B68     		ldr	r3, [r7]
 2030 054c 0533     		adds	r3, r3, #5
 2031 054e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2032 0550 63F01F03 		orn	r3, r3, #31
 2033 0554 DBB2     		uxtb	r3, r3
 2034 0556 7B74     		strb	r3, [r7, #17]
 541:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);	
 2035              		.loc 1 541 0
 2036 0558 3B68     		ldr	r3, [r7]
 2037 055a 0633     		adds	r3, r3, #6
 2038 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2039 055e 63F01F03 		orn	r3, r3, #31
 2040 0562 DBB2     		uxtb	r3, r3
 2041 0564 BB74     		strb	r3, [r7, #18]
 542:.\Protocolo.c **** 		buffer[11]=(valor[7]|0xE0);
 2042              		.loc 1 542 0
 2043 0566 3B68     		ldr	r3, [r7]
 2044 0568 0733     		adds	r3, r3, #7
 2045 056a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2046 056c 63F01F03 		orn	r3, r3, #31
 2047 0570 DBB2     		uxtb	r3, r3
 2048 0572 FB74     		strb	r3, [r7, #19]
 543:.\Protocolo.c **** 		buffer[12]=0xE0;
 2049              		.loc 1 543 0
 2050 0574 E023     		movs	r3, #224
 2051 0576 3B75     		strb	r3, [r7, #20]
 544:.\Protocolo.c **** 		buffer[13]=0xFB;
 2052              		.loc 1 544 0
 2053 0578 FB23     		movs	r3, #251
 2054 057a 7B75     		strb	r3, [r7, #21]
 545:.\Protocolo.c **** 		buffer[14]=0;
 2055              		.loc 1 545 0
 2056 057c 0023     		movs	r3, #0
 2057 057e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2058              		.loc 1 546 0
 2059 0580 0023     		movs	r3, #0
 2060 0582 7B77     		strb	r3, [r7, #29]
 2061 0584 0FE0     		b	.L111
 2062              	.L112:
 547:.\Protocolo.c **** 			buffer[14]+=(buffer[i]&0x0F);	
 2063              		.loc 1 547 0 discriminator 3
 2064 0586 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2065 0588 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2066 058a 07F12001 		add	r1, r7, #32
 2067 058e 0B44     		add	r3, r3, r1
 2068 0590 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2069 0594 03F00F03 		and	r3, r3, #15
 2070 0598 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 48


 2071 059a 1344     		add	r3, r3, r2
 2072 059c DBB2     		uxtb	r3, r3
 2073 059e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2074              		.loc 1 546 0 discriminator 3
 2075 05a0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2076 05a2 0133     		adds	r3, r3, #1
 2077 05a4 7B77     		strb	r3, [r7, #29]
 2078              	.L111:
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2079              		.loc 1 546 0 is_stmt 0 discriminator 1
 2080 05a6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2081 05a8 0D2B     		cmp	r3, #13
 2082 05aa ECD9     		bls	.L112
 548:.\Protocolo.c **** 		}
 549:.\Protocolo.c **** 		buffer[14]=(((~buffer[14])+1)&0x0F)|0xE0;
 2083              		.loc 1 549 0 is_stmt 1
 2084 05ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2085 05ae 5B42     		negs	r3, r3
 2086 05b0 DBB2     		uxtb	r3, r3
 2087 05b2 DBB2     		uxtb	r3, r3
 2088 05b4 03F00F03 		and	r3, r3, #15
 2089 05b8 DBB2     		uxtb	r3, r3
 2090 05ba 63F01F03 		orn	r3, r3, #31
 2091 05be DBB2     		uxtb	r3, r3
 2092 05c0 DBB2     		uxtb	r3, r3
 2093 05c2 BB75     		strb	r3, [r7, #22]
 550:.\Protocolo.c **** 		buffer[15]=0xF0;
 2094              		.loc 1 550 0
 2095 05c4 F023     		movs	r3, #240
 2096 05c6 FB75     		strb	r3, [r7, #23]
 551:.\Protocolo.c **** 		size=15;
 2097              		.loc 1 551 0
 2098 05c8 0F23     		movs	r3, #15
 2099 05ca FB77     		strb	r3, [r7, #31]
 552:.\Protocolo.c **** 		if(preset==1){
 2100              		.loc 1 552 0
 2101 05cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2102 05ce 012B     		cmp	r3, #1
 2103 05d0 40F0F380 		bne	.L110
 553:.\Protocolo.c **** 			buffer[4]=0xF6;
 2104              		.loc 1 553 0
 2105 05d4 F623     		movs	r3, #246
 2106 05d6 3B73     		strb	r3, [r7, #12]
 554:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2107              		.loc 1 554 0
 2108 05d8 BB79     		ldrb	r3, [r7, #6]
 2109 05da 013B     		subs	r3, r3, #1
 2110 05dc DBB2     		uxtb	r3, r3
 2111 05de DBB2     		uxtb	r3, r3
 2112 05e0 63F01F03 		orn	r3, r3, #31
 2113 05e4 DBB2     		uxtb	r3, r3
 2114 05e6 DBB2     		uxtb	r3, r3
 2115 05e8 7B73     		strb	r3, [r7, #13]
 555:.\Protocolo.c **** 			buffer[6]=0xF8;
 2116              		.loc 1 555 0
 2117 05ea F823     		movs	r3, #248
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 49


 2118 05ec BB73     		strb	r3, [r7, #14]
 556:.\Protocolo.c **** 			if(decimal==4){
 2119              		.loc 1 556 0
 2120 05ee 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2121 05f0 042B     		cmp	r3, #4
 2122 05f2 2DD1     		bne	.L113
 557:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2123              		.loc 1 557 0
 2124 05f4 3B68     		ldr	r3, [r7]
 2125 05f6 0133     		adds	r3, r3, #1
 2126 05f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2127 05fa 63F01F03 		orn	r3, r3, #31
 2128 05fe DBB2     		uxtb	r3, r3
 2129 0600 FB73     		strb	r3, [r7, #15]
 558:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2130              		.loc 1 558 0
 2131 0602 3B68     		ldr	r3, [r7]
 2132 0604 0233     		adds	r3, r3, #2
 2133 0606 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2134 0608 63F01F03 		orn	r3, r3, #31
 2135 060c DBB2     		uxtb	r3, r3
 2136 060e 3B74     		strb	r3, [r7, #16]
 559:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2137              		.loc 1 559 0
 2138 0610 3B68     		ldr	r3, [r7]
 2139 0612 0333     		adds	r3, r3, #3
 2140 0614 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2141 0616 63F01F03 		orn	r3, r3, #31
 2142 061a DBB2     		uxtb	r3, r3
 2143 061c 7B74     		strb	r3, [r7, #17]
 560:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2144              		.loc 1 560 0
 2145 061e 3B68     		ldr	r3, [r7]
 2146 0620 0533     		adds	r3, r3, #5
 2147 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2148 0624 63F01F03 		orn	r3, r3, #31
 2149 0628 DBB2     		uxtb	r3, r3
 2150 062a BB74     		strb	r3, [r7, #18]
 561:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);
 2151              		.loc 1 561 0
 2152 062c 3B68     		ldr	r3, [r7]
 2153 062e 0633     		adds	r3, r3, #6
 2154 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2155 0632 63F01F03 		orn	r3, r3, #31
 2156 0636 DBB2     		uxtb	r3, r3
 2157 0638 FB74     		strb	r3, [r7, #19]
 562:.\Protocolo.c **** 				buffer[12]=(valor[7]|0xE0);	
 2158              		.loc 1 562 0
 2159 063a 3B68     		ldr	r3, [r7]
 2160 063c 0733     		adds	r3, r3, #7
 2161 063e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2162 0640 63F01F03 		orn	r3, r3, #31
 2163 0644 DBB2     		uxtb	r3, r3
 2164 0646 3B75     		strb	r3, [r7, #20]
 563:.\Protocolo.c **** 				buffer[13]=0xE0;	
 2165              		.loc 1 563 0
 2166 0648 E023     		movs	r3, #224
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 50


 2167 064a 7B75     		strb	r3, [r7, #21]
 564:.\Protocolo.c **** 				buffer[14]=0xE0;
 2168              		.loc 1 564 0
 2169 064c E023     		movs	r3, #224
 2170 064e BB75     		strb	r3, [r7, #22]
 2171              	.L113:
 565:.\Protocolo.c **** 			}
 566:.\Protocolo.c **** 			if(decimal==3){
 2172              		.loc 1 566 0
 2173 0650 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2174 0652 032B     		cmp	r3, #3
 2175 0654 2DD1     		bne	.L114
 567:.\Protocolo.c **** 				buffer[7]=0xE0;
 2176              		.loc 1 567 0
 2177 0656 E023     		movs	r3, #224
 2178 0658 FB73     		strb	r3, [r7, #15]
 568:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2179              		.loc 1 568 0
 2180 065a 3B68     		ldr	r3, [r7]
 2181 065c 0133     		adds	r3, r3, #1
 2182 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2183 0660 63F01F03 		orn	r3, r3, #31
 2184 0664 DBB2     		uxtb	r3, r3
 2185 0666 3B74     		strb	r3, [r7, #16]
 569:.\Protocolo.c **** 				buffer[9]=(valor[2]|0xE0);
 2186              		.loc 1 569 0
 2187 0668 3B68     		ldr	r3, [r7]
 2188 066a 0233     		adds	r3, r3, #2
 2189 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2190 066e 63F01F03 		orn	r3, r3, #31
 2191 0672 DBB2     		uxtb	r3, r3
 2192 0674 7B74     		strb	r3, [r7, #17]
 570:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2193              		.loc 1 570 0
 2194 0676 3B68     		ldr	r3, [r7]
 2195 0678 0433     		adds	r3, r3, #4
 2196 067a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2197 067c 63F01F03 		orn	r3, r3, #31
 2198 0680 DBB2     		uxtb	r3, r3
 2199 0682 BB74     		strb	r3, [r7, #18]
 571:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);
 2200              		.loc 1 571 0
 2201 0684 3B68     		ldr	r3, [r7]
 2202 0686 0533     		adds	r3, r3, #5
 2203 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2204 068a 63F01F03 		orn	r3, r3, #31
 2205 068e DBB2     		uxtb	r3, r3
 2206 0690 FB74     		strb	r3, [r7, #19]
 572:.\Protocolo.c **** 				buffer[12]=(valor[6]|0xE0);
 2207              		.loc 1 572 0
 2208 0692 3B68     		ldr	r3, [r7]
 2209 0694 0633     		adds	r3, r3, #6
 2210 0696 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2211 0698 63F01F03 		orn	r3, r3, #31
 2212 069c DBB2     		uxtb	r3, r3
 2213 069e 3B75     		strb	r3, [r7, #20]
 573:.\Protocolo.c **** 				buffer[13]=(valor[7]|0xE0);	
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 51


 2214              		.loc 1 573 0
 2215 06a0 3B68     		ldr	r3, [r7]
 2216 06a2 0733     		adds	r3, r3, #7
 2217 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2218 06a6 63F01F03 		orn	r3, r3, #31
 2219 06aa DBB2     		uxtb	r3, r3
 2220 06ac 7B75     		strb	r3, [r7, #21]
 574:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2221              		.loc 1 574 0
 2222 06ae E023     		movs	r3, #224
 2223 06b0 BB75     		strb	r3, [r7, #22]
 2224              	.L114:
 575:.\Protocolo.c **** 			}
 576:.\Protocolo.c **** 			if(decimal==2){
 2225              		.loc 1 576 0
 2226 06b2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2227 06b4 022B     		cmp	r3, #2
 2228 06b6 2DD1     		bne	.L115
 577:.\Protocolo.c **** 				buffer[7]=0xE0;
 2229              		.loc 1 577 0
 2230 06b8 E023     		movs	r3, #224
 2231 06ba FB73     		strb	r3, [r7, #15]
 578:.\Protocolo.c **** 				buffer[8]=0xE0;
 2232              		.loc 1 578 0
 2233 06bc E023     		movs	r3, #224
 2234 06be 3B74     		strb	r3, [r7, #16]
 579:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2235              		.loc 1 579 0
 2236 06c0 3B68     		ldr	r3, [r7]
 2237 06c2 0133     		adds	r3, r3, #1
 2238 06c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2239 06c6 63F01F03 		orn	r3, r3, #31
 2240 06ca DBB2     		uxtb	r3, r3
 2241 06cc 7B74     		strb	r3, [r7, #17]
 580:.\Protocolo.c **** 				buffer[10]=(valor[3]|0xE0);
 2242              		.loc 1 580 0
 2243 06ce 3B68     		ldr	r3, [r7]
 2244 06d0 0333     		adds	r3, r3, #3
 2245 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2246 06d4 63F01F03 		orn	r3, r3, #31
 2247 06d8 DBB2     		uxtb	r3, r3
 2248 06da BB74     		strb	r3, [r7, #18]
 581:.\Protocolo.c **** 				buffer[11]=(valor[4]|0xE0);
 2249              		.loc 1 581 0
 2250 06dc 3B68     		ldr	r3, [r7]
 2251 06de 0433     		adds	r3, r3, #4
 2252 06e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2253 06e2 63F01F03 		orn	r3, r3, #31
 2254 06e6 DBB2     		uxtb	r3, r3
 2255 06e8 FB74     		strb	r3, [r7, #19]
 582:.\Protocolo.c **** 				buffer[12]=(valor[5]|0xE0);
 2256              		.loc 1 582 0
 2257 06ea 3B68     		ldr	r3, [r7]
 2258 06ec 0533     		adds	r3, r3, #5
 2259 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2260 06f0 63F01F03 		orn	r3, r3, #31
 2261 06f4 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 52


 2262 06f6 3B75     		strb	r3, [r7, #20]
 583:.\Protocolo.c **** 				buffer[13]=(valor[6]|0xE0);	
 2263              		.loc 1 583 0
 2264 06f8 3B68     		ldr	r3, [r7]
 2265 06fa 0633     		adds	r3, r3, #6
 2266 06fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2267 06fe 63F01F03 		orn	r3, r3, #31
 2268 0702 DBB2     		uxtb	r3, r3
 2269 0704 7B75     		strb	r3, [r7, #21]
 584:.\Protocolo.c **** 				buffer[14]=(valor[7]|0xE0);	
 2270              		.loc 1 584 0
 2271 0706 3B68     		ldr	r3, [r7]
 2272 0708 0733     		adds	r3, r3, #7
 2273 070a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2274 070c 63F01F03 		orn	r3, r3, #31
 2275 0710 DBB2     		uxtb	r3, r3
 2276 0712 BB75     		strb	r3, [r7, #22]
 2277              	.L115:
 585:.\Protocolo.c **** 			}
 586:.\Protocolo.c **** 			if(decimal==0){
 2278              		.loc 1 586 0
 2279 0714 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2280 0716 002B     		cmp	r3, #0
 2281 0718 23D1     		bne	.L116
 587:.\Protocolo.c **** 				buffer[7]=0xE0;
 2282              		.loc 1 587 0
 2283 071a E023     		movs	r3, #224
 2284 071c FB73     		strb	r3, [r7, #15]
 588:.\Protocolo.c **** 				buffer[8]=0xE0;
 2285              		.loc 1 588 0
 2286 071e E023     		movs	r3, #224
 2287 0720 3B74     		strb	r3, [r7, #16]
 589:.\Protocolo.c **** 				buffer[9]=0xE0;
 2288              		.loc 1 589 0
 2289 0722 E023     		movs	r3, #224
 2290 0724 7B74     		strb	r3, [r7, #17]
 590:.\Protocolo.c **** 				buffer[10]=(valor[1]|0xE0);
 2291              		.loc 1 590 0
 2292 0726 3B68     		ldr	r3, [r7]
 2293 0728 0133     		adds	r3, r3, #1
 2294 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2295 072c 63F01F03 		orn	r3, r3, #31
 2296 0730 DBB2     		uxtb	r3, r3
 2297 0732 BB74     		strb	r3, [r7, #18]
 591:.\Protocolo.c **** 				buffer[11]=(valor[2]|0xE0);
 2298              		.loc 1 591 0
 2299 0734 3B68     		ldr	r3, [r7]
 2300 0736 0233     		adds	r3, r3, #2
 2301 0738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2302 073a 63F01F03 		orn	r3, r3, #31
 2303 073e DBB2     		uxtb	r3, r3
 2304 0740 FB74     		strb	r3, [r7, #19]
 592:.\Protocolo.c **** 				buffer[12]=(valor[3]|0xE0);
 2305              		.loc 1 592 0
 2306 0742 3B68     		ldr	r3, [r7]
 2307 0744 0333     		adds	r3, r3, #3
 2308 0746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 53


 2309 0748 63F01F03 		orn	r3, r3, #31
 2310 074c DBB2     		uxtb	r3, r3
 2311 074e 3B75     		strb	r3, [r7, #20]
 593:.\Protocolo.c **** 				buffer[13]=(valor[4]|0xE0);	
 2312              		.loc 1 593 0
 2313 0750 3B68     		ldr	r3, [r7]
 2314 0752 0433     		adds	r3, r3, #4
 2315 0754 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2316 0756 63F01F03 		orn	r3, r3, #31
 2317 075a DBB2     		uxtb	r3, r3
 2318 075c 7B75     		strb	r3, [r7, #21]
 594:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2319              		.loc 1 594 0
 2320 075e E023     		movs	r3, #224
 2321 0760 BB75     		strb	r3, [r7, #22]
 2322              	.L116:
 595:.\Protocolo.c **** 			}			
 596:.\Protocolo.c **** 			buffer[15]=0xFB;
 2323              		.loc 1 596 0
 2324 0762 FB23     		movs	r3, #251
 2325 0764 FB75     		strb	r3, [r7, #23]
 597:.\Protocolo.c **** 			buffer[16]=0;
 2326              		.loc 1 597 0
 2327 0766 0023     		movs	r3, #0
 2328 0768 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2329              		.loc 1 598 0
 2330 076a 0023     		movs	r3, #0
 2331 076c 7B77     		strb	r3, [r7, #29]
 2332 076e 11E0     		b	.L117
 2333              	.L129:
 2334              		.align	2
 2335              	.L128:
 2336 0770 00000000 		.word	version
 2337              	.L118:
 599:.\Protocolo.c **** 				buffer[16]+=(buffer[i]&0x0F);	
 2338              		.loc 1 599 0 discriminator 3
 2339 0774 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 2340 0776 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2341 0778 07F12001 		add	r1, r7, #32
 2342 077c 0B44     		add	r3, r3, r1
 2343 077e 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2344 0782 03F00F03 		and	r3, r3, #15
 2345 0786 DBB2     		uxtb	r3, r3
 2346 0788 1344     		add	r3, r3, r2
 2347 078a DBB2     		uxtb	r3, r3
 2348 078c 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2349              		.loc 1 598 0 discriminator 3
 2350 078e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2351 0790 0133     		adds	r3, r3, #1
 2352 0792 7B77     		strb	r3, [r7, #29]
 2353              	.L117:
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2354              		.loc 1 598 0 is_stmt 0 discriminator 1
 2355 0794 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2356 0796 0F2B     		cmp	r3, #15
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 54


 2357 0798 ECD9     		bls	.L118
 600:.\Protocolo.c **** 			}
 601:.\Protocolo.c **** 			buffer[16]=(((~buffer[16])+1)&0x0F)|0xE0;			
 2358              		.loc 1 601 0 is_stmt 1
 2359 079a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 2360 079c 5B42     		negs	r3, r3
 2361 079e DBB2     		uxtb	r3, r3
 2362 07a0 DBB2     		uxtb	r3, r3
 2363 07a2 03F00F03 		and	r3, r3, #15
 2364 07a6 DBB2     		uxtb	r3, r3
 2365 07a8 63F01F03 		orn	r3, r3, #31
 2366 07ac DBB2     		uxtb	r3, r3
 2367 07ae DBB2     		uxtb	r3, r3
 2368 07b0 3B76     		strb	r3, [r7, #24]
 602:.\Protocolo.c **** 			buffer[17]=0xF0;
 2369              		.loc 1 602 0
 2370 07b2 F023     		movs	r3, #240
 2371 07b4 7B76     		strb	r3, [r7, #25]
 603:.\Protocolo.c **** 			size=17;
 2372              		.loc 1 603 0
 2373 07b6 1123     		movs	r3, #17
 2374 07b8 FB77     		strb	r3, [r7, #31]
 2375              	.L110:
 604:.\Protocolo.c **** 		}		
 605:.\Protocolo.c **** 	}
 606:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2376              		.loc 1 606 0
 2377 07ba FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 607:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2378              		.loc 1 607 0
 2379 07be FB79     		ldrb	r3, [r7, #7]
 2380 07c0 43F02003 		orr	r3, r3, #32
 2381 07c4 DBB2     		uxtb	r3, r3
 2382 07c6 1846     		mov	r0, r3
 2383 07c8 FFF7FEFF 		bl	Surtidor_PutChar
 608:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2384              		.loc 1 608 0
 2385 07cc 2A48     		ldr	r0, .L130
 2386 07ce FFF7FEFF 		bl	isr_1_StartEx
 609:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2387              		.loc 1 609 0
 2388 07d2 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 610:.\Protocolo.c ****     rx_timeout=0;
 2389              		.loc 1 610 0
 2390 07d6 294B     		ldr	r3, .L130+4
 2391 07d8 0022     		movs	r2, #0
 2392 07da 1A70     		strb	r2, [r3]
 611:.\Protocolo.c ****     CyDelay(10);
 2393              		.loc 1 611 0
 2394 07dc 0A20     		movs	r0, #10
 2395 07de FFF7FEFF 		bl	CyDelay
 612:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2396              		.loc 1 612 0
 2397 07e2 0BE0     		b	.L119
 2398              	.L120:
 613:.\Protocolo.c **** 		if(rx_timeout==1){
 2399              		.loc 1 613 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 55


 2400 07e4 254B     		ldr	r3, .L130+4
 2401 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2402 07e8 012B     		cmp	r3, #1
 2403 07ea 07D1     		bne	.L119
 614:.\Protocolo.c **** 			isr_1_Stop();
 2404              		.loc 1 614 0
 2405 07ec FFF7FEFF 		bl	isr_1_Stop
 615:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2406              		.loc 1 615 0
 2407 07f0 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 616:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2408              		.loc 1 616 0
 2409 07f4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 617:.\Protocolo.c **** 			return 0;
 2410              		.loc 1 617 0
 2411 07f8 0023     		movs	r3, #0
 2412 07fa 39E0     		b	.L125
 2413              	.L119:
 612:.\Protocolo.c **** 		if(rx_timeout==1){
 2414              		.loc 1 612 0
 2415 07fc FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2416 0800 0346     		mov	r3, r0
 2417 0802 002B     		cmp	r3, #0
 2418 0804 EED0     		beq	.L120
 618:.\Protocolo.c **** 		}
 619:.\Protocolo.c **** 	}
 620:.\Protocolo.c **** 	isr_1_Stop();
 2419              		.loc 1 620 0
 2420 0806 FFF7FEFF 		bl	isr_1_Stop
 621:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 2421              		.loc 1 621 0
 2422 080a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 622:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2423              		.loc 1 622 0
 2424 080e FFF7FEFF 		bl	Surtidor_ReadRxData
 2425 0812 0346     		mov	r3, r0
 2426 0814 1A46     		mov	r2, r3
 2427 0816 FB79     		ldrb	r3, [r7, #7]
 2428 0818 63F02F03 		orn	r3, r3, #47
 2429 081c DBB2     		uxtb	r3, r3
 2430 081e 9A42     		cmp	r2, r3
 2431 0820 25D1     		bne	.L121
 623:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2432              		.loc 1 623 0
 2433 0822 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 624:.\Protocolo.c **** 		CyDelay(10);
 2434              		.loc 1 624 0
 2435 0826 0A20     		movs	r0, #10
 2436 0828 FFF7FEFF 		bl	CyDelay
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2437              		.loc 1 625 0
 2438 082c 0023     		movs	r3, #0
 2439 082e 7B77     		strb	r3, [r7, #29]
 2440 0830 0BE0     		b	.L122
 2441              	.L123:
 626:.\Protocolo.c ****            	Surtidor_PutChar(buffer[i]);
 2442              		.loc 1 626 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 56


 2443 0832 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2444 0834 07F12002 		add	r2, r7, #32
 2445 0838 1344     		add	r3, r3, r2
 2446 083a 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2447 083e 1846     		mov	r0, r3
 2448 0840 FFF7FEFF 		bl	Surtidor_PutChar
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2449              		.loc 1 625 0 discriminator 3
 2450 0844 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2451 0846 0133     		adds	r3, r3, #1
 2452 0848 7B77     		strb	r3, [r7, #29]
 2453              	.L122:
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2454              		.loc 1 625 0 is_stmt 0 discriminator 1
 2455 084a 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2456 084c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2457 084e 9A42     		cmp	r2, r3
 2458 0850 EFD9     		bls	.L123
 627:.\Protocolo.c ****         }
 628:.\Protocolo.c **** 		CyDelay(50);		
 2459              		.loc 1 628 0 is_stmt 1
 2460 0852 3220     		movs	r0, #50
 2461 0854 FFF7FEFF 		bl	CyDelay
 629:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2462              		.loc 1 629 0
 2463 0858 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2464 085a 1846     		mov	r0, r3
 2465 085c FFF7FEFF 		bl	get_estado
 2466 0860 0346     		mov	r3, r0
 2467 0862 002B     		cmp	r3, #0
 2468 0864 01D1     		bne	.L124
 630:.\Protocolo.c **** 			return 0;
 2469              		.loc 1 630 0
 2470 0866 0023     		movs	r3, #0
 2471 0868 02E0     		b	.L125
 2472              	.L124:
 631:.\Protocolo.c **** 		}
 632:.\Protocolo.c **** 		else{
 633:.\Protocolo.c **** 			return 1;
 2473              		.loc 1 633 0
 2474 086a 0123     		movs	r3, #1
 2475 086c 00E0     		b	.L125
 2476              	.L121:
 634:.\Protocolo.c **** 		}
 635:.\Protocolo.c **** 	}
 636:.\Protocolo.c **** 	else{
 637:.\Protocolo.c **** 		return 0;
 2477              		.loc 1 637 0
 2478 086e 0023     		movs	r3, #0
 2479              	.L125:
 638:.\Protocolo.c **** 	}
 639:.\Protocolo.c **** }
 2480              		.loc 1 639 0 discriminator 1
 2481 0870 1846     		mov	r0, r3
 2482 0872 2037     		adds	r7, r7, #32
 2483              		.cfi_def_cfa_offset 8
 2484 0874 BD46     		mov	sp, r7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 57


 2485              		.cfi_def_cfa_register 13
 2486              		@ sp needed
 2487 0876 80BD     		pop	{r7, pc}
 2488              	.L131:
 2489              		.align	2
 2490              	.L130:
 2491 0878 00000000 		.word	Rx_Surtidor
 2492 087c 00000000 		.word	rx_timeout
 2493              		.cfi_endproc
 2494              	.LFE70:
 2495              		.size	programar, .-programar
 2496              		.section	.text.cambiar_precio,"ax",%progbits
 2497              		.align	2
 2498              		.global	cambiar_precio
 2499              		.thumb
 2500              		.thumb_func
 2501              		.type	cambiar_precio, %function
 2502              	cambiar_precio:
 2503              	.LFB71:
 640:.\Protocolo.c **** 
 641:.\Protocolo.c **** /*
 642:.\Protocolo.c **** ***************************************************************************************************
 643:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 644:.\Protocolo.c **** *
 645:.\Protocolo.c **** * Description : 
 646:.\Protocolo.c **** *               
 647:.\Protocolo.c **** *
 648:.\Protocolo.c **** * Argument(s) : none
 649:.\Protocolo.c **** *
 650:.\Protocolo.c **** * Return(s)   : none
 651:.\Protocolo.c **** *
 652:.\Protocolo.c **** * Caller(s)   : 
 653:.\Protocolo.c **** *
 654:.\Protocolo.c **** * Note(s)     : none.
 655:.\Protocolo.c **** ***************************************************************************************************
 656:.\Protocolo.c **** */
 657:.\Protocolo.c **** uint8 cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man){
 2504              		.loc 1 657 0
 2505              		.cfi_startproc
 2506              		@ args = 0, pretend = 0, frame = 32
 2507              		@ frame_needed = 1, uses_anonymous_args = 0
 2508 0000 80B5     		push	{r7, lr}
 2509              		.cfi_def_cfa_offset 8
 2510              		.cfi_offset 7, -8
 2511              		.cfi_offset 14, -4
 2512 0002 88B0     		sub	sp, sp, #32
 2513              		.cfi_def_cfa_offset 40
 2514 0004 00AF     		add	r7, sp, #0
 2515              		.cfi_def_cfa_register 7
 2516 0006 0346     		mov	r3, r0
 2517 0008 3960     		str	r1, [r7]
 2518 000a FB71     		strb	r3, [r7, #7]
 2519 000c 1346     		mov	r3, r2
 2520 000e BB71     		strb	r3, [r7, #6]
 658:.\Protocolo.c **** 	uint8 buffer[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,x;
 2521              		.loc 1 658 0
 2522 0010 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 58


 2523 0012 3B73     		strb	r3, [r7, #12]
 2524 0014 0023     		movs	r3, #0
 2525 0016 7B73     		strb	r3, [r7, #13]
 2526 0018 0023     		movs	r3, #0
 2527 001a BB73     		strb	r3, [r7, #14]
 2528 001c 0023     		movs	r3, #0
 2529 001e FB73     		strb	r3, [r7, #15]
 2530 0020 0023     		movs	r3, #0
 2531 0022 3B74     		strb	r3, [r7, #16]
 2532 0024 0023     		movs	r3, #0
 2533 0026 7B74     		strb	r3, [r7, #17]
 2534 0028 0023     		movs	r3, #0
 2535 002a BB74     		strb	r3, [r7, #18]
 2536 002c 0023     		movs	r3, #0
 2537 002e FB74     		strb	r3, [r7, #19]
 2538 0030 0023     		movs	r3, #0
 2539 0032 3B75     		strb	r3, [r7, #20]
 2540 0034 0023     		movs	r3, #0
 2541 0036 7B75     		strb	r3, [r7, #21]
 2542 0038 0023     		movs	r3, #0
 2543 003a BB75     		strb	r3, [r7, #22]
 2544 003c 0023     		movs	r3, #0
 2545 003e FB75     		strb	r3, [r7, #23]
 2546 0040 0023     		movs	r3, #0
 2547 0042 3B76     		strb	r3, [r7, #24]
 2548 0044 0023     		movs	r3, #0
 2549 0046 7B76     		strb	r3, [r7, #25]
 2550 0048 0023     		movs	r3, #0
 2551 004a BB76     		strb	r3, [r7, #26]
 659:.\Protocolo.c **** 	if(version[1]!=7){
 2552              		.loc 1 659 0
 2553 004c 884B     		ldr	r3, .L151
 2554 004e 5B78     		ldrb	r3, [r3, #1]
 2555 0050 DBB2     		uxtb	r3, r3
 2556 0052 072B     		cmp	r3, #7
 2557 0054 56D0     		beq	.L133
 660:.\Protocolo.c **** 		buffer[0]=0xFF;
 2558              		.loc 1 660 0
 2559 0056 FF23     		movs	r3, #255
 2560 0058 3B73     		strb	r3, [r7, #12]
 661:.\Protocolo.c **** 		buffer[1]=0xE5;
 2561              		.loc 1 661 0
 2562 005a E523     		movs	r3, #229
 2563 005c 7B73     		strb	r3, [r7, #13]
 662:.\Protocolo.c **** 		buffer[2]=0xF4;
 2564              		.loc 1 662 0
 2565 005e F423     		movs	r3, #244
 2566 0060 BB73     		strb	r3, [r7, #14]
 663:.\Protocolo.c **** 		buffer[3]=0xF6;
 2567              		.loc 1 663 0
 2568 0062 F623     		movs	r3, #246
 2569 0064 FB73     		strb	r3, [r7, #15]
 664:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2570              		.loc 1 664 0
 2571 0066 BB79     		ldrb	r3, [r7, #6]
 2572 0068 013B     		subs	r3, r3, #1
 2573 006a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 59


 2574 006c DBB2     		uxtb	r3, r3
 2575 006e 63F01F03 		orn	r3, r3, #31
 2576 0072 DBB2     		uxtb	r3, r3
 2577 0074 DBB2     		uxtb	r3, r3
 2578 0076 3B74     		strb	r3, [r7, #16]
 665:.\Protocolo.c **** 		buffer[5]=0xF7;	
 2579              		.loc 1 665 0
 2580 0078 F723     		movs	r3, #247
 2581 007a 7B74     		strb	r3, [r7, #17]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2582              		.loc 1 666 0
 2583 007c 0623     		movs	r3, #6
 2584 007e BB77     		strb	r3, [r7, #30]
 2585 0080 15E0     		b	.L134
 2586              	.L135:
 667:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 2587              		.loc 1 667 0 discriminator 3
 2588 0082 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2589 0084 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2590 0086 063A     		subs	r2, r2, #6
 2591 0088 3968     		ldr	r1, [r7]
 2592 008a 0A44     		add	r2, r2, r1
 2593 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2594 008e D2B2     		uxtb	r2, r2
 2595 0090 02F00F02 		and	r2, r2, #15
 2596 0094 D2B2     		uxtb	r2, r2
 2597 0096 62F01F02 		orn	r2, r2, #31
 2598 009a D2B2     		uxtb	r2, r2
 2599 009c D2B2     		uxtb	r2, r2
 2600 009e 07F12001 		add	r1, r7, #32
 2601 00a2 0B44     		add	r3, r3, r1
 2602 00a4 03F8142C 		strb	r2, [r3, #-20]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2603              		.loc 1 666 0 discriminator 3
 2604 00a8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2605 00aa 0133     		adds	r3, r3, #1
 2606 00ac BB77     		strb	r3, [r7, #30]
 2607              	.L134:
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2608              		.loc 1 666 0 is_stmt 0 discriminator 1
 2609 00ae BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2610 00b0 092B     		cmp	r3, #9
 2611 00b2 E6D9     		bls	.L135
 668:.\Protocolo.c **** 		}
 669:.\Protocolo.c **** 		buffer[10]=0xFB;
 2612              		.loc 1 669 0 is_stmt 1
 2613 00b4 FB23     		movs	r3, #251
 2614 00b6 BB75     		strb	r3, [r7, #22]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2615              		.loc 1 670 0
 2616 00b8 0023     		movs	r3, #0
 2617 00ba BB77     		strb	r3, [r7, #30]
 2618 00bc 0FE0     		b	.L136
 2619              	.L137:
 671:.\Protocolo.c **** 			buffer[11]+=(buffer[x]&0x0F);	
 2620              		.loc 1 671 0 discriminator 3
 2621 00be FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 60


 2622 00c0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2623 00c2 07F12001 		add	r1, r7, #32
 2624 00c6 0B44     		add	r3, r3, r1
 2625 00c8 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2626 00cc 03F00F03 		and	r3, r3, #15
 2627 00d0 DBB2     		uxtb	r3, r3
 2628 00d2 1344     		add	r3, r3, r2
 2629 00d4 DBB2     		uxtb	r3, r3
 2630 00d6 FB75     		strb	r3, [r7, #23]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2631              		.loc 1 670 0 discriminator 3
 2632 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2633 00da 0133     		adds	r3, r3, #1
 2634 00dc BB77     		strb	r3, [r7, #30]
 2635              	.L136:
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2636              		.loc 1 670 0 is_stmt 0 discriminator 1
 2637 00de BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2638 00e0 0A2B     		cmp	r3, #10
 2639 00e2 ECD9     		bls	.L137
 672:.\Protocolo.c **** 		}
 673:.\Protocolo.c **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 2640              		.loc 1 673 0 is_stmt 1
 2641 00e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2642 00e6 5B42     		negs	r3, r3
 2643 00e8 DBB2     		uxtb	r3, r3
 2644 00ea DBB2     		uxtb	r3, r3
 2645 00ec 03F00F03 		and	r3, r3, #15
 2646 00f0 DBB2     		uxtb	r3, r3
 2647 00f2 63F01F03 		orn	r3, r3, #31
 2648 00f6 DBB2     		uxtb	r3, r3
 2649 00f8 DBB2     		uxtb	r3, r3
 2650 00fa FB75     		strb	r3, [r7, #23]
 674:.\Protocolo.c **** 		buffer[12]=0xF0;
 2651              		.loc 1 674 0
 2652 00fc F023     		movs	r3, #240
 2653 00fe 3B76     		strb	r3, [r7, #24]
 675:.\Protocolo.c **** 		size=12;
 2654              		.loc 1 675 0
 2655 0100 0C23     		movs	r3, #12
 2656 0102 FB77     		strb	r3, [r7, #31]
 2657              	.L133:
 676:.\Protocolo.c **** 	}
 677:.\Protocolo.c **** 	if(version[1]==7){
 2658              		.loc 1 677 0
 2659 0104 5A4B     		ldr	r3, .L151
 2660 0106 5B78     		ldrb	r3, [r3, #1]
 2661 0108 DBB2     		uxtb	r3, r3
 2662 010a 072B     		cmp	r3, #7
 2663 010c 53D1     		bne	.L138
 678:.\Protocolo.c **** 		buffer[0]=0xFF;
 2664              		.loc 1 678 0
 2665 010e FF23     		movs	r3, #255
 2666 0110 3B73     		strb	r3, [r7, #12]
 679:.\Protocolo.c **** 		buffer[1]=0xE3;
 2667              		.loc 1 679 0
 2668 0112 E323     		movs	r3, #227
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 61


 2669 0114 7B73     		strb	r3, [r7, #13]
 680:.\Protocolo.c **** 		buffer[2]=0xF4;
 2670              		.loc 1 680 0
 2671 0116 F423     		movs	r3, #244
 2672 0118 BB73     		strb	r3, [r7, #14]
 681:.\Protocolo.c **** 		buffer[3]=0xF6;
 2673              		.loc 1 681 0
 2674 011a F623     		movs	r3, #246
 2675 011c FB73     		strb	r3, [r7, #15]
 682:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2676              		.loc 1 682 0
 2677 011e BB79     		ldrb	r3, [r7, #6]
 2678 0120 013B     		subs	r3, r3, #1
 2679 0122 DBB2     		uxtb	r3, r3
 2680 0124 DBB2     		uxtb	r3, r3
 2681 0126 63F01F03 		orn	r3, r3, #31
 2682 012a DBB2     		uxtb	r3, r3
 2683 012c DBB2     		uxtb	r3, r3
 2684 012e 3B74     		strb	r3, [r7, #16]
 683:.\Protocolo.c **** 		buffer[5]=0xF7;		
 2685              		.loc 1 683 0
 2686 0130 F723     		movs	r3, #247
 2687 0132 7B74     		strb	r3, [r7, #17]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2688              		.loc 1 684 0
 2689 0134 0623     		movs	r3, #6
 2690 0136 BB77     		strb	r3, [r7, #30]
 2691 0138 10E0     		b	.L139
 2692              	.L140:
 685:.\Protocolo.c **** 			buffer[x]=(0xE0|precio[x-6]);
 2693              		.loc 1 685 0 discriminator 3
 2694 013a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2695 013c BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2696 013e 063A     		subs	r2, r2, #6
 2697 0140 3968     		ldr	r1, [r7]
 2698 0142 0A44     		add	r2, r2, r1
 2699 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2700 0146 62F01F02 		orn	r2, r2, #31
 2701 014a D2B2     		uxtb	r2, r2
 2702 014c 07F12001 		add	r1, r7, #32
 2703 0150 0B44     		add	r3, r3, r1
 2704 0152 03F8142C 		strb	r2, [r3, #-20]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2705              		.loc 1 684 0 discriminator 3
 2706 0156 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2707 0158 0133     		adds	r3, r3, #1
 2708 015a BB77     		strb	r3, [r7, #30]
 2709              	.L139:
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2710              		.loc 1 684 0 is_stmt 0 discriminator 1
 2711 015c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2712 015e 0A2B     		cmp	r3, #10
 2713 0160 EBD9     		bls	.L140
 686:.\Protocolo.c **** 		}
 687:.\Protocolo.c **** 		buffer[11]=0xE0;
 2714              		.loc 1 687 0 is_stmt 1
 2715 0162 E023     		movs	r3, #224
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 62


 2716 0164 FB75     		strb	r3, [r7, #23]
 688:.\Protocolo.c **** 		buffer[12]=0xFB;
 2717              		.loc 1 688 0
 2718 0166 FB23     		movs	r3, #251
 2719 0168 3B76     		strb	r3, [r7, #24]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2720              		.loc 1 689 0
 2721 016a 0023     		movs	r3, #0
 2722 016c BB77     		strb	r3, [r7, #30]
 2723 016e 0FE0     		b	.L141
 2724              	.L142:
 690:.\Protocolo.c **** 			buffer[13]+=(buffer[x]&0x0F);	
 2725              		.loc 1 690 0 discriminator 3
 2726 0170 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 2727 0172 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2728 0174 07F12001 		add	r1, r7, #32
 2729 0178 0B44     		add	r3, r3, r1
 2730 017a 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2731 017e 03F00F03 		and	r3, r3, #15
 2732 0182 DBB2     		uxtb	r3, r3
 2733 0184 1344     		add	r3, r3, r2
 2734 0186 DBB2     		uxtb	r3, r3
 2735 0188 7B76     		strb	r3, [r7, #25]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2736              		.loc 1 689 0 discriminator 3
 2737 018a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2738 018c 0133     		adds	r3, r3, #1
 2739 018e BB77     		strb	r3, [r7, #30]
 2740              	.L141:
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2741              		.loc 1 689 0 is_stmt 0 discriminator 1
 2742 0190 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2743 0192 0C2B     		cmp	r3, #12
 2744 0194 ECD9     		bls	.L142
 691:.\Protocolo.c **** 		}
 692:.\Protocolo.c **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 2745              		.loc 1 692 0 is_stmt 1
 2746 0196 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2747 0198 5B42     		negs	r3, r3
 2748 019a DBB2     		uxtb	r3, r3
 2749 019c DBB2     		uxtb	r3, r3
 2750 019e 03F00F03 		and	r3, r3, #15
 2751 01a2 DBB2     		uxtb	r3, r3
 2752 01a4 63F01F03 		orn	r3, r3, #31
 2753 01a8 DBB2     		uxtb	r3, r3
 2754 01aa DBB2     		uxtb	r3, r3
 2755 01ac 7B76     		strb	r3, [r7, #25]
 693:.\Protocolo.c **** 		buffer[14]=0xF0;
 2756              		.loc 1 693 0
 2757 01ae F023     		movs	r3, #240
 2758 01b0 BB76     		strb	r3, [r7, #26]
 694:.\Protocolo.c **** 		size=14;
 2759              		.loc 1 694 0
 2760 01b2 0E23     		movs	r3, #14
 2761 01b4 FB77     		strb	r3, [r7, #31]
 2762              	.L138:
 695:.\Protocolo.c **** 	}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 63


 696:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2763              		.loc 1 696 0
 2764 01b6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 697:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2765              		.loc 1 697 0
 2766 01ba FB79     		ldrb	r3, [r7, #7]
 2767 01bc 43F02003 		orr	r3, r3, #32
 2768 01c0 DBB2     		uxtb	r3, r3
 2769 01c2 1846     		mov	r0, r3
 2770 01c4 FFF7FEFF 		bl	Surtidor_PutChar
 698:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2771              		.loc 1 698 0
 2772 01c8 2A48     		ldr	r0, .L151+4
 2773 01ca FFF7FEFF 		bl	isr_1_StartEx
 699:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2774              		.loc 1 699 0
 2775 01ce FFF7FEFF 		bl	Timer_RxSurtidor_Start
 700:.\Protocolo.c ****     rx_timeout=0;
 2776              		.loc 1 700 0
 2777 01d2 294B     		ldr	r3, .L151+8
 2778 01d4 0022     		movs	r2, #0
 2779 01d6 1A70     		strb	r2, [r3]
 701:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2780              		.loc 1 701 0
 2781 01d8 0BE0     		b	.L143
 2782              	.L145:
 702:.\Protocolo.c **** 		if(rx_timeout==1){
 2783              		.loc 1 702 0
 2784 01da 274B     		ldr	r3, .L151+8
 2785 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2786 01de 012B     		cmp	r3, #1
 2787 01e0 07D1     		bne	.L143
 703:.\Protocolo.c **** 			isr_1_Stop();
 2788              		.loc 1 703 0
 2789 01e2 FFF7FEFF 		bl	isr_1_Stop
 704:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2790              		.loc 1 704 0
 2791 01e6 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 705:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2792              		.loc 1 705 0
 2793 01ea FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 706:.\Protocolo.c **** 			return 0;
 2794              		.loc 1 706 0
 2795 01ee 0023     		movs	r3, #0
 2796 01f0 39E0     		b	.L150
 2797              	.L143:
 701:.\Protocolo.c **** 		if(rx_timeout==1){
 2798              		.loc 1 701 0
 2799 01f2 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2800 01f6 0346     		mov	r3, r0
 2801 01f8 002B     		cmp	r3, #0
 2802 01fa EED0     		beq	.L145
 707:.\Protocolo.c **** 		}
 708:.\Protocolo.c **** 	}
 709:.\Protocolo.c **** 	isr_1_Stop();
 2803              		.loc 1 709 0
 2804 01fc FFF7FEFF 		bl	isr_1_Stop
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 64


 710:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();
 2805              		.loc 1 710 0
 2806 0200 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 711:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2807              		.loc 1 711 0
 2808 0204 FFF7FEFF 		bl	Surtidor_ReadRxData
 2809 0208 0346     		mov	r3, r0
 2810 020a 1A46     		mov	r2, r3
 2811 020c FB79     		ldrb	r3, [r7, #7]
 2812 020e 63F02F03 		orn	r3, r3, #47
 2813 0212 DBB2     		uxtb	r3, r3
 2814 0214 9A42     		cmp	r2, r3
 2815 0216 25D1     		bne	.L146
 712:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2816              		.loc 1 712 0
 2817 0218 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 713:.\Protocolo.c **** 		CyDelay(10);
 2818              		.loc 1 713 0
 2819 021c 0A20     		movs	r0, #10
 2820 021e FFF7FEFF 		bl	CyDelay
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2821              		.loc 1 714 0
 2822 0222 0023     		movs	r3, #0
 2823 0224 BB77     		strb	r3, [r7, #30]
 2824 0226 0BE0     		b	.L147
 2825              	.L148:
 715:.\Protocolo.c ****            	Surtidor_PutChar(buffer[x]);
 2826              		.loc 1 715 0 discriminator 3
 2827 0228 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2828 022a 07F12002 		add	r2, r7, #32
 2829 022e 1344     		add	r3, r3, r2
 2830 0230 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2831 0234 1846     		mov	r0, r3
 2832 0236 FFF7FEFF 		bl	Surtidor_PutChar
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2833              		.loc 1 714 0 discriminator 3
 2834 023a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2835 023c 0133     		adds	r3, r3, #1
 2836 023e BB77     		strb	r3, [r7, #30]
 2837              	.L147:
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2838              		.loc 1 714 0 is_stmt 0 discriminator 1
 2839 0240 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2840 0242 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2841 0244 9A42     		cmp	r2, r3
 2842 0246 EFD9     		bls	.L148
 716:.\Protocolo.c ****         }
 717:.\Protocolo.c **** 		CyDelay(50);		
 2843              		.loc 1 717 0 is_stmt 1
 2844 0248 3220     		movs	r0, #50
 2845 024a FFF7FEFF 		bl	CyDelay
 718:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2846              		.loc 1 718 0
 2847 024e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2848 0250 1846     		mov	r0, r3
 2849 0252 FFF7FEFF 		bl	get_estado
 2850 0256 0346     		mov	r3, r0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 65


 2851 0258 002B     		cmp	r3, #0
 2852 025a 01D1     		bne	.L149
 719:.\Protocolo.c **** 			return 0;
 2853              		.loc 1 719 0
 2854 025c 0023     		movs	r3, #0
 2855 025e 02E0     		b	.L150
 2856              	.L149:
 720:.\Protocolo.c **** 		}
 721:.\Protocolo.c **** 		else{
 722:.\Protocolo.c **** 			return 1;
 2857              		.loc 1 722 0
 2858 0260 0123     		movs	r3, #1
 2859 0262 00E0     		b	.L150
 2860              	.L146:
 723:.\Protocolo.c **** 		}
 724:.\Protocolo.c **** 	}
 725:.\Protocolo.c **** 	else{
 726:.\Protocolo.c **** 		return 0;
 2861              		.loc 1 726 0
 2862 0264 0023     		movs	r3, #0
 2863              	.L150:
 727:.\Protocolo.c **** 	}
 728:.\Protocolo.c **** }
 2864              		.loc 1 728 0 discriminator 1
 2865 0266 1846     		mov	r0, r3
 2866 0268 2037     		adds	r7, r7, #32
 2867              		.cfi_def_cfa_offset 8
 2868 026a BD46     		mov	sp, r7
 2869              		.cfi_def_cfa_register 13
 2870              		@ sp needed
 2871 026c 80BD     		pop	{r7, pc}
 2872              	.L152:
 2873 026e 00BF     		.align	2
 2874              	.L151:
 2875 0270 00000000 		.word	version
 2876 0274 00000000 		.word	Rx_Surtidor
 2877 0278 00000000 		.word	rx_timeout
 2878              		.cfi_endproc
 2879              	.LFE71:
 2880              		.size	cambiar_precio, .-cambiar_precio
 2881              		.section	.text.totales,"ax",%progbits
 2882              		.align	2
 2883              		.global	totales
 2884              		.thumb
 2885              		.thumb_func
 2886              		.type	totales, %function
 2887              	totales:
 2888              	.LFB72:
 729:.\Protocolo.c **** 
 730:.\Protocolo.c **** /*
 731:.\Protocolo.c **** ***************************************************************************************************
 732:.\Protocolo.c **** *                                         uint8 totales(uint8 dir)
 733:.\Protocolo.c **** *
 734:.\Protocolo.c **** * Description : 
 735:.\Protocolo.c **** *               
 736:.\Protocolo.c **** *
 737:.\Protocolo.c **** * Argument(s) : none
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 66


 738:.\Protocolo.c **** *
 739:.\Protocolo.c **** * Return(s)   : none
 740:.\Protocolo.c **** *
 741:.\Protocolo.c **** * Caller(s)   : 
 742:.\Protocolo.c **** *
 743:.\Protocolo.c **** * Note(s)     : none.
 744:.\Protocolo.c **** ***************************************************************************************************
 745:.\Protocolo.c **** */
 746:.\Protocolo.c **** uint8 totales(uint8 dir, uint8 nmangueras){
 2889              		.loc 1 746 0
 2890              		.cfi_startproc
 2891              		@ args = 0, pretend = 0, frame = 16
 2892              		@ frame_needed = 1, uses_anonymous_args = 0
 2893 0000 80B5     		push	{r7, lr}
 2894              		.cfi_def_cfa_offset 8
 2895              		.cfi_offset 7, -8
 2896              		.cfi_offset 14, -4
 2897 0002 84B0     		sub	sp, sp, #16
 2898              		.cfi_def_cfa_offset 24
 2899 0004 00AF     		add	r7, sp, #0
 2900              		.cfi_def_cfa_register 7
 2901 0006 0346     		mov	r3, r0
 2902 0008 0A46     		mov	r2, r1
 2903 000a FB71     		strb	r3, [r7, #7]
 2904 000c 1346     		mov	r3, r2
 2905 000e BB71     		strb	r3, [r7, #6]
 747:.\Protocolo.c **** 	uint8 x,y;
 748:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2906              		.loc 1 748 0
 2907 0010 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 749:.\Protocolo.c ****     Surtidor_PutChar(0x50|dir);
 2908              		.loc 1 749 0
 2909 0014 FB79     		ldrb	r3, [r7, #7]
 2910 0016 43F05003 		orr	r3, r3, #80
 2911 001a DBB2     		uxtb	r3, r3
 2912 001c 1846     		mov	r0, r3
 2913 001e FFF7FEFF 		bl	Surtidor_PutChar
 750:.\Protocolo.c ****     rx_timeout=0;
 2914              		.loc 1 750 0
 2915 0022 B04B     		ldr	r3, .L355
 2916 0024 0022     		movs	r2, #0
 2917 0026 1A70     		strb	r2, [r3]
 751:.\Protocolo.c **** 	CyDelay(300);
 2918              		.loc 1 751 0
 2919 0028 4FF49670 		mov	r0, #300
 2920 002c FFF7FEFF 		bl	CyDelay
 752:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 2921              		.loc 1 752 0
 2922 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2923 0034 0346     		mov	r3, r0
 2924 0036 002B     		cmp	r3, #0
 2925 0038 01F02280 		beq	.L154
 753:.\Protocolo.c **** 		if(dir==lado1.dir){
 2926              		.loc 1 753 0
 2927 003c AA4B     		ldr	r3, .L355+4
 2928 003e 1B78     		ldrb	r3, [r3]
 2929 0040 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 67


 2930 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2931 0044 9A42     		cmp	r2, r3
 2932 0046 40F01F84 		bne	.L155
 754:.\Protocolo.c **** 			if(version[1]!=7){
 2933              		.loc 1 754 0
 2934 004a A84B     		ldr	r3, .L355+8
 2935 004c 5B78     		ldrb	r3, [r3, #1]
 2936 004e DBB2     		uxtb	r3, r3
 2937 0050 072B     		cmp	r3, #7
 2938 0052 00F00C82 		beq	.L156
 755:.\Protocolo.c **** 				CyDelay(900);
 2939              		.loc 1 755 0
 2940 0056 4FF46170 		mov	r0, #900
 2941 005a FFF7FEFF 		bl	CyDelay
 756:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 2942              		.loc 1 756 0
 2943 005e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2944 0062 0346     		mov	r3, r0
 2945 0064 FB73     		strb	r3, [r7, #15]
 757:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 2946              		.loc 1 757 0
 2947 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2948 0068 222B     		cmp	r3, #34
 2949 006a 06D0     		beq	.L157
 2950              		.loc 1 757 0 is_stmt 0 discriminator 1
 2951 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2952 006e 402B     		cmp	r3, #64
 2953 0070 03D0     		beq	.L157
 2954              		.loc 1 757 0 discriminator 2
 2955 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2956 0074 5E2B     		cmp	r3, #94
 2957 0076 40F0F581 		bne	.L158
 2958              	.L157:
 758:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9))  
 2959              		.loc 1 758 0 is_stmt 1
 2960 007a 9D4B     		ldr	r3, .L355+12
 2961 007c 1B78     		ldrb	r3, [r3]
 2962 007e DBB2     		uxtb	r3, r3
 2963 0080 FF2B     		cmp	r3, #255
 2964 0082 40F0EA81 		bne	.L159
 2965              		.loc 1 758 0 is_stmt 0 discriminator 1
 2966 0086 9A4B     		ldr	r3, .L355+12
 2967 0088 5B78     		ldrb	r3, [r3, #1]
 2968 008a DBB2     		uxtb	r3, r3
 2969 008c F62B     		cmp	r3, #246
 2970 008e 40F0E481 		bne	.L159
 2971              		.loc 1 758 0 discriminator 2
 2972 0092 974B     		ldr	r3, .L355+12
 2973 0094 DB78     		ldrb	r3, [r3, #3]
 2974 0096 DBB2     		uxtb	r3, r3
 2975 0098 F92B     		cmp	r3, #249
 2976 009a 40F0DE81 		bne	.L159
 759:.\Protocolo.c ****                     {                     
 760:.\Protocolo.c ****                     	for(y=0;y<=2;y++){// MOD: inicializa valores en cero
 2977              		.loc 1 760 0 is_stmt 1
 2978 009e 0023     		movs	r3, #0
 2979 00a0 BB73     		strb	r3, [r7, #14]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 68


 2980 00a2 16E0     		b	.L160
 2981              	.L163:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2982              		.loc 1 761 0
 2983 00a4 0023     		movs	r3, #0
 2984 00a6 FB73     		strb	r3, [r7, #15]
 2985 00a8 0DE0     		b	.L161
 2986              	.L162:
 762:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 2987              		.loc 1 762 0 discriminator 3
 2988 00aa BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2989 00ac F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 2990 00ae 8E48     		ldr	r0, .L355+4
 2991 00b0 1346     		mov	r3, r2
 2992 00b2 5B00     		lsls	r3, r3, #1
 2993 00b4 1344     		add	r3, r3, r2
 2994 00b6 DB00     		lsls	r3, r3, #3
 2995 00b8 0B44     		add	r3, r3, r1
 2996 00ba 0344     		add	r3, r3, r0
 2997 00bc 0022     		movs	r2, #0
 2998 00be 9A70     		strb	r2, [r3, #2]
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2999              		.loc 1 761 0 discriminator 3
 3000 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3001 00c2 0133     		adds	r3, r3, #1
 3002 00c4 FB73     		strb	r3, [r7, #15]
 3003              	.L161:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3004              		.loc 1 761 0 is_stmt 0 discriminator 1
 3005 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3006 00c8 172B     		cmp	r3, #23
 3007 00ca EED9     		bls	.L162
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3008              		.loc 1 760 0 is_stmt 1 discriminator 2
 3009 00cc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3010 00ce 0133     		adds	r3, r3, #1
 3011 00d0 BB73     		strb	r3, [r7, #14]
 3012              	.L160:
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3013              		.loc 1 760 0 is_stmt 0 discriminator 1
 3014 00d2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3015 00d4 022B     		cmp	r3, #2
 3016 00d6 E5D9     		bls	.L163
 763:.\Protocolo.c ****                     		}
 764:.\Protocolo.c ****                     	}                        
 765:.\Protocolo.c **** 						for(x=0;x<=7;x++){///producto 1 6xto digito
 3017              		.loc 1 765 0 is_stmt 1
 3018 00d8 0023     		movs	r3, #0
 3019 00da FB73     		strb	r3, [r7, #15]
 3020 00dc 21E0     		b	.L164
 3021              	.L168:
 766:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3022              		.loc 1 766 0
 3023 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3024 00e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3025 00e2 0432     		adds	r2, r2, #4
 3026 00e4 8249     		ldr	r1, .L355+12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 69


 3027 00e6 8A5C     		ldrb	r2, [r1, r2]
 3028 00e8 D1B2     		uxtb	r1, r2
 3029 00ea 7F4A     		ldr	r2, .L355+4
 3030 00ec 1344     		add	r3, r3, r2
 3031 00ee 0A46     		mov	r2, r1
 3032 00f0 9A70     		strb	r2, [r3, #2]
 767:.\Protocolo.c ****                             ///////////''modificacion actual''//// Se añade esta verificacion para
 768:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3033              		.loc 1 768 0
 3034 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3035 00f4 7C4A     		ldr	r2, .L355+4
 3036 00f6 1344     		add	r3, r3, r2
 3037 00f8 9B78     		ldrb	r3, [r3, #2]
 3038 00fa DBB2     		uxtb	r3, r3
 3039 00fc 002B     		cmp	r3, #0
 3040 00fe 08D0     		beq	.L165
 3041              		.loc 1 768 0 is_stmt 0 discriminator 1
 3042 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3043 0102 794A     		ldr	r2, .L355+4
 3044 0104 1344     		add	r3, r3, r2
 3045 0106 9B78     		ldrb	r3, [r3, #2]
 3046 0108 DBB2     		uxtb	r3, r3
 3047 010a 03F0F003 		and	r3, r3, #240
 3048 010e E02B     		cmp	r3, #224
 3049 0110 04D0     		beq	.L166
 3050              	.L165:
 769:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3051              		.loc 1 769 0 is_stmt 1
 3052 0112 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 770:.\Protocolo.c **** 								return 0;
 3053              		.loc 1 770 0
 3054 0116 0023     		movs	r3, #0
 3055 0118 00F0B3BF 		b	.L167
 3056              	.L166:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3057              		.loc 1 765 0 discriminator 2
 3058 011c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3059 011e 0133     		adds	r3, r3, #1
 3060 0120 FB73     		strb	r3, [r7, #15]
 3061              	.L164:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3062              		.loc 1 765 0 is_stmt 0 discriminator 1
 3063 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3064 0124 072B     		cmp	r3, #7
 3065 0126 DAD9     		bls	.L168
 771:.\Protocolo.c **** 							}
 772:.\Protocolo.c ****                             ///////////''modificacion actual''////
 773:.\Protocolo.c **** 						}
 774:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3066              		.loc 1 774 0 is_stmt 1
 3067 0128 0023     		movs	r3, #0
 3068 012a FB73     		strb	r3, [r7, #15]
 3069 012c 24E0     		b	.L169
 3070              	.L172:
 775:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3071              		.loc 1 775 0
 3072 012e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 70


 3073 0130 0C33     		adds	r3, r3, #12
 3074 0132 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3075 0134 0D32     		adds	r2, r2, #13
 3076 0136 6E49     		ldr	r1, .L355+12
 3077 0138 8A5C     		ldrb	r2, [r1, r2]
 3078 013a D1B2     		uxtb	r1, r2
 3079 013c 6A4A     		ldr	r2, .L355+4
 3080 013e 1344     		add	r3, r3, r2
 3081 0140 0A46     		mov	r2, r1
 3082 0142 9A70     		strb	r2, [r3, #2]
 776:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3083              		.loc 1 776 0
 3084 0144 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3085 0146 0C33     		adds	r3, r3, #12
 3086 0148 674A     		ldr	r2, .L355+4
 3087 014a 1344     		add	r3, r3, r2
 3088 014c 9B78     		ldrb	r3, [r3, #2]
 3089 014e DBB2     		uxtb	r3, r3
 3090 0150 002B     		cmp	r3, #0
 3091 0152 09D0     		beq	.L170
 3092              		.loc 1 776 0 is_stmt 0 discriminator 1
 3093 0154 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3094 0156 0C33     		adds	r3, r3, #12
 3095 0158 634A     		ldr	r2, .L355+4
 3096 015a 1344     		add	r3, r3, r2
 3097 015c 9B78     		ldrb	r3, [r3, #2]
 3098 015e DBB2     		uxtb	r3, r3
 3099 0160 03F0F003 		and	r3, r3, #240
 3100 0164 E02B     		cmp	r3, #224
 3101 0166 04D0     		beq	.L171
 3102              	.L170:
 777:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3103              		.loc 1 777 0 is_stmt 1
 3104 0168 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 778:.\Protocolo.c **** 								return 0;
 3105              		.loc 1 778 0
 3106 016c 0023     		movs	r3, #0
 3107 016e 00F088BF 		b	.L167
 3108              	.L171:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3109              		.loc 1 774 0 discriminator 2
 3110 0172 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3111 0174 0133     		adds	r3, r3, #1
 3112 0176 FB73     		strb	r3, [r7, #15]
 3113              	.L169:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3114              		.loc 1 774 0 is_stmt 0 discriminator 1
 3115 0178 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3116 017a 072B     		cmp	r3, #7
 3117 017c D7D9     		bls	.L172
 779:.\Protocolo.c **** 							}							
 780:.\Protocolo.c **** 						}
 781:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3118              		.loc 1 781 0 is_stmt 1
 3119 017e 0023     		movs	r3, #0
 3120 0180 FB73     		strb	r3, [r7, #15]
 3121 0182 0DE0     		b	.L173
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 71


 3122              	.L174:
 782:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3123              		.loc 1 782 0 discriminator 3
 3124 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3125 0186 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3126 0188 1632     		adds	r2, r2, #22
 3127 018a 5949     		ldr	r1, .L355+12
 3128 018c 8A5C     		ldrb	r2, [r1, r2]
 3129 018e D1B2     		uxtb	r1, r2
 3130 0190 554A     		ldr	r2, .L355+4
 3131 0192 1344     		add	r3, r3, r2
 3132 0194 0A46     		mov	r2, r1
 3133 0196 83F84A20 		strb	r2, [r3, #74]
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3134              		.loc 1 781 0 discriminator 3
 3135 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3136 019c 0133     		adds	r3, r3, #1
 3137 019e FB73     		strb	r3, [r7, #15]
 3138              	.L173:
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3139              		.loc 1 781 0 is_stmt 0 discriminator 1
 3140 01a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3141 01a2 032B     		cmp	r3, #3
 3142 01a4 EED9     		bls	.L174
 783:.\Protocolo.c **** 						}					
 784:.\Protocolo.c **** 						if(nmangueras==2){
 3143              		.loc 1 784 0 is_stmt 1
 3144 01a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3145 01a8 022B     		cmp	r3, #2
 3146 01aa 6BD1     		bne	.L175
 785:.\Protocolo.c **** 							for(x=0;x<=7;x++){ ///producto 2
 3147              		.loc 1 785 0
 3148 01ac 0023     		movs	r3, #0
 3149 01ae FB73     		strb	r3, [r7, #15]
 3150 01b0 21E0     		b	.L176
 3151              	.L179:
 786:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3152              		.loc 1 786 0
 3153 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3154 01b4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3155 01b6 2232     		adds	r2, r2, #34
 3156 01b8 4D49     		ldr	r1, .L355+12
 3157 01ba 8A5C     		ldrb	r2, [r1, r2]
 3158 01bc D1B2     		uxtb	r1, r2
 3159 01be 4A4A     		ldr	r2, .L355+4
 3160 01c0 1344     		add	r3, r3, r2
 3161 01c2 0A46     		mov	r2, r1
 3162 01c4 9A76     		strb	r2, [r3, #26]
 787:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3163              		.loc 1 787 0
 3164 01c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3165 01c8 474A     		ldr	r2, .L355+4
 3166 01ca 1344     		add	r3, r3, r2
 3167 01cc 9B7E     		ldrb	r3, [r3, #26]
 3168 01ce DBB2     		uxtb	r3, r3
 3169 01d0 002B     		cmp	r3, #0
 3170 01d2 08D0     		beq	.L177
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 72


 3171              		.loc 1 787 0 is_stmt 0 discriminator 1
 3172 01d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3173 01d6 444A     		ldr	r2, .L355+4
 3174 01d8 1344     		add	r3, r3, r2
 3175 01da 9B7E     		ldrb	r3, [r3, #26]
 3176 01dc DBB2     		uxtb	r3, r3
 3177 01de 03F0F003 		and	r3, r3, #240
 3178 01e2 E02B     		cmp	r3, #224
 3179 01e4 04D0     		beq	.L178
 3180              	.L177:
 788:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3181              		.loc 1 788 0 is_stmt 1
 3182 01e6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 789:.\Protocolo.c **** 									return 0;
 3183              		.loc 1 789 0
 3184 01ea 0023     		movs	r3, #0
 3185 01ec 00F049BF 		b	.L167
 3186              	.L178:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3187              		.loc 1 785 0 discriminator 2
 3188 01f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3189 01f2 0133     		adds	r3, r3, #1
 3190 01f4 FB73     		strb	r3, [r7, #15]
 3191              	.L176:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3192              		.loc 1 785 0 is_stmt 0 discriminator 1
 3193 01f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3194 01f8 072B     		cmp	r3, #7
 3195 01fa DAD9     		bls	.L179
 790:.\Protocolo.c **** 								}								
 791:.\Protocolo.c **** 							}
 792:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3196              		.loc 1 792 0 is_stmt 1
 3197 01fc 0023     		movs	r3, #0
 3198 01fe FB73     		strb	r3, [r7, #15]
 3199 0200 24E0     		b	.L180
 3200              	.L183:
 793:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3201              		.loc 1 793 0
 3202 0202 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3203 0204 0C33     		adds	r3, r3, #12
 3204 0206 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3205 0208 2B32     		adds	r2, r2, #43
 3206 020a 3949     		ldr	r1, .L355+12
 3207 020c 8A5C     		ldrb	r2, [r1, r2]
 3208 020e D1B2     		uxtb	r1, r2
 3209 0210 354A     		ldr	r2, .L355+4
 3210 0212 1344     		add	r3, r3, r2
 3211 0214 0A46     		mov	r2, r1
 3212 0216 9A76     		strb	r2, [r3, #26]
 794:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3213              		.loc 1 794 0
 3214 0218 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3215 021a 0C33     		adds	r3, r3, #12
 3216 021c 324A     		ldr	r2, .L355+4
 3217 021e 1344     		add	r3, r3, r2
 3218 0220 9B7E     		ldrb	r3, [r3, #26]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 73


 3219 0222 DBB2     		uxtb	r3, r3
 3220 0224 002B     		cmp	r3, #0
 3221 0226 09D0     		beq	.L181
 3222              		.loc 1 794 0 is_stmt 0 discriminator 1
 3223 0228 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3224 022a 0C33     		adds	r3, r3, #12
 3225 022c 2E4A     		ldr	r2, .L355+4
 3226 022e 1344     		add	r3, r3, r2
 3227 0230 9B7E     		ldrb	r3, [r3, #26]
 3228 0232 DBB2     		uxtb	r3, r3
 3229 0234 03F0F003 		and	r3, r3, #240
 3230 0238 E02B     		cmp	r3, #224
 3231 023a 04D0     		beq	.L182
 3232              	.L181:
 795:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3233              		.loc 1 795 0 is_stmt 1
 3234 023c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 796:.\Protocolo.c **** 									return 0;
 3235              		.loc 1 796 0
 3236 0240 0023     		movs	r3, #0
 3237 0242 00F01EBF 		b	.L167
 3238              	.L182:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3239              		.loc 1 792 0 discriminator 2
 3240 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3241 0248 0133     		adds	r3, r3, #1
 3242 024a FB73     		strb	r3, [r7, #15]
 3243              	.L180:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3244              		.loc 1 792 0 is_stmt 0 discriminator 1
 3245 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3246 024e 072B     		cmp	r3, #7
 3247 0250 D7D9     		bls	.L183
 797:.\Protocolo.c **** 								}								
 798:.\Protocolo.c **** 							}
 799:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3248              		.loc 1 799 0 is_stmt 1
 3249 0252 0023     		movs	r3, #0
 3250 0254 FB73     		strb	r3, [r7, #15]
 3251 0256 0DE0     		b	.L184
 3252              	.L185:
 800:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3253              		.loc 1 800 0 discriminator 3
 3254 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3255 025a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3256 025c 3432     		adds	r2, r2, #52
 3257 025e 2449     		ldr	r1, .L355+12
 3258 0260 8A5C     		ldrb	r2, [r1, r2]
 3259 0262 D1B2     		uxtb	r1, r2
 3260 0264 204A     		ldr	r2, .L355+4
 3261 0266 1344     		add	r3, r3, r2
 3262 0268 0A46     		mov	r2, r1
 3263 026a 83F84F20 		strb	r2, [r3, #79]
 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3264              		.loc 1 799 0 discriminator 3
 3265 026e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3266 0270 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 74


 3267 0272 FB73     		strb	r3, [r7, #15]
 3268              	.L184:
 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3269              		.loc 1 799 0 is_stmt 0 discriminator 1
 3270 0274 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3271 0276 032B     		cmp	r3, #3
 3272 0278 EED9     		bls	.L185
 801:.\Protocolo.c **** 							}	
 802:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3273              		.loc 1 802 0 is_stmt 1
 3274 027a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 803:.\Protocolo.c ****     						return 2;                            
 3275              		.loc 1 803 0
 3276 027e 0223     		movs	r3, #2
 3277 0280 00F0FFBE 		b	.L167
 3278              	.L175:
 804:.\Protocolo.c **** 						}
 805:.\Protocolo.c **** 						if(nmangueras==3){
 3279              		.loc 1 805 0
 3280 0284 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3281 0286 032B     		cmp	r3, #3
 3282 0288 40F0E280 		bne	.L186
 806:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 2
 3283              		.loc 1 806 0
 3284 028c 0023     		movs	r3, #0
 3285 028e FB73     		strb	r3, [r7, #15]
 3286 0290 21E0     		b	.L187
 3287              	.L190:
 807:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3288              		.loc 1 807 0
 3289 0292 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3290 0294 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3291 0296 2232     		adds	r2, r2, #34
 3292 0298 1549     		ldr	r1, .L355+12
 3293 029a 8A5C     		ldrb	r2, [r1, r2]
 3294 029c D1B2     		uxtb	r1, r2
 3295 029e 124A     		ldr	r2, .L355+4
 3296 02a0 1344     		add	r3, r3, r2
 3297 02a2 0A46     		mov	r2, r1
 3298 02a4 9A76     		strb	r2, [r3, #26]
 808:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3299              		.loc 1 808 0
 3300 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3301 02a8 0F4A     		ldr	r2, .L355+4
 3302 02aa 1344     		add	r3, r3, r2
 3303 02ac 9B7E     		ldrb	r3, [r3, #26]
 3304 02ae DBB2     		uxtb	r3, r3
 3305 02b0 002B     		cmp	r3, #0
 3306 02b2 08D0     		beq	.L188
 3307              		.loc 1 808 0 is_stmt 0 discriminator 1
 3308 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3309 02b6 0C4A     		ldr	r2, .L355+4
 3310 02b8 1344     		add	r3, r3, r2
 3311 02ba 9B7E     		ldrb	r3, [r3, #26]
 3312 02bc DBB2     		uxtb	r3, r3
 3313 02be 03F0F003 		and	r3, r3, #240
 3314 02c2 E02B     		cmp	r3, #224
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 75


 3315 02c4 04D0     		beq	.L189
 3316              	.L188:
 809:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3317              		.loc 1 809 0 is_stmt 1
 3318 02c6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 810:.\Protocolo.c **** 									return 0;
 3319              		.loc 1 810 0
 3320 02ca 0023     		movs	r3, #0
 3321 02cc 00F0D9BE 		b	.L167
 3322              	.L189:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3323              		.loc 1 806 0 discriminator 2
 3324 02d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3325 02d2 0133     		adds	r3, r3, #1
 3326 02d4 FB73     		strb	r3, [r7, #15]
 3327              	.L187:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3328              		.loc 1 806 0 is_stmt 0 discriminator 1
 3329 02d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3330 02d8 072B     		cmp	r3, #7
 3331 02da DAD9     		bls	.L190
 811:.\Protocolo.c **** 								}								
 812:.\Protocolo.c **** 							}
 813:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3332              		.loc 1 813 0 is_stmt 1
 3333 02dc 0023     		movs	r3, #0
 3334 02de FB73     		strb	r3, [r7, #15]
 3335 02e0 2DE0     		b	.L191
 3336              	.L356:
 3337 02e2 00BF     		.align	2
 3338              	.L355:
 3339 02e4 00000000 		.word	rx_timeout
 3340 02e8 00000000 		.word	lado1
 3341 02ec 00000000 		.word	version
 3342 02f0 00000000 		.word	Surtidor_rxBuffer
 3343              	.L194:
 814:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3344              		.loc 1 814 0
 3345 02f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3346 02f6 0C33     		adds	r3, r3, #12
 3347 02f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3348 02fa 2B32     		adds	r2, r2, #43
 3349 02fc B349     		ldr	r1, .L357
 3350 02fe 8A5C     		ldrb	r2, [r1, r2]
 3351 0300 D1B2     		uxtb	r1, r2
 3352 0302 B34A     		ldr	r2, .L357+4
 3353 0304 1344     		add	r3, r3, r2
 3354 0306 0A46     		mov	r2, r1
 3355 0308 9A76     		strb	r2, [r3, #26]
 815:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3356              		.loc 1 815 0
 3357 030a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3358 030c 0C33     		adds	r3, r3, #12
 3359 030e B04A     		ldr	r2, .L357+4
 3360 0310 1344     		add	r3, r3, r2
 3361 0312 9B7E     		ldrb	r3, [r3, #26]
 3362 0314 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 76


 3363 0316 002B     		cmp	r3, #0
 3364 0318 09D0     		beq	.L192
 3365              		.loc 1 815 0 is_stmt 0 discriminator 1
 3366 031a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3367 031c 0C33     		adds	r3, r3, #12
 3368 031e AC4A     		ldr	r2, .L357+4
 3369 0320 1344     		add	r3, r3, r2
 3370 0322 9B7E     		ldrb	r3, [r3, #26]
 3371 0324 DBB2     		uxtb	r3, r3
 3372 0326 03F0F003 		and	r3, r3, #240
 3373 032a E02B     		cmp	r3, #224
 3374 032c 04D0     		beq	.L193
 3375              	.L192:
 816:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3376              		.loc 1 816 0 is_stmt 1
 3377 032e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 817:.\Protocolo.c **** 									return 0;
 3378              		.loc 1 817 0
 3379 0332 0023     		movs	r3, #0
 3380 0334 00F0A5BE 		b	.L167
 3381              	.L193:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3382              		.loc 1 813 0 discriminator 2
 3383 0338 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3384 033a 0133     		adds	r3, r3, #1
 3385 033c FB73     		strb	r3, [r7, #15]
 3386              	.L191:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3387              		.loc 1 813 0 is_stmt 0 discriminator 1
 3388 033e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3389 0340 072B     		cmp	r3, #7
 3390 0342 D7D9     		bls	.L194
 818:.\Protocolo.c **** 								}								
 819:.\Protocolo.c **** 							}
 820:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3391              		.loc 1 820 0 is_stmt 1
 3392 0344 0023     		movs	r3, #0
 3393 0346 FB73     		strb	r3, [r7, #15]
 3394 0348 0DE0     		b	.L195
 3395              	.L196:
 821:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3396              		.loc 1 821 0 discriminator 3
 3397 034a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3398 034c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3399 034e 3432     		adds	r2, r2, #52
 3400 0350 9E49     		ldr	r1, .L357
 3401 0352 8A5C     		ldrb	r2, [r1, r2]
 3402 0354 D1B2     		uxtb	r1, r2
 3403 0356 9E4A     		ldr	r2, .L357+4
 3404 0358 1344     		add	r3, r3, r2
 3405 035a 0A46     		mov	r2, r1
 3406 035c 83F84F20 		strb	r2, [r3, #79]
 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3407              		.loc 1 820 0 discriminator 3
 3408 0360 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3409 0362 0133     		adds	r3, r3, #1
 3410 0364 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 77


 3411              	.L195:
 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3412              		.loc 1 820 0 is_stmt 0 discriminator 1
 3413 0366 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3414 0368 032B     		cmp	r3, #3
 3415 036a EED9     		bls	.L196
 822:.\Protocolo.c **** 							}					
 823:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 3
 3416              		.loc 1 823 0 is_stmt 1
 3417 036c 0023     		movs	r3, #0
 3418 036e FB73     		strb	r3, [r7, #15]
 3419 0370 24E0     		b	.L197
 3420              	.L200:
 824:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3421              		.loc 1 824 0
 3422 0372 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3423 0374 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3424 0376 4032     		adds	r2, r2, #64
 3425 0378 9449     		ldr	r1, .L357
 3426 037a 8A5C     		ldrb	r2, [r1, r2]
 3427 037c D1B2     		uxtb	r1, r2
 3428 037e 944A     		ldr	r2, .L357+4
 3429 0380 1344     		add	r3, r3, r2
 3430 0382 0A46     		mov	r2, r1
 3431 0384 83F83220 		strb	r2, [r3, #50]
 825:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 3432              		.loc 1 825 0
 3433 0388 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3434 038a 914A     		ldr	r2, .L357+4
 3435 038c 1344     		add	r3, r3, r2
 3436 038e 93F83230 		ldrb	r3, [r3, #50]
 3437 0392 DBB2     		uxtb	r3, r3
 3438 0394 002B     		cmp	r3, #0
 3439 0396 09D0     		beq	.L198
 3440              		.loc 1 825 0 is_stmt 0 discriminator 1
 3441 0398 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3442 039a 8D4A     		ldr	r2, .L357+4
 3443 039c 1344     		add	r3, r3, r2
 3444 039e 93F83230 		ldrb	r3, [r3, #50]
 3445 03a2 DBB2     		uxtb	r3, r3
 3446 03a4 03F0F003 		and	r3, r3, #240
 3447 03a8 E02B     		cmp	r3, #224
 3448 03aa 04D0     		beq	.L199
 3449              	.L198:
 826:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3450              		.loc 1 826 0 is_stmt 1
 3451 03ac FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 827:.\Protocolo.c **** 									return 0;
 3452              		.loc 1 827 0
 3453 03b0 0023     		movs	r3, #0
 3454 03b2 00F066BE 		b	.L167
 3455              	.L199:
 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3456              		.loc 1 823 0 discriminator 2
 3457 03b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3458 03b8 0133     		adds	r3, r3, #1
 3459 03ba FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 78


 3460              	.L197:
 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3461              		.loc 1 823 0 is_stmt 0 discriminator 1
 3462 03bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3463 03be 072B     		cmp	r3, #7
 3464 03c0 D7D9     		bls	.L200
 828:.\Protocolo.c **** 								}								
 829:.\Protocolo.c **** 							}
 830:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3465              		.loc 1 830 0 is_stmt 1
 3466 03c2 0023     		movs	r3, #0
 3467 03c4 FB73     		strb	r3, [r7, #15]
 3468 03c6 27E0     		b	.L201
 3469              	.L204:
 831:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3470              		.loc 1 831 0
 3471 03c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3472 03ca 0C33     		adds	r3, r3, #12
 3473 03cc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3474 03ce 4932     		adds	r2, r2, #73
 3475 03d0 7E49     		ldr	r1, .L357
 3476 03d2 8A5C     		ldrb	r2, [r1, r2]
 3477 03d4 D1B2     		uxtb	r1, r2
 3478 03d6 7E4A     		ldr	r2, .L357+4
 3479 03d8 1344     		add	r3, r3, r2
 3480 03da 0A46     		mov	r2, r1
 3481 03dc 83F83220 		strb	r2, [r3, #50]
 832:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 3482              		.loc 1 832 0
 3483 03e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3484 03e2 0C33     		adds	r3, r3, #12
 3485 03e4 7A4A     		ldr	r2, .L357+4
 3486 03e6 1344     		add	r3, r3, r2
 3487 03e8 93F83230 		ldrb	r3, [r3, #50]
 3488 03ec DBB2     		uxtb	r3, r3
 3489 03ee 002B     		cmp	r3, #0
 3490 03f0 0AD0     		beq	.L202
 3491              		.loc 1 832 0 is_stmt 0 discriminator 1
 3492 03f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3493 03f4 0C33     		adds	r3, r3, #12
 3494 03f6 764A     		ldr	r2, .L357+4
 3495 03f8 1344     		add	r3, r3, r2
 3496 03fa 93F83230 		ldrb	r3, [r3, #50]
 3497 03fe DBB2     		uxtb	r3, r3
 3498 0400 03F0F003 		and	r3, r3, #240
 3499 0404 E02B     		cmp	r3, #224
 3500 0406 04D0     		beq	.L203
 3501              	.L202:
 833:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3502              		.loc 1 833 0 is_stmt 1
 3503 0408 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 834:.\Protocolo.c **** 									return 0;
 3504              		.loc 1 834 0
 3505 040c 0023     		movs	r3, #0
 3506 040e 00F038BE 		b	.L167
 3507              	.L203:
 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 79


 3508              		.loc 1 830 0 discriminator 2
 3509 0412 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3510 0414 0133     		adds	r3, r3, #1
 3511 0416 FB73     		strb	r3, [r7, #15]
 3512              	.L201:
 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3513              		.loc 1 830 0 is_stmt 0 discriminator 1
 3514 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3515 041a 072B     		cmp	r3, #7
 3516 041c D4D9     		bls	.L204
 835:.\Protocolo.c **** 								}								
 836:.\Protocolo.c **** 							}
 837:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3517              		.loc 1 837 0 is_stmt 1
 3518 041e 0023     		movs	r3, #0
 3519 0420 FB73     		strb	r3, [r7, #15]
 3520 0422 0DE0     		b	.L205
 3521              	.L206:
 838:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3522              		.loc 1 838 0 discriminator 3
 3523 0424 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3524 0426 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3525 0428 5232     		adds	r2, r2, #82
 3526 042a 6849     		ldr	r1, .L357
 3527 042c 8A5C     		ldrb	r2, [r1, r2]
 3528 042e D1B2     		uxtb	r1, r2
 3529 0430 674A     		ldr	r2, .L357+4
 3530 0432 1344     		add	r3, r3, r2
 3531 0434 0A46     		mov	r2, r1
 3532 0436 83F85420 		strb	r2, [r3, #84]
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3533              		.loc 1 837 0 discriminator 3
 3534 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3535 043c 0133     		adds	r3, r3, #1
 3536 043e FB73     		strb	r3, [r7, #15]
 3537              	.L205:
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3538              		.loc 1 837 0 is_stmt 0 discriminator 1
 3539 0440 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3540 0442 032B     		cmp	r3, #3
 3541 0444 EED9     		bls	.L206
 839:.\Protocolo.c **** 							}
 840:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3542              		.loc 1 840 0 is_stmt 1
 3543 0446 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 841:.\Protocolo.c ****     						return 3;                            
 3544              		.loc 1 841 0
 3545 044a 0323     		movs	r3, #3
 3546 044c 00F019BE 		b	.L167
 3547              	.L186:
 842:.\Protocolo.c **** 						}
 843:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3548              		.loc 1 843 0
 3549 0450 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 844:.\Protocolo.c **** 						return 1;
 3550              		.loc 1 844 0
 3551 0454 0123     		movs	r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 80


 3552 0456 00F014BE 		b	.L167
 3553              	.L159:
 845:.\Protocolo.c **** 					}
 846:.\Protocolo.c **** 					else{
 847:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3554              		.loc 1 847 0
 3555 045a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 848:.\Protocolo.c **** 						return 0;
 3556              		.loc 1 848 0
 3557 045e 0023     		movs	r3, #0
 3558 0460 00F00FBE 		b	.L167
 3559              	.L158:
 849:.\Protocolo.c **** 					}					
 850:.\Protocolo.c **** 				}
 851:.\Protocolo.c **** 				else{
 852:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 3560              		.loc 1 852 0
 3561 0464 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 853:.\Protocolo.c **** 					return 0;		
 3562              		.loc 1 853 0
 3563 0468 0023     		movs	r3, #0
 3564 046a 00F00ABE 		b	.L167
 3565              	.L156:
 854:.\Protocolo.c **** 				}
 855:.\Protocolo.c **** 			}
 856:.\Protocolo.c **** 			else{
 857:.\Protocolo.c **** 				CyDelay(900);
 3566              		.loc 1 857 0
 3567 046e 4FF46170 		mov	r0, #900
 3568 0472 FFF7FEFF 		bl	CyDelay
 858:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3569              		.loc 1 858 0
 3570 0476 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3571 047a 0346     		mov	r3, r0
 3572 047c FB73     		strb	r3, [r7, #15]
 859:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 3573              		.loc 1 859 0
 3574 047e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3575 0480 2E2B     		cmp	r3, #46
 3576 0482 06D0     		beq	.L207
 3577              		.loc 1 859 0 is_stmt 0 discriminator 1
 3578 0484 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3579 0486 582B     		cmp	r3, #88
 3580 0488 03D0     		beq	.L207
 3581              		.loc 1 859 0 discriminator 2
 3582 048a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3583 048c 822B     		cmp	r3, #130
 3584 048e 40F0F181 		bne	.L208
 3585              	.L207:
 860:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3586              		.loc 1 860 0 is_stmt 1
 3587 0492 4E4B     		ldr	r3, .L357
 3588 0494 1B78     		ldrb	r3, [r3]
 3589 0496 DBB2     		uxtb	r3, r3
 3590 0498 FF2B     		cmp	r3, #255
 3591 049a 40F0E681 		bne	.L209
 3592              		.loc 1 860 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 81


 3593 049e 4B4B     		ldr	r3, .L357
 3594 04a0 5B78     		ldrb	r3, [r3, #1]
 3595 04a2 DBB2     		uxtb	r3, r3
 3596 04a4 F62B     		cmp	r3, #246
 3597 04a6 40F0E081 		bne	.L209
 3598              		.loc 1 860 0 discriminator 2
 3599 04aa 484B     		ldr	r3, .L357
 3600 04ac DB78     		ldrb	r3, [r3, #3]
 3601 04ae DBB2     		uxtb	r3, r3
 3602 04b0 F92B     		cmp	r3, #249
 3603 04b2 40F0DA81 		bne	.L209
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3604              		.loc 1 861 0 is_stmt 1
 3605 04b6 0023     		movs	r3, #0
 3606 04b8 BB73     		strb	r3, [r7, #14]
 3607 04ba 16E0     		b	.L210
 3608              	.L213:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3609              		.loc 1 862 0
 3610 04bc 0023     		movs	r3, #0
 3611 04be FB73     		strb	r3, [r7, #15]
 3612 04c0 0DE0     		b	.L211
 3613              	.L212:
 863:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3614              		.loc 1 863 0 discriminator 3
 3615 04c2 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3616 04c4 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 3617 04c6 4248     		ldr	r0, .L357+4
 3618 04c8 1346     		mov	r3, r2
 3619 04ca 5B00     		lsls	r3, r3, #1
 3620 04cc 1344     		add	r3, r3, r2
 3621 04ce DB00     		lsls	r3, r3, #3
 3622 04d0 0B44     		add	r3, r3, r1
 3623 04d2 0344     		add	r3, r3, r0
 3624 04d4 0022     		movs	r2, #0
 3625 04d6 9A70     		strb	r2, [r3, #2]
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3626              		.loc 1 862 0 discriminator 3
 3627 04d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3628 04da 0133     		adds	r3, r3, #1
 3629 04dc FB73     		strb	r3, [r7, #15]
 3630              	.L211:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3631              		.loc 1 862 0 is_stmt 0 discriminator 1
 3632 04de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3633 04e0 172B     		cmp	r3, #23
 3634 04e2 EED9     		bls	.L212
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3635              		.loc 1 861 0 is_stmt 1 discriminator 2
 3636 04e4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3637 04e6 0133     		adds	r3, r3, #1
 3638 04e8 BB73     		strb	r3, [r7, #14]
 3639              	.L210:
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3640              		.loc 1 861 0 is_stmt 0 discriminator 1
 3641 04ea BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3642 04ec 022B     		cmp	r3, #2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 82


 3643 04ee E5D9     		bls	.L213
 864:.\Protocolo.c ****                     		}
 865:.\Protocolo.c ****                     	}                        
 866:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3644              		.loc 1 866 0 is_stmt 1
 3645 04f0 0023     		movs	r3, #0
 3646 04f2 FB73     		strb	r3, [r7, #15]
 3647 04f4 21E0     		b	.L214
 3648              	.L217:
 867:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3649              		.loc 1 867 0
 3650 04f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3651 04f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3652 04fa 0432     		adds	r2, r2, #4
 3653 04fc 3349     		ldr	r1, .L357
 3654 04fe 8A5C     		ldrb	r2, [r1, r2]
 3655 0500 D1B2     		uxtb	r1, r2
 3656 0502 334A     		ldr	r2, .L357+4
 3657 0504 1344     		add	r3, r3, r2
 3658 0506 0A46     		mov	r2, r1
 3659 0508 9A70     		strb	r2, [r3, #2]
 868:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3660              		.loc 1 868 0
 3661 050a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3662 050c 304A     		ldr	r2, .L357+4
 3663 050e 1344     		add	r3, r3, r2
 3664 0510 9B78     		ldrb	r3, [r3, #2]
 3665 0512 DBB2     		uxtb	r3, r3
 3666 0514 002B     		cmp	r3, #0
 3667 0516 08D0     		beq	.L215
 3668              		.loc 1 868 0 is_stmt 0 discriminator 1
 3669 0518 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3670 051a 2D4A     		ldr	r2, .L357+4
 3671 051c 1344     		add	r3, r3, r2
 3672 051e 9B78     		ldrb	r3, [r3, #2]
 3673 0520 DBB2     		uxtb	r3, r3
 3674 0522 03F0F003 		and	r3, r3, #240
 3675 0526 E02B     		cmp	r3, #224
 3676 0528 04D0     		beq	.L216
 3677              	.L215:
 869:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3678              		.loc 1 869 0 is_stmt 1
 3679 052a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 870:.\Protocolo.c **** 								return 0;
 3680              		.loc 1 870 0
 3681 052e 0023     		movs	r3, #0
 3682 0530 00F0A7BD 		b	.L167
 3683              	.L216:
 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3684              		.loc 1 866 0 discriminator 2
 3685 0534 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3686 0536 0133     		adds	r3, r3, #1
 3687 0538 FB73     		strb	r3, [r7, #15]
 3688              	.L214:
 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3689              		.loc 1 866 0 is_stmt 0 discriminator 1
 3690 053a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 83


 3691 053c 0B2B     		cmp	r3, #11
 3692 053e DAD9     		bls	.L217
 871:.\Protocolo.c **** 							}							
 872:.\Protocolo.c **** 						}
 873:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3693              		.loc 1 873 0 is_stmt 1
 3694 0540 0023     		movs	r3, #0
 3695 0542 FB73     		strb	r3, [r7, #15]
 3696 0544 24E0     		b	.L218
 3697              	.L221:
 874:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3698              		.loc 1 874 0
 3699 0546 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3700 0548 0C33     		adds	r3, r3, #12
 3701 054a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3702 054c 1132     		adds	r2, r2, #17
 3703 054e 1F49     		ldr	r1, .L357
 3704 0550 8A5C     		ldrb	r2, [r1, r2]
 3705 0552 D1B2     		uxtb	r1, r2
 3706 0554 1E4A     		ldr	r2, .L357+4
 3707 0556 1344     		add	r3, r3, r2
 3708 0558 0A46     		mov	r2, r1
 3709 055a 9A70     		strb	r2, [r3, #2]
 875:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3710              		.loc 1 875 0
 3711 055c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3712 055e 0C33     		adds	r3, r3, #12
 3713 0560 1B4A     		ldr	r2, .L357+4
 3714 0562 1344     		add	r3, r3, r2
 3715 0564 9B78     		ldrb	r3, [r3, #2]
 3716 0566 DBB2     		uxtb	r3, r3
 3717 0568 002B     		cmp	r3, #0
 3718 056a 09D0     		beq	.L219
 3719              		.loc 1 875 0 is_stmt 0 discriminator 1
 3720 056c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3721 056e 0C33     		adds	r3, r3, #12
 3722 0570 174A     		ldr	r2, .L357+4
 3723 0572 1344     		add	r3, r3, r2
 3724 0574 9B78     		ldrb	r3, [r3, #2]
 3725 0576 DBB2     		uxtb	r3, r3
 3726 0578 03F0F003 		and	r3, r3, #240
 3727 057c E02B     		cmp	r3, #224
 3728 057e 04D0     		beq	.L220
 3729              	.L219:
 876:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3730              		.loc 1 876 0 is_stmt 1
 3731 0580 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 877:.\Protocolo.c **** 								return 0;
 3732              		.loc 1 877 0
 3733 0584 0023     		movs	r3, #0
 3734 0586 00F07CBD 		b	.L167
 3735              	.L220:
 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3736              		.loc 1 873 0 discriminator 2
 3737 058a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3738 058c 0133     		adds	r3, r3, #1
 3739 058e FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 84


 3740              	.L218:
 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3741              		.loc 1 873 0 is_stmt 0 discriminator 1
 3742 0590 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3743 0592 0B2B     		cmp	r3, #11
 3744 0594 D7D9     		bls	.L221
 878:.\Protocolo.c **** 							}							
 879:.\Protocolo.c **** 						}
 880:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3745              		.loc 1 880 0 is_stmt 1
 3746 0596 0023     		movs	r3, #0
 3747 0598 FB73     		strb	r3, [r7, #15]
 3748 059a 0DE0     		b	.L222
 3749              	.L223:
 881:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3750              		.loc 1 881 0 discriminator 3
 3751 059c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3752 059e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3753 05a0 1E32     		adds	r2, r2, #30
 3754 05a2 0A49     		ldr	r1, .L357
 3755 05a4 8A5C     		ldrb	r2, [r1, r2]
 3756 05a6 D1B2     		uxtb	r1, r2
 3757 05a8 094A     		ldr	r2, .L357+4
 3758 05aa 1344     		add	r3, r3, r2
 3759 05ac 0A46     		mov	r2, r1
 3760 05ae 83F84A20 		strb	r2, [r3, #74]
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3761              		.loc 1 880 0 discriminator 3
 3762 05b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3763 05b4 0133     		adds	r3, r3, #1
 3764 05b6 FB73     		strb	r3, [r7, #15]
 3765              	.L222:
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3766              		.loc 1 880 0 is_stmt 0 discriminator 1
 3767 05b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3768 05ba 042B     		cmp	r3, #4
 3769 05bc EED9     		bls	.L223
 882:.\Protocolo.c **** 						}				
 883:.\Protocolo.c **** 						if(nmangueras==2){
 3770              		.loc 1 883 0 is_stmt 1
 3771 05be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3772 05c0 022B     		cmp	r3, #2
 3773 05c2 70D1     		bne	.L224
 884:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3774              		.loc 1 884 0
 3775 05c4 0023     		movs	r3, #0
 3776 05c6 FB73     		strb	r3, [r7, #15]
 3777 05c8 26E0     		b	.L225
 3778              	.L358:
 3779 05ca 00BF     		.align	2
 3780              	.L357:
 3781 05cc 00000000 		.word	Surtidor_rxBuffer
 3782 05d0 00000000 		.word	lado1
 3783              	.L228:
 885:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3784              		.loc 1 885 0
 3785 05d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 85


 3786 05d6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3787 05d8 2E32     		adds	r2, r2, #46
 3788 05da A949     		ldr	r1, .L359
 3789 05dc 8A5C     		ldrb	r2, [r1, r2]
 3790 05de D1B2     		uxtb	r1, r2
 3791 05e0 A84A     		ldr	r2, .L359+4
 3792 05e2 1344     		add	r3, r3, r2
 3793 05e4 0A46     		mov	r2, r1
 3794 05e6 9A76     		strb	r2, [r3, #26]
 886:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3795              		.loc 1 886 0
 3796 05e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3797 05ea A64A     		ldr	r2, .L359+4
 3798 05ec 1344     		add	r3, r3, r2
 3799 05ee 9B7E     		ldrb	r3, [r3, #26]
 3800 05f0 DBB2     		uxtb	r3, r3
 3801 05f2 002B     		cmp	r3, #0
 3802 05f4 08D0     		beq	.L226
 3803              		.loc 1 886 0 is_stmt 0 discriminator 1
 3804 05f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3805 05f8 A24A     		ldr	r2, .L359+4
 3806 05fa 1344     		add	r3, r3, r2
 3807 05fc 9B7E     		ldrb	r3, [r3, #26]
 3808 05fe DBB2     		uxtb	r3, r3
 3809 0600 03F0F003 		and	r3, r3, #240
 3810 0604 E02B     		cmp	r3, #224
 3811 0606 04D0     		beq	.L227
 3812              	.L226:
 887:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3813              		.loc 1 887 0 is_stmt 1
 3814 0608 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 888:.\Protocolo.c **** 									return 0;
 3815              		.loc 1 888 0
 3816 060c 0023     		movs	r3, #0
 3817 060e 00F038BD 		b	.L167
 3818              	.L227:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3819              		.loc 1 884 0 discriminator 2
 3820 0612 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3821 0614 0133     		adds	r3, r3, #1
 3822 0616 FB73     		strb	r3, [r7, #15]
 3823              	.L225:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3824              		.loc 1 884 0 is_stmt 0 discriminator 1
 3825 0618 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3826 061a 0B2B     		cmp	r3, #11
 3827 061c DAD9     		bls	.L228
 889:.\Protocolo.c **** 								}								
 890:.\Protocolo.c **** 							}
 891:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3828              		.loc 1 891 0 is_stmt 1
 3829 061e 0023     		movs	r3, #0
 3830 0620 FB73     		strb	r3, [r7, #15]
 3831 0622 24E0     		b	.L229
 3832              	.L232:
 892:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3833              		.loc 1 892 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 86


 3834 0624 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3835 0626 0C33     		adds	r3, r3, #12
 3836 0628 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3837 062a 3B32     		adds	r2, r2, #59
 3838 062c 9449     		ldr	r1, .L359
 3839 062e 8A5C     		ldrb	r2, [r1, r2]
 3840 0630 D1B2     		uxtb	r1, r2
 3841 0632 944A     		ldr	r2, .L359+4
 3842 0634 1344     		add	r3, r3, r2
 3843 0636 0A46     		mov	r2, r1
 3844 0638 9A76     		strb	r2, [r3, #26]
 893:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3845              		.loc 1 893 0
 3846 063a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3847 063c 0C33     		adds	r3, r3, #12
 3848 063e 914A     		ldr	r2, .L359+4
 3849 0640 1344     		add	r3, r3, r2
 3850 0642 9B7E     		ldrb	r3, [r3, #26]
 3851 0644 DBB2     		uxtb	r3, r3
 3852 0646 002B     		cmp	r3, #0
 3853 0648 09D0     		beq	.L230
 3854              		.loc 1 893 0 is_stmt 0 discriminator 1
 3855 064a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3856 064c 0C33     		adds	r3, r3, #12
 3857 064e 8D4A     		ldr	r2, .L359+4
 3858 0650 1344     		add	r3, r3, r2
 3859 0652 9B7E     		ldrb	r3, [r3, #26]
 3860 0654 DBB2     		uxtb	r3, r3
 3861 0656 03F0F003 		and	r3, r3, #240
 3862 065a E02B     		cmp	r3, #224
 3863 065c 04D0     		beq	.L231
 3864              	.L230:
 894:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3865              		.loc 1 894 0 is_stmt 1
 3866 065e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 895:.\Protocolo.c **** 									return 0;
 3867              		.loc 1 895 0
 3868 0662 0023     		movs	r3, #0
 3869 0664 00F00DBD 		b	.L167
 3870              	.L231:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3871              		.loc 1 891 0 discriminator 2
 3872 0668 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3873 066a 0133     		adds	r3, r3, #1
 3874 066c FB73     		strb	r3, [r7, #15]
 3875              	.L229:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3876              		.loc 1 891 0 is_stmt 0 discriminator 1
 3877 066e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3878 0670 0B2B     		cmp	r3, #11
 3879 0672 D7D9     		bls	.L232
 896:.\Protocolo.c **** 								}								
 897:.\Protocolo.c **** 							}
 898:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3880              		.loc 1 898 0 is_stmt 1
 3881 0674 0023     		movs	r3, #0
 3882 0676 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 87


 3883 0678 0DE0     		b	.L233
 3884              	.L234:
 899:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3885              		.loc 1 899 0 discriminator 3
 3886 067a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3887 067c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3888 067e 4832     		adds	r2, r2, #72
 3889 0680 7F49     		ldr	r1, .L359
 3890 0682 8A5C     		ldrb	r2, [r1, r2]
 3891 0684 D1B2     		uxtb	r1, r2
 3892 0686 7F4A     		ldr	r2, .L359+4
 3893 0688 1344     		add	r3, r3, r2
 3894 068a 0A46     		mov	r2, r1
 3895 068c 83F84F20 		strb	r2, [r3, #79]
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3896              		.loc 1 898 0 discriminator 3
 3897 0690 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3898 0692 0133     		adds	r3, r3, #1
 3899 0694 FB73     		strb	r3, [r7, #15]
 3900              	.L233:
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3901              		.loc 1 898 0 is_stmt 0 discriminator 1
 3902 0696 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3903 0698 042B     		cmp	r3, #4
 3904 069a EED9     		bls	.L234
 900:.\Protocolo.c **** 							}
 901:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3905              		.loc 1 901 0 is_stmt 1
 3906 069c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 902:.\Protocolo.c ****     						return 2;                            
 3907              		.loc 1 902 0
 3908 06a0 0223     		movs	r3, #2
 3909 06a2 00F0EEBC 		b	.L167
 3910              	.L224:
 903:.\Protocolo.c **** 						}
 904:.\Protocolo.c **** 						if(nmangueras==3){
 3911              		.loc 1 904 0
 3912 06a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3913 06a8 032B     		cmp	r3, #3
 3914 06aa 40F0D980 		bne	.L235
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3915              		.loc 1 905 0
 3916 06ae 0023     		movs	r3, #0
 3917 06b0 FB73     		strb	r3, [r7, #15]
 3918 06b2 21E0     		b	.L236
 3919              	.L239:
 906:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3920              		.loc 1 906 0
 3921 06b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3922 06b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3923 06b8 2E32     		adds	r2, r2, #46
 3924 06ba 7149     		ldr	r1, .L359
 3925 06bc 8A5C     		ldrb	r2, [r1, r2]
 3926 06be D1B2     		uxtb	r1, r2
 3927 06c0 704A     		ldr	r2, .L359+4
 3928 06c2 1344     		add	r3, r3, r2
 3929 06c4 0A46     		mov	r2, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 88


 3930 06c6 9A76     		strb	r2, [r3, #26]
 907:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3931              		.loc 1 907 0
 3932 06c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3933 06ca 6E4A     		ldr	r2, .L359+4
 3934 06cc 1344     		add	r3, r3, r2
 3935 06ce 9B7E     		ldrb	r3, [r3, #26]
 3936 06d0 DBB2     		uxtb	r3, r3
 3937 06d2 002B     		cmp	r3, #0
 3938 06d4 08D0     		beq	.L237
 3939              		.loc 1 907 0 is_stmt 0 discriminator 1
 3940 06d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3941 06d8 6A4A     		ldr	r2, .L359+4
 3942 06da 1344     		add	r3, r3, r2
 3943 06dc 9B7E     		ldrb	r3, [r3, #26]
 3944 06de DBB2     		uxtb	r3, r3
 3945 06e0 03F0F003 		and	r3, r3, #240
 3946 06e4 E02B     		cmp	r3, #224
 3947 06e6 04D0     		beq	.L238
 3948              	.L237:
 908:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3949              		.loc 1 908 0 is_stmt 1
 3950 06e8 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 909:.\Protocolo.c **** 									return 0;
 3951              		.loc 1 909 0
 3952 06ec 0023     		movs	r3, #0
 3953 06ee 00F0C8BC 		b	.L167
 3954              	.L238:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3955              		.loc 1 905 0 discriminator 2
 3956 06f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3957 06f4 0133     		adds	r3, r3, #1
 3958 06f6 FB73     		strb	r3, [r7, #15]
 3959              	.L236:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3960              		.loc 1 905 0 is_stmt 0 discriminator 1
 3961 06f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3962 06fa 0B2B     		cmp	r3, #11
 3963 06fc DAD9     		bls	.L239
 910:.\Protocolo.c **** 								}								
 911:.\Protocolo.c **** 							}
 912:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3964              		.loc 1 912 0 is_stmt 1
 3965 06fe 0023     		movs	r3, #0
 3966 0700 FB73     		strb	r3, [r7, #15]
 3967 0702 24E0     		b	.L240
 3968              	.L243:
 913:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3969              		.loc 1 913 0
 3970 0704 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3971 0706 0C33     		adds	r3, r3, #12
 3972 0708 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3973 070a 3B32     		adds	r2, r2, #59
 3974 070c 5C49     		ldr	r1, .L359
 3975 070e 8A5C     		ldrb	r2, [r1, r2]
 3976 0710 D1B2     		uxtb	r1, r2
 3977 0712 5C4A     		ldr	r2, .L359+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 89


 3978 0714 1344     		add	r3, r3, r2
 3979 0716 0A46     		mov	r2, r1
 3980 0718 9A76     		strb	r2, [r3, #26]
 914:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3981              		.loc 1 914 0
 3982 071a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3983 071c 0C33     		adds	r3, r3, #12
 3984 071e 594A     		ldr	r2, .L359+4
 3985 0720 1344     		add	r3, r3, r2
 3986 0722 9B7E     		ldrb	r3, [r3, #26]
 3987 0724 DBB2     		uxtb	r3, r3
 3988 0726 002B     		cmp	r3, #0
 3989 0728 09D0     		beq	.L241
 3990              		.loc 1 914 0 is_stmt 0 discriminator 1
 3991 072a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3992 072c 0C33     		adds	r3, r3, #12
 3993 072e 554A     		ldr	r2, .L359+4
 3994 0730 1344     		add	r3, r3, r2
 3995 0732 9B7E     		ldrb	r3, [r3, #26]
 3996 0734 DBB2     		uxtb	r3, r3
 3997 0736 03F0F003 		and	r3, r3, #240
 3998 073a E02B     		cmp	r3, #224
 3999 073c 04D0     		beq	.L242
 4000              	.L241:
 915:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4001              		.loc 1 915 0 is_stmt 1
 4002 073e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 916:.\Protocolo.c **** 									return 0;
 4003              		.loc 1 916 0
 4004 0742 0023     		movs	r3, #0
 4005 0744 00F09DBC 		b	.L167
 4006              	.L242:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4007              		.loc 1 912 0 discriminator 2
 4008 0748 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4009 074a 0133     		adds	r3, r3, #1
 4010 074c FB73     		strb	r3, [r7, #15]
 4011              	.L240:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4012              		.loc 1 912 0 is_stmt 0 discriminator 1
 4013 074e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4014 0750 0B2B     		cmp	r3, #11
 4015 0752 D7D9     		bls	.L243
 917:.\Protocolo.c **** 								}								
 918:.\Protocolo.c **** 							}
 919:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4016              		.loc 1 919 0 is_stmt 1
 4017 0754 0023     		movs	r3, #0
 4018 0756 FB73     		strb	r3, [r7, #15]
 4019 0758 0DE0     		b	.L244
 4020              	.L245:
 920:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4021              		.loc 1 920 0 discriminator 3
 4022 075a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4023 075c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4024 075e 4832     		adds	r2, r2, #72
 4025 0760 4749     		ldr	r1, .L359
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 90


 4026 0762 8A5C     		ldrb	r2, [r1, r2]
 4027 0764 D1B2     		uxtb	r1, r2
 4028 0766 474A     		ldr	r2, .L359+4
 4029 0768 1344     		add	r3, r3, r2
 4030 076a 0A46     		mov	r2, r1
 4031 076c 83F84F20 		strb	r2, [r3, #79]
 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4032              		.loc 1 919 0 discriminator 3
 4033 0770 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4034 0772 0133     		adds	r3, r3, #1
 4035 0774 FB73     		strb	r3, [r7, #15]
 4036              	.L244:
 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4037              		.loc 1 919 0 is_stmt 0 discriminator 1
 4038 0776 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4039 0778 042B     		cmp	r3, #4
 4040 077a EED9     		bls	.L245
 921:.\Protocolo.c **** 							}					
 922:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4041              		.loc 1 922 0 is_stmt 1
 4042 077c 0023     		movs	r3, #0
 4043 077e FB73     		strb	r3, [r7, #15]
 4044 0780 24E0     		b	.L246
 4045              	.L249:
 923:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4046              		.loc 1 923 0
 4047 0782 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4048 0784 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4049 0786 5832     		adds	r2, r2, #88
 4050 0788 3D49     		ldr	r1, .L359
 4051 078a 8A5C     		ldrb	r2, [r1, r2]
 4052 078c D1B2     		uxtb	r1, r2
 4053 078e 3D4A     		ldr	r2, .L359+4
 4054 0790 1344     		add	r3, r3, r2
 4055 0792 0A46     		mov	r2, r1
 4056 0794 83F83220 		strb	r2, [r3, #50]
 924:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 4057              		.loc 1 924 0
 4058 0798 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4059 079a 3A4A     		ldr	r2, .L359+4
 4060 079c 1344     		add	r3, r3, r2
 4061 079e 93F83230 		ldrb	r3, [r3, #50]
 4062 07a2 DBB2     		uxtb	r3, r3
 4063 07a4 002B     		cmp	r3, #0
 4064 07a6 09D0     		beq	.L247
 4065              		.loc 1 924 0 is_stmt 0 discriminator 1
 4066 07a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4067 07aa 364A     		ldr	r2, .L359+4
 4068 07ac 1344     		add	r3, r3, r2
 4069 07ae 93F83230 		ldrb	r3, [r3, #50]
 4070 07b2 DBB2     		uxtb	r3, r3
 4071 07b4 03F0F003 		and	r3, r3, #240
 4072 07b8 E02B     		cmp	r3, #224
 4073 07ba 04D0     		beq	.L248
 4074              	.L247:
 925:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4075              		.loc 1 925 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 91


 4076 07bc FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 926:.\Protocolo.c **** 									return 0;
 4077              		.loc 1 926 0
 4078 07c0 0023     		movs	r3, #0
 4079 07c2 00F05EBC 		b	.L167
 4080              	.L248:
 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4081              		.loc 1 922 0 discriminator 2
 4082 07c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4083 07c8 0133     		adds	r3, r3, #1
 4084 07ca FB73     		strb	r3, [r7, #15]
 4085              	.L246:
 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4086              		.loc 1 922 0 is_stmt 0 discriminator 1
 4087 07cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4088 07ce 0B2B     		cmp	r3, #11
 4089 07d0 D7D9     		bls	.L249
 927:.\Protocolo.c **** 								}								
 928:.\Protocolo.c **** 							}
 929:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4090              		.loc 1 929 0 is_stmt 1
 4091 07d2 0023     		movs	r3, #0
 4092 07d4 FB73     		strb	r3, [r7, #15]
 4093 07d6 27E0     		b	.L250
 4094              	.L253:
 930:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4095              		.loc 1 930 0
 4096 07d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4097 07da 0C33     		adds	r3, r3, #12
 4098 07dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4099 07de 6532     		adds	r2, r2, #101
 4100 07e0 2749     		ldr	r1, .L359
 4101 07e2 8A5C     		ldrb	r2, [r1, r2]
 4102 07e4 D1B2     		uxtb	r1, r2
 4103 07e6 274A     		ldr	r2, .L359+4
 4104 07e8 1344     		add	r3, r3, r2
 4105 07ea 0A46     		mov	r2, r1
 4106 07ec 83F83220 		strb	r2, [r3, #50]
 931:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 4107              		.loc 1 931 0
 4108 07f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4109 07f2 0C33     		adds	r3, r3, #12
 4110 07f4 234A     		ldr	r2, .L359+4
 4111 07f6 1344     		add	r3, r3, r2
 4112 07f8 93F83230 		ldrb	r3, [r3, #50]
 4113 07fc DBB2     		uxtb	r3, r3
 4114 07fe 002B     		cmp	r3, #0
 4115 0800 0AD0     		beq	.L251
 4116              		.loc 1 931 0 is_stmt 0 discriminator 1
 4117 0802 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4118 0804 0C33     		adds	r3, r3, #12
 4119 0806 1F4A     		ldr	r2, .L359+4
 4120 0808 1344     		add	r3, r3, r2
 4121 080a 93F83230 		ldrb	r3, [r3, #50]
 4122 080e DBB2     		uxtb	r3, r3
 4123 0810 03F0F003 		and	r3, r3, #240
 4124 0814 E02B     		cmp	r3, #224
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 92


 4125 0816 04D0     		beq	.L252
 4126              	.L251:
 932:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4127              		.loc 1 932 0 is_stmt 1
 4128 0818 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 933:.\Protocolo.c **** 									return 0;
 4129              		.loc 1 933 0
 4130 081c 0023     		movs	r3, #0
 4131 081e 00F030BC 		b	.L167
 4132              	.L252:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4133              		.loc 1 929 0 discriminator 2
 4134 0822 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4135 0824 0133     		adds	r3, r3, #1
 4136 0826 FB73     		strb	r3, [r7, #15]
 4137              	.L250:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4138              		.loc 1 929 0 is_stmt 0 discriminator 1
 4139 0828 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4140 082a 0B2B     		cmp	r3, #11
 4141 082c D4D9     		bls	.L253
 934:.\Protocolo.c **** 								}								
 935:.\Protocolo.c **** 							}
 936:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4142              		.loc 1 936 0 is_stmt 1
 4143 082e 0023     		movs	r3, #0
 4144 0830 FB73     		strb	r3, [r7, #15]
 4145 0832 0DE0     		b	.L254
 4146              	.L255:
 937:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4147              		.loc 1 937 0 discriminator 3
 4148 0834 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4149 0836 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4150 0838 7232     		adds	r2, r2, #114
 4151 083a 1149     		ldr	r1, .L359
 4152 083c 8A5C     		ldrb	r2, [r1, r2]
 4153 083e D1B2     		uxtb	r1, r2
 4154 0840 104A     		ldr	r2, .L359+4
 4155 0842 1344     		add	r3, r3, r2
 4156 0844 0A46     		mov	r2, r1
 4157 0846 83F85420 		strb	r2, [r3, #84]
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4158              		.loc 1 936 0 discriminator 3
 4159 084a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4160 084c 0133     		adds	r3, r3, #1
 4161 084e FB73     		strb	r3, [r7, #15]
 4162              	.L254:
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4163              		.loc 1 936 0 is_stmt 0 discriminator 1
 4164 0850 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4165 0852 042B     		cmp	r3, #4
 4166 0854 EED9     		bls	.L255
 938:.\Protocolo.c **** 							}
 939:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4167              		.loc 1 939 0 is_stmt 1
 4168 0856 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 940:.\Protocolo.c ****     						return 3;                            
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 93


 4169              		.loc 1 940 0
 4170 085a 0323     		movs	r3, #3
 4171 085c 00F011BC 		b	.L167
 4172              	.L235:
 941:.\Protocolo.c **** 						}
 942:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4173              		.loc 1 942 0
 4174 0860 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 943:.\Protocolo.c **** 						return 1;			
 4175              		.loc 1 943 0
 4176 0864 0123     		movs	r3, #1
 4177 0866 00F00CBC 		b	.L167
 4178              	.L209:
 944:.\Protocolo.c **** 					}
 945:.\Protocolo.c **** 					else{
 946:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4179              		.loc 1 946 0
 4180 086a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 947:.\Protocolo.c **** 						return 0;					
 4181              		.loc 1 947 0
 4182 086e 0023     		movs	r3, #0
 4183 0870 00F007BC 		b	.L167
 4184              	.L208:
 948:.\Protocolo.c **** 					}
 949:.\Protocolo.c **** 				}
 950:.\Protocolo.c **** 				else{
 951:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4185              		.loc 1 951 0
 4186 0874 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 952:.\Protocolo.c **** 					return 0;		
 4187              		.loc 1 952 0
 4188 0878 0023     		movs	r3, #0
 4189 087a 00F002BC 		b	.L167
 4190              	.L360:
 4191 087e 00BF     		.align	2
 4192              	.L359:
 4193 0880 00000000 		.word	Surtidor_rxBuffer
 4194 0884 00000000 		.word	lado1
 4195              	.L155:
 953:.\Protocolo.c **** 				}	
 954:.\Protocolo.c **** 			}
 955:.\Protocolo.c **** 		}
 956:.\Protocolo.c **** 		else{
 957:.\Protocolo.c **** 			if(version[1]!=7){
 4196              		.loc 1 957 0
 4197 0888 A24B     		ldr	r3, .L361
 4198 088a 5B78     		ldrb	r3, [r3, #1]
 4199 088c DBB2     		uxtb	r3, r3
 4200 088e 072B     		cmp	r3, #7
 4201 0890 00F0FC81 		beq	.L256
 958:.\Protocolo.c **** 				CyDelay(900);
 4202              		.loc 1 958 0
 4203 0894 4FF46170 		mov	r0, #900
 4204 0898 FFF7FEFF 		bl	CyDelay
 959:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4205              		.loc 1 959 0
 4206 089c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 94


 4207 08a0 0346     		mov	r3, r0
 4208 08a2 FB73     		strb	r3, [r7, #15]
 960:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){				
 4209              		.loc 1 960 0
 4210 08a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4211 08a6 222B     		cmp	r3, #34
 4212 08a8 06D0     		beq	.L257
 4213              		.loc 1 960 0 is_stmt 0 discriminator 1
 4214 08aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4215 08ac 402B     		cmp	r3, #64
 4216 08ae 03D0     		beq	.L257
 4217              		.loc 1 960 0 discriminator 2
 4218 08b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4219 08b2 5E2B     		cmp	r3, #94
 4220 08b4 40F0E681 		bne	.L258
 4221              	.L257:
 961:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4222              		.loc 1 961 0 is_stmt 1
 4223 08b8 974B     		ldr	r3, .L361+4
 4224 08ba 1B78     		ldrb	r3, [r3]
 4225 08bc DBB2     		uxtb	r3, r3
 4226 08be FF2B     		cmp	r3, #255
 4227 08c0 40F0DC81 		bne	.L259
 4228              		.loc 1 961 0 is_stmt 0 discriminator 1
 4229 08c4 944B     		ldr	r3, .L361+4
 4230 08c6 5B78     		ldrb	r3, [r3, #1]
 4231 08c8 DBB2     		uxtb	r3, r3
 4232 08ca F62B     		cmp	r3, #246
 4233 08cc 40F0D681 		bne	.L259
 4234              		.loc 1 961 0 discriminator 2
 4235 08d0 914B     		ldr	r3, .L361+4
 4236 08d2 DB78     		ldrb	r3, [r3, #3]
 4237 08d4 DBB2     		uxtb	r3, r3
 4238 08d6 F92B     		cmp	r3, #249
 4239 08d8 40F0D081 		bne	.L259
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4240              		.loc 1 962 0 is_stmt 1
 4241 08dc 0023     		movs	r3, #0
 4242 08de BB73     		strb	r3, [r7, #14]
 4243 08e0 16E0     		b	.L260
 4244              	.L263:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4245              		.loc 1 963 0
 4246 08e2 0023     		movs	r3, #0
 4247 08e4 FB73     		strb	r3, [r7, #15]
 4248 08e6 0DE0     		b	.L261
 4249              	.L262:
 964:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4250              		.loc 1 964 0 discriminator 3
 4251 08e8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4252 08ea F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4253 08ec 8B48     		ldr	r0, .L361+8
 4254 08ee 1346     		mov	r3, r2
 4255 08f0 5B00     		lsls	r3, r3, #1
 4256 08f2 1344     		add	r3, r3, r2
 4257 08f4 DB00     		lsls	r3, r3, #3
 4258 08f6 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 95


 4259 08f8 0344     		add	r3, r3, r0
 4260 08fa 0022     		movs	r2, #0
 4261 08fc 9A70     		strb	r2, [r3, #2]
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4262              		.loc 1 963 0 discriminator 3
 4263 08fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4264 0900 0133     		adds	r3, r3, #1
 4265 0902 FB73     		strb	r3, [r7, #15]
 4266              	.L261:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4267              		.loc 1 963 0 is_stmt 0 discriminator 1
 4268 0904 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4269 0906 172B     		cmp	r3, #23
 4270 0908 EED9     		bls	.L262
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4271              		.loc 1 962 0 is_stmt 1 discriminator 2
 4272 090a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4273 090c 0133     		adds	r3, r3, #1
 4274 090e BB73     		strb	r3, [r7, #14]
 4275              	.L260:
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4276              		.loc 1 962 0 is_stmt 0 discriminator 1
 4277 0910 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4278 0912 022B     		cmp	r3, #2
 4279 0914 E5D9     		bls	.L263
 965:.\Protocolo.c ****                     		}
 966:.\Protocolo.c ****                     	}                        
 967:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4280              		.loc 1 967 0 is_stmt 1
 4281 0916 0023     		movs	r3, #0
 4282 0918 FB73     		strb	r3, [r7, #15]
 4283 091a 20E0     		b	.L264
 4284              	.L267:
 968:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4285              		.loc 1 968 0
 4286 091c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4287 091e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4288 0920 0432     		adds	r2, r2, #4
 4289 0922 7D49     		ldr	r1, .L361+4
 4290 0924 8A5C     		ldrb	r2, [r1, r2]
 4291 0926 D1B2     		uxtb	r1, r2
 4292 0928 7C4A     		ldr	r2, .L361+8
 4293 092a 1344     		add	r3, r3, r2
 4294 092c 0A46     		mov	r2, r1
 4295 092e 9A70     		strb	r2, [r3, #2]
 969:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4296              		.loc 1 969 0
 4297 0930 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4298 0932 7A4A     		ldr	r2, .L361+8
 4299 0934 1344     		add	r3, r3, r2
 4300 0936 9B78     		ldrb	r3, [r3, #2]
 4301 0938 DBB2     		uxtb	r3, r3
 4302 093a 002B     		cmp	r3, #0
 4303 093c 08D0     		beq	.L265
 4304              		.loc 1 969 0 is_stmt 0 discriminator 1
 4305 093e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4306 0940 764A     		ldr	r2, .L361+8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 96


 4307 0942 1344     		add	r3, r3, r2
 4308 0944 9B78     		ldrb	r3, [r3, #2]
 4309 0946 DBB2     		uxtb	r3, r3
 4310 0948 03F0F003 		and	r3, r3, #240
 4311 094c E02B     		cmp	r3, #224
 4312 094e 03D0     		beq	.L266
 4313              	.L265:
 970:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4314              		.loc 1 970 0 is_stmt 1
 4315 0950 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 971:.\Protocolo.c **** 								return 0;
 4316              		.loc 1 971 0
 4317 0954 0023     		movs	r3, #0
 4318 0956 94E3     		b	.L167
 4319              	.L266:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4320              		.loc 1 967 0 discriminator 2
 4321 0958 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4322 095a 0133     		adds	r3, r3, #1
 4323 095c FB73     		strb	r3, [r7, #15]
 4324              	.L264:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4325              		.loc 1 967 0 is_stmt 0 discriminator 1
 4326 095e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4327 0960 072B     		cmp	r3, #7
 4328 0962 DBD9     		bls	.L267
 972:.\Protocolo.c **** 							}							
 973:.\Protocolo.c **** 						}
 974:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4329              		.loc 1 974 0 is_stmt 1
 4330 0964 0023     		movs	r3, #0
 4331 0966 FB73     		strb	r3, [r7, #15]
 4332 0968 23E0     		b	.L268
 4333              	.L271:
 975:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4334              		.loc 1 975 0
 4335 096a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4336 096c 0C33     		adds	r3, r3, #12
 4337 096e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4338 0970 0D32     		adds	r2, r2, #13
 4339 0972 6949     		ldr	r1, .L361+4
 4340 0974 8A5C     		ldrb	r2, [r1, r2]
 4341 0976 D1B2     		uxtb	r1, r2
 4342 0978 684A     		ldr	r2, .L361+8
 4343 097a 1344     		add	r3, r3, r2
 4344 097c 0A46     		mov	r2, r1
 4345 097e 9A70     		strb	r2, [r3, #2]
 976:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4346              		.loc 1 976 0
 4347 0980 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4348 0982 0C33     		adds	r3, r3, #12
 4349 0984 654A     		ldr	r2, .L361+8
 4350 0986 1344     		add	r3, r3, r2
 4351 0988 9B78     		ldrb	r3, [r3, #2]
 4352 098a DBB2     		uxtb	r3, r3
 4353 098c 002B     		cmp	r3, #0
 4354 098e 09D0     		beq	.L269
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 97


 4355              		.loc 1 976 0 is_stmt 0 discriminator 1
 4356 0990 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4357 0992 0C33     		adds	r3, r3, #12
 4358 0994 614A     		ldr	r2, .L361+8
 4359 0996 1344     		add	r3, r3, r2
 4360 0998 9B78     		ldrb	r3, [r3, #2]
 4361 099a DBB2     		uxtb	r3, r3
 4362 099c 03F0F003 		and	r3, r3, #240
 4363 09a0 E02B     		cmp	r3, #224
 4364 09a2 03D0     		beq	.L270
 4365              	.L269:
 977:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4366              		.loc 1 977 0 is_stmt 1
 4367 09a4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 978:.\Protocolo.c **** 								return 0;
 4368              		.loc 1 978 0
 4369 09a8 0023     		movs	r3, #0
 4370 09aa 6AE3     		b	.L167
 4371              	.L270:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4372              		.loc 1 974 0 discriminator 2
 4373 09ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4374 09ae 0133     		adds	r3, r3, #1
 4375 09b0 FB73     		strb	r3, [r7, #15]
 4376              	.L268:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4377              		.loc 1 974 0 is_stmt 0 discriminator 1
 4378 09b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4379 09b4 072B     		cmp	r3, #7
 4380 09b6 D8D9     		bls	.L271
 979:.\Protocolo.c **** 							}							
 980:.\Protocolo.c **** 						}
 981:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 4381              		.loc 1 981 0 is_stmt 1
 4382 09b8 0023     		movs	r3, #0
 4383 09ba FB73     		strb	r3, [r7, #15]
 4384 09bc 0DE0     		b	.L272
 4385              	.L273:
 982:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4386              		.loc 1 982 0 discriminator 3
 4387 09be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4388 09c0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4389 09c2 1632     		adds	r2, r2, #22
 4390 09c4 5449     		ldr	r1, .L361+4
 4391 09c6 8A5C     		ldrb	r2, [r1, r2]
 4392 09c8 D1B2     		uxtb	r1, r2
 4393 09ca 544A     		ldr	r2, .L361+8
 4394 09cc 1344     		add	r3, r3, r2
 4395 09ce 0A46     		mov	r2, r1
 4396 09d0 83F84A20 		strb	r2, [r3, #74]
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4397              		.loc 1 981 0 discriminator 3
 4398 09d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4399 09d6 0133     		adds	r3, r3, #1
 4400 09d8 FB73     		strb	r3, [r7, #15]
 4401              	.L272:
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 98


 4402              		.loc 1 981 0 is_stmt 0 discriminator 1
 4403 09da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4404 09dc 032B     		cmp	r3, #3
 4405 09de EED9     		bls	.L273
 983:.\Protocolo.c **** 						}				
 984:.\Protocolo.c **** 						if(nmangueras==2){
 4406              		.loc 1 984 0 is_stmt 1
 4407 09e0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4408 09e2 022B     		cmp	r3, #2
 4409 09e4 68D1     		bne	.L274
 985:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4410              		.loc 1 985 0
 4411 09e6 0023     		movs	r3, #0
 4412 09e8 FB73     		strb	r3, [r7, #15]
 4413 09ea 20E0     		b	.L275
 4414              	.L278:
 986:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4415              		.loc 1 986 0
 4416 09ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4417 09ee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4418 09f0 2232     		adds	r2, r2, #34
 4419 09f2 4949     		ldr	r1, .L361+4
 4420 09f4 8A5C     		ldrb	r2, [r1, r2]
 4421 09f6 D1B2     		uxtb	r1, r2
 4422 09f8 484A     		ldr	r2, .L361+8
 4423 09fa 1344     		add	r3, r3, r2
 4424 09fc 0A46     		mov	r2, r1
 4425 09fe 9A76     		strb	r2, [r3, #26]
 987:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4426              		.loc 1 987 0
 4427 0a00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4428 0a02 464A     		ldr	r2, .L361+8
 4429 0a04 1344     		add	r3, r3, r2
 4430 0a06 9B7E     		ldrb	r3, [r3, #26]
 4431 0a08 DBB2     		uxtb	r3, r3
 4432 0a0a 002B     		cmp	r3, #0
 4433 0a0c 08D0     		beq	.L276
 4434              		.loc 1 987 0 is_stmt 0 discriminator 1
 4435 0a0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4436 0a10 424A     		ldr	r2, .L361+8
 4437 0a12 1344     		add	r3, r3, r2
 4438 0a14 9B7E     		ldrb	r3, [r3, #26]
 4439 0a16 DBB2     		uxtb	r3, r3
 4440 0a18 03F0F003 		and	r3, r3, #240
 4441 0a1c E02B     		cmp	r3, #224
 4442 0a1e 03D0     		beq	.L277
 4443              	.L276:
 988:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4444              		.loc 1 988 0 is_stmt 1
 4445 0a20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 989:.\Protocolo.c **** 									return 0;
 4446              		.loc 1 989 0
 4447 0a24 0023     		movs	r3, #0
 4448 0a26 2CE3     		b	.L167
 4449              	.L277:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4450              		.loc 1 985 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 99


 4451 0a28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4452 0a2a 0133     		adds	r3, r3, #1
 4453 0a2c FB73     		strb	r3, [r7, #15]
 4454              	.L275:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4455              		.loc 1 985 0 is_stmt 0 discriminator 1
 4456 0a2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4457 0a30 072B     		cmp	r3, #7
 4458 0a32 DBD9     		bls	.L278
 990:.\Protocolo.c **** 								}								
 991:.\Protocolo.c **** 							}
 992:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4459              		.loc 1 992 0 is_stmt 1
 4460 0a34 0023     		movs	r3, #0
 4461 0a36 FB73     		strb	r3, [r7, #15]
 4462 0a38 23E0     		b	.L279
 4463              	.L282:
 993:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4464              		.loc 1 993 0
 4465 0a3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4466 0a3c 0C33     		adds	r3, r3, #12
 4467 0a3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4468 0a40 2B32     		adds	r2, r2, #43
 4469 0a42 3549     		ldr	r1, .L361+4
 4470 0a44 8A5C     		ldrb	r2, [r1, r2]
 4471 0a46 D1B2     		uxtb	r1, r2
 4472 0a48 344A     		ldr	r2, .L361+8
 4473 0a4a 1344     		add	r3, r3, r2
 4474 0a4c 0A46     		mov	r2, r1
 4475 0a4e 9A76     		strb	r2, [r3, #26]
 994:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4476              		.loc 1 994 0
 4477 0a50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4478 0a52 0C33     		adds	r3, r3, #12
 4479 0a54 314A     		ldr	r2, .L361+8
 4480 0a56 1344     		add	r3, r3, r2
 4481 0a58 9B7E     		ldrb	r3, [r3, #26]
 4482 0a5a DBB2     		uxtb	r3, r3
 4483 0a5c 002B     		cmp	r3, #0
 4484 0a5e 09D0     		beq	.L280
 4485              		.loc 1 994 0 is_stmt 0 discriminator 1
 4486 0a60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4487 0a62 0C33     		adds	r3, r3, #12
 4488 0a64 2D4A     		ldr	r2, .L361+8
 4489 0a66 1344     		add	r3, r3, r2
 4490 0a68 9B7E     		ldrb	r3, [r3, #26]
 4491 0a6a DBB2     		uxtb	r3, r3
 4492 0a6c 03F0F003 		and	r3, r3, #240
 4493 0a70 E02B     		cmp	r3, #224
 4494 0a72 03D0     		beq	.L281
 4495              	.L280:
 995:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4496              		.loc 1 995 0 is_stmt 1
 4497 0a74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 996:.\Protocolo.c **** 									return 0;
 4498              		.loc 1 996 0
 4499 0a78 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 100


 4500 0a7a 02E3     		b	.L167
 4501              	.L281:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4502              		.loc 1 992 0 discriminator 2
 4503 0a7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4504 0a7e 0133     		adds	r3, r3, #1
 4505 0a80 FB73     		strb	r3, [r7, #15]
 4506              	.L279:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4507              		.loc 1 992 0 is_stmt 0 discriminator 1
 4508 0a82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4509 0a84 072B     		cmp	r3, #7
 4510 0a86 D8D9     		bls	.L282
 997:.\Protocolo.c **** 								}								
 998:.\Protocolo.c **** 							}
 999:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4511              		.loc 1 999 0 is_stmt 1
 4512 0a88 0023     		movs	r3, #0
 4513 0a8a FB73     		strb	r3, [r7, #15]
 4514 0a8c 0DE0     		b	.L283
 4515              	.L284:
1000:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4516              		.loc 1 1000 0 discriminator 3
 4517 0a8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4518 0a90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4519 0a92 3432     		adds	r2, r2, #52
 4520 0a94 2049     		ldr	r1, .L361+4
 4521 0a96 8A5C     		ldrb	r2, [r1, r2]
 4522 0a98 D1B2     		uxtb	r1, r2
 4523 0a9a 204A     		ldr	r2, .L361+8
 4524 0a9c 1344     		add	r3, r3, r2
 4525 0a9e 0A46     		mov	r2, r1
 4526 0aa0 83F84F20 		strb	r2, [r3, #79]
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4527              		.loc 1 999 0 discriminator 3
 4528 0aa4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4529 0aa6 0133     		adds	r3, r3, #1
 4530 0aa8 FB73     		strb	r3, [r7, #15]
 4531              	.L283:
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4532              		.loc 1 999 0 is_stmt 0 discriminator 1
 4533 0aaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4534 0aac 032B     		cmp	r3, #3
 4535 0aae EED9     		bls	.L284
1001:.\Protocolo.c **** 							}
1002:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4536              		.loc 1 1002 0 is_stmt 1
 4537 0ab0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1003:.\Protocolo.c ****     						return 2;                            
 4538              		.loc 1 1003 0
 4539 0ab4 0223     		movs	r3, #2
 4540 0ab6 E4E2     		b	.L167
 4541              	.L274:
1004:.\Protocolo.c **** 						}
1005:.\Protocolo.c **** 						if(nmangueras==3){
 4542              		.loc 1 1005 0
 4543 0ab8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 101


 4544 0aba 032B     		cmp	r3, #3
 4545 0abc 40F0DA80 		bne	.L285
1006:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4546              		.loc 1 1006 0
 4547 0ac0 0023     		movs	r3, #0
 4548 0ac2 FB73     		strb	r3, [r7, #15]
 4549 0ac4 20E0     		b	.L286
 4550              	.L289:
1007:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4551              		.loc 1 1007 0
 4552 0ac6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4553 0ac8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4554 0aca 2232     		adds	r2, r2, #34
 4555 0acc 1249     		ldr	r1, .L361+4
 4556 0ace 8A5C     		ldrb	r2, [r1, r2]
 4557 0ad0 D1B2     		uxtb	r1, r2
 4558 0ad2 124A     		ldr	r2, .L361+8
 4559 0ad4 1344     		add	r3, r3, r2
 4560 0ad6 0A46     		mov	r2, r1
 4561 0ad8 9A76     		strb	r2, [r3, #26]
1008:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4562              		.loc 1 1008 0
 4563 0ada FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4564 0adc 0F4A     		ldr	r2, .L361+8
 4565 0ade 1344     		add	r3, r3, r2
 4566 0ae0 9B7E     		ldrb	r3, [r3, #26]
 4567 0ae2 DBB2     		uxtb	r3, r3
 4568 0ae4 002B     		cmp	r3, #0
 4569 0ae6 08D0     		beq	.L287
 4570              		.loc 1 1008 0 is_stmt 0 discriminator 1
 4571 0ae8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4572 0aea 0C4A     		ldr	r2, .L361+8
 4573 0aec 1344     		add	r3, r3, r2
 4574 0aee 9B7E     		ldrb	r3, [r3, #26]
 4575 0af0 DBB2     		uxtb	r3, r3
 4576 0af2 03F0F003 		and	r3, r3, #240
 4577 0af6 E02B     		cmp	r3, #224
 4578 0af8 03D0     		beq	.L288
 4579              	.L287:
1009:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4580              		.loc 1 1009 0 is_stmt 1
 4581 0afa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1010:.\Protocolo.c **** 									return 0;
 4582              		.loc 1 1010 0
 4583 0afe 0023     		movs	r3, #0
 4584 0b00 BFE2     		b	.L167
 4585              	.L288:
1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4586              		.loc 1 1006 0 discriminator 2
 4587 0b02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4588 0b04 0133     		adds	r3, r3, #1
 4589 0b06 FB73     		strb	r3, [r7, #15]
 4590              	.L286:
1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4591              		.loc 1 1006 0 is_stmt 0 discriminator 1
 4592 0b08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4593 0b0a 072B     		cmp	r3, #7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 102


 4594 0b0c DBD9     		bls	.L289
1011:.\Protocolo.c **** 								}								
1012:.\Protocolo.c **** 							}
1013:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4595              		.loc 1 1013 0 is_stmt 1
 4596 0b0e 0023     		movs	r3, #0
 4597 0b10 FB73     		strb	r3, [r7, #15]
 4598 0b12 29E0     		b	.L290
 4599              	.L362:
 4600              		.align	2
 4601              	.L361:
 4602 0b14 00000000 		.word	version
 4603 0b18 00000000 		.word	Surtidor_rxBuffer
 4604 0b1c 00000000 		.word	lado2
 4605              	.L293:
1014:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4606              		.loc 1 1014 0
 4607 0b20 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4608 0b22 0C33     		adds	r3, r3, #12
 4609 0b24 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4610 0b26 2B32     		adds	r2, r2, #43
 4611 0b28 AE49     		ldr	r1, .L363
 4612 0b2a 8A5C     		ldrb	r2, [r1, r2]
 4613 0b2c D1B2     		uxtb	r1, r2
 4614 0b2e AE4A     		ldr	r2, .L363+4
 4615 0b30 1344     		add	r3, r3, r2
 4616 0b32 0A46     		mov	r2, r1
 4617 0b34 9A76     		strb	r2, [r3, #26]
1015:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4618              		.loc 1 1015 0
 4619 0b36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4620 0b38 0C33     		adds	r3, r3, #12
 4621 0b3a AB4A     		ldr	r2, .L363+4
 4622 0b3c 1344     		add	r3, r3, r2
 4623 0b3e 9B7E     		ldrb	r3, [r3, #26]
 4624 0b40 DBB2     		uxtb	r3, r3
 4625 0b42 002B     		cmp	r3, #0
 4626 0b44 09D0     		beq	.L291
 4627              		.loc 1 1015 0 is_stmt 0 discriminator 1
 4628 0b46 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4629 0b48 0C33     		adds	r3, r3, #12
 4630 0b4a A74A     		ldr	r2, .L363+4
 4631 0b4c 1344     		add	r3, r3, r2
 4632 0b4e 9B7E     		ldrb	r3, [r3, #26]
 4633 0b50 DBB2     		uxtb	r3, r3
 4634 0b52 03F0F003 		and	r3, r3, #240
 4635 0b56 E02B     		cmp	r3, #224
 4636 0b58 03D0     		beq	.L292
 4637              	.L291:
1016:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4638              		.loc 1 1016 0 is_stmt 1
 4639 0b5a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1017:.\Protocolo.c **** 									return 0;
 4640              		.loc 1 1017 0
 4641 0b5e 0023     		movs	r3, #0
 4642 0b60 8FE2     		b	.L167
 4643              	.L292:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 103


1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4644              		.loc 1 1013 0 discriminator 2
 4645 0b62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4646 0b64 0133     		adds	r3, r3, #1
 4647 0b66 FB73     		strb	r3, [r7, #15]
 4648              	.L290:
1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4649              		.loc 1 1013 0 is_stmt 0 discriminator 1
 4650 0b68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4651 0b6a 072B     		cmp	r3, #7
 4652 0b6c D8D9     		bls	.L293
1018:.\Protocolo.c **** 								}								
1019:.\Protocolo.c **** 							}
1020:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4653              		.loc 1 1020 0 is_stmt 1
 4654 0b6e 0023     		movs	r3, #0
 4655 0b70 FB73     		strb	r3, [r7, #15]
 4656 0b72 0DE0     		b	.L294
 4657              	.L295:
1021:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4658              		.loc 1 1021 0 discriminator 3
 4659 0b74 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4660 0b76 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4661 0b78 3432     		adds	r2, r2, #52
 4662 0b7a 9A49     		ldr	r1, .L363
 4663 0b7c 8A5C     		ldrb	r2, [r1, r2]
 4664 0b7e D1B2     		uxtb	r1, r2
 4665 0b80 994A     		ldr	r2, .L363+4
 4666 0b82 1344     		add	r3, r3, r2
 4667 0b84 0A46     		mov	r2, r1
 4668 0b86 83F84F20 		strb	r2, [r3, #79]
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4669              		.loc 1 1020 0 discriminator 3
 4670 0b8a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4671 0b8c 0133     		adds	r3, r3, #1
 4672 0b8e FB73     		strb	r3, [r7, #15]
 4673              	.L294:
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4674              		.loc 1 1020 0 is_stmt 0 discriminator 1
 4675 0b90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4676 0b92 032B     		cmp	r3, #3
 4677 0b94 EED9     		bls	.L295
1022:.\Protocolo.c **** 							}						
1023:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4678              		.loc 1 1023 0 is_stmt 1
 4679 0b96 0023     		movs	r3, #0
 4680 0b98 FB73     		strb	r3, [r7, #15]
 4681 0b9a 23E0     		b	.L296
 4682              	.L299:
1024:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4683              		.loc 1 1024 0
 4684 0b9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4685 0b9e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4686 0ba0 4032     		adds	r2, r2, #64
 4687 0ba2 9049     		ldr	r1, .L363
 4688 0ba4 8A5C     		ldrb	r2, [r1, r2]
 4689 0ba6 D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 104


 4690 0ba8 8F4A     		ldr	r2, .L363+4
 4691 0baa 1344     		add	r3, r3, r2
 4692 0bac 0A46     		mov	r2, r1
 4693 0bae 83F83220 		strb	r2, [r3, #50]
1025:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 4694              		.loc 1 1025 0
 4695 0bb2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4696 0bb4 8C4A     		ldr	r2, .L363+4
 4697 0bb6 1344     		add	r3, r3, r2
 4698 0bb8 93F83230 		ldrb	r3, [r3, #50]
 4699 0bbc DBB2     		uxtb	r3, r3
 4700 0bbe 002B     		cmp	r3, #0
 4701 0bc0 09D0     		beq	.L297
 4702              		.loc 1 1025 0 is_stmt 0 discriminator 1
 4703 0bc2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4704 0bc4 884A     		ldr	r2, .L363+4
 4705 0bc6 1344     		add	r3, r3, r2
 4706 0bc8 93F83230 		ldrb	r3, [r3, #50]
 4707 0bcc DBB2     		uxtb	r3, r3
 4708 0bce 03F0F003 		and	r3, r3, #240
 4709 0bd2 E02B     		cmp	r3, #224
 4710 0bd4 03D0     		beq	.L298
 4711              	.L297:
1026:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4712              		.loc 1 1026 0 is_stmt 1
 4713 0bd6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1027:.\Protocolo.c **** 									return 0;
 4714              		.loc 1 1027 0
 4715 0bda 0023     		movs	r3, #0
 4716 0bdc 51E2     		b	.L167
 4717              	.L298:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4718              		.loc 1 1023 0 discriminator 2
 4719 0bde FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4720 0be0 0133     		adds	r3, r3, #1
 4721 0be2 FB73     		strb	r3, [r7, #15]
 4722              	.L296:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4723              		.loc 1 1023 0 is_stmt 0 discriminator 1
 4724 0be4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4725 0be6 072B     		cmp	r3, #7
 4726 0be8 D8D9     		bls	.L299
1028:.\Protocolo.c **** 								}								
1029:.\Protocolo.c **** 							}
1030:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4727              		.loc 1 1030 0 is_stmt 1
 4728 0bea 0023     		movs	r3, #0
 4729 0bec FB73     		strb	r3, [r7, #15]
 4730 0bee 26E0     		b	.L300
 4731              	.L303:
1031:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4732              		.loc 1 1031 0
 4733 0bf0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4734 0bf2 0C33     		adds	r3, r3, #12
 4735 0bf4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4736 0bf6 4932     		adds	r2, r2, #73
 4737 0bf8 7A49     		ldr	r1, .L363
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 105


 4738 0bfa 8A5C     		ldrb	r2, [r1, r2]
 4739 0bfc D1B2     		uxtb	r1, r2
 4740 0bfe 7A4A     		ldr	r2, .L363+4
 4741 0c00 1344     		add	r3, r3, r2
 4742 0c02 0A46     		mov	r2, r1
 4743 0c04 83F83220 		strb	r2, [r3, #50]
1032:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 4744              		.loc 1 1032 0
 4745 0c08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4746 0c0a 0C33     		adds	r3, r3, #12
 4747 0c0c 764A     		ldr	r2, .L363+4
 4748 0c0e 1344     		add	r3, r3, r2
 4749 0c10 93F83230 		ldrb	r3, [r3, #50]
 4750 0c14 DBB2     		uxtb	r3, r3
 4751 0c16 002B     		cmp	r3, #0
 4752 0c18 0AD0     		beq	.L301
 4753              		.loc 1 1032 0 is_stmt 0 discriminator 1
 4754 0c1a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4755 0c1c 0C33     		adds	r3, r3, #12
 4756 0c1e 724A     		ldr	r2, .L363+4
 4757 0c20 1344     		add	r3, r3, r2
 4758 0c22 93F83230 		ldrb	r3, [r3, #50]
 4759 0c26 DBB2     		uxtb	r3, r3
 4760 0c28 03F0F003 		and	r3, r3, #240
 4761 0c2c E02B     		cmp	r3, #224
 4762 0c2e 03D0     		beq	.L302
 4763              	.L301:
1033:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4764              		.loc 1 1033 0 is_stmt 1
 4765 0c30 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1034:.\Protocolo.c **** 									return 0;
 4766              		.loc 1 1034 0
 4767 0c34 0023     		movs	r3, #0
 4768 0c36 24E2     		b	.L167
 4769              	.L302:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4770              		.loc 1 1030 0 discriminator 2
 4771 0c38 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4772 0c3a 0133     		adds	r3, r3, #1
 4773 0c3c FB73     		strb	r3, [r7, #15]
 4774              	.L300:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4775              		.loc 1 1030 0 is_stmt 0 discriminator 1
 4776 0c3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4777 0c40 072B     		cmp	r3, #7
 4778 0c42 D5D9     		bls	.L303
1035:.\Protocolo.c **** 								}								
1036:.\Protocolo.c **** 							}
1037:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4779              		.loc 1 1037 0 is_stmt 1
 4780 0c44 0023     		movs	r3, #0
 4781 0c46 FB73     		strb	r3, [r7, #15]
 4782 0c48 0DE0     		b	.L304
 4783              	.L305:
1038:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4784              		.loc 1 1038 0 discriminator 3
 4785 0c4a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 106


 4786 0c4c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4787 0c4e 5232     		adds	r2, r2, #82
 4788 0c50 6449     		ldr	r1, .L363
 4789 0c52 8A5C     		ldrb	r2, [r1, r2]
 4790 0c54 D1B2     		uxtb	r1, r2
 4791 0c56 644A     		ldr	r2, .L363+4
 4792 0c58 1344     		add	r3, r3, r2
 4793 0c5a 0A46     		mov	r2, r1
 4794 0c5c 83F85420 		strb	r2, [r3, #84]
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4795              		.loc 1 1037 0 discriminator 3
 4796 0c60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4797 0c62 0133     		adds	r3, r3, #1
 4798 0c64 FB73     		strb	r3, [r7, #15]
 4799              	.L304:
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4800              		.loc 1 1037 0 is_stmt 0 discriminator 1
 4801 0c66 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4802 0c68 032B     		cmp	r3, #3
 4803 0c6a EED9     		bls	.L305
1039:.\Protocolo.c **** 							}
1040:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4804              		.loc 1 1040 0 is_stmt 1
 4805 0c6c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1041:.\Protocolo.c ****     						return 3;                            
 4806              		.loc 1 1041 0
 4807 0c70 0323     		movs	r3, #3
 4808 0c72 06E2     		b	.L167
 4809              	.L285:
1042:.\Protocolo.c **** 						}
1043:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4810              		.loc 1 1043 0
 4811 0c74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1044:.\Protocolo.c **** 						return 1;			
 4812              		.loc 1 1044 0
 4813 0c78 0123     		movs	r3, #1
 4814 0c7a 02E2     		b	.L167
 4815              	.L259:
1045:.\Protocolo.c **** 					}
1046:.\Protocolo.c **** 					else{
1047:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4816              		.loc 1 1047 0
 4817 0c7c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1048:.\Protocolo.c **** 						return 0;		
 4818              		.loc 1 1048 0
 4819 0c80 0023     		movs	r3, #0
 4820 0c82 FEE1     		b	.L167
 4821              	.L258:
1049:.\Protocolo.c **** 					}
1050:.\Protocolo.c **** 				}
1051:.\Protocolo.c **** 				else{
1052:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4822              		.loc 1 1052 0
 4823 0c84 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1053:.\Protocolo.c **** 					return 0;		
 4824              		.loc 1 1053 0
 4825 0c88 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 107


 4826 0c8a FAE1     		b	.L167
 4827              	.L256:
1054:.\Protocolo.c **** 				}				
1055:.\Protocolo.c **** 			}
1056:.\Protocolo.c **** 			else{
1057:.\Protocolo.c **** 				CyDelay(900);
 4828              		.loc 1 1057 0
 4829 0c8c 4FF46170 		mov	r0, #900
 4830 0c90 FFF7FEFF 		bl	CyDelay
1058:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4831              		.loc 1 1058 0
 4832 0c94 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4833 0c98 0346     		mov	r3, r0
 4834 0c9a FB73     		strb	r3, [r7, #15]
1059:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){					
 4835              		.loc 1 1059 0
 4836 0c9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4837 0c9e 2E2B     		cmp	r3, #46
 4838 0ca0 06D0     		beq	.L306
 4839              		.loc 1 1059 0 is_stmt 0 discriminator 1
 4840 0ca2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4841 0ca4 582B     		cmp	r3, #88
 4842 0ca6 03D0     		beq	.L306
 4843              		.loc 1 1059 0 discriminator 2
 4844 0ca8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4845 0caa 822B     		cmp	r3, #130
 4846 0cac 40F0E481 		bne	.L307
 4847              	.L306:
1060:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4848              		.loc 1 1060 0 is_stmt 1
 4849 0cb0 4C4B     		ldr	r3, .L363
 4850 0cb2 1B78     		ldrb	r3, [r3]
 4851 0cb4 DBB2     		uxtb	r3, r3
 4852 0cb6 FF2B     		cmp	r3, #255
 4853 0cb8 40F0DA81 		bne	.L308
 4854              		.loc 1 1060 0 is_stmt 0 discriminator 1
 4855 0cbc 494B     		ldr	r3, .L363
 4856 0cbe 5B78     		ldrb	r3, [r3, #1]
 4857 0cc0 DBB2     		uxtb	r3, r3
 4858 0cc2 F62B     		cmp	r3, #246
 4859 0cc4 40F0D481 		bne	.L308
 4860              		.loc 1 1060 0 discriminator 2
 4861 0cc8 464B     		ldr	r3, .L363
 4862 0cca DB78     		ldrb	r3, [r3, #3]
 4863 0ccc DBB2     		uxtb	r3, r3
 4864 0cce F92B     		cmp	r3, #249
 4865 0cd0 40F0CE81 		bne	.L308
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4866              		.loc 1 1061 0 is_stmt 1
 4867 0cd4 0023     		movs	r3, #0
 4868 0cd6 BB73     		strb	r3, [r7, #14]
 4869 0cd8 16E0     		b	.L309
 4870              	.L312:
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4871              		.loc 1 1062 0
 4872 0cda 0023     		movs	r3, #0
 4873 0cdc FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 108


 4874 0cde 0DE0     		b	.L310
 4875              	.L311:
1063:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4876              		.loc 1 1063 0 discriminator 3
 4877 0ce0 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4878 0ce2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4879 0ce4 4048     		ldr	r0, .L363+4
 4880 0ce6 1346     		mov	r3, r2
 4881 0ce8 5B00     		lsls	r3, r3, #1
 4882 0cea 1344     		add	r3, r3, r2
 4883 0cec DB00     		lsls	r3, r3, #3
 4884 0cee 0B44     		add	r3, r3, r1
 4885 0cf0 0344     		add	r3, r3, r0
 4886 0cf2 0022     		movs	r2, #0
 4887 0cf4 9A70     		strb	r2, [r3, #2]
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4888              		.loc 1 1062 0 discriminator 3
 4889 0cf6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4890 0cf8 0133     		adds	r3, r3, #1
 4891 0cfa FB73     		strb	r3, [r7, #15]
 4892              	.L310:
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4893              		.loc 1 1062 0 is_stmt 0 discriminator 1
 4894 0cfc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4895 0cfe 172B     		cmp	r3, #23
 4896 0d00 EED9     		bls	.L311
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4897              		.loc 1 1061 0 is_stmt 1 discriminator 2
 4898 0d02 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4899 0d04 0133     		adds	r3, r3, #1
 4900 0d06 BB73     		strb	r3, [r7, #14]
 4901              	.L309:
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4902              		.loc 1 1061 0 is_stmt 0 discriminator 1
 4903 0d08 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4904 0d0a 022B     		cmp	r3, #2
 4905 0d0c E5D9     		bls	.L312
1064:.\Protocolo.c ****                     		}
1065:.\Protocolo.c ****                     	}                         
1066:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4906              		.loc 1 1066 0 is_stmt 1
 4907 0d0e 0023     		movs	r3, #0
 4908 0d10 FB73     		strb	r3, [r7, #15]
 4909 0d12 20E0     		b	.L313
 4910              	.L316:
1067:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4911              		.loc 1 1067 0
 4912 0d14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4913 0d16 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4914 0d18 0432     		adds	r2, r2, #4
 4915 0d1a 3249     		ldr	r1, .L363
 4916 0d1c 8A5C     		ldrb	r2, [r1, r2]
 4917 0d1e D1B2     		uxtb	r1, r2
 4918 0d20 314A     		ldr	r2, .L363+4
 4919 0d22 1344     		add	r3, r3, r2
 4920 0d24 0A46     		mov	r2, r1
 4921 0d26 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 109


1068:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4922              		.loc 1 1068 0
 4923 0d28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4924 0d2a 2F4A     		ldr	r2, .L363+4
 4925 0d2c 1344     		add	r3, r3, r2
 4926 0d2e 9B78     		ldrb	r3, [r3, #2]
 4927 0d30 DBB2     		uxtb	r3, r3
 4928 0d32 002B     		cmp	r3, #0
 4929 0d34 08D0     		beq	.L314
 4930              		.loc 1 1068 0 is_stmt 0 discriminator 1
 4931 0d36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4932 0d38 2B4A     		ldr	r2, .L363+4
 4933 0d3a 1344     		add	r3, r3, r2
 4934 0d3c 9B78     		ldrb	r3, [r3, #2]
 4935 0d3e DBB2     		uxtb	r3, r3
 4936 0d40 03F0F003 		and	r3, r3, #240
 4937 0d44 E02B     		cmp	r3, #224
 4938 0d46 03D0     		beq	.L315
 4939              	.L314:
1069:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4940              		.loc 1 1069 0 is_stmt 1
 4941 0d48 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1070:.\Protocolo.c **** 								return 0;
 4942              		.loc 1 1070 0
 4943 0d4c 0023     		movs	r3, #0
 4944 0d4e 98E1     		b	.L167
 4945              	.L315:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4946              		.loc 1 1066 0 discriminator 2
 4947 0d50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4948 0d52 0133     		adds	r3, r3, #1
 4949 0d54 FB73     		strb	r3, [r7, #15]
 4950              	.L313:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4951              		.loc 1 1066 0 is_stmt 0 discriminator 1
 4952 0d56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4953 0d58 0B2B     		cmp	r3, #11
 4954 0d5a DBD9     		bls	.L316
1071:.\Protocolo.c **** 							}							
1072:.\Protocolo.c **** 						}
1073:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4955              		.loc 1 1073 0 is_stmt 1
 4956 0d5c 0023     		movs	r3, #0
 4957 0d5e FB73     		strb	r3, [r7, #15]
 4958 0d60 23E0     		b	.L317
 4959              	.L320:
1074:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4960              		.loc 1 1074 0
 4961 0d62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4962 0d64 0C33     		adds	r3, r3, #12
 4963 0d66 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4964 0d68 1132     		adds	r2, r2, #17
 4965 0d6a 1E49     		ldr	r1, .L363
 4966 0d6c 8A5C     		ldrb	r2, [r1, r2]
 4967 0d6e D1B2     		uxtb	r1, r2
 4968 0d70 1D4A     		ldr	r2, .L363+4
 4969 0d72 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 110


 4970 0d74 0A46     		mov	r2, r1
 4971 0d76 9A70     		strb	r2, [r3, #2]
1075:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4972              		.loc 1 1075 0
 4973 0d78 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4974 0d7a 0C33     		adds	r3, r3, #12
 4975 0d7c 1A4A     		ldr	r2, .L363+4
 4976 0d7e 1344     		add	r3, r3, r2
 4977 0d80 9B78     		ldrb	r3, [r3, #2]
 4978 0d82 DBB2     		uxtb	r3, r3
 4979 0d84 002B     		cmp	r3, #0
 4980 0d86 09D0     		beq	.L318
 4981              		.loc 1 1075 0 is_stmt 0 discriminator 1
 4982 0d88 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4983 0d8a 0C33     		adds	r3, r3, #12
 4984 0d8c 164A     		ldr	r2, .L363+4
 4985 0d8e 1344     		add	r3, r3, r2
 4986 0d90 9B78     		ldrb	r3, [r3, #2]
 4987 0d92 DBB2     		uxtb	r3, r3
 4988 0d94 03F0F003 		and	r3, r3, #240
 4989 0d98 E02B     		cmp	r3, #224
 4990 0d9a 03D0     		beq	.L319
 4991              	.L318:
1076:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4992              		.loc 1 1076 0 is_stmt 1
 4993 0d9c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1077:.\Protocolo.c **** 								return 0;
 4994              		.loc 1 1077 0
 4995 0da0 0023     		movs	r3, #0
 4996 0da2 6EE1     		b	.L167
 4997              	.L319:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4998              		.loc 1 1073 0 discriminator 2
 4999 0da4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5000 0da6 0133     		adds	r3, r3, #1
 5001 0da8 FB73     		strb	r3, [r7, #15]
 5002              	.L317:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 5003              		.loc 1 1073 0 is_stmt 0 discriminator 1
 5004 0daa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5005 0dac 0B2B     		cmp	r3, #11
 5006 0dae D8D9     		bls	.L320
1078:.\Protocolo.c **** 							}							
1079:.\Protocolo.c **** 						}
1080:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 5007              		.loc 1 1080 0 is_stmt 1
 5008 0db0 0023     		movs	r3, #0
 5009 0db2 FB73     		strb	r3, [r7, #15]
 5010 0db4 0DE0     		b	.L321
 5011              	.L322:
1081:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5012              		.loc 1 1081 0 discriminator 3
 5013 0db6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5014 0db8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5015 0dba 1E32     		adds	r2, r2, #30
 5016 0dbc 0949     		ldr	r1, .L363
 5017 0dbe 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 111


 5018 0dc0 D1B2     		uxtb	r1, r2
 5019 0dc2 094A     		ldr	r2, .L363+4
 5020 0dc4 1344     		add	r3, r3, r2
 5021 0dc6 0A46     		mov	r2, r1
 5022 0dc8 83F84A20 		strb	r2, [r3, #74]
1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5023              		.loc 1 1080 0 discriminator 3
 5024 0dcc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5025 0dce 0133     		adds	r3, r3, #1
 5026 0dd0 FB73     		strb	r3, [r7, #15]
 5027              	.L321:
1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5028              		.loc 1 1080 0 is_stmt 0 discriminator 1
 5029 0dd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5030 0dd4 042B     		cmp	r3, #4
 5031 0dd6 EED9     		bls	.L322
1082:.\Protocolo.c **** 						}				
1083:.\Protocolo.c **** 						if(nmangueras==2){
 5032              		.loc 1 1083 0 is_stmt 1
 5033 0dd8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5034 0dda 022B     		cmp	r3, #2
 5035 0ddc 6CD1     		bne	.L323
1084:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5036              		.loc 1 1084 0
 5037 0dde 0023     		movs	r3, #0
 5038 0de0 FB73     		strb	r3, [r7, #15]
 5039 0de2 24E0     		b	.L324
 5040              	.L364:
 5041              		.align	2
 5042              	.L363:
 5043 0de4 00000000 		.word	Surtidor_rxBuffer
 5044 0de8 00000000 		.word	lado2
 5045              	.L327:
1085:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5046              		.loc 1 1085 0
 5047 0dec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5048 0dee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5049 0df0 2E32     		adds	r2, r2, #46
 5050 0df2 A649     		ldr	r1, .L365
 5051 0df4 8A5C     		ldrb	r2, [r1, r2]
 5052 0df6 D1B2     		uxtb	r1, r2
 5053 0df8 A54A     		ldr	r2, .L365+4
 5054 0dfa 1344     		add	r3, r3, r2
 5055 0dfc 0A46     		mov	r2, r1
 5056 0dfe 9A76     		strb	r2, [r3, #26]
1086:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5057              		.loc 1 1086 0
 5058 0e00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5059 0e02 A34A     		ldr	r2, .L365+4
 5060 0e04 1344     		add	r3, r3, r2
 5061 0e06 9B7E     		ldrb	r3, [r3, #26]
 5062 0e08 DBB2     		uxtb	r3, r3
 5063 0e0a 002B     		cmp	r3, #0
 5064 0e0c 08D0     		beq	.L325
 5065              		.loc 1 1086 0 is_stmt 0 discriminator 1
 5066 0e0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5067 0e10 9F4A     		ldr	r2, .L365+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 112


 5068 0e12 1344     		add	r3, r3, r2
 5069 0e14 9B7E     		ldrb	r3, [r3, #26]
 5070 0e16 DBB2     		uxtb	r3, r3
 5071 0e18 03F0F003 		and	r3, r3, #240
 5072 0e1c E02B     		cmp	r3, #224
 5073 0e1e 03D0     		beq	.L326
 5074              	.L325:
1087:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5075              		.loc 1 1087 0 is_stmt 1
 5076 0e20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1088:.\Protocolo.c **** 									return 0;
 5077              		.loc 1 1088 0
 5078 0e24 0023     		movs	r3, #0
 5079 0e26 2CE1     		b	.L167
 5080              	.L326:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5081              		.loc 1 1084 0 discriminator 2
 5082 0e28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5083 0e2a 0133     		adds	r3, r3, #1
 5084 0e2c FB73     		strb	r3, [r7, #15]
 5085              	.L324:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5086              		.loc 1 1084 0 is_stmt 0 discriminator 1
 5087 0e2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5088 0e30 0B2B     		cmp	r3, #11
 5089 0e32 DBD9     		bls	.L327
1089:.\Protocolo.c **** 								}								
1090:.\Protocolo.c **** 							}
1091:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5090              		.loc 1 1091 0 is_stmt 1
 5091 0e34 0023     		movs	r3, #0
 5092 0e36 FB73     		strb	r3, [r7, #15]
 5093 0e38 23E0     		b	.L328
 5094              	.L331:
1092:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5095              		.loc 1 1092 0
 5096 0e3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5097 0e3c 0C33     		adds	r3, r3, #12
 5098 0e3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5099 0e40 3B32     		adds	r2, r2, #59
 5100 0e42 9249     		ldr	r1, .L365
 5101 0e44 8A5C     		ldrb	r2, [r1, r2]
 5102 0e46 D1B2     		uxtb	r1, r2
 5103 0e48 914A     		ldr	r2, .L365+4
 5104 0e4a 1344     		add	r3, r3, r2
 5105 0e4c 0A46     		mov	r2, r1
 5106 0e4e 9A76     		strb	r2, [r3, #26]
1093:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5107              		.loc 1 1093 0
 5108 0e50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5109 0e52 0C33     		adds	r3, r3, #12
 5110 0e54 8E4A     		ldr	r2, .L365+4
 5111 0e56 1344     		add	r3, r3, r2
 5112 0e58 9B7E     		ldrb	r3, [r3, #26]
 5113 0e5a DBB2     		uxtb	r3, r3
 5114 0e5c 002B     		cmp	r3, #0
 5115 0e5e 09D0     		beq	.L329
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 113


 5116              		.loc 1 1093 0 is_stmt 0 discriminator 1
 5117 0e60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5118 0e62 0C33     		adds	r3, r3, #12
 5119 0e64 8A4A     		ldr	r2, .L365+4
 5120 0e66 1344     		add	r3, r3, r2
 5121 0e68 9B7E     		ldrb	r3, [r3, #26]
 5122 0e6a DBB2     		uxtb	r3, r3
 5123 0e6c 03F0F003 		and	r3, r3, #240
 5124 0e70 E02B     		cmp	r3, #224
 5125 0e72 03D0     		beq	.L330
 5126              	.L329:
1094:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5127              		.loc 1 1094 0 is_stmt 1
 5128 0e74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1095:.\Protocolo.c **** 									return 0;
 5129              		.loc 1 1095 0
 5130 0e78 0023     		movs	r3, #0
 5131 0e7a 02E1     		b	.L167
 5132              	.L330:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5133              		.loc 1 1091 0 discriminator 2
 5134 0e7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5135 0e7e 0133     		adds	r3, r3, #1
 5136 0e80 FB73     		strb	r3, [r7, #15]
 5137              	.L328:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5138              		.loc 1 1091 0 is_stmt 0 discriminator 1
 5139 0e82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5140 0e84 0B2B     		cmp	r3, #11
 5141 0e86 D8D9     		bls	.L331
1096:.\Protocolo.c **** 								}								
1097:.\Protocolo.c **** 							}
1098:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5142              		.loc 1 1098 0 is_stmt 1
 5143 0e88 0023     		movs	r3, #0
 5144 0e8a FB73     		strb	r3, [r7, #15]
 5145 0e8c 0DE0     		b	.L332
 5146              	.L333:
1099:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5147              		.loc 1 1099 0 discriminator 3
 5148 0e8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5149 0e90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5150 0e92 4832     		adds	r2, r2, #72
 5151 0e94 7D49     		ldr	r1, .L365
 5152 0e96 8A5C     		ldrb	r2, [r1, r2]
 5153 0e98 D1B2     		uxtb	r1, r2
 5154 0e9a 7D4A     		ldr	r2, .L365+4
 5155 0e9c 1344     		add	r3, r3, r2
 5156 0e9e 0A46     		mov	r2, r1
 5157 0ea0 83F84F20 		strb	r2, [r3, #79]
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5158              		.loc 1 1098 0 discriminator 3
 5159 0ea4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5160 0ea6 0133     		adds	r3, r3, #1
 5161 0ea8 FB73     		strb	r3, [r7, #15]
 5162              	.L332:
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 114


 5163              		.loc 1 1098 0 is_stmt 0 discriminator 1
 5164 0eaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5165 0eac 042B     		cmp	r3, #4
 5166 0eae EED9     		bls	.L333
1100:.\Protocolo.c **** 							}
1101:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5167              		.loc 1 1101 0 is_stmt 1
 5168 0eb0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1102:.\Protocolo.c ****     						return 2;                            
 5169              		.loc 1 1102 0
 5170 0eb4 0223     		movs	r3, #2
 5171 0eb6 E4E0     		b	.L167
 5172              	.L323:
1103:.\Protocolo.c **** 						}
1104:.\Protocolo.c **** 						if(nmangueras==3){
 5173              		.loc 1 1104 0
 5174 0eb8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5175 0eba 032B     		cmp	r3, #3
 5176 0ebc 40F0D480 		bne	.L334
1105:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5177              		.loc 1 1105 0
 5178 0ec0 0023     		movs	r3, #0
 5179 0ec2 FB73     		strb	r3, [r7, #15]
 5180 0ec4 20E0     		b	.L335
 5181              	.L338:
1106:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5182              		.loc 1 1106 0
 5183 0ec6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5184 0ec8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5185 0eca 2E32     		adds	r2, r2, #46
 5186 0ecc 6F49     		ldr	r1, .L365
 5187 0ece 8A5C     		ldrb	r2, [r1, r2]
 5188 0ed0 D1B2     		uxtb	r1, r2
 5189 0ed2 6F4A     		ldr	r2, .L365+4
 5190 0ed4 1344     		add	r3, r3, r2
 5191 0ed6 0A46     		mov	r2, r1
 5192 0ed8 9A76     		strb	r2, [r3, #26]
1107:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5193              		.loc 1 1107 0
 5194 0eda FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5195 0edc 6C4A     		ldr	r2, .L365+4
 5196 0ede 1344     		add	r3, r3, r2
 5197 0ee0 9B7E     		ldrb	r3, [r3, #26]
 5198 0ee2 DBB2     		uxtb	r3, r3
 5199 0ee4 002B     		cmp	r3, #0
 5200 0ee6 08D0     		beq	.L336
 5201              		.loc 1 1107 0 is_stmt 0 discriminator 1
 5202 0ee8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5203 0eea 694A     		ldr	r2, .L365+4
 5204 0eec 1344     		add	r3, r3, r2
 5205 0eee 9B7E     		ldrb	r3, [r3, #26]
 5206 0ef0 DBB2     		uxtb	r3, r3
 5207 0ef2 03F0F003 		and	r3, r3, #240
 5208 0ef6 E02B     		cmp	r3, #224
 5209 0ef8 03D0     		beq	.L337
 5210              	.L336:
1108:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 115


 5211              		.loc 1 1108 0 is_stmt 1
 5212 0efa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1109:.\Protocolo.c **** 									return 0;
 5213              		.loc 1 1109 0
 5214 0efe 0023     		movs	r3, #0
 5215 0f00 BFE0     		b	.L167
 5216              	.L337:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5217              		.loc 1 1105 0 discriminator 2
 5218 0f02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5219 0f04 0133     		adds	r3, r3, #1
 5220 0f06 FB73     		strb	r3, [r7, #15]
 5221              	.L335:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5222              		.loc 1 1105 0 is_stmt 0 discriminator 1
 5223 0f08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5224 0f0a 0B2B     		cmp	r3, #11
 5225 0f0c DBD9     		bls	.L338
1110:.\Protocolo.c **** 								}								
1111:.\Protocolo.c **** 							}
1112:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5226              		.loc 1 1112 0 is_stmt 1
 5227 0f0e 0023     		movs	r3, #0
 5228 0f10 FB73     		strb	r3, [r7, #15]
 5229 0f12 23E0     		b	.L339
 5230              	.L342:
1113:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5231              		.loc 1 1113 0
 5232 0f14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5233 0f16 0C33     		adds	r3, r3, #12
 5234 0f18 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5235 0f1a 3B32     		adds	r2, r2, #59
 5236 0f1c 5B49     		ldr	r1, .L365
 5237 0f1e 8A5C     		ldrb	r2, [r1, r2]
 5238 0f20 D1B2     		uxtb	r1, r2
 5239 0f22 5B4A     		ldr	r2, .L365+4
 5240 0f24 1344     		add	r3, r3, r2
 5241 0f26 0A46     		mov	r2, r1
 5242 0f28 9A76     		strb	r2, [r3, #26]
1114:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5243              		.loc 1 1114 0
 5244 0f2a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5245 0f2c 0C33     		adds	r3, r3, #12
 5246 0f2e 584A     		ldr	r2, .L365+4
 5247 0f30 1344     		add	r3, r3, r2
 5248 0f32 9B7E     		ldrb	r3, [r3, #26]
 5249 0f34 DBB2     		uxtb	r3, r3
 5250 0f36 002B     		cmp	r3, #0
 5251 0f38 09D0     		beq	.L340
 5252              		.loc 1 1114 0 is_stmt 0 discriminator 1
 5253 0f3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5254 0f3c 0C33     		adds	r3, r3, #12
 5255 0f3e 544A     		ldr	r2, .L365+4
 5256 0f40 1344     		add	r3, r3, r2
 5257 0f42 9B7E     		ldrb	r3, [r3, #26]
 5258 0f44 DBB2     		uxtb	r3, r3
 5259 0f46 03F0F003 		and	r3, r3, #240
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 116


 5260 0f4a E02B     		cmp	r3, #224
 5261 0f4c 03D0     		beq	.L341
 5262              	.L340:
1115:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5263              		.loc 1 1115 0 is_stmt 1
 5264 0f4e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1116:.\Protocolo.c **** 									return 0;
 5265              		.loc 1 1116 0
 5266 0f52 0023     		movs	r3, #0
 5267 0f54 95E0     		b	.L167
 5268              	.L341:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5269              		.loc 1 1112 0 discriminator 2
 5270 0f56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5271 0f58 0133     		adds	r3, r3, #1
 5272 0f5a FB73     		strb	r3, [r7, #15]
 5273              	.L339:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5274              		.loc 1 1112 0 is_stmt 0 discriminator 1
 5275 0f5c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5276 0f5e 0B2B     		cmp	r3, #11
 5277 0f60 D8D9     		bls	.L342
1117:.\Protocolo.c **** 								}								
1118:.\Protocolo.c **** 							}
1119:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5278              		.loc 1 1119 0 is_stmt 1
 5279 0f62 0023     		movs	r3, #0
 5280 0f64 FB73     		strb	r3, [r7, #15]
 5281 0f66 0DE0     		b	.L343
 5282              	.L344:
1120:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5283              		.loc 1 1120 0 discriminator 3
 5284 0f68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5285 0f6a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5286 0f6c 4832     		adds	r2, r2, #72
 5287 0f6e 4749     		ldr	r1, .L365
 5288 0f70 8A5C     		ldrb	r2, [r1, r2]
 5289 0f72 D1B2     		uxtb	r1, r2
 5290 0f74 464A     		ldr	r2, .L365+4
 5291 0f76 1344     		add	r3, r3, r2
 5292 0f78 0A46     		mov	r2, r1
 5293 0f7a 83F84F20 		strb	r2, [r3, #79]
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5294              		.loc 1 1119 0 discriminator 3
 5295 0f7e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5296 0f80 0133     		adds	r3, r3, #1
 5297 0f82 FB73     		strb	r3, [r7, #15]
 5298              	.L343:
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5299              		.loc 1 1119 0 is_stmt 0 discriminator 1
 5300 0f84 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5301 0f86 042B     		cmp	r3, #4
 5302 0f88 EED9     		bls	.L344
1121:.\Protocolo.c **** 							}					
1122:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5303              		.loc 1 1122 0 is_stmt 1
 5304 0f8a 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 117


 5305 0f8c FB73     		strb	r3, [r7, #15]
 5306 0f8e 23E0     		b	.L345
 5307              	.L348:
1123:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5308              		.loc 1 1123 0
 5309 0f90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5310 0f92 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5311 0f94 5832     		adds	r2, r2, #88
 5312 0f96 3D49     		ldr	r1, .L365
 5313 0f98 8A5C     		ldrb	r2, [r1, r2]
 5314 0f9a D1B2     		uxtb	r1, r2
 5315 0f9c 3C4A     		ldr	r2, .L365+4
 5316 0f9e 1344     		add	r3, r3, r2
 5317 0fa0 0A46     		mov	r2, r1
 5318 0fa2 83F83220 		strb	r2, [r3, #50]
1124:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 5319              		.loc 1 1124 0
 5320 0fa6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5321 0fa8 394A     		ldr	r2, .L365+4
 5322 0faa 1344     		add	r3, r3, r2
 5323 0fac 93F83230 		ldrb	r3, [r3, #50]
 5324 0fb0 DBB2     		uxtb	r3, r3
 5325 0fb2 002B     		cmp	r3, #0
 5326 0fb4 09D0     		beq	.L346
 5327              		.loc 1 1124 0 is_stmt 0 discriminator 1
 5328 0fb6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5329 0fb8 354A     		ldr	r2, .L365+4
 5330 0fba 1344     		add	r3, r3, r2
 5331 0fbc 93F83230 		ldrb	r3, [r3, #50]
 5332 0fc0 DBB2     		uxtb	r3, r3
 5333 0fc2 03F0F003 		and	r3, r3, #240
 5334 0fc6 E02B     		cmp	r3, #224
 5335 0fc8 03D0     		beq	.L347
 5336              	.L346:
1125:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5337              		.loc 1 1125 0 is_stmt 1
 5338 0fca FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1126:.\Protocolo.c **** 									return 0;
 5339              		.loc 1 1126 0
 5340 0fce 0023     		movs	r3, #0
 5341 0fd0 57E0     		b	.L167
 5342              	.L347:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5343              		.loc 1 1122 0 discriminator 2
 5344 0fd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5345 0fd4 0133     		adds	r3, r3, #1
 5346 0fd6 FB73     		strb	r3, [r7, #15]
 5347              	.L345:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5348              		.loc 1 1122 0 is_stmt 0 discriminator 1
 5349 0fd8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5350 0fda 0B2B     		cmp	r3, #11
 5351 0fdc D8D9     		bls	.L348
1127:.\Protocolo.c **** 								}								
1128:.\Protocolo.c **** 							}
1129:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5352              		.loc 1 1129 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 118


 5353 0fde 0023     		movs	r3, #0
 5354 0fe0 FB73     		strb	r3, [r7, #15]
 5355 0fe2 26E0     		b	.L349
 5356              	.L352:
1130:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5357              		.loc 1 1130 0
 5358 0fe4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5359 0fe6 0C33     		adds	r3, r3, #12
 5360 0fe8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5361 0fea 6532     		adds	r2, r2, #101
 5362 0fec 2749     		ldr	r1, .L365
 5363 0fee 8A5C     		ldrb	r2, [r1, r2]
 5364 0ff0 D1B2     		uxtb	r1, r2
 5365 0ff2 274A     		ldr	r2, .L365+4
 5366 0ff4 1344     		add	r3, r3, r2
 5367 0ff6 0A46     		mov	r2, r1
 5368 0ff8 83F83220 		strb	r2, [r3, #50]
1131:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 5369              		.loc 1 1131 0
 5370 0ffc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5371 0ffe 0C33     		adds	r3, r3, #12
 5372 1000 234A     		ldr	r2, .L365+4
 5373 1002 1344     		add	r3, r3, r2
 5374 1004 93F83230 		ldrb	r3, [r3, #50]
 5375 1008 DBB2     		uxtb	r3, r3
 5376 100a 002B     		cmp	r3, #0
 5377 100c 0AD0     		beq	.L350
 5378              		.loc 1 1131 0 is_stmt 0 discriminator 1
 5379 100e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5380 1010 0C33     		adds	r3, r3, #12
 5381 1012 1F4A     		ldr	r2, .L365+4
 5382 1014 1344     		add	r3, r3, r2
 5383 1016 93F83230 		ldrb	r3, [r3, #50]
 5384 101a DBB2     		uxtb	r3, r3
 5385 101c 03F0F003 		and	r3, r3, #240
 5386 1020 E02B     		cmp	r3, #224
 5387 1022 03D0     		beq	.L351
 5388              	.L350:
1132:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5389              		.loc 1 1132 0 is_stmt 1
 5390 1024 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1133:.\Protocolo.c **** 									return 0;
 5391              		.loc 1 1133 0
 5392 1028 0023     		movs	r3, #0
 5393 102a 2AE0     		b	.L167
 5394              	.L351:
1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5395              		.loc 1 1129 0 discriminator 2
 5396 102c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5397 102e 0133     		adds	r3, r3, #1
 5398 1030 FB73     		strb	r3, [r7, #15]
 5399              	.L349:
1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5400              		.loc 1 1129 0 is_stmt 0 discriminator 1
 5401 1032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5402 1034 0B2B     		cmp	r3, #11
 5403 1036 D5D9     		bls	.L352
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 119


1134:.\Protocolo.c **** 								}								
1135:.\Protocolo.c **** 							}
1136:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5404              		.loc 1 1136 0 is_stmt 1
 5405 1038 0023     		movs	r3, #0
 5406 103a FB73     		strb	r3, [r7, #15]
 5407 103c 0DE0     		b	.L353
 5408              	.L354:
1137:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5409              		.loc 1 1137 0 discriminator 3
 5410 103e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5411 1040 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5412 1042 7232     		adds	r2, r2, #114
 5413 1044 1149     		ldr	r1, .L365
 5414 1046 8A5C     		ldrb	r2, [r1, r2]
 5415 1048 D1B2     		uxtb	r1, r2
 5416 104a 114A     		ldr	r2, .L365+4
 5417 104c 1344     		add	r3, r3, r2
 5418 104e 0A46     		mov	r2, r1
 5419 1050 83F85420 		strb	r2, [r3, #84]
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5420              		.loc 1 1136 0 discriminator 3
 5421 1054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5422 1056 0133     		adds	r3, r3, #1
 5423 1058 FB73     		strb	r3, [r7, #15]
 5424              	.L353:
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5425              		.loc 1 1136 0 is_stmt 0 discriminator 1
 5426 105a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5427 105c 042B     		cmp	r3, #4
 5428 105e EED9     		bls	.L354
1138:.\Protocolo.c **** 							}
1139:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5429              		.loc 1 1139 0 is_stmt 1
 5430 1060 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1140:.\Protocolo.c ****     						return 3;                            
 5431              		.loc 1 1140 0
 5432 1064 0323     		movs	r3, #3
 5433 1066 0CE0     		b	.L167
 5434              	.L334:
1141:.\Protocolo.c **** 						}
1142:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5435              		.loc 1 1142 0
 5436 1068 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1143:.\Protocolo.c **** 						return 1;			
 5437              		.loc 1 1143 0
 5438 106c 0123     		movs	r3, #1
 5439 106e 08E0     		b	.L167
 5440              	.L308:
1144:.\Protocolo.c **** 					}
1145:.\Protocolo.c **** 					else{
1146:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5441              		.loc 1 1146 0
 5442 1070 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1147:.\Protocolo.c **** 						return 0;		
 5443              		.loc 1 1147 0
 5444 1074 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 120


 5445 1076 04E0     		b	.L167
 5446              	.L307:
1148:.\Protocolo.c **** 					}
1149:.\Protocolo.c **** 				}
1150:.\Protocolo.c **** 				else{
1151:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 5447              		.loc 1 1151 0
 5448 1078 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1152:.\Protocolo.c **** 					return 0;		
 5449              		.loc 1 1152 0
 5450 107c 0023     		movs	r3, #0
 5451 107e 00E0     		b	.L167
 5452              	.L154:
1153:.\Protocolo.c **** 				}				
1154:.\Protocolo.c **** 			}		
1155:.\Protocolo.c **** 		}
1156:.\Protocolo.c **** 	}
1157:.\Protocolo.c **** 	else{
1158:.\Protocolo.c **** 		return 0;
 5453              		.loc 1 1158 0
 5454 1080 0023     		movs	r3, #0
 5455              	.L167:
1159:.\Protocolo.c **** 	}
1160:.\Protocolo.c **** }
 5456              		.loc 1 1160 0
 5457 1082 1846     		mov	r0, r3
 5458 1084 1037     		adds	r7, r7, #16
 5459              		.cfi_def_cfa_offset 8
 5460 1086 BD46     		mov	sp, r7
 5461              		.cfi_def_cfa_register 13
 5462              		@ sp needed
 5463 1088 80BD     		pop	{r7, pc}
 5464              	.L366:
 5465 108a 00BF     		.align	2
 5466              	.L365:
 5467 108c 00000000 		.word	Surtidor_rxBuffer
 5468 1090 00000000 		.word	lado2
 5469              		.cfi_endproc
 5470              	.LFE72:
 5471              		.size	totales, .-totales
 5472              		.text
 5473              	.Letext0:
 5474              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5475              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5476              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5477              		.file 5 ".\\VariablesG.h"
 5478              		.file 6 "Generated_Source\\PSoC5/Surtidor.h"
 5479              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 5480              		.section	.debug_info,"",%progbits
 5481              	.Ldebug_info0:
 5482 0000 870B0000 		.4byte	0xb87
 5483 0004 0400     		.2byte	0x4
 5484 0006 00000000 		.4byte	.Ldebug_abbrev0
 5485 000a 04       		.byte	0x4
 5486 000b 01       		.uleb128 0x1
 5487 000c FD020000 		.4byte	.LASF124
 5488 0010 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 121


 5489 0011 5B010000 		.4byte	.LASF125
 5490 0015 30000000 		.4byte	.LASF126
 5491 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5492 001d 00000000 		.4byte	0
 5493 0021 00000000 		.4byte	.Ldebug_line0
 5494 0025 02       		.uleb128 0x2
 5495 0026 01       		.byte	0x1
 5496 0027 06       		.byte	0x6
 5497 0028 E2040000 		.4byte	.LASF0
 5498 002c 02       		.uleb128 0x2
 5499 002d 01       		.byte	0x1
 5500 002e 08       		.byte	0x8
 5501 002f 98040000 		.4byte	.LASF1
 5502 0033 02       		.uleb128 0x2
 5503 0034 02       		.byte	0x2
 5504 0035 05       		.byte	0x5
 5505 0036 02040000 		.4byte	.LASF2
 5506 003a 02       		.uleb128 0x2
 5507 003b 02       		.byte	0x2
 5508 003c 07       		.byte	0x7
 5509 003d 04050000 		.4byte	.LASF3
 5510 0041 03       		.uleb128 0x3
 5511 0042 95000000 		.4byte	.LASF9
 5512 0046 02       		.byte	0x2
 5513 0047 3F       		.byte	0x3f
 5514 0048 4C000000 		.4byte	0x4c
 5515 004c 02       		.uleb128 0x2
 5516 004d 04       		.byte	0x4
 5517 004e 05       		.byte	0x5
 5518 004f 0C040000 		.4byte	.LASF4
 5519 0053 02       		.uleb128 0x2
 5520 0054 04       		.byte	0x4
 5521 0055 07       		.byte	0x7
 5522 0056 73040000 		.4byte	.LASF5
 5523 005a 02       		.uleb128 0x2
 5524 005b 08       		.byte	0x8
 5525 005c 05       		.byte	0x5
 5526 005d D0020000 		.4byte	.LASF6
 5527 0061 02       		.uleb128 0x2
 5528 0062 08       		.byte	0x8
 5529 0063 07       		.byte	0x7
 5530 0064 44010000 		.4byte	.LASF7
 5531 0068 04       		.uleb128 0x4
 5532 0069 04       		.byte	0x4
 5533 006a 05       		.byte	0x5
 5534 006b 696E7400 		.ascii	"int\000"
 5535 006f 02       		.uleb128 0x2
 5536 0070 04       		.byte	0x4
 5537 0071 07       		.byte	0x7
 5538 0072 80000000 		.4byte	.LASF8
 5539 0076 03       		.uleb128 0x3
 5540 0077 85040000 		.4byte	.LASF10
 5541 007b 03       		.byte	0x3
 5542 007c 2C       		.byte	0x2c
 5543 007d 41000000 		.4byte	0x41
 5544 0081 03       		.uleb128 0x3
 5545 0082 1D050000 		.4byte	.LASF11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 122


 5546 0086 04       		.byte	0x4
 5547 0087 B4       		.byte	0xb4
 5548 0088 2C000000 		.4byte	0x2c
 5549 008c 03       		.uleb128 0x3
 5550 008d 5B020000 		.4byte	.LASF12
 5551 0091 04       		.byte	0x4
 5552 0092 B5       		.byte	0xb5
 5553 0093 3A000000 		.4byte	0x3a
 5554 0097 02       		.uleb128 0x2
 5555 0098 04       		.byte	0x4
 5556 0099 04       		.byte	0x4
 5557 009a 05010000 		.4byte	.LASF13
 5558 009e 02       		.uleb128 0x2
 5559 009f 08       		.byte	0x8
 5560 00a0 04       		.byte	0x4
 5561 00a1 23050000 		.4byte	.LASF14
 5562 00a5 02       		.uleb128 0x2
 5563 00a6 01       		.byte	0x1
 5564 00a7 08       		.byte	0x8
 5565 00a8 40020000 		.4byte	.LASF15
 5566 00ac 05       		.uleb128 0x5
 5567 00ad 81000000 		.4byte	0x81
 5568 00b1 05       		.uleb128 0x5
 5569 00b2 8C000000 		.4byte	0x8c
 5570 00b6 02       		.uleb128 0x2
 5571 00b7 04       		.byte	0x4
 5572 00b8 07       		.byte	0x7
 5573 00b9 6A040000 		.4byte	.LASF16
 5574 00bd 06       		.uleb128 0x6
 5575 00be 81000000 		.4byte	0x81
 5576 00c2 CD000000 		.4byte	0xcd
 5577 00c6 07       		.uleb128 0x7
 5578 00c7 B6000000 		.4byte	0xb6
 5579 00cb 03       		.byte	0x3
 5580 00cc 00       		.byte	0
 5581 00cd 08       		.uleb128 0x8
 5582 00ce 22040000 		.4byte	.LASF21
 5583 00d2 5D       		.byte	0x5d
 5584 00d3 05       		.byte	0x5
 5585 00d4 5B       		.byte	0x5b
 5586 00d5 22010000 		.4byte	0x122
 5587 00d9 09       		.uleb128 0x9
 5588 00da 64697200 		.ascii	"dir\000"
 5589 00de 05       		.byte	0x5
 5590 00df 5C       		.byte	0x5c
 5591 00e0 AC000000 		.4byte	0xac
 5592 00e4 00       		.byte	0
 5593 00e5 0A       		.uleb128 0xa
 5594 00e6 C1030000 		.4byte	.LASF17
 5595 00ea 05       		.byte	0x5
 5596 00eb 5D       		.byte	0x5d
 5597 00ec AC000000 		.4byte	0xac
 5598 00f0 01       		.byte	0x1
 5599 00f1 0A       		.uleb128 0xa
 5600 00f2 93020000 		.4byte	.LASF18
 5601 00f6 05       		.byte	0x5
 5602 00f7 5E       		.byte	0x5e
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 123


 5603 00f8 38010000 		.4byte	0x138
 5604 00fc 02       		.byte	0x2
 5605 00fd 09       		.uleb128 0x9
 5606 00fe 70707500 		.ascii	"ppu\000"
 5607 0102 05       		.byte	0x5
 5608 0103 5F       		.byte	0x5f
 5609 0104 53010000 		.4byte	0x153
 5610 0108 4A       		.byte	0x4a
 5611 0109 0A       		.uleb128 0xa
 5612 010a 64050000 		.4byte	.LASF19
 5613 010e 05       		.byte	0x5
 5614 010f 60       		.byte	0x60
 5615 0110 6E010000 		.4byte	0x16e
 5616 0114 59       		.byte	0x59
 5617 0115 0A       		.uleb128 0xa
 5618 0116 51020000 		.4byte	.LASF20
 5619 011a 05       		.byte	0x5
 5620 011b 61       		.byte	0x61
 5621 011c AC000000 		.4byte	0xac
 5622 0120 5C       		.byte	0x5c
 5623 0121 00       		.byte	0
 5624 0122 06       		.uleb128 0x6
 5625 0123 81000000 		.4byte	0x81
 5626 0127 38010000 		.4byte	0x138
 5627 012b 07       		.uleb128 0x7
 5628 012c B6000000 		.4byte	0xb6
 5629 0130 02       		.byte	0x2
 5630 0131 07       		.uleb128 0x7
 5631 0132 B6000000 		.4byte	0xb6
 5632 0136 17       		.byte	0x17
 5633 0137 00       		.byte	0
 5634 0138 05       		.uleb128 0x5
 5635 0139 22010000 		.4byte	0x122
 5636 013d 06       		.uleb128 0x6
 5637 013e 81000000 		.4byte	0x81
 5638 0142 53010000 		.4byte	0x153
 5639 0146 07       		.uleb128 0x7
 5640 0147 B6000000 		.4byte	0xb6
 5641 014b 02       		.byte	0x2
 5642 014c 07       		.uleb128 0x7
 5643 014d B6000000 		.4byte	0xb6
 5644 0151 04       		.byte	0x4
 5645 0152 00       		.byte	0
 5646 0153 05       		.uleb128 0x5
 5647 0154 3D010000 		.4byte	0x13d
 5648 0158 06       		.uleb128 0x6
 5649 0159 81000000 		.4byte	0x81
 5650 015d 6E010000 		.4byte	0x16e
 5651 0161 07       		.uleb128 0x7
 5652 0162 B6000000 		.4byte	0xb6
 5653 0166 02       		.byte	0x2
 5654 0167 07       		.uleb128 0x7
 5655 0168 B6000000 		.4byte	0xb6
 5656 016c 00       		.byte	0
 5657 016d 00       		.byte	0
 5658 016e 05       		.uleb128 0x5
 5659 016f 58010000 		.4byte	0x158
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 124


 5660 0173 08       		.uleb128 0x8
 5661 0174 A7030000 		.4byte	.LASF22
 5662 0178 76       		.byte	0x76
 5663 0179 05       		.byte	0x5
 5664 017a 72       		.byte	0x72
 5665 017b 62020000 		.4byte	0x262
 5666 017f 0A       		.uleb128 0xa
 5667 0180 D1000000 		.4byte	.LASF23
 5668 0184 05       		.byte	0x5
 5669 0185 73       		.byte	0x73
 5670 0186 81000000 		.4byte	0x81
 5671 018a 00       		.byte	0
 5672 018b 0A       		.uleb128 0xa
 5673 018c 64050000 		.4byte	.LASF19
 5674 0190 05       		.byte	0x5
 5675 0191 74       		.byte	0x74
 5676 0192 81000000 		.4byte	0x81
 5677 0196 01       		.byte	0x1
 5678 0197 09       		.uleb128 0x9
 5679 0198 70707500 		.ascii	"ppu\000"
 5680 019c 05       		.byte	0x5
 5681 019d 75       		.byte	0x75
 5682 019e 62020000 		.4byte	0x262
 5683 01a2 02       		.byte	0x2
 5684 01a3 0A       		.uleb128 0xa
 5685 01a4 AE030000 		.4byte	.LASF24
 5686 01a8 05       		.byte	0x5
 5687 01a9 76       		.byte	0x76
 5688 01aa 72020000 		.4byte	0x272
 5689 01ae 07       		.byte	0x7
 5690 01af 0A       		.uleb128 0xa
 5691 01b0 D5010000 		.4byte	.LASF25
 5692 01b4 05       		.byte	0x5
 5693 01b5 77       		.byte	0x77
 5694 01b6 72020000 		.4byte	0x272
 5695 01ba 10       		.byte	0x10
 5696 01bb 0A       		.uleb128 0xa
 5697 01bc DE020000 		.4byte	.LASF26
 5698 01c0 05       		.byte	0x5
 5699 01c1 78       		.byte	0x78
 5700 01c2 81000000 		.4byte	0x81
 5701 01c6 19       		.byte	0x19
 5702 01c7 0A       		.uleb128 0xa
 5703 01c8 4E050000 		.4byte	.LASF27
 5704 01cc 05       		.byte	0x5
 5705 01cd 79       		.byte	0x79
 5706 01ce 81000000 		.4byte	0x81
 5707 01d2 1A       		.byte	0x1a
 5708 01d3 0A       		.uleb128 0xa
 5709 01d4 FE000000 		.4byte	.LASF28
 5710 01d8 05       		.byte	0x5
 5711 01d9 7A       		.byte	0x7a
 5712 01da 82020000 		.4byte	0x282
 5713 01de 1B       		.byte	0x1b
 5714 01df 09       		.uleb128 0x9
 5715 01e0 696400   		.ascii	"id\000"
 5716 01e3 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 125


 5717 01e4 7B       		.byte	0x7b
 5718 01e5 92020000 		.4byte	0x292
 5719 01e9 23       		.byte	0x23
 5720 01ea 0A       		.uleb128 0xa
 5721 01eb 87020000 		.4byte	.LASF29
 5722 01ef 05       		.byte	0x5
 5723 01f0 7C       		.byte	0x7c
 5724 01f1 92020000 		.4byte	0x292
 5725 01f5 33       		.byte	0x33
 5726 01f6 09       		.uleb128 0x9
 5727 01f7 6B6D00   		.ascii	"km\000"
 5728 01fa 05       		.byte	0x5
 5729 01fb 7D       		.byte	0x7d
 5730 01fc A2020000 		.4byte	0x2a2
 5731 0200 43       		.byte	0x43
 5732 0201 0A       		.uleb128 0xa
 5733 0202 B1010000 		.4byte	.LASF30
 5734 0206 05       		.byte	0x5
 5735 0207 7E       		.byte	0x7e
 5736 0208 72020000 		.4byte	0x272
 5737 020c 4E       		.byte	0x4e
 5738 020d 0A       		.uleb128 0xa
 5739 020e 3B010000 		.4byte	.LASF31
 5740 0212 05       		.byte	0x5
 5741 0213 7F       		.byte	0x7f
 5742 0214 81000000 		.4byte	0x81
 5743 0218 57       		.byte	0x57
 5744 0219 0A       		.uleb128 0xa
 5745 021a 7C020000 		.4byte	.LASF32
 5746 021e 05       		.byte	0x5
 5747 021f 80       		.byte	0x80
 5748 0220 81000000 		.4byte	0x81
 5749 0224 58       		.byte	0x58
 5750 0225 0A       		.uleb128 0xa
 5751 0226 F6020000 		.4byte	.LASF33
 5752 022a 05       		.byte	0x5
 5753 022b 81       		.byte	0x81
 5754 022c A2020000 		.4byte	0x2a2
 5755 0230 59       		.byte	0x59
 5756 0231 0A       		.uleb128 0xa
 5757 0232 00000000 		.4byte	.LASF34
 5758 0236 05       		.byte	0x5
 5759 0237 82       		.byte	0x82
 5760 0238 A2020000 		.4byte	0x2a2
 5761 023c 64       		.byte	0x64
 5762 023d 0A       		.uleb128 0xa
 5763 023e 8D020000 		.4byte	.LASF35
 5764 0242 05       		.byte	0x5
 5765 0243 83       		.byte	0x83
 5766 0244 81000000 		.4byte	0x81
 5767 0248 6F       		.byte	0x6f
 5768 0249 0A       		.uleb128 0xa
 5769 024a 8D040000 		.4byte	.LASF36
 5770 024e 05       		.byte	0x5
 5771 024f 84       		.byte	0x84
 5772 0250 81000000 		.4byte	0x81
 5773 0254 70       		.byte	0x70
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 126


 5774 0255 0A       		.uleb128 0xa
 5775 0256 C8030000 		.4byte	.LASF37
 5776 025a 05       		.byte	0x5
 5777 025b 85       		.byte	0x85
 5778 025c 62020000 		.4byte	0x262
 5779 0260 71       		.byte	0x71
 5780 0261 00       		.byte	0
 5781 0262 06       		.uleb128 0x6
 5782 0263 81000000 		.4byte	0x81
 5783 0267 72020000 		.4byte	0x272
 5784 026b 07       		.uleb128 0x7
 5785 026c B6000000 		.4byte	0xb6
 5786 0270 04       		.byte	0x4
 5787 0271 00       		.byte	0
 5788 0272 06       		.uleb128 0x6
 5789 0273 81000000 		.4byte	0x81
 5790 0277 82020000 		.4byte	0x282
 5791 027b 07       		.uleb128 0x7
 5792 027c B6000000 		.4byte	0xb6
 5793 0280 08       		.byte	0x8
 5794 0281 00       		.byte	0
 5795 0282 06       		.uleb128 0x6
 5796 0283 81000000 		.4byte	0x81
 5797 0287 92020000 		.4byte	0x292
 5798 028b 07       		.uleb128 0x7
 5799 028c B6000000 		.4byte	0xb6
 5800 0290 07       		.byte	0x7
 5801 0291 00       		.byte	0
 5802 0292 06       		.uleb128 0x6
 5803 0293 81000000 		.4byte	0x81
 5804 0297 A2020000 		.4byte	0x2a2
 5805 029b 07       		.uleb128 0x7
 5806 029c B6000000 		.4byte	0xb6
 5807 02a0 0F       		.byte	0xf
 5808 02a1 00       		.byte	0
 5809 02a2 06       		.uleb128 0x6
 5810 02a3 81000000 		.4byte	0x81
 5811 02a7 B2020000 		.4byte	0x2b2
 5812 02ab 07       		.uleb128 0x7
 5813 02ac B6000000 		.4byte	0xb6
 5814 02b0 0A       		.byte	0xa
 5815 02b1 00       		.byte	0
 5816 02b2 0B       		.uleb128 0xb
 5817 02b3 6A050000 		.4byte	.LASF127
 5818 02b7 01       		.byte	0x1
 5819 02b8 3F       		.byte	0x3f
 5820 02b9 00000000 		.4byte	.LFB63
 5821 02bd 14000000 		.4byte	.LFE63-.LFB63
 5822 02c1 01       		.uleb128 0x1
 5823 02c2 9C       		.byte	0x9c
 5824 02c3 0C       		.uleb128 0xc
 5825 02c4 A6040000 		.4byte	.LASF38
 5826 02c8 01       		.byte	0x1
 5827 02c9 56       		.byte	0x56
 5828 02ca 81000000 		.4byte	0x81
 5829 02ce 00000000 		.4byte	.LFB64
 5830 02d2 98000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 127


 5831 02d6 01       		.uleb128 0x1
 5832 02d7 9C       		.byte	0x9c
 5833 02d8 F9020000 		.4byte	0x2f9
 5834 02dc 0D       		.uleb128 0xd
 5835 02dd 64697200 		.ascii	"dir\000"
 5836 02e1 01       		.byte	0x1
 5837 02e2 56       		.byte	0x56
 5838 02e3 81000000 		.4byte	0x81
 5839 02e7 02       		.uleb128 0x2
 5840 02e8 91       		.byte	0x91
 5841 02e9 6F       		.sleb128 -17
 5842 02ea 0E       		.uleb128 0xe
 5843 02eb C1030000 		.4byte	.LASF17
 5844 02ef 01       		.byte	0x1
 5845 02f0 57       		.byte	0x57
 5846 02f1 81000000 		.4byte	0x81
 5847 02f5 02       		.uleb128 0x2
 5848 02f6 91       		.byte	0x91
 5849 02f7 77       		.sleb128 -9
 5850 02f8 00       		.byte	0
 5851 02f9 0C       		.uleb128 0xc
 5852 02fa CD010000 		.4byte	.LASF39
 5853 02fe 01       		.byte	0x1
 5854 02ff 86       		.byte	0x86
 5855 0300 81000000 		.4byte	0x81
 5856 0304 00000000 		.4byte	.LFB65
 5857 0308 A0000000 		.4byte	.LFE65-.LFB65
 5858 030c 01       		.uleb128 0x1
 5859 030d 9C       		.byte	0x9c
 5860 030e 1F030000 		.4byte	0x31f
 5861 0312 0F       		.uleb128 0xf
 5862 0313 7800     		.ascii	"x\000"
 5863 0315 01       		.byte	0x1
 5864 0316 87       		.byte	0x87
 5865 0317 81000000 		.4byte	0x81
 5866 031b 02       		.uleb128 0x2
 5867 031c 91       		.byte	0x91
 5868 031d 77       		.sleb128 -9
 5869 031e 00       		.byte	0
 5870 031f 10       		.uleb128 0x10
 5871 0320 C1040000 		.4byte	.LASF43
 5872 0324 01       		.byte	0x1
 5873 0325 B2       		.byte	0xb2
 5874 0326 00000000 		.4byte	.LFB66
 5875 032a 36000000 		.4byte	.LFE66-.LFB66
 5876 032e 01       		.uleb128 0x1
 5877 032f 9C       		.byte	0x9c
 5878 0330 51030000 		.4byte	0x351
 5879 0334 0D       		.uleb128 0xd
 5880 0335 76616C00 		.ascii	"val\000"
 5881 0339 01       		.byte	0x1
 5882 033a B2       		.byte	0xb2
 5883 033b 81000000 		.4byte	0x81
 5884 033f 02       		.uleb128 0x2
 5885 0340 91       		.byte	0x91
 5886 0341 6F       		.sleb128 -17
 5887 0342 0E       		.uleb128 0xe
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 128


 5888 0343 C1030000 		.4byte	.LASF17
 5889 0347 01       		.byte	0x1
 5890 0348 B3       		.byte	0xb3
 5891 0349 81000000 		.4byte	0x81
 5892 034d 02       		.uleb128 0x2
 5893 034e 91       		.byte	0x91
 5894 034f 77       		.sleb128 -9
 5895 0350 00       		.byte	0
 5896 0351 0C       		.uleb128 0xc
 5897 0352 56040000 		.4byte	.LASF40
 5898 0356 01       		.byte	0x1
 5899 0357 CF       		.byte	0xcf
 5900 0358 81000000 		.4byte	0x81
 5901 035c 00000000 		.4byte	.LFB67
 5902 0360 7C010000 		.4byte	.LFE67-.LFB67
 5903 0364 01       		.uleb128 0x1
 5904 0365 9C       		.byte	0x9c
 5905 0366 A1030000 		.4byte	0x3a1
 5906 036a 0D       		.uleb128 0xd
 5907 036b 76616C00 		.ascii	"val\000"
 5908 036f 01       		.byte	0x1
 5909 0370 CF       		.byte	0xcf
 5910 0371 81000000 		.4byte	0x81
 5911 0375 02       		.uleb128 0x2
 5912 0376 91       		.byte	0x91
 5913 0377 4F       		.sleb128 -49
 5914 0378 0E       		.uleb128 0xe
 5915 0379 2A050000 		.4byte	.LASF41
 5916 037d 01       		.byte	0x1
 5917 037e D0       		.byte	0xd0
 5918 037f A1030000 		.4byte	0x3a1
 5919 0383 02       		.uleb128 0x2
 5920 0384 91       		.byte	0x91
 5921 0385 5C       		.sleb128 -36
 5922 0386 0F       		.uleb128 0xf
 5923 0387 7800     		.ascii	"x\000"
 5924 0389 01       		.byte	0x1
 5925 038a D0       		.byte	0xd0
 5926 038b 81000000 		.4byte	0x81
 5927 038f 02       		.uleb128 0x2
 5928 0390 91       		.byte	0x91
 5929 0391 6F       		.sleb128 -17
 5930 0392 0E       		.uleb128 0xe
 5931 0393 27020000 		.4byte	.LASF42
 5932 0397 01       		.byte	0x1
 5933 0398 D0       		.byte	0xd0
 5934 0399 72020000 		.4byte	0x272
 5935 039d 02       		.uleb128 0x2
 5936 039e 91       		.byte	0x91
 5937 039f 50       		.sleb128 -48
 5938 03a0 00       		.byte	0
 5939 03a1 06       		.uleb128 0x6
 5940 03a2 81000000 		.4byte	0x81
 5941 03a6 B1030000 		.4byte	0x3b1
 5942 03aa 07       		.uleb128 0x7
 5943 03ab B6000000 		.4byte	0xb6
 5944 03af 12       		.byte	0x12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 129


 5945 03b0 00       		.byte	0
 5946 03b1 11       		.uleb128 0x11
 5947 03b2 1F020000 		.4byte	.LASF44
 5948 03b6 01       		.byte	0x1
 5949 03b7 2001     		.2byte	0x120
 5950 03b9 00000000 		.4byte	.LFB68
 5951 03bd 24000000 		.4byte	.LFE68-.LFB68
 5952 03c1 01       		.uleb128 0x1
 5953 03c2 9C       		.byte	0x9c
 5954 03c3 D7030000 		.4byte	0x3d7
 5955 03c7 12       		.uleb128 0x12
 5956 03c8 76616C00 		.ascii	"val\000"
 5957 03cc 01       		.byte	0x1
 5958 03cd 2001     		.2byte	0x120
 5959 03cf 81000000 		.4byte	0x81
 5960 03d3 02       		.uleb128 0x2
 5961 03d4 91       		.byte	0x91
 5962 03d5 77       		.sleb128 -9
 5963 03d6 00       		.byte	0
 5964 03d7 13       		.uleb128 0x13
 5965 03d8 DD010000 		.4byte	.LASF45
 5966 03dc 01       		.byte	0x1
 5967 03dd 3501     		.2byte	0x135
 5968 03df 81000000 		.4byte	0x81
 5969 03e3 00000000 		.4byte	.LFB69
 5970 03e7 54030000 		.4byte	.LFE69-.LFB69
 5971 03eb 01       		.uleb128 0x1
 5972 03ec 9C       		.byte	0x9c
 5973 03ed 0E040000 		.4byte	0x40e
 5974 03f1 12       		.uleb128 0x12
 5975 03f2 64697200 		.ascii	"dir\000"
 5976 03f6 01       		.byte	0x1
 5977 03f7 3501     		.2byte	0x135
 5978 03f9 81000000 		.4byte	0x81
 5979 03fd 02       		.uleb128 0x2
 5980 03fe 91       		.byte	0x91
 5981 03ff 6F       		.sleb128 -17
 5982 0400 14       		.uleb128 0x14
 5983 0401 7800     		.ascii	"x\000"
 5984 0403 01       		.byte	0x1
 5985 0404 3601     		.2byte	0x136
 5986 0406 81000000 		.4byte	0x81
 5987 040a 02       		.uleb128 0x2
 5988 040b 91       		.byte	0x91
 5989 040c 77       		.sleb128 -9
 5990 040d 00       		.byte	0
 5991 040e 13       		.uleb128 0x13
 5992 040f 60040000 		.4byte	.LASF46
 5993 0413 01       		.byte	0x1
 5994 0414 8D01     		.2byte	0x18d
 5995 0416 81000000 		.4byte	0x81
 5996 041a 00000000 		.4byte	.LFB70
 5997 041e 80080000 		.4byte	.LFE70-.LFB70
 5998 0422 01       		.uleb128 0x1
 5999 0423 9C       		.byte	0x9c
 6000 0424 AE040000 		.4byte	0x4ae
 6001 0428 12       		.uleb128 0x12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 130


 6002 0429 64697200 		.ascii	"dir\000"
 6003 042d 01       		.byte	0x1
 6004 042e 8D01     		.2byte	0x18d
 6005 0430 81000000 		.4byte	0x81
 6006 0434 02       		.uleb128 0x2
 6007 0435 91       		.byte	0x91
 6008 0436 5F       		.sleb128 -33
 6009 0437 15       		.uleb128 0x15
 6010 0438 64050000 		.4byte	.LASF19
 6011 043c 01       		.byte	0x1
 6012 043d 8D01     		.2byte	0x18d
 6013 043f 81000000 		.4byte	0x81
 6014 0443 02       		.uleb128 0x2
 6015 0444 91       		.byte	0x91
 6016 0445 5E       		.sleb128 -34
 6017 0446 15       		.uleb128 0x15
 6018 0447 EE040000 		.4byte	.LASF47
 6019 044b 01       		.byte	0x1
 6020 044c 8D01     		.2byte	0x18d
 6021 044e AE040000 		.4byte	0x4ae
 6022 0452 02       		.uleb128 0x2
 6023 0453 91       		.byte	0x91
 6024 0454 58       		.sleb128 -40
 6025 0455 15       		.uleb128 0x15
 6026 0456 FE000000 		.4byte	.LASF28
 6027 045a 01       		.byte	0x1
 6028 045b 8D01     		.2byte	0x18d
 6029 045d 81000000 		.4byte	0x81
 6030 0461 02       		.uleb128 0x2
 6031 0462 91       		.byte	0x91
 6032 0463 5D       		.sleb128 -35
 6033 0464 16       		.uleb128 0x16
 6034 0465 79000000 		.4byte	.LASF48
 6035 0469 01       		.byte	0x1
 6036 046a 8E01     		.2byte	0x18e
 6037 046c B4040000 		.4byte	0x4b4
 6038 0470 02       		.uleb128 0x2
 6039 0471 91       		.byte	0x91
 6040 0472 60       		.sleb128 -32
 6041 0473 16       		.uleb128 0x16
 6042 0474 A2030000 		.4byte	.LASF49
 6043 0478 01       		.byte	0x1
 6044 0479 8E01     		.2byte	0x18e
 6045 047b 81000000 		.4byte	0x81
 6046 047f 02       		.uleb128 0x2
 6047 0480 91       		.byte	0x91
 6048 0481 77       		.sleb128 -9
 6049 0482 16       		.uleb128 0x16
 6050 0483 39040000 		.4byte	.LASF50
 6051 0487 01       		.byte	0x1
 6052 0488 8E01     		.2byte	0x18e
 6053 048a 81000000 		.4byte	0x81
 6054 048e 02       		.uleb128 0x2
 6055 048f 91       		.byte	0x91
 6056 0490 76       		.sleb128 -10
 6057 0491 14       		.uleb128 0x14
 6058 0492 6900     		.ascii	"i\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 131


 6059 0494 01       		.byte	0x1
 6060 0495 8E01     		.2byte	0x18e
 6061 0497 81000000 		.4byte	0x81
 6062 049b 02       		.uleb128 0x2
 6063 049c 91       		.byte	0x91
 6064 049d 75       		.sleb128 -11
 6065 049e 16       		.uleb128 0x16
 6066 049f B4000000 		.4byte	.LASF51
 6067 04a3 01       		.byte	0x1
 6068 04a4 8E01     		.2byte	0x18e
 6069 04a6 81000000 		.4byte	0x81
 6070 04aa 02       		.uleb128 0x2
 6071 04ab 91       		.byte	0x91
 6072 04ac 74       		.sleb128 -12
 6073 04ad 00       		.byte	0
 6074 04ae 17       		.uleb128 0x17
 6075 04af 04       		.byte	0x4
 6076 04b0 81000000 		.4byte	0x81
 6077 04b4 06       		.uleb128 0x6
 6078 04b5 81000000 		.4byte	0x81
 6079 04b9 C4040000 		.4byte	0x4c4
 6080 04bd 07       		.uleb128 0x7
 6081 04be B6000000 		.4byte	0xb6
 6082 04c2 11       		.byte	0x11
 6083 04c3 00       		.byte	0
 6084 04c4 13       		.uleb128 0x13
 6085 04c5 E7020000 		.4byte	.LASF52
 6086 04c9 01       		.byte	0x1
 6087 04ca 9102     		.2byte	0x291
 6088 04cc 81000000 		.4byte	0x81
 6089 04d0 00000000 		.4byte	.LFB71
 6090 04d4 7C020000 		.4byte	.LFE71-.LFB71
 6091 04d8 01       		.uleb128 0x1
 6092 04d9 9C       		.byte	0x9c
 6093 04da 37050000 		.4byte	0x537
 6094 04de 12       		.uleb128 0x12
 6095 04df 64697200 		.ascii	"dir\000"
 6096 04e3 01       		.byte	0x1
 6097 04e4 9102     		.2byte	0x291
 6098 04e6 81000000 		.4byte	0x81
 6099 04ea 02       		.uleb128 0x2
 6100 04eb 91       		.byte	0x91
 6101 04ec 5F       		.sleb128 -33
 6102 04ed 15       		.uleb128 0x15
 6103 04ee 9F000000 		.4byte	.LASF53
 6104 04f2 01       		.byte	0x1
 6105 04f3 9102     		.2byte	0x291
 6106 04f5 AE040000 		.4byte	0x4ae
 6107 04f9 02       		.uleb128 0x2
 6108 04fa 91       		.byte	0x91
 6109 04fb 58       		.sleb128 -40
 6110 04fc 15       		.uleb128 0x15
 6111 04fd AC000000 		.4byte	.LASF54
 6112 0501 01       		.byte	0x1
 6113 0502 9102     		.2byte	0x291
 6114 0504 81000000 		.4byte	0x81
 6115 0508 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 132


 6116 0509 91       		.byte	0x91
 6117 050a 5E       		.sleb128 -34
 6118 050b 16       		.uleb128 0x16
 6119 050c 79000000 		.4byte	.LASF48
 6120 0510 01       		.byte	0x1
 6121 0511 9202     		.2byte	0x292
 6122 0513 37050000 		.4byte	0x537
 6123 0517 02       		.uleb128 0x2
 6124 0518 91       		.byte	0x91
 6125 0519 64       		.sleb128 -28
 6126 051a 16       		.uleb128 0x16
 6127 051b A2030000 		.4byte	.LASF49
 6128 051f 01       		.byte	0x1
 6129 0520 9202     		.2byte	0x292
 6130 0522 81000000 		.4byte	0x81
 6131 0526 02       		.uleb128 0x2
 6132 0527 91       		.byte	0x91
 6133 0528 77       		.sleb128 -9
 6134 0529 14       		.uleb128 0x14
 6135 052a 7800     		.ascii	"x\000"
 6136 052c 01       		.byte	0x1
 6137 052d 9202     		.2byte	0x292
 6138 052f 81000000 		.4byte	0x81
 6139 0533 02       		.uleb128 0x2
 6140 0534 91       		.byte	0x91
 6141 0535 76       		.sleb128 -10
 6142 0536 00       		.byte	0
 6143 0537 06       		.uleb128 0x6
 6144 0538 81000000 		.4byte	0x81
 6145 053c 47050000 		.4byte	0x547
 6146 0540 07       		.uleb128 0x7
 6147 0541 B6000000 		.4byte	0xb6
 6148 0545 0E       		.byte	0xe
 6149 0546 00       		.byte	0
 6150 0547 13       		.uleb128 0x13
 6151 0548 93020000 		.4byte	.LASF18
 6152 054c 01       		.byte	0x1
 6153 054d EA02     		.2byte	0x2ea
 6154 054f 81000000 		.4byte	0x81
 6155 0553 00000000 		.4byte	.LFB72
 6156 0557 94100000 		.4byte	.LFE72-.LFB72
 6157 055b 01       		.uleb128 0x1
 6158 055c 9C       		.byte	0x9c
 6159 055d 9A050000 		.4byte	0x59a
 6160 0561 12       		.uleb128 0x12
 6161 0562 64697200 		.ascii	"dir\000"
 6162 0566 01       		.byte	0x1
 6163 0567 EA02     		.2byte	0x2ea
 6164 0569 81000000 		.4byte	0x81
 6165 056d 02       		.uleb128 0x2
 6166 056e 91       		.byte	0x91
 6167 056f 6F       		.sleb128 -17
 6168 0570 15       		.uleb128 0x15
 6169 0571 EF030000 		.4byte	.LASF55
 6170 0575 01       		.byte	0x1
 6171 0576 EA02     		.2byte	0x2ea
 6172 0578 81000000 		.4byte	0x81
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 133


 6173 057c 02       		.uleb128 0x2
 6174 057d 91       		.byte	0x91
 6175 057e 6E       		.sleb128 -18
 6176 057f 14       		.uleb128 0x14
 6177 0580 7800     		.ascii	"x\000"
 6178 0582 01       		.byte	0x1
 6179 0583 EB02     		.2byte	0x2eb
 6180 0585 81000000 		.4byte	0x81
 6181 0589 02       		.uleb128 0x2
 6182 058a 91       		.byte	0x91
 6183 058b 77       		.sleb128 -9
 6184 058c 14       		.uleb128 0x14
 6185 058d 7900     		.ascii	"y\000"
 6186 058f 01       		.byte	0x1
 6187 0590 EB02     		.2byte	0x2eb
 6188 0592 81000000 		.4byte	0x81
 6189 0596 02       		.uleb128 0x2
 6190 0597 91       		.byte	0x91
 6191 0598 76       		.sleb128 -10
 6192 0599 00       		.byte	0
 6193 059a 06       		.uleb128 0x6
 6194 059b 81000000 		.4byte	0x81
 6195 059f AA050000 		.4byte	0x5aa
 6196 05a3 07       		.uleb128 0x7
 6197 05a4 B6000000 		.4byte	0xb6
 6198 05a8 FF       		.byte	0xff
 6199 05a9 00       		.byte	0
 6200 05aa 18       		.uleb128 0x18
 6201 05ab 9F010000 		.4byte	.LASF56
 6202 05af 06       		.byte	0x6
 6203 05b0 3E01     		.2byte	0x13e
 6204 05b2 B6050000 		.4byte	0x5b6
 6205 05b6 05       		.uleb128 0x5
 6206 05b7 9A050000 		.4byte	0x59a
 6207 05bb 18       		.uleb128 0x18
 6208 05bc 15040000 		.4byte	.LASF57
 6209 05c0 07       		.byte	0x7
 6210 05c1 2A06     		.2byte	0x62a
 6211 05c3 C7050000 		.4byte	0x5c7
 6212 05c7 05       		.uleb128 0x5
 6213 05c8 76000000 		.4byte	0x76
 6214 05cc 19       		.uleb128 0x19
 6215 05cd A8020000 		.4byte	.LASF58
 6216 05d1 05       		.byte	0x5
 6217 05d2 42       		.byte	0x42
 6218 05d3 AC000000 		.4byte	0xac
 6219 05d7 05       		.uleb128 0x5
 6220 05d8 03       		.byte	0x3
 6221 05d9 00000000 		.4byte	count_teclas1
 6222 05dd 19       		.uleb128 0x19
 6223 05de 2B040000 		.4byte	.LASF59
 6224 05e2 05       		.byte	0x5
 6225 05e3 42       		.byte	0x42
 6226 05e4 AC000000 		.4byte	0xac
 6227 05e8 05       		.uleb128 0x5
 6228 05e9 03       		.byte	0x3
 6229 05ea 00000000 		.4byte	comas1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 134


 6230 05ee 19       		.uleb128 0x19
 6231 05ef 32040000 		.4byte	.LASF60
 6232 05f3 05       		.byte	0x5
 6233 05f4 42       		.byte	0x42
 6234 05f5 AC000000 		.4byte	0xac
 6235 05f9 05       		.uleb128 0x5
 6236 05fa 03       		.byte	0x3
 6237 05fb 00000000 		.4byte	comas2
 6238 05ff 19       		.uleb128 0x19
 6239 0600 67000000 		.4byte	.LASF61
 6240 0604 05       		.byte	0x5
 6241 0605 42       		.byte	0x42
 6242 0606 AC000000 		.4byte	0xac
 6243 060a 05       		.uleb128 0x5
 6244 060b 03       		.byte	0x3
 6245 060c 00000000 		.4byte	id_coma1
 6246 0610 19       		.uleb128 0x19
 6247 0611 EC010000 		.4byte	.LASF62
 6248 0615 05       		.byte	0x5
 6249 0616 42       		.byte	0x42
 6250 0617 AC000000 		.4byte	0xac
 6251 061b 05       		.uleb128 0x5
 6252 061c 03       		.byte	0x3
 6253 061d 00000000 		.4byte	id_teclado1
 6254 0621 19       		.uleb128 0x19
 6255 0622 B6020000 		.4byte	.LASF63
 6256 0626 05       		.byte	0x5
 6257 0627 42       		.byte	0x42
 6258 0628 AC000000 		.4byte	0xac
 6259 062c 05       		.uleb128 0x5
 6260 062d 03       		.byte	0x3
 6261 062e 00000000 		.4byte	count_teclas2
 6262 0632 19       		.uleb128 0x19
 6263 0633 70000000 		.4byte	.LASF64
 6264 0637 05       		.byte	0x5
 6265 0638 42       		.byte	0x42
 6266 0639 AC000000 		.4byte	0xac
 6267 063d 05       		.uleb128 0x5
 6268 063e 03       		.byte	0x3
 6269 063f 00000000 		.4byte	id_coma2
 6270 0643 19       		.uleb128 0x19
 6271 0644 F8010000 		.4byte	.LASF65
 6272 0648 05       		.byte	0x5
 6273 0649 42       		.byte	0x42
 6274 064a AC000000 		.4byte	0xac
 6275 064e 05       		.uleb128 0x5
 6276 064f 03       		.byte	0x3
 6277 0650 00000000 		.4byte	id_teclado2
 6278 0654 19       		.uleb128 0x19
 6279 0655 C4020000 		.4byte	.LASF66
 6280 0659 05       		.byte	0x5
 6281 065a 43       		.byte	0x43
 6282 065b B1000000 		.4byte	0xb1
 6283 065f 05       		.uleb128 0x5
 6284 0660 03       		.byte	0x3
 6285 0661 00000000 		.4byte	posx1
 6286 0665 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 135


 6287 0666 96030000 		.4byte	.LASF67
 6288 066a 05       		.byte	0x5
 6289 066b 43       		.byte	0x43
 6290 066c B1000000 		.4byte	0xb1
 6291 0670 05       		.uleb128 0x5
 6292 0671 03       		.byte	0x3
 6293 0672 00000000 		.4byte	posy1
 6294 0676 19       		.uleb128 0x19
 6295 0677 76050000 		.4byte	.LASF68
 6296 067b 05       		.byte	0x5
 6297 067c 43       		.byte	0x43
 6298 067d B1000000 		.4byte	0xb1
 6299 0681 05       		.uleb128 0x5
 6300 0682 03       		.byte	0x3
 6301 0683 00000000 		.4byte	sizeletra1
 6302 0687 19       		.uleb128 0x19
 6303 0688 CA020000 		.4byte	.LASF69
 6304 068c 05       		.byte	0x5
 6305 068d 43       		.byte	0x43
 6306 068e B1000000 		.4byte	0xb1
 6307 0692 05       		.uleb128 0x5
 6308 0693 03       		.byte	0x3
 6309 0694 00000000 		.4byte	posx2
 6310 0698 19       		.uleb128 0x19
 6311 0699 9C030000 		.4byte	.LASF70
 6312 069d 05       		.byte	0x5
 6313 069e 43       		.byte	0x43
 6314 069f B1000000 		.4byte	0xb1
 6315 06a3 05       		.uleb128 0x5
 6316 06a4 03       		.byte	0x3
 6317 06a5 00000000 		.4byte	posy2
 6318 06a9 19       		.uleb128 0x19
 6319 06aa 81050000 		.4byte	.LASF71
 6320 06ae 05       		.byte	0x5
 6321 06af 43       		.byte	0x43
 6322 06b0 B1000000 		.4byte	0xb1
 6323 06b4 05       		.uleb128 0x5
 6324 06b5 03       		.byte	0x3
 6325 06b6 00000000 		.4byte	sizeletra2
 6326 06ba 19       		.uleb128 0x19
 6327 06bb C1000000 		.4byte	.LASF72
 6328 06bf 05       		.byte	0x5
 6329 06c0 44       		.byte	0x44
 6330 06c1 AC000000 		.4byte	0xac
 6331 06c5 05       		.uleb128 0x5
 6332 06c6 03       		.byte	0x3
 6333 06c7 00000000 		.4byte	teclas1
 6334 06cb 19       		.uleb128 0x19
 6335 06cc C9000000 		.4byte	.LASF73
 6336 06d0 05       		.byte	0x5
 6337 06d1 44       		.byte	0x44
 6338 06d2 AC000000 		.4byte	0xac
 6339 06d6 05       		.uleb128 0x5
 6340 06d7 03       		.byte	0x3
 6341 06d8 00000000 		.4byte	teclas2
 6342 06dc 19       		.uleb128 0x19
 6343 06dd 09000000 		.4byte	.LASF74
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 136


 6344 06e1 05       		.byte	0x5
 6345 06e2 45       		.byte	0x45
 6346 06e3 AC000000 		.4byte	0xac
 6347 06e7 05       		.uleb128 0x5
 6348 06e8 03       		.byte	0x3
 6349 06e9 00000000 		.4byte	flujo_LCD1
 6350 06ed 19       		.uleb128 0x19
 6351 06ee 14000000 		.4byte	.LASF75
 6352 06f2 05       		.byte	0x5
 6353 06f3 45       		.byte	0x45
 6354 06f4 AC000000 		.4byte	0xac
 6355 06f8 05       		.uleb128 0x5
 6356 06f9 03       		.byte	0x3
 6357 06fa 00000000 		.4byte	flujo_LCD2
 6358 06fe 19       		.uleb128 0x19
 6359 06ff B7010000 		.4byte	.LASF76
 6360 0703 05       		.byte	0x5
 6361 0704 46       		.byte	0x46
 6362 0705 AC000000 		.4byte	0xac
 6363 0709 05       		.uleb128 0x5
 6364 070a 03       		.byte	0x3
 6365 070b 00000000 		.4byte	flujo_pos1
 6366 070f 19       		.uleb128 0x19
 6367 0710 C2010000 		.4byte	.LASF77
 6368 0714 05       		.byte	0x5
 6369 0715 46       		.byte	0x46
 6370 0716 AC000000 		.4byte	0xac
 6371 071a 05       		.uleb128 0x5
 6372 071b 03       		.byte	0x3
 6373 071c 00000000 		.4byte	flujo_pos2
 6374 0720 19       		.uleb128 0x19
 6375 0721 7C010000 		.4byte	.LASF78
 6376 0725 05       		.byte	0x5
 6377 0726 47       		.byte	0x47
 6378 0727 AC000000 		.4byte	0xac
 6379 072b 05       		.uleb128 0x5
 6380 072c 03       		.byte	0x3
 6381 072d 00000000 		.4byte	seleccion_pos
 6382 0731 19       		.uleb128 0x19
 6383 0732 B1040000 		.4byte	.LASF79
 6384 0736 05       		.byte	0x5
 6385 0737 48       		.byte	0x48
 6386 0738 AC000000 		.4byte	0xac
 6387 073c 05       		.uleb128 0x5
 6388 073d 03       		.byte	0x3
 6389 073e 00000000 		.4byte	flujo_pos
 6390 0742 19       		.uleb128 0x19
 6391 0743 6F010000 		.4byte	.LASF80
 6392 0747 05       		.byte	0x5
 6393 0748 49       		.byte	0x49
 6394 0749 AC000000 		.4byte	0xac
 6395 074d 05       		.uleb128 0x5
 6396 074e 03       		.byte	0x3
 6397 074f 00000000 		.4byte	venta_activa
 6398 0753 19       		.uleb128 0x19
 6399 0754 2D010000 		.4byte	.LASF81
 6400 0758 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 137


 6401 0759 49       		.byte	0x49
 6402 075a AC000000 		.4byte	0xac
 6403 075e 05       		.uleb128 0x5
 6404 075f 03       		.byte	0x3
 6405 0760 00000000 		.4byte	venta_activa2
 6406 0764 06       		.uleb128 0x6
 6407 0765 81000000 		.4byte	0x81
 6408 0769 74070000 		.4byte	0x774
 6409 076d 07       		.uleb128 0x7
 6410 076e B6000000 		.4byte	0xb6
 6411 0772 1D       		.byte	0x1d
 6412 0773 00       		.byte	0
 6413 0774 19       		.uleb128 0x19
 6414 0775 B5030000 		.4byte	.LASF82
 6415 0779 05       		.byte	0x5
 6416 077a 4A       		.byte	0x4a
 6417 077b 85070000 		.4byte	0x785
 6418 077f 05       		.uleb128 0x5
 6419 0780 03       		.byte	0x3
 6420 0781 00000000 		.4byte	Buffer_LCD1
 6421 0785 05       		.uleb128 0x5
 6422 0786 64070000 		.4byte	0x764
 6423 078a 19       		.uleb128 0x19
 6424 078b 34020000 		.4byte	.LASF83
 6425 078f 05       		.byte	0x5
 6426 0790 4B       		.byte	0x4b
 6427 0791 9B070000 		.4byte	0x79b
 6428 0795 05       		.uleb128 0x5
 6429 0796 03       		.byte	0x3
 6430 0797 00000000 		.4byte	Buffer_LCD2
 6431 079b 05       		.uleb128 0x5
 6432 079c 64070000 		.4byte	0x764
 6433 07a0 19       		.uleb128 0x19
 6434 07a1 F4040000 		.4byte	.LASF84
 6435 07a5 05       		.byte	0x5
 6436 07a6 4C       		.byte	0x4c
 6437 07a7 AC000000 		.4byte	0xac
 6438 07ab 05       		.uleb128 0x5
 6439 07ac 03       		.byte	0x3
 6440 07ad 00000000 		.4byte	count_protector
 6441 07b1 19       		.uleb128 0x19
 6442 07b2 1F000000 		.4byte	.LASF85
 6443 07b6 05       		.byte	0x5
 6444 07b7 4C       		.byte	0x4c
 6445 07b8 AC000000 		.4byte	0xac
 6446 07bc 05       		.uleb128 0x5
 6447 07bd 03       		.byte	0x3
 6448 07be 00000000 		.4byte	count_protector2
 6449 07c2 19       		.uleb128 0x19
 6450 07c3 9B020000 		.4byte	.LASF86
 6451 07c7 05       		.byte	0x5
 6452 07c8 4D       		.byte	0x4d
 6453 07c9 D3070000 		.4byte	0x7d3
 6454 07cd 05       		.uleb128 0x5
 6455 07ce 03       		.byte	0x3
 6456 07cf 00000000 		.4byte	password_lcd
 6457 07d3 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 138


 6458 07d4 72020000 		.4byte	0x272
 6459 07d8 19       		.uleb128 0x19
 6460 07d9 57050000 		.4byte	.LASF87
 6461 07dd 05       		.byte	0x5
 6462 07de 4E       		.byte	0x4e
 6463 07df B1000000 		.4byte	0xb1
 6464 07e3 05       		.uleb128 0x5
 6465 07e4 03       		.byte	0x3
 6466 07e5 00000000 		.4byte	imagen_grado
 6467 07e9 06       		.uleb128 0x6
 6468 07ea 8C000000 		.4byte	0x8c
 6469 07ee FF070000 		.4byte	0x7ff
 6470 07f2 07       		.uleb128 0x7
 6471 07f3 B6000000 		.4byte	0xb6
 6472 07f7 01       		.byte	0x1
 6473 07f8 07       		.uleb128 0x7
 6474 07f9 B6000000 		.4byte	0xb6
 6475 07fd 01       		.byte	0x1
 6476 07fe 00       		.byte	0
 6477 07ff 19       		.uleb128 0x19
 6478 0800 F4000000 		.4byte	.LASF88
 6479 0804 05       		.byte	0x5
 6480 0805 4F       		.byte	0x4f
 6481 0806 10080000 		.4byte	0x810
 6482 080a 05       		.uleb128 0x5
 6483 080b 03       		.byte	0x3
 6484 080c 00000000 		.4byte	prox_caso
 6485 0810 05       		.uleb128 0x5
 6486 0811 E9070000 		.4byte	0x7e9
 6487 0815 06       		.uleb128 0x6
 6488 0816 81000000 		.4byte	0x81
 6489 081a 25080000 		.4byte	0x825
 6490 081e 07       		.uleb128 0x7
 6491 081f B6000000 		.4byte	0xb6
 6492 0823 02       		.byte	0x2
 6493 0824 00       		.byte	0
 6494 0825 19       		.uleb128 0x19
 6495 0826 45020000 		.4byte	.LASF89
 6496 082a 05       		.byte	0x5
 6497 082b 50       		.byte	0x50
 6498 082c 36080000 		.4byte	0x836
 6499 0830 05       		.uleb128 0x5
 6500 0831 03       		.byte	0x3
 6501 0832 00000000 		.4byte	bloqueo_LCD
 6502 0836 05       		.uleb128 0x5
 6503 0837 15080000 		.4byte	0x815
 6504 083b 19       		.uleb128 0x19
 6505 083c 42050000 		.4byte	.LASF90
 6506 0840 05       		.byte	0x5
 6507 0841 51       		.byte	0x51
 6508 0842 4C080000 		.4byte	0x84c
 6509 0846 05       		.uleb128 0x5
 6510 0847 03       		.byte	0x3
 6511 0848 00000000 		.4byte	id_estacion
 6512 084c 05       		.uleb128 0x5
 6513 084d 62020000 		.4byte	0x262
 6514 0851 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 139


 6515 0852 04020000 		.4byte	.LASF91
 6516 0856 05       		.byte	0x5
 6517 0857 52       		.byte	0x52
 6518 0858 62080000 		.4byte	0x862
 6519 085c 05       		.uleb128 0x5
 6520 085d 03       		.byte	0x3
 6521 085e 00000000 		.4byte	id_venta
 6522 0862 05       		.uleb128 0x5
 6523 0863 82020000 		.4byte	0x282
 6524 0867 06       		.uleb128 0x6
 6525 0868 81000000 		.4byte	0x81
 6526 086c 77080000 		.4byte	0x877
 6527 0870 07       		.uleb128 0x7
 6528 0871 B6000000 		.4byte	0xb6
 6529 0875 C7       		.byte	0xc7
 6530 0876 00       		.byte	0
 6531 0877 19       		.uleb128 0x19
 6532 0878 34050000 		.4byte	.LASF92
 6533 087c 05       		.byte	0x5
 6534 087d 53       		.byte	0x53
 6535 087e 88080000 		.4byte	0x888
 6536 0882 05       		.uleb128 0x5
 6537 0883 03       		.byte	0x3
 6538 0884 00000000 		.4byte	trama_totales
 6539 0888 05       		.uleb128 0x5
 6540 0889 67080000 		.4byte	0x867
 6541 088d 19       		.uleb128 0x19
 6542 088e D7030000 		.4byte	.LASF93
 6543 0892 05       		.byte	0x5
 6544 0893 57       		.byte	0x57
 6545 0894 AC000000 		.4byte	0xac
 6546 0898 05       		.uleb128 0x5
 6547 0899 03       		.byte	0x3
 6548 089a 00000000 		.4byte	ppux10
 6549 089e 06       		.uleb128 0x6
 6550 089f 81000000 		.4byte	0x81
 6551 08a3 AE080000 		.4byte	0x8ae
 6552 08a7 07       		.uleb128 0x7
 6553 08a8 B6000000 		.4byte	0xb6
 6554 08ac 10       		.byte	0x10
 6555 08ad 00       		.byte	0
 6556 08ae 19       		.uleb128 0x19
 6557 08af 3E040000 		.4byte	.LASF94
 6558 08b3 05       		.byte	0x5
 6559 08b4 58       		.byte	0x58
 6560 08b5 BF080000 		.4byte	0x8bf
 6561 08b9 05       		.uleb128 0x5
 6562 08ba 03       		.byte	0x3
 6563 08bb 00000000 		.4byte	nombre_pro1
 6564 08bf 05       		.uleb128 0x5
 6565 08c0 9E080000 		.4byte	0x89e
 6566 08c4 19       		.uleb128 0x19
 6567 08c5 D6040000 		.4byte	.LASF95
 6568 08c9 05       		.byte	0x5
 6569 08ca 58       		.byte	0x58
 6570 08cb D5080000 		.4byte	0x8d5
 6571 08cf 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 140


 6572 08d0 03       		.byte	0x3
 6573 08d1 00000000 		.4byte	nombre_pro2
 6574 08d5 05       		.uleb128 0x5
 6575 08d6 9E080000 		.4byte	0x89e
 6576 08da 19       		.uleb128 0x19
 6577 08db 4A040000 		.4byte	.LASF96
 6578 08df 05       		.byte	0x5
 6579 08e0 58       		.byte	0x58
 6580 08e1 EB080000 		.4byte	0x8eb
 6581 08e5 05       		.uleb128 0x5
 6582 08e6 03       		.byte	0x3
 6583 08e7 00000000 		.4byte	nombre_pro3
 6584 08eb 05       		.uleb128 0x5
 6585 08ec 9E080000 		.4byte	0x89e
 6586 08f0 19       		.uleb128 0x19
 6587 08f1 8D000000 		.4byte	.LASF97
 6588 08f5 05       		.byte	0x5
 6589 08f6 59       		.byte	0x59
 6590 08f7 01090000 		.4byte	0x901
 6591 08fb 05       		.uleb128 0x5
 6592 08fc 03       		.byte	0x3
 6593 08fd 00000000 		.4byte	version
 6594 0901 05       		.uleb128 0x5
 6595 0902 BD000000 		.4byte	0xbd
 6596 0906 19       		.uleb128 0x19
 6597 0907 69010000 		.4byte	.LASF98
 6598 090b 05       		.byte	0x5
 6599 090c 63       		.byte	0x63
 6600 090d CD000000 		.4byte	0xcd
 6601 0911 05       		.uleb128 0x5
 6602 0912 03       		.byte	0x3
 6603 0913 00000000 		.4byte	lado1
 6604 0917 19       		.uleb128 0x19
 6605 0918 BB040000 		.4byte	.LASF99
 6606 091c 05       		.byte	0x5
 6607 091d 64       		.byte	0x64
 6608 091e CD000000 		.4byte	0xcd
 6609 0922 05       		.uleb128 0x5
 6610 0923 03       		.byte	0x3
 6611 0924 00000000 		.4byte	lado2
 6612 0928 06       		.uleb128 0x6
 6613 0929 81000000 		.4byte	0x81
 6614 092d 38090000 		.4byte	0x938
 6615 0931 07       		.uleb128 0x7
 6616 0932 B6000000 		.4byte	0xb6
 6617 0936 20       		.byte	0x20
 6618 0937 00       		.byte	0
 6619 0938 19       		.uleb128 0x19
 6620 0939 DE030000 		.4byte	.LASF100
 6621 093d 05       		.byte	0x5
 6622 093e 68       		.byte	0x68
 6623 093f 49090000 		.4byte	0x949
 6624 0943 05       		.uleb128 0x5
 6625 0944 03       		.byte	0x3
 6626 0945 00000000 		.4byte	nombre
 6627 0949 05       		.uleb128 0x5
 6628 094a 28090000 		.4byte	0x928
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 141


 6629 094e 1A       		.uleb128 0x1a
 6630 094f 6E697400 		.ascii	"nit\000"
 6631 0953 05       		.byte	0x5
 6632 0954 69       		.byte	0x69
 6633 0955 5F090000 		.4byte	0x95f
 6634 0959 05       		.uleb128 0x5
 6635 095a 03       		.byte	0x3
 6636 095b 00000000 		.4byte	nit
 6637 095f 05       		.uleb128 0x5
 6638 0960 37050000 		.4byte	0x537
 6639 0964 06       		.uleb128 0x6
 6640 0965 81000000 		.4byte	0x81
 6641 0969 74090000 		.4byte	0x974
 6642 096d 07       		.uleb128 0x7
 6643 096e B6000000 		.4byte	0xb6
 6644 0972 13       		.byte	0x13
 6645 0973 00       		.byte	0
 6646 0974 19       		.uleb128 0x19
 6647 0975 E3010000 		.4byte	.LASF101
 6648 0979 05       		.byte	0x5
 6649 097a 6A       		.byte	0x6a
 6650 097b 85090000 		.4byte	0x985
 6651 097f 05       		.uleb128 0x5
 6652 0980 03       		.byte	0x3
 6653 0981 00000000 		.4byte	telefono
 6654 0985 05       		.uleb128 0x5
 6655 0986 64090000 		.4byte	0x964
 6656 098a 19       		.uleb128 0x19
 6657 098b EA000000 		.4byte	.LASF102
 6658 098f 05       		.byte	0x5
 6659 0990 6B       		.byte	0x6b
 6660 0991 9B090000 		.4byte	0x99b
 6661 0995 05       		.uleb128 0x5
 6662 0996 03       		.byte	0x3
 6663 0997 00000000 		.4byte	direccion
 6664 099b 05       		.uleb128 0x5
 6665 099c 28090000 		.4byte	0x928
 6666 09a0 06       		.uleb128 0x6
 6667 09a1 81000000 		.4byte	0x81
 6668 09a5 B0090000 		.4byte	0x9b0
 6669 09a9 07       		.uleb128 0x7
 6670 09aa B6000000 		.4byte	0xb6
 6671 09ae 1F       		.byte	0x1f
 6672 09af 00       		.byte	0
 6673 09b0 19       		.uleb128 0x19
 6674 09b1 21010000 		.4byte	.LASF103
 6675 09b5 05       		.byte	0x5
 6676 09b6 6C       		.byte	0x6c
 6677 09b7 C1090000 		.4byte	0x9c1
 6678 09bb 05       		.uleb128 0x5
 6679 09bc 03       		.byte	0x3
 6680 09bd 00000000 		.4byte	lema1
 6681 09c1 05       		.uleb128 0x5
 6682 09c2 A0090000 		.4byte	0x9a0
 6683 09c6 19       		.uleb128 0x19
 6684 09c7 27010000 		.4byte	.LASF104
 6685 09cb 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 142


 6686 09cc 6D       		.byte	0x6d
 6687 09cd D7090000 		.4byte	0x9d7
 6688 09d1 05       		.uleb128 0x5
 6689 09d2 03       		.byte	0x3
 6690 09d3 00000000 		.4byte	lema2
 6691 09d7 05       		.uleb128 0x5
 6692 09d8 A0090000 		.4byte	0x9a0
 6693 09dc 06       		.uleb128 0x6
 6694 09dd 81000000 		.4byte	0x81
 6695 09e1 EC090000 		.4byte	0x9ec
 6696 09e5 07       		.uleb128 0x7
 6697 09e6 B6000000 		.4byte	0xb6
 6698 09ea 01       		.byte	0x1
 6699 09eb 00       		.byte	0
 6700 09ec 19       		.uleb128 0x19
 6701 09ed FA030000 		.4byte	.LASF105
 6702 09f1 05       		.byte	0x5
 6703 09f2 6E       		.byte	0x6e
 6704 09f3 FD090000 		.4byte	0x9fd
 6705 09f7 05       		.uleb128 0x5
 6706 09f8 03       		.byte	0x3
 6707 09f9 00000000 		.4byte	id_logo
 6708 09fd 05       		.uleb128 0x5
 6709 09fe DC090000 		.4byte	0x9dc
 6710 0a02 1A       		.uleb128 0x1a
 6711 0a03 6B6D00   		.ascii	"km\000"
 6712 0a06 05       		.byte	0x5
 6713 0a07 6F       		.byte	0x6f
 6714 0a08 120A0000 		.4byte	0xa12
 6715 0a0c 05       		.uleb128 0x5
 6716 0a0d 03       		.byte	0x3
 6717 0a0e 00000000 		.4byte	km
 6718 0a12 05       		.uleb128 0x5
 6719 0a13 DC090000 		.4byte	0x9dc
 6720 0a17 19       		.uleb128 0x19
 6721 0a18 17050000 		.4byte	.LASF106
 6722 0a1c 05       		.byte	0x5
 6723 0a1d 70       		.byte	0x70
 6724 0a1e 15080000 		.4byte	0x815
 6725 0a22 05       		.uleb128 0x5
 6726 0a23 03       		.byte	0x3
 6727 0a24 00000000 		.4byte	fecha
 6728 0a28 19       		.uleb128 0x19
 6729 0a29 BC000000 		.4byte	.LASF107
 6730 0a2d 05       		.byte	0x5
 6731 0a2e 71       		.byte	0x71
 6732 0a2f DC090000 		.4byte	0x9dc
 6733 0a33 05       		.uleb128 0x5
 6734 0a34 03       		.byte	0x3
 6735 0a35 00000000 		.4byte	hora
 6736 0a39 19       		.uleb128 0x19
 6737 0a3a DA000000 		.4byte	.LASF108
 6738 0a3e 05       		.byte	0x5
 6739 0a3f 87       		.byte	0x87
 6740 0a40 73010000 		.4byte	0x173
 6741 0a44 05       		.uleb128 0x5
 6742 0a45 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 143


 6743 0a46 00000000 		.4byte	rventa1
 6744 0a4a 19       		.uleb128 0x19
 6745 0a4b E2000000 		.4byte	.LASF109
 6746 0a4f 05       		.byte	0x5
 6747 0a50 88       		.byte	0x88
 6748 0a51 73010000 		.4byte	0x173
 6749 0a55 05       		.uleb128 0x5
 6750 0a56 03       		.byte	0x3
 6751 0a57 00000000 		.4byte	rventa2
 6752 0a5b 19       		.uleb128 0x19
 6753 0a5c A6000000 		.4byte	.LASF110
 6754 0a60 05       		.byte	0x5
 6755 0a61 8D       		.byte	0x8d
 6756 0a62 81000000 		.4byte	0x81
 6757 0a66 05       		.uleb128 0x5
 6758 0a67 03       		.byte	0x3
 6759 0a68 00000000 		.4byte	ok_RF
 6760 0a6c 19       		.uleb128 0x19
 6761 0a6d CB040000 		.4byte	.LASF111
 6762 0a71 05       		.byte	0x5
 6763 0a72 8E       		.byte	0x8e
 6764 0a73 81000000 		.4byte	0x81
 6765 0a77 05       		.uleb128 0x5
 6766 0a78 03       		.byte	0x3
 6767 0a79 00000000 		.4byte	ok_datosRF
 6768 0a7d 19       		.uleb128 0x19
 6769 0a7e 18020000 		.4byte	.LASF112
 6770 0a82 05       		.byte	0x5
 6771 0a83 8F       		.byte	0x8f
 6772 0a84 67080000 		.4byte	0x867
 6773 0a88 05       		.uleb128 0x5
 6774 0a89 03       		.byte	0x3
 6775 0a8a 00000000 		.4byte	rf_mod
 6776 0a8e 06       		.uleb128 0x6
 6777 0a8f 81000000 		.4byte	0x81
 6778 0a93 9E0A0000 		.4byte	0xa9e
 6779 0a97 07       		.uleb128 0x7
 6780 0a98 B6000000 		.4byte	0xb6
 6781 0a9c 3F       		.byte	0x3f
 6782 0a9d 00       		.byte	0
 6783 0a9e 19       		.uleb128 0x19
 6784 0a9f 16010000 		.4byte	.LASF113
 6785 0aa3 05       		.byte	0x5
 6786 0aa4 94       		.byte	0x94
 6787 0aa5 8E0A0000 		.4byte	0xa8e
 6788 0aa9 05       		.uleb128 0x5
 6789 0aaa 03       		.byte	0x3
 6790 0aab 00000000 		.4byte	buffer_i2c
 6791 0aaf 19       		.uleb128 0x19
 6792 0ab0 E5030000 		.4byte	.LASF114
 6793 0ab4 05       		.byte	0x5
 6794 0ab5 99       		.byte	0x99
 6795 0ab6 81000000 		.4byte	0x81
 6796 0aba 05       		.uleb128 0x5
 6797 0abb 03       		.byte	0x3
 6798 0abc 00000000 		.4byte	crc_total
 6799 0ac0 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 144


 6800 0ac1 6E020000 		.4byte	.LASF115
 6801 0ac5 05       		.byte	0x5
 6802 0ac6 9D       		.byte	0x9d
 6803 0ac7 DC090000 		.4byte	0x9dc
 6804 0acb 05       		.uleb128 0x5
 6805 0acc 03       		.byte	0x3
 6806 0acd 00000000 		.4byte	print1
 6807 0ad1 19       		.uleb128 0x19
 6808 0ad2 75020000 		.4byte	.LASF116
 6809 0ad6 05       		.byte	0x5
 6810 0ad7 9E       		.byte	0x9e
 6811 0ad8 DC090000 		.4byte	0x9dc
 6812 0adc 05       		.uleb128 0x5
 6813 0add 03       		.byte	0x3
 6814 0ade 00000000 		.4byte	print2
 6815 0ae2 19       		.uleb128 0x19
 6816 0ae3 7C020000 		.4byte	.LASF32
 6817 0ae7 05       		.byte	0x5
 6818 0ae8 A3       		.byte	0xa3
 6819 0ae9 81000000 		.4byte	0x81
 6820 0aed 05       		.uleb128 0x5
 6821 0aee 03       		.byte	0x3
 6822 0aef 00000000 		.4byte	tipo_venta
 6823 0af3 19       		.uleb128 0x19
 6824 0af4 8B030000 		.4byte	.LASF117
 6825 0af8 01       		.byte	0x1
 6826 0af9 2F       		.byte	0x2f
 6827 0afa 81000000 		.4byte	0x81
 6828 0afe 05       		.uleb128 0x5
 6829 0aff 03       		.byte	0x3
 6830 0b00 00000000 		.4byte	rx_timeout
 6831 0b04 19       		.uleb128 0x19
 6832 0b05 8A010000 		.4byte	.LASF118
 6833 0b09 01       		.byte	0x1
 6834 0b0a 30       		.byte	0x30
 6835 0b0b 9E080000 		.4byte	0x89e
 6836 0b0f 05       		.uleb128 0x5
 6837 0b10 03       		.byte	0x3
 6838 0b11 00000000 		.4byte	msn_tc
 6839 0b15 06       		.uleb128 0x6
 6840 0b16 81000000 		.4byte	0x81
 6841 0b1a 250B0000 		.4byte	0xb25
 6842 0b1e 07       		.uleb128 0x7
 6843 0b1f B6000000 		.4byte	0xb6
 6844 0b23 0C       		.byte	0xc
 6845 0b24 00       		.byte	0
 6846 0b25 19       		.uleb128 0x19
 6847 0b26 98010000 		.4byte	.LASF119
 6848 0b2a 01       		.byte	0x1
 6849 0b2b 31       		.byte	0x31
 6850 0b2c 150B0000 		.4byte	0xb15
 6851 0b30 05       		.uleb128 0x5
 6852 0b31 03       		.byte	0x3
 6853 0b32 00000000 		.4byte	msn_te
 6854 0b36 06       		.uleb128 0x6
 6855 0b37 81000000 		.4byte	0x81
 6856 0b3b 460B0000 		.4byte	0xb46
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 145


 6857 0b3f 07       		.uleb128 0x7
 6858 0b40 B6000000 		.4byte	0xb6
 6859 0b44 0D       		.byte	0xd
 6860 0b45 00       		.byte	0
 6861 0b46 19       		.uleb128 0x19
 6862 0b47 91010000 		.4byte	.LASF120
 6863 0b4b 01       		.byte	0x1
 6864 0b4c 32       		.byte	0x32
 6865 0b4d 360B0000 		.4byte	0xb36
 6866 0b51 05       		.uleb128 0x5
 6867 0b52 03       		.byte	0x3
 6868 0b53 00000000 		.4byte	msn_td
 6869 0b57 19       		.uleb128 0x19
 6870 0b58 0D020000 		.4byte	.LASF121
 6871 0b5c 01       		.byte	0x1
 6872 0b5d 33       		.byte	0x33
 6873 0b5e 37050000 		.4byte	0x537
 6874 0b62 05       		.uleb128 0x5
 6875 0b63 03       		.byte	0x3
 6876 0b64 00000000 		.4byte	msn_lecact
 6877 0b68 19       		.uleb128 0x19
 6878 0b69 0B010000 		.4byte	.LASF122
 6879 0b6d 01       		.byte	0x1
 6880 0b6e 34       		.byte	0x34
 6881 0b6f 9E080000 		.4byte	0x89e
 6882 0b73 05       		.uleb128 0x5
 6883 0b74 03       		.byte	0x3
 6884 0b75 00000000 		.4byte	msn_lecaan
 6885 0b79 19       		.uleb128 0x19
 6886 0b7a 62020000 		.4byte	.LASF123
 6887 0b7e 01       		.byte	0x1
 6888 0b7f 35       		.byte	0x35
 6889 0b80 B4040000 		.4byte	0x4b4
 6890 0b84 05       		.uleb128 0x5
 6891 0b85 03       		.byte	0x3
 6892 0b86 00000000 		.4byte	msn_tventas
 6893 0b8a 00       		.byte	0
 6894              		.section	.debug_abbrev,"",%progbits
 6895              	.Ldebug_abbrev0:
 6896 0000 01       		.uleb128 0x1
 6897 0001 11       		.uleb128 0x11
 6898 0002 01       		.byte	0x1
 6899 0003 25       		.uleb128 0x25
 6900 0004 0E       		.uleb128 0xe
 6901 0005 13       		.uleb128 0x13
 6902 0006 0B       		.uleb128 0xb
 6903 0007 03       		.uleb128 0x3
 6904 0008 0E       		.uleb128 0xe
 6905 0009 1B       		.uleb128 0x1b
 6906 000a 0E       		.uleb128 0xe
 6907 000b 55       		.uleb128 0x55
 6908 000c 17       		.uleb128 0x17
 6909 000d 11       		.uleb128 0x11
 6910 000e 01       		.uleb128 0x1
 6911 000f 10       		.uleb128 0x10
 6912 0010 17       		.uleb128 0x17
 6913 0011 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 146


 6914 0012 00       		.byte	0
 6915 0013 02       		.uleb128 0x2
 6916 0014 24       		.uleb128 0x24
 6917 0015 00       		.byte	0
 6918 0016 0B       		.uleb128 0xb
 6919 0017 0B       		.uleb128 0xb
 6920 0018 3E       		.uleb128 0x3e
 6921 0019 0B       		.uleb128 0xb
 6922 001a 03       		.uleb128 0x3
 6923 001b 0E       		.uleb128 0xe
 6924 001c 00       		.byte	0
 6925 001d 00       		.byte	0
 6926 001e 03       		.uleb128 0x3
 6927 001f 16       		.uleb128 0x16
 6928 0020 00       		.byte	0
 6929 0021 03       		.uleb128 0x3
 6930 0022 0E       		.uleb128 0xe
 6931 0023 3A       		.uleb128 0x3a
 6932 0024 0B       		.uleb128 0xb
 6933 0025 3B       		.uleb128 0x3b
 6934 0026 0B       		.uleb128 0xb
 6935 0027 49       		.uleb128 0x49
 6936 0028 13       		.uleb128 0x13
 6937 0029 00       		.byte	0
 6938 002a 00       		.byte	0
 6939 002b 04       		.uleb128 0x4
 6940 002c 24       		.uleb128 0x24
 6941 002d 00       		.byte	0
 6942 002e 0B       		.uleb128 0xb
 6943 002f 0B       		.uleb128 0xb
 6944 0030 3E       		.uleb128 0x3e
 6945 0031 0B       		.uleb128 0xb
 6946 0032 03       		.uleb128 0x3
 6947 0033 08       		.uleb128 0x8
 6948 0034 00       		.byte	0
 6949 0035 00       		.byte	0
 6950 0036 05       		.uleb128 0x5
 6951 0037 35       		.uleb128 0x35
 6952 0038 00       		.byte	0
 6953 0039 49       		.uleb128 0x49
 6954 003a 13       		.uleb128 0x13
 6955 003b 00       		.byte	0
 6956 003c 00       		.byte	0
 6957 003d 06       		.uleb128 0x6
 6958 003e 01       		.uleb128 0x1
 6959 003f 01       		.byte	0x1
 6960 0040 49       		.uleb128 0x49
 6961 0041 13       		.uleb128 0x13
 6962 0042 01       		.uleb128 0x1
 6963 0043 13       		.uleb128 0x13
 6964 0044 00       		.byte	0
 6965 0045 00       		.byte	0
 6966 0046 07       		.uleb128 0x7
 6967 0047 21       		.uleb128 0x21
 6968 0048 00       		.byte	0
 6969 0049 49       		.uleb128 0x49
 6970 004a 13       		.uleb128 0x13
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 147


 6971 004b 2F       		.uleb128 0x2f
 6972 004c 0B       		.uleb128 0xb
 6973 004d 00       		.byte	0
 6974 004e 00       		.byte	0
 6975 004f 08       		.uleb128 0x8
 6976 0050 13       		.uleb128 0x13
 6977 0051 01       		.byte	0x1
 6978 0052 03       		.uleb128 0x3
 6979 0053 0E       		.uleb128 0xe
 6980 0054 0B       		.uleb128 0xb
 6981 0055 0B       		.uleb128 0xb
 6982 0056 3A       		.uleb128 0x3a
 6983 0057 0B       		.uleb128 0xb
 6984 0058 3B       		.uleb128 0x3b
 6985 0059 0B       		.uleb128 0xb
 6986 005a 01       		.uleb128 0x1
 6987 005b 13       		.uleb128 0x13
 6988 005c 00       		.byte	0
 6989 005d 00       		.byte	0
 6990 005e 09       		.uleb128 0x9
 6991 005f 0D       		.uleb128 0xd
 6992 0060 00       		.byte	0
 6993 0061 03       		.uleb128 0x3
 6994 0062 08       		.uleb128 0x8
 6995 0063 3A       		.uleb128 0x3a
 6996 0064 0B       		.uleb128 0xb
 6997 0065 3B       		.uleb128 0x3b
 6998 0066 0B       		.uleb128 0xb
 6999 0067 49       		.uleb128 0x49
 7000 0068 13       		.uleb128 0x13
 7001 0069 38       		.uleb128 0x38
 7002 006a 0B       		.uleb128 0xb
 7003 006b 00       		.byte	0
 7004 006c 00       		.byte	0
 7005 006d 0A       		.uleb128 0xa
 7006 006e 0D       		.uleb128 0xd
 7007 006f 00       		.byte	0
 7008 0070 03       		.uleb128 0x3
 7009 0071 0E       		.uleb128 0xe
 7010 0072 3A       		.uleb128 0x3a
 7011 0073 0B       		.uleb128 0xb
 7012 0074 3B       		.uleb128 0x3b
 7013 0075 0B       		.uleb128 0xb
 7014 0076 49       		.uleb128 0x49
 7015 0077 13       		.uleb128 0x13
 7016 0078 38       		.uleb128 0x38
 7017 0079 0B       		.uleb128 0xb
 7018 007a 00       		.byte	0
 7019 007b 00       		.byte	0
 7020 007c 0B       		.uleb128 0xb
 7021 007d 2E       		.uleb128 0x2e
 7022 007e 00       		.byte	0
 7023 007f 3F       		.uleb128 0x3f
 7024 0080 19       		.uleb128 0x19
 7025 0081 03       		.uleb128 0x3
 7026 0082 0E       		.uleb128 0xe
 7027 0083 3A       		.uleb128 0x3a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 148


 7028 0084 0B       		.uleb128 0xb
 7029 0085 3B       		.uleb128 0x3b
 7030 0086 0B       		.uleb128 0xb
 7031 0087 27       		.uleb128 0x27
 7032 0088 19       		.uleb128 0x19
 7033 0089 11       		.uleb128 0x11
 7034 008a 01       		.uleb128 0x1
 7035 008b 12       		.uleb128 0x12
 7036 008c 06       		.uleb128 0x6
 7037 008d 40       		.uleb128 0x40
 7038 008e 18       		.uleb128 0x18
 7039 008f 9642     		.uleb128 0x2116
 7040 0091 19       		.uleb128 0x19
 7041 0092 00       		.byte	0
 7042 0093 00       		.byte	0
 7043 0094 0C       		.uleb128 0xc
 7044 0095 2E       		.uleb128 0x2e
 7045 0096 01       		.byte	0x1
 7046 0097 3F       		.uleb128 0x3f
 7047 0098 19       		.uleb128 0x19
 7048 0099 03       		.uleb128 0x3
 7049 009a 0E       		.uleb128 0xe
 7050 009b 3A       		.uleb128 0x3a
 7051 009c 0B       		.uleb128 0xb
 7052 009d 3B       		.uleb128 0x3b
 7053 009e 0B       		.uleb128 0xb
 7054 009f 27       		.uleb128 0x27
 7055 00a0 19       		.uleb128 0x19
 7056 00a1 49       		.uleb128 0x49
 7057 00a2 13       		.uleb128 0x13
 7058 00a3 11       		.uleb128 0x11
 7059 00a4 01       		.uleb128 0x1
 7060 00a5 12       		.uleb128 0x12
 7061 00a6 06       		.uleb128 0x6
 7062 00a7 40       		.uleb128 0x40
 7063 00a8 18       		.uleb128 0x18
 7064 00a9 9642     		.uleb128 0x2116
 7065 00ab 19       		.uleb128 0x19
 7066 00ac 01       		.uleb128 0x1
 7067 00ad 13       		.uleb128 0x13
 7068 00ae 00       		.byte	0
 7069 00af 00       		.byte	0
 7070 00b0 0D       		.uleb128 0xd
 7071 00b1 05       		.uleb128 0x5
 7072 00b2 00       		.byte	0
 7073 00b3 03       		.uleb128 0x3
 7074 00b4 08       		.uleb128 0x8
 7075 00b5 3A       		.uleb128 0x3a
 7076 00b6 0B       		.uleb128 0xb
 7077 00b7 3B       		.uleb128 0x3b
 7078 00b8 0B       		.uleb128 0xb
 7079 00b9 49       		.uleb128 0x49
 7080 00ba 13       		.uleb128 0x13
 7081 00bb 02       		.uleb128 0x2
 7082 00bc 18       		.uleb128 0x18
 7083 00bd 00       		.byte	0
 7084 00be 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 149


 7085 00bf 0E       		.uleb128 0xe
 7086 00c0 34       		.uleb128 0x34
 7087 00c1 00       		.byte	0
 7088 00c2 03       		.uleb128 0x3
 7089 00c3 0E       		.uleb128 0xe
 7090 00c4 3A       		.uleb128 0x3a
 7091 00c5 0B       		.uleb128 0xb
 7092 00c6 3B       		.uleb128 0x3b
 7093 00c7 0B       		.uleb128 0xb
 7094 00c8 49       		.uleb128 0x49
 7095 00c9 13       		.uleb128 0x13
 7096 00ca 02       		.uleb128 0x2
 7097 00cb 18       		.uleb128 0x18
 7098 00cc 00       		.byte	0
 7099 00cd 00       		.byte	0
 7100 00ce 0F       		.uleb128 0xf
 7101 00cf 34       		.uleb128 0x34
 7102 00d0 00       		.byte	0
 7103 00d1 03       		.uleb128 0x3
 7104 00d2 08       		.uleb128 0x8
 7105 00d3 3A       		.uleb128 0x3a
 7106 00d4 0B       		.uleb128 0xb
 7107 00d5 3B       		.uleb128 0x3b
 7108 00d6 0B       		.uleb128 0xb
 7109 00d7 49       		.uleb128 0x49
 7110 00d8 13       		.uleb128 0x13
 7111 00d9 02       		.uleb128 0x2
 7112 00da 18       		.uleb128 0x18
 7113 00db 00       		.byte	0
 7114 00dc 00       		.byte	0
 7115 00dd 10       		.uleb128 0x10
 7116 00de 2E       		.uleb128 0x2e
 7117 00df 01       		.byte	0x1
 7118 00e0 3F       		.uleb128 0x3f
 7119 00e1 19       		.uleb128 0x19
 7120 00e2 03       		.uleb128 0x3
 7121 00e3 0E       		.uleb128 0xe
 7122 00e4 3A       		.uleb128 0x3a
 7123 00e5 0B       		.uleb128 0xb
 7124 00e6 3B       		.uleb128 0x3b
 7125 00e7 0B       		.uleb128 0xb
 7126 00e8 27       		.uleb128 0x27
 7127 00e9 19       		.uleb128 0x19
 7128 00ea 11       		.uleb128 0x11
 7129 00eb 01       		.uleb128 0x1
 7130 00ec 12       		.uleb128 0x12
 7131 00ed 06       		.uleb128 0x6
 7132 00ee 40       		.uleb128 0x40
 7133 00ef 18       		.uleb128 0x18
 7134 00f0 9642     		.uleb128 0x2116
 7135 00f2 19       		.uleb128 0x19
 7136 00f3 01       		.uleb128 0x1
 7137 00f4 13       		.uleb128 0x13
 7138 00f5 00       		.byte	0
 7139 00f6 00       		.byte	0
 7140 00f7 11       		.uleb128 0x11
 7141 00f8 2E       		.uleb128 0x2e
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 150


 7142 00f9 01       		.byte	0x1
 7143 00fa 3F       		.uleb128 0x3f
 7144 00fb 19       		.uleb128 0x19
 7145 00fc 03       		.uleb128 0x3
 7146 00fd 0E       		.uleb128 0xe
 7147 00fe 3A       		.uleb128 0x3a
 7148 00ff 0B       		.uleb128 0xb
 7149 0100 3B       		.uleb128 0x3b
 7150 0101 05       		.uleb128 0x5
 7151 0102 27       		.uleb128 0x27
 7152 0103 19       		.uleb128 0x19
 7153 0104 11       		.uleb128 0x11
 7154 0105 01       		.uleb128 0x1
 7155 0106 12       		.uleb128 0x12
 7156 0107 06       		.uleb128 0x6
 7157 0108 40       		.uleb128 0x40
 7158 0109 18       		.uleb128 0x18
 7159 010a 9642     		.uleb128 0x2116
 7160 010c 19       		.uleb128 0x19
 7161 010d 01       		.uleb128 0x1
 7162 010e 13       		.uleb128 0x13
 7163 010f 00       		.byte	0
 7164 0110 00       		.byte	0
 7165 0111 12       		.uleb128 0x12
 7166 0112 05       		.uleb128 0x5
 7167 0113 00       		.byte	0
 7168 0114 03       		.uleb128 0x3
 7169 0115 08       		.uleb128 0x8
 7170 0116 3A       		.uleb128 0x3a
 7171 0117 0B       		.uleb128 0xb
 7172 0118 3B       		.uleb128 0x3b
 7173 0119 05       		.uleb128 0x5
 7174 011a 49       		.uleb128 0x49
 7175 011b 13       		.uleb128 0x13
 7176 011c 02       		.uleb128 0x2
 7177 011d 18       		.uleb128 0x18
 7178 011e 00       		.byte	0
 7179 011f 00       		.byte	0
 7180 0120 13       		.uleb128 0x13
 7181 0121 2E       		.uleb128 0x2e
 7182 0122 01       		.byte	0x1
 7183 0123 3F       		.uleb128 0x3f
 7184 0124 19       		.uleb128 0x19
 7185 0125 03       		.uleb128 0x3
 7186 0126 0E       		.uleb128 0xe
 7187 0127 3A       		.uleb128 0x3a
 7188 0128 0B       		.uleb128 0xb
 7189 0129 3B       		.uleb128 0x3b
 7190 012a 05       		.uleb128 0x5
 7191 012b 27       		.uleb128 0x27
 7192 012c 19       		.uleb128 0x19
 7193 012d 49       		.uleb128 0x49
 7194 012e 13       		.uleb128 0x13
 7195 012f 11       		.uleb128 0x11
 7196 0130 01       		.uleb128 0x1
 7197 0131 12       		.uleb128 0x12
 7198 0132 06       		.uleb128 0x6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 151


 7199 0133 40       		.uleb128 0x40
 7200 0134 18       		.uleb128 0x18
 7201 0135 9642     		.uleb128 0x2116
 7202 0137 19       		.uleb128 0x19
 7203 0138 01       		.uleb128 0x1
 7204 0139 13       		.uleb128 0x13
 7205 013a 00       		.byte	0
 7206 013b 00       		.byte	0
 7207 013c 14       		.uleb128 0x14
 7208 013d 34       		.uleb128 0x34
 7209 013e 00       		.byte	0
 7210 013f 03       		.uleb128 0x3
 7211 0140 08       		.uleb128 0x8
 7212 0141 3A       		.uleb128 0x3a
 7213 0142 0B       		.uleb128 0xb
 7214 0143 3B       		.uleb128 0x3b
 7215 0144 05       		.uleb128 0x5
 7216 0145 49       		.uleb128 0x49
 7217 0146 13       		.uleb128 0x13
 7218 0147 02       		.uleb128 0x2
 7219 0148 18       		.uleb128 0x18
 7220 0149 00       		.byte	0
 7221 014a 00       		.byte	0
 7222 014b 15       		.uleb128 0x15
 7223 014c 05       		.uleb128 0x5
 7224 014d 00       		.byte	0
 7225 014e 03       		.uleb128 0x3
 7226 014f 0E       		.uleb128 0xe
 7227 0150 3A       		.uleb128 0x3a
 7228 0151 0B       		.uleb128 0xb
 7229 0152 3B       		.uleb128 0x3b
 7230 0153 05       		.uleb128 0x5
 7231 0154 49       		.uleb128 0x49
 7232 0155 13       		.uleb128 0x13
 7233 0156 02       		.uleb128 0x2
 7234 0157 18       		.uleb128 0x18
 7235 0158 00       		.byte	0
 7236 0159 00       		.byte	0
 7237 015a 16       		.uleb128 0x16
 7238 015b 34       		.uleb128 0x34
 7239 015c 00       		.byte	0
 7240 015d 03       		.uleb128 0x3
 7241 015e 0E       		.uleb128 0xe
 7242 015f 3A       		.uleb128 0x3a
 7243 0160 0B       		.uleb128 0xb
 7244 0161 3B       		.uleb128 0x3b
 7245 0162 05       		.uleb128 0x5
 7246 0163 49       		.uleb128 0x49
 7247 0164 13       		.uleb128 0x13
 7248 0165 02       		.uleb128 0x2
 7249 0166 18       		.uleb128 0x18
 7250 0167 00       		.byte	0
 7251 0168 00       		.byte	0
 7252 0169 17       		.uleb128 0x17
 7253 016a 0F       		.uleb128 0xf
 7254 016b 00       		.byte	0
 7255 016c 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 152


 7256 016d 0B       		.uleb128 0xb
 7257 016e 49       		.uleb128 0x49
 7258 016f 13       		.uleb128 0x13
 7259 0170 00       		.byte	0
 7260 0171 00       		.byte	0
 7261 0172 18       		.uleb128 0x18
 7262 0173 34       		.uleb128 0x34
 7263 0174 00       		.byte	0
 7264 0175 03       		.uleb128 0x3
 7265 0176 0E       		.uleb128 0xe
 7266 0177 3A       		.uleb128 0x3a
 7267 0178 0B       		.uleb128 0xb
 7268 0179 3B       		.uleb128 0x3b
 7269 017a 05       		.uleb128 0x5
 7270 017b 49       		.uleb128 0x49
 7271 017c 13       		.uleb128 0x13
 7272 017d 3F       		.uleb128 0x3f
 7273 017e 19       		.uleb128 0x19
 7274 017f 3C       		.uleb128 0x3c
 7275 0180 19       		.uleb128 0x19
 7276 0181 00       		.byte	0
 7277 0182 00       		.byte	0
 7278 0183 19       		.uleb128 0x19
 7279 0184 34       		.uleb128 0x34
 7280 0185 00       		.byte	0
 7281 0186 03       		.uleb128 0x3
 7282 0187 0E       		.uleb128 0xe
 7283 0188 3A       		.uleb128 0x3a
 7284 0189 0B       		.uleb128 0xb
 7285 018a 3B       		.uleb128 0x3b
 7286 018b 0B       		.uleb128 0xb
 7287 018c 49       		.uleb128 0x49
 7288 018d 13       		.uleb128 0x13
 7289 018e 3F       		.uleb128 0x3f
 7290 018f 19       		.uleb128 0x19
 7291 0190 02       		.uleb128 0x2
 7292 0191 18       		.uleb128 0x18
 7293 0192 00       		.byte	0
 7294 0193 00       		.byte	0
 7295 0194 1A       		.uleb128 0x1a
 7296 0195 34       		.uleb128 0x34
 7297 0196 00       		.byte	0
 7298 0197 03       		.uleb128 0x3
 7299 0198 08       		.uleb128 0x8
 7300 0199 3A       		.uleb128 0x3a
 7301 019a 0B       		.uleb128 0xb
 7302 019b 3B       		.uleb128 0x3b
 7303 019c 0B       		.uleb128 0xb
 7304 019d 49       		.uleb128 0x49
 7305 019e 13       		.uleb128 0x13
 7306 019f 3F       		.uleb128 0x3f
 7307 01a0 19       		.uleb128 0x19
 7308 01a1 02       		.uleb128 0x2
 7309 01a2 18       		.uleb128 0x18
 7310 01a3 00       		.byte	0
 7311 01a4 00       		.byte	0
 7312 01a5 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 153


 7313              		.section	.debug_aranges,"",%progbits
 7314 0000 64000000 		.4byte	0x64
 7315 0004 0200     		.2byte	0x2
 7316 0006 00000000 		.4byte	.Ldebug_info0
 7317 000a 04       		.byte	0x4
 7318 000b 00       		.byte	0
 7319 000c 0000     		.2byte	0
 7320 000e 0000     		.2byte	0
 7321 0010 00000000 		.4byte	.LFB63
 7322 0014 14000000 		.4byte	.LFE63-.LFB63
 7323 0018 00000000 		.4byte	.LFB64
 7324 001c 98000000 		.4byte	.LFE64-.LFB64
 7325 0020 00000000 		.4byte	.LFB65
 7326 0024 A0000000 		.4byte	.LFE65-.LFB65
 7327 0028 00000000 		.4byte	.LFB66
 7328 002c 36000000 		.4byte	.LFE66-.LFB66
 7329 0030 00000000 		.4byte	.LFB67
 7330 0034 7C010000 		.4byte	.LFE67-.LFB67
 7331 0038 00000000 		.4byte	.LFB68
 7332 003c 24000000 		.4byte	.LFE68-.LFB68
 7333 0040 00000000 		.4byte	.LFB69
 7334 0044 54030000 		.4byte	.LFE69-.LFB69
 7335 0048 00000000 		.4byte	.LFB70
 7336 004c 80080000 		.4byte	.LFE70-.LFB70
 7337 0050 00000000 		.4byte	.LFB71
 7338 0054 7C020000 		.4byte	.LFE71-.LFB71
 7339 0058 00000000 		.4byte	.LFB72
 7340 005c 94100000 		.4byte	.LFE72-.LFB72
 7341 0060 00000000 		.4byte	0
 7342 0064 00000000 		.4byte	0
 7343              		.section	.debug_ranges,"",%progbits
 7344              	.Ldebug_ranges0:
 7345 0000 00000000 		.4byte	.LFB63
 7346 0004 14000000 		.4byte	.LFE63
 7347 0008 00000000 		.4byte	.LFB64
 7348 000c 98000000 		.4byte	.LFE64
 7349 0010 00000000 		.4byte	.LFB65
 7350 0014 A0000000 		.4byte	.LFE65
 7351 0018 00000000 		.4byte	.LFB66
 7352 001c 36000000 		.4byte	.LFE66
 7353 0020 00000000 		.4byte	.LFB67
 7354 0024 7C010000 		.4byte	.LFE67
 7355 0028 00000000 		.4byte	.LFB68
 7356 002c 24000000 		.4byte	.LFE68
 7357 0030 00000000 		.4byte	.LFB69
 7358 0034 54030000 		.4byte	.LFE69
 7359 0038 00000000 		.4byte	.LFB70
 7360 003c 80080000 		.4byte	.LFE70
 7361 0040 00000000 		.4byte	.LFB71
 7362 0044 7C020000 		.4byte	.LFE71
 7363 0048 00000000 		.4byte	.LFB72
 7364 004c 94100000 		.4byte	.LFE72
 7365 0050 00000000 		.4byte	0
 7366 0054 00000000 		.4byte	0
 7367              		.section	.debug_line,"",%progbits
 7368              	.Ldebug_line0:
 7369 0000 020B0000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 154


 7369      02006E01 
 7369      00000201 
 7369      FB0E0D00 
 7369      01010101 
 7370              	.LASF34:
 7371 0000 70617373 		.ascii	"password\000"
 7371      776F7264 
 7371      00
 7372              	.LASF74:
 7373 0009 666C756A 		.ascii	"flujo_LCD1\000"
 7373      6F5F4C43 
 7373      443100
 7374              	.LASF75:
 7375 0014 666C756A 		.ascii	"flujo_LCD2\000"
 7375      6F5F4C43 
 7375      443200
 7376              	.LASF85:
 7377 001f 636F756E 		.ascii	"count_protector2\000"
 7377      745F7072 
 7377      6F746563 
 7377      746F7232 
 7377      00
 7378              	.LASF126:
 7379 0030 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Documents\\Prueba_GRPFleet\\B"
 7379      73657273 
 7379      5C526563 
 7379      65706369 
 7379      6F6E5C44 
 7380 005e 42422E63 		.ascii	"BB.cydsn\000"
 7380      7964736E 
 7380      00
 7381              	.LASF61:
 7382 0067 69645F63 		.ascii	"id_coma1\000"
 7382      6F6D6131 
 7382      00
 7383              	.LASF64:
 7384 0070 69645F63 		.ascii	"id_coma2\000"
 7384      6F6D6132 
 7384      00
 7385              	.LASF48:
 7386 0079 62756666 		.ascii	"buffer\000"
 7386      657200
 7387              	.LASF8:
 7388 0080 756E7369 		.ascii	"unsigned int\000"
 7388      676E6564 
 7388      20696E74 
 7388      00
 7389              	.LASF97:
 7390 008d 76657273 		.ascii	"version\000"
 7390      696F6E00 
 7391              	.LASF9:
 7392 0095 5F5F696E 		.ascii	"__int32_t\000"
 7392      7433325F 
 7392      7400
 7393              	.LASF53:
 7394 009f 70726563 		.ascii	"precio\000"
 7394      696F00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 155


 7395              	.LASF110:
 7396 00a6 6F6B5F52 		.ascii	"ok_RF\000"
 7396      4600
 7397              	.LASF54:
 7398 00ac 6E756D5F 		.ascii	"num_man\000"
 7398      6D616E00 
 7399              	.LASF51:
 7400 00b4 64656369 		.ascii	"decimal\000"
 7400      6D616C00 
 7401              	.LASF107:
 7402 00bc 686F7261 		.ascii	"hora\000"
 7402      00
 7403              	.LASF72:
 7404 00c1 7465636C 		.ascii	"teclas1\000"
 7404      61733100 
 7405              	.LASF73:
 7406 00c9 7465636C 		.ascii	"teclas2\000"
 7406      61733200 
 7407              	.LASF23:
 7408 00d1 706F7369 		.ascii	"posicion\000"
 7408      63696F6E 
 7408      00
 7409              	.LASF108:
 7410 00da 7276656E 		.ascii	"rventa1\000"
 7410      74613100 
 7411              	.LASF109:
 7412 00e2 7276656E 		.ascii	"rventa2\000"
 7412      74613200 
 7413              	.LASF102:
 7414 00ea 64697265 		.ascii	"direccion\000"
 7414      6363696F 
 7414      6E00
 7415              	.LASF88:
 7416 00f4 70726F78 		.ascii	"prox_caso\000"
 7416      5F636173 
 7416      6F00
 7417              	.LASF28:
 7418 00fe 70726573 		.ascii	"preset\000"
 7418      657400
 7419              	.LASF13:
 7420 0105 666C6F61 		.ascii	"float\000"
 7420      7400
 7421              	.LASF122:
 7422 010b 6D736E5F 		.ascii	"msn_lecaan\000"
 7422      6C656361 
 7422      616E00
 7423              	.LASF113:
 7424 0116 62756666 		.ascii	"buffer_i2c\000"
 7424      65725F69 
 7424      326300
 7425              	.LASF103:
 7426 0121 6C656D61 		.ascii	"lema1\000"
 7426      3100
 7427              	.LASF104:
 7428 0127 6C656D61 		.ascii	"lema2\000"
 7428      3200
 7429              	.LASF81:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 156


 7430 012d 76656E74 		.ascii	"venta_activa2\000"
 7430      615F6163 
 7430      74697661 
 7430      3200
 7431              	.LASF31:
 7432 013b 696D7072 		.ascii	"imprimir\000"
 7432      696D6972 
 7432      00
 7433              	.LASF7:
 7434 0144 6C6F6E67 		.ascii	"long long unsigned int\000"
 7434      206C6F6E 
 7434      6720756E 
 7434      7369676E 
 7434      65642069 
 7435              	.LASF125:
 7436 015b 2E5C5072 		.ascii	".\\Protocolo.c\000"
 7436      6F746F63 
 7436      6F6C6F2E 
 7436      6300
 7437              	.LASF98:
 7438 0169 6C61646F 		.ascii	"lado1\000"
 7438      3100
 7439              	.LASF80:
 7440 016f 76656E74 		.ascii	"venta_activa\000"
 7440      615F6163 
 7440      74697661 
 7440      00
 7441              	.LASF78:
 7442 017c 73656C65 		.ascii	"seleccion_pos\000"
 7442      6363696F 
 7442      6E5F706F 
 7442      7300
 7443              	.LASF118:
 7444 018a 6D736E5F 		.ascii	"msn_tc\000"
 7444      746300
 7445              	.LASF120:
 7446 0191 6D736E5F 		.ascii	"msn_td\000"
 7446      746400
 7447              	.LASF119:
 7448 0198 6D736E5F 		.ascii	"msn_te\000"
 7448      746500
 7449              	.LASF56:
 7450 019f 53757274 		.ascii	"Surtidor_rxBuffer\000"
 7450      69646F72 
 7450      5F727842 
 7450      75666665 
 7450      7200
 7451              	.LASF30:
 7452 01b1 706C6163 		.ascii	"placa\000"
 7452      6100
 7453              	.LASF76:
 7454 01b7 666C756A 		.ascii	"flujo_pos1\000"
 7454      6F5F706F 
 7454      733100
 7455              	.LASF77:
 7456 01c2 666C756A 		.ascii	"flujo_pos2\000"
 7456      6F5F706F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 157


 7456      733200
 7457              	.LASF39:
 7458 01cd 7665725F 		.ascii	"ver_pos\000"
 7458      706F7300 
 7459              	.LASF25:
 7460 01d5 766F6C75 		.ascii	"volumen\000"
 7460      6D656E00 
 7461              	.LASF45:
 7462 01dd 76656E74 		.ascii	"venta\000"
 7462      6100
 7463              	.LASF101:
 7464 01e3 74656C65 		.ascii	"telefono\000"
 7464      666F6E6F 
 7464      00
 7465              	.LASF62:
 7466 01ec 69645F74 		.ascii	"id_teclado1\000"
 7466      65636C61 
 7466      646F3100 
 7467              	.LASF65:
 7468 01f8 69645F74 		.ascii	"id_teclado2\000"
 7468      65636C61 
 7468      646F3200 
 7469              	.LASF91:
 7470 0204 69645F76 		.ascii	"id_venta\000"
 7470      656E7461 
 7470      00
 7471              	.LASF121:
 7472 020d 6D736E5F 		.ascii	"msn_lecact\000"
 7472      6C656361 
 7472      637400
 7473              	.LASF112:
 7474 0218 72665F6D 		.ascii	"rf_mod\000"
 7474      6F6400
 7475              	.LASF44:
 7476 021f 64657465 		.ascii	"detener\000"
 7476      6E657200 
 7477              	.LASF42:
 7478 0227 636F6D61 		.ascii	"comand_exten\000"
 7478      6E645F65 
 7478      7874656E 
 7478      00
 7479              	.LASF83:
 7480 0234 42756666 		.ascii	"Buffer_LCD2\000"
 7480      65725F4C 
 7480      43443200 
 7481              	.LASF15:
 7482 0240 63686172 		.ascii	"char\000"
 7482      00
 7483              	.LASF89:
 7484 0245 626C6F71 		.ascii	"bloqueo_LCD\000"
 7484      75656F5F 
 7484      4C434400 
 7485              	.LASF20:
 7486 0251 6D616E67 		.ascii	"mangueras\000"
 7486      75657261 
 7486      7300
 7487              	.LASF12:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 158


 7488 025b 75696E74 		.ascii	"uint16\000"
 7488      313600
 7489              	.LASF123:
 7490 0262 6D736E5F 		.ascii	"msn_tventas\000"
 7490      7476656E 
 7490      74617300 
 7491              	.LASF115:
 7492 026e 7072696E 		.ascii	"print1\000"
 7492      743100
 7493              	.LASF116:
 7494 0275 7072696E 		.ascii	"print2\000"
 7494      743200
 7495              	.LASF32:
 7496 027c 7469706F 		.ascii	"tipo_venta\000"
 7496      5F76656E 
 7496      746100
 7497              	.LASF29:
 7498 0287 69645F65 		.ascii	"id_ef\000"
 7498      6600
 7499              	.LASF35:
 7500 028d 7475726E 		.ascii	"turno\000"
 7500      6F00
 7501              	.LASF18:
 7502 0293 746F7461 		.ascii	"totales\000"
 7502      6C657300 
 7503              	.LASF86:
 7504 029b 70617373 		.ascii	"password_lcd\000"
 7504      776F7264 
 7504      5F6C6364 
 7504      00
 7505              	.LASF58:
 7506 02a8 636F756E 		.ascii	"count_teclas1\000"
 7506      745F7465 
 7506      636C6173 
 7506      3100
 7507              	.LASF63:
 7508 02b6 636F756E 		.ascii	"count_teclas2\000"
 7508      745F7465 
 7508      636C6173 
 7508      3200
 7509              	.LASF66:
 7510 02c4 706F7378 		.ascii	"posx1\000"
 7510      3100
 7511              	.LASF69:
 7512 02ca 706F7378 		.ascii	"posx2\000"
 7512      3200
 7513              	.LASF6:
 7514 02d0 6C6F6E67 		.ascii	"long long int\000"
 7514      206C6F6E 
 7514      6720696E 
 7514      7400
 7515              	.LASF26:
 7516 02de 70726F64 		.ascii	"producto\000"
 7516      7563746F 
 7516      00
 7517              	.LASF52:
 7518 02e7 63616D62 		.ascii	"cambiar_precio\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 159


 7518      6961725F 
 7518      70726563 
 7518      696F00
 7519              	.LASF33:
 7520 02f6 63656475 		.ascii	"cedula\000"
 7520      6C6100
 7521              	.LASF124:
 7522 02fd 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7522      4320342E 
 7522      392E3320 
 7522      32303135 
 7522      30333033 
 7523 0330 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7523      20726576 
 7523      6973696F 
 7523      6E203232 
 7523      31323230 
 7524 0363 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7524      66756E63 
 7524      74696F6E 
 7524      2D736563 
 7524      74696F6E 
 7525              	.LASF117:
 7526 038b 72785F74 		.ascii	"rx_timeout\000"
 7526      696D656F 
 7526      757400
 7527              	.LASF67:
 7528 0396 706F7379 		.ascii	"posy1\000"
 7528      3100
 7529              	.LASF70:
 7530 039c 706F7379 		.ascii	"posy2\000"
 7530      3200
 7531              	.LASF49:
 7532 03a2 73697A65 		.ascii	"size\000"
 7532      00
 7533              	.LASF22:
 7534 03a7 72656369 		.ascii	"recibo\000"
 7534      626F00
 7535              	.LASF24:
 7536 03ae 64696E65 		.ascii	"dinero\000"
 7536      726F00
 7537              	.LASF82:
 7538 03b5 42756666 		.ascii	"Buffer_LCD1\000"
 7538      65725F4C 
 7538      43443100 
 7539              	.LASF17:
 7540 03c1 65737461 		.ascii	"estado\000"
 7540      646F00
 7541              	.LASF37:
 7542 03c8 70617373 		.ascii	"password_local\000"
 7542      776F7264 
 7542      5F6C6F63 
 7542      616C00
 7543              	.LASF93:
 7544 03d7 70707578 		.ascii	"ppux10\000"
 7544      313000
 7545              	.LASF100:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 160


 7546 03de 6E6F6D62 		.ascii	"nombre\000"
 7546      726500
 7547              	.LASF114:
 7548 03e5 6372635F 		.ascii	"crc_total\000"
 7548      746F7461 
 7548      6C00
 7549              	.LASF55:
 7550 03ef 6E6D616E 		.ascii	"nmangueras\000"
 7550      67756572 
 7550      617300
 7551              	.LASF105:
 7552 03fa 69645F6C 		.ascii	"id_logo\000"
 7552      6F676F00 
 7553              	.LASF2:
 7554 0402 73686F72 		.ascii	"short int\000"
 7554      7420696E 
 7554      7400
 7555              	.LASF4:
 7556 040c 6C6F6E67 		.ascii	"long int\000"
 7556      20696E74 
 7556      00
 7557              	.LASF57:
 7558 0415 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7558      52784275 
 7558      66666572 
 7558      00
 7559              	.LASF21:
 7560 0422 73757274 		.ascii	"surtidor\000"
 7560      69646F72 
 7560      00
 7561              	.LASF59:
 7562 042b 636F6D61 		.ascii	"comas1\000"
 7562      733100
 7563              	.LASF60:
 7564 0432 636F6D61 		.ascii	"comas2\000"
 7564      733200
 7565              	.LASF50:
 7566 0439 74656D70 		.ascii	"temp\000"
 7566      00
 7567              	.LASF94:
 7568 043e 6E6F6D62 		.ascii	"nombre_pro1\000"
 7568      72655F70 
 7568      726F3100 
 7569              	.LASF96:
 7570 044a 6E6F6D62 		.ascii	"nombre_pro3\000"
 7570      72655F70 
 7570      726F3300 
 7571              	.LASF40:
 7572 0456 65737461 		.ascii	"estado_ex\000"
 7572      646F5F65 
 7572      7800
 7573              	.LASF46:
 7574 0460 70726F67 		.ascii	"programar\000"
 7574      72616D61 
 7574      7200
 7575              	.LASF16:
 7576 046a 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 161


 7576      74797065 
 7576      00
 7577              	.LASF5:
 7578 0473 6C6F6E67 		.ascii	"long unsigned int\000"
 7578      20756E73 
 7578      69676E65 
 7578      6420696E 
 7578      7400
 7579              	.LASF10:
 7580 0485 696E7433 		.ascii	"int32_t\000"
 7580      325F7400 
 7581              	.LASF36:
 7582 048d 6175746F 		.ascii	"autorizado\000"
 7582      72697A61 
 7582      646F00
 7583              	.LASF1:
 7584 0498 756E7369 		.ascii	"unsigned char\000"
 7584      676E6564 
 7584      20636861 
 7584      7200
 7585              	.LASF38:
 7586 04a6 6765745F 		.ascii	"get_estado\000"
 7586      65737461 
 7586      646F00
 7587              	.LASF79:
 7588 04b1 666C756A 		.ascii	"flujo_pos\000"
 7588      6F5F706F 
 7588      7300
 7589              	.LASF99:
 7590 04bb 6C61646F 		.ascii	"lado2\000"
 7590      3200
 7591              	.LASF43:
 7592 04c1 7665725F 		.ascii	"ver_error\000"
 7592      6572726F 
 7592      7200
 7593              	.LASF111:
 7594 04cb 6F6B5F64 		.ascii	"ok_datosRF\000"
 7594      61746F73 
 7594      524600
 7595              	.LASF95:
 7596 04d6 6E6F6D62 		.ascii	"nombre_pro2\000"
 7596      72655F70 
 7596      726F3200 
 7597              	.LASF0:
 7598 04e2 7369676E 		.ascii	"signed char\000"
 7598      65642063 
 7598      68617200 
 7599              	.LASF47:
 7600 04ee 76616C6F 		.ascii	"valor\000"
 7600      7200
 7601              	.LASF84:
 7602 04f4 636F756E 		.ascii	"count_protector\000"
 7602      745F7072 
 7602      6F746563 
 7602      746F7200 
 7603              	.LASF3:
 7604 0504 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccms2aDL.s 			page 162


 7604      7420756E 
 7604      7369676E 
 7604      65642069 
 7604      6E7400
 7605              	.LASF106:
 7606 0517 66656368 		.ascii	"fecha\000"
 7606      6100
 7607              	.LASF11:
 7608 051d 75696E74 		.ascii	"uint8\000"
 7608      3800
 7609              	.LASF14:
 7610 0523 646F7562 		.ascii	"double\000"
 7610      6C6500
 7611              	.LASF41:
 7612 052a 72785F65 		.ascii	"rx_extend\000"
 7612      7874656E 
 7612      6400
 7613              	.LASF92:
 7614 0534 7472616D 		.ascii	"trama_totales\000"
 7614      615F746F 
 7614      74616C65 
 7614      7300
 7615              	.LASF90:
 7616 0542 69645F65 		.ascii	"id_estacion\000"
 7616      73746163 
 7616      696F6E00 
 7617              	.LASF27:
 7618 054e 6D616E67 		.ascii	"manguera\000"
 7618      75657261 
 7618      00
 7619              	.LASF87:
 7620 0557 696D6167 		.ascii	"imagen_grado\000"
 7620      656E5F67 
 7620      7261646F 
 7620      00
 7621              	.LASF19:
 7622 0564 67726164 		.ascii	"grado\000"
 7622      6F00
 7623              	.LASF127:
 7624 056a 52785F53 		.ascii	"Rx_Surtidor\000"
 7624      75727469 
 7624      646F7200 
 7625              	.LASF68:
 7626 0576 73697A65 		.ascii	"sizeletra1\000"
 7626      6C657472 
 7626      613100
 7627              	.LASF71:
 7628 0581 73697A65 		.ascii	"sizeletra2\000"
 7628      6C657472 
 7628      613200
 7629              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
