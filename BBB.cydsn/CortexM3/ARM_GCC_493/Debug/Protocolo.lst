ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Protocolo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	count_teclas1,1,1
  19              		.comm	comas1,1,1
  20              		.comm	comas2,1,1
  21              		.comm	id_coma1,1,1
  22              		.comm	id_teclado1,1,1
  23              		.comm	count_teclas2,1,1
  24              		.comm	id_coma2,1,1
  25              		.comm	id_teclado2,1,1
  26              		.comm	posx1,2,2
  27              		.comm	posy1,2,2
  28              		.comm	sizeletra1,2,2
  29              		.comm	posx2,2,2
  30              		.comm	posy2,2,2
  31              		.comm	sizeletra2,2,2
  32              		.comm	teclas1,1,1
  33              		.comm	teclas2,1,1
  34              		.comm	flujo_LCD1,1,1
  35              		.comm	flujo_LCD2,1,1
  36              		.comm	flujo_pos1,1,1
  37              		.comm	flujo_pos2,1,1
  38              		.comm	seleccion_pos,1,1
  39              		.comm	flujo_pos,1,1
  40              		.comm	venta_activa,1,1
  41              		.comm	venta_activa2,1,1
  42              		.comm	Buffer_LCD1,30,4
  43              		.comm	Buffer_LCD2,30,4
  44              		.comm	count_protector,1,1
  45              		.comm	count_protector2,1,1
  46              		.comm	password_lcd,9,4
  47              		.comm	imagen_grado,2,2
  48              		.comm	prox_caso,8,4
  49              		.comm	bloqueo_LCD,3,4
  50              		.comm	id_estacion,5,4
  51              		.comm	id_venta,8,4
  52              		.comm	trama_totales,200,4
  53              		.comm	ppux10,1,1
  54              		.comm	nombre_pro1,17,4
  55              		.comm	nombre_pro2,17,4
  56              		.comm	nombre_pro3,17,4
  57              		.comm	version,4,4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 2


  58              		.comm	kmscreen,1,1
  59              		.comm	pantallas,1,1
  60              		.comm	efectivo,1,1
  61              		.comm	flota,1,1
  62              		.comm	lado1,93,4
  63              		.comm	lado2,93,4
  64              		.comm	nombre,33,4
  65              		.comm	nit,15,4
  66              		.comm	telefono,20,4
  67              		.comm	direccion,33,4
  68              		.comm	lema1,32,4
  69              		.comm	lema2,32,4
  70              		.comm	id_logo,2,4
  71              		.comm	km,2,4
  72              		.comm	fecha,3,4
  73              		.comm	hora,2,4
  74              		.comm	rventa1,118,4
  75              		.comm	rventa2,118,4
  76              		.comm	ok_RF,1,1
  77              		.comm	ok_datosRF,1,1
  78              		.comm	rf_mod,200,4
  79              		.comm	buffer_i2c,64,4
  80              		.comm	crc_total,1,1
  81              		.comm	print1,2,4
  82              		.comm	print2,2,4
  83              		.comm	tipo_venta,1,1
  84              		.comm	rx_timeout,1,1
  85              		.global	msn_tc
  86              		.data
  87              		.align	2
  88              		.type	msn_tc, %object
  89              		.size	msn_tc, 17
  90              	msn_tc:
  91 0000 544F5441 		.ascii	"TOTALES CORRIENTE"
  91      4C455320 
  91      434F5252 
  91      49454E54 
  91      45
  92              		.global	msn_te
  93 0011 000000   		.align	2
  94              		.type	msn_te, %object
  95              		.size	msn_te, 13
  96              	msn_te:
  97 0014 544F5441 		.ascii	"TOTALES EXTRA"
  97      4C455320 
  97      45585452 
  97      41
  98              		.global	msn_td
  99 0021 000000   		.align	2
 100              		.type	msn_td, %object
 101              		.size	msn_td, 14
 102              	msn_td:
 103 0024 544F5441 		.ascii	"TOTALES DIESEL"
 103      4C455320 
 103      44494553 
 103      454C
 104              		.global	msn_lecact
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 3


 105 0032 0000     		.align	2
 106              		.type	msn_lecact, %object
 107              		.size	msn_lecact, 15
 108              	msn_lecact:
 109 0034 4C656374 		.ascii	"Lectura Actual:"
 109      75726120 
 109      41637475 
 109      616C3A
 110              		.global	msn_lecaan
 111 0043 00       		.align	2
 112              		.type	msn_lecaan, %object
 113              		.size	msn_lecaan, 17
 114              	msn_lecaan:
 115 0044 4C656374 		.ascii	"Lectura Anterior:"
 115      75726120 
 115      416E7465 
 115      72696F72 
 115      3A
 116              		.global	msn_tventas
 117 0055 000000   		.align	2
 118              		.type	msn_tventas, %object
 119              		.size	msn_tventas, 18
 120              	msn_tventas:
 121 0058 546F7461 		.ascii	"Total de Ventas: $"
 121      6C206465 
 121      2056656E 
 121      7461733A 
 121      2024
 122 006a 0000     		.section	.text.Rx_Surtidor,"ax",%progbits
 123              		.align	2
 124              		.global	Rx_Surtidor
 125              		.thumb
 126              		.thumb_func
 127              		.type	Rx_Surtidor, %function
 128              	Rx_Surtidor:
 129              	.LFB63:
 130              		.file 1 ".\\Protocolo.c"
   1:.\Protocolo.c **** /*
   2:.\Protocolo.c **** ***************************************************************************************************
   3:.\Protocolo.c **** *                                           GRP550/700 CODE
   4:.\Protocolo.c **** 
   5:.\Protocolo.c **** *
   6:.\Protocolo.c **** *                             (c) Copyright 2013; Sistemas Insepet LTDA
   7:.\Protocolo.c **** *
   8:.\Protocolo.c **** *               All rights reserved.  Protected by international copyright laws.
   9:.\Protocolo.c **** *               Knowledge of the source code may NOT be used to develop a similar product.
  10:.\Protocolo.c **** *               Please help us continue to provide the Embedded community with the finest
  11:.\Protocolo.c **** *               software available.  Your honesty is greatly appreciated.
  12:.\Protocolo.c **** ***************************************************************************************************
  13:.\Protocolo.c **** */
  14:.\Protocolo.c **** 
  15:.\Protocolo.c **** /*
  16:.\Protocolo.c **** ***************************************************************************************************
  17:.\Protocolo.c **** *
  18:.\Protocolo.c **** *                                             GRP550/700 CODE
  19:.\Protocolo.c **** *
  20:.\Protocolo.c **** *                                             CYPRESS PSoC5LP
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 4


  21:.\Protocolo.c **** *                                                with the
  22:.\Protocolo.c **** *                                            CY8C5969AXI-LP035
  23:.\Protocolo.c **** *
  24:.\Protocolo.c **** * Filename      : Protocolo.c
  25:.\Protocolo.c **** * Version       : V1.00
  26:.\Protocolo.c **** * Programmer(s) : 
  27:.\Protocolo.c ****                   
  28:.\Protocolo.c **** ***************************************************************************************************
  29:.\Protocolo.c **** */
  30:.\Protocolo.c **** 
  31:.\Protocolo.c **** 
  32:.\Protocolo.c **** /*
  33:.\Protocolo.c **** ***************************************************************************************************
  34:.\Protocolo.c **** *                                             INCLUDE FILES
  35:.\Protocolo.c **** ***************************************************************************************************
  36:.\Protocolo.c **** */
  37:.\Protocolo.c **** #include <device.h>
  38:.\Protocolo.c **** #include "VariablesG.h"
  39:.\Protocolo.c **** #include "i2c.h"
  40:.\Protocolo.c **** #include "Print.h"
  41:.\Protocolo.c **** 
  42:.\Protocolo.c **** /*
  43:.\Protocolo.c **** ***************************************************************************************************
  44:.\Protocolo.c **** *                                            	MENSAJES
  45:.\Protocolo.c **** ***************************************************************************************************
  46:.\Protocolo.c **** */
  47:.\Protocolo.c **** uint8 rx_timeout;								//0 inicia espera  1 se cumplio el tiempo
  48:.\Protocolo.c **** uint8 msn_tc[17]="TOTALES CORRIENTE";
  49:.\Protocolo.c **** uint8 msn_te[13]="TOTALES EXTRA";
  50:.\Protocolo.c **** uint8 msn_td[14]="TOTALES DIESEL";
  51:.\Protocolo.c **** uint8 msn_lecact[15]="Lectura Actual:";
  52:.\Protocolo.c **** uint8 msn_lecaan[17]="Lectura Anterior:";
  53:.\Protocolo.c **** uint8 msn_tventas[18]="Total de Ventas: $";
  54:.\Protocolo.c **** 
  55:.\Protocolo.c **** /*
  56:.\Protocolo.c **** ***************************************************************************************************
  57:.\Protocolo.c **** *                                        CY_ISR(modo_mux)
  58:.\Protocolo.c **** *
  59:.\Protocolo.c **** * Description : 
  60:.\Protocolo.c **** *               
  61:.\Protocolo.c **** ***************************************************************************************************
  62:.\Protocolo.c **** */
  63:.\Protocolo.c **** CY_ISR(Rx_Surtidor){
 131              		.loc 1 63 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0000 80B5     		push	{r7, lr}
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 7, -8
 138              		.cfi_offset 14, -4
 139 0002 00AF     		add	r7, sp, #0
 140              		.cfi_def_cfa_register 7
  64:.\Protocolo.c ****     Timer_RxSurtidor_ReadStatusRegister();
 141              		.loc 1 64 0
 142 0004 FFF7FEFF 		bl	Timer_RxSurtidor_ReadStatusRegister
  65:.\Protocolo.c **** 	rx_timeout=1;	
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 5


 143              		.loc 1 65 0
 144 0008 014B     		ldr	r3, .L2
 145 000a 0122     		movs	r2, #1
 146 000c 1A70     		strb	r2, [r3]
  66:.\Protocolo.c **** }
 147              		.loc 1 66 0
 148 000e 80BD     		pop	{r7, pc}
 149              	.L3:
 150              		.align	2
 151              	.L2:
 152 0010 00000000 		.word	rx_timeout
 153              		.cfi_endproc
 154              	.LFE63:
 155              		.size	Rx_Surtidor, .-Rx_Surtidor
 156              		.section	.text.get_estado,"ax",%progbits
 157              		.align	2
 158              		.global	get_estado
 159              		.thumb
 160              		.thumb_func
 161              		.type	get_estado, %function
 162              	get_estado:
 163              	.LFB64:
  67:.\Protocolo.c **** 
  68:.\Protocolo.c **** 
  69:.\Protocolo.c **** /*
  70:.\Protocolo.c **** ***************************************************************************************************
  71:.\Protocolo.c **** *                                         ver_estado( void )
  72:.\Protocolo.c **** *
  73:.\Protocolo.c **** * Description : 
  74:.\Protocolo.c **** *               
  75:.\Protocolo.c **** *
  76:.\Protocolo.c **** * Argument(s) : none
  77:.\Protocolo.c **** *
  78:.\Protocolo.c **** * Return(s)   : none
  79:.\Protocolo.c **** *
  80:.\Protocolo.c **** * Caller(s)   : 
  81:.\Protocolo.c **** *
  82:.\Protocolo.c **** * Note(s)     : none.
  83:.\Protocolo.c **** ***************************************************************************************************
  84:.\Protocolo.c **** */
  85:.\Protocolo.c **** 
  86:.\Protocolo.c **** uint8 get_estado(uint8 dir){
 164              		.loc 1 86 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 16
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168 0000 80B5     		push	{r7, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 7, -8
 171              		.cfi_offset 14, -4
 172 0002 84B0     		sub	sp, sp, #16
 173              		.cfi_def_cfa_offset 24
 174 0004 00AF     		add	r7, sp, #0
 175              		.cfi_def_cfa_register 7
 176 0006 0346     		mov	r3, r0
 177 0008 FB71     		strb	r3, [r7, #7]
  87:.\Protocolo.c ****     uint8 estado;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 6


  88:.\Protocolo.c ****     Surtidor_ClearRxBuffer();	
 178              		.loc 1 88 0
 179 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  89:.\Protocolo.c ****     Surtidor_PutChar(dir);
 180              		.loc 1 89 0
 181 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 182 0010 1846     		mov	r0, r3
 183 0012 FFF7FEFF 		bl	Surtidor_PutChar
  90:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 184              		.loc 1 90 0
 185 0016 1E48     		ldr	r0, .L9
 186 0018 FFF7FEFF 		bl	isr_1_StartEx
  91:.\Protocolo.c ****     Timer_RxSurtidor_Start();
 187              		.loc 1 91 0
 188 001c FFF7FEFF 		bl	Timer_RxSurtidor_Start
  92:.\Protocolo.c **** 	rx_timeout=0;
 189              		.loc 1 92 0
 190 0020 1C4B     		ldr	r3, .L9+4
 191 0022 0022     		movs	r2, #0
 192 0024 1A70     		strb	r2, [r3]
  93:.\Protocolo.c ****     CyDelay(10);
 193              		.loc 1 93 0
 194 0026 0A20     		movs	r0, #10
 195 0028 FFF7FEFF 		bl	CyDelay
  94:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 196              		.loc 1 94 0
 197 002c 0BE0     		b	.L5
 198              	.L7:
  95:.\Protocolo.c **** 		if(rx_timeout==1){
 199              		.loc 1 95 0
 200 002e 194B     		ldr	r3, .L9+4
 201 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 202 0032 012B     		cmp	r3, #1
 203 0034 07D1     		bne	.L5
  96:.\Protocolo.c **** 			isr_1_Stop();
 204              		.loc 1 96 0
 205 0036 FFF7FEFF 		bl	isr_1_Stop
  97:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 206              		.loc 1 97 0
 207 003a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  98:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 208              		.loc 1 98 0
 209 003e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  99:.\Protocolo.c **** 			return 0;
 210              		.loc 1 99 0
 211 0042 0023     		movs	r3, #0
 212 0044 20E0     		b	.L6
 213              	.L5:
  94:.\Protocolo.c **** 		if(rx_timeout==1){
 214              		.loc 1 94 0
 215 0046 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 216 004a 0346     		mov	r3, r0
 217 004c 002B     		cmp	r3, #0
 218 004e EED0     		beq	.L7
 100:.\Protocolo.c **** 		}
 101:.\Protocolo.c **** 	}
 102:.\Protocolo.c ****     estado=Surtidor_ReadRxData();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 7


 219              		.loc 1 102 0
 220 0050 FFF7FEFF 		bl	Surtidor_ReadRxData
 221 0054 0346     		mov	r3, r0
 222 0056 FB73     		strb	r3, [r7, #15]
 103:.\Protocolo.c **** 	if((estado&0x0F)==dir){
 223              		.loc 1 103 0
 224 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 225 005a 03F00F02 		and	r2, r3, #15
 226 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 227 0060 9A42     		cmp	r2, r3
 228 0062 0AD1     		bne	.L8
 104:.\Protocolo.c **** 		estado=(estado&0xF0)>>4;
 229              		.loc 1 104 0
 230 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 231 0066 1B09     		lsrs	r3, r3, #4
 232 0068 FB73     		strb	r3, [r7, #15]
 105:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 233              		.loc 1 105 0
 234 006a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 106:.\Protocolo.c **** 		isr_1_Stop();
 235              		.loc 1 106 0
 236 006e FFF7FEFF 		bl	isr_1_Stop
 107:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 237              		.loc 1 107 0
 238 0072 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 108:.\Protocolo.c **** 	    return estado;
 239              		.loc 1 108 0
 240 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 241 0078 06E0     		b	.L6
 242              	.L8:
 109:.\Protocolo.c **** 	}
 110:.\Protocolo.c **** 	else{
 111:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 243              		.loc 1 111 0
 244 007a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 112:.\Protocolo.c **** 		isr_1_Stop();
 245              		.loc 1 112 0
 246 007e FFF7FEFF 		bl	isr_1_Stop
 113:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 247              		.loc 1 113 0
 248 0082 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 114:.\Protocolo.c **** 	    return 0;	
 249              		.loc 1 114 0
 250 0086 0023     		movs	r3, #0
 251              	.L6:
 115:.\Protocolo.c **** 	}
 116:.\Protocolo.c **** }
 252              		.loc 1 116 0
 253 0088 1846     		mov	r0, r3
 254 008a 1037     		adds	r7, r7, #16
 255              		.cfi_def_cfa_offset 8
 256 008c BD46     		mov	sp, r7
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 008e 80BD     		pop	{r7, pc}
 260              	.L10:
 261              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 8


 262              	.L9:
 263 0090 00000000 		.word	Rx_Surtidor
 264 0094 00000000 		.word	rx_timeout
 265              		.cfi_endproc
 266              	.LFE64:
 267              		.size	get_estado, .-get_estado
 268              		.section	.text.ver_pos,"ax",%progbits
 269              		.align	2
 270              		.global	ver_pos
 271              		.thumb
 272              		.thumb_func
 273              		.type	ver_pos, %function
 274              	ver_pos:
 275              	.LFB65:
 117:.\Protocolo.c **** 
 118:.\Protocolo.c **** /*
 119:.\Protocolo.c **** ***************************************************************************************************
 120:.\Protocolo.c **** *                                         ver_pos( void )
 121:.\Protocolo.c **** *
 122:.\Protocolo.c **** * Description : 
 123:.\Protocolo.c **** *               
 124:.\Protocolo.c **** *
 125:.\Protocolo.c **** * Argument(s) : none
 126:.\Protocolo.c **** *
 127:.\Protocolo.c **** * Return(s)   : none
 128:.\Protocolo.c **** *
 129:.\Protocolo.c **** * Caller(s)   : 
 130:.\Protocolo.c **** *
 131:.\Protocolo.c **** * Note(s)     : none.
 132:.\Protocolo.c **** ***************************************************************************************************
 133:.\Protocolo.c **** */
 134:.\Protocolo.c **** uint8 ver_pos (void){
 276              		.loc 1 134 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 8
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 82B0     		sub	sp, sp, #8
 285              		.cfi_def_cfa_offset 16
 286 0004 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 135:.\Protocolo.c **** uint8 x;
 136:.\Protocolo.c **** lado1.dir=0xff;
 288              		.loc 1 136 0
 289 0006 244B     		ldr	r3, .L19
 290 0008 FF22     		movs	r2, #255
 291 000a 1A70     		strb	r2, [r3]
 137:.\Protocolo.c **** lado2.dir=0xff;
 292              		.loc 1 137 0
 293 000c 234B     		ldr	r3, .L19+4
 294 000e FF22     		movs	r2, #255
 295 0010 1A70     		strb	r2, [r3]
 138:.\Protocolo.c **** 	CyDelay(5);
 296              		.loc 1 138 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 9


 297 0012 0520     		movs	r0, #5
 298 0014 FFF7FEFF 		bl	CyDelay
 139:.\Protocolo.c ****     if(get_estado(0)!=0){
 299              		.loc 1 139 0
 300 0018 0020     		movs	r0, #0
 301 001a FFF7FEFF 		bl	get_estado
 302 001e 0346     		mov	r3, r0
 303 0020 002B     		cmp	r3, #0
 304 0022 02D0     		beq	.L12
 140:.\Protocolo.c **** 		lado2.dir=0;
 305              		.loc 1 140 0
 306 0024 1D4B     		ldr	r3, .L19+4
 307 0026 0022     		movs	r2, #0
 308 0028 1A70     		strb	r2, [r3]
 309              	.L12:
 141:.\Protocolo.c **** 	}	
 142:.\Protocolo.c ****     for(x=1;x<=15;x++){
 310              		.loc 1 142 0
 311 002a 0123     		movs	r3, #1
 312 002c FB71     		strb	r3, [r7, #7]
 313 002e 1FE0     		b	.L13
 314              	.L17:
 143:.\Protocolo.c **** 		CyDelay(5);
 315              		.loc 1 143 0
 316 0030 0520     		movs	r0, #5
 317 0032 FFF7FEFF 		bl	CyDelay
 144:.\Protocolo.c ****         if(get_estado(x)!=0){
 318              		.loc 1 144 0
 319 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 320 0038 1846     		mov	r0, r3
 321 003a FFF7FEFF 		bl	get_estado
 322 003e 0346     		mov	r3, r0
 323 0040 002B     		cmp	r3, #0
 324 0042 12D0     		beq	.L14
 145:.\Protocolo.c **** 			if(lado1.dir==0xFF){
 325              		.loc 1 145 0
 326 0044 144B     		ldr	r3, .L19
 327 0046 1B78     		ldrb	r3, [r3]
 328 0048 DBB2     		uxtb	r3, r3
 329 004a FF2B     		cmp	r3, #255
 330 004c 03D1     		bne	.L15
 146:.\Protocolo.c **** 				lado1.dir=x;
 331              		.loc 1 146 0
 332 004e 124A     		ldr	r2, .L19
 333 0050 FB79     		ldrb	r3, [r7, #7]
 334 0052 1370     		strb	r3, [r2]
 335 0054 09E0     		b	.L14
 336              	.L15:
 147:.\Protocolo.c **** 			}
 148:.\Protocolo.c **** 			else if(lado2.dir==0xFF){
 337              		.loc 1 148 0
 338 0056 114B     		ldr	r3, .L19+4
 339 0058 1B78     		ldrb	r3, [r3]
 340 005a DBB2     		uxtb	r3, r3
 341 005c FF2B     		cmp	r3, #255
 342 005e 04D1     		bne	.L14
 149:.\Protocolo.c **** 				lado2.dir=x;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 10


 343              		.loc 1 149 0
 344 0060 0E4A     		ldr	r2, .L19+4
 345 0062 FB79     		ldrb	r3, [r7, #7]
 346 0064 1370     		strb	r3, [r2]
 150:.\Protocolo.c **** 				return 1;
 347              		.loc 1 150 0
 348 0066 0123     		movs	r3, #1
 349 0068 12E0     		b	.L16
 350              	.L14:
 142:.\Protocolo.c **** 		CyDelay(5);
 351              		.loc 1 142 0 discriminator 2
 352 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 353 006c 0133     		adds	r3, r3, #1
 354 006e FB71     		strb	r3, [r7, #7]
 355              	.L13:
 142:.\Protocolo.c **** 		CyDelay(5);
 356              		.loc 1 142 0 is_stmt 0 discriminator 1
 357 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 358 0072 0F2B     		cmp	r3, #15
 359 0074 DCD9     		bls	.L17
 151:.\Protocolo.c **** 			}
 152:.\Protocolo.c **** 		}
 153:.\Protocolo.c **** 	}
 154:.\Protocolo.c **** 	if((lado1.dir!=0xFF)&&(lado2.dir!=0xFF)){
 360              		.loc 1 154 0 is_stmt 1
 361 0076 084B     		ldr	r3, .L19
 362 0078 1B78     		ldrb	r3, [r3]
 363 007a DBB2     		uxtb	r3, r3
 364 007c FF2B     		cmp	r3, #255
 365 007e 06D0     		beq	.L18
 366              		.loc 1 154 0 is_stmt 0 discriminator 1
 367 0080 064B     		ldr	r3, .L19+4
 368 0082 1B78     		ldrb	r3, [r3]
 369 0084 DBB2     		uxtb	r3, r3
 370 0086 FF2B     		cmp	r3, #255
 371 0088 01D0     		beq	.L18
 155:.\Protocolo.c **** 		return 1;
 372              		.loc 1 155 0 is_stmt 1
 373 008a 0123     		movs	r3, #1
 374 008c 00E0     		b	.L16
 375              	.L18:
 156:.\Protocolo.c **** 	}
 157:.\Protocolo.c **** 	else{
 158:.\Protocolo.c **** 		return 0;
 376              		.loc 1 158 0
 377 008e 0023     		movs	r3, #0
 378              	.L16:
 159:.\Protocolo.c **** 	}
 160:.\Protocolo.c **** }
 379              		.loc 1 160 0
 380 0090 1846     		mov	r0, r3
 381 0092 0837     		adds	r7, r7, #8
 382              		.cfi_def_cfa_offset 8
 383 0094 BD46     		mov	sp, r7
 384              		.cfi_def_cfa_register 13
 385              		@ sp needed
 386 0096 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 11


 387              	.L20:
 388              		.align	2
 389              	.L19:
 390 0098 00000000 		.word	lado1
 391 009c 00000000 		.word	lado2
 392              		.cfi_endproc
 393              	.LFE65:
 394              		.size	ver_pos, .-ver_pos
 395              		.section	.text.ver_error,"ax",%progbits
 396              		.align	2
 397              		.global	ver_error
 398              		.thumb
 399              		.thumb_func
 400              		.type	ver_error, %function
 401              	ver_error:
 402              	.LFB66:
 161:.\Protocolo.c **** 
 162:.\Protocolo.c **** /*
 163:.\Protocolo.c **** ***************************************************************************************************
 164:.\Protocolo.c **** *                                         void ver_error(uint8 val)
 165:.\Protocolo.c **** *
 166:.\Protocolo.c **** * Description : 
 167:.\Protocolo.c **** *               
 168:.\Protocolo.c **** *
 169:.\Protocolo.c **** * Argument(s) : none
 170:.\Protocolo.c **** *
 171:.\Protocolo.c **** * Return(s)   : none
 172:.\Protocolo.c **** *
 173:.\Protocolo.c **** * Caller(s)   : 
 174:.\Protocolo.c **** *
 175:.\Protocolo.c **** * Note(s)     : none.
 176:.\Protocolo.c **** ***************************************************************************************************
 177:.\Protocolo.c **** */
 178:.\Protocolo.c **** void ver_error(uint8 val){
 403              		.loc 1 178 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 16
 406              		@ frame_needed = 1, uses_anonymous_args = 0
 407 0000 80B5     		push	{r7, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 7, -8
 410              		.cfi_offset 14, -4
 411 0002 84B0     		sub	sp, sp, #16
 412              		.cfi_def_cfa_offset 24
 413 0004 00AF     		add	r7, sp, #0
 414              		.cfi_def_cfa_register 7
 415 0006 0346     		mov	r3, r0
 416 0008 FB71     		strb	r3, [r7, #7]
 179:.\Protocolo.c ****     uint8 estado;
 180:.\Protocolo.c ****     Surtidor_PutChar(val);
 417              		.loc 1 180 0
 418 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 419 000c 1846     		mov	r0, r3
 420 000e FFF7FEFF 		bl	Surtidor_PutChar
 181:.\Protocolo.c ****     CyDelay(200);
 421              		.loc 1 181 0
 422 0012 C820     		movs	r0, #200
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 12


 423 0014 FFF7FEFF 		bl	CyDelay
 182:.\Protocolo.c ****     if(Surtidor_GetRxBufferSize()>=1){
 424              		.loc 1 182 0
 425 0018 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 426 001c 0346     		mov	r3, r0
 427 001e 002B     		cmp	r3, #0
 428 0020 06D0     		beq	.L21
 183:.\Protocolo.c ****        estado=(Surtidor_ReadRxData()&0xF0)>>4;
 429              		.loc 1 183 0
 430 0022 FFF7FEFF 		bl	Surtidor_ReadRxData
 431 0026 0346     		mov	r3, r0
 432 0028 1B09     		lsrs	r3, r3, #4
 433 002a FB73     		strb	r3, [r7, #15]
 184:.\Protocolo.c ****        Surtidor_ClearRxBuffer();
 434              		.loc 1 184 0
 435 002c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 436              	.L21:
 185:.\Protocolo.c ****        if(estado==0){
 186:.\Protocolo.c **** 
 187:.\Protocolo.c ****        }
 188:.\Protocolo.c ****     }    
 189:.\Protocolo.c **** }
 437              		.loc 1 189 0
 438 0030 1037     		adds	r7, r7, #16
 439              		.cfi_def_cfa_offset 8
 440 0032 BD46     		mov	sp, r7
 441              		.cfi_def_cfa_register 13
 442              		@ sp needed
 443 0034 80BD     		pop	{r7, pc}
 444              		.cfi_endproc
 445              	.LFE66:
 446              		.size	ver_error, .-ver_error
 447 0036 00BF     		.section	.rodata
 448              		.align	2
 449              	.LC0:
 450 0000 FF       		.byte	-1
 451 0001 E9       		.byte	-23
 452 0002 FE       		.byte	-2
 453 0003 E0       		.byte	-32
 454 0004 E1       		.byte	-31
 455 0005 E0       		.byte	-32
 456 0006 FB       		.byte	-5
 457 0007 EE       		.byte	-18
 458 0008 F0       		.byte	-16
 459 0009 000000   		.section	.text.estado_ex,"ax",%progbits
 460              		.align	2
 461              		.global	estado_ex
 462              		.thumb
 463              		.thumb_func
 464              		.type	estado_ex, %function
 465              	estado_ex:
 466              	.LFB67:
 190:.\Protocolo.c **** 
 191:.\Protocolo.c **** /*
 192:.\Protocolo.c **** ***************************************************************************************************
 193:.\Protocolo.c **** *                                         estado_ex(uint8 val)
 194:.\Protocolo.c **** *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 13


 195:.\Protocolo.c **** * Description : 
 196:.\Protocolo.c **** *               
 197:.\Protocolo.c **** *
 198:.\Protocolo.c **** * Argument(s) : none
 199:.\Protocolo.c **** *
 200:.\Protocolo.c **** * Return(s)   : none
 201:.\Protocolo.c **** *
 202:.\Protocolo.c **** * Caller(s)   : 
 203:.\Protocolo.c **** *
 204:.\Protocolo.c **** * Note(s)     : none.
 205:.\Protocolo.c **** ***************************************************************************************************
 206:.\Protocolo.c **** */
 207:.\Protocolo.c **** uint8 estado_ex(uint8 val){
 467              		.loc 1 207 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 40
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471 0000 90B5     		push	{r4, r7, lr}
 472              		.cfi_def_cfa_offset 12
 473              		.cfi_offset 4, -12
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 8BB0     		sub	sp, sp, #44
 477              		.cfi_def_cfa_offset 56
 478 0004 00AF     		add	r7, sp, #0
 479              		.cfi_def_cfa_register 7
 480 0006 0346     		mov	r3, r0
 481 0008 FB71     		strb	r3, [r7, #7]
 208:.\Protocolo.c ****     uint8 rx_extend[19],x,comand_exten[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0};
 482              		.loc 1 208 0
 483 000a 594A     		ldr	r2, .L41
 484 000c 07F10803 		add	r3, r7, #8
 485 0010 1068     		ldr	r0, [r2]	@ unaligned
 486 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
 487 0014 03C3     		stmia	r3!, {r0, r1}
 488 0016 127A     		ldrb	r2, [r2, #8]
 489 0018 1A70     		strb	r2, [r3]
 209:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 490              		.loc 1 209 0
 491 001a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 210:.\Protocolo.c ****     Surtidor_PutChar(0x20|val);
 492              		.loc 1 210 0
 493 001e FB79     		ldrb	r3, [r7, #7]
 494 0020 43F02003 		orr	r3, r3, #32
 495 0024 DBB2     		uxtb	r3, r3
 496 0026 1846     		mov	r0, r3
 497 0028 FFF7FEFF 		bl	Surtidor_PutChar
 211:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 498              		.loc 1 211 0
 499 002c 5148     		ldr	r0, .L41+4
 500 002e FFF7FEFF 		bl	isr_1_StartEx
 212:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 501              		.loc 1 212 0
 502 0032 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 213:.\Protocolo.c ****     rx_timeout=0;
 503              		.loc 1 213 0
 504 0036 504B     		ldr	r3, .L41+8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 14


 505 0038 0022     		movs	r2, #0
 506 003a 1A70     		strb	r2, [r3]
 214:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 507              		.loc 1 214 0
 508 003c 0BE0     		b	.L24
 509              	.L26:
 215:.\Protocolo.c **** 		if(rx_timeout==1){
 510              		.loc 1 215 0
 511 003e 4E4B     		ldr	r3, .L41+8
 512 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 513 0042 012B     		cmp	r3, #1
 514 0044 07D1     		bne	.L24
 216:.\Protocolo.c **** 			isr_1_Stop();
 515              		.loc 1 216 0
 516 0046 FFF7FEFF 		bl	isr_1_Stop
 217:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 517              		.loc 1 217 0
 518 004a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 218:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 519              		.loc 1 218 0
 520 004e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 219:.\Protocolo.c **** 			return 0;
 521              		.loc 1 219 0
 522 0052 0023     		movs	r3, #0
 523 0054 88E0     		b	.L39
 524              	.L24:
 214:.\Protocolo.c **** 		if(rx_timeout==1){
 525              		.loc 1 214 0
 526 0056 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 527 005a 0346     		mov	r3, r0
 528 005c 002B     		cmp	r3, #0
 529 005e EED0     		beq	.L26
 220:.\Protocolo.c **** 		}
 221:.\Protocolo.c **** 	}
 222:.\Protocolo.c **** 	isr_1_Stop();
 530              		.loc 1 222 0
 531 0060 FFF7FEFF 		bl	isr_1_Stop
 223:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 532              		.loc 1 223 0
 533 0064 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 224:.\Protocolo.c ****     if(Surtidor_ReadRxData()==(0xD0|val)){
 534              		.loc 1 224 0
 535 0068 FFF7FEFF 		bl	Surtidor_ReadRxData
 536 006c 0346     		mov	r3, r0
 537 006e 1A46     		mov	r2, r3
 538 0070 FB79     		ldrb	r3, [r7, #7]
 539 0072 63F02F03 		orn	r3, r3, #47
 540 0076 DBB2     		uxtb	r3, r3
 541 0078 9A42     		cmp	r2, r3
 542 007a 74D1     		bne	.L27
 225:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 543              		.loc 1 225 0
 544 007c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 226:.\Protocolo.c **** 		CyDelay(5);
 545              		.loc 1 226 0
 546 0080 0520     		movs	r0, #5
 547 0082 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 15


 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 548              		.loc 1 227 0
 549 0086 0023     		movs	r3, #0
 550 0088 87F82730 		strb	r3, [r7, #39]
 551 008c 0EE0     		b	.L28
 552              	.L29:
 228:.\Protocolo.c ****            Surtidor_PutChar(comand_exten[x]); 
 553              		.loc 1 228 0 discriminator 3
 554 008e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 555 0092 07F12802 		add	r2, r7, #40
 556 0096 1344     		add	r3, r3, r2
 557 0098 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 558 009c 1846     		mov	r0, r3
 559 009e FFF7FEFF 		bl	Surtidor_PutChar
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 560              		.loc 1 227 0 discriminator 3
 561 00a2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 562 00a6 0133     		adds	r3, r3, #1
 563 00a8 87F82730 		strb	r3, [r7, #39]
 564              	.L28:
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 565              		.loc 1 227 0 is_stmt 0 discriminator 1
 566 00ac 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 567 00b0 082B     		cmp	r3, #8
 568 00b2 ECD9     		bls	.L29
 229:.\Protocolo.c ****         }
 230:.\Protocolo.c **** 		isr_1_StartEx(Rx_Surtidor);
 569              		.loc 1 230 0 is_stmt 1
 570 00b4 2F48     		ldr	r0, .L41+4
 571 00b6 FFF7FEFF 		bl	isr_1_StartEx
 231:.\Protocolo.c **** 	    Timer_RxSurtidor_Start();	
 572              		.loc 1 231 0
 573 00ba FFF7FEFF 		bl	Timer_RxSurtidor_Start
 232:.\Protocolo.c **** 	    rx_timeout=0;
 574              		.loc 1 232 0
 575 00be 2E4B     		ldr	r3, .L41+8
 576 00c0 0022     		movs	r2, #0
 577 00c2 1A70     		strb	r2, [r3]
 233:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 578              		.loc 1 233 0
 579 00c4 0BE0     		b	.L30
 580              	.L31:
 234:.\Protocolo.c **** 			if(rx_timeout==1){
 581              		.loc 1 234 0
 582 00c6 2C4B     		ldr	r3, .L41+8
 583 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 584 00ca 012B     		cmp	r3, #1
 585 00cc 07D1     		bne	.L30
 235:.\Protocolo.c **** 				isr_1_Stop();
 586              		.loc 1 235 0
 587 00ce FFF7FEFF 		bl	isr_1_Stop
 236:.\Protocolo.c **** 				Timer_RxSurtidor_Stop();
 588              		.loc 1 236 0
 589 00d2 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 237:.\Protocolo.c **** 	    		Surtidor_ClearRxBuffer();			
 590              		.loc 1 237 0
 591 00d6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 16


 238:.\Protocolo.c **** 				return 0;
 592              		.loc 1 238 0
 593 00da 0023     		movs	r3, #0
 594 00dc 44E0     		b	.L39
 595              	.L30:
 233:.\Protocolo.c **** 			if(rx_timeout==1){
 596              		.loc 1 233 0
 597 00de FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 598 00e2 0346     		mov	r3, r0
 599 00e4 132B     		cmp	r3, #19
 600 00e6 EED1     		bne	.L31
 239:.\Protocolo.c **** 			}
 240:.\Protocolo.c **** 		}       
 241:.\Protocolo.c **** 		isr_1_Stop();
 601              		.loc 1 241 0
 602 00e8 FFF7FEFF 		bl	isr_1_Stop
 242:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();		
 603              		.loc 1 242 0
 604 00ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 605              		.loc 1 243 0
 606 00f0 0023     		movs	r3, #0
 607 00f2 87F82730 		strb	r3, [r7, #39]
 608 00f6 0FE0     		b	.L32
 609              	.L33:
 244:.\Protocolo.c ****            rx_extend[x]=Surtidor_ReadRxData(); 
 610              		.loc 1 244 0 discriminator 3
 611 00f8 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 612 00fc FFF7FEFF 		bl	Surtidor_ReadRxData
 613 0100 0346     		mov	r3, r0
 614 0102 1A46     		mov	r2, r3
 615 0104 07F12803 		add	r3, r7, #40
 616 0108 2344     		add	r3, r3, r4
 617 010a 03F8142C 		strb	r2, [r3, #-20]
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 618              		.loc 1 243 0 discriminator 3
 619 010e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 620 0112 0133     		adds	r3, r3, #1
 621 0114 87F82730 		strb	r3, [r7, #39]
 622              	.L32:
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 623              		.loc 1 243 0 is_stmt 0 discriminator 1
 624 0118 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 625 011c 122B     		cmp	r3, #18
 626 011e EBD9     		bls	.L33
 245:.\Protocolo.c ****         }
 246:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 627              		.loc 1 246 0 is_stmt 1
 628 0120 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 247:.\Protocolo.c ****         if((rx_extend[0]==0xBA)&&(rx_extend[17]==0x8D)&&(rx_extend[18]==0x8A)&&(rx_extend[12]==0xB1
 629              		.loc 1 247 0
 630 0124 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 631 0126 BA2B     		cmp	r3, #186
 632 0128 1BD1     		bne	.L34
 633              		.loc 1 247 0 is_stmt 0 discriminator 1
 634 012a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 635 012e 8D2B     		cmp	r3, #141
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 17


 636 0130 17D1     		bne	.L34
 637              		.loc 1 247 0 discriminator 2
 638 0132 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 639 0136 8A2B     		cmp	r3, #138
 640 0138 13D1     		bne	.L34
 641              		.loc 1 247 0 discriminator 3
 642 013a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 643 013e B12B     		cmp	r3, #177
 644 0140 0FD1     		bne	.L34
 248:.\Protocolo.c ****             switch(rx_extend[14]){
 645              		.loc 1 248 0 is_stmt 1
 646 0142 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 647 0146 B22B     		cmp	r3, #178
 648 0148 05D0     		beq	.L36
 649 014a B32B     		cmp	r3, #179
 650 014c 05D0     		beq	.L37
 651 014e B12B     		cmp	r3, #177
 652 0150 05D1     		bne	.L40
 249:.\Protocolo.c ****                 case 0xB1:
 250:.\Protocolo.c ****                     return 1;
 653              		.loc 1 250 0
 654 0152 0123     		movs	r3, #1
 655 0154 08E0     		b	.L39
 656              	.L36:
 251:.\Protocolo.c ****                 break;
 252:.\Protocolo.c ****                 case 0xB2:
 253:.\Protocolo.c ****                     return 2;
 657              		.loc 1 253 0
 658 0156 0223     		movs	r3, #2
 659 0158 06E0     		b	.L39
 660              	.L37:
 254:.\Protocolo.c ****                 break;
 255:.\Protocolo.c ****                 case 0xB3:
 256:.\Protocolo.c ****                     return 3;
 661              		.loc 1 256 0
 662 015a 0323     		movs	r3, #3
 663 015c 04E0     		b	.L39
 664              	.L40:
 257:.\Protocolo.c ****                 break;
 258:.\Protocolo.c ****                 default:
 259:.\Protocolo.c ****                 	return 0;
 665              		.loc 1 259 0
 666 015e 0023     		movs	r3, #0
 667 0160 02E0     		b	.L39
 668              	.L34:
 260:.\Protocolo.c **** 				break;
 261:.\Protocolo.c ****             }
 262:.\Protocolo.c ****         }
 263:.\Protocolo.c ****         else{
 264:.\Protocolo.c ****             return 0;
 669              		.loc 1 264 0
 670 0162 0023     		movs	r3, #0
 671 0164 00E0     		b	.L39
 672              	.L27:
 265:.\Protocolo.c ****         }
 266:.\Protocolo.c ****     }
 267:.\Protocolo.c ****     else{
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 18


 268:.\Protocolo.c ****         return 0;
 673              		.loc 1 268 0
 674 0166 0023     		movs	r3, #0
 675              	.L39:
 269:.\Protocolo.c ****     }
 270:.\Protocolo.c **** }
 676              		.loc 1 270 0
 677 0168 1846     		mov	r0, r3
 678 016a 2C37     		adds	r7, r7, #44
 679              		.cfi_def_cfa_offset 12
 680 016c BD46     		mov	sp, r7
 681              		.cfi_def_cfa_register 13
 682              		@ sp needed
 683 016e 90BD     		pop	{r4, r7, pc}
 684              	.L42:
 685              		.align	2
 686              	.L41:
 687 0170 00000000 		.word	.LC0
 688 0174 00000000 		.word	Rx_Surtidor
 689 0178 00000000 		.word	rx_timeout
 690              		.cfi_endproc
 691              	.LFE67:
 692              		.size	estado_ex, .-estado_ex
 693              		.section	.text.detener,"ax",%progbits
 694              		.align	2
 695              		.global	detener
 696              		.thumb
 697              		.thumb_func
 698              		.type	detener, %function
 699              	detener:
 700              	.LFB68:
 271:.\Protocolo.c **** 
 272:.\Protocolo.c **** /*
 273:.\Protocolo.c **** ***************************************************************************************************
 274:.\Protocolo.c **** *                                         void detener(uint8 val)
 275:.\Protocolo.c **** *
 276:.\Protocolo.c **** * Description : 
 277:.\Protocolo.c **** *               
 278:.\Protocolo.c **** *
 279:.\Protocolo.c **** * Argument(s) : none
 280:.\Protocolo.c **** *
 281:.\Protocolo.c **** * Return(s)   : none
 282:.\Protocolo.c **** *
 283:.\Protocolo.c **** * Caller(s)   : 
 284:.\Protocolo.c **** *
 285:.\Protocolo.c **** * Note(s)     : none.
 286:.\Protocolo.c **** ***************************************************************************************************
 287:.\Protocolo.c **** */
 288:.\Protocolo.c **** void detener(uint8 val){
 701              		.loc 1 288 0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 8
 704              		@ frame_needed = 1, uses_anonymous_args = 0
 705 0000 80B5     		push	{r7, lr}
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 7, -8
 708              		.cfi_offset 14, -4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 19


 709 0002 82B0     		sub	sp, sp, #8
 710              		.cfi_def_cfa_offset 16
 711 0004 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 713 0006 0346     		mov	r3, r0
 714 0008 FB71     		strb	r3, [r7, #7]
 289:.\Protocolo.c ****     Surtidor_PutChar(0x30|val);
 715              		.loc 1 289 0
 716 000a FB79     		ldrb	r3, [r7, #7]
 717 000c 43F03003 		orr	r3, r3, #48
 718 0010 DBB2     		uxtb	r3, r3
 719 0012 1846     		mov	r0, r3
 720 0014 FFF7FEFF 		bl	Surtidor_PutChar
 290:.\Protocolo.c ****     CyDelay(200);
 721              		.loc 1 290 0
 722 0018 C820     		movs	r0, #200
 723 001a FFF7FEFF 		bl	CyDelay
 291:.\Protocolo.c **** }
 724              		.loc 1 291 0
 725 001e 0837     		adds	r7, r7, #8
 726              		.cfi_def_cfa_offset 8
 727 0020 BD46     		mov	sp, r7
 728              		.cfi_def_cfa_register 13
 729              		@ sp needed
 730 0022 80BD     		pop	{r7, pc}
 731              		.cfi_endproc
 732              	.LFE68:
 733              		.size	detener, .-detener
 734              		.section	.text.venta,"ax",%progbits
 735              		.align	2
 736              		.global	venta
 737              		.thumb
 738              		.thumb_func
 739              		.type	venta, %function
 740              	venta:
 741              	.LFB69:
 292:.\Protocolo.c **** 
 293:.\Protocolo.c **** /*
 294:.\Protocolo.c **** ***************************************************************************************************
 295:.\Protocolo.c **** *                                         void venta(uint8 val)
 296:.\Protocolo.c **** *
 297:.\Protocolo.c **** * Description : 
 298:.\Protocolo.c **** *               
 299:.\Protocolo.c **** *
 300:.\Protocolo.c **** * Argument(s) : none
 301:.\Protocolo.c **** *
 302:.\Protocolo.c **** * Return(s)   : none
 303:.\Protocolo.c **** *
 304:.\Protocolo.c **** * Caller(s)   : 
 305:.\Protocolo.c **** *
 306:.\Protocolo.c **** * Note(s)     : none.
 307:.\Protocolo.c **** ***************************************************************************************************
 308:.\Protocolo.c **** */
 309:.\Protocolo.c **** uint8 venta(uint8 dir){
 742              		.loc 1 309 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 20


 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746 0000 80B5     		push	{r7, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 14, -4
 750 0002 84B0     		sub	sp, sp, #16
 751              		.cfi_def_cfa_offset 24
 752 0004 00AF     		add	r7, sp, #0
 753              		.cfi_def_cfa_register 7
 754 0006 0346     		mov	r3, r0
 755 0008 FB71     		strb	r3, [r7, #7]
 310:.\Protocolo.c **** 	uint8 x;
 311:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 756              		.loc 1 311 0
 757 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 312:.\Protocolo.c **** 	Surtidor_PutChar(0x40|dir);
 758              		.loc 1 312 0
 759 000e FB79     		ldrb	r3, [r7, #7]
 760 0010 43F04003 		orr	r3, r3, #64
 761 0014 DBB2     		uxtb	r3, r3
 762 0016 1846     		mov	r0, r3
 763 0018 FFF7FEFF 		bl	Surtidor_PutChar
 313:.\Protocolo.c ****     CyDelay(300);
 764              		.loc 1 313 0
 765 001c 4FF49670 		mov	r0, #300
 766 0020 FFF7FEFF 		bl	CyDelay
 314:.\Protocolo.c **** 	if((version[1]!=7)&&(Surtidor_GetRxBufferSize()==33)){
 767              		.loc 1 314 0
 768 0024 AB4B     		ldr	r3, .L78
 769 0026 5B78     		ldrb	r3, [r3, #1]
 770 0028 DBB2     		uxtb	r3, r3
 771 002a 072B     		cmp	r3, #7
 772 002c 00F0BC80 		beq	.L45
 773              		.loc 1 314 0 is_stmt 0 discriminator 1
 774 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 775 0034 0346     		mov	r3, r0
 776 0036 212B     		cmp	r3, #33
 777 0038 40F0B680 		bne	.L45
 315:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[32]==0xF0)){
 778              		.loc 1 315 0 is_stmt 1
 779 003c A64B     		ldr	r3, .L78+4
 780 003e 1B78     		ldrb	r3, [r3]
 781 0040 DBB2     		uxtb	r3, r3
 782 0042 FF2B     		cmp	r3, #255
 783 0044 40F0AE80 		bne	.L46
 784              		.loc 1 315 0 is_stmt 0 discriminator 1
 785 0048 A34B     		ldr	r3, .L78+4
 786 004a 9B78     		ldrb	r3, [r3, #2]
 787 004c DBB2     		uxtb	r3, r3
 788 004e F82B     		cmp	r3, #248
 789 0050 40F0A880 		bne	.L46
 790              		.loc 1 315 0 discriminator 2
 791 0054 A04B     		ldr	r3, .L78+4
 792 0056 93F82030 		ldrb	r3, [r3, #32]
 793 005a DBB2     		uxtb	r3, r3
 794 005c F02B     		cmp	r3, #240
 795 005e 40F0A180 		bne	.L46
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 21


 316:.\Protocolo.c **** 			if(dir==lado1.dir){
 796              		.loc 1 316 0 is_stmt 1
 797 0062 9E4B     		ldr	r3, .L78+8
 798 0064 1B78     		ldrb	r3, [r3]
 799 0066 DBB2     		uxtb	r3, r3
 800 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 801 006a 9A42     		cmp	r2, r3
 802 006c 4CD1     		bne	.L47
 317:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 803              		.loc 1 317 0
 804 006e 9A4B     		ldr	r3, .L78+4
 805 0070 5B7A     		ldrb	r3, [r3, #9]
 806 0072 DBB2     		uxtb	r3, r3
 807 0074 03F00F03 		and	r3, r3, #15
 808 0078 DBB2     		uxtb	r3, r3
 809 007a 0133     		adds	r3, r3, #1
 810 007c DAB2     		uxtb	r2, r3
 811 007e 984B     		ldr	r3, .L78+12
 812 0080 5A76     		strb	r2, [r3, #25]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 813              		.loc 1 318 0
 814 0082 0023     		movs	r3, #0
 815 0084 FB73     		strb	r3, [r7, #15]
 816 0086 0FE0     		b	.L48
 817              	.L49:
 319:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 818              		.loc 1 319 0 discriminator 3
 819 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 820 008a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 821 008c 0C32     		adds	r2, r2, #12
 822 008e 9249     		ldr	r1, .L78+4
 823 0090 8A5C     		ldrb	r2, [r1, r2]
 824 0092 D2B2     		uxtb	r2, r2
 825 0094 02F00F02 		and	r2, r2, #15
 826 0098 D1B2     		uxtb	r1, r2
 827 009a 914A     		ldr	r2, .L78+12
 828 009c 1344     		add	r3, r3, r2
 829 009e 0A46     		mov	r2, r1
 830 00a0 9A70     		strb	r2, [r3, #2]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 831              		.loc 1 318 0 discriminator 3
 832 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 833 00a4 0133     		adds	r3, r3, #1
 834 00a6 FB73     		strb	r3, [r7, #15]
 835              	.L48:
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 836              		.loc 1 318 0 is_stmt 0 discriminator 1
 837 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 838 00aa 032B     		cmp	r3, #3
 839 00ac ECD9     		bls	.L49
 320:.\Protocolo.c **** 				}
 321:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 840              		.loc 1 321 0 is_stmt 1
 841 00ae 0023     		movs	r3, #0
 842 00b0 FB73     		strb	r3, [r7, #15]
 843 00b2 0FE0     		b	.L50
 844              	.L51:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 22


 322:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 845              		.loc 1 322 0 discriminator 3
 846 00b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 847 00b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 848 00b8 1132     		adds	r2, r2, #17
 849 00ba 8749     		ldr	r1, .L78+4
 850 00bc 8A5C     		ldrb	r2, [r1, r2]
 851 00be D2B2     		uxtb	r2, r2
 852 00c0 02F00F02 		and	r2, r2, #15
 853 00c4 D1B2     		uxtb	r1, r2
 854 00c6 864A     		ldr	r2, .L78+12
 855 00c8 1344     		add	r3, r3, r2
 856 00ca 0A46     		mov	r2, r1
 857 00cc 1A74     		strb	r2, [r3, #16]
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 858              		.loc 1 321 0 discriminator 3
 859 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 860 00d0 0133     		adds	r3, r3, #1
 861 00d2 FB73     		strb	r3, [r7, #15]
 862              	.L50:
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 863              		.loc 1 321 0 is_stmt 0 discriminator 1
 864 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 865 00d6 052B     		cmp	r3, #5
 866 00d8 ECD9     		bls	.L51
 323:.\Protocolo.c **** 				}			
 324:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 867              		.loc 1 324 0 is_stmt 1
 868 00da 0023     		movs	r3, #0
 869 00dc FB73     		strb	r3, [r7, #15]
 870 00de 0FE0     		b	.L52
 871              	.L53:
 325:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 872              		.loc 1 325 0 discriminator 3
 873 00e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 874 00e2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 875 00e4 1832     		adds	r2, r2, #24
 876 00e6 7C49     		ldr	r1, .L78+4
 877 00e8 8A5C     		ldrb	r2, [r1, r2]
 878 00ea D2B2     		uxtb	r2, r2
 879 00ec 02F00F02 		and	r2, r2, #15
 880 00f0 D1B2     		uxtb	r1, r2
 881 00f2 7B4A     		ldr	r2, .L78+12
 882 00f4 1344     		add	r3, r3, r2
 883 00f6 0A46     		mov	r2, r1
 884 00f8 DA71     		strb	r2, [r3, #7]
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 885              		.loc 1 324 0 discriminator 3
 886 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 887 00fc 0133     		adds	r3, r3, #1
 888 00fe FB73     		strb	r3, [r7, #15]
 889              	.L52:
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 890              		.loc 1 324 0 is_stmt 0 discriminator 1
 891 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 892 0102 052B     		cmp	r3, #5
 893 0104 ECD9     		bls	.L53
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 23


 894 0106 4BE0     		b	.L54
 895              	.L47:
 326:.\Protocolo.c **** 				}
 327:.\Protocolo.c **** 			}
 328:.\Protocolo.c **** 			else{
 329:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 896              		.loc 1 329 0 is_stmt 1
 897 0108 734B     		ldr	r3, .L78+4
 898 010a 5B7A     		ldrb	r3, [r3, #9]
 899 010c DBB2     		uxtb	r3, r3
 900 010e 03F00F03 		and	r3, r3, #15
 901 0112 DBB2     		uxtb	r3, r3
 902 0114 0133     		adds	r3, r3, #1
 903 0116 DAB2     		uxtb	r2, r3
 904 0118 724B     		ldr	r3, .L78+16
 905 011a 5A76     		strb	r2, [r3, #25]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 906              		.loc 1 330 0
 907 011c 0023     		movs	r3, #0
 908 011e FB73     		strb	r3, [r7, #15]
 909 0120 0FE0     		b	.L55
 910              	.L56:
 331:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 911              		.loc 1 331 0 discriminator 3
 912 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 913 0124 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 914 0126 0C32     		adds	r2, r2, #12
 915 0128 6B49     		ldr	r1, .L78+4
 916 012a 8A5C     		ldrb	r2, [r1, r2]
 917 012c D2B2     		uxtb	r2, r2
 918 012e 02F00F02 		and	r2, r2, #15
 919 0132 D1B2     		uxtb	r1, r2
 920 0134 6B4A     		ldr	r2, .L78+16
 921 0136 1344     		add	r3, r3, r2
 922 0138 0A46     		mov	r2, r1
 923 013a 9A70     		strb	r2, [r3, #2]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 924              		.loc 1 330 0 discriminator 3
 925 013c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 926 013e 0133     		adds	r3, r3, #1
 927 0140 FB73     		strb	r3, [r7, #15]
 928              	.L55:
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 929              		.loc 1 330 0 is_stmt 0 discriminator 1
 930 0142 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 931 0144 032B     		cmp	r3, #3
 932 0146 ECD9     		bls	.L56
 332:.\Protocolo.c **** 				}
 333:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 933              		.loc 1 333 0 is_stmt 1
 934 0148 0023     		movs	r3, #0
 935 014a FB73     		strb	r3, [r7, #15]
 936 014c 0FE0     		b	.L57
 937              	.L58:
 334:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 938              		.loc 1 334 0 discriminator 3
 939 014e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 24


 940 0150 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 941 0152 1132     		adds	r2, r2, #17
 942 0154 6049     		ldr	r1, .L78+4
 943 0156 8A5C     		ldrb	r2, [r1, r2]
 944 0158 D2B2     		uxtb	r2, r2
 945 015a 02F00F02 		and	r2, r2, #15
 946 015e D1B2     		uxtb	r1, r2
 947 0160 604A     		ldr	r2, .L78+16
 948 0162 1344     		add	r3, r3, r2
 949 0164 0A46     		mov	r2, r1
 950 0166 1A74     		strb	r2, [r3, #16]
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 951              		.loc 1 333 0 discriminator 3
 952 0168 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 953 016a 0133     		adds	r3, r3, #1
 954 016c FB73     		strb	r3, [r7, #15]
 955              	.L57:
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 956              		.loc 1 333 0 is_stmt 0 discriminator 1
 957 016e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 958 0170 052B     		cmp	r3, #5
 959 0172 ECD9     		bls	.L58
 335:.\Protocolo.c **** 				}			
 336:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 960              		.loc 1 336 0 is_stmt 1
 961 0174 0023     		movs	r3, #0
 962 0176 FB73     		strb	r3, [r7, #15]
 963 0178 0FE0     		b	.L59
 964              	.L60:
 337:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 965              		.loc 1 337 0 discriminator 3
 966 017a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 967 017c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 968 017e 1832     		adds	r2, r2, #24
 969 0180 5549     		ldr	r1, .L78+4
 970 0182 8A5C     		ldrb	r2, [r1, r2]
 971 0184 D2B2     		uxtb	r2, r2
 972 0186 02F00F02 		and	r2, r2, #15
 973 018a D1B2     		uxtb	r1, r2
 974 018c 554A     		ldr	r2, .L78+16
 975 018e 1344     		add	r3, r3, r2
 976 0190 0A46     		mov	r2, r1
 977 0192 DA71     		strb	r2, [r3, #7]
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 978              		.loc 1 336 0 discriminator 3
 979 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 980 0196 0133     		adds	r3, r3, #1
 981 0198 FB73     		strb	r3, [r7, #15]
 982              	.L59:
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 983              		.loc 1 336 0 is_stmt 0 discriminator 1
 984 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 985 019c 052B     		cmp	r3, #5
 986 019e ECD9     		bls	.L60
 987              	.L54:
 338:.\Protocolo.c **** 				}			
 339:.\Protocolo.c **** 			}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 25


 340:.\Protocolo.c **** 			return 1;
 988              		.loc 1 340 0 is_stmt 1
 989 01a0 0123     		movs	r3, #1
 990 01a2 CFE0     		b	.L61
 991              	.L46:
 341:.\Protocolo.c **** 		}
 342:.\Protocolo.c **** 		else{
 343:.\Protocolo.c **** 			return 0;
 992              		.loc 1 343 0
 993 01a4 0023     		movs	r3, #0
 994 01a6 CDE0     		b	.L61
 995              	.L45:
 344:.\Protocolo.c **** 		}
 345:.\Protocolo.c **** 	}
 346:.\Protocolo.c **** 	else if((version[1]==7)&&(Surtidor_GetRxBufferSize()==39)){
 996              		.loc 1 346 0
 997 01a8 4A4B     		ldr	r3, .L78
 998 01aa 5B78     		ldrb	r3, [r3, #1]
 999 01ac DBB2     		uxtb	r3, r3
 1000 01ae 072B     		cmp	r3, #7
 1001 01b0 40F0C780 		bne	.L62
 1002              		.loc 1 346 0 is_stmt 0 discriminator 1
 1003 01b4 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 1004 01b8 0346     		mov	r3, r0
 1005 01ba 272B     		cmp	r3, #39
 1006 01bc 40F0C180 		bne	.L62
 347:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[38]==0xF0)){
 1007              		.loc 1 347 0 is_stmt 1
 1008 01c0 454B     		ldr	r3, .L78+4
 1009 01c2 1B78     		ldrb	r3, [r3]
 1010 01c4 DBB2     		uxtb	r3, r3
 1011 01c6 FF2B     		cmp	r3, #255
 1012 01c8 40F0B980 		bne	.L63
 1013              		.loc 1 347 0 is_stmt 0 discriminator 1
 1014 01cc 424B     		ldr	r3, .L78+4
 1015 01ce 9B78     		ldrb	r3, [r3, #2]
 1016 01d0 DBB2     		uxtb	r3, r3
 1017 01d2 F82B     		cmp	r3, #248
 1018 01d4 40F0B380 		bne	.L63
 1019              		.loc 1 347 0 discriminator 2
 1020 01d8 3F4B     		ldr	r3, .L78+4
 1021 01da 93F82630 		ldrb	r3, [r3, #38]
 1022 01de DBB2     		uxtb	r3, r3
 1023 01e0 F02B     		cmp	r3, #240
 1024 01e2 40F0AC80 		bne	.L63
 348:.\Protocolo.c **** 			if(dir==lado1.dir){
 1025              		.loc 1 348 0 is_stmt 1
 1026 01e6 3D4B     		ldr	r3, .L78+8
 1027 01e8 1B78     		ldrb	r3, [r3]
 1028 01ea DBB2     		uxtb	r3, r3
 1029 01ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1030 01ee 9A42     		cmp	r2, r3
 1031 01f0 4CD1     		bne	.L64
 349:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1032              		.loc 1 349 0
 1033 01f2 394B     		ldr	r3, .L78+4
 1034 01f4 5B7A     		ldrb	r3, [r3, #9]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 26


 1035 01f6 DBB2     		uxtb	r3, r3
 1036 01f8 03F00F03 		and	r3, r3, #15
 1037 01fc DBB2     		uxtb	r3, r3
 1038 01fe 0133     		adds	r3, r3, #1
 1039 0200 DAB2     		uxtb	r2, r3
 1040 0202 374B     		ldr	r3, .L78+12
 1041 0204 5A76     		strb	r2, [r3, #25]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1042              		.loc 1 350 0
 1043 0206 0023     		movs	r3, #0
 1044 0208 FB73     		strb	r3, [r7, #15]
 1045 020a 0FE0     		b	.L65
 1046              	.L66:
 351:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1047              		.loc 1 351 0 discriminator 3
 1048 020c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1049 020e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1050 0210 0C32     		adds	r2, r2, #12
 1051 0212 3149     		ldr	r1, .L78+4
 1052 0214 8A5C     		ldrb	r2, [r1, r2]
 1053 0216 D2B2     		uxtb	r2, r2
 1054 0218 02F00F02 		and	r2, r2, #15
 1055 021c D1B2     		uxtb	r1, r2
 1056 021e 304A     		ldr	r2, .L78+12
 1057 0220 1344     		add	r3, r3, r2
 1058 0222 0A46     		mov	r2, r1
 1059 0224 9A70     		strb	r2, [r3, #2]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1060              		.loc 1 350 0 discriminator 3
 1061 0226 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1062 0228 0133     		adds	r3, r3, #1
 1063 022a FB73     		strb	r3, [r7, #15]
 1064              	.L65:
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1065              		.loc 1 350 0 is_stmt 0 discriminator 1
 1066 022c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1067 022e 052B     		cmp	r3, #5
 1068 0230 ECD9     		bls	.L66
 352:.\Protocolo.c **** 				}
 353:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1069              		.loc 1 353 0 is_stmt 1
 1070 0232 0023     		movs	r3, #0
 1071 0234 FB73     		strb	r3, [r7, #15]
 1072 0236 0FE0     		b	.L67
 1073              	.L68:
 354:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1074              		.loc 1 354 0 discriminator 3
 1075 0238 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1076 023a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1077 023c 1332     		adds	r2, r2, #19
 1078 023e 2649     		ldr	r1, .L78+4
 1079 0240 8A5C     		ldrb	r2, [r1, r2]
 1080 0242 D2B2     		uxtb	r2, r2
 1081 0244 02F00F02 		and	r2, r2, #15
 1082 0248 D1B2     		uxtb	r1, r2
 1083 024a 254A     		ldr	r2, .L78+12
 1084 024c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 27


 1085 024e 0A46     		mov	r2, r1
 1086 0250 1A74     		strb	r2, [r3, #16]
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1087              		.loc 1 353 0 discriminator 3
 1088 0252 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1089 0254 0133     		adds	r3, r3, #1
 1090 0256 FB73     		strb	r3, [r7, #15]
 1091              	.L67:
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1092              		.loc 1 353 0 is_stmt 0 discriminator 1
 1093 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1094 025a 072B     		cmp	r3, #7
 1095 025c ECD9     		bls	.L68
 355:.\Protocolo.c **** 				}			
 356:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1096              		.loc 1 356 0 is_stmt 1
 1097 025e 0023     		movs	r3, #0
 1098 0260 FB73     		strb	r3, [r7, #15]
 1099 0262 0FE0     		b	.L69
 1100              	.L70:
 357:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1101              		.loc 1 357 0 discriminator 3
 1102 0264 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1103 0266 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1104 0268 1C32     		adds	r2, r2, #28
 1105 026a 1B49     		ldr	r1, .L78+4
 1106 026c 8A5C     		ldrb	r2, [r1, r2]
 1107 026e D2B2     		uxtb	r2, r2
 1108 0270 02F00F02 		and	r2, r2, #15
 1109 0274 D1B2     		uxtb	r1, r2
 1110 0276 1A4A     		ldr	r2, .L78+12
 1111 0278 1344     		add	r3, r3, r2
 1112 027a 0A46     		mov	r2, r1
 1113 027c DA71     		strb	r2, [r3, #7]
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1114              		.loc 1 356 0 discriminator 3
 1115 027e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1116 0280 0133     		adds	r3, r3, #1
 1117 0282 FB73     		strb	r3, [r7, #15]
 1118              	.L69:
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1119              		.loc 1 356 0 is_stmt 0 discriminator 1
 1120 0284 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1121 0286 072B     		cmp	r3, #7
 1122 0288 ECD9     		bls	.L70
 1123 028a 56E0     		b	.L71
 1124              	.L64:
 358:.\Protocolo.c **** 				}
 359:.\Protocolo.c **** 			}
 360:.\Protocolo.c **** 			else{
 361:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1125              		.loc 1 361 0 is_stmt 1
 1126 028c 124B     		ldr	r3, .L78+4
 1127 028e 5B7A     		ldrb	r3, [r3, #9]
 1128 0290 DBB2     		uxtb	r3, r3
 1129 0292 03F00F03 		and	r3, r3, #15
 1130 0296 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 28


 1131 0298 0133     		adds	r3, r3, #1
 1132 029a DAB2     		uxtb	r2, r3
 1133 029c 114B     		ldr	r3, .L78+16
 1134 029e 5A76     		strb	r2, [r3, #25]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1135              		.loc 1 362 0
 1136 02a0 0023     		movs	r3, #0
 1137 02a2 FB73     		strb	r3, [r7, #15]
 1138 02a4 0FE0     		b	.L72
 1139              	.L73:
 363:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1140              		.loc 1 363 0 discriminator 3
 1141 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1142 02a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1143 02aa 0C32     		adds	r2, r2, #12
 1144 02ac 0A49     		ldr	r1, .L78+4
 1145 02ae 8A5C     		ldrb	r2, [r1, r2]
 1146 02b0 D2B2     		uxtb	r2, r2
 1147 02b2 02F00F02 		and	r2, r2, #15
 1148 02b6 D1B2     		uxtb	r1, r2
 1149 02b8 0A4A     		ldr	r2, .L78+16
 1150 02ba 1344     		add	r3, r3, r2
 1151 02bc 0A46     		mov	r2, r1
 1152 02be 9A70     		strb	r2, [r3, #2]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1153              		.loc 1 362 0 discriminator 3
 1154 02c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1155 02c2 0133     		adds	r3, r3, #1
 1156 02c4 FB73     		strb	r3, [r7, #15]
 1157              	.L72:
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1158              		.loc 1 362 0 is_stmt 0 discriminator 1
 1159 02c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1160 02c8 052B     		cmp	r3, #5
 1161 02ca ECD9     		bls	.L73
 364:.\Protocolo.c **** 				}
 365:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1162              		.loc 1 365 0 is_stmt 1
 1163 02cc 0023     		movs	r3, #0
 1164 02ce FB73     		strb	r3, [r7, #15]
 1165 02d0 1AE0     		b	.L74
 1166              	.L79:
 1167 02d2 00BF     		.align	2
 1168              	.L78:
 1169 02d4 00000000 		.word	version
 1170 02d8 00000000 		.word	Surtidor_rxBuffer
 1171 02dc 00000000 		.word	lado1
 1172 02e0 00000000 		.word	rventa1
 1173 02e4 00000000 		.word	rventa2
 1174              	.L75:
 366:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1175              		.loc 1 366 0 discriminator 3
 1176 02e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1177 02ea FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1178 02ec 1332     		adds	r2, r2, #19
 1179 02ee 1749     		ldr	r1, .L80
 1180 02f0 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 29


 1181 02f2 D2B2     		uxtb	r2, r2
 1182 02f4 02F00F02 		and	r2, r2, #15
 1183 02f8 D1B2     		uxtb	r1, r2
 1184 02fa 154A     		ldr	r2, .L80+4
 1185 02fc 1344     		add	r3, r3, r2
 1186 02fe 0A46     		mov	r2, r1
 1187 0300 1A74     		strb	r2, [r3, #16]
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1188              		.loc 1 365 0 discriminator 3
 1189 0302 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1190 0304 0133     		adds	r3, r3, #1
 1191 0306 FB73     		strb	r3, [r7, #15]
 1192              	.L74:
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1193              		.loc 1 365 0 is_stmt 0 discriminator 1
 1194 0308 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1195 030a 072B     		cmp	r3, #7
 1196 030c ECD9     		bls	.L75
 367:.\Protocolo.c **** 				}			
 368:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1197              		.loc 1 368 0 is_stmt 1
 1198 030e 0023     		movs	r3, #0
 1199 0310 FB73     		strb	r3, [r7, #15]
 1200 0312 0FE0     		b	.L76
 1201              	.L77:
 369:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1202              		.loc 1 369 0 discriminator 3
 1203 0314 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1204 0316 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1205 0318 1C32     		adds	r2, r2, #28
 1206 031a 0C49     		ldr	r1, .L80
 1207 031c 8A5C     		ldrb	r2, [r1, r2]
 1208 031e D2B2     		uxtb	r2, r2
 1209 0320 02F00F02 		and	r2, r2, #15
 1210 0324 D1B2     		uxtb	r1, r2
 1211 0326 0A4A     		ldr	r2, .L80+4
 1212 0328 1344     		add	r3, r3, r2
 1213 032a 0A46     		mov	r2, r1
 1214 032c DA71     		strb	r2, [r3, #7]
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1215              		.loc 1 368 0 discriminator 3
 1216 032e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1217 0330 0133     		adds	r3, r3, #1
 1218 0332 FB73     		strb	r3, [r7, #15]
 1219              	.L76:
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1220              		.loc 1 368 0 is_stmt 0 discriminator 1
 1221 0334 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1222 0336 072B     		cmp	r3, #7
 1223 0338 ECD9     		bls	.L77
 1224              	.L71:
 370:.\Protocolo.c **** 				}			
 371:.\Protocolo.c **** 			}
 372:.\Protocolo.c **** 			return 1;
 1225              		.loc 1 372 0 is_stmt 1
 1226 033a 0123     		movs	r3, #1
 1227 033c 02E0     		b	.L61
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 30


 1228              	.L63:
 373:.\Protocolo.c **** 		}
 374:.\Protocolo.c **** 		else{
 375:.\Protocolo.c **** 			return 0;
 1229              		.loc 1 375 0
 1230 033e 0023     		movs	r3, #0
 1231 0340 00E0     		b	.L61
 1232              	.L62:
 376:.\Protocolo.c **** 		}
 377:.\Protocolo.c **** 	}
 378:.\Protocolo.c **** 	return 0;
 1233              		.loc 1 378 0
 1234 0342 0023     		movs	r3, #0
 1235              	.L61:
 379:.\Protocolo.c **** }
 1236              		.loc 1 379 0
 1237 0344 1846     		mov	r0, r3
 1238 0346 1037     		adds	r7, r7, #16
 1239              		.cfi_def_cfa_offset 8
 1240 0348 BD46     		mov	sp, r7
 1241              		.cfi_def_cfa_register 13
 1242              		@ sp needed
 1243 034a 80BD     		pop	{r7, pc}
 1244              	.L81:
 1245              		.align	2
 1246              	.L80:
 1247 034c 00000000 		.word	Surtidor_rxBuffer
 1248 0350 00000000 		.word	rventa2
 1249              		.cfi_endproc
 1250              	.LFE69:
 1251              		.size	venta, .-venta
 1252              		.section	.text.programar,"ax",%progbits
 1253              		.align	2
 1254              		.global	programar
 1255              		.thumb
 1256              		.thumb_func
 1257              		.type	programar, %function
 1258              	programar:
 1259              	.LFB70:
 380:.\Protocolo.c **** 
 381:.\Protocolo.c **** /*
 382:.\Protocolo.c **** ***************************************************************************************************
 383:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 384:.\Protocolo.c **** *
 385:.\Protocolo.c **** * Description : 
 386:.\Protocolo.c **** *               
 387:.\Protocolo.c **** *
 388:.\Protocolo.c **** * Argument(s) : none
 389:.\Protocolo.c **** *
 390:.\Protocolo.c **** * Return(s)   : none
 391:.\Protocolo.c **** *
 392:.\Protocolo.c **** * Caller(s)   : 
 393:.\Protocolo.c **** *
 394:.\Protocolo.c **** * Note(s)     : none.
 395:.\Protocolo.c **** ***************************************************************************************************
 396:.\Protocolo.c **** */
 397:.\Protocolo.c **** uint8 programar(uint8 dir, uint8 grado, uint8 *valor, uint8 preset){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 31


 1260              		.loc 1 397 0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 32
 1263              		@ frame_needed = 1, uses_anonymous_args = 0
 1264 0000 80B5     		push	{r7, lr}
 1265              		.cfi_def_cfa_offset 8
 1266              		.cfi_offset 7, -8
 1267              		.cfi_offset 14, -4
 1268 0002 88B0     		sub	sp, sp, #32
 1269              		.cfi_def_cfa_offset 40
 1270 0004 00AF     		add	r7, sp, #0
 1271              		.cfi_def_cfa_register 7
 1272 0006 3A60     		str	r2, [r7]
 1273 0008 1A46     		mov	r2, r3
 1274 000a 0346     		mov	r3, r0
 1275 000c FB71     		strb	r3, [r7, #7]
 1276 000e 0B46     		mov	r3, r1
 1277 0010 BB71     		strb	r3, [r7, #6]
 1278 0012 1346     		mov	r3, r2
 1279 0014 7B71     		strb	r3, [r7, #5]
 398:.\Protocolo.c **** 	uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,temp,i,decimal;
 1280              		.loc 1 398 0
 1281 0016 07F10803 		add	r3, r7, #8
 1282 001a 0022     		movs	r2, #0
 1283 001c 1A60     		str	r2, [r3]
 1284 001e 0433     		adds	r3, r3, #4
 1285 0020 0022     		movs	r2, #0
 1286 0022 1A60     		str	r2, [r3]
 1287 0024 0433     		adds	r3, r3, #4
 1288 0026 0022     		movs	r2, #0
 1289 0028 1A60     		str	r2, [r3]
 1290 002a 0433     		adds	r3, r3, #4
 1291 002c 0022     		movs	r2, #0
 1292 002e 1A60     		str	r2, [r3]
 1293 0030 0433     		adds	r3, r3, #4
 1294 0032 0022     		movs	r2, #0
 1295 0034 1A80     		strh	r2, [r3]	@ movhi
 1296 0036 0233     		adds	r3, r3, #2
 399:.\Protocolo.c **** 	temp=4;
 1297              		.loc 1 399 0
 1298 0038 0423     		movs	r3, #4
 1299 003a BB77     		strb	r3, [r7, #30]
 400:.\Protocolo.c **** 	if(preset==3){
 1300              		.loc 1 400 0
 1301 003c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1302 003e 032B     		cmp	r3, #3
 1303 0040 01D1     		bne	.L83
 401:.\Protocolo.c **** 		preset=2;
 1304              		.loc 1 401 0
 1305 0042 0223     		movs	r3, #2
 1306 0044 7B71     		strb	r3, [r7, #5]
 1307              	.L83:
 402:.\Protocolo.c **** 	}
 403:.\Protocolo.c **** 	if(((version[1]==5)||(version[1]==6))&&(preset==1)){
 1308              		.loc 1 403 0
 1309 0046 B34B     		ldr	r3, .L126
 1310 0048 5B78     		ldrb	r3, [r3, #1]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 32


 1311 004a DBB2     		uxtb	r3, r3
 1312 004c 052B     		cmp	r3, #5
 1313 004e 04D0     		beq	.L84
 1314              		.loc 1 403 0 is_stmt 0 discriminator 2
 1315 0050 B04B     		ldr	r3, .L126
 1316 0052 5B78     		ldrb	r3, [r3, #1]
 1317 0054 DBB2     		uxtb	r3, r3
 1318 0056 062B     		cmp	r3, #6
 1319 0058 04D1     		bne	.L85
 1320              	.L84:
 1321              		.loc 1 403 0 discriminator 3
 1322 005a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1323 005c 012B     		cmp	r3, #1
 1324 005e 01D1     		bne	.L85
 404:.\Protocolo.c **** 		temp=3;
 1325              		.loc 1 404 0 is_stmt 1
 1326 0060 0323     		movs	r3, #3
 1327 0062 BB77     		strb	r3, [r7, #30]
 1328              	.L85:
 405:.\Protocolo.c **** 	}
 406:.\Protocolo.c **** 	if((version[1]==5)&&(preset==2)){
 1329              		.loc 1 406 0
 1330 0064 AB4B     		ldr	r3, .L126
 1331 0066 5B78     		ldrb	r3, [r3, #1]
 1332 0068 DBB2     		uxtb	r3, r3
 1333 006a 052B     		cmp	r3, #5
 1334 006c 04D1     		bne	.L86
 1335              		.loc 1 406 0 is_stmt 0 discriminator 1
 1336 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1337 0070 022B     		cmp	r3, #2
 1338 0072 01D1     		bne	.L86
 407:.\Protocolo.c **** 		temp=5;
 1339              		.loc 1 407 0 is_stmt 1
 1340 0074 0523     		movs	r3, #5
 1341 0076 BB77     		strb	r3, [r7, #30]
 1342              	.L86:
 408:.\Protocolo.c **** 	}
 409:.\Protocolo.c **** 	if((version[1]==7)&&(preset==1)){
 1343              		.loc 1 409 0
 1344 0078 A64B     		ldr	r3, .L126
 1345 007a 5B78     		ldrb	r3, [r3, #1]
 1346 007c DBB2     		uxtb	r3, r3
 1347 007e 072B     		cmp	r3, #7
 1348 0080 04D1     		bne	.L87
 1349              		.loc 1 409 0 is_stmt 0 discriminator 1
 1350 0082 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1351 0084 012B     		cmp	r3, #1
 1352 0086 01D1     		bne	.L87
 410:.\Protocolo.c **** 		temp=0;
 1353              		.loc 1 410 0 is_stmt 1
 1354 0088 0023     		movs	r3, #0
 1355 008a BB77     		strb	r3, [r7, #30]
 1356              	.L87:
 411:.\Protocolo.c **** 	}
 412:.\Protocolo.c **** 	if((version[1]==7)&&(preset==2)){
 1357              		.loc 1 412 0
 1358 008c A14B     		ldr	r3, .L126
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 33


 1359 008e 5B78     		ldrb	r3, [r3, #1]
 1360 0090 DBB2     		uxtb	r3, r3
 1361 0092 072B     		cmp	r3, #7
 1362 0094 04D1     		bne	.L88
 1363              		.loc 1 412 0 is_stmt 0 discriminator 1
 1364 0096 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1365 0098 022B     		cmp	r3, #2
 1366 009a 01D1     		bne	.L88
 413:.\Protocolo.c **** 		temp=2;
 1367              		.loc 1 413 0 is_stmt 1
 1368 009c 0223     		movs	r3, #2
 1369 009e BB77     		strb	r3, [r7, #30]
 1370              	.L88:
 414:.\Protocolo.c **** 	}	
 415:.\Protocolo.c **** 	decimal=0;
 1371              		.loc 1 415 0
 1372 00a0 0023     		movs	r3, #0
 1373 00a2 3B77     		strb	r3, [r7, #28]
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1374              		.loc 1 416 0
 1375 00a4 0123     		movs	r3, #1
 1376 00a6 7B77     		strb	r3, [r7, #29]
 1377 00a8 0AE0     		b	.L89
 1378              	.L91:
 417:.\Protocolo.c **** 		if(valor[i]==','){
 1379              		.loc 1 417 0
 1380 00aa 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1381 00ac 3A68     		ldr	r2, [r7]
 1382 00ae 1344     		add	r3, r3, r2
 1383 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1384 00b2 2C2B     		cmp	r3, #44
 1385 00b4 01D1     		bne	.L90
 418:.\Protocolo.c **** 			decimal=i;	
 1386              		.loc 1 418 0
 1387 00b6 7B7F     		ldrb	r3, [r7, #29]
 1388 00b8 3B77     		strb	r3, [r7, #28]
 1389              	.L90:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1390              		.loc 1 416 0 discriminator 2
 1391 00ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1392 00bc 0133     		adds	r3, r3, #1
 1393 00be 7B77     		strb	r3, [r7, #29]
 1394              	.L89:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1395              		.loc 1 416 0 is_stmt 0 discriminator 1
 1396 00c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1397 00c2 072B     		cmp	r3, #7
 1398 00c4 F1D9     		bls	.L91
 419:.\Protocolo.c **** 		}
 420:.\Protocolo.c **** 	}
 421:.\Protocolo.c **** 	if(decimal>4){
 1399              		.loc 1 421 0 is_stmt 1
 1400 00c6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1401 00c8 042B     		cmp	r3, #4
 1402 00ca 01D9     		bls	.L92
 422:.\Protocolo.c **** 		return 0;
 1403              		.loc 1 422 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 34


 1404 00cc 0023     		movs	r3, #0
 1405 00ce CFE3     		b	.L125
 1406              	.L92:
 423:.\Protocolo.c **** 	}
 424:.\Protocolo.c **** 	if(version[1]!=7){		
 1407              		.loc 1 424 0
 1408 00d0 904B     		ldr	r3, .L126
 1409 00d2 5B78     		ldrb	r3, [r3, #1]
 1410 00d4 DBB2     		uxtb	r3, r3
 1411 00d6 072B     		cmp	r3, #7
 1412 00d8 00F00582 		beq	.L94
 425:.\Protocolo.c **** 		buffer[0]=0xFF;
 1413              		.loc 1 425 0
 1414 00dc FF23     		movs	r3, #255
 1415 00de 3B72     		strb	r3, [r7, #8]
 426:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1416              		.loc 1 426 0
 1417 00e0 BB7F     		ldrb	r3, [r7, #30]
 1418 00e2 63F01F03 		orn	r3, r3, #31
 1419 00e6 DBB2     		uxtb	r3, r3
 1420 00e8 7B72     		strb	r3, [r7, #9]
 427:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1421              		.loc 1 427 0
 1422 00ea 7B79     		ldrb	r3, [r7, #5]
 1423 00ec 63F00F03 		orn	r3, r3, #15
 1424 00f0 DBB2     		uxtb	r3, r3
 1425 00f2 BB72     		strb	r3, [r7, #10]
 428:.\Protocolo.c **** 		buffer[3]=0xF4;
 1426              		.loc 1 428 0
 1427 00f4 F423     		movs	r3, #244
 1428 00f6 FB72     		strb	r3, [r7, #11]
 429:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1429              		.loc 1 429 0
 1430 00f8 F823     		movs	r3, #248
 1431 00fa 3B73     		strb	r3, [r7, #12]
 430:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1432              		.loc 1 430 0
 1433 00fc 3B68     		ldr	r3, [r7]
 1434 00fe 0133     		adds	r3, r3, #1
 1435 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1436 0102 63F01F03 		orn	r3, r3, #31
 1437 0106 DBB2     		uxtb	r3, r3
 1438 0108 7B73     		strb	r3, [r7, #13]
 431:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1439              		.loc 1 431 0
 1440 010a 3B68     		ldr	r3, [r7]
 1441 010c 0233     		adds	r3, r3, #2
 1442 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1443 0110 63F01F03 		orn	r3, r3, #31
 1444 0114 DBB2     		uxtb	r3, r3
 1445 0116 BB73     		strb	r3, [r7, #14]
 432:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1446              		.loc 1 432 0
 1447 0118 3B68     		ldr	r3, [r7]
 1448 011a 0333     		adds	r3, r3, #3
 1449 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1450 011e 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 35


 1451 0122 DBB2     		uxtb	r3, r3
 1452 0124 FB73     		strb	r3, [r7, #15]
 433:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1453              		.loc 1 433 0
 1454 0126 3B68     		ldr	r3, [r7]
 1455 0128 0433     		adds	r3, r3, #4
 1456 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1457 012c 63F01F03 		orn	r3, r3, #31
 1458 0130 DBB2     		uxtb	r3, r3
 1459 0132 3B74     		strb	r3, [r7, #16]
 434:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1460              		.loc 1 434 0
 1461 0134 3B68     		ldr	r3, [r7]
 1462 0136 0533     		adds	r3, r3, #5
 1463 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1464 013a 63F01F03 		orn	r3, r3, #31
 1465 013e DBB2     		uxtb	r3, r3
 1466 0140 7B74     		strb	r3, [r7, #17]
 435:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);
 1467              		.loc 1 435 0
 1468 0142 3B68     		ldr	r3, [r7]
 1469 0144 0633     		adds	r3, r3, #6
 1470 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1471 0148 63F01F03 		orn	r3, r3, #31
 1472 014c DBB2     		uxtb	r3, r3
 1473 014e BB74     		strb	r3, [r7, #18]
 436:.\Protocolo.c **** 		if(version[2]==2){
 1474              		.loc 1 436 0
 1475 0150 704B     		ldr	r3, .L126
 1476 0152 9B78     		ldrb	r3, [r3, #2]
 1477 0154 DBB2     		uxtb	r3, r3
 1478 0156 022B     		cmp	r3, #2
 1479 0158 40F0A580 		bne	.L95
 437:.\Protocolo.c **** 			if(decimal==4){
 1480              		.loc 1 437 0
 1481 015c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1482 015e 042B     		cmp	r3, #4
 1483 0160 29D1     		bne	.L96
 438:.\Protocolo.c **** 				buffer[5]=(valor[2]|0xE0);
 1484              		.loc 1 438 0
 1485 0162 3B68     		ldr	r3, [r7]
 1486 0164 0233     		adds	r3, r3, #2
 1487 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1488 0168 63F01F03 		orn	r3, r3, #31
 1489 016c DBB2     		uxtb	r3, r3
 1490 016e 7B73     		strb	r3, [r7, #13]
 439:.\Protocolo.c **** 				buffer[6]=(valor[3]|0xE0);
 1491              		.loc 1 439 0
 1492 0170 3B68     		ldr	r3, [r7]
 1493 0172 0333     		adds	r3, r3, #3
 1494 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1495 0176 63F01F03 		orn	r3, r3, #31
 1496 017a DBB2     		uxtb	r3, r3
 1497 017c BB73     		strb	r3, [r7, #14]
 440:.\Protocolo.c **** 				buffer[7]=(valor[5]|0xE0);
 1498              		.loc 1 440 0
 1499 017e 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 36


 1500 0180 0533     		adds	r3, r3, #5
 1501 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1502 0184 63F01F03 		orn	r3, r3, #31
 1503 0188 DBB2     		uxtb	r3, r3
 1504 018a FB73     		strb	r3, [r7, #15]
 441:.\Protocolo.c **** 				buffer[8]=(valor[6]|0xE0);
 1505              		.loc 1 441 0
 1506 018c 3B68     		ldr	r3, [r7]
 1507 018e 0633     		adds	r3, r3, #6
 1508 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1509 0192 63F01F03 		orn	r3, r3, #31
 1510 0196 DBB2     		uxtb	r3, r3
 1511 0198 3B74     		strb	r3, [r7, #16]
 442:.\Protocolo.c **** 				buffer[9]=(valor[7]|0xE0);
 1512              		.loc 1 442 0
 1513 019a 3B68     		ldr	r3, [r7]
 1514 019c 0733     		adds	r3, r3, #7
 1515 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1516 01a0 63F01F03 		orn	r3, r3, #31
 1517 01a4 DBB2     		uxtb	r3, r3
 1518 01a6 7B74     		strb	r3, [r7, #17]
 443:.\Protocolo.c **** 				buffer[10]=(valor[8]|0xE0);
 1519              		.loc 1 443 0
 1520 01a8 3B68     		ldr	r3, [r7]
 1521 01aa 0833     		adds	r3, r3, #8
 1522 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1523 01ae 63F01F03 		orn	r3, r3, #31
 1524 01b2 DBB2     		uxtb	r3, r3
 1525 01b4 BB74     		strb	r3, [r7, #18]
 1526              	.L96:
 444:.\Protocolo.c **** 			}
 445:.\Protocolo.c **** 			if(decimal==3){
 1527              		.loc 1 445 0
 1528 01b6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1529 01b8 032B     		cmp	r3, #3
 1530 01ba 29D1     		bne	.L97
 446:.\Protocolo.c **** 				buffer[5]=(valor[1]|0xE0);
 1531              		.loc 1 446 0
 1532 01bc 3B68     		ldr	r3, [r7]
 1533 01be 0133     		adds	r3, r3, #1
 1534 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1535 01c2 63F01F03 		orn	r3, r3, #31
 1536 01c6 DBB2     		uxtb	r3, r3
 1537 01c8 7B73     		strb	r3, [r7, #13]
 447:.\Protocolo.c **** 				buffer[6]=(valor[2]|0xE0);
 1538              		.loc 1 447 0
 1539 01ca 3B68     		ldr	r3, [r7]
 1540 01cc 0233     		adds	r3, r3, #2
 1541 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1542 01d0 63F01F03 		orn	r3, r3, #31
 1543 01d4 DBB2     		uxtb	r3, r3
 1544 01d6 BB73     		strb	r3, [r7, #14]
 448:.\Protocolo.c **** 				buffer[7]=(valor[4]|0xE0);
 1545              		.loc 1 448 0
 1546 01d8 3B68     		ldr	r3, [r7]
 1547 01da 0433     		adds	r3, r3, #4
 1548 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 37


 1549 01de 63F01F03 		orn	r3, r3, #31
 1550 01e2 DBB2     		uxtb	r3, r3
 1551 01e4 FB73     		strb	r3, [r7, #15]
 449:.\Protocolo.c **** 				buffer[8]=(valor[5]|0xE0);
 1552              		.loc 1 449 0
 1553 01e6 3B68     		ldr	r3, [r7]
 1554 01e8 0533     		adds	r3, r3, #5
 1555 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1556 01ec 63F01F03 		orn	r3, r3, #31
 1557 01f0 DBB2     		uxtb	r3, r3
 1558 01f2 3B74     		strb	r3, [r7, #16]
 450:.\Protocolo.c **** 				buffer[9]=(valor[6]|0xE0);
 1559              		.loc 1 450 0
 1560 01f4 3B68     		ldr	r3, [r7]
 1561 01f6 0633     		adds	r3, r3, #6
 1562 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1563 01fa 63F01F03 		orn	r3, r3, #31
 1564 01fe DBB2     		uxtb	r3, r3
 1565 0200 7B74     		strb	r3, [r7, #17]
 451:.\Protocolo.c **** 				buffer[10]=(valor[7]|0xE0);
 1566              		.loc 1 451 0
 1567 0202 3B68     		ldr	r3, [r7]
 1568 0204 0733     		adds	r3, r3, #7
 1569 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1570 0208 63F01F03 		orn	r3, r3, #31
 1571 020c DBB2     		uxtb	r3, r3
 1572 020e BB74     		strb	r3, [r7, #18]
 1573              	.L97:
 452:.\Protocolo.c **** 			}
 453:.\Protocolo.c **** 			if(decimal==2){
 1574              		.loc 1 453 0
 1575 0210 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1576 0212 022B     		cmp	r3, #2
 1577 0214 24D1     		bne	.L98
 454:.\Protocolo.c **** 				buffer[5]=0xE0;
 1578              		.loc 1 454 0
 1579 0216 E023     		movs	r3, #224
 1580 0218 7B73     		strb	r3, [r7, #13]
 455:.\Protocolo.c **** 				buffer[6]=(valor[1]|0xE0);
 1581              		.loc 1 455 0
 1582 021a 3B68     		ldr	r3, [r7]
 1583 021c 0133     		adds	r3, r3, #1
 1584 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1585 0220 63F01F03 		orn	r3, r3, #31
 1586 0224 DBB2     		uxtb	r3, r3
 1587 0226 BB73     		strb	r3, [r7, #14]
 456:.\Protocolo.c **** 				buffer[7]=(valor[3]|0xE0);
 1588              		.loc 1 456 0
 1589 0228 3B68     		ldr	r3, [r7]
 1590 022a 0333     		adds	r3, r3, #3
 1591 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1592 022e 63F01F03 		orn	r3, r3, #31
 1593 0232 DBB2     		uxtb	r3, r3
 1594 0234 FB73     		strb	r3, [r7, #15]
 457:.\Protocolo.c **** 				buffer[8]=(valor[4]|0xE0);
 1595              		.loc 1 457 0
 1596 0236 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 38


 1597 0238 0433     		adds	r3, r3, #4
 1598 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1599 023c 63F01F03 		orn	r3, r3, #31
 1600 0240 DBB2     		uxtb	r3, r3
 1601 0242 3B74     		strb	r3, [r7, #16]
 458:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);	
 1602              		.loc 1 458 0
 1603 0244 3B68     		ldr	r3, [r7]
 1604 0246 0533     		adds	r3, r3, #5
 1605 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1606 024a 63F01F03 		orn	r3, r3, #31
 1607 024e DBB2     		uxtb	r3, r3
 1608 0250 7B74     		strb	r3, [r7, #17]
 459:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1609              		.loc 1 459 0
 1610 0252 3B68     		ldr	r3, [r7]
 1611 0254 0633     		adds	r3, r3, #6
 1612 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1613 0258 63F01F03 		orn	r3, r3, #31
 1614 025c DBB2     		uxtb	r3, r3
 1615 025e BB74     		strb	r3, [r7, #18]
 1616              	.L98:
 460:.\Protocolo.c **** 			}
 461:.\Protocolo.c **** 			if(decimal==0){
 1617              		.loc 1 461 0
 1618 0260 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1619 0262 002B     		cmp	r3, #0
 1620 0264 1FD1     		bne	.L95
 462:.\Protocolo.c **** 				buffer[5]=0xE0;
 1621              		.loc 1 462 0
 1622 0266 E023     		movs	r3, #224
 1623 0268 7B73     		strb	r3, [r7, #13]
 463:.\Protocolo.c **** 				buffer[6]=0xE0;
 1624              		.loc 1 463 0
 1625 026a E023     		movs	r3, #224
 1626 026c BB73     		strb	r3, [r7, #14]
 464:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1627              		.loc 1 464 0
 1628 026e 3B68     		ldr	r3, [r7]
 1629 0270 0133     		adds	r3, r3, #1
 1630 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1631 0274 63F01F03 		orn	r3, r3, #31
 1632 0278 DBB2     		uxtb	r3, r3
 1633 027a FB73     		strb	r3, [r7, #15]
 465:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1634              		.loc 1 465 0
 1635 027c 3B68     		ldr	r3, [r7]
 1636 027e 0233     		adds	r3, r3, #2
 1637 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 0282 63F01F03 		orn	r3, r3, #31
 1639 0286 DBB2     		uxtb	r3, r3
 1640 0288 3B74     		strb	r3, [r7, #16]
 466:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1641              		.loc 1 466 0
 1642 028a 3B68     		ldr	r3, [r7]
 1643 028c 0333     		adds	r3, r3, #3
 1644 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 39


 1645 0290 63F01F03 		orn	r3, r3, #31
 1646 0294 DBB2     		uxtb	r3, r3
 1647 0296 7B74     		strb	r3, [r7, #17]
 467:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1648              		.loc 1 467 0
 1649 0298 3B68     		ldr	r3, [r7]
 1650 029a 0433     		adds	r3, r3, #4
 1651 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1652 029e 63F01F03 		orn	r3, r3, #31
 1653 02a2 DBB2     		uxtb	r3, r3
 1654 02a4 BB74     		strb	r3, [r7, #18]
 1655              	.L95:
 468:.\Protocolo.c **** 			}			
 469:.\Protocolo.c **** 		}
 470:.\Protocolo.c **** 		buffer[11]=0xFB;
 1656              		.loc 1 470 0
 1657 02a6 FB23     		movs	r3, #251
 1658 02a8 FB74     		strb	r3, [r7, #19]
 471:.\Protocolo.c **** 		buffer[12]=0;
 1659              		.loc 1 471 0
 1660 02aa 0023     		movs	r3, #0
 1661 02ac 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1662              		.loc 1 472 0
 1663 02ae 0023     		movs	r3, #0
 1664 02b0 7B77     		strb	r3, [r7, #29]
 1665 02b2 0FE0     		b	.L99
 1666              	.L100:
 473:.\Protocolo.c **** 			buffer[12]+=(buffer[i]&0x0F);	
 1667              		.loc 1 473 0 discriminator 3
 1668 02b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1669 02b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1670 02b8 07F12001 		add	r1, r7, #32
 1671 02bc 0B44     		add	r3, r3, r1
 1672 02be 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1673 02c2 03F00F03 		and	r3, r3, #15
 1674 02c6 DBB2     		uxtb	r3, r3
 1675 02c8 1344     		add	r3, r3, r2
 1676 02ca DBB2     		uxtb	r3, r3
 1677 02cc 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1678              		.loc 1 472 0 discriminator 3
 1679 02ce 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1680 02d0 0133     		adds	r3, r3, #1
 1681 02d2 7B77     		strb	r3, [r7, #29]
 1682              	.L99:
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1683              		.loc 1 472 0 is_stmt 0 discriminator 1
 1684 02d4 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1685 02d6 0B2B     		cmp	r3, #11
 1686 02d8 ECD9     		bls	.L100
 474:.\Protocolo.c **** 		}
 475:.\Protocolo.c **** 		buffer[12]=(((~buffer[12])+1)&0x0F)|0xE0;
 1687              		.loc 1 475 0 is_stmt 1
 1688 02da 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1689 02dc 5B42     		negs	r3, r3
 1690 02de DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 40


 1691 02e0 DBB2     		uxtb	r3, r3
 1692 02e2 03F00F03 		and	r3, r3, #15
 1693 02e6 DBB2     		uxtb	r3, r3
 1694 02e8 63F01F03 		orn	r3, r3, #31
 1695 02ec DBB2     		uxtb	r3, r3
 1696 02ee DBB2     		uxtb	r3, r3
 1697 02f0 3B75     		strb	r3, [r7, #20]
 476:.\Protocolo.c **** 		buffer[13]=0xF0;
 1698              		.loc 1 476 0
 1699 02f2 F023     		movs	r3, #240
 1700 02f4 7B75     		strb	r3, [r7, #21]
 477:.\Protocolo.c **** 		size=13;
 1701              		.loc 1 477 0
 1702 02f6 0D23     		movs	r3, #13
 1703 02f8 FB77     		strb	r3, [r7, #31]
 478:.\Protocolo.c **** 		if(version[1]==5){
 1704              		.loc 1 478 0
 1705 02fa 064B     		ldr	r3, .L126
 1706 02fc 5B78     		ldrb	r3, [r3, #1]
 1707 02fe DBB2     		uxtb	r3, r3
 1708 0300 052B     		cmp	r3, #5
 1709 0302 2CD1     		bne	.L101
 479:.\Protocolo.c **** 			buffer[10]=0xFB;
 1710              		.loc 1 479 0
 1711 0304 FB23     		movs	r3, #251
 1712 0306 BB74     		strb	r3, [r7, #18]
 480:.\Protocolo.c **** 			buffer[11]=0;
 1713              		.loc 1 480 0
 1714 0308 0023     		movs	r3, #0
 1715 030a FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1716              		.loc 1 481 0
 1717 030c 0023     		movs	r3, #0
 1718 030e 7B77     		strb	r3, [r7, #29]
 1719 0310 12E0     		b	.L102
 1720              	.L127:
 1721 0312 00BF     		.align	2
 1722              	.L126:
 1723 0314 00000000 		.word	version
 1724              	.L103:
 482:.\Protocolo.c **** 				buffer[11]+=(buffer[i]&0x0F);	
 1725              		.loc 1 482 0 discriminator 3
 1726 0318 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 1727 031a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1728 031c 07F12001 		add	r1, r7, #32
 1729 0320 0B44     		add	r3, r3, r1
 1730 0322 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1731 0326 03F00F03 		and	r3, r3, #15
 1732 032a DBB2     		uxtb	r3, r3
 1733 032c 1344     		add	r3, r3, r2
 1734 032e DBB2     		uxtb	r3, r3
 1735 0330 FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1736              		.loc 1 481 0 discriminator 3
 1737 0332 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1738 0334 0133     		adds	r3, r3, #1
 1739 0336 7B77     		strb	r3, [r7, #29]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 41


 1740              	.L102:
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1741              		.loc 1 481 0 is_stmt 0 discriminator 1
 1742 0338 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1743 033a 0A2B     		cmp	r3, #10
 1744 033c ECD9     		bls	.L103
 483:.\Protocolo.c **** 			}
 484:.\Protocolo.c **** 			buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 1745              		.loc 1 484 0 is_stmt 1
 1746 033e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1747 0340 5B42     		negs	r3, r3
 1748 0342 DBB2     		uxtb	r3, r3
 1749 0344 DBB2     		uxtb	r3, r3
 1750 0346 03F00F03 		and	r3, r3, #15
 1751 034a DBB2     		uxtb	r3, r3
 1752 034c 63F01F03 		orn	r3, r3, #31
 1753 0350 DBB2     		uxtb	r3, r3
 1754 0352 DBB2     		uxtb	r3, r3
 1755 0354 FB74     		strb	r3, [r7, #19]
 485:.\Protocolo.c **** 			buffer[12]=0xF0;
 1756              		.loc 1 485 0
 1757 0356 F023     		movs	r3, #240
 1758 0358 3B75     		strb	r3, [r7, #20]
 486:.\Protocolo.c **** 			size=12;		
 1759              		.loc 1 486 0
 1760 035a 0C23     		movs	r3, #12
 1761 035c FB77     		strb	r3, [r7, #31]
 1762              	.L101:
 487:.\Protocolo.c **** 		}
 488:.\Protocolo.c **** 		if(preset==1){
 1763              		.loc 1 488 0
 1764 035e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1765 0360 012B     		cmp	r3, #1
 1766 0362 40F0C080 		bne	.L94
 489:.\Protocolo.c **** 			buffer[4]=0xF6;
 1767              		.loc 1 489 0
 1768 0366 F623     		movs	r3, #246
 1769 0368 3B73     		strb	r3, [r7, #12]
 490:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 1770              		.loc 1 490 0
 1771 036a BB79     		ldrb	r3, [r7, #6]
 1772 036c 013B     		subs	r3, r3, #1
 1773 036e DBB2     		uxtb	r3, r3
 1774 0370 DBB2     		uxtb	r3, r3
 1775 0372 63F01F03 		orn	r3, r3, #31
 1776 0376 DBB2     		uxtb	r3, r3
 1777 0378 DBB2     		uxtb	r3, r3
 1778 037a 7B73     		strb	r3, [r7, #13]
 491:.\Protocolo.c **** 			buffer[6]=0xF8;
 1779              		.loc 1 491 0
 1780 037c F823     		movs	r3, #248
 1781 037e BB73     		strb	r3, [r7, #14]
 492:.\Protocolo.c **** 			if(decimal==4){
 1782              		.loc 1 492 0
 1783 0380 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1784 0382 042B     		cmp	r3, #4
 1785 0384 22D1     		bne	.L104
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 42


 493:.\Protocolo.c **** 				buffer[7]=(valor[2]|0xE0);
 1786              		.loc 1 493 0
 1787 0386 3B68     		ldr	r3, [r7]
 1788 0388 0233     		adds	r3, r3, #2
 1789 038a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1790 038c 63F01F03 		orn	r3, r3, #31
 1791 0390 DBB2     		uxtb	r3, r3
 1792 0392 FB73     		strb	r3, [r7, #15]
 494:.\Protocolo.c **** 				buffer[8]=(valor[3]|0xE0);
 1793              		.loc 1 494 0
 1794 0394 3B68     		ldr	r3, [r7]
 1795 0396 0333     		adds	r3, r3, #3
 1796 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1797 039a 63F01F03 		orn	r3, r3, #31
 1798 039e DBB2     		uxtb	r3, r3
 1799 03a0 3B74     		strb	r3, [r7, #16]
 495:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);
 1800              		.loc 1 495 0
 1801 03a2 3B68     		ldr	r3, [r7]
 1802 03a4 0533     		adds	r3, r3, #5
 1803 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1804 03a8 63F01F03 		orn	r3, r3, #31
 1805 03ac DBB2     		uxtb	r3, r3
 1806 03ae 7B74     		strb	r3, [r7, #17]
 496:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1807              		.loc 1 496 0
 1808 03b0 3B68     		ldr	r3, [r7]
 1809 03b2 0633     		adds	r3, r3, #6
 1810 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1811 03b6 63F01F03 		orn	r3, r3, #31
 1812 03ba DBB2     		uxtb	r3, r3
 1813 03bc BB74     		strb	r3, [r7, #18]
 497:.\Protocolo.c **** 				buffer[11]=(valor[7]|0xE0);
 1814              		.loc 1 497 0
 1815 03be 3B68     		ldr	r3, [r7]
 1816 03c0 0733     		adds	r3, r3, #7
 1817 03c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1818 03c4 63F01F03 		orn	r3, r3, #31
 1819 03c8 DBB2     		uxtb	r3, r3
 1820 03ca FB74     		strb	r3, [r7, #19]
 1821              	.L104:
 498:.\Protocolo.c **** 			}
 499:.\Protocolo.c **** 			if(decimal==3){
 1822              		.loc 1 499 0
 1823 03cc 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1824 03ce 032B     		cmp	r3, #3
 1825 03d0 22D1     		bne	.L105
 500:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1826              		.loc 1 500 0
 1827 03d2 3B68     		ldr	r3, [r7]
 1828 03d4 0133     		adds	r3, r3, #1
 1829 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1830 03d8 63F01F03 		orn	r3, r3, #31
 1831 03dc DBB2     		uxtb	r3, r3
 1832 03de FB73     		strb	r3, [r7, #15]
 501:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1833              		.loc 1 501 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 43


 1834 03e0 3B68     		ldr	r3, [r7]
 1835 03e2 0233     		adds	r3, r3, #2
 1836 03e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1837 03e6 63F01F03 		orn	r3, r3, #31
 1838 03ea DBB2     		uxtb	r3, r3
 1839 03ec 3B74     		strb	r3, [r7, #16]
 502:.\Protocolo.c **** 				buffer[9]=(valor[4]|0xE0);
 1840              		.loc 1 502 0
 1841 03ee 3B68     		ldr	r3, [r7]
 1842 03f0 0433     		adds	r3, r3, #4
 1843 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1844 03f4 63F01F03 		orn	r3, r3, #31
 1845 03f8 DBB2     		uxtb	r3, r3
 1846 03fa 7B74     		strb	r3, [r7, #17]
 503:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 1847              		.loc 1 503 0
 1848 03fc 3B68     		ldr	r3, [r7]
 1849 03fe 0533     		adds	r3, r3, #5
 1850 0400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1851 0402 63F01F03 		orn	r3, r3, #31
 1852 0406 DBB2     		uxtb	r3, r3
 1853 0408 BB74     		strb	r3, [r7, #18]
 504:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);		
 1854              		.loc 1 504 0
 1855 040a 3B68     		ldr	r3, [r7]
 1856 040c 0633     		adds	r3, r3, #6
 1857 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1858 0410 63F01F03 		orn	r3, r3, #31
 1859 0414 DBB2     		uxtb	r3, r3
 1860 0416 FB74     		strb	r3, [r7, #19]
 1861              	.L105:
 505:.\Protocolo.c **** 			}
 506:.\Protocolo.c **** 			if(decimal==2){
 1862              		.loc 1 506 0
 1863 0418 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1864 041a 022B     		cmp	r3, #2
 1865 041c 1DD1     		bne	.L106
 507:.\Protocolo.c **** 				buffer[7]=0xE0;
 1866              		.loc 1 507 0
 1867 041e E023     		movs	r3, #224
 1868 0420 FB73     		strb	r3, [r7, #15]
 508:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 1869              		.loc 1 508 0
 1870 0422 3B68     		ldr	r3, [r7]
 1871 0424 0133     		adds	r3, r3, #1
 1872 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1873 0428 63F01F03 		orn	r3, r3, #31
 1874 042c DBB2     		uxtb	r3, r3
 1875 042e 3B74     		strb	r3, [r7, #16]
 509:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1876              		.loc 1 509 0
 1877 0430 3B68     		ldr	r3, [r7]
 1878 0432 0333     		adds	r3, r3, #3
 1879 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1880 0436 63F01F03 		orn	r3, r3, #31
 1881 043a DBB2     		uxtb	r3, r3
 1882 043c 7B74     		strb	r3, [r7, #17]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 44


 510:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1883              		.loc 1 510 0
 1884 043e 3B68     		ldr	r3, [r7]
 1885 0440 0433     		adds	r3, r3, #4
 1886 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1887 0444 63F01F03 		orn	r3, r3, #31
 1888 0448 DBB2     		uxtb	r3, r3
 1889 044a BB74     		strb	r3, [r7, #18]
 511:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);		
 1890              		.loc 1 511 0
 1891 044c 3B68     		ldr	r3, [r7]
 1892 044e 0533     		adds	r3, r3, #5
 1893 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1894 0452 63F01F03 		orn	r3, r3, #31
 1895 0456 DBB2     		uxtb	r3, r3
 1896 0458 FB74     		strb	r3, [r7, #19]
 1897              	.L106:
 512:.\Protocolo.c **** 			}
 513:.\Protocolo.c **** 			if(decimal==0){
 1898              		.loc 1 513 0
 1899 045a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1900 045c 002B     		cmp	r3, #0
 1901 045e 18D1     		bne	.L107
 514:.\Protocolo.c **** 				buffer[7]=0xE0;
 1902              		.loc 1 514 0
 1903 0460 E023     		movs	r3, #224
 1904 0462 FB73     		strb	r3, [r7, #15]
 515:.\Protocolo.c **** 				buffer[8]=0xE0;
 1905              		.loc 1 515 0
 1906 0464 E023     		movs	r3, #224
 1907 0466 3B74     		strb	r3, [r7, #16]
 516:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 1908              		.loc 1 516 0
 1909 0468 3B68     		ldr	r3, [r7]
 1910 046a 0133     		adds	r3, r3, #1
 1911 046c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1912 046e 63F01F03 		orn	r3, r3, #31
 1913 0472 DBB2     		uxtb	r3, r3
 1914 0474 7B74     		strb	r3, [r7, #17]
 517:.\Protocolo.c **** 				buffer[10]=(valor[2]|0xE0);
 1915              		.loc 1 517 0
 1916 0476 3B68     		ldr	r3, [r7]
 1917 0478 0233     		adds	r3, r3, #2
 1918 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1919 047c 63F01F03 		orn	r3, r3, #31
 1920 0480 DBB2     		uxtb	r3, r3
 1921 0482 BB74     		strb	r3, [r7, #18]
 518:.\Protocolo.c **** 				buffer[11]=(valor[3]|0xE0);		
 1922              		.loc 1 518 0
 1923 0484 3B68     		ldr	r3, [r7]
 1924 0486 0333     		adds	r3, r3, #3
 1925 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1926 048a 63F01F03 		orn	r3, r3, #31
 1927 048e DBB2     		uxtb	r3, r3
 1928 0490 FB74     		strb	r3, [r7, #19]
 1929              	.L107:
 519:.\Protocolo.c **** 			}			
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 45


 520:.\Protocolo.c **** 			buffer[12]=0xFB;
 1930              		.loc 1 520 0
 1931 0492 FB23     		movs	r3, #251
 1932 0494 3B75     		strb	r3, [r7, #20]
 521:.\Protocolo.c **** 			buffer[13]=0;
 1933              		.loc 1 521 0
 1934 0496 0023     		movs	r3, #0
 1935 0498 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1936              		.loc 1 522 0
 1937 049a 0023     		movs	r3, #0
 1938 049c 7B77     		strb	r3, [r7, #29]
 1939 049e 0FE0     		b	.L108
 1940              	.L109:
 523:.\Protocolo.c **** 				buffer[13]+=(buffer[i]&0x0F);	
 1941              		.loc 1 523 0 discriminator 3
 1942 04a0 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1943 04a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1944 04a4 07F12001 		add	r1, r7, #32
 1945 04a8 0B44     		add	r3, r3, r1
 1946 04aa 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1947 04ae 03F00F03 		and	r3, r3, #15
 1948 04b2 DBB2     		uxtb	r3, r3
 1949 04b4 1344     		add	r3, r3, r2
 1950 04b6 DBB2     		uxtb	r3, r3
 1951 04b8 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1952              		.loc 1 522 0 discriminator 3
 1953 04ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1954 04bc 0133     		adds	r3, r3, #1
 1955 04be 7B77     		strb	r3, [r7, #29]
 1956              	.L108:
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1957              		.loc 1 522 0 is_stmt 0 discriminator 1
 1958 04c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1959 04c2 0C2B     		cmp	r3, #12
 1960 04c4 ECD9     		bls	.L109
 524:.\Protocolo.c **** 			}
 525:.\Protocolo.c **** 			buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;			
 1961              		.loc 1 525 0 is_stmt 1
 1962 04c6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1963 04c8 5B42     		negs	r3, r3
 1964 04ca DBB2     		uxtb	r3, r3
 1965 04cc DBB2     		uxtb	r3, r3
 1966 04ce 03F00F03 		and	r3, r3, #15
 1967 04d2 DBB2     		uxtb	r3, r3
 1968 04d4 63F01F03 		orn	r3, r3, #31
 1969 04d8 DBB2     		uxtb	r3, r3
 1970 04da DBB2     		uxtb	r3, r3
 1971 04dc 7B75     		strb	r3, [r7, #21]
 526:.\Protocolo.c **** 			buffer[14]=0xF0;
 1972              		.loc 1 526 0
 1973 04de F023     		movs	r3, #240
 1974 04e0 BB75     		strb	r3, [r7, #22]
 527:.\Protocolo.c **** 			size=14;
 1975              		.loc 1 527 0
 1976 04e2 0E23     		movs	r3, #14
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 46


 1977 04e4 FB77     		strb	r3, [r7, #31]
 1978              	.L94:
 528:.\Protocolo.c **** 		}	
 529:.\Protocolo.c **** 	}	
 530:.\Protocolo.c **** 	if(version[1]==7){
 1979              		.loc 1 530 0
 1980 04e6 A24B     		ldr	r3, .L128
 1981 04e8 5B78     		ldrb	r3, [r3, #1]
 1982 04ea DBB2     		uxtb	r3, r3
 1983 04ec 072B     		cmp	r3, #7
 1984 04ee 40F06481 		bne	.L110
 531:.\Protocolo.c **** 		buffer[0]=0xFF;
 1985              		.loc 1 531 0
 1986 04f2 FF23     		movs	r3, #255
 1987 04f4 3B72     		strb	r3, [r7, #8]
 532:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1988              		.loc 1 532 0
 1989 04f6 BB7F     		ldrb	r3, [r7, #30]
 1990 04f8 63F01F03 		orn	r3, r3, #31
 1991 04fc DBB2     		uxtb	r3, r3
 1992 04fe 7B72     		strb	r3, [r7, #9]
 533:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1993              		.loc 1 533 0
 1994 0500 7B79     		ldrb	r3, [r7, #5]
 1995 0502 63F00F03 		orn	r3, r3, #15
 1996 0506 DBB2     		uxtb	r3, r3
 1997 0508 BB72     		strb	r3, [r7, #10]
 534:.\Protocolo.c **** 		buffer[3]=0xF4;
 1998              		.loc 1 534 0
 1999 050a F423     		movs	r3, #244
 2000 050c FB72     		strb	r3, [r7, #11]
 535:.\Protocolo.c **** 		buffer[4]=0xF8;	
 2001              		.loc 1 535 0
 2002 050e F823     		movs	r3, #248
 2003 0510 3B73     		strb	r3, [r7, #12]
 536:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 2004              		.loc 1 536 0
 2005 0512 3B68     		ldr	r3, [r7]
 2006 0514 0133     		adds	r3, r3, #1
 2007 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2008 0518 63F01F03 		orn	r3, r3, #31
 2009 051c DBB2     		uxtb	r3, r3
 2010 051e 7B73     		strb	r3, [r7, #13]
 537:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 2011              		.loc 1 537 0
 2012 0520 3B68     		ldr	r3, [r7]
 2013 0522 0233     		adds	r3, r3, #2
 2014 0524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2015 0526 63F01F03 		orn	r3, r3, #31
 2016 052a DBB2     		uxtb	r3, r3
 2017 052c BB73     		strb	r3, [r7, #14]
 538:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 2018              		.loc 1 538 0
 2019 052e 3B68     		ldr	r3, [r7]
 2020 0530 0333     		adds	r3, r3, #3
 2021 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2022 0534 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 47


 2023 0538 DBB2     		uxtb	r3, r3
 2024 053a FB73     		strb	r3, [r7, #15]
 539:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 2025              		.loc 1 539 0
 2026 053c 3B68     		ldr	r3, [r7]
 2027 053e 0433     		adds	r3, r3, #4
 2028 0540 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2029 0542 63F01F03 		orn	r3, r3, #31
 2030 0546 DBB2     		uxtb	r3, r3
 2031 0548 3B74     		strb	r3, [r7, #16]
 540:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 2032              		.loc 1 540 0
 2033 054a 3B68     		ldr	r3, [r7]
 2034 054c 0533     		adds	r3, r3, #5
 2035 054e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2036 0550 63F01F03 		orn	r3, r3, #31
 2037 0554 DBB2     		uxtb	r3, r3
 2038 0556 7B74     		strb	r3, [r7, #17]
 541:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);	
 2039              		.loc 1 541 0
 2040 0558 3B68     		ldr	r3, [r7]
 2041 055a 0633     		adds	r3, r3, #6
 2042 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2043 055e 63F01F03 		orn	r3, r3, #31
 2044 0562 DBB2     		uxtb	r3, r3
 2045 0564 BB74     		strb	r3, [r7, #18]
 542:.\Protocolo.c **** 		buffer[11]=(valor[7]|0xE0);
 2046              		.loc 1 542 0
 2047 0566 3B68     		ldr	r3, [r7]
 2048 0568 0733     		adds	r3, r3, #7
 2049 056a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2050 056c 63F01F03 		orn	r3, r3, #31
 2051 0570 DBB2     		uxtb	r3, r3
 2052 0572 FB74     		strb	r3, [r7, #19]
 543:.\Protocolo.c **** 		buffer[12]=0xE0;
 2053              		.loc 1 543 0
 2054 0574 E023     		movs	r3, #224
 2055 0576 3B75     		strb	r3, [r7, #20]
 544:.\Protocolo.c **** 		buffer[13]=0xFB;
 2056              		.loc 1 544 0
 2057 0578 FB23     		movs	r3, #251
 2058 057a 7B75     		strb	r3, [r7, #21]
 545:.\Protocolo.c **** 		buffer[14]=0;
 2059              		.loc 1 545 0
 2060 057c 0023     		movs	r3, #0
 2061 057e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2062              		.loc 1 546 0
 2063 0580 0023     		movs	r3, #0
 2064 0582 7B77     		strb	r3, [r7, #29]
 2065 0584 0FE0     		b	.L111
 2066              	.L112:
 547:.\Protocolo.c **** 			buffer[14]+=(buffer[i]&0x0F);	
 2067              		.loc 1 547 0 discriminator 3
 2068 0586 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2069 0588 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2070 058a 07F12001 		add	r1, r7, #32
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 48


 2071 058e 0B44     		add	r3, r3, r1
 2072 0590 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2073 0594 03F00F03 		and	r3, r3, #15
 2074 0598 DBB2     		uxtb	r3, r3
 2075 059a 1344     		add	r3, r3, r2
 2076 059c DBB2     		uxtb	r3, r3
 2077 059e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2078              		.loc 1 546 0 discriminator 3
 2079 05a0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2080 05a2 0133     		adds	r3, r3, #1
 2081 05a4 7B77     		strb	r3, [r7, #29]
 2082              	.L111:
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2083              		.loc 1 546 0 is_stmt 0 discriminator 1
 2084 05a6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2085 05a8 0D2B     		cmp	r3, #13
 2086 05aa ECD9     		bls	.L112
 548:.\Protocolo.c **** 		}
 549:.\Protocolo.c **** 		buffer[14]=(((~buffer[14])+1)&0x0F)|0xE0;
 2087              		.loc 1 549 0 is_stmt 1
 2088 05ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2089 05ae 5B42     		negs	r3, r3
 2090 05b0 DBB2     		uxtb	r3, r3
 2091 05b2 DBB2     		uxtb	r3, r3
 2092 05b4 03F00F03 		and	r3, r3, #15
 2093 05b8 DBB2     		uxtb	r3, r3
 2094 05ba 63F01F03 		orn	r3, r3, #31
 2095 05be DBB2     		uxtb	r3, r3
 2096 05c0 DBB2     		uxtb	r3, r3
 2097 05c2 BB75     		strb	r3, [r7, #22]
 550:.\Protocolo.c **** 		buffer[15]=0xF0;
 2098              		.loc 1 550 0
 2099 05c4 F023     		movs	r3, #240
 2100 05c6 FB75     		strb	r3, [r7, #23]
 551:.\Protocolo.c **** 		size=15;
 2101              		.loc 1 551 0
 2102 05c8 0F23     		movs	r3, #15
 2103 05ca FB77     		strb	r3, [r7, #31]
 552:.\Protocolo.c **** 		if(preset==1){
 2104              		.loc 1 552 0
 2105 05cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2106 05ce 012B     		cmp	r3, #1
 2107 05d0 40F0F380 		bne	.L110
 553:.\Protocolo.c **** 			buffer[4]=0xF6;
 2108              		.loc 1 553 0
 2109 05d4 F623     		movs	r3, #246
 2110 05d6 3B73     		strb	r3, [r7, #12]
 554:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2111              		.loc 1 554 0
 2112 05d8 BB79     		ldrb	r3, [r7, #6]
 2113 05da 013B     		subs	r3, r3, #1
 2114 05dc DBB2     		uxtb	r3, r3
 2115 05de DBB2     		uxtb	r3, r3
 2116 05e0 63F01F03 		orn	r3, r3, #31
 2117 05e4 DBB2     		uxtb	r3, r3
 2118 05e6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 49


 2119 05e8 7B73     		strb	r3, [r7, #13]
 555:.\Protocolo.c **** 			buffer[6]=0xF8;
 2120              		.loc 1 555 0
 2121 05ea F823     		movs	r3, #248
 2122 05ec BB73     		strb	r3, [r7, #14]
 556:.\Protocolo.c **** 			if(decimal==4){
 2123              		.loc 1 556 0
 2124 05ee 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2125 05f0 042B     		cmp	r3, #4
 2126 05f2 2DD1     		bne	.L113
 557:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2127              		.loc 1 557 0
 2128 05f4 3B68     		ldr	r3, [r7]
 2129 05f6 0133     		adds	r3, r3, #1
 2130 05f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2131 05fa 63F01F03 		orn	r3, r3, #31
 2132 05fe DBB2     		uxtb	r3, r3
 2133 0600 FB73     		strb	r3, [r7, #15]
 558:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2134              		.loc 1 558 0
 2135 0602 3B68     		ldr	r3, [r7]
 2136 0604 0233     		adds	r3, r3, #2
 2137 0606 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2138 0608 63F01F03 		orn	r3, r3, #31
 2139 060c DBB2     		uxtb	r3, r3
 2140 060e 3B74     		strb	r3, [r7, #16]
 559:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2141              		.loc 1 559 0
 2142 0610 3B68     		ldr	r3, [r7]
 2143 0612 0333     		adds	r3, r3, #3
 2144 0614 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2145 0616 63F01F03 		orn	r3, r3, #31
 2146 061a DBB2     		uxtb	r3, r3
 2147 061c 7B74     		strb	r3, [r7, #17]
 560:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2148              		.loc 1 560 0
 2149 061e 3B68     		ldr	r3, [r7]
 2150 0620 0533     		adds	r3, r3, #5
 2151 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2152 0624 63F01F03 		orn	r3, r3, #31
 2153 0628 DBB2     		uxtb	r3, r3
 2154 062a BB74     		strb	r3, [r7, #18]
 561:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);
 2155              		.loc 1 561 0
 2156 062c 3B68     		ldr	r3, [r7]
 2157 062e 0633     		adds	r3, r3, #6
 2158 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2159 0632 63F01F03 		orn	r3, r3, #31
 2160 0636 DBB2     		uxtb	r3, r3
 2161 0638 FB74     		strb	r3, [r7, #19]
 562:.\Protocolo.c **** 				buffer[12]=(valor[7]|0xE0);	
 2162              		.loc 1 562 0
 2163 063a 3B68     		ldr	r3, [r7]
 2164 063c 0733     		adds	r3, r3, #7
 2165 063e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2166 0640 63F01F03 		orn	r3, r3, #31
 2167 0644 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 50


 2168 0646 3B75     		strb	r3, [r7, #20]
 563:.\Protocolo.c **** 				buffer[13]=0xE0;	
 2169              		.loc 1 563 0
 2170 0648 E023     		movs	r3, #224
 2171 064a 7B75     		strb	r3, [r7, #21]
 564:.\Protocolo.c **** 				buffer[14]=0xE0;
 2172              		.loc 1 564 0
 2173 064c E023     		movs	r3, #224
 2174 064e BB75     		strb	r3, [r7, #22]
 2175              	.L113:
 565:.\Protocolo.c **** 			}
 566:.\Protocolo.c **** 			if(decimal==3){
 2176              		.loc 1 566 0
 2177 0650 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2178 0652 032B     		cmp	r3, #3
 2179 0654 2DD1     		bne	.L114
 567:.\Protocolo.c **** 				buffer[7]=0xE0;
 2180              		.loc 1 567 0
 2181 0656 E023     		movs	r3, #224
 2182 0658 FB73     		strb	r3, [r7, #15]
 568:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2183              		.loc 1 568 0
 2184 065a 3B68     		ldr	r3, [r7]
 2185 065c 0133     		adds	r3, r3, #1
 2186 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2187 0660 63F01F03 		orn	r3, r3, #31
 2188 0664 DBB2     		uxtb	r3, r3
 2189 0666 3B74     		strb	r3, [r7, #16]
 569:.\Protocolo.c **** 				buffer[9]=(valor[2]|0xE0);
 2190              		.loc 1 569 0
 2191 0668 3B68     		ldr	r3, [r7]
 2192 066a 0233     		adds	r3, r3, #2
 2193 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2194 066e 63F01F03 		orn	r3, r3, #31
 2195 0672 DBB2     		uxtb	r3, r3
 2196 0674 7B74     		strb	r3, [r7, #17]
 570:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2197              		.loc 1 570 0
 2198 0676 3B68     		ldr	r3, [r7]
 2199 0678 0433     		adds	r3, r3, #4
 2200 067a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2201 067c 63F01F03 		orn	r3, r3, #31
 2202 0680 DBB2     		uxtb	r3, r3
 2203 0682 BB74     		strb	r3, [r7, #18]
 571:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);
 2204              		.loc 1 571 0
 2205 0684 3B68     		ldr	r3, [r7]
 2206 0686 0533     		adds	r3, r3, #5
 2207 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2208 068a 63F01F03 		orn	r3, r3, #31
 2209 068e DBB2     		uxtb	r3, r3
 2210 0690 FB74     		strb	r3, [r7, #19]
 572:.\Protocolo.c **** 				buffer[12]=(valor[6]|0xE0);
 2211              		.loc 1 572 0
 2212 0692 3B68     		ldr	r3, [r7]
 2213 0694 0633     		adds	r3, r3, #6
 2214 0696 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 51


 2215 0698 63F01F03 		orn	r3, r3, #31
 2216 069c DBB2     		uxtb	r3, r3
 2217 069e 3B75     		strb	r3, [r7, #20]
 573:.\Protocolo.c **** 				buffer[13]=(valor[7]|0xE0);	
 2218              		.loc 1 573 0
 2219 06a0 3B68     		ldr	r3, [r7]
 2220 06a2 0733     		adds	r3, r3, #7
 2221 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2222 06a6 63F01F03 		orn	r3, r3, #31
 2223 06aa DBB2     		uxtb	r3, r3
 2224 06ac 7B75     		strb	r3, [r7, #21]
 574:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2225              		.loc 1 574 0
 2226 06ae E023     		movs	r3, #224
 2227 06b0 BB75     		strb	r3, [r7, #22]
 2228              	.L114:
 575:.\Protocolo.c **** 			}
 576:.\Protocolo.c **** 			if(decimal==2){
 2229              		.loc 1 576 0
 2230 06b2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2231 06b4 022B     		cmp	r3, #2
 2232 06b6 2DD1     		bne	.L115
 577:.\Protocolo.c **** 				buffer[7]=0xE0;
 2233              		.loc 1 577 0
 2234 06b8 E023     		movs	r3, #224
 2235 06ba FB73     		strb	r3, [r7, #15]
 578:.\Protocolo.c **** 				buffer[8]=0xE0;
 2236              		.loc 1 578 0
 2237 06bc E023     		movs	r3, #224
 2238 06be 3B74     		strb	r3, [r7, #16]
 579:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2239              		.loc 1 579 0
 2240 06c0 3B68     		ldr	r3, [r7]
 2241 06c2 0133     		adds	r3, r3, #1
 2242 06c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2243 06c6 63F01F03 		orn	r3, r3, #31
 2244 06ca DBB2     		uxtb	r3, r3
 2245 06cc 7B74     		strb	r3, [r7, #17]
 580:.\Protocolo.c **** 				buffer[10]=(valor[3]|0xE0);
 2246              		.loc 1 580 0
 2247 06ce 3B68     		ldr	r3, [r7]
 2248 06d0 0333     		adds	r3, r3, #3
 2249 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2250 06d4 63F01F03 		orn	r3, r3, #31
 2251 06d8 DBB2     		uxtb	r3, r3
 2252 06da BB74     		strb	r3, [r7, #18]
 581:.\Protocolo.c **** 				buffer[11]=(valor[4]|0xE0);
 2253              		.loc 1 581 0
 2254 06dc 3B68     		ldr	r3, [r7]
 2255 06de 0433     		adds	r3, r3, #4
 2256 06e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2257 06e2 63F01F03 		orn	r3, r3, #31
 2258 06e6 DBB2     		uxtb	r3, r3
 2259 06e8 FB74     		strb	r3, [r7, #19]
 582:.\Protocolo.c **** 				buffer[12]=(valor[5]|0xE0);
 2260              		.loc 1 582 0
 2261 06ea 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 52


 2262 06ec 0533     		adds	r3, r3, #5
 2263 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2264 06f0 63F01F03 		orn	r3, r3, #31
 2265 06f4 DBB2     		uxtb	r3, r3
 2266 06f6 3B75     		strb	r3, [r7, #20]
 583:.\Protocolo.c **** 				buffer[13]=(valor[6]|0xE0);	
 2267              		.loc 1 583 0
 2268 06f8 3B68     		ldr	r3, [r7]
 2269 06fa 0633     		adds	r3, r3, #6
 2270 06fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2271 06fe 63F01F03 		orn	r3, r3, #31
 2272 0702 DBB2     		uxtb	r3, r3
 2273 0704 7B75     		strb	r3, [r7, #21]
 584:.\Protocolo.c **** 				buffer[14]=(valor[7]|0xE0);	
 2274              		.loc 1 584 0
 2275 0706 3B68     		ldr	r3, [r7]
 2276 0708 0733     		adds	r3, r3, #7
 2277 070a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2278 070c 63F01F03 		orn	r3, r3, #31
 2279 0710 DBB2     		uxtb	r3, r3
 2280 0712 BB75     		strb	r3, [r7, #22]
 2281              	.L115:
 585:.\Protocolo.c **** 			}
 586:.\Protocolo.c **** 			if(decimal==0){
 2282              		.loc 1 586 0
 2283 0714 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2284 0716 002B     		cmp	r3, #0
 2285 0718 23D1     		bne	.L116
 587:.\Protocolo.c **** 				buffer[7]=0xE0;
 2286              		.loc 1 587 0
 2287 071a E023     		movs	r3, #224
 2288 071c FB73     		strb	r3, [r7, #15]
 588:.\Protocolo.c **** 				buffer[8]=0xE0;
 2289              		.loc 1 588 0
 2290 071e E023     		movs	r3, #224
 2291 0720 3B74     		strb	r3, [r7, #16]
 589:.\Protocolo.c **** 				buffer[9]=0xE0;
 2292              		.loc 1 589 0
 2293 0722 E023     		movs	r3, #224
 2294 0724 7B74     		strb	r3, [r7, #17]
 590:.\Protocolo.c **** 				buffer[10]=(valor[1]|0xE0);
 2295              		.loc 1 590 0
 2296 0726 3B68     		ldr	r3, [r7]
 2297 0728 0133     		adds	r3, r3, #1
 2298 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2299 072c 63F01F03 		orn	r3, r3, #31
 2300 0730 DBB2     		uxtb	r3, r3
 2301 0732 BB74     		strb	r3, [r7, #18]
 591:.\Protocolo.c **** 				buffer[11]=(valor[2]|0xE0);
 2302              		.loc 1 591 0
 2303 0734 3B68     		ldr	r3, [r7]
 2304 0736 0233     		adds	r3, r3, #2
 2305 0738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2306 073a 63F01F03 		orn	r3, r3, #31
 2307 073e DBB2     		uxtb	r3, r3
 2308 0740 FB74     		strb	r3, [r7, #19]
 592:.\Protocolo.c **** 				buffer[12]=(valor[3]|0xE0);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 53


 2309              		.loc 1 592 0
 2310 0742 3B68     		ldr	r3, [r7]
 2311 0744 0333     		adds	r3, r3, #3
 2312 0746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2313 0748 63F01F03 		orn	r3, r3, #31
 2314 074c DBB2     		uxtb	r3, r3
 2315 074e 3B75     		strb	r3, [r7, #20]
 593:.\Protocolo.c **** 				buffer[13]=(valor[4]|0xE0);	
 2316              		.loc 1 593 0
 2317 0750 3B68     		ldr	r3, [r7]
 2318 0752 0433     		adds	r3, r3, #4
 2319 0754 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2320 0756 63F01F03 		orn	r3, r3, #31
 2321 075a DBB2     		uxtb	r3, r3
 2322 075c 7B75     		strb	r3, [r7, #21]
 594:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2323              		.loc 1 594 0
 2324 075e E023     		movs	r3, #224
 2325 0760 BB75     		strb	r3, [r7, #22]
 2326              	.L116:
 595:.\Protocolo.c **** 			}			
 596:.\Protocolo.c **** 			buffer[15]=0xFB;
 2327              		.loc 1 596 0
 2328 0762 FB23     		movs	r3, #251
 2329 0764 FB75     		strb	r3, [r7, #23]
 597:.\Protocolo.c **** 			buffer[16]=0;
 2330              		.loc 1 597 0
 2331 0766 0023     		movs	r3, #0
 2332 0768 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2333              		.loc 1 598 0
 2334 076a 0023     		movs	r3, #0
 2335 076c 7B77     		strb	r3, [r7, #29]
 2336 076e 11E0     		b	.L117
 2337              	.L129:
 2338              		.align	2
 2339              	.L128:
 2340 0770 00000000 		.word	version
 2341              	.L118:
 599:.\Protocolo.c **** 				buffer[16]+=(buffer[i]&0x0F);	
 2342              		.loc 1 599 0 discriminator 3
 2343 0774 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 2344 0776 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2345 0778 07F12001 		add	r1, r7, #32
 2346 077c 0B44     		add	r3, r3, r1
 2347 077e 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2348 0782 03F00F03 		and	r3, r3, #15
 2349 0786 DBB2     		uxtb	r3, r3
 2350 0788 1344     		add	r3, r3, r2
 2351 078a DBB2     		uxtb	r3, r3
 2352 078c 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2353              		.loc 1 598 0 discriminator 3
 2354 078e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2355 0790 0133     		adds	r3, r3, #1
 2356 0792 7B77     		strb	r3, [r7, #29]
 2357              	.L117:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 54


 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2358              		.loc 1 598 0 is_stmt 0 discriminator 1
 2359 0794 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2360 0796 0F2B     		cmp	r3, #15
 2361 0798 ECD9     		bls	.L118
 600:.\Protocolo.c **** 			}
 601:.\Protocolo.c **** 			buffer[16]=(((~buffer[16])+1)&0x0F)|0xE0;			
 2362              		.loc 1 601 0 is_stmt 1
 2363 079a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 2364 079c 5B42     		negs	r3, r3
 2365 079e DBB2     		uxtb	r3, r3
 2366 07a0 DBB2     		uxtb	r3, r3
 2367 07a2 03F00F03 		and	r3, r3, #15
 2368 07a6 DBB2     		uxtb	r3, r3
 2369 07a8 63F01F03 		orn	r3, r3, #31
 2370 07ac DBB2     		uxtb	r3, r3
 2371 07ae DBB2     		uxtb	r3, r3
 2372 07b0 3B76     		strb	r3, [r7, #24]
 602:.\Protocolo.c **** 			buffer[17]=0xF0;
 2373              		.loc 1 602 0
 2374 07b2 F023     		movs	r3, #240
 2375 07b4 7B76     		strb	r3, [r7, #25]
 603:.\Protocolo.c **** 			size=17;
 2376              		.loc 1 603 0
 2377 07b6 1123     		movs	r3, #17
 2378 07b8 FB77     		strb	r3, [r7, #31]
 2379              	.L110:
 604:.\Protocolo.c **** 		}		
 605:.\Protocolo.c **** 	}
 606:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2380              		.loc 1 606 0
 2381 07ba FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 607:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2382              		.loc 1 607 0
 2383 07be FB79     		ldrb	r3, [r7, #7]
 2384 07c0 43F02003 		orr	r3, r3, #32
 2385 07c4 DBB2     		uxtb	r3, r3
 2386 07c6 1846     		mov	r0, r3
 2387 07c8 FFF7FEFF 		bl	Surtidor_PutChar
 608:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2388              		.loc 1 608 0
 2389 07cc 2A48     		ldr	r0, .L130
 2390 07ce FFF7FEFF 		bl	isr_1_StartEx
 609:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2391              		.loc 1 609 0
 2392 07d2 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 610:.\Protocolo.c ****     rx_timeout=0;
 2393              		.loc 1 610 0
 2394 07d6 294B     		ldr	r3, .L130+4
 2395 07d8 0022     		movs	r2, #0
 2396 07da 1A70     		strb	r2, [r3]
 611:.\Protocolo.c ****     CyDelay(10);
 2397              		.loc 1 611 0
 2398 07dc 0A20     		movs	r0, #10
 2399 07de FFF7FEFF 		bl	CyDelay
 612:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2400              		.loc 1 612 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 55


 2401 07e2 0BE0     		b	.L119
 2402              	.L120:
 613:.\Protocolo.c **** 		if(rx_timeout==1){
 2403              		.loc 1 613 0
 2404 07e4 254B     		ldr	r3, .L130+4
 2405 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2406 07e8 012B     		cmp	r3, #1
 2407 07ea 07D1     		bne	.L119
 614:.\Protocolo.c **** 			isr_1_Stop();
 2408              		.loc 1 614 0
 2409 07ec FFF7FEFF 		bl	isr_1_Stop
 615:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2410              		.loc 1 615 0
 2411 07f0 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 616:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2412              		.loc 1 616 0
 2413 07f4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 617:.\Protocolo.c **** 			return 0;
 2414              		.loc 1 617 0
 2415 07f8 0023     		movs	r3, #0
 2416 07fa 39E0     		b	.L125
 2417              	.L119:
 612:.\Protocolo.c **** 		if(rx_timeout==1){
 2418              		.loc 1 612 0
 2419 07fc FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2420 0800 0346     		mov	r3, r0
 2421 0802 002B     		cmp	r3, #0
 2422 0804 EED0     		beq	.L120
 618:.\Protocolo.c **** 		}
 619:.\Protocolo.c **** 	}
 620:.\Protocolo.c **** 	isr_1_Stop();
 2423              		.loc 1 620 0
 2424 0806 FFF7FEFF 		bl	isr_1_Stop
 621:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 2425              		.loc 1 621 0
 2426 080a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 622:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2427              		.loc 1 622 0
 2428 080e FFF7FEFF 		bl	Surtidor_ReadRxData
 2429 0812 0346     		mov	r3, r0
 2430 0814 1A46     		mov	r2, r3
 2431 0816 FB79     		ldrb	r3, [r7, #7]
 2432 0818 63F02F03 		orn	r3, r3, #47
 2433 081c DBB2     		uxtb	r3, r3
 2434 081e 9A42     		cmp	r2, r3
 2435 0820 25D1     		bne	.L121
 623:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2436              		.loc 1 623 0
 2437 0822 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 624:.\Protocolo.c **** 		CyDelay(10);
 2438              		.loc 1 624 0
 2439 0826 0A20     		movs	r0, #10
 2440 0828 FFF7FEFF 		bl	CyDelay
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2441              		.loc 1 625 0
 2442 082c 0023     		movs	r3, #0
 2443 082e 7B77     		strb	r3, [r7, #29]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 56


 2444 0830 0BE0     		b	.L122
 2445              	.L123:
 626:.\Protocolo.c ****            	Surtidor_PutChar(buffer[i]);
 2446              		.loc 1 626 0 discriminator 3
 2447 0832 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2448 0834 07F12002 		add	r2, r7, #32
 2449 0838 1344     		add	r3, r3, r2
 2450 083a 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2451 083e 1846     		mov	r0, r3
 2452 0840 FFF7FEFF 		bl	Surtidor_PutChar
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2453              		.loc 1 625 0 discriminator 3
 2454 0844 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2455 0846 0133     		adds	r3, r3, #1
 2456 0848 7B77     		strb	r3, [r7, #29]
 2457              	.L122:
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2458              		.loc 1 625 0 is_stmt 0 discriminator 1
 2459 084a 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2460 084c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2461 084e 9A42     		cmp	r2, r3
 2462 0850 EFD9     		bls	.L123
 627:.\Protocolo.c ****         }
 628:.\Protocolo.c **** 		CyDelay(50);		
 2463              		.loc 1 628 0 is_stmt 1
 2464 0852 3220     		movs	r0, #50
 2465 0854 FFF7FEFF 		bl	CyDelay
 629:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2466              		.loc 1 629 0
 2467 0858 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2468 085a 1846     		mov	r0, r3
 2469 085c FFF7FEFF 		bl	get_estado
 2470 0860 0346     		mov	r3, r0
 2471 0862 002B     		cmp	r3, #0
 2472 0864 01D1     		bne	.L124
 630:.\Protocolo.c **** 			return 0;
 2473              		.loc 1 630 0
 2474 0866 0023     		movs	r3, #0
 2475 0868 02E0     		b	.L125
 2476              	.L124:
 631:.\Protocolo.c **** 		}
 632:.\Protocolo.c **** 		else{
 633:.\Protocolo.c **** 			return 1;
 2477              		.loc 1 633 0
 2478 086a 0123     		movs	r3, #1
 2479 086c 00E0     		b	.L125
 2480              	.L121:
 634:.\Protocolo.c **** 		}
 635:.\Protocolo.c **** 	}
 636:.\Protocolo.c **** 	else{
 637:.\Protocolo.c **** 		return 0;
 2481              		.loc 1 637 0
 2482 086e 0023     		movs	r3, #0
 2483              	.L125:
 638:.\Protocolo.c **** 	}
 639:.\Protocolo.c **** }
 2484              		.loc 1 639 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 57


 2485 0870 1846     		mov	r0, r3
 2486 0872 2037     		adds	r7, r7, #32
 2487              		.cfi_def_cfa_offset 8
 2488 0874 BD46     		mov	sp, r7
 2489              		.cfi_def_cfa_register 13
 2490              		@ sp needed
 2491 0876 80BD     		pop	{r7, pc}
 2492              	.L131:
 2493              		.align	2
 2494              	.L130:
 2495 0878 00000000 		.word	Rx_Surtidor
 2496 087c 00000000 		.word	rx_timeout
 2497              		.cfi_endproc
 2498              	.LFE70:
 2499              		.size	programar, .-programar
 2500              		.section	.text.cambiar_precio,"ax",%progbits
 2501              		.align	2
 2502              		.global	cambiar_precio
 2503              		.thumb
 2504              		.thumb_func
 2505              		.type	cambiar_precio, %function
 2506              	cambiar_precio:
 2507              	.LFB71:
 640:.\Protocolo.c **** 
 641:.\Protocolo.c **** /*
 642:.\Protocolo.c **** ***************************************************************************************************
 643:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 644:.\Protocolo.c **** *
 645:.\Protocolo.c **** * Description : 
 646:.\Protocolo.c **** *               
 647:.\Protocolo.c **** *
 648:.\Protocolo.c **** * Argument(s) : none
 649:.\Protocolo.c **** *
 650:.\Protocolo.c **** * Return(s)   : none
 651:.\Protocolo.c **** *
 652:.\Protocolo.c **** * Caller(s)   : 
 653:.\Protocolo.c **** *
 654:.\Protocolo.c **** * Note(s)     : none.
 655:.\Protocolo.c **** ***************************************************************************************************
 656:.\Protocolo.c **** */
 657:.\Protocolo.c **** uint8 cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man){
 2508              		.loc 1 657 0
 2509              		.cfi_startproc
 2510              		@ args = 0, pretend = 0, frame = 32
 2511              		@ frame_needed = 1, uses_anonymous_args = 0
 2512 0000 80B5     		push	{r7, lr}
 2513              		.cfi_def_cfa_offset 8
 2514              		.cfi_offset 7, -8
 2515              		.cfi_offset 14, -4
 2516 0002 88B0     		sub	sp, sp, #32
 2517              		.cfi_def_cfa_offset 40
 2518 0004 00AF     		add	r7, sp, #0
 2519              		.cfi_def_cfa_register 7
 2520 0006 0346     		mov	r3, r0
 2521 0008 3960     		str	r1, [r7]
 2522 000a FB71     		strb	r3, [r7, #7]
 2523 000c 1346     		mov	r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 58


 2524 000e BB71     		strb	r3, [r7, #6]
 658:.\Protocolo.c **** 	uint8 buffer[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,x;
 2525              		.loc 1 658 0
 2526 0010 0023     		movs	r3, #0
 2527 0012 3B73     		strb	r3, [r7, #12]
 2528 0014 0023     		movs	r3, #0
 2529 0016 7B73     		strb	r3, [r7, #13]
 2530 0018 0023     		movs	r3, #0
 2531 001a BB73     		strb	r3, [r7, #14]
 2532 001c 0023     		movs	r3, #0
 2533 001e FB73     		strb	r3, [r7, #15]
 2534 0020 0023     		movs	r3, #0
 2535 0022 3B74     		strb	r3, [r7, #16]
 2536 0024 0023     		movs	r3, #0
 2537 0026 7B74     		strb	r3, [r7, #17]
 2538 0028 0023     		movs	r3, #0
 2539 002a BB74     		strb	r3, [r7, #18]
 2540 002c 0023     		movs	r3, #0
 2541 002e FB74     		strb	r3, [r7, #19]
 2542 0030 0023     		movs	r3, #0
 2543 0032 3B75     		strb	r3, [r7, #20]
 2544 0034 0023     		movs	r3, #0
 2545 0036 7B75     		strb	r3, [r7, #21]
 2546 0038 0023     		movs	r3, #0
 2547 003a BB75     		strb	r3, [r7, #22]
 2548 003c 0023     		movs	r3, #0
 2549 003e FB75     		strb	r3, [r7, #23]
 2550 0040 0023     		movs	r3, #0
 2551 0042 3B76     		strb	r3, [r7, #24]
 2552 0044 0023     		movs	r3, #0
 2553 0046 7B76     		strb	r3, [r7, #25]
 2554 0048 0023     		movs	r3, #0
 2555 004a BB76     		strb	r3, [r7, #26]
 659:.\Protocolo.c **** 	if(version[1]!=7){
 2556              		.loc 1 659 0
 2557 004c 884B     		ldr	r3, .L151
 2558 004e 5B78     		ldrb	r3, [r3, #1]
 2559 0050 DBB2     		uxtb	r3, r3
 2560 0052 072B     		cmp	r3, #7
 2561 0054 56D0     		beq	.L133
 660:.\Protocolo.c **** 		buffer[0]=0xFF;
 2562              		.loc 1 660 0
 2563 0056 FF23     		movs	r3, #255
 2564 0058 3B73     		strb	r3, [r7, #12]
 661:.\Protocolo.c **** 		buffer[1]=0xE5;
 2565              		.loc 1 661 0
 2566 005a E523     		movs	r3, #229
 2567 005c 7B73     		strb	r3, [r7, #13]
 662:.\Protocolo.c **** 		buffer[2]=0xF4;
 2568              		.loc 1 662 0
 2569 005e F423     		movs	r3, #244
 2570 0060 BB73     		strb	r3, [r7, #14]
 663:.\Protocolo.c **** 		buffer[3]=0xF6;
 2571              		.loc 1 663 0
 2572 0062 F623     		movs	r3, #246
 2573 0064 FB73     		strb	r3, [r7, #15]
 664:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 59


 2574              		.loc 1 664 0
 2575 0066 BB79     		ldrb	r3, [r7, #6]
 2576 0068 013B     		subs	r3, r3, #1
 2577 006a DBB2     		uxtb	r3, r3
 2578 006c DBB2     		uxtb	r3, r3
 2579 006e 63F01F03 		orn	r3, r3, #31
 2580 0072 DBB2     		uxtb	r3, r3
 2581 0074 DBB2     		uxtb	r3, r3
 2582 0076 3B74     		strb	r3, [r7, #16]
 665:.\Protocolo.c **** 		buffer[5]=0xF7;	
 2583              		.loc 1 665 0
 2584 0078 F723     		movs	r3, #247
 2585 007a 7B74     		strb	r3, [r7, #17]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2586              		.loc 1 666 0
 2587 007c 0623     		movs	r3, #6
 2588 007e BB77     		strb	r3, [r7, #30]
 2589 0080 15E0     		b	.L134
 2590              	.L135:
 667:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 2591              		.loc 1 667 0 discriminator 3
 2592 0082 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2593 0084 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2594 0086 063A     		subs	r2, r2, #6
 2595 0088 3968     		ldr	r1, [r7]
 2596 008a 0A44     		add	r2, r2, r1
 2597 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2598 008e D2B2     		uxtb	r2, r2
 2599 0090 02F00F02 		and	r2, r2, #15
 2600 0094 D2B2     		uxtb	r2, r2
 2601 0096 62F01F02 		orn	r2, r2, #31
 2602 009a D2B2     		uxtb	r2, r2
 2603 009c D2B2     		uxtb	r2, r2
 2604 009e 07F12001 		add	r1, r7, #32
 2605 00a2 0B44     		add	r3, r3, r1
 2606 00a4 03F8142C 		strb	r2, [r3, #-20]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2607              		.loc 1 666 0 discriminator 3
 2608 00a8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2609 00aa 0133     		adds	r3, r3, #1
 2610 00ac BB77     		strb	r3, [r7, #30]
 2611              	.L134:
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2612              		.loc 1 666 0 is_stmt 0 discriminator 1
 2613 00ae BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2614 00b0 092B     		cmp	r3, #9
 2615 00b2 E6D9     		bls	.L135
 668:.\Protocolo.c **** 		}
 669:.\Protocolo.c **** 		buffer[10]=0xFB;
 2616              		.loc 1 669 0 is_stmt 1
 2617 00b4 FB23     		movs	r3, #251
 2618 00b6 BB75     		strb	r3, [r7, #22]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2619              		.loc 1 670 0
 2620 00b8 0023     		movs	r3, #0
 2621 00ba BB77     		strb	r3, [r7, #30]
 2622 00bc 0FE0     		b	.L136
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 60


 2623              	.L137:
 671:.\Protocolo.c **** 			buffer[11]+=(buffer[x]&0x0F);	
 2624              		.loc 1 671 0 discriminator 3
 2625 00be FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2626 00c0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2627 00c2 07F12001 		add	r1, r7, #32
 2628 00c6 0B44     		add	r3, r3, r1
 2629 00c8 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2630 00cc 03F00F03 		and	r3, r3, #15
 2631 00d0 DBB2     		uxtb	r3, r3
 2632 00d2 1344     		add	r3, r3, r2
 2633 00d4 DBB2     		uxtb	r3, r3
 2634 00d6 FB75     		strb	r3, [r7, #23]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2635              		.loc 1 670 0 discriminator 3
 2636 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2637 00da 0133     		adds	r3, r3, #1
 2638 00dc BB77     		strb	r3, [r7, #30]
 2639              	.L136:
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2640              		.loc 1 670 0 is_stmt 0 discriminator 1
 2641 00de BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2642 00e0 0A2B     		cmp	r3, #10
 2643 00e2 ECD9     		bls	.L137
 672:.\Protocolo.c **** 		}
 673:.\Protocolo.c **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 2644              		.loc 1 673 0 is_stmt 1
 2645 00e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2646 00e6 5B42     		negs	r3, r3
 2647 00e8 DBB2     		uxtb	r3, r3
 2648 00ea DBB2     		uxtb	r3, r3
 2649 00ec 03F00F03 		and	r3, r3, #15
 2650 00f0 DBB2     		uxtb	r3, r3
 2651 00f2 63F01F03 		orn	r3, r3, #31
 2652 00f6 DBB2     		uxtb	r3, r3
 2653 00f8 DBB2     		uxtb	r3, r3
 2654 00fa FB75     		strb	r3, [r7, #23]
 674:.\Protocolo.c **** 		buffer[12]=0xF0;
 2655              		.loc 1 674 0
 2656 00fc F023     		movs	r3, #240
 2657 00fe 3B76     		strb	r3, [r7, #24]
 675:.\Protocolo.c **** 		size=12;
 2658              		.loc 1 675 0
 2659 0100 0C23     		movs	r3, #12
 2660 0102 FB77     		strb	r3, [r7, #31]
 2661              	.L133:
 676:.\Protocolo.c **** 	}
 677:.\Protocolo.c **** 	if(version[1]==7){
 2662              		.loc 1 677 0
 2663 0104 5A4B     		ldr	r3, .L151
 2664 0106 5B78     		ldrb	r3, [r3, #1]
 2665 0108 DBB2     		uxtb	r3, r3
 2666 010a 072B     		cmp	r3, #7
 2667 010c 53D1     		bne	.L138
 678:.\Protocolo.c **** 		buffer[0]=0xFF;
 2668              		.loc 1 678 0
 2669 010e FF23     		movs	r3, #255
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 61


 2670 0110 3B73     		strb	r3, [r7, #12]
 679:.\Protocolo.c **** 		buffer[1]=0xE3;
 2671              		.loc 1 679 0
 2672 0112 E323     		movs	r3, #227
 2673 0114 7B73     		strb	r3, [r7, #13]
 680:.\Protocolo.c **** 		buffer[2]=0xF4;
 2674              		.loc 1 680 0
 2675 0116 F423     		movs	r3, #244
 2676 0118 BB73     		strb	r3, [r7, #14]
 681:.\Protocolo.c **** 		buffer[3]=0xF6;
 2677              		.loc 1 681 0
 2678 011a F623     		movs	r3, #246
 2679 011c FB73     		strb	r3, [r7, #15]
 682:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2680              		.loc 1 682 0
 2681 011e BB79     		ldrb	r3, [r7, #6]
 2682 0120 013B     		subs	r3, r3, #1
 2683 0122 DBB2     		uxtb	r3, r3
 2684 0124 DBB2     		uxtb	r3, r3
 2685 0126 63F01F03 		orn	r3, r3, #31
 2686 012a DBB2     		uxtb	r3, r3
 2687 012c DBB2     		uxtb	r3, r3
 2688 012e 3B74     		strb	r3, [r7, #16]
 683:.\Protocolo.c **** 		buffer[5]=0xF7;		
 2689              		.loc 1 683 0
 2690 0130 F723     		movs	r3, #247
 2691 0132 7B74     		strb	r3, [r7, #17]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2692              		.loc 1 684 0
 2693 0134 0623     		movs	r3, #6
 2694 0136 BB77     		strb	r3, [r7, #30]
 2695 0138 10E0     		b	.L139
 2696              	.L140:
 685:.\Protocolo.c **** 			buffer[x]=(0xE0|precio[x-6]);
 2697              		.loc 1 685 0 discriminator 3
 2698 013a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2699 013c BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2700 013e 063A     		subs	r2, r2, #6
 2701 0140 3968     		ldr	r1, [r7]
 2702 0142 0A44     		add	r2, r2, r1
 2703 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2704 0146 62F01F02 		orn	r2, r2, #31
 2705 014a D2B2     		uxtb	r2, r2
 2706 014c 07F12001 		add	r1, r7, #32
 2707 0150 0B44     		add	r3, r3, r1
 2708 0152 03F8142C 		strb	r2, [r3, #-20]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2709              		.loc 1 684 0 discriminator 3
 2710 0156 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2711 0158 0133     		adds	r3, r3, #1
 2712 015a BB77     		strb	r3, [r7, #30]
 2713              	.L139:
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2714              		.loc 1 684 0 is_stmt 0 discriminator 1
 2715 015c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2716 015e 0A2B     		cmp	r3, #10
 2717 0160 EBD9     		bls	.L140
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 62


 686:.\Protocolo.c **** 		}
 687:.\Protocolo.c **** 		buffer[11]=0xE0;
 2718              		.loc 1 687 0 is_stmt 1
 2719 0162 E023     		movs	r3, #224
 2720 0164 FB75     		strb	r3, [r7, #23]
 688:.\Protocolo.c **** 		buffer[12]=0xFB;
 2721              		.loc 1 688 0
 2722 0166 FB23     		movs	r3, #251
 2723 0168 3B76     		strb	r3, [r7, #24]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2724              		.loc 1 689 0
 2725 016a 0023     		movs	r3, #0
 2726 016c BB77     		strb	r3, [r7, #30]
 2727 016e 0FE0     		b	.L141
 2728              	.L142:
 690:.\Protocolo.c **** 			buffer[13]+=(buffer[x]&0x0F);	
 2729              		.loc 1 690 0 discriminator 3
 2730 0170 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 2731 0172 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2732 0174 07F12001 		add	r1, r7, #32
 2733 0178 0B44     		add	r3, r3, r1
 2734 017a 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2735 017e 03F00F03 		and	r3, r3, #15
 2736 0182 DBB2     		uxtb	r3, r3
 2737 0184 1344     		add	r3, r3, r2
 2738 0186 DBB2     		uxtb	r3, r3
 2739 0188 7B76     		strb	r3, [r7, #25]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2740              		.loc 1 689 0 discriminator 3
 2741 018a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2742 018c 0133     		adds	r3, r3, #1
 2743 018e BB77     		strb	r3, [r7, #30]
 2744              	.L141:
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2745              		.loc 1 689 0 is_stmt 0 discriminator 1
 2746 0190 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2747 0192 0C2B     		cmp	r3, #12
 2748 0194 ECD9     		bls	.L142
 691:.\Protocolo.c **** 		}
 692:.\Protocolo.c **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 2749              		.loc 1 692 0 is_stmt 1
 2750 0196 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2751 0198 5B42     		negs	r3, r3
 2752 019a DBB2     		uxtb	r3, r3
 2753 019c DBB2     		uxtb	r3, r3
 2754 019e 03F00F03 		and	r3, r3, #15
 2755 01a2 DBB2     		uxtb	r3, r3
 2756 01a4 63F01F03 		orn	r3, r3, #31
 2757 01a8 DBB2     		uxtb	r3, r3
 2758 01aa DBB2     		uxtb	r3, r3
 2759 01ac 7B76     		strb	r3, [r7, #25]
 693:.\Protocolo.c **** 		buffer[14]=0xF0;
 2760              		.loc 1 693 0
 2761 01ae F023     		movs	r3, #240
 2762 01b0 BB76     		strb	r3, [r7, #26]
 694:.\Protocolo.c **** 		size=14;
 2763              		.loc 1 694 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 63


 2764 01b2 0E23     		movs	r3, #14
 2765 01b4 FB77     		strb	r3, [r7, #31]
 2766              	.L138:
 695:.\Protocolo.c **** 	}
 696:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2767              		.loc 1 696 0
 2768 01b6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 697:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2769              		.loc 1 697 0
 2770 01ba FB79     		ldrb	r3, [r7, #7]
 2771 01bc 43F02003 		orr	r3, r3, #32
 2772 01c0 DBB2     		uxtb	r3, r3
 2773 01c2 1846     		mov	r0, r3
 2774 01c4 FFF7FEFF 		bl	Surtidor_PutChar
 698:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2775              		.loc 1 698 0
 2776 01c8 2A48     		ldr	r0, .L151+4
 2777 01ca FFF7FEFF 		bl	isr_1_StartEx
 699:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2778              		.loc 1 699 0
 2779 01ce FFF7FEFF 		bl	Timer_RxSurtidor_Start
 700:.\Protocolo.c ****     rx_timeout=0;
 2780              		.loc 1 700 0
 2781 01d2 294B     		ldr	r3, .L151+8
 2782 01d4 0022     		movs	r2, #0
 2783 01d6 1A70     		strb	r2, [r3]
 701:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2784              		.loc 1 701 0
 2785 01d8 0BE0     		b	.L143
 2786              	.L145:
 702:.\Protocolo.c **** 		if(rx_timeout==1){
 2787              		.loc 1 702 0
 2788 01da 274B     		ldr	r3, .L151+8
 2789 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2790 01de 012B     		cmp	r3, #1
 2791 01e0 07D1     		bne	.L143
 703:.\Protocolo.c **** 			isr_1_Stop();
 2792              		.loc 1 703 0
 2793 01e2 FFF7FEFF 		bl	isr_1_Stop
 704:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2794              		.loc 1 704 0
 2795 01e6 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 705:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2796              		.loc 1 705 0
 2797 01ea FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 706:.\Protocolo.c **** 			return 0;
 2798              		.loc 1 706 0
 2799 01ee 0023     		movs	r3, #0
 2800 01f0 39E0     		b	.L150
 2801              	.L143:
 701:.\Protocolo.c **** 		if(rx_timeout==1){
 2802              		.loc 1 701 0
 2803 01f2 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2804 01f6 0346     		mov	r3, r0
 2805 01f8 002B     		cmp	r3, #0
 2806 01fa EED0     		beq	.L145
 707:.\Protocolo.c **** 		}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 64


 708:.\Protocolo.c **** 	}
 709:.\Protocolo.c **** 	isr_1_Stop();
 2807              		.loc 1 709 0
 2808 01fc FFF7FEFF 		bl	isr_1_Stop
 710:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();
 2809              		.loc 1 710 0
 2810 0200 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 711:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2811              		.loc 1 711 0
 2812 0204 FFF7FEFF 		bl	Surtidor_ReadRxData
 2813 0208 0346     		mov	r3, r0
 2814 020a 1A46     		mov	r2, r3
 2815 020c FB79     		ldrb	r3, [r7, #7]
 2816 020e 63F02F03 		orn	r3, r3, #47
 2817 0212 DBB2     		uxtb	r3, r3
 2818 0214 9A42     		cmp	r2, r3
 2819 0216 25D1     		bne	.L146
 712:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2820              		.loc 1 712 0
 2821 0218 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 713:.\Protocolo.c **** 		CyDelay(10);
 2822              		.loc 1 713 0
 2823 021c 0A20     		movs	r0, #10
 2824 021e FFF7FEFF 		bl	CyDelay
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2825              		.loc 1 714 0
 2826 0222 0023     		movs	r3, #0
 2827 0224 BB77     		strb	r3, [r7, #30]
 2828 0226 0BE0     		b	.L147
 2829              	.L148:
 715:.\Protocolo.c ****            	Surtidor_PutChar(buffer[x]);
 2830              		.loc 1 715 0 discriminator 3
 2831 0228 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2832 022a 07F12002 		add	r2, r7, #32
 2833 022e 1344     		add	r3, r3, r2
 2834 0230 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2835 0234 1846     		mov	r0, r3
 2836 0236 FFF7FEFF 		bl	Surtidor_PutChar
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2837              		.loc 1 714 0 discriminator 3
 2838 023a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2839 023c 0133     		adds	r3, r3, #1
 2840 023e BB77     		strb	r3, [r7, #30]
 2841              	.L147:
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2842              		.loc 1 714 0 is_stmt 0 discriminator 1
 2843 0240 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2844 0242 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2845 0244 9A42     		cmp	r2, r3
 2846 0246 EFD9     		bls	.L148
 716:.\Protocolo.c ****         }
 717:.\Protocolo.c **** 		CyDelay(50);		
 2847              		.loc 1 717 0 is_stmt 1
 2848 0248 3220     		movs	r0, #50
 2849 024a FFF7FEFF 		bl	CyDelay
 718:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2850              		.loc 1 718 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 65


 2851 024e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2852 0250 1846     		mov	r0, r3
 2853 0252 FFF7FEFF 		bl	get_estado
 2854 0256 0346     		mov	r3, r0
 2855 0258 002B     		cmp	r3, #0
 2856 025a 01D1     		bne	.L149
 719:.\Protocolo.c **** 			return 0;
 2857              		.loc 1 719 0
 2858 025c 0023     		movs	r3, #0
 2859 025e 02E0     		b	.L150
 2860              	.L149:
 720:.\Protocolo.c **** 		}
 721:.\Protocolo.c **** 		else{
 722:.\Protocolo.c **** 			return 1;
 2861              		.loc 1 722 0
 2862 0260 0123     		movs	r3, #1
 2863 0262 00E0     		b	.L150
 2864              	.L146:
 723:.\Protocolo.c **** 		}
 724:.\Protocolo.c **** 	}
 725:.\Protocolo.c **** 	else{
 726:.\Protocolo.c **** 		return 0;
 2865              		.loc 1 726 0
 2866 0264 0023     		movs	r3, #0
 2867              	.L150:
 727:.\Protocolo.c **** 	}
 728:.\Protocolo.c **** }
 2868              		.loc 1 728 0 discriminator 1
 2869 0266 1846     		mov	r0, r3
 2870 0268 2037     		adds	r7, r7, #32
 2871              		.cfi_def_cfa_offset 8
 2872 026a BD46     		mov	sp, r7
 2873              		.cfi_def_cfa_register 13
 2874              		@ sp needed
 2875 026c 80BD     		pop	{r7, pc}
 2876              	.L152:
 2877 026e 00BF     		.align	2
 2878              	.L151:
 2879 0270 00000000 		.word	version
 2880 0274 00000000 		.word	Rx_Surtidor
 2881 0278 00000000 		.word	rx_timeout
 2882              		.cfi_endproc
 2883              	.LFE71:
 2884              		.size	cambiar_precio, .-cambiar_precio
 2885              		.section	.text.totales,"ax",%progbits
 2886              		.align	2
 2887              		.global	totales
 2888              		.thumb
 2889              		.thumb_func
 2890              		.type	totales, %function
 2891              	totales:
 2892              	.LFB72:
 729:.\Protocolo.c **** 
 730:.\Protocolo.c **** /*
 731:.\Protocolo.c **** ***************************************************************************************************
 732:.\Protocolo.c **** *                                         uint8 totales(uint8 dir)
 733:.\Protocolo.c **** *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 66


 734:.\Protocolo.c **** * Description : 
 735:.\Protocolo.c **** *               
 736:.\Protocolo.c **** *
 737:.\Protocolo.c **** * Argument(s) : none
 738:.\Protocolo.c **** *
 739:.\Protocolo.c **** * Return(s)   : none
 740:.\Protocolo.c **** *
 741:.\Protocolo.c **** * Caller(s)   : 
 742:.\Protocolo.c **** *
 743:.\Protocolo.c **** * Note(s)     : none.
 744:.\Protocolo.c **** ***************************************************************************************************
 745:.\Protocolo.c **** */
 746:.\Protocolo.c **** uint8 totales(uint8 dir, uint8 nmangueras){
 2893              		.loc 1 746 0
 2894              		.cfi_startproc
 2895              		@ args = 0, pretend = 0, frame = 16
 2896              		@ frame_needed = 1, uses_anonymous_args = 0
 2897 0000 80B5     		push	{r7, lr}
 2898              		.cfi_def_cfa_offset 8
 2899              		.cfi_offset 7, -8
 2900              		.cfi_offset 14, -4
 2901 0002 84B0     		sub	sp, sp, #16
 2902              		.cfi_def_cfa_offset 24
 2903 0004 00AF     		add	r7, sp, #0
 2904              		.cfi_def_cfa_register 7
 2905 0006 0346     		mov	r3, r0
 2906 0008 0A46     		mov	r2, r1
 2907 000a FB71     		strb	r3, [r7, #7]
 2908 000c 1346     		mov	r3, r2
 2909 000e BB71     		strb	r3, [r7, #6]
 747:.\Protocolo.c **** 	uint8 x,y;
 748:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2910              		.loc 1 748 0
 2911 0010 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 749:.\Protocolo.c ****     Surtidor_PutChar(0x50|dir);
 2912              		.loc 1 749 0
 2913 0014 FB79     		ldrb	r3, [r7, #7]
 2914 0016 43F05003 		orr	r3, r3, #80
 2915 001a DBB2     		uxtb	r3, r3
 2916 001c 1846     		mov	r0, r3
 2917 001e FFF7FEFF 		bl	Surtidor_PutChar
 750:.\Protocolo.c ****     rx_timeout=0;
 2918              		.loc 1 750 0
 2919 0022 B04B     		ldr	r3, .L355
 2920 0024 0022     		movs	r2, #0
 2921 0026 1A70     		strb	r2, [r3]
 751:.\Protocolo.c **** 	CyDelay(300);
 2922              		.loc 1 751 0
 2923 0028 4FF49670 		mov	r0, #300
 2924 002c FFF7FEFF 		bl	CyDelay
 752:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 2925              		.loc 1 752 0
 2926 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2927 0034 0346     		mov	r3, r0
 2928 0036 002B     		cmp	r3, #0
 2929 0038 01F02280 		beq	.L154
 753:.\Protocolo.c **** 		if(dir==lado1.dir){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 67


 2930              		.loc 1 753 0
 2931 003c AA4B     		ldr	r3, .L355+4
 2932 003e 1B78     		ldrb	r3, [r3]
 2933 0040 DBB2     		uxtb	r3, r3
 2934 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2935 0044 9A42     		cmp	r2, r3
 2936 0046 40F01F84 		bne	.L155
 754:.\Protocolo.c **** 			if(version[1]!=7){
 2937              		.loc 1 754 0
 2938 004a A84B     		ldr	r3, .L355+8
 2939 004c 5B78     		ldrb	r3, [r3, #1]
 2940 004e DBB2     		uxtb	r3, r3
 2941 0050 072B     		cmp	r3, #7
 2942 0052 00F00C82 		beq	.L156
 755:.\Protocolo.c **** 				CyDelay(900);
 2943              		.loc 1 755 0
 2944 0056 4FF46170 		mov	r0, #900
 2945 005a FFF7FEFF 		bl	CyDelay
 756:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 2946              		.loc 1 756 0
 2947 005e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2948 0062 0346     		mov	r3, r0
 2949 0064 FB73     		strb	r3, [r7, #15]
 757:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 2950              		.loc 1 757 0
 2951 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2952 0068 222B     		cmp	r3, #34
 2953 006a 06D0     		beq	.L157
 2954              		.loc 1 757 0 is_stmt 0 discriminator 1
 2955 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2956 006e 402B     		cmp	r3, #64
 2957 0070 03D0     		beq	.L157
 2958              		.loc 1 757 0 discriminator 2
 2959 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2960 0074 5E2B     		cmp	r3, #94
 2961 0076 40F0F581 		bne	.L158
 2962              	.L157:
 758:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9))  
 2963              		.loc 1 758 0 is_stmt 1
 2964 007a 9D4B     		ldr	r3, .L355+12
 2965 007c 1B78     		ldrb	r3, [r3]
 2966 007e DBB2     		uxtb	r3, r3
 2967 0080 FF2B     		cmp	r3, #255
 2968 0082 40F0EA81 		bne	.L159
 2969              		.loc 1 758 0 is_stmt 0 discriminator 1
 2970 0086 9A4B     		ldr	r3, .L355+12
 2971 0088 5B78     		ldrb	r3, [r3, #1]
 2972 008a DBB2     		uxtb	r3, r3
 2973 008c F62B     		cmp	r3, #246
 2974 008e 40F0E481 		bne	.L159
 2975              		.loc 1 758 0 discriminator 2
 2976 0092 974B     		ldr	r3, .L355+12
 2977 0094 DB78     		ldrb	r3, [r3, #3]
 2978 0096 DBB2     		uxtb	r3, r3
 2979 0098 F92B     		cmp	r3, #249
 2980 009a 40F0DE81 		bne	.L159
 759:.\Protocolo.c ****                     {                     
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 68


 760:.\Protocolo.c ****                     	for(y=0;y<=2;y++){// MOD: inicializa valores en cero
 2981              		.loc 1 760 0 is_stmt 1
 2982 009e 0023     		movs	r3, #0
 2983 00a0 BB73     		strb	r3, [r7, #14]
 2984 00a2 16E0     		b	.L160
 2985              	.L163:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2986              		.loc 1 761 0
 2987 00a4 0023     		movs	r3, #0
 2988 00a6 FB73     		strb	r3, [r7, #15]
 2989 00a8 0DE0     		b	.L161
 2990              	.L162:
 762:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 2991              		.loc 1 762 0 discriminator 3
 2992 00aa BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2993 00ac F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 2994 00ae 8E48     		ldr	r0, .L355+4
 2995 00b0 1346     		mov	r3, r2
 2996 00b2 5B00     		lsls	r3, r3, #1
 2997 00b4 1344     		add	r3, r3, r2
 2998 00b6 DB00     		lsls	r3, r3, #3
 2999 00b8 0B44     		add	r3, r3, r1
 3000 00ba 0344     		add	r3, r3, r0
 3001 00bc 0022     		movs	r2, #0
 3002 00be 9A70     		strb	r2, [r3, #2]
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3003              		.loc 1 761 0 discriminator 3
 3004 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3005 00c2 0133     		adds	r3, r3, #1
 3006 00c4 FB73     		strb	r3, [r7, #15]
 3007              	.L161:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3008              		.loc 1 761 0 is_stmt 0 discriminator 1
 3009 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3010 00c8 172B     		cmp	r3, #23
 3011 00ca EED9     		bls	.L162
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3012              		.loc 1 760 0 is_stmt 1 discriminator 2
 3013 00cc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3014 00ce 0133     		adds	r3, r3, #1
 3015 00d0 BB73     		strb	r3, [r7, #14]
 3016              	.L160:
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3017              		.loc 1 760 0 is_stmt 0 discriminator 1
 3018 00d2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3019 00d4 022B     		cmp	r3, #2
 3020 00d6 E5D9     		bls	.L163
 763:.\Protocolo.c ****                     		}
 764:.\Protocolo.c ****                     	}                        
 765:.\Protocolo.c **** 						for(x=0;x<=7;x++){///producto 1 6xto digito
 3021              		.loc 1 765 0 is_stmt 1
 3022 00d8 0023     		movs	r3, #0
 3023 00da FB73     		strb	r3, [r7, #15]
 3024 00dc 21E0     		b	.L164
 3025              	.L168:
 766:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3026              		.loc 1 766 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 69


 3027 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3028 00e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3029 00e2 0432     		adds	r2, r2, #4
 3030 00e4 8249     		ldr	r1, .L355+12
 3031 00e6 8A5C     		ldrb	r2, [r1, r2]
 3032 00e8 D1B2     		uxtb	r1, r2
 3033 00ea 7F4A     		ldr	r2, .L355+4
 3034 00ec 1344     		add	r3, r3, r2
 3035 00ee 0A46     		mov	r2, r1
 3036 00f0 9A70     		strb	r2, [r3, #2]
 767:.\Protocolo.c ****                             ///////////''modificacion actual''//// Se añade esta verificacion para
 768:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3037              		.loc 1 768 0
 3038 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3039 00f4 7C4A     		ldr	r2, .L355+4
 3040 00f6 1344     		add	r3, r3, r2
 3041 00f8 9B78     		ldrb	r3, [r3, #2]
 3042 00fa DBB2     		uxtb	r3, r3
 3043 00fc 002B     		cmp	r3, #0
 3044 00fe 08D0     		beq	.L165
 3045              		.loc 1 768 0 is_stmt 0 discriminator 1
 3046 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3047 0102 794A     		ldr	r2, .L355+4
 3048 0104 1344     		add	r3, r3, r2
 3049 0106 9B78     		ldrb	r3, [r3, #2]
 3050 0108 DBB2     		uxtb	r3, r3
 3051 010a 03F0F003 		and	r3, r3, #240
 3052 010e E02B     		cmp	r3, #224
 3053 0110 04D0     		beq	.L166
 3054              	.L165:
 769:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3055              		.loc 1 769 0 is_stmt 1
 3056 0112 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 770:.\Protocolo.c **** 								return 0;
 3057              		.loc 1 770 0
 3058 0116 0023     		movs	r3, #0
 3059 0118 00F0B3BF 		b	.L167
 3060              	.L166:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3061              		.loc 1 765 0 discriminator 2
 3062 011c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3063 011e 0133     		adds	r3, r3, #1
 3064 0120 FB73     		strb	r3, [r7, #15]
 3065              	.L164:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3066              		.loc 1 765 0 is_stmt 0 discriminator 1
 3067 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3068 0124 072B     		cmp	r3, #7
 3069 0126 DAD9     		bls	.L168
 771:.\Protocolo.c **** 							}
 772:.\Protocolo.c ****                             ///////////''modificacion actual''////
 773:.\Protocolo.c **** 						}
 774:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3070              		.loc 1 774 0 is_stmt 1
 3071 0128 0023     		movs	r3, #0
 3072 012a FB73     		strb	r3, [r7, #15]
 3073 012c 24E0     		b	.L169
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 70


 3074              	.L172:
 775:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3075              		.loc 1 775 0
 3076 012e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3077 0130 0C33     		adds	r3, r3, #12
 3078 0132 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3079 0134 0D32     		adds	r2, r2, #13
 3080 0136 6E49     		ldr	r1, .L355+12
 3081 0138 8A5C     		ldrb	r2, [r1, r2]
 3082 013a D1B2     		uxtb	r1, r2
 3083 013c 6A4A     		ldr	r2, .L355+4
 3084 013e 1344     		add	r3, r3, r2
 3085 0140 0A46     		mov	r2, r1
 3086 0142 9A70     		strb	r2, [r3, #2]
 776:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3087              		.loc 1 776 0
 3088 0144 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3089 0146 0C33     		adds	r3, r3, #12
 3090 0148 674A     		ldr	r2, .L355+4
 3091 014a 1344     		add	r3, r3, r2
 3092 014c 9B78     		ldrb	r3, [r3, #2]
 3093 014e DBB2     		uxtb	r3, r3
 3094 0150 002B     		cmp	r3, #0
 3095 0152 09D0     		beq	.L170
 3096              		.loc 1 776 0 is_stmt 0 discriminator 1
 3097 0154 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3098 0156 0C33     		adds	r3, r3, #12
 3099 0158 634A     		ldr	r2, .L355+4
 3100 015a 1344     		add	r3, r3, r2
 3101 015c 9B78     		ldrb	r3, [r3, #2]
 3102 015e DBB2     		uxtb	r3, r3
 3103 0160 03F0F003 		and	r3, r3, #240
 3104 0164 E02B     		cmp	r3, #224
 3105 0166 04D0     		beq	.L171
 3106              	.L170:
 777:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3107              		.loc 1 777 0 is_stmt 1
 3108 0168 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 778:.\Protocolo.c **** 								return 0;
 3109              		.loc 1 778 0
 3110 016c 0023     		movs	r3, #0
 3111 016e 00F088BF 		b	.L167
 3112              	.L171:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3113              		.loc 1 774 0 discriminator 2
 3114 0172 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3115 0174 0133     		adds	r3, r3, #1
 3116 0176 FB73     		strb	r3, [r7, #15]
 3117              	.L169:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3118              		.loc 1 774 0 is_stmt 0 discriminator 1
 3119 0178 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3120 017a 072B     		cmp	r3, #7
 3121 017c D7D9     		bls	.L172
 779:.\Protocolo.c **** 							}							
 780:.\Protocolo.c **** 						}
 781:.\Protocolo.c **** 						for(x=0;x<=3;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 71


 3122              		.loc 1 781 0 is_stmt 1
 3123 017e 0023     		movs	r3, #0
 3124 0180 FB73     		strb	r3, [r7, #15]
 3125 0182 0DE0     		b	.L173
 3126              	.L174:
 782:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3127              		.loc 1 782 0 discriminator 3
 3128 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3129 0186 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3130 0188 1632     		adds	r2, r2, #22
 3131 018a 5949     		ldr	r1, .L355+12
 3132 018c 8A5C     		ldrb	r2, [r1, r2]
 3133 018e D1B2     		uxtb	r1, r2
 3134 0190 554A     		ldr	r2, .L355+4
 3135 0192 1344     		add	r3, r3, r2
 3136 0194 0A46     		mov	r2, r1
 3137 0196 83F84A20 		strb	r2, [r3, #74]
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3138              		.loc 1 781 0 discriminator 3
 3139 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3140 019c 0133     		adds	r3, r3, #1
 3141 019e FB73     		strb	r3, [r7, #15]
 3142              	.L173:
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3143              		.loc 1 781 0 is_stmt 0 discriminator 1
 3144 01a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3145 01a2 032B     		cmp	r3, #3
 3146 01a4 EED9     		bls	.L174
 783:.\Protocolo.c **** 						}					
 784:.\Protocolo.c **** 						if(nmangueras==2){
 3147              		.loc 1 784 0 is_stmt 1
 3148 01a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3149 01a8 022B     		cmp	r3, #2
 3150 01aa 6BD1     		bne	.L175
 785:.\Protocolo.c **** 							for(x=0;x<=7;x++){ ///producto 2
 3151              		.loc 1 785 0
 3152 01ac 0023     		movs	r3, #0
 3153 01ae FB73     		strb	r3, [r7, #15]
 3154 01b0 21E0     		b	.L176
 3155              	.L179:
 786:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3156              		.loc 1 786 0
 3157 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3158 01b4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3159 01b6 2232     		adds	r2, r2, #34
 3160 01b8 4D49     		ldr	r1, .L355+12
 3161 01ba 8A5C     		ldrb	r2, [r1, r2]
 3162 01bc D1B2     		uxtb	r1, r2
 3163 01be 4A4A     		ldr	r2, .L355+4
 3164 01c0 1344     		add	r3, r3, r2
 3165 01c2 0A46     		mov	r2, r1
 3166 01c4 9A76     		strb	r2, [r3, #26]
 787:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3167              		.loc 1 787 0
 3168 01c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3169 01c8 474A     		ldr	r2, .L355+4
 3170 01ca 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 72


 3171 01cc 9B7E     		ldrb	r3, [r3, #26]
 3172 01ce DBB2     		uxtb	r3, r3
 3173 01d0 002B     		cmp	r3, #0
 3174 01d2 08D0     		beq	.L177
 3175              		.loc 1 787 0 is_stmt 0 discriminator 1
 3176 01d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3177 01d6 444A     		ldr	r2, .L355+4
 3178 01d8 1344     		add	r3, r3, r2
 3179 01da 9B7E     		ldrb	r3, [r3, #26]
 3180 01dc DBB2     		uxtb	r3, r3
 3181 01de 03F0F003 		and	r3, r3, #240
 3182 01e2 E02B     		cmp	r3, #224
 3183 01e4 04D0     		beq	.L178
 3184              	.L177:
 788:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3185              		.loc 1 788 0 is_stmt 1
 3186 01e6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 789:.\Protocolo.c **** 									return 0;
 3187              		.loc 1 789 0
 3188 01ea 0023     		movs	r3, #0
 3189 01ec 00F049BF 		b	.L167
 3190              	.L178:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3191              		.loc 1 785 0 discriminator 2
 3192 01f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3193 01f2 0133     		adds	r3, r3, #1
 3194 01f4 FB73     		strb	r3, [r7, #15]
 3195              	.L176:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3196              		.loc 1 785 0 is_stmt 0 discriminator 1
 3197 01f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3198 01f8 072B     		cmp	r3, #7
 3199 01fa DAD9     		bls	.L179
 790:.\Protocolo.c **** 								}								
 791:.\Protocolo.c **** 							}
 792:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3200              		.loc 1 792 0 is_stmt 1
 3201 01fc 0023     		movs	r3, #0
 3202 01fe FB73     		strb	r3, [r7, #15]
 3203 0200 24E0     		b	.L180
 3204              	.L183:
 793:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3205              		.loc 1 793 0
 3206 0202 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3207 0204 0C33     		adds	r3, r3, #12
 3208 0206 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3209 0208 2B32     		adds	r2, r2, #43
 3210 020a 3949     		ldr	r1, .L355+12
 3211 020c 8A5C     		ldrb	r2, [r1, r2]
 3212 020e D1B2     		uxtb	r1, r2
 3213 0210 354A     		ldr	r2, .L355+4
 3214 0212 1344     		add	r3, r3, r2
 3215 0214 0A46     		mov	r2, r1
 3216 0216 9A76     		strb	r2, [r3, #26]
 794:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3217              		.loc 1 794 0
 3218 0218 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 73


 3219 021a 0C33     		adds	r3, r3, #12
 3220 021c 324A     		ldr	r2, .L355+4
 3221 021e 1344     		add	r3, r3, r2
 3222 0220 9B7E     		ldrb	r3, [r3, #26]
 3223 0222 DBB2     		uxtb	r3, r3
 3224 0224 002B     		cmp	r3, #0
 3225 0226 09D0     		beq	.L181
 3226              		.loc 1 794 0 is_stmt 0 discriminator 1
 3227 0228 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3228 022a 0C33     		adds	r3, r3, #12
 3229 022c 2E4A     		ldr	r2, .L355+4
 3230 022e 1344     		add	r3, r3, r2
 3231 0230 9B7E     		ldrb	r3, [r3, #26]
 3232 0232 DBB2     		uxtb	r3, r3
 3233 0234 03F0F003 		and	r3, r3, #240
 3234 0238 E02B     		cmp	r3, #224
 3235 023a 04D0     		beq	.L182
 3236              	.L181:
 795:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3237              		.loc 1 795 0 is_stmt 1
 3238 023c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 796:.\Protocolo.c **** 									return 0;
 3239              		.loc 1 796 0
 3240 0240 0023     		movs	r3, #0
 3241 0242 00F01EBF 		b	.L167
 3242              	.L182:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3243              		.loc 1 792 0 discriminator 2
 3244 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3245 0248 0133     		adds	r3, r3, #1
 3246 024a FB73     		strb	r3, [r7, #15]
 3247              	.L180:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3248              		.loc 1 792 0 is_stmt 0 discriminator 1
 3249 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3250 024e 072B     		cmp	r3, #7
 3251 0250 D7D9     		bls	.L183
 797:.\Protocolo.c **** 								}								
 798:.\Protocolo.c **** 							}
 799:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3252              		.loc 1 799 0 is_stmt 1
 3253 0252 0023     		movs	r3, #0
 3254 0254 FB73     		strb	r3, [r7, #15]
 3255 0256 0DE0     		b	.L184
 3256              	.L185:
 800:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3257              		.loc 1 800 0 discriminator 3
 3258 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3259 025a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3260 025c 3432     		adds	r2, r2, #52
 3261 025e 2449     		ldr	r1, .L355+12
 3262 0260 8A5C     		ldrb	r2, [r1, r2]
 3263 0262 D1B2     		uxtb	r1, r2
 3264 0264 204A     		ldr	r2, .L355+4
 3265 0266 1344     		add	r3, r3, r2
 3266 0268 0A46     		mov	r2, r1
 3267 026a 83F84F20 		strb	r2, [r3, #79]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 74


 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3268              		.loc 1 799 0 discriminator 3
 3269 026e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3270 0270 0133     		adds	r3, r3, #1
 3271 0272 FB73     		strb	r3, [r7, #15]
 3272              	.L184:
 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3273              		.loc 1 799 0 is_stmt 0 discriminator 1
 3274 0274 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3275 0276 032B     		cmp	r3, #3
 3276 0278 EED9     		bls	.L185
 801:.\Protocolo.c **** 							}	
 802:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3277              		.loc 1 802 0 is_stmt 1
 3278 027a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 803:.\Protocolo.c ****     						return 2;                            
 3279              		.loc 1 803 0
 3280 027e 0223     		movs	r3, #2
 3281 0280 00F0FFBE 		b	.L167
 3282              	.L175:
 804:.\Protocolo.c **** 						}
 805:.\Protocolo.c **** 						if(nmangueras==3){
 3283              		.loc 1 805 0
 3284 0284 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3285 0286 032B     		cmp	r3, #3
 3286 0288 40F0E280 		bne	.L186
 806:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 2
 3287              		.loc 1 806 0
 3288 028c 0023     		movs	r3, #0
 3289 028e FB73     		strb	r3, [r7, #15]
 3290 0290 21E0     		b	.L187
 3291              	.L190:
 807:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3292              		.loc 1 807 0
 3293 0292 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3294 0294 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3295 0296 2232     		adds	r2, r2, #34
 3296 0298 1549     		ldr	r1, .L355+12
 3297 029a 8A5C     		ldrb	r2, [r1, r2]
 3298 029c D1B2     		uxtb	r1, r2
 3299 029e 124A     		ldr	r2, .L355+4
 3300 02a0 1344     		add	r3, r3, r2
 3301 02a2 0A46     		mov	r2, r1
 3302 02a4 9A76     		strb	r2, [r3, #26]
 808:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3303              		.loc 1 808 0
 3304 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3305 02a8 0F4A     		ldr	r2, .L355+4
 3306 02aa 1344     		add	r3, r3, r2
 3307 02ac 9B7E     		ldrb	r3, [r3, #26]
 3308 02ae DBB2     		uxtb	r3, r3
 3309 02b0 002B     		cmp	r3, #0
 3310 02b2 08D0     		beq	.L188
 3311              		.loc 1 808 0 is_stmt 0 discriminator 1
 3312 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3313 02b6 0C4A     		ldr	r2, .L355+4
 3314 02b8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 75


 3315 02ba 9B7E     		ldrb	r3, [r3, #26]
 3316 02bc DBB2     		uxtb	r3, r3
 3317 02be 03F0F003 		and	r3, r3, #240
 3318 02c2 E02B     		cmp	r3, #224
 3319 02c4 04D0     		beq	.L189
 3320              	.L188:
 809:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3321              		.loc 1 809 0 is_stmt 1
 3322 02c6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 810:.\Protocolo.c **** 									return 0;
 3323              		.loc 1 810 0
 3324 02ca 0023     		movs	r3, #0
 3325 02cc 00F0D9BE 		b	.L167
 3326              	.L189:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3327              		.loc 1 806 0 discriminator 2
 3328 02d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3329 02d2 0133     		adds	r3, r3, #1
 3330 02d4 FB73     		strb	r3, [r7, #15]
 3331              	.L187:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3332              		.loc 1 806 0 is_stmt 0 discriminator 1
 3333 02d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3334 02d8 072B     		cmp	r3, #7
 3335 02da DAD9     		bls	.L190
 811:.\Protocolo.c **** 								}								
 812:.\Protocolo.c **** 							}
 813:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3336              		.loc 1 813 0 is_stmt 1
 3337 02dc 0023     		movs	r3, #0
 3338 02de FB73     		strb	r3, [r7, #15]
 3339 02e0 2DE0     		b	.L191
 3340              	.L356:
 3341 02e2 00BF     		.align	2
 3342              	.L355:
 3343 02e4 00000000 		.word	rx_timeout
 3344 02e8 00000000 		.word	lado1
 3345 02ec 00000000 		.word	version
 3346 02f0 00000000 		.word	Surtidor_rxBuffer
 3347              	.L194:
 814:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3348              		.loc 1 814 0
 3349 02f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3350 02f6 0C33     		adds	r3, r3, #12
 3351 02f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3352 02fa 2B32     		adds	r2, r2, #43
 3353 02fc B349     		ldr	r1, .L357
 3354 02fe 8A5C     		ldrb	r2, [r1, r2]
 3355 0300 D1B2     		uxtb	r1, r2
 3356 0302 B34A     		ldr	r2, .L357+4
 3357 0304 1344     		add	r3, r3, r2
 3358 0306 0A46     		mov	r2, r1
 3359 0308 9A76     		strb	r2, [r3, #26]
 815:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3360              		.loc 1 815 0
 3361 030a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3362 030c 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 76


 3363 030e B04A     		ldr	r2, .L357+4
 3364 0310 1344     		add	r3, r3, r2
 3365 0312 9B7E     		ldrb	r3, [r3, #26]
 3366 0314 DBB2     		uxtb	r3, r3
 3367 0316 002B     		cmp	r3, #0
 3368 0318 09D0     		beq	.L192
 3369              		.loc 1 815 0 is_stmt 0 discriminator 1
 3370 031a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3371 031c 0C33     		adds	r3, r3, #12
 3372 031e AC4A     		ldr	r2, .L357+4
 3373 0320 1344     		add	r3, r3, r2
 3374 0322 9B7E     		ldrb	r3, [r3, #26]
 3375 0324 DBB2     		uxtb	r3, r3
 3376 0326 03F0F003 		and	r3, r3, #240
 3377 032a E02B     		cmp	r3, #224
 3378 032c 04D0     		beq	.L193
 3379              	.L192:
 816:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3380              		.loc 1 816 0 is_stmt 1
 3381 032e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 817:.\Protocolo.c **** 									return 0;
 3382              		.loc 1 817 0
 3383 0332 0023     		movs	r3, #0
 3384 0334 00F0A5BE 		b	.L167
 3385              	.L193:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3386              		.loc 1 813 0 discriminator 2
 3387 0338 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3388 033a 0133     		adds	r3, r3, #1
 3389 033c FB73     		strb	r3, [r7, #15]
 3390              	.L191:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3391              		.loc 1 813 0 is_stmt 0 discriminator 1
 3392 033e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3393 0340 072B     		cmp	r3, #7
 3394 0342 D7D9     		bls	.L194
 818:.\Protocolo.c **** 								}								
 819:.\Protocolo.c **** 							}
 820:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3395              		.loc 1 820 0 is_stmt 1
 3396 0344 0023     		movs	r3, #0
 3397 0346 FB73     		strb	r3, [r7, #15]
 3398 0348 0DE0     		b	.L195
 3399              	.L196:
 821:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3400              		.loc 1 821 0 discriminator 3
 3401 034a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3402 034c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3403 034e 3432     		adds	r2, r2, #52
 3404 0350 9E49     		ldr	r1, .L357
 3405 0352 8A5C     		ldrb	r2, [r1, r2]
 3406 0354 D1B2     		uxtb	r1, r2
 3407 0356 9E4A     		ldr	r2, .L357+4
 3408 0358 1344     		add	r3, r3, r2
 3409 035a 0A46     		mov	r2, r1
 3410 035c 83F84F20 		strb	r2, [r3, #79]
 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 77


 3411              		.loc 1 820 0 discriminator 3
 3412 0360 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3413 0362 0133     		adds	r3, r3, #1
 3414 0364 FB73     		strb	r3, [r7, #15]
 3415              	.L195:
 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3416              		.loc 1 820 0 is_stmt 0 discriminator 1
 3417 0366 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3418 0368 032B     		cmp	r3, #3
 3419 036a EED9     		bls	.L196
 822:.\Protocolo.c **** 							}					
 823:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 3
 3420              		.loc 1 823 0 is_stmt 1
 3421 036c 0023     		movs	r3, #0
 3422 036e FB73     		strb	r3, [r7, #15]
 3423 0370 24E0     		b	.L197
 3424              	.L200:
 824:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3425              		.loc 1 824 0
 3426 0372 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3427 0374 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3428 0376 4032     		adds	r2, r2, #64
 3429 0378 9449     		ldr	r1, .L357
 3430 037a 8A5C     		ldrb	r2, [r1, r2]
 3431 037c D1B2     		uxtb	r1, r2
 3432 037e 944A     		ldr	r2, .L357+4
 3433 0380 1344     		add	r3, r3, r2
 3434 0382 0A46     		mov	r2, r1
 3435 0384 83F83220 		strb	r2, [r3, #50]
 825:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 3436              		.loc 1 825 0
 3437 0388 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3438 038a 914A     		ldr	r2, .L357+4
 3439 038c 1344     		add	r3, r3, r2
 3440 038e 93F83230 		ldrb	r3, [r3, #50]
 3441 0392 DBB2     		uxtb	r3, r3
 3442 0394 002B     		cmp	r3, #0
 3443 0396 09D0     		beq	.L198
 3444              		.loc 1 825 0 is_stmt 0 discriminator 1
 3445 0398 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3446 039a 8D4A     		ldr	r2, .L357+4
 3447 039c 1344     		add	r3, r3, r2
 3448 039e 93F83230 		ldrb	r3, [r3, #50]
 3449 03a2 DBB2     		uxtb	r3, r3
 3450 03a4 03F0F003 		and	r3, r3, #240
 3451 03a8 E02B     		cmp	r3, #224
 3452 03aa 04D0     		beq	.L199
 3453              	.L198:
 826:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3454              		.loc 1 826 0 is_stmt 1
 3455 03ac FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 827:.\Protocolo.c **** 									return 0;
 3456              		.loc 1 827 0
 3457 03b0 0023     		movs	r3, #0
 3458 03b2 00F066BE 		b	.L167
 3459              	.L199:
 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 78


 3460              		.loc 1 823 0 discriminator 2
 3461 03b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3462 03b8 0133     		adds	r3, r3, #1
 3463 03ba FB73     		strb	r3, [r7, #15]
 3464              	.L197:
 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3465              		.loc 1 823 0 is_stmt 0 discriminator 1
 3466 03bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3467 03be 072B     		cmp	r3, #7
 3468 03c0 D7D9     		bls	.L200
 828:.\Protocolo.c **** 								}								
 829:.\Protocolo.c **** 							}
 830:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3469              		.loc 1 830 0 is_stmt 1
 3470 03c2 0023     		movs	r3, #0
 3471 03c4 FB73     		strb	r3, [r7, #15]
 3472 03c6 27E0     		b	.L201
 3473              	.L204:
 831:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3474              		.loc 1 831 0
 3475 03c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3476 03ca 0C33     		adds	r3, r3, #12
 3477 03cc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3478 03ce 4932     		adds	r2, r2, #73
 3479 03d0 7E49     		ldr	r1, .L357
 3480 03d2 8A5C     		ldrb	r2, [r1, r2]
 3481 03d4 D1B2     		uxtb	r1, r2
 3482 03d6 7E4A     		ldr	r2, .L357+4
 3483 03d8 1344     		add	r3, r3, r2
 3484 03da 0A46     		mov	r2, r1
 3485 03dc 83F83220 		strb	r2, [r3, #50]
 832:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 3486              		.loc 1 832 0
 3487 03e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3488 03e2 0C33     		adds	r3, r3, #12
 3489 03e4 7A4A     		ldr	r2, .L357+4
 3490 03e6 1344     		add	r3, r3, r2
 3491 03e8 93F83230 		ldrb	r3, [r3, #50]
 3492 03ec DBB2     		uxtb	r3, r3
 3493 03ee 002B     		cmp	r3, #0
 3494 03f0 0AD0     		beq	.L202
 3495              		.loc 1 832 0 is_stmt 0 discriminator 1
 3496 03f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3497 03f4 0C33     		adds	r3, r3, #12
 3498 03f6 764A     		ldr	r2, .L357+4
 3499 03f8 1344     		add	r3, r3, r2
 3500 03fa 93F83230 		ldrb	r3, [r3, #50]
 3501 03fe DBB2     		uxtb	r3, r3
 3502 0400 03F0F003 		and	r3, r3, #240
 3503 0404 E02B     		cmp	r3, #224
 3504 0406 04D0     		beq	.L203
 3505              	.L202:
 833:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3506              		.loc 1 833 0 is_stmt 1
 3507 0408 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 834:.\Protocolo.c **** 									return 0;
 3508              		.loc 1 834 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 79


 3509 040c 0023     		movs	r3, #0
 3510 040e 00F038BE 		b	.L167
 3511              	.L203:
 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3512              		.loc 1 830 0 discriminator 2
 3513 0412 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3514 0414 0133     		adds	r3, r3, #1
 3515 0416 FB73     		strb	r3, [r7, #15]
 3516              	.L201:
 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3517              		.loc 1 830 0 is_stmt 0 discriminator 1
 3518 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3519 041a 072B     		cmp	r3, #7
 3520 041c D4D9     		bls	.L204
 835:.\Protocolo.c **** 								}								
 836:.\Protocolo.c **** 							}
 837:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3521              		.loc 1 837 0 is_stmt 1
 3522 041e 0023     		movs	r3, #0
 3523 0420 FB73     		strb	r3, [r7, #15]
 3524 0422 0DE0     		b	.L205
 3525              	.L206:
 838:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3526              		.loc 1 838 0 discriminator 3
 3527 0424 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3528 0426 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3529 0428 5232     		adds	r2, r2, #82
 3530 042a 6849     		ldr	r1, .L357
 3531 042c 8A5C     		ldrb	r2, [r1, r2]
 3532 042e D1B2     		uxtb	r1, r2
 3533 0430 674A     		ldr	r2, .L357+4
 3534 0432 1344     		add	r3, r3, r2
 3535 0434 0A46     		mov	r2, r1
 3536 0436 83F85420 		strb	r2, [r3, #84]
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3537              		.loc 1 837 0 discriminator 3
 3538 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3539 043c 0133     		adds	r3, r3, #1
 3540 043e FB73     		strb	r3, [r7, #15]
 3541              	.L205:
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3542              		.loc 1 837 0 is_stmt 0 discriminator 1
 3543 0440 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3544 0442 032B     		cmp	r3, #3
 3545 0444 EED9     		bls	.L206
 839:.\Protocolo.c **** 							}
 840:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3546              		.loc 1 840 0 is_stmt 1
 3547 0446 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 841:.\Protocolo.c ****     						return 3;                            
 3548              		.loc 1 841 0
 3549 044a 0323     		movs	r3, #3
 3550 044c 00F019BE 		b	.L167
 3551              	.L186:
 842:.\Protocolo.c **** 						}
 843:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3552              		.loc 1 843 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 80


 3553 0450 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 844:.\Protocolo.c **** 						return 1;
 3554              		.loc 1 844 0
 3555 0454 0123     		movs	r3, #1
 3556 0456 00F014BE 		b	.L167
 3557              	.L159:
 845:.\Protocolo.c **** 					}
 846:.\Protocolo.c **** 					else{
 847:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3558              		.loc 1 847 0
 3559 045a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 848:.\Protocolo.c **** 						return 0;
 3560              		.loc 1 848 0
 3561 045e 0023     		movs	r3, #0
 3562 0460 00F00FBE 		b	.L167
 3563              	.L158:
 849:.\Protocolo.c **** 					}					
 850:.\Protocolo.c **** 				}
 851:.\Protocolo.c **** 				else{
 852:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 3564              		.loc 1 852 0
 3565 0464 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 853:.\Protocolo.c **** 					return 0;		
 3566              		.loc 1 853 0
 3567 0468 0023     		movs	r3, #0
 3568 046a 00F00ABE 		b	.L167
 3569              	.L156:
 854:.\Protocolo.c **** 				}
 855:.\Protocolo.c **** 			}
 856:.\Protocolo.c **** 			else{
 857:.\Protocolo.c **** 				CyDelay(900);
 3570              		.loc 1 857 0
 3571 046e 4FF46170 		mov	r0, #900
 3572 0472 FFF7FEFF 		bl	CyDelay
 858:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3573              		.loc 1 858 0
 3574 0476 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3575 047a 0346     		mov	r3, r0
 3576 047c FB73     		strb	r3, [r7, #15]
 859:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 3577              		.loc 1 859 0
 3578 047e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3579 0480 2E2B     		cmp	r3, #46
 3580 0482 06D0     		beq	.L207
 3581              		.loc 1 859 0 is_stmt 0 discriminator 1
 3582 0484 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3583 0486 582B     		cmp	r3, #88
 3584 0488 03D0     		beq	.L207
 3585              		.loc 1 859 0 discriminator 2
 3586 048a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3587 048c 822B     		cmp	r3, #130
 3588 048e 40F0F181 		bne	.L208
 3589              	.L207:
 860:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3590              		.loc 1 860 0 is_stmt 1
 3591 0492 4E4B     		ldr	r3, .L357
 3592 0494 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 81


 3593 0496 DBB2     		uxtb	r3, r3
 3594 0498 FF2B     		cmp	r3, #255
 3595 049a 40F0E681 		bne	.L209
 3596              		.loc 1 860 0 is_stmt 0 discriminator 1
 3597 049e 4B4B     		ldr	r3, .L357
 3598 04a0 5B78     		ldrb	r3, [r3, #1]
 3599 04a2 DBB2     		uxtb	r3, r3
 3600 04a4 F62B     		cmp	r3, #246
 3601 04a6 40F0E081 		bne	.L209
 3602              		.loc 1 860 0 discriminator 2
 3603 04aa 484B     		ldr	r3, .L357
 3604 04ac DB78     		ldrb	r3, [r3, #3]
 3605 04ae DBB2     		uxtb	r3, r3
 3606 04b0 F92B     		cmp	r3, #249
 3607 04b2 40F0DA81 		bne	.L209
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3608              		.loc 1 861 0 is_stmt 1
 3609 04b6 0023     		movs	r3, #0
 3610 04b8 BB73     		strb	r3, [r7, #14]
 3611 04ba 16E0     		b	.L210
 3612              	.L213:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3613              		.loc 1 862 0
 3614 04bc 0023     		movs	r3, #0
 3615 04be FB73     		strb	r3, [r7, #15]
 3616 04c0 0DE0     		b	.L211
 3617              	.L212:
 863:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3618              		.loc 1 863 0 discriminator 3
 3619 04c2 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3620 04c4 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 3621 04c6 4248     		ldr	r0, .L357+4
 3622 04c8 1346     		mov	r3, r2
 3623 04ca 5B00     		lsls	r3, r3, #1
 3624 04cc 1344     		add	r3, r3, r2
 3625 04ce DB00     		lsls	r3, r3, #3
 3626 04d0 0B44     		add	r3, r3, r1
 3627 04d2 0344     		add	r3, r3, r0
 3628 04d4 0022     		movs	r2, #0
 3629 04d6 9A70     		strb	r2, [r3, #2]
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3630              		.loc 1 862 0 discriminator 3
 3631 04d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3632 04da 0133     		adds	r3, r3, #1
 3633 04dc FB73     		strb	r3, [r7, #15]
 3634              	.L211:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3635              		.loc 1 862 0 is_stmt 0 discriminator 1
 3636 04de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3637 04e0 172B     		cmp	r3, #23
 3638 04e2 EED9     		bls	.L212
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3639              		.loc 1 861 0 is_stmt 1 discriminator 2
 3640 04e4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3641 04e6 0133     		adds	r3, r3, #1
 3642 04e8 BB73     		strb	r3, [r7, #14]
 3643              	.L210:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 82


 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3644              		.loc 1 861 0 is_stmt 0 discriminator 1
 3645 04ea BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3646 04ec 022B     		cmp	r3, #2
 3647 04ee E5D9     		bls	.L213
 864:.\Protocolo.c ****                     		}
 865:.\Protocolo.c ****                     	}                        
 866:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3648              		.loc 1 866 0 is_stmt 1
 3649 04f0 0023     		movs	r3, #0
 3650 04f2 FB73     		strb	r3, [r7, #15]
 3651 04f4 21E0     		b	.L214
 3652              	.L217:
 867:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3653              		.loc 1 867 0
 3654 04f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3655 04f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3656 04fa 0432     		adds	r2, r2, #4
 3657 04fc 3349     		ldr	r1, .L357
 3658 04fe 8A5C     		ldrb	r2, [r1, r2]
 3659 0500 D1B2     		uxtb	r1, r2
 3660 0502 334A     		ldr	r2, .L357+4
 3661 0504 1344     		add	r3, r3, r2
 3662 0506 0A46     		mov	r2, r1
 3663 0508 9A70     		strb	r2, [r3, #2]
 868:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3664              		.loc 1 868 0
 3665 050a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3666 050c 304A     		ldr	r2, .L357+4
 3667 050e 1344     		add	r3, r3, r2
 3668 0510 9B78     		ldrb	r3, [r3, #2]
 3669 0512 DBB2     		uxtb	r3, r3
 3670 0514 002B     		cmp	r3, #0
 3671 0516 08D0     		beq	.L215
 3672              		.loc 1 868 0 is_stmt 0 discriminator 1
 3673 0518 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3674 051a 2D4A     		ldr	r2, .L357+4
 3675 051c 1344     		add	r3, r3, r2
 3676 051e 9B78     		ldrb	r3, [r3, #2]
 3677 0520 DBB2     		uxtb	r3, r3
 3678 0522 03F0F003 		and	r3, r3, #240
 3679 0526 E02B     		cmp	r3, #224
 3680 0528 04D0     		beq	.L216
 3681              	.L215:
 869:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3682              		.loc 1 869 0 is_stmt 1
 3683 052a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 870:.\Protocolo.c **** 								return 0;
 3684              		.loc 1 870 0
 3685 052e 0023     		movs	r3, #0
 3686 0530 00F0A7BD 		b	.L167
 3687              	.L216:
 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3688              		.loc 1 866 0 discriminator 2
 3689 0534 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3690 0536 0133     		adds	r3, r3, #1
 3691 0538 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 83


 3692              	.L214:
 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3693              		.loc 1 866 0 is_stmt 0 discriminator 1
 3694 053a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3695 053c 0B2B     		cmp	r3, #11
 3696 053e DAD9     		bls	.L217
 871:.\Protocolo.c **** 							}							
 872:.\Protocolo.c **** 						}
 873:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3697              		.loc 1 873 0 is_stmt 1
 3698 0540 0023     		movs	r3, #0
 3699 0542 FB73     		strb	r3, [r7, #15]
 3700 0544 24E0     		b	.L218
 3701              	.L221:
 874:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3702              		.loc 1 874 0
 3703 0546 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3704 0548 0C33     		adds	r3, r3, #12
 3705 054a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3706 054c 1132     		adds	r2, r2, #17
 3707 054e 1F49     		ldr	r1, .L357
 3708 0550 8A5C     		ldrb	r2, [r1, r2]
 3709 0552 D1B2     		uxtb	r1, r2
 3710 0554 1E4A     		ldr	r2, .L357+4
 3711 0556 1344     		add	r3, r3, r2
 3712 0558 0A46     		mov	r2, r1
 3713 055a 9A70     		strb	r2, [r3, #2]
 875:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3714              		.loc 1 875 0
 3715 055c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3716 055e 0C33     		adds	r3, r3, #12
 3717 0560 1B4A     		ldr	r2, .L357+4
 3718 0562 1344     		add	r3, r3, r2
 3719 0564 9B78     		ldrb	r3, [r3, #2]
 3720 0566 DBB2     		uxtb	r3, r3
 3721 0568 002B     		cmp	r3, #0
 3722 056a 09D0     		beq	.L219
 3723              		.loc 1 875 0 is_stmt 0 discriminator 1
 3724 056c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3725 056e 0C33     		adds	r3, r3, #12
 3726 0570 174A     		ldr	r2, .L357+4
 3727 0572 1344     		add	r3, r3, r2
 3728 0574 9B78     		ldrb	r3, [r3, #2]
 3729 0576 DBB2     		uxtb	r3, r3
 3730 0578 03F0F003 		and	r3, r3, #240
 3731 057c E02B     		cmp	r3, #224
 3732 057e 04D0     		beq	.L220
 3733              	.L219:
 876:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3734              		.loc 1 876 0 is_stmt 1
 3735 0580 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 877:.\Protocolo.c **** 								return 0;
 3736              		.loc 1 877 0
 3737 0584 0023     		movs	r3, #0
 3738 0586 00F07CBD 		b	.L167
 3739              	.L220:
 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 84


 3740              		.loc 1 873 0 discriminator 2
 3741 058a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3742 058c 0133     		adds	r3, r3, #1
 3743 058e FB73     		strb	r3, [r7, #15]
 3744              	.L218:
 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3745              		.loc 1 873 0 is_stmt 0 discriminator 1
 3746 0590 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3747 0592 0B2B     		cmp	r3, #11
 3748 0594 D7D9     		bls	.L221
 878:.\Protocolo.c **** 							}							
 879:.\Protocolo.c **** 						}
 880:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3749              		.loc 1 880 0 is_stmt 1
 3750 0596 0023     		movs	r3, #0
 3751 0598 FB73     		strb	r3, [r7, #15]
 3752 059a 0DE0     		b	.L222
 3753              	.L223:
 881:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3754              		.loc 1 881 0 discriminator 3
 3755 059c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3756 059e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3757 05a0 1E32     		adds	r2, r2, #30
 3758 05a2 0A49     		ldr	r1, .L357
 3759 05a4 8A5C     		ldrb	r2, [r1, r2]
 3760 05a6 D1B2     		uxtb	r1, r2
 3761 05a8 094A     		ldr	r2, .L357+4
 3762 05aa 1344     		add	r3, r3, r2
 3763 05ac 0A46     		mov	r2, r1
 3764 05ae 83F84A20 		strb	r2, [r3, #74]
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3765              		.loc 1 880 0 discriminator 3
 3766 05b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3767 05b4 0133     		adds	r3, r3, #1
 3768 05b6 FB73     		strb	r3, [r7, #15]
 3769              	.L222:
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3770              		.loc 1 880 0 is_stmt 0 discriminator 1
 3771 05b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3772 05ba 042B     		cmp	r3, #4
 3773 05bc EED9     		bls	.L223
 882:.\Protocolo.c **** 						}				
 883:.\Protocolo.c **** 						if(nmangueras==2){
 3774              		.loc 1 883 0 is_stmt 1
 3775 05be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3776 05c0 022B     		cmp	r3, #2
 3777 05c2 70D1     		bne	.L224
 884:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3778              		.loc 1 884 0
 3779 05c4 0023     		movs	r3, #0
 3780 05c6 FB73     		strb	r3, [r7, #15]
 3781 05c8 26E0     		b	.L225
 3782              	.L358:
 3783 05ca 00BF     		.align	2
 3784              	.L357:
 3785 05cc 00000000 		.word	Surtidor_rxBuffer
 3786 05d0 00000000 		.word	lado1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 85


 3787              	.L228:
 885:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3788              		.loc 1 885 0
 3789 05d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3790 05d6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3791 05d8 2E32     		adds	r2, r2, #46
 3792 05da A949     		ldr	r1, .L359
 3793 05dc 8A5C     		ldrb	r2, [r1, r2]
 3794 05de D1B2     		uxtb	r1, r2
 3795 05e0 A84A     		ldr	r2, .L359+4
 3796 05e2 1344     		add	r3, r3, r2
 3797 05e4 0A46     		mov	r2, r1
 3798 05e6 9A76     		strb	r2, [r3, #26]
 886:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3799              		.loc 1 886 0
 3800 05e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3801 05ea A64A     		ldr	r2, .L359+4
 3802 05ec 1344     		add	r3, r3, r2
 3803 05ee 9B7E     		ldrb	r3, [r3, #26]
 3804 05f0 DBB2     		uxtb	r3, r3
 3805 05f2 002B     		cmp	r3, #0
 3806 05f4 08D0     		beq	.L226
 3807              		.loc 1 886 0 is_stmt 0 discriminator 1
 3808 05f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3809 05f8 A24A     		ldr	r2, .L359+4
 3810 05fa 1344     		add	r3, r3, r2
 3811 05fc 9B7E     		ldrb	r3, [r3, #26]
 3812 05fe DBB2     		uxtb	r3, r3
 3813 0600 03F0F003 		and	r3, r3, #240
 3814 0604 E02B     		cmp	r3, #224
 3815 0606 04D0     		beq	.L227
 3816              	.L226:
 887:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3817              		.loc 1 887 0 is_stmt 1
 3818 0608 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 888:.\Protocolo.c **** 									return 0;
 3819              		.loc 1 888 0
 3820 060c 0023     		movs	r3, #0
 3821 060e 00F038BD 		b	.L167
 3822              	.L227:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3823              		.loc 1 884 0 discriminator 2
 3824 0612 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3825 0614 0133     		adds	r3, r3, #1
 3826 0616 FB73     		strb	r3, [r7, #15]
 3827              	.L225:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3828              		.loc 1 884 0 is_stmt 0 discriminator 1
 3829 0618 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3830 061a 0B2B     		cmp	r3, #11
 3831 061c DAD9     		bls	.L228
 889:.\Protocolo.c **** 								}								
 890:.\Protocolo.c **** 							}
 891:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3832              		.loc 1 891 0 is_stmt 1
 3833 061e 0023     		movs	r3, #0
 3834 0620 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 86


 3835 0622 24E0     		b	.L229
 3836              	.L232:
 892:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3837              		.loc 1 892 0
 3838 0624 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3839 0626 0C33     		adds	r3, r3, #12
 3840 0628 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3841 062a 3B32     		adds	r2, r2, #59
 3842 062c 9449     		ldr	r1, .L359
 3843 062e 8A5C     		ldrb	r2, [r1, r2]
 3844 0630 D1B2     		uxtb	r1, r2
 3845 0632 944A     		ldr	r2, .L359+4
 3846 0634 1344     		add	r3, r3, r2
 3847 0636 0A46     		mov	r2, r1
 3848 0638 9A76     		strb	r2, [r3, #26]
 893:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3849              		.loc 1 893 0
 3850 063a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3851 063c 0C33     		adds	r3, r3, #12
 3852 063e 914A     		ldr	r2, .L359+4
 3853 0640 1344     		add	r3, r3, r2
 3854 0642 9B7E     		ldrb	r3, [r3, #26]
 3855 0644 DBB2     		uxtb	r3, r3
 3856 0646 002B     		cmp	r3, #0
 3857 0648 09D0     		beq	.L230
 3858              		.loc 1 893 0 is_stmt 0 discriminator 1
 3859 064a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3860 064c 0C33     		adds	r3, r3, #12
 3861 064e 8D4A     		ldr	r2, .L359+4
 3862 0650 1344     		add	r3, r3, r2
 3863 0652 9B7E     		ldrb	r3, [r3, #26]
 3864 0654 DBB2     		uxtb	r3, r3
 3865 0656 03F0F003 		and	r3, r3, #240
 3866 065a E02B     		cmp	r3, #224
 3867 065c 04D0     		beq	.L231
 3868              	.L230:
 894:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3869              		.loc 1 894 0 is_stmt 1
 3870 065e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 895:.\Protocolo.c **** 									return 0;
 3871              		.loc 1 895 0
 3872 0662 0023     		movs	r3, #0
 3873 0664 00F00DBD 		b	.L167
 3874              	.L231:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3875              		.loc 1 891 0 discriminator 2
 3876 0668 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3877 066a 0133     		adds	r3, r3, #1
 3878 066c FB73     		strb	r3, [r7, #15]
 3879              	.L229:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3880              		.loc 1 891 0 is_stmt 0 discriminator 1
 3881 066e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3882 0670 0B2B     		cmp	r3, #11
 3883 0672 D7D9     		bls	.L232
 896:.\Protocolo.c **** 								}								
 897:.\Protocolo.c **** 							}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 87


 898:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3884              		.loc 1 898 0 is_stmt 1
 3885 0674 0023     		movs	r3, #0
 3886 0676 FB73     		strb	r3, [r7, #15]
 3887 0678 0DE0     		b	.L233
 3888              	.L234:
 899:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3889              		.loc 1 899 0 discriminator 3
 3890 067a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3891 067c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3892 067e 4832     		adds	r2, r2, #72
 3893 0680 7F49     		ldr	r1, .L359
 3894 0682 8A5C     		ldrb	r2, [r1, r2]
 3895 0684 D1B2     		uxtb	r1, r2
 3896 0686 7F4A     		ldr	r2, .L359+4
 3897 0688 1344     		add	r3, r3, r2
 3898 068a 0A46     		mov	r2, r1
 3899 068c 83F84F20 		strb	r2, [r3, #79]
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3900              		.loc 1 898 0 discriminator 3
 3901 0690 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3902 0692 0133     		adds	r3, r3, #1
 3903 0694 FB73     		strb	r3, [r7, #15]
 3904              	.L233:
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3905              		.loc 1 898 0 is_stmt 0 discriminator 1
 3906 0696 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3907 0698 042B     		cmp	r3, #4
 3908 069a EED9     		bls	.L234
 900:.\Protocolo.c **** 							}
 901:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3909              		.loc 1 901 0 is_stmt 1
 3910 069c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 902:.\Protocolo.c ****     						return 2;                            
 3911              		.loc 1 902 0
 3912 06a0 0223     		movs	r3, #2
 3913 06a2 00F0EEBC 		b	.L167
 3914              	.L224:
 903:.\Protocolo.c **** 						}
 904:.\Protocolo.c **** 						if(nmangueras==3){
 3915              		.loc 1 904 0
 3916 06a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3917 06a8 032B     		cmp	r3, #3
 3918 06aa 40F0D980 		bne	.L235
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3919              		.loc 1 905 0
 3920 06ae 0023     		movs	r3, #0
 3921 06b0 FB73     		strb	r3, [r7, #15]
 3922 06b2 21E0     		b	.L236
 3923              	.L239:
 906:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3924              		.loc 1 906 0
 3925 06b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3926 06b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3927 06b8 2E32     		adds	r2, r2, #46
 3928 06ba 7149     		ldr	r1, .L359
 3929 06bc 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 88


 3930 06be D1B2     		uxtb	r1, r2
 3931 06c0 704A     		ldr	r2, .L359+4
 3932 06c2 1344     		add	r3, r3, r2
 3933 06c4 0A46     		mov	r2, r1
 3934 06c6 9A76     		strb	r2, [r3, #26]
 907:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3935              		.loc 1 907 0
 3936 06c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3937 06ca 6E4A     		ldr	r2, .L359+4
 3938 06cc 1344     		add	r3, r3, r2
 3939 06ce 9B7E     		ldrb	r3, [r3, #26]
 3940 06d0 DBB2     		uxtb	r3, r3
 3941 06d2 002B     		cmp	r3, #0
 3942 06d4 08D0     		beq	.L237
 3943              		.loc 1 907 0 is_stmt 0 discriminator 1
 3944 06d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3945 06d8 6A4A     		ldr	r2, .L359+4
 3946 06da 1344     		add	r3, r3, r2
 3947 06dc 9B7E     		ldrb	r3, [r3, #26]
 3948 06de DBB2     		uxtb	r3, r3
 3949 06e0 03F0F003 		and	r3, r3, #240
 3950 06e4 E02B     		cmp	r3, #224
 3951 06e6 04D0     		beq	.L238
 3952              	.L237:
 908:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3953              		.loc 1 908 0 is_stmt 1
 3954 06e8 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 909:.\Protocolo.c **** 									return 0;
 3955              		.loc 1 909 0
 3956 06ec 0023     		movs	r3, #0
 3957 06ee 00F0C8BC 		b	.L167
 3958              	.L238:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3959              		.loc 1 905 0 discriminator 2
 3960 06f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3961 06f4 0133     		adds	r3, r3, #1
 3962 06f6 FB73     		strb	r3, [r7, #15]
 3963              	.L236:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3964              		.loc 1 905 0 is_stmt 0 discriminator 1
 3965 06f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3966 06fa 0B2B     		cmp	r3, #11
 3967 06fc DAD9     		bls	.L239
 910:.\Protocolo.c **** 								}								
 911:.\Protocolo.c **** 							}
 912:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3968              		.loc 1 912 0 is_stmt 1
 3969 06fe 0023     		movs	r3, #0
 3970 0700 FB73     		strb	r3, [r7, #15]
 3971 0702 24E0     		b	.L240
 3972              	.L243:
 913:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3973              		.loc 1 913 0
 3974 0704 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3975 0706 0C33     		adds	r3, r3, #12
 3976 0708 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3977 070a 3B32     		adds	r2, r2, #59
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 89


 3978 070c 5C49     		ldr	r1, .L359
 3979 070e 8A5C     		ldrb	r2, [r1, r2]
 3980 0710 D1B2     		uxtb	r1, r2
 3981 0712 5C4A     		ldr	r2, .L359+4
 3982 0714 1344     		add	r3, r3, r2
 3983 0716 0A46     		mov	r2, r1
 3984 0718 9A76     		strb	r2, [r3, #26]
 914:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3985              		.loc 1 914 0
 3986 071a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3987 071c 0C33     		adds	r3, r3, #12
 3988 071e 594A     		ldr	r2, .L359+4
 3989 0720 1344     		add	r3, r3, r2
 3990 0722 9B7E     		ldrb	r3, [r3, #26]
 3991 0724 DBB2     		uxtb	r3, r3
 3992 0726 002B     		cmp	r3, #0
 3993 0728 09D0     		beq	.L241
 3994              		.loc 1 914 0 is_stmt 0 discriminator 1
 3995 072a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3996 072c 0C33     		adds	r3, r3, #12
 3997 072e 554A     		ldr	r2, .L359+4
 3998 0730 1344     		add	r3, r3, r2
 3999 0732 9B7E     		ldrb	r3, [r3, #26]
 4000 0734 DBB2     		uxtb	r3, r3
 4001 0736 03F0F003 		and	r3, r3, #240
 4002 073a E02B     		cmp	r3, #224
 4003 073c 04D0     		beq	.L242
 4004              	.L241:
 915:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4005              		.loc 1 915 0 is_stmt 1
 4006 073e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 916:.\Protocolo.c **** 									return 0;
 4007              		.loc 1 916 0
 4008 0742 0023     		movs	r3, #0
 4009 0744 00F09DBC 		b	.L167
 4010              	.L242:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4011              		.loc 1 912 0 discriminator 2
 4012 0748 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4013 074a 0133     		adds	r3, r3, #1
 4014 074c FB73     		strb	r3, [r7, #15]
 4015              	.L240:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4016              		.loc 1 912 0 is_stmt 0 discriminator 1
 4017 074e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4018 0750 0B2B     		cmp	r3, #11
 4019 0752 D7D9     		bls	.L243
 917:.\Protocolo.c **** 								}								
 918:.\Protocolo.c **** 							}
 919:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4020              		.loc 1 919 0 is_stmt 1
 4021 0754 0023     		movs	r3, #0
 4022 0756 FB73     		strb	r3, [r7, #15]
 4023 0758 0DE0     		b	.L244
 4024              	.L245:
 920:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4025              		.loc 1 920 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 90


 4026 075a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4027 075c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4028 075e 4832     		adds	r2, r2, #72
 4029 0760 4749     		ldr	r1, .L359
 4030 0762 8A5C     		ldrb	r2, [r1, r2]
 4031 0764 D1B2     		uxtb	r1, r2
 4032 0766 474A     		ldr	r2, .L359+4
 4033 0768 1344     		add	r3, r3, r2
 4034 076a 0A46     		mov	r2, r1
 4035 076c 83F84F20 		strb	r2, [r3, #79]
 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4036              		.loc 1 919 0 discriminator 3
 4037 0770 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4038 0772 0133     		adds	r3, r3, #1
 4039 0774 FB73     		strb	r3, [r7, #15]
 4040              	.L244:
 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4041              		.loc 1 919 0 is_stmt 0 discriminator 1
 4042 0776 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4043 0778 042B     		cmp	r3, #4
 4044 077a EED9     		bls	.L245
 921:.\Protocolo.c **** 							}					
 922:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4045              		.loc 1 922 0 is_stmt 1
 4046 077c 0023     		movs	r3, #0
 4047 077e FB73     		strb	r3, [r7, #15]
 4048 0780 24E0     		b	.L246
 4049              	.L249:
 923:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4050              		.loc 1 923 0
 4051 0782 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4052 0784 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4053 0786 5832     		adds	r2, r2, #88
 4054 0788 3D49     		ldr	r1, .L359
 4055 078a 8A5C     		ldrb	r2, [r1, r2]
 4056 078c D1B2     		uxtb	r1, r2
 4057 078e 3D4A     		ldr	r2, .L359+4
 4058 0790 1344     		add	r3, r3, r2
 4059 0792 0A46     		mov	r2, r1
 4060 0794 83F83220 		strb	r2, [r3, #50]
 924:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 4061              		.loc 1 924 0
 4062 0798 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4063 079a 3A4A     		ldr	r2, .L359+4
 4064 079c 1344     		add	r3, r3, r2
 4065 079e 93F83230 		ldrb	r3, [r3, #50]
 4066 07a2 DBB2     		uxtb	r3, r3
 4067 07a4 002B     		cmp	r3, #0
 4068 07a6 09D0     		beq	.L247
 4069              		.loc 1 924 0 is_stmt 0 discriminator 1
 4070 07a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4071 07aa 364A     		ldr	r2, .L359+4
 4072 07ac 1344     		add	r3, r3, r2
 4073 07ae 93F83230 		ldrb	r3, [r3, #50]
 4074 07b2 DBB2     		uxtb	r3, r3
 4075 07b4 03F0F003 		and	r3, r3, #240
 4076 07b8 E02B     		cmp	r3, #224
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 91


 4077 07ba 04D0     		beq	.L248
 4078              	.L247:
 925:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4079              		.loc 1 925 0 is_stmt 1
 4080 07bc FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 926:.\Protocolo.c **** 									return 0;
 4081              		.loc 1 926 0
 4082 07c0 0023     		movs	r3, #0
 4083 07c2 00F05EBC 		b	.L167
 4084              	.L248:
 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4085              		.loc 1 922 0 discriminator 2
 4086 07c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4087 07c8 0133     		adds	r3, r3, #1
 4088 07ca FB73     		strb	r3, [r7, #15]
 4089              	.L246:
 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4090              		.loc 1 922 0 is_stmt 0 discriminator 1
 4091 07cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4092 07ce 0B2B     		cmp	r3, #11
 4093 07d0 D7D9     		bls	.L249
 927:.\Protocolo.c **** 								}								
 928:.\Protocolo.c **** 							}
 929:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4094              		.loc 1 929 0 is_stmt 1
 4095 07d2 0023     		movs	r3, #0
 4096 07d4 FB73     		strb	r3, [r7, #15]
 4097 07d6 27E0     		b	.L250
 4098              	.L253:
 930:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4099              		.loc 1 930 0
 4100 07d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4101 07da 0C33     		adds	r3, r3, #12
 4102 07dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4103 07de 6532     		adds	r2, r2, #101
 4104 07e0 2749     		ldr	r1, .L359
 4105 07e2 8A5C     		ldrb	r2, [r1, r2]
 4106 07e4 D1B2     		uxtb	r1, r2
 4107 07e6 274A     		ldr	r2, .L359+4
 4108 07e8 1344     		add	r3, r3, r2
 4109 07ea 0A46     		mov	r2, r1
 4110 07ec 83F83220 		strb	r2, [r3, #50]
 931:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 4111              		.loc 1 931 0
 4112 07f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4113 07f2 0C33     		adds	r3, r3, #12
 4114 07f4 234A     		ldr	r2, .L359+4
 4115 07f6 1344     		add	r3, r3, r2
 4116 07f8 93F83230 		ldrb	r3, [r3, #50]
 4117 07fc DBB2     		uxtb	r3, r3
 4118 07fe 002B     		cmp	r3, #0
 4119 0800 0AD0     		beq	.L251
 4120              		.loc 1 931 0 is_stmt 0 discriminator 1
 4121 0802 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4122 0804 0C33     		adds	r3, r3, #12
 4123 0806 1F4A     		ldr	r2, .L359+4
 4124 0808 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 92


 4125 080a 93F83230 		ldrb	r3, [r3, #50]
 4126 080e DBB2     		uxtb	r3, r3
 4127 0810 03F0F003 		and	r3, r3, #240
 4128 0814 E02B     		cmp	r3, #224
 4129 0816 04D0     		beq	.L252
 4130              	.L251:
 932:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4131              		.loc 1 932 0 is_stmt 1
 4132 0818 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 933:.\Protocolo.c **** 									return 0;
 4133              		.loc 1 933 0
 4134 081c 0023     		movs	r3, #0
 4135 081e 00F030BC 		b	.L167
 4136              	.L252:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4137              		.loc 1 929 0 discriminator 2
 4138 0822 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4139 0824 0133     		adds	r3, r3, #1
 4140 0826 FB73     		strb	r3, [r7, #15]
 4141              	.L250:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4142              		.loc 1 929 0 is_stmt 0 discriminator 1
 4143 0828 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4144 082a 0B2B     		cmp	r3, #11
 4145 082c D4D9     		bls	.L253
 934:.\Protocolo.c **** 								}								
 935:.\Protocolo.c **** 							}
 936:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4146              		.loc 1 936 0 is_stmt 1
 4147 082e 0023     		movs	r3, #0
 4148 0830 FB73     		strb	r3, [r7, #15]
 4149 0832 0DE0     		b	.L254
 4150              	.L255:
 937:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4151              		.loc 1 937 0 discriminator 3
 4152 0834 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4153 0836 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4154 0838 7232     		adds	r2, r2, #114
 4155 083a 1149     		ldr	r1, .L359
 4156 083c 8A5C     		ldrb	r2, [r1, r2]
 4157 083e D1B2     		uxtb	r1, r2
 4158 0840 104A     		ldr	r2, .L359+4
 4159 0842 1344     		add	r3, r3, r2
 4160 0844 0A46     		mov	r2, r1
 4161 0846 83F85420 		strb	r2, [r3, #84]
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4162              		.loc 1 936 0 discriminator 3
 4163 084a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4164 084c 0133     		adds	r3, r3, #1
 4165 084e FB73     		strb	r3, [r7, #15]
 4166              	.L254:
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4167              		.loc 1 936 0 is_stmt 0 discriminator 1
 4168 0850 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4169 0852 042B     		cmp	r3, #4
 4170 0854 EED9     		bls	.L255
 938:.\Protocolo.c **** 							}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 93


 939:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4171              		.loc 1 939 0 is_stmt 1
 4172 0856 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 940:.\Protocolo.c ****     						return 3;                            
 4173              		.loc 1 940 0
 4174 085a 0323     		movs	r3, #3
 4175 085c 00F011BC 		b	.L167
 4176              	.L235:
 941:.\Protocolo.c **** 						}
 942:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4177              		.loc 1 942 0
 4178 0860 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 943:.\Protocolo.c **** 						return 1;			
 4179              		.loc 1 943 0
 4180 0864 0123     		movs	r3, #1
 4181 0866 00F00CBC 		b	.L167
 4182              	.L209:
 944:.\Protocolo.c **** 					}
 945:.\Protocolo.c **** 					else{
 946:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4183              		.loc 1 946 0
 4184 086a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 947:.\Protocolo.c **** 						return 0;					
 4185              		.loc 1 947 0
 4186 086e 0023     		movs	r3, #0
 4187 0870 00F007BC 		b	.L167
 4188              	.L208:
 948:.\Protocolo.c **** 					}
 949:.\Protocolo.c **** 				}
 950:.\Protocolo.c **** 				else{
 951:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4189              		.loc 1 951 0
 4190 0874 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 952:.\Protocolo.c **** 					return 0;		
 4191              		.loc 1 952 0
 4192 0878 0023     		movs	r3, #0
 4193 087a 00F002BC 		b	.L167
 4194              	.L360:
 4195 087e 00BF     		.align	2
 4196              	.L359:
 4197 0880 00000000 		.word	Surtidor_rxBuffer
 4198 0884 00000000 		.word	lado1
 4199              	.L155:
 953:.\Protocolo.c **** 				}	
 954:.\Protocolo.c **** 			}
 955:.\Protocolo.c **** 		}
 956:.\Protocolo.c **** 		else{
 957:.\Protocolo.c **** 			if(version[1]!=7){
 4200              		.loc 1 957 0
 4201 0888 A24B     		ldr	r3, .L361
 4202 088a 5B78     		ldrb	r3, [r3, #1]
 4203 088c DBB2     		uxtb	r3, r3
 4204 088e 072B     		cmp	r3, #7
 4205 0890 00F0FC81 		beq	.L256
 958:.\Protocolo.c **** 				CyDelay(900);
 4206              		.loc 1 958 0
 4207 0894 4FF46170 		mov	r0, #900
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 94


 4208 0898 FFF7FEFF 		bl	CyDelay
 959:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4209              		.loc 1 959 0
 4210 089c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4211 08a0 0346     		mov	r3, r0
 4212 08a2 FB73     		strb	r3, [r7, #15]
 960:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){				
 4213              		.loc 1 960 0
 4214 08a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4215 08a6 222B     		cmp	r3, #34
 4216 08a8 06D0     		beq	.L257
 4217              		.loc 1 960 0 is_stmt 0 discriminator 1
 4218 08aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4219 08ac 402B     		cmp	r3, #64
 4220 08ae 03D0     		beq	.L257
 4221              		.loc 1 960 0 discriminator 2
 4222 08b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4223 08b2 5E2B     		cmp	r3, #94
 4224 08b4 40F0E681 		bne	.L258
 4225              	.L257:
 961:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4226              		.loc 1 961 0 is_stmt 1
 4227 08b8 974B     		ldr	r3, .L361+4
 4228 08ba 1B78     		ldrb	r3, [r3]
 4229 08bc DBB2     		uxtb	r3, r3
 4230 08be FF2B     		cmp	r3, #255
 4231 08c0 40F0DC81 		bne	.L259
 4232              		.loc 1 961 0 is_stmt 0 discriminator 1
 4233 08c4 944B     		ldr	r3, .L361+4
 4234 08c6 5B78     		ldrb	r3, [r3, #1]
 4235 08c8 DBB2     		uxtb	r3, r3
 4236 08ca F62B     		cmp	r3, #246
 4237 08cc 40F0D681 		bne	.L259
 4238              		.loc 1 961 0 discriminator 2
 4239 08d0 914B     		ldr	r3, .L361+4
 4240 08d2 DB78     		ldrb	r3, [r3, #3]
 4241 08d4 DBB2     		uxtb	r3, r3
 4242 08d6 F92B     		cmp	r3, #249
 4243 08d8 40F0D081 		bne	.L259
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4244              		.loc 1 962 0 is_stmt 1
 4245 08dc 0023     		movs	r3, #0
 4246 08de BB73     		strb	r3, [r7, #14]
 4247 08e0 16E0     		b	.L260
 4248              	.L263:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4249              		.loc 1 963 0
 4250 08e2 0023     		movs	r3, #0
 4251 08e4 FB73     		strb	r3, [r7, #15]
 4252 08e6 0DE0     		b	.L261
 4253              	.L262:
 964:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4254              		.loc 1 964 0 discriminator 3
 4255 08e8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4256 08ea F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4257 08ec 8B48     		ldr	r0, .L361+8
 4258 08ee 1346     		mov	r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 95


 4259 08f0 5B00     		lsls	r3, r3, #1
 4260 08f2 1344     		add	r3, r3, r2
 4261 08f4 DB00     		lsls	r3, r3, #3
 4262 08f6 0B44     		add	r3, r3, r1
 4263 08f8 0344     		add	r3, r3, r0
 4264 08fa 0022     		movs	r2, #0
 4265 08fc 9A70     		strb	r2, [r3, #2]
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4266              		.loc 1 963 0 discriminator 3
 4267 08fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4268 0900 0133     		adds	r3, r3, #1
 4269 0902 FB73     		strb	r3, [r7, #15]
 4270              	.L261:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4271              		.loc 1 963 0 is_stmt 0 discriminator 1
 4272 0904 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4273 0906 172B     		cmp	r3, #23
 4274 0908 EED9     		bls	.L262
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4275              		.loc 1 962 0 is_stmt 1 discriminator 2
 4276 090a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4277 090c 0133     		adds	r3, r3, #1
 4278 090e BB73     		strb	r3, [r7, #14]
 4279              	.L260:
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4280              		.loc 1 962 0 is_stmt 0 discriminator 1
 4281 0910 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4282 0912 022B     		cmp	r3, #2
 4283 0914 E5D9     		bls	.L263
 965:.\Protocolo.c ****                     		}
 966:.\Protocolo.c ****                     	}                        
 967:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4284              		.loc 1 967 0 is_stmt 1
 4285 0916 0023     		movs	r3, #0
 4286 0918 FB73     		strb	r3, [r7, #15]
 4287 091a 20E0     		b	.L264
 4288              	.L267:
 968:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4289              		.loc 1 968 0
 4290 091c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4291 091e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4292 0920 0432     		adds	r2, r2, #4
 4293 0922 7D49     		ldr	r1, .L361+4
 4294 0924 8A5C     		ldrb	r2, [r1, r2]
 4295 0926 D1B2     		uxtb	r1, r2
 4296 0928 7C4A     		ldr	r2, .L361+8
 4297 092a 1344     		add	r3, r3, r2
 4298 092c 0A46     		mov	r2, r1
 4299 092e 9A70     		strb	r2, [r3, #2]
 969:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4300              		.loc 1 969 0
 4301 0930 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4302 0932 7A4A     		ldr	r2, .L361+8
 4303 0934 1344     		add	r3, r3, r2
 4304 0936 9B78     		ldrb	r3, [r3, #2]
 4305 0938 DBB2     		uxtb	r3, r3
 4306 093a 002B     		cmp	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 96


 4307 093c 08D0     		beq	.L265
 4308              		.loc 1 969 0 is_stmt 0 discriminator 1
 4309 093e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4310 0940 764A     		ldr	r2, .L361+8
 4311 0942 1344     		add	r3, r3, r2
 4312 0944 9B78     		ldrb	r3, [r3, #2]
 4313 0946 DBB2     		uxtb	r3, r3
 4314 0948 03F0F003 		and	r3, r3, #240
 4315 094c E02B     		cmp	r3, #224
 4316 094e 03D0     		beq	.L266
 4317              	.L265:
 970:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4318              		.loc 1 970 0 is_stmt 1
 4319 0950 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 971:.\Protocolo.c **** 								return 0;
 4320              		.loc 1 971 0
 4321 0954 0023     		movs	r3, #0
 4322 0956 94E3     		b	.L167
 4323              	.L266:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4324              		.loc 1 967 0 discriminator 2
 4325 0958 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4326 095a 0133     		adds	r3, r3, #1
 4327 095c FB73     		strb	r3, [r7, #15]
 4328              	.L264:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4329              		.loc 1 967 0 is_stmt 0 discriminator 1
 4330 095e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4331 0960 072B     		cmp	r3, #7
 4332 0962 DBD9     		bls	.L267
 972:.\Protocolo.c **** 							}							
 973:.\Protocolo.c **** 						}
 974:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4333              		.loc 1 974 0 is_stmt 1
 4334 0964 0023     		movs	r3, #0
 4335 0966 FB73     		strb	r3, [r7, #15]
 4336 0968 23E0     		b	.L268
 4337              	.L271:
 975:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4338              		.loc 1 975 0
 4339 096a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4340 096c 0C33     		adds	r3, r3, #12
 4341 096e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4342 0970 0D32     		adds	r2, r2, #13
 4343 0972 6949     		ldr	r1, .L361+4
 4344 0974 8A5C     		ldrb	r2, [r1, r2]
 4345 0976 D1B2     		uxtb	r1, r2
 4346 0978 684A     		ldr	r2, .L361+8
 4347 097a 1344     		add	r3, r3, r2
 4348 097c 0A46     		mov	r2, r1
 4349 097e 9A70     		strb	r2, [r3, #2]
 976:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4350              		.loc 1 976 0
 4351 0980 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4352 0982 0C33     		adds	r3, r3, #12
 4353 0984 654A     		ldr	r2, .L361+8
 4354 0986 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 97


 4355 0988 9B78     		ldrb	r3, [r3, #2]
 4356 098a DBB2     		uxtb	r3, r3
 4357 098c 002B     		cmp	r3, #0
 4358 098e 09D0     		beq	.L269
 4359              		.loc 1 976 0 is_stmt 0 discriminator 1
 4360 0990 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4361 0992 0C33     		adds	r3, r3, #12
 4362 0994 614A     		ldr	r2, .L361+8
 4363 0996 1344     		add	r3, r3, r2
 4364 0998 9B78     		ldrb	r3, [r3, #2]
 4365 099a DBB2     		uxtb	r3, r3
 4366 099c 03F0F003 		and	r3, r3, #240
 4367 09a0 E02B     		cmp	r3, #224
 4368 09a2 03D0     		beq	.L270
 4369              	.L269:
 977:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4370              		.loc 1 977 0 is_stmt 1
 4371 09a4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 978:.\Protocolo.c **** 								return 0;
 4372              		.loc 1 978 0
 4373 09a8 0023     		movs	r3, #0
 4374 09aa 6AE3     		b	.L167
 4375              	.L270:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4376              		.loc 1 974 0 discriminator 2
 4377 09ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4378 09ae 0133     		adds	r3, r3, #1
 4379 09b0 FB73     		strb	r3, [r7, #15]
 4380              	.L268:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4381              		.loc 1 974 0 is_stmt 0 discriminator 1
 4382 09b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4383 09b4 072B     		cmp	r3, #7
 4384 09b6 D8D9     		bls	.L271
 979:.\Protocolo.c **** 							}							
 980:.\Protocolo.c **** 						}
 981:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 4385              		.loc 1 981 0 is_stmt 1
 4386 09b8 0023     		movs	r3, #0
 4387 09ba FB73     		strb	r3, [r7, #15]
 4388 09bc 0DE0     		b	.L272
 4389              	.L273:
 982:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4390              		.loc 1 982 0 discriminator 3
 4391 09be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4392 09c0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4393 09c2 1632     		adds	r2, r2, #22
 4394 09c4 5449     		ldr	r1, .L361+4
 4395 09c6 8A5C     		ldrb	r2, [r1, r2]
 4396 09c8 D1B2     		uxtb	r1, r2
 4397 09ca 544A     		ldr	r2, .L361+8
 4398 09cc 1344     		add	r3, r3, r2
 4399 09ce 0A46     		mov	r2, r1
 4400 09d0 83F84A20 		strb	r2, [r3, #74]
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4401              		.loc 1 981 0 discriminator 3
 4402 09d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 98


 4403 09d6 0133     		adds	r3, r3, #1
 4404 09d8 FB73     		strb	r3, [r7, #15]
 4405              	.L272:
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4406              		.loc 1 981 0 is_stmt 0 discriminator 1
 4407 09da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4408 09dc 032B     		cmp	r3, #3
 4409 09de EED9     		bls	.L273
 983:.\Protocolo.c **** 						}				
 984:.\Protocolo.c **** 						if(nmangueras==2){
 4410              		.loc 1 984 0 is_stmt 1
 4411 09e0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4412 09e2 022B     		cmp	r3, #2
 4413 09e4 68D1     		bne	.L274
 985:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4414              		.loc 1 985 0
 4415 09e6 0023     		movs	r3, #0
 4416 09e8 FB73     		strb	r3, [r7, #15]
 4417 09ea 20E0     		b	.L275
 4418              	.L278:
 986:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4419              		.loc 1 986 0
 4420 09ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4421 09ee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4422 09f0 2232     		adds	r2, r2, #34
 4423 09f2 4949     		ldr	r1, .L361+4
 4424 09f4 8A5C     		ldrb	r2, [r1, r2]
 4425 09f6 D1B2     		uxtb	r1, r2
 4426 09f8 484A     		ldr	r2, .L361+8
 4427 09fa 1344     		add	r3, r3, r2
 4428 09fc 0A46     		mov	r2, r1
 4429 09fe 9A76     		strb	r2, [r3, #26]
 987:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4430              		.loc 1 987 0
 4431 0a00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4432 0a02 464A     		ldr	r2, .L361+8
 4433 0a04 1344     		add	r3, r3, r2
 4434 0a06 9B7E     		ldrb	r3, [r3, #26]
 4435 0a08 DBB2     		uxtb	r3, r3
 4436 0a0a 002B     		cmp	r3, #0
 4437 0a0c 08D0     		beq	.L276
 4438              		.loc 1 987 0 is_stmt 0 discriminator 1
 4439 0a0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4440 0a10 424A     		ldr	r2, .L361+8
 4441 0a12 1344     		add	r3, r3, r2
 4442 0a14 9B7E     		ldrb	r3, [r3, #26]
 4443 0a16 DBB2     		uxtb	r3, r3
 4444 0a18 03F0F003 		and	r3, r3, #240
 4445 0a1c E02B     		cmp	r3, #224
 4446 0a1e 03D0     		beq	.L277
 4447              	.L276:
 988:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4448              		.loc 1 988 0 is_stmt 1
 4449 0a20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 989:.\Protocolo.c **** 									return 0;
 4450              		.loc 1 989 0
 4451 0a24 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 99


 4452 0a26 2CE3     		b	.L167
 4453              	.L277:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4454              		.loc 1 985 0 discriminator 2
 4455 0a28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4456 0a2a 0133     		adds	r3, r3, #1
 4457 0a2c FB73     		strb	r3, [r7, #15]
 4458              	.L275:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4459              		.loc 1 985 0 is_stmt 0 discriminator 1
 4460 0a2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4461 0a30 072B     		cmp	r3, #7
 4462 0a32 DBD9     		bls	.L278
 990:.\Protocolo.c **** 								}								
 991:.\Protocolo.c **** 							}
 992:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4463              		.loc 1 992 0 is_stmt 1
 4464 0a34 0023     		movs	r3, #0
 4465 0a36 FB73     		strb	r3, [r7, #15]
 4466 0a38 23E0     		b	.L279
 4467              	.L282:
 993:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4468              		.loc 1 993 0
 4469 0a3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4470 0a3c 0C33     		adds	r3, r3, #12
 4471 0a3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4472 0a40 2B32     		adds	r2, r2, #43
 4473 0a42 3549     		ldr	r1, .L361+4
 4474 0a44 8A5C     		ldrb	r2, [r1, r2]
 4475 0a46 D1B2     		uxtb	r1, r2
 4476 0a48 344A     		ldr	r2, .L361+8
 4477 0a4a 1344     		add	r3, r3, r2
 4478 0a4c 0A46     		mov	r2, r1
 4479 0a4e 9A76     		strb	r2, [r3, #26]
 994:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4480              		.loc 1 994 0
 4481 0a50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4482 0a52 0C33     		adds	r3, r3, #12
 4483 0a54 314A     		ldr	r2, .L361+8
 4484 0a56 1344     		add	r3, r3, r2
 4485 0a58 9B7E     		ldrb	r3, [r3, #26]
 4486 0a5a DBB2     		uxtb	r3, r3
 4487 0a5c 002B     		cmp	r3, #0
 4488 0a5e 09D0     		beq	.L280
 4489              		.loc 1 994 0 is_stmt 0 discriminator 1
 4490 0a60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4491 0a62 0C33     		adds	r3, r3, #12
 4492 0a64 2D4A     		ldr	r2, .L361+8
 4493 0a66 1344     		add	r3, r3, r2
 4494 0a68 9B7E     		ldrb	r3, [r3, #26]
 4495 0a6a DBB2     		uxtb	r3, r3
 4496 0a6c 03F0F003 		and	r3, r3, #240
 4497 0a70 E02B     		cmp	r3, #224
 4498 0a72 03D0     		beq	.L281
 4499              	.L280:
 995:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4500              		.loc 1 995 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 100


 4501 0a74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 996:.\Protocolo.c **** 									return 0;
 4502              		.loc 1 996 0
 4503 0a78 0023     		movs	r3, #0
 4504 0a7a 02E3     		b	.L167
 4505              	.L281:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4506              		.loc 1 992 0 discriminator 2
 4507 0a7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4508 0a7e 0133     		adds	r3, r3, #1
 4509 0a80 FB73     		strb	r3, [r7, #15]
 4510              	.L279:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4511              		.loc 1 992 0 is_stmt 0 discriminator 1
 4512 0a82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4513 0a84 072B     		cmp	r3, #7
 4514 0a86 D8D9     		bls	.L282
 997:.\Protocolo.c **** 								}								
 998:.\Protocolo.c **** 							}
 999:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4515              		.loc 1 999 0 is_stmt 1
 4516 0a88 0023     		movs	r3, #0
 4517 0a8a FB73     		strb	r3, [r7, #15]
 4518 0a8c 0DE0     		b	.L283
 4519              	.L284:
1000:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4520              		.loc 1 1000 0 discriminator 3
 4521 0a8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4522 0a90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4523 0a92 3432     		adds	r2, r2, #52
 4524 0a94 2049     		ldr	r1, .L361+4
 4525 0a96 8A5C     		ldrb	r2, [r1, r2]
 4526 0a98 D1B2     		uxtb	r1, r2
 4527 0a9a 204A     		ldr	r2, .L361+8
 4528 0a9c 1344     		add	r3, r3, r2
 4529 0a9e 0A46     		mov	r2, r1
 4530 0aa0 83F84F20 		strb	r2, [r3, #79]
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4531              		.loc 1 999 0 discriminator 3
 4532 0aa4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4533 0aa6 0133     		adds	r3, r3, #1
 4534 0aa8 FB73     		strb	r3, [r7, #15]
 4535              	.L283:
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4536              		.loc 1 999 0 is_stmt 0 discriminator 1
 4537 0aaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4538 0aac 032B     		cmp	r3, #3
 4539 0aae EED9     		bls	.L284
1001:.\Protocolo.c **** 							}
1002:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4540              		.loc 1 1002 0 is_stmt 1
 4541 0ab0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1003:.\Protocolo.c ****     						return 2;                            
 4542              		.loc 1 1003 0
 4543 0ab4 0223     		movs	r3, #2
 4544 0ab6 E4E2     		b	.L167
 4545              	.L274:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 101


1004:.\Protocolo.c **** 						}
1005:.\Protocolo.c **** 						if(nmangueras==3){
 4546              		.loc 1 1005 0
 4547 0ab8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4548 0aba 032B     		cmp	r3, #3
 4549 0abc 40F0DA80 		bne	.L285
1006:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4550              		.loc 1 1006 0
 4551 0ac0 0023     		movs	r3, #0
 4552 0ac2 FB73     		strb	r3, [r7, #15]
 4553 0ac4 20E0     		b	.L286
 4554              	.L289:
1007:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4555              		.loc 1 1007 0
 4556 0ac6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4557 0ac8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4558 0aca 2232     		adds	r2, r2, #34
 4559 0acc 1249     		ldr	r1, .L361+4
 4560 0ace 8A5C     		ldrb	r2, [r1, r2]
 4561 0ad0 D1B2     		uxtb	r1, r2
 4562 0ad2 124A     		ldr	r2, .L361+8
 4563 0ad4 1344     		add	r3, r3, r2
 4564 0ad6 0A46     		mov	r2, r1
 4565 0ad8 9A76     		strb	r2, [r3, #26]
1008:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4566              		.loc 1 1008 0
 4567 0ada FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4568 0adc 0F4A     		ldr	r2, .L361+8
 4569 0ade 1344     		add	r3, r3, r2
 4570 0ae0 9B7E     		ldrb	r3, [r3, #26]
 4571 0ae2 DBB2     		uxtb	r3, r3
 4572 0ae4 002B     		cmp	r3, #0
 4573 0ae6 08D0     		beq	.L287
 4574              		.loc 1 1008 0 is_stmt 0 discriminator 1
 4575 0ae8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4576 0aea 0C4A     		ldr	r2, .L361+8
 4577 0aec 1344     		add	r3, r3, r2
 4578 0aee 9B7E     		ldrb	r3, [r3, #26]
 4579 0af0 DBB2     		uxtb	r3, r3
 4580 0af2 03F0F003 		and	r3, r3, #240
 4581 0af6 E02B     		cmp	r3, #224
 4582 0af8 03D0     		beq	.L288
 4583              	.L287:
1009:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4584              		.loc 1 1009 0 is_stmt 1
 4585 0afa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1010:.\Protocolo.c **** 									return 0;
 4586              		.loc 1 1010 0
 4587 0afe 0023     		movs	r3, #0
 4588 0b00 BFE2     		b	.L167
 4589              	.L288:
1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4590              		.loc 1 1006 0 discriminator 2
 4591 0b02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4592 0b04 0133     		adds	r3, r3, #1
 4593 0b06 FB73     		strb	r3, [r7, #15]
 4594              	.L286:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 102


1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4595              		.loc 1 1006 0 is_stmt 0 discriminator 1
 4596 0b08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4597 0b0a 072B     		cmp	r3, #7
 4598 0b0c DBD9     		bls	.L289
1011:.\Protocolo.c **** 								}								
1012:.\Protocolo.c **** 							}
1013:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4599              		.loc 1 1013 0 is_stmt 1
 4600 0b0e 0023     		movs	r3, #0
 4601 0b10 FB73     		strb	r3, [r7, #15]
 4602 0b12 29E0     		b	.L290
 4603              	.L362:
 4604              		.align	2
 4605              	.L361:
 4606 0b14 00000000 		.word	version
 4607 0b18 00000000 		.word	Surtidor_rxBuffer
 4608 0b1c 00000000 		.word	lado2
 4609              	.L293:
1014:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4610              		.loc 1 1014 0
 4611 0b20 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4612 0b22 0C33     		adds	r3, r3, #12
 4613 0b24 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4614 0b26 2B32     		adds	r2, r2, #43
 4615 0b28 AE49     		ldr	r1, .L363
 4616 0b2a 8A5C     		ldrb	r2, [r1, r2]
 4617 0b2c D1B2     		uxtb	r1, r2
 4618 0b2e AE4A     		ldr	r2, .L363+4
 4619 0b30 1344     		add	r3, r3, r2
 4620 0b32 0A46     		mov	r2, r1
 4621 0b34 9A76     		strb	r2, [r3, #26]
1015:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4622              		.loc 1 1015 0
 4623 0b36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4624 0b38 0C33     		adds	r3, r3, #12
 4625 0b3a AB4A     		ldr	r2, .L363+4
 4626 0b3c 1344     		add	r3, r3, r2
 4627 0b3e 9B7E     		ldrb	r3, [r3, #26]
 4628 0b40 DBB2     		uxtb	r3, r3
 4629 0b42 002B     		cmp	r3, #0
 4630 0b44 09D0     		beq	.L291
 4631              		.loc 1 1015 0 is_stmt 0 discriminator 1
 4632 0b46 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4633 0b48 0C33     		adds	r3, r3, #12
 4634 0b4a A74A     		ldr	r2, .L363+4
 4635 0b4c 1344     		add	r3, r3, r2
 4636 0b4e 9B7E     		ldrb	r3, [r3, #26]
 4637 0b50 DBB2     		uxtb	r3, r3
 4638 0b52 03F0F003 		and	r3, r3, #240
 4639 0b56 E02B     		cmp	r3, #224
 4640 0b58 03D0     		beq	.L292
 4641              	.L291:
1016:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4642              		.loc 1 1016 0 is_stmt 1
 4643 0b5a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1017:.\Protocolo.c **** 									return 0;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 103


 4644              		.loc 1 1017 0
 4645 0b5e 0023     		movs	r3, #0
 4646 0b60 8FE2     		b	.L167
 4647              	.L292:
1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4648              		.loc 1 1013 0 discriminator 2
 4649 0b62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4650 0b64 0133     		adds	r3, r3, #1
 4651 0b66 FB73     		strb	r3, [r7, #15]
 4652              	.L290:
1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4653              		.loc 1 1013 0 is_stmt 0 discriminator 1
 4654 0b68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4655 0b6a 072B     		cmp	r3, #7
 4656 0b6c D8D9     		bls	.L293
1018:.\Protocolo.c **** 								}								
1019:.\Protocolo.c **** 							}
1020:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4657              		.loc 1 1020 0 is_stmt 1
 4658 0b6e 0023     		movs	r3, #0
 4659 0b70 FB73     		strb	r3, [r7, #15]
 4660 0b72 0DE0     		b	.L294
 4661              	.L295:
1021:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4662              		.loc 1 1021 0 discriminator 3
 4663 0b74 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4664 0b76 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4665 0b78 3432     		adds	r2, r2, #52
 4666 0b7a 9A49     		ldr	r1, .L363
 4667 0b7c 8A5C     		ldrb	r2, [r1, r2]
 4668 0b7e D1B2     		uxtb	r1, r2
 4669 0b80 994A     		ldr	r2, .L363+4
 4670 0b82 1344     		add	r3, r3, r2
 4671 0b84 0A46     		mov	r2, r1
 4672 0b86 83F84F20 		strb	r2, [r3, #79]
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4673              		.loc 1 1020 0 discriminator 3
 4674 0b8a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4675 0b8c 0133     		adds	r3, r3, #1
 4676 0b8e FB73     		strb	r3, [r7, #15]
 4677              	.L294:
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4678              		.loc 1 1020 0 is_stmt 0 discriminator 1
 4679 0b90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4680 0b92 032B     		cmp	r3, #3
 4681 0b94 EED9     		bls	.L295
1022:.\Protocolo.c **** 							}						
1023:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4682              		.loc 1 1023 0 is_stmt 1
 4683 0b96 0023     		movs	r3, #0
 4684 0b98 FB73     		strb	r3, [r7, #15]
 4685 0b9a 23E0     		b	.L296
 4686              	.L299:
1024:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4687              		.loc 1 1024 0
 4688 0b9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4689 0b9e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 104


 4690 0ba0 4032     		adds	r2, r2, #64
 4691 0ba2 9049     		ldr	r1, .L363
 4692 0ba4 8A5C     		ldrb	r2, [r1, r2]
 4693 0ba6 D1B2     		uxtb	r1, r2
 4694 0ba8 8F4A     		ldr	r2, .L363+4
 4695 0baa 1344     		add	r3, r3, r2
 4696 0bac 0A46     		mov	r2, r1
 4697 0bae 83F83220 		strb	r2, [r3, #50]
1025:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 4698              		.loc 1 1025 0
 4699 0bb2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4700 0bb4 8C4A     		ldr	r2, .L363+4
 4701 0bb6 1344     		add	r3, r3, r2
 4702 0bb8 93F83230 		ldrb	r3, [r3, #50]
 4703 0bbc DBB2     		uxtb	r3, r3
 4704 0bbe 002B     		cmp	r3, #0
 4705 0bc0 09D0     		beq	.L297
 4706              		.loc 1 1025 0 is_stmt 0 discriminator 1
 4707 0bc2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4708 0bc4 884A     		ldr	r2, .L363+4
 4709 0bc6 1344     		add	r3, r3, r2
 4710 0bc8 93F83230 		ldrb	r3, [r3, #50]
 4711 0bcc DBB2     		uxtb	r3, r3
 4712 0bce 03F0F003 		and	r3, r3, #240
 4713 0bd2 E02B     		cmp	r3, #224
 4714 0bd4 03D0     		beq	.L298
 4715              	.L297:
1026:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4716              		.loc 1 1026 0 is_stmt 1
 4717 0bd6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1027:.\Protocolo.c **** 									return 0;
 4718              		.loc 1 1027 0
 4719 0bda 0023     		movs	r3, #0
 4720 0bdc 51E2     		b	.L167
 4721              	.L298:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4722              		.loc 1 1023 0 discriminator 2
 4723 0bde FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4724 0be0 0133     		adds	r3, r3, #1
 4725 0be2 FB73     		strb	r3, [r7, #15]
 4726              	.L296:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4727              		.loc 1 1023 0 is_stmt 0 discriminator 1
 4728 0be4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4729 0be6 072B     		cmp	r3, #7
 4730 0be8 D8D9     		bls	.L299
1028:.\Protocolo.c **** 								}								
1029:.\Protocolo.c **** 							}
1030:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4731              		.loc 1 1030 0 is_stmt 1
 4732 0bea 0023     		movs	r3, #0
 4733 0bec FB73     		strb	r3, [r7, #15]
 4734 0bee 26E0     		b	.L300
 4735              	.L303:
1031:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4736              		.loc 1 1031 0
 4737 0bf0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 105


 4738 0bf2 0C33     		adds	r3, r3, #12
 4739 0bf4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4740 0bf6 4932     		adds	r2, r2, #73
 4741 0bf8 7A49     		ldr	r1, .L363
 4742 0bfa 8A5C     		ldrb	r2, [r1, r2]
 4743 0bfc D1B2     		uxtb	r1, r2
 4744 0bfe 7A4A     		ldr	r2, .L363+4
 4745 0c00 1344     		add	r3, r3, r2
 4746 0c02 0A46     		mov	r2, r1
 4747 0c04 83F83220 		strb	r2, [r3, #50]
1032:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 4748              		.loc 1 1032 0
 4749 0c08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4750 0c0a 0C33     		adds	r3, r3, #12
 4751 0c0c 764A     		ldr	r2, .L363+4
 4752 0c0e 1344     		add	r3, r3, r2
 4753 0c10 93F83230 		ldrb	r3, [r3, #50]
 4754 0c14 DBB2     		uxtb	r3, r3
 4755 0c16 002B     		cmp	r3, #0
 4756 0c18 0AD0     		beq	.L301
 4757              		.loc 1 1032 0 is_stmt 0 discriminator 1
 4758 0c1a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4759 0c1c 0C33     		adds	r3, r3, #12
 4760 0c1e 724A     		ldr	r2, .L363+4
 4761 0c20 1344     		add	r3, r3, r2
 4762 0c22 93F83230 		ldrb	r3, [r3, #50]
 4763 0c26 DBB2     		uxtb	r3, r3
 4764 0c28 03F0F003 		and	r3, r3, #240
 4765 0c2c E02B     		cmp	r3, #224
 4766 0c2e 03D0     		beq	.L302
 4767              	.L301:
1033:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4768              		.loc 1 1033 0 is_stmt 1
 4769 0c30 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1034:.\Protocolo.c **** 									return 0;
 4770              		.loc 1 1034 0
 4771 0c34 0023     		movs	r3, #0
 4772 0c36 24E2     		b	.L167
 4773              	.L302:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4774              		.loc 1 1030 0 discriminator 2
 4775 0c38 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4776 0c3a 0133     		adds	r3, r3, #1
 4777 0c3c FB73     		strb	r3, [r7, #15]
 4778              	.L300:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4779              		.loc 1 1030 0 is_stmt 0 discriminator 1
 4780 0c3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4781 0c40 072B     		cmp	r3, #7
 4782 0c42 D5D9     		bls	.L303
1035:.\Protocolo.c **** 								}								
1036:.\Protocolo.c **** 							}
1037:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4783              		.loc 1 1037 0 is_stmt 1
 4784 0c44 0023     		movs	r3, #0
 4785 0c46 FB73     		strb	r3, [r7, #15]
 4786 0c48 0DE0     		b	.L304
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 106


 4787              	.L305:
1038:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4788              		.loc 1 1038 0 discriminator 3
 4789 0c4a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4790 0c4c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4791 0c4e 5232     		adds	r2, r2, #82
 4792 0c50 6449     		ldr	r1, .L363
 4793 0c52 8A5C     		ldrb	r2, [r1, r2]
 4794 0c54 D1B2     		uxtb	r1, r2
 4795 0c56 644A     		ldr	r2, .L363+4
 4796 0c58 1344     		add	r3, r3, r2
 4797 0c5a 0A46     		mov	r2, r1
 4798 0c5c 83F85420 		strb	r2, [r3, #84]
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4799              		.loc 1 1037 0 discriminator 3
 4800 0c60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4801 0c62 0133     		adds	r3, r3, #1
 4802 0c64 FB73     		strb	r3, [r7, #15]
 4803              	.L304:
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4804              		.loc 1 1037 0 is_stmt 0 discriminator 1
 4805 0c66 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4806 0c68 032B     		cmp	r3, #3
 4807 0c6a EED9     		bls	.L305
1039:.\Protocolo.c **** 							}
1040:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4808              		.loc 1 1040 0 is_stmt 1
 4809 0c6c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1041:.\Protocolo.c ****     						return 3;                            
 4810              		.loc 1 1041 0
 4811 0c70 0323     		movs	r3, #3
 4812 0c72 06E2     		b	.L167
 4813              	.L285:
1042:.\Protocolo.c **** 						}
1043:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4814              		.loc 1 1043 0
 4815 0c74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1044:.\Protocolo.c **** 						return 1;			
 4816              		.loc 1 1044 0
 4817 0c78 0123     		movs	r3, #1
 4818 0c7a 02E2     		b	.L167
 4819              	.L259:
1045:.\Protocolo.c **** 					}
1046:.\Protocolo.c **** 					else{
1047:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4820              		.loc 1 1047 0
 4821 0c7c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1048:.\Protocolo.c **** 						return 0;		
 4822              		.loc 1 1048 0
 4823 0c80 0023     		movs	r3, #0
 4824 0c82 FEE1     		b	.L167
 4825              	.L258:
1049:.\Protocolo.c **** 					}
1050:.\Protocolo.c **** 				}
1051:.\Protocolo.c **** 				else{
1052:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4826              		.loc 1 1052 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 107


 4827 0c84 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1053:.\Protocolo.c **** 					return 0;		
 4828              		.loc 1 1053 0
 4829 0c88 0023     		movs	r3, #0
 4830 0c8a FAE1     		b	.L167
 4831              	.L256:
1054:.\Protocolo.c **** 				}				
1055:.\Protocolo.c **** 			}
1056:.\Protocolo.c **** 			else{
1057:.\Protocolo.c **** 				CyDelay(900);
 4832              		.loc 1 1057 0
 4833 0c8c 4FF46170 		mov	r0, #900
 4834 0c90 FFF7FEFF 		bl	CyDelay
1058:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4835              		.loc 1 1058 0
 4836 0c94 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4837 0c98 0346     		mov	r3, r0
 4838 0c9a FB73     		strb	r3, [r7, #15]
1059:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){					
 4839              		.loc 1 1059 0
 4840 0c9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4841 0c9e 2E2B     		cmp	r3, #46
 4842 0ca0 06D0     		beq	.L306
 4843              		.loc 1 1059 0 is_stmt 0 discriminator 1
 4844 0ca2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4845 0ca4 582B     		cmp	r3, #88
 4846 0ca6 03D0     		beq	.L306
 4847              		.loc 1 1059 0 discriminator 2
 4848 0ca8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4849 0caa 822B     		cmp	r3, #130
 4850 0cac 40F0E481 		bne	.L307
 4851              	.L306:
1060:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4852              		.loc 1 1060 0 is_stmt 1
 4853 0cb0 4C4B     		ldr	r3, .L363
 4854 0cb2 1B78     		ldrb	r3, [r3]
 4855 0cb4 DBB2     		uxtb	r3, r3
 4856 0cb6 FF2B     		cmp	r3, #255
 4857 0cb8 40F0DA81 		bne	.L308
 4858              		.loc 1 1060 0 is_stmt 0 discriminator 1
 4859 0cbc 494B     		ldr	r3, .L363
 4860 0cbe 5B78     		ldrb	r3, [r3, #1]
 4861 0cc0 DBB2     		uxtb	r3, r3
 4862 0cc2 F62B     		cmp	r3, #246
 4863 0cc4 40F0D481 		bne	.L308
 4864              		.loc 1 1060 0 discriminator 2
 4865 0cc8 464B     		ldr	r3, .L363
 4866 0cca DB78     		ldrb	r3, [r3, #3]
 4867 0ccc DBB2     		uxtb	r3, r3
 4868 0cce F92B     		cmp	r3, #249
 4869 0cd0 40F0CE81 		bne	.L308
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4870              		.loc 1 1061 0 is_stmt 1
 4871 0cd4 0023     		movs	r3, #0
 4872 0cd6 BB73     		strb	r3, [r7, #14]
 4873 0cd8 16E0     		b	.L309
 4874              	.L312:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 108


1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4875              		.loc 1 1062 0
 4876 0cda 0023     		movs	r3, #0
 4877 0cdc FB73     		strb	r3, [r7, #15]
 4878 0cde 0DE0     		b	.L310
 4879              	.L311:
1063:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4880              		.loc 1 1063 0 discriminator 3
 4881 0ce0 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4882 0ce2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4883 0ce4 4048     		ldr	r0, .L363+4
 4884 0ce6 1346     		mov	r3, r2
 4885 0ce8 5B00     		lsls	r3, r3, #1
 4886 0cea 1344     		add	r3, r3, r2
 4887 0cec DB00     		lsls	r3, r3, #3
 4888 0cee 0B44     		add	r3, r3, r1
 4889 0cf0 0344     		add	r3, r3, r0
 4890 0cf2 0022     		movs	r2, #0
 4891 0cf4 9A70     		strb	r2, [r3, #2]
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4892              		.loc 1 1062 0 discriminator 3
 4893 0cf6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4894 0cf8 0133     		adds	r3, r3, #1
 4895 0cfa FB73     		strb	r3, [r7, #15]
 4896              	.L310:
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4897              		.loc 1 1062 0 is_stmt 0 discriminator 1
 4898 0cfc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4899 0cfe 172B     		cmp	r3, #23
 4900 0d00 EED9     		bls	.L311
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4901              		.loc 1 1061 0 is_stmt 1 discriminator 2
 4902 0d02 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4903 0d04 0133     		adds	r3, r3, #1
 4904 0d06 BB73     		strb	r3, [r7, #14]
 4905              	.L309:
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4906              		.loc 1 1061 0 is_stmt 0 discriminator 1
 4907 0d08 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4908 0d0a 022B     		cmp	r3, #2
 4909 0d0c E5D9     		bls	.L312
1064:.\Protocolo.c ****                     		}
1065:.\Protocolo.c ****                     	}                         
1066:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4910              		.loc 1 1066 0 is_stmt 1
 4911 0d0e 0023     		movs	r3, #0
 4912 0d10 FB73     		strb	r3, [r7, #15]
 4913 0d12 20E0     		b	.L313
 4914              	.L316:
1067:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4915              		.loc 1 1067 0
 4916 0d14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4917 0d16 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4918 0d18 0432     		adds	r2, r2, #4
 4919 0d1a 3249     		ldr	r1, .L363
 4920 0d1c 8A5C     		ldrb	r2, [r1, r2]
 4921 0d1e D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 109


 4922 0d20 314A     		ldr	r2, .L363+4
 4923 0d22 1344     		add	r3, r3, r2
 4924 0d24 0A46     		mov	r2, r1
 4925 0d26 9A70     		strb	r2, [r3, #2]
1068:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4926              		.loc 1 1068 0
 4927 0d28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4928 0d2a 2F4A     		ldr	r2, .L363+4
 4929 0d2c 1344     		add	r3, r3, r2
 4930 0d2e 9B78     		ldrb	r3, [r3, #2]
 4931 0d30 DBB2     		uxtb	r3, r3
 4932 0d32 002B     		cmp	r3, #0
 4933 0d34 08D0     		beq	.L314
 4934              		.loc 1 1068 0 is_stmt 0 discriminator 1
 4935 0d36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4936 0d38 2B4A     		ldr	r2, .L363+4
 4937 0d3a 1344     		add	r3, r3, r2
 4938 0d3c 9B78     		ldrb	r3, [r3, #2]
 4939 0d3e DBB2     		uxtb	r3, r3
 4940 0d40 03F0F003 		and	r3, r3, #240
 4941 0d44 E02B     		cmp	r3, #224
 4942 0d46 03D0     		beq	.L315
 4943              	.L314:
1069:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4944              		.loc 1 1069 0 is_stmt 1
 4945 0d48 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1070:.\Protocolo.c **** 								return 0;
 4946              		.loc 1 1070 0
 4947 0d4c 0023     		movs	r3, #0
 4948 0d4e 98E1     		b	.L167
 4949              	.L315:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4950              		.loc 1 1066 0 discriminator 2
 4951 0d50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4952 0d52 0133     		adds	r3, r3, #1
 4953 0d54 FB73     		strb	r3, [r7, #15]
 4954              	.L313:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4955              		.loc 1 1066 0 is_stmt 0 discriminator 1
 4956 0d56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4957 0d58 0B2B     		cmp	r3, #11
 4958 0d5a DBD9     		bls	.L316
1071:.\Protocolo.c **** 							}							
1072:.\Protocolo.c **** 						}
1073:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4959              		.loc 1 1073 0 is_stmt 1
 4960 0d5c 0023     		movs	r3, #0
 4961 0d5e FB73     		strb	r3, [r7, #15]
 4962 0d60 23E0     		b	.L317
 4963              	.L320:
1074:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4964              		.loc 1 1074 0
 4965 0d62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4966 0d64 0C33     		adds	r3, r3, #12
 4967 0d66 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4968 0d68 1132     		adds	r2, r2, #17
 4969 0d6a 1E49     		ldr	r1, .L363
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 110


 4970 0d6c 8A5C     		ldrb	r2, [r1, r2]
 4971 0d6e D1B2     		uxtb	r1, r2
 4972 0d70 1D4A     		ldr	r2, .L363+4
 4973 0d72 1344     		add	r3, r3, r2
 4974 0d74 0A46     		mov	r2, r1
 4975 0d76 9A70     		strb	r2, [r3, #2]
1075:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4976              		.loc 1 1075 0
 4977 0d78 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4978 0d7a 0C33     		adds	r3, r3, #12
 4979 0d7c 1A4A     		ldr	r2, .L363+4
 4980 0d7e 1344     		add	r3, r3, r2
 4981 0d80 9B78     		ldrb	r3, [r3, #2]
 4982 0d82 DBB2     		uxtb	r3, r3
 4983 0d84 002B     		cmp	r3, #0
 4984 0d86 09D0     		beq	.L318
 4985              		.loc 1 1075 0 is_stmt 0 discriminator 1
 4986 0d88 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4987 0d8a 0C33     		adds	r3, r3, #12
 4988 0d8c 164A     		ldr	r2, .L363+4
 4989 0d8e 1344     		add	r3, r3, r2
 4990 0d90 9B78     		ldrb	r3, [r3, #2]
 4991 0d92 DBB2     		uxtb	r3, r3
 4992 0d94 03F0F003 		and	r3, r3, #240
 4993 0d98 E02B     		cmp	r3, #224
 4994 0d9a 03D0     		beq	.L319
 4995              	.L318:
1076:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4996              		.loc 1 1076 0 is_stmt 1
 4997 0d9c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1077:.\Protocolo.c **** 								return 0;
 4998              		.loc 1 1077 0
 4999 0da0 0023     		movs	r3, #0
 5000 0da2 6EE1     		b	.L167
 5001              	.L319:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 5002              		.loc 1 1073 0 discriminator 2
 5003 0da4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5004 0da6 0133     		adds	r3, r3, #1
 5005 0da8 FB73     		strb	r3, [r7, #15]
 5006              	.L317:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 5007              		.loc 1 1073 0 is_stmt 0 discriminator 1
 5008 0daa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5009 0dac 0B2B     		cmp	r3, #11
 5010 0dae D8D9     		bls	.L320
1078:.\Protocolo.c **** 							}							
1079:.\Protocolo.c **** 						}
1080:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 5011              		.loc 1 1080 0 is_stmt 1
 5012 0db0 0023     		movs	r3, #0
 5013 0db2 FB73     		strb	r3, [r7, #15]
 5014 0db4 0DE0     		b	.L321
 5015              	.L322:
1081:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5016              		.loc 1 1081 0 discriminator 3
 5017 0db6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 111


 5018 0db8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5019 0dba 1E32     		adds	r2, r2, #30
 5020 0dbc 0949     		ldr	r1, .L363
 5021 0dbe 8A5C     		ldrb	r2, [r1, r2]
 5022 0dc0 D1B2     		uxtb	r1, r2
 5023 0dc2 094A     		ldr	r2, .L363+4
 5024 0dc4 1344     		add	r3, r3, r2
 5025 0dc6 0A46     		mov	r2, r1
 5026 0dc8 83F84A20 		strb	r2, [r3, #74]
1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5027              		.loc 1 1080 0 discriminator 3
 5028 0dcc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5029 0dce 0133     		adds	r3, r3, #1
 5030 0dd0 FB73     		strb	r3, [r7, #15]
 5031              	.L321:
1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5032              		.loc 1 1080 0 is_stmt 0 discriminator 1
 5033 0dd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5034 0dd4 042B     		cmp	r3, #4
 5035 0dd6 EED9     		bls	.L322
1082:.\Protocolo.c **** 						}				
1083:.\Protocolo.c **** 						if(nmangueras==2){
 5036              		.loc 1 1083 0 is_stmt 1
 5037 0dd8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5038 0dda 022B     		cmp	r3, #2
 5039 0ddc 6CD1     		bne	.L323
1084:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5040              		.loc 1 1084 0
 5041 0dde 0023     		movs	r3, #0
 5042 0de0 FB73     		strb	r3, [r7, #15]
 5043 0de2 24E0     		b	.L324
 5044              	.L364:
 5045              		.align	2
 5046              	.L363:
 5047 0de4 00000000 		.word	Surtidor_rxBuffer
 5048 0de8 00000000 		.word	lado2
 5049              	.L327:
1085:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5050              		.loc 1 1085 0
 5051 0dec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5052 0dee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5053 0df0 2E32     		adds	r2, r2, #46
 5054 0df2 A649     		ldr	r1, .L365
 5055 0df4 8A5C     		ldrb	r2, [r1, r2]
 5056 0df6 D1B2     		uxtb	r1, r2
 5057 0df8 A54A     		ldr	r2, .L365+4
 5058 0dfa 1344     		add	r3, r3, r2
 5059 0dfc 0A46     		mov	r2, r1
 5060 0dfe 9A76     		strb	r2, [r3, #26]
1086:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5061              		.loc 1 1086 0
 5062 0e00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5063 0e02 A34A     		ldr	r2, .L365+4
 5064 0e04 1344     		add	r3, r3, r2
 5065 0e06 9B7E     		ldrb	r3, [r3, #26]
 5066 0e08 DBB2     		uxtb	r3, r3
 5067 0e0a 002B     		cmp	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 112


 5068 0e0c 08D0     		beq	.L325
 5069              		.loc 1 1086 0 is_stmt 0 discriminator 1
 5070 0e0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5071 0e10 9F4A     		ldr	r2, .L365+4
 5072 0e12 1344     		add	r3, r3, r2
 5073 0e14 9B7E     		ldrb	r3, [r3, #26]
 5074 0e16 DBB2     		uxtb	r3, r3
 5075 0e18 03F0F003 		and	r3, r3, #240
 5076 0e1c E02B     		cmp	r3, #224
 5077 0e1e 03D0     		beq	.L326
 5078              	.L325:
1087:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5079              		.loc 1 1087 0 is_stmt 1
 5080 0e20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1088:.\Protocolo.c **** 									return 0;
 5081              		.loc 1 1088 0
 5082 0e24 0023     		movs	r3, #0
 5083 0e26 2CE1     		b	.L167
 5084              	.L326:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5085              		.loc 1 1084 0 discriminator 2
 5086 0e28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5087 0e2a 0133     		adds	r3, r3, #1
 5088 0e2c FB73     		strb	r3, [r7, #15]
 5089              	.L324:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5090              		.loc 1 1084 0 is_stmt 0 discriminator 1
 5091 0e2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5092 0e30 0B2B     		cmp	r3, #11
 5093 0e32 DBD9     		bls	.L327
1089:.\Protocolo.c **** 								}								
1090:.\Protocolo.c **** 							}
1091:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5094              		.loc 1 1091 0 is_stmt 1
 5095 0e34 0023     		movs	r3, #0
 5096 0e36 FB73     		strb	r3, [r7, #15]
 5097 0e38 23E0     		b	.L328
 5098              	.L331:
1092:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5099              		.loc 1 1092 0
 5100 0e3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5101 0e3c 0C33     		adds	r3, r3, #12
 5102 0e3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5103 0e40 3B32     		adds	r2, r2, #59
 5104 0e42 9249     		ldr	r1, .L365
 5105 0e44 8A5C     		ldrb	r2, [r1, r2]
 5106 0e46 D1B2     		uxtb	r1, r2
 5107 0e48 914A     		ldr	r2, .L365+4
 5108 0e4a 1344     		add	r3, r3, r2
 5109 0e4c 0A46     		mov	r2, r1
 5110 0e4e 9A76     		strb	r2, [r3, #26]
1093:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5111              		.loc 1 1093 0
 5112 0e50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5113 0e52 0C33     		adds	r3, r3, #12
 5114 0e54 8E4A     		ldr	r2, .L365+4
 5115 0e56 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 113


 5116 0e58 9B7E     		ldrb	r3, [r3, #26]
 5117 0e5a DBB2     		uxtb	r3, r3
 5118 0e5c 002B     		cmp	r3, #0
 5119 0e5e 09D0     		beq	.L329
 5120              		.loc 1 1093 0 is_stmt 0 discriminator 1
 5121 0e60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5122 0e62 0C33     		adds	r3, r3, #12
 5123 0e64 8A4A     		ldr	r2, .L365+4
 5124 0e66 1344     		add	r3, r3, r2
 5125 0e68 9B7E     		ldrb	r3, [r3, #26]
 5126 0e6a DBB2     		uxtb	r3, r3
 5127 0e6c 03F0F003 		and	r3, r3, #240
 5128 0e70 E02B     		cmp	r3, #224
 5129 0e72 03D0     		beq	.L330
 5130              	.L329:
1094:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5131              		.loc 1 1094 0 is_stmt 1
 5132 0e74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1095:.\Protocolo.c **** 									return 0;
 5133              		.loc 1 1095 0
 5134 0e78 0023     		movs	r3, #0
 5135 0e7a 02E1     		b	.L167
 5136              	.L330:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5137              		.loc 1 1091 0 discriminator 2
 5138 0e7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5139 0e7e 0133     		adds	r3, r3, #1
 5140 0e80 FB73     		strb	r3, [r7, #15]
 5141              	.L328:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5142              		.loc 1 1091 0 is_stmt 0 discriminator 1
 5143 0e82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5144 0e84 0B2B     		cmp	r3, #11
 5145 0e86 D8D9     		bls	.L331
1096:.\Protocolo.c **** 								}								
1097:.\Protocolo.c **** 							}
1098:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5146              		.loc 1 1098 0 is_stmt 1
 5147 0e88 0023     		movs	r3, #0
 5148 0e8a FB73     		strb	r3, [r7, #15]
 5149 0e8c 0DE0     		b	.L332
 5150              	.L333:
1099:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5151              		.loc 1 1099 0 discriminator 3
 5152 0e8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5153 0e90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5154 0e92 4832     		adds	r2, r2, #72
 5155 0e94 7D49     		ldr	r1, .L365
 5156 0e96 8A5C     		ldrb	r2, [r1, r2]
 5157 0e98 D1B2     		uxtb	r1, r2
 5158 0e9a 7D4A     		ldr	r2, .L365+4
 5159 0e9c 1344     		add	r3, r3, r2
 5160 0e9e 0A46     		mov	r2, r1
 5161 0ea0 83F84F20 		strb	r2, [r3, #79]
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5162              		.loc 1 1098 0 discriminator 3
 5163 0ea4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 114


 5164 0ea6 0133     		adds	r3, r3, #1
 5165 0ea8 FB73     		strb	r3, [r7, #15]
 5166              	.L332:
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5167              		.loc 1 1098 0 is_stmt 0 discriminator 1
 5168 0eaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5169 0eac 042B     		cmp	r3, #4
 5170 0eae EED9     		bls	.L333
1100:.\Protocolo.c **** 							}
1101:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5171              		.loc 1 1101 0 is_stmt 1
 5172 0eb0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1102:.\Protocolo.c ****     						return 2;                            
 5173              		.loc 1 1102 0
 5174 0eb4 0223     		movs	r3, #2
 5175 0eb6 E4E0     		b	.L167
 5176              	.L323:
1103:.\Protocolo.c **** 						}
1104:.\Protocolo.c **** 						if(nmangueras==3){
 5177              		.loc 1 1104 0
 5178 0eb8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5179 0eba 032B     		cmp	r3, #3
 5180 0ebc 40F0D480 		bne	.L334
1105:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5181              		.loc 1 1105 0
 5182 0ec0 0023     		movs	r3, #0
 5183 0ec2 FB73     		strb	r3, [r7, #15]
 5184 0ec4 20E0     		b	.L335
 5185              	.L338:
1106:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5186              		.loc 1 1106 0
 5187 0ec6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5188 0ec8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5189 0eca 2E32     		adds	r2, r2, #46
 5190 0ecc 6F49     		ldr	r1, .L365
 5191 0ece 8A5C     		ldrb	r2, [r1, r2]
 5192 0ed0 D1B2     		uxtb	r1, r2
 5193 0ed2 6F4A     		ldr	r2, .L365+4
 5194 0ed4 1344     		add	r3, r3, r2
 5195 0ed6 0A46     		mov	r2, r1
 5196 0ed8 9A76     		strb	r2, [r3, #26]
1107:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5197              		.loc 1 1107 0
 5198 0eda FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5199 0edc 6C4A     		ldr	r2, .L365+4
 5200 0ede 1344     		add	r3, r3, r2
 5201 0ee0 9B7E     		ldrb	r3, [r3, #26]
 5202 0ee2 DBB2     		uxtb	r3, r3
 5203 0ee4 002B     		cmp	r3, #0
 5204 0ee6 08D0     		beq	.L336
 5205              		.loc 1 1107 0 is_stmt 0 discriminator 1
 5206 0ee8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5207 0eea 694A     		ldr	r2, .L365+4
 5208 0eec 1344     		add	r3, r3, r2
 5209 0eee 9B7E     		ldrb	r3, [r3, #26]
 5210 0ef0 DBB2     		uxtb	r3, r3
 5211 0ef2 03F0F003 		and	r3, r3, #240
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 115


 5212 0ef6 E02B     		cmp	r3, #224
 5213 0ef8 03D0     		beq	.L337
 5214              	.L336:
1108:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5215              		.loc 1 1108 0 is_stmt 1
 5216 0efa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1109:.\Protocolo.c **** 									return 0;
 5217              		.loc 1 1109 0
 5218 0efe 0023     		movs	r3, #0
 5219 0f00 BFE0     		b	.L167
 5220              	.L337:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5221              		.loc 1 1105 0 discriminator 2
 5222 0f02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5223 0f04 0133     		adds	r3, r3, #1
 5224 0f06 FB73     		strb	r3, [r7, #15]
 5225              	.L335:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5226              		.loc 1 1105 0 is_stmt 0 discriminator 1
 5227 0f08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5228 0f0a 0B2B     		cmp	r3, #11
 5229 0f0c DBD9     		bls	.L338
1110:.\Protocolo.c **** 								}								
1111:.\Protocolo.c **** 							}
1112:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5230              		.loc 1 1112 0 is_stmt 1
 5231 0f0e 0023     		movs	r3, #0
 5232 0f10 FB73     		strb	r3, [r7, #15]
 5233 0f12 23E0     		b	.L339
 5234              	.L342:
1113:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5235              		.loc 1 1113 0
 5236 0f14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5237 0f16 0C33     		adds	r3, r3, #12
 5238 0f18 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5239 0f1a 3B32     		adds	r2, r2, #59
 5240 0f1c 5B49     		ldr	r1, .L365
 5241 0f1e 8A5C     		ldrb	r2, [r1, r2]
 5242 0f20 D1B2     		uxtb	r1, r2
 5243 0f22 5B4A     		ldr	r2, .L365+4
 5244 0f24 1344     		add	r3, r3, r2
 5245 0f26 0A46     		mov	r2, r1
 5246 0f28 9A76     		strb	r2, [r3, #26]
1114:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5247              		.loc 1 1114 0
 5248 0f2a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5249 0f2c 0C33     		adds	r3, r3, #12
 5250 0f2e 584A     		ldr	r2, .L365+4
 5251 0f30 1344     		add	r3, r3, r2
 5252 0f32 9B7E     		ldrb	r3, [r3, #26]
 5253 0f34 DBB2     		uxtb	r3, r3
 5254 0f36 002B     		cmp	r3, #0
 5255 0f38 09D0     		beq	.L340
 5256              		.loc 1 1114 0 is_stmt 0 discriminator 1
 5257 0f3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5258 0f3c 0C33     		adds	r3, r3, #12
 5259 0f3e 544A     		ldr	r2, .L365+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 116


 5260 0f40 1344     		add	r3, r3, r2
 5261 0f42 9B7E     		ldrb	r3, [r3, #26]
 5262 0f44 DBB2     		uxtb	r3, r3
 5263 0f46 03F0F003 		and	r3, r3, #240
 5264 0f4a E02B     		cmp	r3, #224
 5265 0f4c 03D0     		beq	.L341
 5266              	.L340:
1115:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5267              		.loc 1 1115 0 is_stmt 1
 5268 0f4e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1116:.\Protocolo.c **** 									return 0;
 5269              		.loc 1 1116 0
 5270 0f52 0023     		movs	r3, #0
 5271 0f54 95E0     		b	.L167
 5272              	.L341:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5273              		.loc 1 1112 0 discriminator 2
 5274 0f56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5275 0f58 0133     		adds	r3, r3, #1
 5276 0f5a FB73     		strb	r3, [r7, #15]
 5277              	.L339:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5278              		.loc 1 1112 0 is_stmt 0 discriminator 1
 5279 0f5c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5280 0f5e 0B2B     		cmp	r3, #11
 5281 0f60 D8D9     		bls	.L342
1117:.\Protocolo.c **** 								}								
1118:.\Protocolo.c **** 							}
1119:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5282              		.loc 1 1119 0 is_stmt 1
 5283 0f62 0023     		movs	r3, #0
 5284 0f64 FB73     		strb	r3, [r7, #15]
 5285 0f66 0DE0     		b	.L343
 5286              	.L344:
1120:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5287              		.loc 1 1120 0 discriminator 3
 5288 0f68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5289 0f6a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5290 0f6c 4832     		adds	r2, r2, #72
 5291 0f6e 4749     		ldr	r1, .L365
 5292 0f70 8A5C     		ldrb	r2, [r1, r2]
 5293 0f72 D1B2     		uxtb	r1, r2
 5294 0f74 464A     		ldr	r2, .L365+4
 5295 0f76 1344     		add	r3, r3, r2
 5296 0f78 0A46     		mov	r2, r1
 5297 0f7a 83F84F20 		strb	r2, [r3, #79]
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5298              		.loc 1 1119 0 discriminator 3
 5299 0f7e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5300 0f80 0133     		adds	r3, r3, #1
 5301 0f82 FB73     		strb	r3, [r7, #15]
 5302              	.L343:
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5303              		.loc 1 1119 0 is_stmt 0 discriminator 1
 5304 0f84 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5305 0f86 042B     		cmp	r3, #4
 5306 0f88 EED9     		bls	.L344
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 117


1121:.\Protocolo.c **** 							}					
1122:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5307              		.loc 1 1122 0 is_stmt 1
 5308 0f8a 0023     		movs	r3, #0
 5309 0f8c FB73     		strb	r3, [r7, #15]
 5310 0f8e 23E0     		b	.L345
 5311              	.L348:
1123:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5312              		.loc 1 1123 0
 5313 0f90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5314 0f92 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5315 0f94 5832     		adds	r2, r2, #88
 5316 0f96 3D49     		ldr	r1, .L365
 5317 0f98 8A5C     		ldrb	r2, [r1, r2]
 5318 0f9a D1B2     		uxtb	r1, r2
 5319 0f9c 3C4A     		ldr	r2, .L365+4
 5320 0f9e 1344     		add	r3, r3, r2
 5321 0fa0 0A46     		mov	r2, r1
 5322 0fa2 83F83220 		strb	r2, [r3, #50]
1124:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 5323              		.loc 1 1124 0
 5324 0fa6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5325 0fa8 394A     		ldr	r2, .L365+4
 5326 0faa 1344     		add	r3, r3, r2
 5327 0fac 93F83230 		ldrb	r3, [r3, #50]
 5328 0fb0 DBB2     		uxtb	r3, r3
 5329 0fb2 002B     		cmp	r3, #0
 5330 0fb4 09D0     		beq	.L346
 5331              		.loc 1 1124 0 is_stmt 0 discriminator 1
 5332 0fb6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5333 0fb8 354A     		ldr	r2, .L365+4
 5334 0fba 1344     		add	r3, r3, r2
 5335 0fbc 93F83230 		ldrb	r3, [r3, #50]
 5336 0fc0 DBB2     		uxtb	r3, r3
 5337 0fc2 03F0F003 		and	r3, r3, #240
 5338 0fc6 E02B     		cmp	r3, #224
 5339 0fc8 03D0     		beq	.L347
 5340              	.L346:
1125:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5341              		.loc 1 1125 0 is_stmt 1
 5342 0fca FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1126:.\Protocolo.c **** 									return 0;
 5343              		.loc 1 1126 0
 5344 0fce 0023     		movs	r3, #0
 5345 0fd0 57E0     		b	.L167
 5346              	.L347:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5347              		.loc 1 1122 0 discriminator 2
 5348 0fd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5349 0fd4 0133     		adds	r3, r3, #1
 5350 0fd6 FB73     		strb	r3, [r7, #15]
 5351              	.L345:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5352              		.loc 1 1122 0 is_stmt 0 discriminator 1
 5353 0fd8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5354 0fda 0B2B     		cmp	r3, #11
 5355 0fdc D8D9     		bls	.L348
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 118


1127:.\Protocolo.c **** 								}								
1128:.\Protocolo.c **** 							}
1129:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5356              		.loc 1 1129 0 is_stmt 1
 5357 0fde 0023     		movs	r3, #0
 5358 0fe0 FB73     		strb	r3, [r7, #15]
 5359 0fe2 26E0     		b	.L349
 5360              	.L352:
1130:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5361              		.loc 1 1130 0
 5362 0fe4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5363 0fe6 0C33     		adds	r3, r3, #12
 5364 0fe8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5365 0fea 6532     		adds	r2, r2, #101
 5366 0fec 2749     		ldr	r1, .L365
 5367 0fee 8A5C     		ldrb	r2, [r1, r2]
 5368 0ff0 D1B2     		uxtb	r1, r2
 5369 0ff2 274A     		ldr	r2, .L365+4
 5370 0ff4 1344     		add	r3, r3, r2
 5371 0ff6 0A46     		mov	r2, r1
 5372 0ff8 83F83220 		strb	r2, [r3, #50]
1131:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 5373              		.loc 1 1131 0
 5374 0ffc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5375 0ffe 0C33     		adds	r3, r3, #12
 5376 1000 234A     		ldr	r2, .L365+4
 5377 1002 1344     		add	r3, r3, r2
 5378 1004 93F83230 		ldrb	r3, [r3, #50]
 5379 1008 DBB2     		uxtb	r3, r3
 5380 100a 002B     		cmp	r3, #0
 5381 100c 0AD0     		beq	.L350
 5382              		.loc 1 1131 0 is_stmt 0 discriminator 1
 5383 100e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5384 1010 0C33     		adds	r3, r3, #12
 5385 1012 1F4A     		ldr	r2, .L365+4
 5386 1014 1344     		add	r3, r3, r2
 5387 1016 93F83230 		ldrb	r3, [r3, #50]
 5388 101a DBB2     		uxtb	r3, r3
 5389 101c 03F0F003 		and	r3, r3, #240
 5390 1020 E02B     		cmp	r3, #224
 5391 1022 03D0     		beq	.L351
 5392              	.L350:
1132:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5393              		.loc 1 1132 0 is_stmt 1
 5394 1024 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1133:.\Protocolo.c **** 									return 0;
 5395              		.loc 1 1133 0
 5396 1028 0023     		movs	r3, #0
 5397 102a 2AE0     		b	.L167
 5398              	.L351:
1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5399              		.loc 1 1129 0 discriminator 2
 5400 102c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5401 102e 0133     		adds	r3, r3, #1
 5402 1030 FB73     		strb	r3, [r7, #15]
 5403              	.L349:
1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 119


 5404              		.loc 1 1129 0 is_stmt 0 discriminator 1
 5405 1032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5406 1034 0B2B     		cmp	r3, #11
 5407 1036 D5D9     		bls	.L352
1134:.\Protocolo.c **** 								}								
1135:.\Protocolo.c **** 							}
1136:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5408              		.loc 1 1136 0 is_stmt 1
 5409 1038 0023     		movs	r3, #0
 5410 103a FB73     		strb	r3, [r7, #15]
 5411 103c 0DE0     		b	.L353
 5412              	.L354:
1137:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5413              		.loc 1 1137 0 discriminator 3
 5414 103e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5415 1040 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5416 1042 7232     		adds	r2, r2, #114
 5417 1044 1149     		ldr	r1, .L365
 5418 1046 8A5C     		ldrb	r2, [r1, r2]
 5419 1048 D1B2     		uxtb	r1, r2
 5420 104a 114A     		ldr	r2, .L365+4
 5421 104c 1344     		add	r3, r3, r2
 5422 104e 0A46     		mov	r2, r1
 5423 1050 83F85420 		strb	r2, [r3, #84]
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5424              		.loc 1 1136 0 discriminator 3
 5425 1054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5426 1056 0133     		adds	r3, r3, #1
 5427 1058 FB73     		strb	r3, [r7, #15]
 5428              	.L353:
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5429              		.loc 1 1136 0 is_stmt 0 discriminator 1
 5430 105a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5431 105c 042B     		cmp	r3, #4
 5432 105e EED9     		bls	.L354
1138:.\Protocolo.c **** 							}
1139:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5433              		.loc 1 1139 0 is_stmt 1
 5434 1060 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1140:.\Protocolo.c ****     						return 3;                            
 5435              		.loc 1 1140 0
 5436 1064 0323     		movs	r3, #3
 5437 1066 0CE0     		b	.L167
 5438              	.L334:
1141:.\Protocolo.c **** 						}
1142:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5439              		.loc 1 1142 0
 5440 1068 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1143:.\Protocolo.c **** 						return 1;			
 5441              		.loc 1 1143 0
 5442 106c 0123     		movs	r3, #1
 5443 106e 08E0     		b	.L167
 5444              	.L308:
1144:.\Protocolo.c **** 					}
1145:.\Protocolo.c **** 					else{
1146:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5445              		.loc 1 1146 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 120


 5446 1070 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1147:.\Protocolo.c **** 						return 0;		
 5447              		.loc 1 1147 0
 5448 1074 0023     		movs	r3, #0
 5449 1076 04E0     		b	.L167
 5450              	.L307:
1148:.\Protocolo.c **** 					}
1149:.\Protocolo.c **** 				}
1150:.\Protocolo.c **** 				else{
1151:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 5451              		.loc 1 1151 0
 5452 1078 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1152:.\Protocolo.c **** 					return 0;		
 5453              		.loc 1 1152 0
 5454 107c 0023     		movs	r3, #0
 5455 107e 00E0     		b	.L167
 5456              	.L154:
1153:.\Protocolo.c **** 				}				
1154:.\Protocolo.c **** 			}		
1155:.\Protocolo.c **** 		}
1156:.\Protocolo.c **** 	}
1157:.\Protocolo.c **** 	else{
1158:.\Protocolo.c **** 		return 0;
 5457              		.loc 1 1158 0
 5458 1080 0023     		movs	r3, #0
 5459              	.L167:
1159:.\Protocolo.c **** 	}
1160:.\Protocolo.c **** }
 5460              		.loc 1 1160 0
 5461 1082 1846     		mov	r0, r3
 5462 1084 1037     		adds	r7, r7, #16
 5463              		.cfi_def_cfa_offset 8
 5464 1086 BD46     		mov	sp, r7
 5465              		.cfi_def_cfa_register 13
 5466              		@ sp needed
 5467 1088 80BD     		pop	{r7, pc}
 5468              	.L366:
 5469 108a 00BF     		.align	2
 5470              	.L365:
 5471 108c 00000000 		.word	Surtidor_rxBuffer
 5472 1090 00000000 		.word	lado2
 5473              		.cfi_endproc
 5474              	.LFE72:
 5475              		.size	totales, .-totales
 5476              		.text
 5477              	.Letext0:
 5478              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5479              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5480              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5481              		.file 5 ".\\VariablesG.h"
 5482              		.file 6 "Generated_Source\\PSoC5/Surtidor.h"
 5483              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 5484              		.section	.debug_info,"",%progbits
 5485              	.Ldebug_info0:
 5486 0000 CB0B0000 		.4byte	0xbcb
 5487 0004 0400     		.2byte	0x4
 5488 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 121


 5489 000a 04       		.byte	0x4
 5490 000b 01       		.uleb128 0x1
 5491 000c 09030000 		.4byte	.LASF128
 5492 0010 01       		.byte	0x1
 5493 0011 64010000 		.4byte	.LASF129
 5494 0015 39000000 		.4byte	.LASF130
 5495 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5496 001d 00000000 		.4byte	0
 5497 0021 00000000 		.4byte	.Ldebug_line0
 5498 0025 02       		.uleb128 0x2
 5499 0026 01       		.byte	0x1
 5500 0027 06       		.byte	0x6
 5501 0028 04050000 		.4byte	.LASF0
 5502 002c 02       		.uleb128 0x2
 5503 002d 01       		.byte	0x1
 5504 002e 08       		.byte	0x8
 5505 002f BA040000 		.4byte	.LASF1
 5506 0033 02       		.uleb128 0x2
 5507 0034 02       		.byte	0x2
 5508 0035 05       		.byte	0x5
 5509 0036 1A040000 		.4byte	.LASF2
 5510 003a 02       		.uleb128 0x2
 5511 003b 02       		.byte	0x2
 5512 003c 07       		.byte	0x7
 5513 003d 26050000 		.4byte	.LASF3
 5514 0041 03       		.uleb128 0x3
 5515 0042 9E000000 		.4byte	.LASF9
 5516 0046 02       		.byte	0x2
 5517 0047 3F       		.byte	0x3f
 5518 0048 4C000000 		.4byte	0x4c
 5519 004c 02       		.uleb128 0x2
 5520 004d 04       		.byte	0x4
 5521 004e 05       		.byte	0x5
 5522 004f 24040000 		.4byte	.LASF4
 5523 0053 02       		.uleb128 0x2
 5524 0054 04       		.byte	0x4
 5525 0055 07       		.byte	0x7
 5526 0056 8B040000 		.4byte	.LASF5
 5527 005a 02       		.uleb128 0x2
 5528 005b 08       		.byte	0x8
 5529 005c 05       		.byte	0x5
 5530 005d DC020000 		.4byte	.LASF6
 5531 0061 02       		.uleb128 0x2
 5532 0062 08       		.byte	0x8
 5533 0063 07       		.byte	0x7
 5534 0064 4D010000 		.4byte	.LASF7
 5535 0068 04       		.uleb128 0x4
 5536 0069 04       		.byte	0x4
 5537 006a 05       		.byte	0x5
 5538 006b 696E7400 		.ascii	"int\000"
 5539 006f 02       		.uleb128 0x2
 5540 0070 04       		.byte	0x4
 5541 0071 07       		.byte	0x7
 5542 0072 89000000 		.4byte	.LASF8
 5543 0076 03       		.uleb128 0x3
 5544 0077 9D040000 		.4byte	.LASF10
 5545 007b 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 122


 5546 007c 2C       		.byte	0x2c
 5547 007d 41000000 		.4byte	0x41
 5548 0081 03       		.uleb128 0x3
 5549 0082 3F050000 		.4byte	.LASF11
 5550 0086 04       		.byte	0x4
 5551 0087 B4       		.byte	0xb4
 5552 0088 2C000000 		.4byte	0x2c
 5553 008c 03       		.uleb128 0x3
 5554 008d 6D020000 		.4byte	.LASF12
 5555 0091 04       		.byte	0x4
 5556 0092 B5       		.byte	0xb5
 5557 0093 3A000000 		.4byte	0x3a
 5558 0097 02       		.uleb128 0x2
 5559 0098 04       		.byte	0x4
 5560 0099 04       		.byte	0x4
 5561 009a 0E010000 		.4byte	.LASF13
 5562 009e 02       		.uleb128 0x2
 5563 009f 08       		.byte	0x8
 5564 00a0 04       		.byte	0x4
 5565 00a1 45050000 		.4byte	.LASF14
 5566 00a5 02       		.uleb128 0x2
 5567 00a6 01       		.byte	0x1
 5568 00a7 08       		.byte	0x8
 5569 00a8 52020000 		.4byte	.LASF15
 5570 00ac 05       		.uleb128 0x5
 5571 00ad 81000000 		.4byte	0x81
 5572 00b1 05       		.uleb128 0x5
 5573 00b2 8C000000 		.4byte	0x8c
 5574 00b6 02       		.uleb128 0x2
 5575 00b7 04       		.byte	0x4
 5576 00b8 07       		.byte	0x7
 5577 00b9 82040000 		.4byte	.LASF16
 5578 00bd 06       		.uleb128 0x6
 5579 00be 81000000 		.4byte	0x81
 5580 00c2 CD000000 		.4byte	0xcd
 5581 00c6 07       		.uleb128 0x7
 5582 00c7 B6000000 		.4byte	0xb6
 5583 00cb 03       		.byte	0x3
 5584 00cc 00       		.byte	0
 5585 00cd 08       		.uleb128 0x8
 5586 00ce 3A040000 		.4byte	.LASF21
 5587 00d2 5D       		.byte	0x5d
 5588 00d3 05       		.byte	0x5
 5589 00d4 5D       		.byte	0x5d
 5590 00d5 22010000 		.4byte	0x122
 5591 00d9 09       		.uleb128 0x9
 5592 00da 64697200 		.ascii	"dir\000"
 5593 00de 05       		.byte	0x5
 5594 00df 5E       		.byte	0x5e
 5595 00e0 AC000000 		.4byte	0xac
 5596 00e4 00       		.byte	0
 5597 00e5 0A       		.uleb128 0xa
 5598 00e6 CD030000 		.4byte	.LASF17
 5599 00ea 05       		.byte	0x5
 5600 00eb 5F       		.byte	0x5f
 5601 00ec AC000000 		.4byte	0xac
 5602 00f0 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 123


 5603 00f1 0A       		.uleb128 0xa
 5604 00f2 9F020000 		.4byte	.LASF18
 5605 00f6 05       		.byte	0x5
 5606 00f7 60       		.byte	0x60
 5607 00f8 38010000 		.4byte	0x138
 5608 00fc 02       		.byte	0x2
 5609 00fd 09       		.uleb128 0x9
 5610 00fe 70707500 		.ascii	"ppu\000"
 5611 0102 05       		.byte	0x5
 5612 0103 61       		.byte	0x61
 5613 0104 53010000 		.4byte	0x153
 5614 0108 4A       		.byte	0x4a
 5615 0109 0A       		.uleb128 0xa
 5616 010a 86050000 		.4byte	.LASF19
 5617 010e 05       		.byte	0x5
 5618 010f 62       		.byte	0x62
 5619 0110 6E010000 		.4byte	0x16e
 5620 0114 59       		.byte	0x59
 5621 0115 0A       		.uleb128 0xa
 5622 0116 63020000 		.4byte	.LASF20
 5623 011a 05       		.byte	0x5
 5624 011b 63       		.byte	0x63
 5625 011c AC000000 		.4byte	0xac
 5626 0120 5C       		.byte	0x5c
 5627 0121 00       		.byte	0
 5628 0122 06       		.uleb128 0x6
 5629 0123 81000000 		.4byte	0x81
 5630 0127 38010000 		.4byte	0x138
 5631 012b 07       		.uleb128 0x7
 5632 012c B6000000 		.4byte	0xb6
 5633 0130 02       		.byte	0x2
 5634 0131 07       		.uleb128 0x7
 5635 0132 B6000000 		.4byte	0xb6
 5636 0136 17       		.byte	0x17
 5637 0137 00       		.byte	0
 5638 0138 05       		.uleb128 0x5
 5639 0139 22010000 		.4byte	0x122
 5640 013d 06       		.uleb128 0x6
 5641 013e 81000000 		.4byte	0x81
 5642 0142 53010000 		.4byte	0x153
 5643 0146 07       		.uleb128 0x7
 5644 0147 B6000000 		.4byte	0xb6
 5645 014b 02       		.byte	0x2
 5646 014c 07       		.uleb128 0x7
 5647 014d B6000000 		.4byte	0xb6
 5648 0151 04       		.byte	0x4
 5649 0152 00       		.byte	0
 5650 0153 05       		.uleb128 0x5
 5651 0154 3D010000 		.4byte	0x13d
 5652 0158 06       		.uleb128 0x6
 5653 0159 81000000 		.4byte	0x81
 5654 015d 6E010000 		.4byte	0x16e
 5655 0161 07       		.uleb128 0x7
 5656 0162 B6000000 		.4byte	0xb6
 5657 0166 02       		.byte	0x2
 5658 0167 07       		.uleb128 0x7
 5659 0168 B6000000 		.4byte	0xb6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 124


 5660 016c 00       		.byte	0
 5661 016d 00       		.byte	0
 5662 016e 05       		.uleb128 0x5
 5663 016f 58010000 		.4byte	0x158
 5664 0173 08       		.uleb128 0x8
 5665 0174 B3030000 		.4byte	.LASF22
 5666 0178 76       		.byte	0x76
 5667 0179 05       		.byte	0x5
 5668 017a 74       		.byte	0x74
 5669 017b 62020000 		.4byte	0x262
 5670 017f 0A       		.uleb128 0xa
 5671 0180 DA000000 		.4byte	.LASF23
 5672 0184 05       		.byte	0x5
 5673 0185 75       		.byte	0x75
 5674 0186 81000000 		.4byte	0x81
 5675 018a 00       		.byte	0
 5676 018b 0A       		.uleb128 0xa
 5677 018c 86050000 		.4byte	.LASF19
 5678 0190 05       		.byte	0x5
 5679 0191 76       		.byte	0x76
 5680 0192 81000000 		.4byte	0x81
 5681 0196 01       		.byte	0x1
 5682 0197 09       		.uleb128 0x9
 5683 0198 70707500 		.ascii	"ppu\000"
 5684 019c 05       		.byte	0x5
 5685 019d 77       		.byte	0x77
 5686 019e 62020000 		.4byte	0x262
 5687 01a2 02       		.byte	0x2
 5688 01a3 0A       		.uleb128 0xa
 5689 01a4 BA030000 		.4byte	.LASF24
 5690 01a8 05       		.byte	0x5
 5691 01a9 78       		.byte	0x78
 5692 01aa 72020000 		.4byte	0x272
 5693 01ae 07       		.byte	0x7
 5694 01af 0A       		.uleb128 0xa
 5695 01b0 E7010000 		.4byte	.LASF25
 5696 01b4 05       		.byte	0x5
 5697 01b5 79       		.byte	0x79
 5698 01b6 72020000 		.4byte	0x272
 5699 01ba 10       		.byte	0x10
 5700 01bb 0A       		.uleb128 0xa
 5701 01bc EA020000 		.4byte	.LASF26
 5702 01c0 05       		.byte	0x5
 5703 01c1 7A       		.byte	0x7a
 5704 01c2 81000000 		.4byte	0x81
 5705 01c6 19       		.byte	0x19
 5706 01c7 0A       		.uleb128 0xa
 5707 01c8 70050000 		.4byte	.LASF27
 5708 01cc 05       		.byte	0x5
 5709 01cd 7B       		.byte	0x7b
 5710 01ce 81000000 		.4byte	0x81
 5711 01d2 1A       		.byte	0x1a
 5712 01d3 0A       		.uleb128 0xa
 5713 01d4 07010000 		.4byte	.LASF28
 5714 01d8 05       		.byte	0x5
 5715 01d9 7C       		.byte	0x7c
 5716 01da 82020000 		.4byte	0x282
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 125


 5717 01de 1B       		.byte	0x1b
 5718 01df 09       		.uleb128 0x9
 5719 01e0 696400   		.ascii	"id\000"
 5720 01e3 05       		.byte	0x5
 5721 01e4 7D       		.byte	0x7d
 5722 01e5 92020000 		.4byte	0x292
 5723 01e9 23       		.byte	0x23
 5724 01ea 0A       		.uleb128 0xa
 5725 01eb 93020000 		.4byte	.LASF29
 5726 01ef 05       		.byte	0x5
 5727 01f0 7E       		.byte	0x7e
 5728 01f1 92020000 		.4byte	0x292
 5729 01f5 33       		.byte	0x33
 5730 01f6 09       		.uleb128 0x9
 5731 01f7 6B6D00   		.ascii	"km\000"
 5732 01fa 05       		.byte	0x5
 5733 01fb 7F       		.byte	0x7f
 5734 01fc A2020000 		.4byte	0x2a2
 5735 0200 43       		.byte	0x43
 5736 0201 0A       		.uleb128 0xa
 5737 0202 BA010000 		.4byte	.LASF30
 5738 0206 05       		.byte	0x5
 5739 0207 80       		.byte	0x80
 5740 0208 72020000 		.4byte	0x272
 5741 020c 4E       		.byte	0x4e
 5742 020d 0A       		.uleb128 0xa
 5743 020e 44010000 		.4byte	.LASF31
 5744 0212 05       		.byte	0x5
 5745 0213 81       		.byte	0x81
 5746 0214 81000000 		.4byte	0x81
 5747 0218 57       		.byte	0x57
 5748 0219 0A       		.uleb128 0xa
 5749 021a 88020000 		.4byte	.LASF32
 5750 021e 05       		.byte	0x5
 5751 021f 82       		.byte	0x82
 5752 0220 81000000 		.4byte	0x81
 5753 0224 58       		.byte	0x58
 5754 0225 0A       		.uleb128 0xa
 5755 0226 02030000 		.4byte	.LASF33
 5756 022a 05       		.byte	0x5
 5757 022b 83       		.byte	0x83
 5758 022c A2020000 		.4byte	0x2a2
 5759 0230 59       		.byte	0x59
 5760 0231 0A       		.uleb128 0xa
 5761 0232 00000000 		.4byte	.LASF34
 5762 0236 05       		.byte	0x5
 5763 0237 84       		.byte	0x84
 5764 0238 A2020000 		.4byte	0x2a2
 5765 023c 64       		.byte	0x64
 5766 023d 0A       		.uleb128 0xa
 5767 023e 99020000 		.4byte	.LASF35
 5768 0242 05       		.byte	0x5
 5769 0243 85       		.byte	0x85
 5770 0244 81000000 		.4byte	0x81
 5771 0248 6F       		.byte	0x6f
 5772 0249 0A       		.uleb128 0xa
 5773 024a AF040000 		.4byte	.LASF36
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 126


 5774 024e 05       		.byte	0x5
 5775 024f 86       		.byte	0x86
 5776 0250 81000000 		.4byte	0x81
 5777 0254 70       		.byte	0x70
 5778 0255 0A       		.uleb128 0xa
 5779 0256 E0030000 		.4byte	.LASF37
 5780 025a 05       		.byte	0x5
 5781 025b 87       		.byte	0x87
 5782 025c 62020000 		.4byte	0x262
 5783 0260 71       		.byte	0x71
 5784 0261 00       		.byte	0
 5785 0262 06       		.uleb128 0x6
 5786 0263 81000000 		.4byte	0x81
 5787 0267 72020000 		.4byte	0x272
 5788 026b 07       		.uleb128 0x7
 5789 026c B6000000 		.4byte	0xb6
 5790 0270 04       		.byte	0x4
 5791 0271 00       		.byte	0
 5792 0272 06       		.uleb128 0x6
 5793 0273 81000000 		.4byte	0x81
 5794 0277 82020000 		.4byte	0x282
 5795 027b 07       		.uleb128 0x7
 5796 027c B6000000 		.4byte	0xb6
 5797 0280 08       		.byte	0x8
 5798 0281 00       		.byte	0
 5799 0282 06       		.uleb128 0x6
 5800 0283 81000000 		.4byte	0x81
 5801 0287 92020000 		.4byte	0x292
 5802 028b 07       		.uleb128 0x7
 5803 028c B6000000 		.4byte	0xb6
 5804 0290 07       		.byte	0x7
 5805 0291 00       		.byte	0
 5806 0292 06       		.uleb128 0x6
 5807 0293 81000000 		.4byte	0x81
 5808 0297 A2020000 		.4byte	0x2a2
 5809 029b 07       		.uleb128 0x7
 5810 029c B6000000 		.4byte	0xb6
 5811 02a0 0F       		.byte	0xf
 5812 02a1 00       		.byte	0
 5813 02a2 06       		.uleb128 0x6
 5814 02a3 81000000 		.4byte	0x81
 5815 02a7 B2020000 		.4byte	0x2b2
 5816 02ab 07       		.uleb128 0x7
 5817 02ac B6000000 		.4byte	0xb6
 5818 02b0 0A       		.byte	0xa
 5819 02b1 00       		.byte	0
 5820 02b2 0B       		.uleb128 0xb
 5821 02b3 8C050000 		.4byte	.LASF131
 5822 02b7 01       		.byte	0x1
 5823 02b8 3F       		.byte	0x3f
 5824 02b9 00000000 		.4byte	.LFB63
 5825 02bd 14000000 		.4byte	.LFE63-.LFB63
 5826 02c1 01       		.uleb128 0x1
 5827 02c2 9C       		.byte	0x9c
 5828 02c3 0C       		.uleb128 0xc
 5829 02c4 C8040000 		.4byte	.LASF38
 5830 02c8 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 127


 5831 02c9 56       		.byte	0x56
 5832 02ca 81000000 		.4byte	0x81
 5833 02ce 00000000 		.4byte	.LFB64
 5834 02d2 98000000 		.4byte	.LFE64-.LFB64
 5835 02d6 01       		.uleb128 0x1
 5836 02d7 9C       		.byte	0x9c
 5837 02d8 F9020000 		.4byte	0x2f9
 5838 02dc 0D       		.uleb128 0xd
 5839 02dd 64697200 		.ascii	"dir\000"
 5840 02e1 01       		.byte	0x1
 5841 02e2 56       		.byte	0x56
 5842 02e3 81000000 		.4byte	0x81
 5843 02e7 02       		.uleb128 0x2
 5844 02e8 91       		.byte	0x91
 5845 02e9 6F       		.sleb128 -17
 5846 02ea 0E       		.uleb128 0xe
 5847 02eb CD030000 		.4byte	.LASF17
 5848 02ef 01       		.byte	0x1
 5849 02f0 57       		.byte	0x57
 5850 02f1 81000000 		.4byte	0x81
 5851 02f5 02       		.uleb128 0x2
 5852 02f6 91       		.byte	0x91
 5853 02f7 77       		.sleb128 -9
 5854 02f8 00       		.byte	0
 5855 02f9 0C       		.uleb128 0xc
 5856 02fa DF010000 		.4byte	.LASF39
 5857 02fe 01       		.byte	0x1
 5858 02ff 86       		.byte	0x86
 5859 0300 81000000 		.4byte	0x81
 5860 0304 00000000 		.4byte	.LFB65
 5861 0308 A0000000 		.4byte	.LFE65-.LFB65
 5862 030c 01       		.uleb128 0x1
 5863 030d 9C       		.byte	0x9c
 5864 030e 1F030000 		.4byte	0x31f
 5865 0312 0F       		.uleb128 0xf
 5866 0313 7800     		.ascii	"x\000"
 5867 0315 01       		.byte	0x1
 5868 0316 87       		.byte	0x87
 5869 0317 81000000 		.4byte	0x81
 5870 031b 02       		.uleb128 0x2
 5871 031c 91       		.byte	0x91
 5872 031d 77       		.sleb128 -9
 5873 031e 00       		.byte	0
 5874 031f 10       		.uleb128 0x10
 5875 0320 E3040000 		.4byte	.LASF43
 5876 0324 01       		.byte	0x1
 5877 0325 B2       		.byte	0xb2
 5878 0326 00000000 		.4byte	.LFB66
 5879 032a 36000000 		.4byte	.LFE66-.LFB66
 5880 032e 01       		.uleb128 0x1
 5881 032f 9C       		.byte	0x9c
 5882 0330 51030000 		.4byte	0x351
 5883 0334 0D       		.uleb128 0xd
 5884 0335 76616C00 		.ascii	"val\000"
 5885 0339 01       		.byte	0x1
 5886 033a B2       		.byte	0xb2
 5887 033b 81000000 		.4byte	0x81
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 128


 5888 033f 02       		.uleb128 0x2
 5889 0340 91       		.byte	0x91
 5890 0341 6F       		.sleb128 -17
 5891 0342 0E       		.uleb128 0xe
 5892 0343 CD030000 		.4byte	.LASF17
 5893 0347 01       		.byte	0x1
 5894 0348 B3       		.byte	0xb3
 5895 0349 81000000 		.4byte	0x81
 5896 034d 02       		.uleb128 0x2
 5897 034e 91       		.byte	0x91
 5898 034f 77       		.sleb128 -9
 5899 0350 00       		.byte	0
 5900 0351 0C       		.uleb128 0xc
 5901 0352 6E040000 		.4byte	.LASF40
 5902 0356 01       		.byte	0x1
 5903 0357 CF       		.byte	0xcf
 5904 0358 81000000 		.4byte	0x81
 5905 035c 00000000 		.4byte	.LFB67
 5906 0360 7C010000 		.4byte	.LFE67-.LFB67
 5907 0364 01       		.uleb128 0x1
 5908 0365 9C       		.byte	0x9c
 5909 0366 A1030000 		.4byte	0x3a1
 5910 036a 0D       		.uleb128 0xd
 5911 036b 76616C00 		.ascii	"val\000"
 5912 036f 01       		.byte	0x1
 5913 0370 CF       		.byte	0xcf
 5914 0371 81000000 		.4byte	0x81
 5915 0375 02       		.uleb128 0x2
 5916 0376 91       		.byte	0x91
 5917 0377 4F       		.sleb128 -49
 5918 0378 0E       		.uleb128 0xe
 5919 0379 4C050000 		.4byte	.LASF41
 5920 037d 01       		.byte	0x1
 5921 037e D0       		.byte	0xd0
 5922 037f A1030000 		.4byte	0x3a1
 5923 0383 02       		.uleb128 0x2
 5924 0384 91       		.byte	0x91
 5925 0385 5C       		.sleb128 -36
 5926 0386 0F       		.uleb128 0xf
 5927 0387 7800     		.ascii	"x\000"
 5928 0389 01       		.byte	0x1
 5929 038a D0       		.byte	0xd0
 5930 038b 81000000 		.4byte	0x81
 5931 038f 02       		.uleb128 0x2
 5932 0390 91       		.byte	0x91
 5933 0391 6F       		.sleb128 -17
 5934 0392 0E       		.uleb128 0xe
 5935 0393 39020000 		.4byte	.LASF42
 5936 0397 01       		.byte	0x1
 5937 0398 D0       		.byte	0xd0
 5938 0399 72020000 		.4byte	0x272
 5939 039d 02       		.uleb128 0x2
 5940 039e 91       		.byte	0x91
 5941 039f 50       		.sleb128 -48
 5942 03a0 00       		.byte	0
 5943 03a1 06       		.uleb128 0x6
 5944 03a2 81000000 		.4byte	0x81
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 129


 5945 03a6 B1030000 		.4byte	0x3b1
 5946 03aa 07       		.uleb128 0x7
 5947 03ab B6000000 		.4byte	0xb6
 5948 03af 12       		.byte	0x12
 5949 03b0 00       		.byte	0
 5950 03b1 11       		.uleb128 0x11
 5951 03b2 31020000 		.4byte	.LASF44
 5952 03b6 01       		.byte	0x1
 5953 03b7 2001     		.2byte	0x120
 5954 03b9 00000000 		.4byte	.LFB68
 5955 03bd 24000000 		.4byte	.LFE68-.LFB68
 5956 03c1 01       		.uleb128 0x1
 5957 03c2 9C       		.byte	0x9c
 5958 03c3 D7030000 		.4byte	0x3d7
 5959 03c7 12       		.uleb128 0x12
 5960 03c8 76616C00 		.ascii	"val\000"
 5961 03cc 01       		.byte	0x1
 5962 03cd 2001     		.2byte	0x120
 5963 03cf 81000000 		.4byte	0x81
 5964 03d3 02       		.uleb128 0x2
 5965 03d4 91       		.byte	0x91
 5966 03d5 77       		.sleb128 -9
 5967 03d6 00       		.byte	0
 5968 03d7 13       		.uleb128 0x13
 5969 03d8 EF010000 		.4byte	.LASF45
 5970 03dc 01       		.byte	0x1
 5971 03dd 3501     		.2byte	0x135
 5972 03df 81000000 		.4byte	0x81
 5973 03e3 00000000 		.4byte	.LFB69
 5974 03e7 54030000 		.4byte	.LFE69-.LFB69
 5975 03eb 01       		.uleb128 0x1
 5976 03ec 9C       		.byte	0x9c
 5977 03ed 0E040000 		.4byte	0x40e
 5978 03f1 12       		.uleb128 0x12
 5979 03f2 64697200 		.ascii	"dir\000"
 5980 03f6 01       		.byte	0x1
 5981 03f7 3501     		.2byte	0x135
 5982 03f9 81000000 		.4byte	0x81
 5983 03fd 02       		.uleb128 0x2
 5984 03fe 91       		.byte	0x91
 5985 03ff 6F       		.sleb128 -17
 5986 0400 14       		.uleb128 0x14
 5987 0401 7800     		.ascii	"x\000"
 5988 0403 01       		.byte	0x1
 5989 0404 3601     		.2byte	0x136
 5990 0406 81000000 		.4byte	0x81
 5991 040a 02       		.uleb128 0x2
 5992 040b 91       		.byte	0x91
 5993 040c 77       		.sleb128 -9
 5994 040d 00       		.byte	0
 5995 040e 13       		.uleb128 0x13
 5996 040f 78040000 		.4byte	.LASF46
 5997 0413 01       		.byte	0x1
 5998 0414 8D01     		.2byte	0x18d
 5999 0416 81000000 		.4byte	0x81
 6000 041a 00000000 		.4byte	.LFB70
 6001 041e 80080000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 130


 6002 0422 01       		.uleb128 0x1
 6003 0423 9C       		.byte	0x9c
 6004 0424 AE040000 		.4byte	0x4ae
 6005 0428 12       		.uleb128 0x12
 6006 0429 64697200 		.ascii	"dir\000"
 6007 042d 01       		.byte	0x1
 6008 042e 8D01     		.2byte	0x18d
 6009 0430 81000000 		.4byte	0x81
 6010 0434 02       		.uleb128 0x2
 6011 0435 91       		.byte	0x91
 6012 0436 5F       		.sleb128 -33
 6013 0437 15       		.uleb128 0x15
 6014 0438 86050000 		.4byte	.LASF19
 6015 043c 01       		.byte	0x1
 6016 043d 8D01     		.2byte	0x18d
 6017 043f 81000000 		.4byte	0x81
 6018 0443 02       		.uleb128 0x2
 6019 0444 91       		.byte	0x91
 6020 0445 5E       		.sleb128 -34
 6021 0446 15       		.uleb128 0x15
 6022 0447 10050000 		.4byte	.LASF47
 6023 044b 01       		.byte	0x1
 6024 044c 8D01     		.2byte	0x18d
 6025 044e AE040000 		.4byte	0x4ae
 6026 0452 02       		.uleb128 0x2
 6027 0453 91       		.byte	0x91
 6028 0454 58       		.sleb128 -40
 6029 0455 15       		.uleb128 0x15
 6030 0456 07010000 		.4byte	.LASF28
 6031 045a 01       		.byte	0x1
 6032 045b 8D01     		.2byte	0x18d
 6033 045d 81000000 		.4byte	0x81
 6034 0461 02       		.uleb128 0x2
 6035 0462 91       		.byte	0x91
 6036 0463 5D       		.sleb128 -35
 6037 0464 16       		.uleb128 0x16
 6038 0465 82000000 		.4byte	.LASF48
 6039 0469 01       		.byte	0x1
 6040 046a 8E01     		.2byte	0x18e
 6041 046c B4040000 		.4byte	0x4b4
 6042 0470 02       		.uleb128 0x2
 6043 0471 91       		.byte	0x91
 6044 0472 60       		.sleb128 -32
 6045 0473 16       		.uleb128 0x16
 6046 0474 AE030000 		.4byte	.LASF49
 6047 0478 01       		.byte	0x1
 6048 0479 8E01     		.2byte	0x18e
 6049 047b 81000000 		.4byte	0x81
 6050 047f 02       		.uleb128 0x2
 6051 0480 91       		.byte	0x91
 6052 0481 77       		.sleb128 -9
 6053 0482 16       		.uleb128 0x16
 6054 0483 51040000 		.4byte	.LASF50
 6055 0487 01       		.byte	0x1
 6056 0488 8E01     		.2byte	0x18e
 6057 048a 81000000 		.4byte	0x81
 6058 048e 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 131


 6059 048f 91       		.byte	0x91
 6060 0490 76       		.sleb128 -10
 6061 0491 14       		.uleb128 0x14
 6062 0492 6900     		.ascii	"i\000"
 6063 0494 01       		.byte	0x1
 6064 0495 8E01     		.2byte	0x18e
 6065 0497 81000000 		.4byte	0x81
 6066 049b 02       		.uleb128 0x2
 6067 049c 91       		.byte	0x91
 6068 049d 75       		.sleb128 -11
 6069 049e 16       		.uleb128 0x16
 6070 049f BD000000 		.4byte	.LASF51
 6071 04a3 01       		.byte	0x1
 6072 04a4 8E01     		.2byte	0x18e
 6073 04a6 81000000 		.4byte	0x81
 6074 04aa 02       		.uleb128 0x2
 6075 04ab 91       		.byte	0x91
 6076 04ac 74       		.sleb128 -12
 6077 04ad 00       		.byte	0
 6078 04ae 17       		.uleb128 0x17
 6079 04af 04       		.byte	0x4
 6080 04b0 81000000 		.4byte	0x81
 6081 04b4 06       		.uleb128 0x6
 6082 04b5 81000000 		.4byte	0x81
 6083 04b9 C4040000 		.4byte	0x4c4
 6084 04bd 07       		.uleb128 0x7
 6085 04be B6000000 		.4byte	0xb6
 6086 04c2 11       		.byte	0x11
 6087 04c3 00       		.byte	0
 6088 04c4 13       		.uleb128 0x13
 6089 04c5 F3020000 		.4byte	.LASF52
 6090 04c9 01       		.byte	0x1
 6091 04ca 9102     		.2byte	0x291
 6092 04cc 81000000 		.4byte	0x81
 6093 04d0 00000000 		.4byte	.LFB71
 6094 04d4 7C020000 		.4byte	.LFE71-.LFB71
 6095 04d8 01       		.uleb128 0x1
 6096 04d9 9C       		.byte	0x9c
 6097 04da 37050000 		.4byte	0x537
 6098 04de 12       		.uleb128 0x12
 6099 04df 64697200 		.ascii	"dir\000"
 6100 04e3 01       		.byte	0x1
 6101 04e4 9102     		.2byte	0x291
 6102 04e6 81000000 		.4byte	0x81
 6103 04ea 02       		.uleb128 0x2
 6104 04eb 91       		.byte	0x91
 6105 04ec 5F       		.sleb128 -33
 6106 04ed 15       		.uleb128 0x15
 6107 04ee A8000000 		.4byte	.LASF53
 6108 04f2 01       		.byte	0x1
 6109 04f3 9102     		.2byte	0x291
 6110 04f5 AE040000 		.4byte	0x4ae
 6111 04f9 02       		.uleb128 0x2
 6112 04fa 91       		.byte	0x91
 6113 04fb 58       		.sleb128 -40
 6114 04fc 15       		.uleb128 0x15
 6115 04fd B5000000 		.4byte	.LASF54
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 132


 6116 0501 01       		.byte	0x1
 6117 0502 9102     		.2byte	0x291
 6118 0504 81000000 		.4byte	0x81
 6119 0508 02       		.uleb128 0x2
 6120 0509 91       		.byte	0x91
 6121 050a 5E       		.sleb128 -34
 6122 050b 16       		.uleb128 0x16
 6123 050c 82000000 		.4byte	.LASF48
 6124 0510 01       		.byte	0x1
 6125 0511 9202     		.2byte	0x292
 6126 0513 37050000 		.4byte	0x537
 6127 0517 02       		.uleb128 0x2
 6128 0518 91       		.byte	0x91
 6129 0519 64       		.sleb128 -28
 6130 051a 16       		.uleb128 0x16
 6131 051b AE030000 		.4byte	.LASF49
 6132 051f 01       		.byte	0x1
 6133 0520 9202     		.2byte	0x292
 6134 0522 81000000 		.4byte	0x81
 6135 0526 02       		.uleb128 0x2
 6136 0527 91       		.byte	0x91
 6137 0528 77       		.sleb128 -9
 6138 0529 14       		.uleb128 0x14
 6139 052a 7800     		.ascii	"x\000"
 6140 052c 01       		.byte	0x1
 6141 052d 9202     		.2byte	0x292
 6142 052f 81000000 		.4byte	0x81
 6143 0533 02       		.uleb128 0x2
 6144 0534 91       		.byte	0x91
 6145 0535 76       		.sleb128 -10
 6146 0536 00       		.byte	0
 6147 0537 06       		.uleb128 0x6
 6148 0538 81000000 		.4byte	0x81
 6149 053c 47050000 		.4byte	0x547
 6150 0540 07       		.uleb128 0x7
 6151 0541 B6000000 		.4byte	0xb6
 6152 0545 0E       		.byte	0xe
 6153 0546 00       		.byte	0
 6154 0547 13       		.uleb128 0x13
 6155 0548 9F020000 		.4byte	.LASF18
 6156 054c 01       		.byte	0x1
 6157 054d EA02     		.2byte	0x2ea
 6158 054f 81000000 		.4byte	0x81
 6159 0553 00000000 		.4byte	.LFB72
 6160 0557 94100000 		.4byte	.LFE72-.LFB72
 6161 055b 01       		.uleb128 0x1
 6162 055c 9C       		.byte	0x9c
 6163 055d 9A050000 		.4byte	0x59a
 6164 0561 12       		.uleb128 0x12
 6165 0562 64697200 		.ascii	"dir\000"
 6166 0566 01       		.byte	0x1
 6167 0567 EA02     		.2byte	0x2ea
 6168 0569 81000000 		.4byte	0x81
 6169 056d 02       		.uleb128 0x2
 6170 056e 91       		.byte	0x91
 6171 056f 6F       		.sleb128 -17
 6172 0570 15       		.uleb128 0x15
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 133


 6173 0571 07040000 		.4byte	.LASF55
 6174 0575 01       		.byte	0x1
 6175 0576 EA02     		.2byte	0x2ea
 6176 0578 81000000 		.4byte	0x81
 6177 057c 02       		.uleb128 0x2
 6178 057d 91       		.byte	0x91
 6179 057e 6E       		.sleb128 -18
 6180 057f 14       		.uleb128 0x14
 6181 0580 7800     		.ascii	"x\000"
 6182 0582 01       		.byte	0x1
 6183 0583 EB02     		.2byte	0x2eb
 6184 0585 81000000 		.4byte	0x81
 6185 0589 02       		.uleb128 0x2
 6186 058a 91       		.byte	0x91
 6187 058b 77       		.sleb128 -9
 6188 058c 14       		.uleb128 0x14
 6189 058d 7900     		.ascii	"y\000"
 6190 058f 01       		.byte	0x1
 6191 0590 EB02     		.2byte	0x2eb
 6192 0592 81000000 		.4byte	0x81
 6193 0596 02       		.uleb128 0x2
 6194 0597 91       		.byte	0x91
 6195 0598 76       		.sleb128 -10
 6196 0599 00       		.byte	0
 6197 059a 06       		.uleb128 0x6
 6198 059b 81000000 		.4byte	0x81
 6199 059f AA050000 		.4byte	0x5aa
 6200 05a3 07       		.uleb128 0x7
 6201 05a4 B6000000 		.4byte	0xb6
 6202 05a8 FF       		.byte	0xff
 6203 05a9 00       		.byte	0
 6204 05aa 18       		.uleb128 0x18
 6205 05ab A8010000 		.4byte	.LASF56
 6206 05af 06       		.byte	0x6
 6207 05b0 3E01     		.2byte	0x13e
 6208 05b2 B6050000 		.4byte	0x5b6
 6209 05b6 05       		.uleb128 0x5
 6210 05b7 9A050000 		.4byte	0x59a
 6211 05bb 18       		.uleb128 0x18
 6212 05bc 2D040000 		.4byte	.LASF57
 6213 05c0 07       		.byte	0x7
 6214 05c1 2A06     		.2byte	0x62a
 6215 05c3 C7050000 		.4byte	0x5c7
 6216 05c7 05       		.uleb128 0x5
 6217 05c8 76000000 		.4byte	0x76
 6218 05cc 19       		.uleb128 0x19
 6219 05cd B4020000 		.4byte	.LASF58
 6220 05d1 05       		.byte	0x5
 6221 05d2 43       		.byte	0x43
 6222 05d3 AC000000 		.4byte	0xac
 6223 05d7 05       		.uleb128 0x5
 6224 05d8 03       		.byte	0x3
 6225 05d9 00000000 		.4byte	count_teclas1
 6226 05dd 19       		.uleb128 0x19
 6227 05de 43040000 		.4byte	.LASF59
 6228 05e2 05       		.byte	0x5
 6229 05e3 43       		.byte	0x43
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 134


 6230 05e4 AC000000 		.4byte	0xac
 6231 05e8 05       		.uleb128 0x5
 6232 05e9 03       		.byte	0x3
 6233 05ea 00000000 		.4byte	comas1
 6234 05ee 19       		.uleb128 0x19
 6235 05ef 4A040000 		.4byte	.LASF60
 6236 05f3 05       		.byte	0x5
 6237 05f4 43       		.byte	0x43
 6238 05f5 AC000000 		.4byte	0xac
 6239 05f9 05       		.uleb128 0x5
 6240 05fa 03       		.byte	0x3
 6241 05fb 00000000 		.4byte	comas2
 6242 05ff 19       		.uleb128 0x19
 6243 0600 70000000 		.4byte	.LASF61
 6244 0604 05       		.byte	0x5
 6245 0605 43       		.byte	0x43
 6246 0606 AC000000 		.4byte	0xac
 6247 060a 05       		.uleb128 0x5
 6248 060b 03       		.byte	0x3
 6249 060c 00000000 		.4byte	id_coma1
 6250 0610 19       		.uleb128 0x19
 6251 0611 FE010000 		.4byte	.LASF62
 6252 0615 05       		.byte	0x5
 6253 0616 43       		.byte	0x43
 6254 0617 AC000000 		.4byte	0xac
 6255 061b 05       		.uleb128 0x5
 6256 061c 03       		.byte	0x3
 6257 061d 00000000 		.4byte	id_teclado1
 6258 0621 19       		.uleb128 0x19
 6259 0622 C2020000 		.4byte	.LASF63
 6260 0626 05       		.byte	0x5
 6261 0627 43       		.byte	0x43
 6262 0628 AC000000 		.4byte	0xac
 6263 062c 05       		.uleb128 0x5
 6264 062d 03       		.byte	0x3
 6265 062e 00000000 		.4byte	count_teclas2
 6266 0632 19       		.uleb128 0x19
 6267 0633 79000000 		.4byte	.LASF64
 6268 0637 05       		.byte	0x5
 6269 0638 43       		.byte	0x43
 6270 0639 AC000000 		.4byte	0xac
 6271 063d 05       		.uleb128 0x5
 6272 063e 03       		.byte	0x3
 6273 063f 00000000 		.4byte	id_coma2
 6274 0643 19       		.uleb128 0x19
 6275 0644 0A020000 		.4byte	.LASF65
 6276 0648 05       		.byte	0x5
 6277 0649 43       		.byte	0x43
 6278 064a AC000000 		.4byte	0xac
 6279 064e 05       		.uleb128 0x5
 6280 064f 03       		.byte	0x3
 6281 0650 00000000 		.4byte	id_teclado2
 6282 0654 19       		.uleb128 0x19
 6283 0655 D0020000 		.4byte	.LASF66
 6284 0659 05       		.byte	0x5
 6285 065a 44       		.byte	0x44
 6286 065b B1000000 		.4byte	0xb1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 135


 6287 065f 05       		.uleb128 0x5
 6288 0660 03       		.byte	0x3
 6289 0661 00000000 		.4byte	posx1
 6290 0665 19       		.uleb128 0x19
 6291 0666 A2030000 		.4byte	.LASF67
 6292 066a 05       		.byte	0x5
 6293 066b 44       		.byte	0x44
 6294 066c B1000000 		.4byte	0xb1
 6295 0670 05       		.uleb128 0x5
 6296 0671 03       		.byte	0x3
 6297 0672 00000000 		.4byte	posy1
 6298 0676 19       		.uleb128 0x19
 6299 0677 98050000 		.4byte	.LASF68
 6300 067b 05       		.byte	0x5
 6301 067c 44       		.byte	0x44
 6302 067d B1000000 		.4byte	0xb1
 6303 0681 05       		.uleb128 0x5
 6304 0682 03       		.byte	0x3
 6305 0683 00000000 		.4byte	sizeletra1
 6306 0687 19       		.uleb128 0x19
 6307 0688 D6020000 		.4byte	.LASF69
 6308 068c 05       		.byte	0x5
 6309 068d 44       		.byte	0x44
 6310 068e B1000000 		.4byte	0xb1
 6311 0692 05       		.uleb128 0x5
 6312 0693 03       		.byte	0x3
 6313 0694 00000000 		.4byte	posx2
 6314 0698 19       		.uleb128 0x19
 6315 0699 A8030000 		.4byte	.LASF70
 6316 069d 05       		.byte	0x5
 6317 069e 44       		.byte	0x44
 6318 069f B1000000 		.4byte	0xb1
 6319 06a3 05       		.uleb128 0x5
 6320 06a4 03       		.byte	0x3
 6321 06a5 00000000 		.4byte	posy2
 6322 06a9 19       		.uleb128 0x19
 6323 06aa A3050000 		.4byte	.LASF71
 6324 06ae 05       		.byte	0x5
 6325 06af 44       		.byte	0x44
 6326 06b0 B1000000 		.4byte	0xb1
 6327 06b4 05       		.uleb128 0x5
 6328 06b5 03       		.byte	0x3
 6329 06b6 00000000 		.4byte	sizeletra2
 6330 06ba 19       		.uleb128 0x19
 6331 06bb CA000000 		.4byte	.LASF72
 6332 06bf 05       		.byte	0x5
 6333 06c0 45       		.byte	0x45
 6334 06c1 AC000000 		.4byte	0xac
 6335 06c5 05       		.uleb128 0x5
 6336 06c6 03       		.byte	0x3
 6337 06c7 00000000 		.4byte	teclas1
 6338 06cb 19       		.uleb128 0x19
 6339 06cc D2000000 		.4byte	.LASF73
 6340 06d0 05       		.byte	0x5
 6341 06d1 45       		.byte	0x45
 6342 06d2 AC000000 		.4byte	0xac
 6343 06d6 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 136


 6344 06d7 03       		.byte	0x3
 6345 06d8 00000000 		.4byte	teclas2
 6346 06dc 19       		.uleb128 0x19
 6347 06dd 09000000 		.4byte	.LASF74
 6348 06e1 05       		.byte	0x5
 6349 06e2 46       		.byte	0x46
 6350 06e3 AC000000 		.4byte	0xac
 6351 06e7 05       		.uleb128 0x5
 6352 06e8 03       		.byte	0x3
 6353 06e9 00000000 		.4byte	flujo_LCD1
 6354 06ed 19       		.uleb128 0x19
 6355 06ee 14000000 		.4byte	.LASF75
 6356 06f2 05       		.byte	0x5
 6357 06f3 46       		.byte	0x46
 6358 06f4 AC000000 		.4byte	0xac
 6359 06f8 05       		.uleb128 0x5
 6360 06f9 03       		.byte	0x3
 6361 06fa 00000000 		.4byte	flujo_LCD2
 6362 06fe 19       		.uleb128 0x19
 6363 06ff C9010000 		.4byte	.LASF76
 6364 0703 05       		.byte	0x5
 6365 0704 47       		.byte	0x47
 6366 0705 AC000000 		.4byte	0xac
 6367 0709 05       		.uleb128 0x5
 6368 070a 03       		.byte	0x3
 6369 070b 00000000 		.4byte	flujo_pos1
 6370 070f 19       		.uleb128 0x19
 6371 0710 D4010000 		.4byte	.LASF77
 6372 0714 05       		.byte	0x5
 6373 0715 47       		.byte	0x47
 6374 0716 AC000000 		.4byte	0xac
 6375 071a 05       		.uleb128 0x5
 6376 071b 03       		.byte	0x3
 6377 071c 00000000 		.4byte	flujo_pos2
 6378 0720 19       		.uleb128 0x19
 6379 0721 85010000 		.4byte	.LASF78
 6380 0725 05       		.byte	0x5
 6381 0726 48       		.byte	0x48
 6382 0727 AC000000 		.4byte	0xac
 6383 072b 05       		.uleb128 0x5
 6384 072c 03       		.byte	0x3
 6385 072d 00000000 		.4byte	seleccion_pos
 6386 0731 19       		.uleb128 0x19
 6387 0732 D3040000 		.4byte	.LASF79
 6388 0736 05       		.byte	0x5
 6389 0737 49       		.byte	0x49
 6390 0738 AC000000 		.4byte	0xac
 6391 073c 05       		.uleb128 0x5
 6392 073d 03       		.byte	0x3
 6393 073e 00000000 		.4byte	flujo_pos
 6394 0742 19       		.uleb128 0x19
 6395 0743 78010000 		.4byte	.LASF80
 6396 0747 05       		.byte	0x5
 6397 0748 4A       		.byte	0x4a
 6398 0749 AC000000 		.4byte	0xac
 6399 074d 05       		.uleb128 0x5
 6400 074e 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 137


 6401 074f 00000000 		.4byte	venta_activa
 6402 0753 19       		.uleb128 0x19
 6403 0754 36010000 		.4byte	.LASF81
 6404 0758 05       		.byte	0x5
 6405 0759 4A       		.byte	0x4a
 6406 075a AC000000 		.4byte	0xac
 6407 075e 05       		.uleb128 0x5
 6408 075f 03       		.byte	0x3
 6409 0760 00000000 		.4byte	venta_activa2
 6410 0764 06       		.uleb128 0x6
 6411 0765 81000000 		.4byte	0x81
 6412 0769 74070000 		.4byte	0x774
 6413 076d 07       		.uleb128 0x7
 6414 076e B6000000 		.4byte	0xb6
 6415 0772 1D       		.byte	0x1d
 6416 0773 00       		.byte	0
 6417 0774 19       		.uleb128 0x19
 6418 0775 C1030000 		.4byte	.LASF82
 6419 0779 05       		.byte	0x5
 6420 077a 4B       		.byte	0x4b
 6421 077b 85070000 		.4byte	0x785
 6422 077f 05       		.uleb128 0x5
 6423 0780 03       		.byte	0x3
 6424 0781 00000000 		.4byte	Buffer_LCD1
 6425 0785 05       		.uleb128 0x5
 6426 0786 64070000 		.4byte	0x764
 6427 078a 19       		.uleb128 0x19
 6428 078b 46020000 		.4byte	.LASF83
 6429 078f 05       		.byte	0x5
 6430 0790 4C       		.byte	0x4c
 6431 0791 9B070000 		.4byte	0x79b
 6432 0795 05       		.uleb128 0x5
 6433 0796 03       		.byte	0x3
 6434 0797 00000000 		.4byte	Buffer_LCD2
 6435 079b 05       		.uleb128 0x5
 6436 079c 64070000 		.4byte	0x764
 6437 07a0 19       		.uleb128 0x19
 6438 07a1 16050000 		.4byte	.LASF84
 6439 07a5 05       		.byte	0x5
 6440 07a6 4D       		.byte	0x4d
 6441 07a7 AC000000 		.4byte	0xac
 6442 07ab 05       		.uleb128 0x5
 6443 07ac 03       		.byte	0x3
 6444 07ad 00000000 		.4byte	count_protector
 6445 07b1 19       		.uleb128 0x19
 6446 07b2 1F000000 		.4byte	.LASF85
 6447 07b6 05       		.byte	0x5
 6448 07b7 4D       		.byte	0x4d
 6449 07b8 AC000000 		.4byte	0xac
 6450 07bc 05       		.uleb128 0x5
 6451 07bd 03       		.byte	0x3
 6452 07be 00000000 		.4byte	count_protector2
 6453 07c2 19       		.uleb128 0x19
 6454 07c3 A7020000 		.4byte	.LASF86
 6455 07c7 05       		.byte	0x5
 6456 07c8 4E       		.byte	0x4e
 6457 07c9 D3070000 		.4byte	0x7d3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 138


 6458 07cd 05       		.uleb128 0x5
 6459 07ce 03       		.byte	0x3
 6460 07cf 00000000 		.4byte	password_lcd
 6461 07d3 05       		.uleb128 0x5
 6462 07d4 72020000 		.4byte	0x272
 6463 07d8 19       		.uleb128 0x19
 6464 07d9 79050000 		.4byte	.LASF87
 6465 07dd 05       		.byte	0x5
 6466 07de 4F       		.byte	0x4f
 6467 07df B1000000 		.4byte	0xb1
 6468 07e3 05       		.uleb128 0x5
 6469 07e4 03       		.byte	0x3
 6470 07e5 00000000 		.4byte	imagen_grado
 6471 07e9 06       		.uleb128 0x6
 6472 07ea 8C000000 		.4byte	0x8c
 6473 07ee FF070000 		.4byte	0x7ff
 6474 07f2 07       		.uleb128 0x7
 6475 07f3 B6000000 		.4byte	0xb6
 6476 07f7 01       		.byte	0x1
 6477 07f8 07       		.uleb128 0x7
 6478 07f9 B6000000 		.4byte	0xb6
 6479 07fd 01       		.byte	0x1
 6480 07fe 00       		.byte	0
 6481 07ff 19       		.uleb128 0x19
 6482 0800 FD000000 		.4byte	.LASF88
 6483 0804 05       		.byte	0x5
 6484 0805 50       		.byte	0x50
 6485 0806 10080000 		.4byte	0x810
 6486 080a 05       		.uleb128 0x5
 6487 080b 03       		.byte	0x3
 6488 080c 00000000 		.4byte	prox_caso
 6489 0810 05       		.uleb128 0x5
 6490 0811 E9070000 		.4byte	0x7e9
 6491 0815 06       		.uleb128 0x6
 6492 0816 81000000 		.4byte	0x81
 6493 081a 25080000 		.4byte	0x825
 6494 081e 07       		.uleb128 0x7
 6495 081f B6000000 		.4byte	0xb6
 6496 0823 02       		.byte	0x2
 6497 0824 00       		.byte	0
 6498 0825 19       		.uleb128 0x19
 6499 0826 57020000 		.4byte	.LASF89
 6500 082a 05       		.byte	0x5
 6501 082b 51       		.byte	0x51
 6502 082c 36080000 		.4byte	0x836
 6503 0830 05       		.uleb128 0x5
 6504 0831 03       		.byte	0x3
 6505 0832 00000000 		.4byte	bloqueo_LCD
 6506 0836 05       		.uleb128 0x5
 6507 0837 15080000 		.4byte	0x815
 6508 083b 19       		.uleb128 0x19
 6509 083c 64050000 		.4byte	.LASF90
 6510 0840 05       		.byte	0x5
 6511 0841 52       		.byte	0x52
 6512 0842 4C080000 		.4byte	0x84c
 6513 0846 05       		.uleb128 0x5
 6514 0847 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 139


 6515 0848 00000000 		.4byte	id_estacion
 6516 084c 05       		.uleb128 0x5
 6517 084d 62020000 		.4byte	0x262
 6518 0851 19       		.uleb128 0x19
 6519 0852 16020000 		.4byte	.LASF91
 6520 0856 05       		.byte	0x5
 6521 0857 53       		.byte	0x53
 6522 0858 62080000 		.4byte	0x862
 6523 085c 05       		.uleb128 0x5
 6524 085d 03       		.byte	0x3
 6525 085e 00000000 		.4byte	id_venta
 6526 0862 05       		.uleb128 0x5
 6527 0863 82020000 		.4byte	0x282
 6528 0867 06       		.uleb128 0x6
 6529 0868 81000000 		.4byte	0x81
 6530 086c 77080000 		.4byte	0x877
 6531 0870 07       		.uleb128 0x7
 6532 0871 B6000000 		.4byte	0xb6
 6533 0875 C7       		.byte	0xc7
 6534 0876 00       		.byte	0
 6535 0877 19       		.uleb128 0x19
 6536 0878 56050000 		.4byte	.LASF92
 6537 087c 05       		.byte	0x5
 6538 087d 54       		.byte	0x54
 6539 087e 88080000 		.4byte	0x888
 6540 0882 05       		.uleb128 0x5
 6541 0883 03       		.byte	0x3
 6542 0884 00000000 		.4byte	trama_totales
 6543 0888 05       		.uleb128 0x5
 6544 0889 67080000 		.4byte	0x867
 6545 088d 19       		.uleb128 0x19
 6546 088e EF030000 		.4byte	.LASF93
 6547 0892 05       		.byte	0x5
 6548 0893 58       		.byte	0x58
 6549 0894 AC000000 		.4byte	0xac
 6550 0898 05       		.uleb128 0x5
 6551 0899 03       		.byte	0x3
 6552 089a 00000000 		.4byte	ppux10
 6553 089e 06       		.uleb128 0x6
 6554 089f 81000000 		.4byte	0x81
 6555 08a3 AE080000 		.4byte	0x8ae
 6556 08a7 07       		.uleb128 0x7
 6557 08a8 B6000000 		.4byte	0xb6
 6558 08ac 10       		.byte	0x10
 6559 08ad 00       		.byte	0
 6560 08ae 19       		.uleb128 0x19
 6561 08af 56040000 		.4byte	.LASF94
 6562 08b3 05       		.byte	0x5
 6563 08b4 59       		.byte	0x59
 6564 08b5 BF080000 		.4byte	0x8bf
 6565 08b9 05       		.uleb128 0x5
 6566 08ba 03       		.byte	0x3
 6567 08bb 00000000 		.4byte	nombre_pro1
 6568 08bf 05       		.uleb128 0x5
 6569 08c0 9E080000 		.4byte	0x89e
 6570 08c4 19       		.uleb128 0x19
 6571 08c5 F8040000 		.4byte	.LASF95
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 140


 6572 08c9 05       		.byte	0x5
 6573 08ca 59       		.byte	0x59
 6574 08cb D5080000 		.4byte	0x8d5
 6575 08cf 05       		.uleb128 0x5
 6576 08d0 03       		.byte	0x3
 6577 08d1 00000000 		.4byte	nombre_pro2
 6578 08d5 05       		.uleb128 0x5
 6579 08d6 9E080000 		.4byte	0x89e
 6580 08da 19       		.uleb128 0x19
 6581 08db 62040000 		.4byte	.LASF96
 6582 08df 05       		.byte	0x5
 6583 08e0 59       		.byte	0x59
 6584 08e1 EB080000 		.4byte	0x8eb
 6585 08e5 05       		.uleb128 0x5
 6586 08e6 03       		.byte	0x3
 6587 08e7 00000000 		.4byte	nombre_pro3
 6588 08eb 05       		.uleb128 0x5
 6589 08ec 9E080000 		.4byte	0x89e
 6590 08f0 19       		.uleb128 0x19
 6591 08f1 96000000 		.4byte	.LASF97
 6592 08f5 05       		.byte	0x5
 6593 08f6 5A       		.byte	0x5a
 6594 08f7 01090000 		.4byte	0x901
 6595 08fb 05       		.uleb128 0x5
 6596 08fc 03       		.byte	0x3
 6597 08fd 00000000 		.4byte	version
 6598 0901 05       		.uleb128 0x5
 6599 0902 BD000000 		.4byte	0xbd
 6600 0906 19       		.uleb128 0x19
 6601 0907 C0010000 		.4byte	.LASF98
 6602 090b 05       		.byte	0x5
 6603 090c 5B       		.byte	0x5b
 6604 090d AC000000 		.4byte	0xac
 6605 0911 05       		.uleb128 0x5
 6606 0912 03       		.byte	0x3
 6607 0913 00000000 		.4byte	kmscreen
 6608 0917 19       		.uleb128 0x19
 6609 0918 A5040000 		.4byte	.LASF99
 6610 091c 05       		.byte	0x5
 6611 091d 5B       		.byte	0x5b
 6612 091e AC000000 		.4byte	0xac
 6613 0922 05       		.uleb128 0x5
 6614 0923 03       		.byte	0x3
 6615 0924 00000000 		.4byte	pantallas
 6616 0928 19       		.uleb128 0x19
 6617 0929 30000000 		.4byte	.LASF100
 6618 092d 05       		.byte	0x5
 6619 092e 5B       		.byte	0x5b
 6620 092f AC000000 		.4byte	0xac
 6621 0933 05       		.uleb128 0x5
 6622 0934 03       		.byte	0x3
 6623 0935 00000000 		.4byte	efectivo
 6624 0939 19       		.uleb128 0x19
 6625 093a 74020000 		.4byte	.LASF101
 6626 093e 05       		.byte	0x5
 6627 093f 5B       		.byte	0x5b
 6628 0940 AC000000 		.4byte	0xac
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 141


 6629 0944 05       		.uleb128 0x5
 6630 0945 03       		.byte	0x3
 6631 0946 00000000 		.4byte	flota
 6632 094a 19       		.uleb128 0x19
 6633 094b 72010000 		.4byte	.LASF102
 6634 094f 05       		.byte	0x5
 6635 0950 65       		.byte	0x65
 6636 0951 CD000000 		.4byte	0xcd
 6637 0955 05       		.uleb128 0x5
 6638 0956 03       		.byte	0x3
 6639 0957 00000000 		.4byte	lado1
 6640 095b 19       		.uleb128 0x19
 6641 095c DD040000 		.4byte	.LASF103
 6642 0960 05       		.byte	0x5
 6643 0961 66       		.byte	0x66
 6644 0962 CD000000 		.4byte	0xcd
 6645 0966 05       		.uleb128 0x5
 6646 0967 03       		.byte	0x3
 6647 0968 00000000 		.4byte	lado2
 6648 096c 06       		.uleb128 0x6
 6649 096d 81000000 		.4byte	0x81
 6650 0971 7C090000 		.4byte	0x97c
 6651 0975 07       		.uleb128 0x7
 6652 0976 B6000000 		.4byte	0xb6
 6653 097a 20       		.byte	0x20
 6654 097b 00       		.byte	0
 6655 097c 19       		.uleb128 0x19
 6656 097d F6030000 		.4byte	.LASF104
 6657 0981 05       		.byte	0x5
 6658 0982 6A       		.byte	0x6a
 6659 0983 8D090000 		.4byte	0x98d
 6660 0987 05       		.uleb128 0x5
 6661 0988 03       		.byte	0x3
 6662 0989 00000000 		.4byte	nombre
 6663 098d 05       		.uleb128 0x5
 6664 098e 6C090000 		.4byte	0x96c
 6665 0992 1A       		.uleb128 0x1a
 6666 0993 6E697400 		.ascii	"nit\000"
 6667 0997 05       		.byte	0x5
 6668 0998 6B       		.byte	0x6b
 6669 0999 A3090000 		.4byte	0x9a3
 6670 099d 05       		.uleb128 0x5
 6671 099e 03       		.byte	0x3
 6672 099f 00000000 		.4byte	nit
 6673 09a3 05       		.uleb128 0x5
 6674 09a4 37050000 		.4byte	0x537
 6675 09a8 06       		.uleb128 0x6
 6676 09a9 81000000 		.4byte	0x81
 6677 09ad B8090000 		.4byte	0x9b8
 6678 09b1 07       		.uleb128 0x7
 6679 09b2 B6000000 		.4byte	0xb6
 6680 09b6 13       		.byte	0x13
 6681 09b7 00       		.byte	0
 6682 09b8 19       		.uleb128 0x19
 6683 09b9 F5010000 		.4byte	.LASF105
 6684 09bd 05       		.byte	0x5
 6685 09be 6C       		.byte	0x6c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 142


 6686 09bf C9090000 		.4byte	0x9c9
 6687 09c3 05       		.uleb128 0x5
 6688 09c4 03       		.byte	0x3
 6689 09c5 00000000 		.4byte	telefono
 6690 09c9 05       		.uleb128 0x5
 6691 09ca A8090000 		.4byte	0x9a8
 6692 09ce 19       		.uleb128 0x19
 6693 09cf F3000000 		.4byte	.LASF106
 6694 09d3 05       		.byte	0x5
 6695 09d4 6D       		.byte	0x6d
 6696 09d5 DF090000 		.4byte	0x9df
 6697 09d9 05       		.uleb128 0x5
 6698 09da 03       		.byte	0x3
 6699 09db 00000000 		.4byte	direccion
 6700 09df 05       		.uleb128 0x5
 6701 09e0 6C090000 		.4byte	0x96c
 6702 09e4 06       		.uleb128 0x6
 6703 09e5 81000000 		.4byte	0x81
 6704 09e9 F4090000 		.4byte	0x9f4
 6705 09ed 07       		.uleb128 0x7
 6706 09ee B6000000 		.4byte	0xb6
 6707 09f2 1F       		.byte	0x1f
 6708 09f3 00       		.byte	0
 6709 09f4 19       		.uleb128 0x19
 6710 09f5 2A010000 		.4byte	.LASF107
 6711 09f9 05       		.byte	0x5
 6712 09fa 6E       		.byte	0x6e
 6713 09fb 050A0000 		.4byte	0xa05
 6714 09ff 05       		.uleb128 0x5
 6715 0a00 03       		.byte	0x3
 6716 0a01 00000000 		.4byte	lema1
 6717 0a05 05       		.uleb128 0x5
 6718 0a06 E4090000 		.4byte	0x9e4
 6719 0a0a 19       		.uleb128 0x19
 6720 0a0b 30010000 		.4byte	.LASF108
 6721 0a0f 05       		.byte	0x5
 6722 0a10 6F       		.byte	0x6f
 6723 0a11 1B0A0000 		.4byte	0xa1b
 6724 0a15 05       		.uleb128 0x5
 6725 0a16 03       		.byte	0x3
 6726 0a17 00000000 		.4byte	lema2
 6727 0a1b 05       		.uleb128 0x5
 6728 0a1c E4090000 		.4byte	0x9e4
 6729 0a20 06       		.uleb128 0x6
 6730 0a21 81000000 		.4byte	0x81
 6731 0a25 300A0000 		.4byte	0xa30
 6732 0a29 07       		.uleb128 0x7
 6733 0a2a B6000000 		.4byte	0xb6
 6734 0a2e 01       		.byte	0x1
 6735 0a2f 00       		.byte	0
 6736 0a30 19       		.uleb128 0x19
 6737 0a31 12040000 		.4byte	.LASF109
 6738 0a35 05       		.byte	0x5
 6739 0a36 70       		.byte	0x70
 6740 0a37 410A0000 		.4byte	0xa41
 6741 0a3b 05       		.uleb128 0x5
 6742 0a3c 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 143


 6743 0a3d 00000000 		.4byte	id_logo
 6744 0a41 05       		.uleb128 0x5
 6745 0a42 200A0000 		.4byte	0xa20
 6746 0a46 1A       		.uleb128 0x1a
 6747 0a47 6B6D00   		.ascii	"km\000"
 6748 0a4a 05       		.byte	0x5
 6749 0a4b 71       		.byte	0x71
 6750 0a4c 560A0000 		.4byte	0xa56
 6751 0a50 05       		.uleb128 0x5
 6752 0a51 03       		.byte	0x3
 6753 0a52 00000000 		.4byte	km
 6754 0a56 05       		.uleb128 0x5
 6755 0a57 200A0000 		.4byte	0xa20
 6756 0a5b 19       		.uleb128 0x19
 6757 0a5c 39050000 		.4byte	.LASF110
 6758 0a60 05       		.byte	0x5
 6759 0a61 72       		.byte	0x72
 6760 0a62 15080000 		.4byte	0x815
 6761 0a66 05       		.uleb128 0x5
 6762 0a67 03       		.byte	0x3
 6763 0a68 00000000 		.4byte	fecha
 6764 0a6c 19       		.uleb128 0x19
 6765 0a6d C5000000 		.4byte	.LASF111
 6766 0a71 05       		.byte	0x5
 6767 0a72 73       		.byte	0x73
 6768 0a73 200A0000 		.4byte	0xa20
 6769 0a77 05       		.uleb128 0x5
 6770 0a78 03       		.byte	0x3
 6771 0a79 00000000 		.4byte	hora
 6772 0a7d 19       		.uleb128 0x19
 6773 0a7e E3000000 		.4byte	.LASF112
 6774 0a82 05       		.byte	0x5
 6775 0a83 89       		.byte	0x89
 6776 0a84 73010000 		.4byte	0x173
 6777 0a88 05       		.uleb128 0x5
 6778 0a89 03       		.byte	0x3
 6779 0a8a 00000000 		.4byte	rventa1
 6780 0a8e 19       		.uleb128 0x19
 6781 0a8f EB000000 		.4byte	.LASF113
 6782 0a93 05       		.byte	0x5
 6783 0a94 8A       		.byte	0x8a
 6784 0a95 73010000 		.4byte	0x173
 6785 0a99 05       		.uleb128 0x5
 6786 0a9a 03       		.byte	0x3
 6787 0a9b 00000000 		.4byte	rventa2
 6788 0a9f 19       		.uleb128 0x19
 6789 0aa0 AF000000 		.4byte	.LASF114
 6790 0aa4 05       		.byte	0x5
 6791 0aa5 8F       		.byte	0x8f
 6792 0aa6 81000000 		.4byte	0x81
 6793 0aaa 05       		.uleb128 0x5
 6794 0aab 03       		.byte	0x3
 6795 0aac 00000000 		.4byte	ok_RF
 6796 0ab0 19       		.uleb128 0x19
 6797 0ab1 ED040000 		.4byte	.LASF115
 6798 0ab5 05       		.byte	0x5
 6799 0ab6 90       		.byte	0x90
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 144


 6800 0ab7 81000000 		.4byte	0x81
 6801 0abb 05       		.uleb128 0x5
 6802 0abc 03       		.byte	0x3
 6803 0abd 00000000 		.4byte	ok_datosRF
 6804 0ac1 19       		.uleb128 0x19
 6805 0ac2 2A020000 		.4byte	.LASF116
 6806 0ac6 05       		.byte	0x5
 6807 0ac7 91       		.byte	0x91
 6808 0ac8 67080000 		.4byte	0x867
 6809 0acc 05       		.uleb128 0x5
 6810 0acd 03       		.byte	0x3
 6811 0ace 00000000 		.4byte	rf_mod
 6812 0ad2 06       		.uleb128 0x6
 6813 0ad3 81000000 		.4byte	0x81
 6814 0ad7 E20A0000 		.4byte	0xae2
 6815 0adb 07       		.uleb128 0x7
 6816 0adc B6000000 		.4byte	0xb6
 6817 0ae0 3F       		.byte	0x3f
 6818 0ae1 00       		.byte	0
 6819 0ae2 19       		.uleb128 0x19
 6820 0ae3 1F010000 		.4byte	.LASF117
 6821 0ae7 05       		.byte	0x5
 6822 0ae8 96       		.byte	0x96
 6823 0ae9 D20A0000 		.4byte	0xad2
 6824 0aed 05       		.uleb128 0x5
 6825 0aee 03       		.byte	0x3
 6826 0aef 00000000 		.4byte	buffer_i2c
 6827 0af3 19       		.uleb128 0x19
 6828 0af4 FD030000 		.4byte	.LASF118
 6829 0af8 05       		.byte	0x5
 6830 0af9 9B       		.byte	0x9b
 6831 0afa 81000000 		.4byte	0x81
 6832 0afe 05       		.uleb128 0x5
 6833 0aff 03       		.byte	0x3
 6834 0b00 00000000 		.4byte	crc_total
 6835 0b04 19       		.uleb128 0x19
 6836 0b05 7A020000 		.4byte	.LASF119
 6837 0b09 05       		.byte	0x5
 6838 0b0a 9F       		.byte	0x9f
 6839 0b0b 200A0000 		.4byte	0xa20
 6840 0b0f 05       		.uleb128 0x5
 6841 0b10 03       		.byte	0x3
 6842 0b11 00000000 		.4byte	print1
 6843 0b15 19       		.uleb128 0x19
 6844 0b16 81020000 		.4byte	.LASF120
 6845 0b1a 05       		.byte	0x5
 6846 0b1b A0       		.byte	0xa0
 6847 0b1c 200A0000 		.4byte	0xa20
 6848 0b20 05       		.uleb128 0x5
 6849 0b21 03       		.byte	0x3
 6850 0b22 00000000 		.4byte	print2
 6851 0b26 19       		.uleb128 0x19
 6852 0b27 88020000 		.4byte	.LASF32
 6853 0b2b 05       		.byte	0x5
 6854 0b2c A5       		.byte	0xa5
 6855 0b2d 81000000 		.4byte	0x81
 6856 0b31 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 145


 6857 0b32 03       		.byte	0x3
 6858 0b33 00000000 		.4byte	tipo_venta
 6859 0b37 19       		.uleb128 0x19
 6860 0b38 97030000 		.4byte	.LASF121
 6861 0b3c 01       		.byte	0x1
 6862 0b3d 2F       		.byte	0x2f
 6863 0b3e 81000000 		.4byte	0x81
 6864 0b42 05       		.uleb128 0x5
 6865 0b43 03       		.byte	0x3
 6866 0b44 00000000 		.4byte	rx_timeout
 6867 0b48 19       		.uleb128 0x19
 6868 0b49 93010000 		.4byte	.LASF122
 6869 0b4d 01       		.byte	0x1
 6870 0b4e 30       		.byte	0x30
 6871 0b4f 9E080000 		.4byte	0x89e
 6872 0b53 05       		.uleb128 0x5
 6873 0b54 03       		.byte	0x3
 6874 0b55 00000000 		.4byte	msn_tc
 6875 0b59 06       		.uleb128 0x6
 6876 0b5a 81000000 		.4byte	0x81
 6877 0b5e 690B0000 		.4byte	0xb69
 6878 0b62 07       		.uleb128 0x7
 6879 0b63 B6000000 		.4byte	0xb6
 6880 0b67 0C       		.byte	0xc
 6881 0b68 00       		.byte	0
 6882 0b69 19       		.uleb128 0x19
 6883 0b6a A1010000 		.4byte	.LASF123
 6884 0b6e 01       		.byte	0x1
 6885 0b6f 31       		.byte	0x31
 6886 0b70 590B0000 		.4byte	0xb59
 6887 0b74 05       		.uleb128 0x5
 6888 0b75 03       		.byte	0x3
 6889 0b76 00000000 		.4byte	msn_te
 6890 0b7a 06       		.uleb128 0x6
 6891 0b7b 81000000 		.4byte	0x81
 6892 0b7f 8A0B0000 		.4byte	0xb8a
 6893 0b83 07       		.uleb128 0x7
 6894 0b84 B6000000 		.4byte	0xb6
 6895 0b88 0D       		.byte	0xd
 6896 0b89 00       		.byte	0
 6897 0b8a 19       		.uleb128 0x19
 6898 0b8b 9A010000 		.4byte	.LASF124
 6899 0b8f 01       		.byte	0x1
 6900 0b90 32       		.byte	0x32
 6901 0b91 7A0B0000 		.4byte	0xb7a
 6902 0b95 05       		.uleb128 0x5
 6903 0b96 03       		.byte	0x3
 6904 0b97 00000000 		.4byte	msn_td
 6905 0b9b 19       		.uleb128 0x19
 6906 0b9c 1F020000 		.4byte	.LASF125
 6907 0ba0 01       		.byte	0x1
 6908 0ba1 33       		.byte	0x33
 6909 0ba2 37050000 		.4byte	0x537
 6910 0ba6 05       		.uleb128 0x5
 6911 0ba7 03       		.byte	0x3
 6912 0ba8 00000000 		.4byte	msn_lecact
 6913 0bac 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 146


 6914 0bad 14010000 		.4byte	.LASF126
 6915 0bb1 01       		.byte	0x1
 6916 0bb2 34       		.byte	0x34
 6917 0bb3 9E080000 		.4byte	0x89e
 6918 0bb7 05       		.uleb128 0x5
 6919 0bb8 03       		.byte	0x3
 6920 0bb9 00000000 		.4byte	msn_lecaan
 6921 0bbd 19       		.uleb128 0x19
 6922 0bbe D4030000 		.4byte	.LASF127
 6923 0bc2 01       		.byte	0x1
 6924 0bc3 35       		.byte	0x35
 6925 0bc4 B4040000 		.4byte	0x4b4
 6926 0bc8 05       		.uleb128 0x5
 6927 0bc9 03       		.byte	0x3
 6928 0bca 00000000 		.4byte	msn_tventas
 6929 0bce 00       		.byte	0
 6930              		.section	.debug_abbrev,"",%progbits
 6931              	.Ldebug_abbrev0:
 6932 0000 01       		.uleb128 0x1
 6933 0001 11       		.uleb128 0x11
 6934 0002 01       		.byte	0x1
 6935 0003 25       		.uleb128 0x25
 6936 0004 0E       		.uleb128 0xe
 6937 0005 13       		.uleb128 0x13
 6938 0006 0B       		.uleb128 0xb
 6939 0007 03       		.uleb128 0x3
 6940 0008 0E       		.uleb128 0xe
 6941 0009 1B       		.uleb128 0x1b
 6942 000a 0E       		.uleb128 0xe
 6943 000b 55       		.uleb128 0x55
 6944 000c 17       		.uleb128 0x17
 6945 000d 11       		.uleb128 0x11
 6946 000e 01       		.uleb128 0x1
 6947 000f 10       		.uleb128 0x10
 6948 0010 17       		.uleb128 0x17
 6949 0011 00       		.byte	0
 6950 0012 00       		.byte	0
 6951 0013 02       		.uleb128 0x2
 6952 0014 24       		.uleb128 0x24
 6953 0015 00       		.byte	0
 6954 0016 0B       		.uleb128 0xb
 6955 0017 0B       		.uleb128 0xb
 6956 0018 3E       		.uleb128 0x3e
 6957 0019 0B       		.uleb128 0xb
 6958 001a 03       		.uleb128 0x3
 6959 001b 0E       		.uleb128 0xe
 6960 001c 00       		.byte	0
 6961 001d 00       		.byte	0
 6962 001e 03       		.uleb128 0x3
 6963 001f 16       		.uleb128 0x16
 6964 0020 00       		.byte	0
 6965 0021 03       		.uleb128 0x3
 6966 0022 0E       		.uleb128 0xe
 6967 0023 3A       		.uleb128 0x3a
 6968 0024 0B       		.uleb128 0xb
 6969 0025 3B       		.uleb128 0x3b
 6970 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 147


 6971 0027 49       		.uleb128 0x49
 6972 0028 13       		.uleb128 0x13
 6973 0029 00       		.byte	0
 6974 002a 00       		.byte	0
 6975 002b 04       		.uleb128 0x4
 6976 002c 24       		.uleb128 0x24
 6977 002d 00       		.byte	0
 6978 002e 0B       		.uleb128 0xb
 6979 002f 0B       		.uleb128 0xb
 6980 0030 3E       		.uleb128 0x3e
 6981 0031 0B       		.uleb128 0xb
 6982 0032 03       		.uleb128 0x3
 6983 0033 08       		.uleb128 0x8
 6984 0034 00       		.byte	0
 6985 0035 00       		.byte	0
 6986 0036 05       		.uleb128 0x5
 6987 0037 35       		.uleb128 0x35
 6988 0038 00       		.byte	0
 6989 0039 49       		.uleb128 0x49
 6990 003a 13       		.uleb128 0x13
 6991 003b 00       		.byte	0
 6992 003c 00       		.byte	0
 6993 003d 06       		.uleb128 0x6
 6994 003e 01       		.uleb128 0x1
 6995 003f 01       		.byte	0x1
 6996 0040 49       		.uleb128 0x49
 6997 0041 13       		.uleb128 0x13
 6998 0042 01       		.uleb128 0x1
 6999 0043 13       		.uleb128 0x13
 7000 0044 00       		.byte	0
 7001 0045 00       		.byte	0
 7002 0046 07       		.uleb128 0x7
 7003 0047 21       		.uleb128 0x21
 7004 0048 00       		.byte	0
 7005 0049 49       		.uleb128 0x49
 7006 004a 13       		.uleb128 0x13
 7007 004b 2F       		.uleb128 0x2f
 7008 004c 0B       		.uleb128 0xb
 7009 004d 00       		.byte	0
 7010 004e 00       		.byte	0
 7011 004f 08       		.uleb128 0x8
 7012 0050 13       		.uleb128 0x13
 7013 0051 01       		.byte	0x1
 7014 0052 03       		.uleb128 0x3
 7015 0053 0E       		.uleb128 0xe
 7016 0054 0B       		.uleb128 0xb
 7017 0055 0B       		.uleb128 0xb
 7018 0056 3A       		.uleb128 0x3a
 7019 0057 0B       		.uleb128 0xb
 7020 0058 3B       		.uleb128 0x3b
 7021 0059 0B       		.uleb128 0xb
 7022 005a 01       		.uleb128 0x1
 7023 005b 13       		.uleb128 0x13
 7024 005c 00       		.byte	0
 7025 005d 00       		.byte	0
 7026 005e 09       		.uleb128 0x9
 7027 005f 0D       		.uleb128 0xd
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 148


 7028 0060 00       		.byte	0
 7029 0061 03       		.uleb128 0x3
 7030 0062 08       		.uleb128 0x8
 7031 0063 3A       		.uleb128 0x3a
 7032 0064 0B       		.uleb128 0xb
 7033 0065 3B       		.uleb128 0x3b
 7034 0066 0B       		.uleb128 0xb
 7035 0067 49       		.uleb128 0x49
 7036 0068 13       		.uleb128 0x13
 7037 0069 38       		.uleb128 0x38
 7038 006a 0B       		.uleb128 0xb
 7039 006b 00       		.byte	0
 7040 006c 00       		.byte	0
 7041 006d 0A       		.uleb128 0xa
 7042 006e 0D       		.uleb128 0xd
 7043 006f 00       		.byte	0
 7044 0070 03       		.uleb128 0x3
 7045 0071 0E       		.uleb128 0xe
 7046 0072 3A       		.uleb128 0x3a
 7047 0073 0B       		.uleb128 0xb
 7048 0074 3B       		.uleb128 0x3b
 7049 0075 0B       		.uleb128 0xb
 7050 0076 49       		.uleb128 0x49
 7051 0077 13       		.uleb128 0x13
 7052 0078 38       		.uleb128 0x38
 7053 0079 0B       		.uleb128 0xb
 7054 007a 00       		.byte	0
 7055 007b 00       		.byte	0
 7056 007c 0B       		.uleb128 0xb
 7057 007d 2E       		.uleb128 0x2e
 7058 007e 00       		.byte	0
 7059 007f 3F       		.uleb128 0x3f
 7060 0080 19       		.uleb128 0x19
 7061 0081 03       		.uleb128 0x3
 7062 0082 0E       		.uleb128 0xe
 7063 0083 3A       		.uleb128 0x3a
 7064 0084 0B       		.uleb128 0xb
 7065 0085 3B       		.uleb128 0x3b
 7066 0086 0B       		.uleb128 0xb
 7067 0087 27       		.uleb128 0x27
 7068 0088 19       		.uleb128 0x19
 7069 0089 11       		.uleb128 0x11
 7070 008a 01       		.uleb128 0x1
 7071 008b 12       		.uleb128 0x12
 7072 008c 06       		.uleb128 0x6
 7073 008d 40       		.uleb128 0x40
 7074 008e 18       		.uleb128 0x18
 7075 008f 9642     		.uleb128 0x2116
 7076 0091 19       		.uleb128 0x19
 7077 0092 00       		.byte	0
 7078 0093 00       		.byte	0
 7079 0094 0C       		.uleb128 0xc
 7080 0095 2E       		.uleb128 0x2e
 7081 0096 01       		.byte	0x1
 7082 0097 3F       		.uleb128 0x3f
 7083 0098 19       		.uleb128 0x19
 7084 0099 03       		.uleb128 0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 149


 7085 009a 0E       		.uleb128 0xe
 7086 009b 3A       		.uleb128 0x3a
 7087 009c 0B       		.uleb128 0xb
 7088 009d 3B       		.uleb128 0x3b
 7089 009e 0B       		.uleb128 0xb
 7090 009f 27       		.uleb128 0x27
 7091 00a0 19       		.uleb128 0x19
 7092 00a1 49       		.uleb128 0x49
 7093 00a2 13       		.uleb128 0x13
 7094 00a3 11       		.uleb128 0x11
 7095 00a4 01       		.uleb128 0x1
 7096 00a5 12       		.uleb128 0x12
 7097 00a6 06       		.uleb128 0x6
 7098 00a7 40       		.uleb128 0x40
 7099 00a8 18       		.uleb128 0x18
 7100 00a9 9642     		.uleb128 0x2116
 7101 00ab 19       		.uleb128 0x19
 7102 00ac 01       		.uleb128 0x1
 7103 00ad 13       		.uleb128 0x13
 7104 00ae 00       		.byte	0
 7105 00af 00       		.byte	0
 7106 00b0 0D       		.uleb128 0xd
 7107 00b1 05       		.uleb128 0x5
 7108 00b2 00       		.byte	0
 7109 00b3 03       		.uleb128 0x3
 7110 00b4 08       		.uleb128 0x8
 7111 00b5 3A       		.uleb128 0x3a
 7112 00b6 0B       		.uleb128 0xb
 7113 00b7 3B       		.uleb128 0x3b
 7114 00b8 0B       		.uleb128 0xb
 7115 00b9 49       		.uleb128 0x49
 7116 00ba 13       		.uleb128 0x13
 7117 00bb 02       		.uleb128 0x2
 7118 00bc 18       		.uleb128 0x18
 7119 00bd 00       		.byte	0
 7120 00be 00       		.byte	0
 7121 00bf 0E       		.uleb128 0xe
 7122 00c0 34       		.uleb128 0x34
 7123 00c1 00       		.byte	0
 7124 00c2 03       		.uleb128 0x3
 7125 00c3 0E       		.uleb128 0xe
 7126 00c4 3A       		.uleb128 0x3a
 7127 00c5 0B       		.uleb128 0xb
 7128 00c6 3B       		.uleb128 0x3b
 7129 00c7 0B       		.uleb128 0xb
 7130 00c8 49       		.uleb128 0x49
 7131 00c9 13       		.uleb128 0x13
 7132 00ca 02       		.uleb128 0x2
 7133 00cb 18       		.uleb128 0x18
 7134 00cc 00       		.byte	0
 7135 00cd 00       		.byte	0
 7136 00ce 0F       		.uleb128 0xf
 7137 00cf 34       		.uleb128 0x34
 7138 00d0 00       		.byte	0
 7139 00d1 03       		.uleb128 0x3
 7140 00d2 08       		.uleb128 0x8
 7141 00d3 3A       		.uleb128 0x3a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 150


 7142 00d4 0B       		.uleb128 0xb
 7143 00d5 3B       		.uleb128 0x3b
 7144 00d6 0B       		.uleb128 0xb
 7145 00d7 49       		.uleb128 0x49
 7146 00d8 13       		.uleb128 0x13
 7147 00d9 02       		.uleb128 0x2
 7148 00da 18       		.uleb128 0x18
 7149 00db 00       		.byte	0
 7150 00dc 00       		.byte	0
 7151 00dd 10       		.uleb128 0x10
 7152 00de 2E       		.uleb128 0x2e
 7153 00df 01       		.byte	0x1
 7154 00e0 3F       		.uleb128 0x3f
 7155 00e1 19       		.uleb128 0x19
 7156 00e2 03       		.uleb128 0x3
 7157 00e3 0E       		.uleb128 0xe
 7158 00e4 3A       		.uleb128 0x3a
 7159 00e5 0B       		.uleb128 0xb
 7160 00e6 3B       		.uleb128 0x3b
 7161 00e7 0B       		.uleb128 0xb
 7162 00e8 27       		.uleb128 0x27
 7163 00e9 19       		.uleb128 0x19
 7164 00ea 11       		.uleb128 0x11
 7165 00eb 01       		.uleb128 0x1
 7166 00ec 12       		.uleb128 0x12
 7167 00ed 06       		.uleb128 0x6
 7168 00ee 40       		.uleb128 0x40
 7169 00ef 18       		.uleb128 0x18
 7170 00f0 9642     		.uleb128 0x2116
 7171 00f2 19       		.uleb128 0x19
 7172 00f3 01       		.uleb128 0x1
 7173 00f4 13       		.uleb128 0x13
 7174 00f5 00       		.byte	0
 7175 00f6 00       		.byte	0
 7176 00f7 11       		.uleb128 0x11
 7177 00f8 2E       		.uleb128 0x2e
 7178 00f9 01       		.byte	0x1
 7179 00fa 3F       		.uleb128 0x3f
 7180 00fb 19       		.uleb128 0x19
 7181 00fc 03       		.uleb128 0x3
 7182 00fd 0E       		.uleb128 0xe
 7183 00fe 3A       		.uleb128 0x3a
 7184 00ff 0B       		.uleb128 0xb
 7185 0100 3B       		.uleb128 0x3b
 7186 0101 05       		.uleb128 0x5
 7187 0102 27       		.uleb128 0x27
 7188 0103 19       		.uleb128 0x19
 7189 0104 11       		.uleb128 0x11
 7190 0105 01       		.uleb128 0x1
 7191 0106 12       		.uleb128 0x12
 7192 0107 06       		.uleb128 0x6
 7193 0108 40       		.uleb128 0x40
 7194 0109 18       		.uleb128 0x18
 7195 010a 9642     		.uleb128 0x2116
 7196 010c 19       		.uleb128 0x19
 7197 010d 01       		.uleb128 0x1
 7198 010e 13       		.uleb128 0x13
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 151


 7199 010f 00       		.byte	0
 7200 0110 00       		.byte	0
 7201 0111 12       		.uleb128 0x12
 7202 0112 05       		.uleb128 0x5
 7203 0113 00       		.byte	0
 7204 0114 03       		.uleb128 0x3
 7205 0115 08       		.uleb128 0x8
 7206 0116 3A       		.uleb128 0x3a
 7207 0117 0B       		.uleb128 0xb
 7208 0118 3B       		.uleb128 0x3b
 7209 0119 05       		.uleb128 0x5
 7210 011a 49       		.uleb128 0x49
 7211 011b 13       		.uleb128 0x13
 7212 011c 02       		.uleb128 0x2
 7213 011d 18       		.uleb128 0x18
 7214 011e 00       		.byte	0
 7215 011f 00       		.byte	0
 7216 0120 13       		.uleb128 0x13
 7217 0121 2E       		.uleb128 0x2e
 7218 0122 01       		.byte	0x1
 7219 0123 3F       		.uleb128 0x3f
 7220 0124 19       		.uleb128 0x19
 7221 0125 03       		.uleb128 0x3
 7222 0126 0E       		.uleb128 0xe
 7223 0127 3A       		.uleb128 0x3a
 7224 0128 0B       		.uleb128 0xb
 7225 0129 3B       		.uleb128 0x3b
 7226 012a 05       		.uleb128 0x5
 7227 012b 27       		.uleb128 0x27
 7228 012c 19       		.uleb128 0x19
 7229 012d 49       		.uleb128 0x49
 7230 012e 13       		.uleb128 0x13
 7231 012f 11       		.uleb128 0x11
 7232 0130 01       		.uleb128 0x1
 7233 0131 12       		.uleb128 0x12
 7234 0132 06       		.uleb128 0x6
 7235 0133 40       		.uleb128 0x40
 7236 0134 18       		.uleb128 0x18
 7237 0135 9642     		.uleb128 0x2116
 7238 0137 19       		.uleb128 0x19
 7239 0138 01       		.uleb128 0x1
 7240 0139 13       		.uleb128 0x13
 7241 013a 00       		.byte	0
 7242 013b 00       		.byte	0
 7243 013c 14       		.uleb128 0x14
 7244 013d 34       		.uleb128 0x34
 7245 013e 00       		.byte	0
 7246 013f 03       		.uleb128 0x3
 7247 0140 08       		.uleb128 0x8
 7248 0141 3A       		.uleb128 0x3a
 7249 0142 0B       		.uleb128 0xb
 7250 0143 3B       		.uleb128 0x3b
 7251 0144 05       		.uleb128 0x5
 7252 0145 49       		.uleb128 0x49
 7253 0146 13       		.uleb128 0x13
 7254 0147 02       		.uleb128 0x2
 7255 0148 18       		.uleb128 0x18
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 152


 7256 0149 00       		.byte	0
 7257 014a 00       		.byte	0
 7258 014b 15       		.uleb128 0x15
 7259 014c 05       		.uleb128 0x5
 7260 014d 00       		.byte	0
 7261 014e 03       		.uleb128 0x3
 7262 014f 0E       		.uleb128 0xe
 7263 0150 3A       		.uleb128 0x3a
 7264 0151 0B       		.uleb128 0xb
 7265 0152 3B       		.uleb128 0x3b
 7266 0153 05       		.uleb128 0x5
 7267 0154 49       		.uleb128 0x49
 7268 0155 13       		.uleb128 0x13
 7269 0156 02       		.uleb128 0x2
 7270 0157 18       		.uleb128 0x18
 7271 0158 00       		.byte	0
 7272 0159 00       		.byte	0
 7273 015a 16       		.uleb128 0x16
 7274 015b 34       		.uleb128 0x34
 7275 015c 00       		.byte	0
 7276 015d 03       		.uleb128 0x3
 7277 015e 0E       		.uleb128 0xe
 7278 015f 3A       		.uleb128 0x3a
 7279 0160 0B       		.uleb128 0xb
 7280 0161 3B       		.uleb128 0x3b
 7281 0162 05       		.uleb128 0x5
 7282 0163 49       		.uleb128 0x49
 7283 0164 13       		.uleb128 0x13
 7284 0165 02       		.uleb128 0x2
 7285 0166 18       		.uleb128 0x18
 7286 0167 00       		.byte	0
 7287 0168 00       		.byte	0
 7288 0169 17       		.uleb128 0x17
 7289 016a 0F       		.uleb128 0xf
 7290 016b 00       		.byte	0
 7291 016c 0B       		.uleb128 0xb
 7292 016d 0B       		.uleb128 0xb
 7293 016e 49       		.uleb128 0x49
 7294 016f 13       		.uleb128 0x13
 7295 0170 00       		.byte	0
 7296 0171 00       		.byte	0
 7297 0172 18       		.uleb128 0x18
 7298 0173 34       		.uleb128 0x34
 7299 0174 00       		.byte	0
 7300 0175 03       		.uleb128 0x3
 7301 0176 0E       		.uleb128 0xe
 7302 0177 3A       		.uleb128 0x3a
 7303 0178 0B       		.uleb128 0xb
 7304 0179 3B       		.uleb128 0x3b
 7305 017a 05       		.uleb128 0x5
 7306 017b 49       		.uleb128 0x49
 7307 017c 13       		.uleb128 0x13
 7308 017d 3F       		.uleb128 0x3f
 7309 017e 19       		.uleb128 0x19
 7310 017f 3C       		.uleb128 0x3c
 7311 0180 19       		.uleb128 0x19
 7312 0181 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 153


 7313 0182 00       		.byte	0
 7314 0183 19       		.uleb128 0x19
 7315 0184 34       		.uleb128 0x34
 7316 0185 00       		.byte	0
 7317 0186 03       		.uleb128 0x3
 7318 0187 0E       		.uleb128 0xe
 7319 0188 3A       		.uleb128 0x3a
 7320 0189 0B       		.uleb128 0xb
 7321 018a 3B       		.uleb128 0x3b
 7322 018b 0B       		.uleb128 0xb
 7323 018c 49       		.uleb128 0x49
 7324 018d 13       		.uleb128 0x13
 7325 018e 3F       		.uleb128 0x3f
 7326 018f 19       		.uleb128 0x19
 7327 0190 02       		.uleb128 0x2
 7328 0191 18       		.uleb128 0x18
 7329 0192 00       		.byte	0
 7330 0193 00       		.byte	0
 7331 0194 1A       		.uleb128 0x1a
 7332 0195 34       		.uleb128 0x34
 7333 0196 00       		.byte	0
 7334 0197 03       		.uleb128 0x3
 7335 0198 08       		.uleb128 0x8
 7336 0199 3A       		.uleb128 0x3a
 7337 019a 0B       		.uleb128 0xb
 7338 019b 3B       		.uleb128 0x3b
 7339 019c 0B       		.uleb128 0xb
 7340 019d 49       		.uleb128 0x49
 7341 019e 13       		.uleb128 0x13
 7342 019f 3F       		.uleb128 0x3f
 7343 01a0 19       		.uleb128 0x19
 7344 01a1 02       		.uleb128 0x2
 7345 01a2 18       		.uleb128 0x18
 7346 01a3 00       		.byte	0
 7347 01a4 00       		.byte	0
 7348 01a5 00       		.byte	0
 7349              		.section	.debug_aranges,"",%progbits
 7350 0000 64000000 		.4byte	0x64
 7351 0004 0200     		.2byte	0x2
 7352 0006 00000000 		.4byte	.Ldebug_info0
 7353 000a 04       		.byte	0x4
 7354 000b 00       		.byte	0
 7355 000c 0000     		.2byte	0
 7356 000e 0000     		.2byte	0
 7357 0010 00000000 		.4byte	.LFB63
 7358 0014 14000000 		.4byte	.LFE63-.LFB63
 7359 0018 00000000 		.4byte	.LFB64
 7360 001c 98000000 		.4byte	.LFE64-.LFB64
 7361 0020 00000000 		.4byte	.LFB65
 7362 0024 A0000000 		.4byte	.LFE65-.LFB65
 7363 0028 00000000 		.4byte	.LFB66
 7364 002c 36000000 		.4byte	.LFE66-.LFB66
 7365 0030 00000000 		.4byte	.LFB67
 7366 0034 7C010000 		.4byte	.LFE67-.LFB67
 7367 0038 00000000 		.4byte	.LFB68
 7368 003c 24000000 		.4byte	.LFE68-.LFB68
 7369 0040 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 154


 7370 0044 54030000 		.4byte	.LFE69-.LFB69
 7371 0048 00000000 		.4byte	.LFB70
 7372 004c 80080000 		.4byte	.LFE70-.LFB70
 7373 0050 00000000 		.4byte	.LFB71
 7374 0054 7C020000 		.4byte	.LFE71-.LFB71
 7375 0058 00000000 		.4byte	.LFB72
 7376 005c 94100000 		.4byte	.LFE72-.LFB72
 7377 0060 00000000 		.4byte	0
 7378 0064 00000000 		.4byte	0
 7379              		.section	.debug_ranges,"",%progbits
 7380              	.Ldebug_ranges0:
 7381 0000 00000000 		.4byte	.LFB63
 7382 0004 14000000 		.4byte	.LFE63
 7383 0008 00000000 		.4byte	.LFB64
 7384 000c 98000000 		.4byte	.LFE64
 7385 0010 00000000 		.4byte	.LFB65
 7386 0014 A0000000 		.4byte	.LFE65
 7387 0018 00000000 		.4byte	.LFB66
 7388 001c 36000000 		.4byte	.LFE66
 7389 0020 00000000 		.4byte	.LFB67
 7390 0024 7C010000 		.4byte	.LFE67
 7391 0028 00000000 		.4byte	.LFB68
 7392 002c 24000000 		.4byte	.LFE68
 7393 0030 00000000 		.4byte	.LFB69
 7394 0034 54030000 		.4byte	.LFE69
 7395 0038 00000000 		.4byte	.LFB70
 7396 003c 80080000 		.4byte	.LFE70
 7397 0040 00000000 		.4byte	.LFB71
 7398 0044 7C020000 		.4byte	.LFE71
 7399 0048 00000000 		.4byte	.LFB72
 7400 004c 94100000 		.4byte	.LFE72
 7401 0050 00000000 		.4byte	0
 7402 0054 00000000 		.4byte	0
 7403              		.section	.debug_line,"",%progbits
 7404              	.Ldebug_line0:
 7405 0000 020B0000 		.section	.debug_str,"MS",%progbits,1
 7405      02006E01 
 7405      00000201 
 7405      FB0E0D00 
 7405      01010101 
 7406              	.LASF34:
 7407 0000 70617373 		.ascii	"password\000"
 7407      776F7264 
 7407      00
 7408              	.LASF74:
 7409 0009 666C756A 		.ascii	"flujo_LCD1\000"
 7409      6F5F4C43 
 7409      443100
 7410              	.LASF75:
 7411 0014 666C756A 		.ascii	"flujo_LCD2\000"
 7411      6F5F4C43 
 7411      443200
 7412              	.LASF85:
 7413 001f 636F756E 		.ascii	"count_protector2\000"
 7413      745F7072 
 7413      6F746563 
 7413      746F7232 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 155


 7413      00
 7414              	.LASF100:
 7415 0030 65666563 		.ascii	"efectivo\000"
 7415      7469766F 
 7415      00
 7416              	.LASF130:
 7417 0039 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Documents\\Prueba_GRPFleet\\B"
 7417      73657273 
 7417      5C526563 
 7417      65706369 
 7417      6F6E5C44 
 7418 0067 42422E63 		.ascii	"BB.cydsn\000"
 7418      7964736E 
 7418      00
 7419              	.LASF61:
 7420 0070 69645F63 		.ascii	"id_coma1\000"
 7420      6F6D6131 
 7420      00
 7421              	.LASF64:
 7422 0079 69645F63 		.ascii	"id_coma2\000"
 7422      6F6D6132 
 7422      00
 7423              	.LASF48:
 7424 0082 62756666 		.ascii	"buffer\000"
 7424      657200
 7425              	.LASF8:
 7426 0089 756E7369 		.ascii	"unsigned int\000"
 7426      676E6564 
 7426      20696E74 
 7426      00
 7427              	.LASF97:
 7428 0096 76657273 		.ascii	"version\000"
 7428      696F6E00 
 7429              	.LASF9:
 7430 009e 5F5F696E 		.ascii	"__int32_t\000"
 7430      7433325F 
 7430      7400
 7431              	.LASF53:
 7432 00a8 70726563 		.ascii	"precio\000"
 7432      696F00
 7433              	.LASF114:
 7434 00af 6F6B5F52 		.ascii	"ok_RF\000"
 7434      4600
 7435              	.LASF54:
 7436 00b5 6E756D5F 		.ascii	"num_man\000"
 7436      6D616E00 
 7437              	.LASF51:
 7438 00bd 64656369 		.ascii	"decimal\000"
 7438      6D616C00 
 7439              	.LASF111:
 7440 00c5 686F7261 		.ascii	"hora\000"
 7440      00
 7441              	.LASF72:
 7442 00ca 7465636C 		.ascii	"teclas1\000"
 7442      61733100 
 7443              	.LASF73:
 7444 00d2 7465636C 		.ascii	"teclas2\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 156


 7444      61733200 
 7445              	.LASF23:
 7446 00da 706F7369 		.ascii	"posicion\000"
 7446      63696F6E 
 7446      00
 7447              	.LASF112:
 7448 00e3 7276656E 		.ascii	"rventa1\000"
 7448      74613100 
 7449              	.LASF113:
 7450 00eb 7276656E 		.ascii	"rventa2\000"
 7450      74613200 
 7451              	.LASF106:
 7452 00f3 64697265 		.ascii	"direccion\000"
 7452      6363696F 
 7452      6E00
 7453              	.LASF88:
 7454 00fd 70726F78 		.ascii	"prox_caso\000"
 7454      5F636173 
 7454      6F00
 7455              	.LASF28:
 7456 0107 70726573 		.ascii	"preset\000"
 7456      657400
 7457              	.LASF13:
 7458 010e 666C6F61 		.ascii	"float\000"
 7458      7400
 7459              	.LASF126:
 7460 0114 6D736E5F 		.ascii	"msn_lecaan\000"
 7460      6C656361 
 7460      616E00
 7461              	.LASF117:
 7462 011f 62756666 		.ascii	"buffer_i2c\000"
 7462      65725F69 
 7462      326300
 7463              	.LASF107:
 7464 012a 6C656D61 		.ascii	"lema1\000"
 7464      3100
 7465              	.LASF108:
 7466 0130 6C656D61 		.ascii	"lema2\000"
 7466      3200
 7467              	.LASF81:
 7468 0136 76656E74 		.ascii	"venta_activa2\000"
 7468      615F6163 
 7468      74697661 
 7468      3200
 7469              	.LASF31:
 7470 0144 696D7072 		.ascii	"imprimir\000"
 7470      696D6972 
 7470      00
 7471              	.LASF7:
 7472 014d 6C6F6E67 		.ascii	"long long unsigned int\000"
 7472      206C6F6E 
 7472      6720756E 
 7472      7369676E 
 7472      65642069 
 7473              	.LASF129:
 7474 0164 2E5C5072 		.ascii	".\\Protocolo.c\000"
 7474      6F746F63 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 157


 7474      6F6C6F2E 
 7474      6300
 7475              	.LASF102:
 7476 0172 6C61646F 		.ascii	"lado1\000"
 7476      3100
 7477              	.LASF80:
 7478 0178 76656E74 		.ascii	"venta_activa\000"
 7478      615F6163 
 7478      74697661 
 7478      00
 7479              	.LASF78:
 7480 0185 73656C65 		.ascii	"seleccion_pos\000"
 7480      6363696F 
 7480      6E5F706F 
 7480      7300
 7481              	.LASF122:
 7482 0193 6D736E5F 		.ascii	"msn_tc\000"
 7482      746300
 7483              	.LASF124:
 7484 019a 6D736E5F 		.ascii	"msn_td\000"
 7484      746400
 7485              	.LASF123:
 7486 01a1 6D736E5F 		.ascii	"msn_te\000"
 7486      746500
 7487              	.LASF56:
 7488 01a8 53757274 		.ascii	"Surtidor_rxBuffer\000"
 7488      69646F72 
 7488      5F727842 
 7488      75666665 
 7488      7200
 7489              	.LASF30:
 7490 01ba 706C6163 		.ascii	"placa\000"
 7490      6100
 7491              	.LASF98:
 7492 01c0 6B6D7363 		.ascii	"kmscreen\000"
 7492      7265656E 
 7492      00
 7493              	.LASF76:
 7494 01c9 666C756A 		.ascii	"flujo_pos1\000"
 7494      6F5F706F 
 7494      733100
 7495              	.LASF77:
 7496 01d4 666C756A 		.ascii	"flujo_pos2\000"
 7496      6F5F706F 
 7496      733200
 7497              	.LASF39:
 7498 01df 7665725F 		.ascii	"ver_pos\000"
 7498      706F7300 
 7499              	.LASF25:
 7500 01e7 766F6C75 		.ascii	"volumen\000"
 7500      6D656E00 
 7501              	.LASF45:
 7502 01ef 76656E74 		.ascii	"venta\000"
 7502      6100
 7503              	.LASF105:
 7504 01f5 74656C65 		.ascii	"telefono\000"
 7504      666F6E6F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 158


 7504      00
 7505              	.LASF62:
 7506 01fe 69645F74 		.ascii	"id_teclado1\000"
 7506      65636C61 
 7506      646F3100 
 7507              	.LASF65:
 7508 020a 69645F74 		.ascii	"id_teclado2\000"
 7508      65636C61 
 7508      646F3200 
 7509              	.LASF91:
 7510 0216 69645F76 		.ascii	"id_venta\000"
 7510      656E7461 
 7510      00
 7511              	.LASF125:
 7512 021f 6D736E5F 		.ascii	"msn_lecact\000"
 7512      6C656361 
 7512      637400
 7513              	.LASF116:
 7514 022a 72665F6D 		.ascii	"rf_mod\000"
 7514      6F6400
 7515              	.LASF44:
 7516 0231 64657465 		.ascii	"detener\000"
 7516      6E657200 
 7517              	.LASF42:
 7518 0239 636F6D61 		.ascii	"comand_exten\000"
 7518      6E645F65 
 7518      7874656E 
 7518      00
 7519              	.LASF83:
 7520 0246 42756666 		.ascii	"Buffer_LCD2\000"
 7520      65725F4C 
 7520      43443200 
 7521              	.LASF15:
 7522 0252 63686172 		.ascii	"char\000"
 7522      00
 7523              	.LASF89:
 7524 0257 626C6F71 		.ascii	"bloqueo_LCD\000"
 7524      75656F5F 
 7524      4C434400 
 7525              	.LASF20:
 7526 0263 6D616E67 		.ascii	"mangueras\000"
 7526      75657261 
 7526      7300
 7527              	.LASF12:
 7528 026d 75696E74 		.ascii	"uint16\000"
 7528      313600
 7529              	.LASF101:
 7530 0274 666C6F74 		.ascii	"flota\000"
 7530      6100
 7531              	.LASF119:
 7532 027a 7072696E 		.ascii	"print1\000"
 7532      743100
 7533              	.LASF120:
 7534 0281 7072696E 		.ascii	"print2\000"
 7534      743200
 7535              	.LASF32:
 7536 0288 7469706F 		.ascii	"tipo_venta\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 159


 7536      5F76656E 
 7536      746100
 7537              	.LASF29:
 7538 0293 69645F65 		.ascii	"id_ef\000"
 7538      6600
 7539              	.LASF35:
 7540 0299 7475726E 		.ascii	"turno\000"
 7540      6F00
 7541              	.LASF18:
 7542 029f 746F7461 		.ascii	"totales\000"
 7542      6C657300 
 7543              	.LASF86:
 7544 02a7 70617373 		.ascii	"password_lcd\000"
 7544      776F7264 
 7544      5F6C6364 
 7544      00
 7545              	.LASF58:
 7546 02b4 636F756E 		.ascii	"count_teclas1\000"
 7546      745F7465 
 7546      636C6173 
 7546      3100
 7547              	.LASF63:
 7548 02c2 636F756E 		.ascii	"count_teclas2\000"
 7548      745F7465 
 7548      636C6173 
 7548      3200
 7549              	.LASF66:
 7550 02d0 706F7378 		.ascii	"posx1\000"
 7550      3100
 7551              	.LASF69:
 7552 02d6 706F7378 		.ascii	"posx2\000"
 7552      3200
 7553              	.LASF6:
 7554 02dc 6C6F6E67 		.ascii	"long long int\000"
 7554      206C6F6E 
 7554      6720696E 
 7554      7400
 7555              	.LASF26:
 7556 02ea 70726F64 		.ascii	"producto\000"
 7556      7563746F 
 7556      00
 7557              	.LASF52:
 7558 02f3 63616D62 		.ascii	"cambiar_precio\000"
 7558      6961725F 
 7558      70726563 
 7558      696F00
 7559              	.LASF33:
 7560 0302 63656475 		.ascii	"cedula\000"
 7560      6C6100
 7561              	.LASF128:
 7562 0309 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7562      4320342E 
 7562      392E3320 
 7562      32303135 
 7562      30333033 
 7563 033c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7563      20726576 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 160


 7563      6973696F 
 7563      6E203232 
 7563      31323230 
 7564 036f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7564      66756E63 
 7564      74696F6E 
 7564      2D736563 
 7564      74696F6E 
 7565              	.LASF121:
 7566 0397 72785F74 		.ascii	"rx_timeout\000"
 7566      696D656F 
 7566      757400
 7567              	.LASF67:
 7568 03a2 706F7379 		.ascii	"posy1\000"
 7568      3100
 7569              	.LASF70:
 7570 03a8 706F7379 		.ascii	"posy2\000"
 7570      3200
 7571              	.LASF49:
 7572 03ae 73697A65 		.ascii	"size\000"
 7572      00
 7573              	.LASF22:
 7574 03b3 72656369 		.ascii	"recibo\000"
 7574      626F00
 7575              	.LASF24:
 7576 03ba 64696E65 		.ascii	"dinero\000"
 7576      726F00
 7577              	.LASF82:
 7578 03c1 42756666 		.ascii	"Buffer_LCD1\000"
 7578      65725F4C 
 7578      43443100 
 7579              	.LASF17:
 7580 03cd 65737461 		.ascii	"estado\000"
 7580      646F00
 7581              	.LASF127:
 7582 03d4 6D736E5F 		.ascii	"msn_tventas\000"
 7582      7476656E 
 7582      74617300 
 7583              	.LASF37:
 7584 03e0 70617373 		.ascii	"password_local\000"
 7584      776F7264 
 7584      5F6C6F63 
 7584      616C00
 7585              	.LASF93:
 7586 03ef 70707578 		.ascii	"ppux10\000"
 7586      313000
 7587              	.LASF104:
 7588 03f6 6E6F6D62 		.ascii	"nombre\000"
 7588      726500
 7589              	.LASF118:
 7590 03fd 6372635F 		.ascii	"crc_total\000"
 7590      746F7461 
 7590      6C00
 7591              	.LASF55:
 7592 0407 6E6D616E 		.ascii	"nmangueras\000"
 7592      67756572 
 7592      617300
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 161


 7593              	.LASF109:
 7594 0412 69645F6C 		.ascii	"id_logo\000"
 7594      6F676F00 
 7595              	.LASF2:
 7596 041a 73686F72 		.ascii	"short int\000"
 7596      7420696E 
 7596      7400
 7597              	.LASF4:
 7598 0424 6C6F6E67 		.ascii	"long int\000"
 7598      20696E74 
 7598      00
 7599              	.LASF57:
 7600 042d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7600      52784275 
 7600      66666572 
 7600      00
 7601              	.LASF21:
 7602 043a 73757274 		.ascii	"surtidor\000"
 7602      69646F72 
 7602      00
 7603              	.LASF59:
 7604 0443 636F6D61 		.ascii	"comas1\000"
 7604      733100
 7605              	.LASF60:
 7606 044a 636F6D61 		.ascii	"comas2\000"
 7606      733200
 7607              	.LASF50:
 7608 0451 74656D70 		.ascii	"temp\000"
 7608      00
 7609              	.LASF94:
 7610 0456 6E6F6D62 		.ascii	"nombre_pro1\000"
 7610      72655F70 
 7610      726F3100 
 7611              	.LASF96:
 7612 0462 6E6F6D62 		.ascii	"nombre_pro3\000"
 7612      72655F70 
 7612      726F3300 
 7613              	.LASF40:
 7614 046e 65737461 		.ascii	"estado_ex\000"
 7614      646F5F65 
 7614      7800
 7615              	.LASF46:
 7616 0478 70726F67 		.ascii	"programar\000"
 7616      72616D61 
 7616      7200
 7617              	.LASF16:
 7618 0482 73697A65 		.ascii	"sizetype\000"
 7618      74797065 
 7618      00
 7619              	.LASF5:
 7620 048b 6C6F6E67 		.ascii	"long unsigned int\000"
 7620      20756E73 
 7620      69676E65 
 7620      6420696E 
 7620      7400
 7621              	.LASF10:
 7622 049d 696E7433 		.ascii	"int32_t\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 162


 7622      325F7400 
 7623              	.LASF99:
 7624 04a5 70616E74 		.ascii	"pantallas\000"
 7624      616C6C61 
 7624      7300
 7625              	.LASF36:
 7626 04af 6175746F 		.ascii	"autorizado\000"
 7626      72697A61 
 7626      646F00
 7627              	.LASF1:
 7628 04ba 756E7369 		.ascii	"unsigned char\000"
 7628      676E6564 
 7628      20636861 
 7628      7200
 7629              	.LASF38:
 7630 04c8 6765745F 		.ascii	"get_estado\000"
 7630      65737461 
 7630      646F00
 7631              	.LASF79:
 7632 04d3 666C756A 		.ascii	"flujo_pos\000"
 7632      6F5F706F 
 7632      7300
 7633              	.LASF103:
 7634 04dd 6C61646F 		.ascii	"lado2\000"
 7634      3200
 7635              	.LASF43:
 7636 04e3 7665725F 		.ascii	"ver_error\000"
 7636      6572726F 
 7636      7200
 7637              	.LASF115:
 7638 04ed 6F6B5F64 		.ascii	"ok_datosRF\000"
 7638      61746F73 
 7638      524600
 7639              	.LASF95:
 7640 04f8 6E6F6D62 		.ascii	"nombre_pro2\000"
 7640      72655F70 
 7640      726F3200 
 7641              	.LASF0:
 7642 0504 7369676E 		.ascii	"signed char\000"
 7642      65642063 
 7642      68617200 
 7643              	.LASF47:
 7644 0510 76616C6F 		.ascii	"valor\000"
 7644      7200
 7645              	.LASF84:
 7646 0516 636F756E 		.ascii	"count_protector\000"
 7646      745F7072 
 7646      6F746563 
 7646      746F7200 
 7647              	.LASF3:
 7648 0526 73686F72 		.ascii	"short unsigned int\000"
 7648      7420756E 
 7648      7369676E 
 7648      65642069 
 7648      6E7400
 7649              	.LASF110:
 7650 0539 66656368 		.ascii	"fecha\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccAgneDZ.s 			page 163


 7650      6100
 7651              	.LASF11:
 7652 053f 75696E74 		.ascii	"uint8\000"
 7652      3800
 7653              	.LASF14:
 7654 0545 646F7562 		.ascii	"double\000"
 7654      6C6500
 7655              	.LASF41:
 7656 054c 72785F65 		.ascii	"rx_extend\000"
 7656      7874656E 
 7656      6400
 7657              	.LASF92:
 7658 0556 7472616D 		.ascii	"trama_totales\000"
 7658      615F746F 
 7658      74616C65 
 7658      7300
 7659              	.LASF90:
 7660 0564 69645F65 		.ascii	"id_estacion\000"
 7660      73746163 
 7660      696F6E00 
 7661              	.LASF27:
 7662 0570 6D616E67 		.ascii	"manguera\000"
 7662      75657261 
 7662      00
 7663              	.LASF87:
 7664 0579 696D6167 		.ascii	"imagen_grado\000"
 7664      656E5F67 
 7664      7261646F 
 7664      00
 7665              	.LASF19:
 7666 0586 67726164 		.ascii	"grado\000"
 7666      6F00
 7667              	.LASF131:
 7668 058c 52785F53 		.ascii	"Rx_Surtidor\000"
 7668      75727469 
 7668      646F7200 
 7669              	.LASF68:
 7670 0598 73697A65 		.ascii	"sizeletra1\000"
 7670      6C657472 
 7670      613100
 7671              	.LASF71:
 7672 05a3 73697A65 		.ascii	"sizeletra2\000"
 7672      6C657472 
 7672      613200
 7673              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
