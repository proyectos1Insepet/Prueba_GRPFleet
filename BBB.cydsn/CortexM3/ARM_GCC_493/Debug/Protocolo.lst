ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Protocolo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	count_teclas1,1,1
  19              		.comm	comas1,1,1
  20              		.comm	comas2,1,1
  21              		.comm	id_coma1,1,1
  22              		.comm	id_teclado1,1,1
  23              		.comm	count_teclas2,1,1
  24              		.comm	id_coma2,1,1
  25              		.comm	id_teclado2,1,1
  26              		.comm	posx1,2,2
  27              		.comm	posy1,2,2
  28              		.comm	sizeletra1,2,2
  29              		.comm	posx2,2,2
  30              		.comm	posy2,2,2
  31              		.comm	sizeletra2,2,2
  32              		.comm	teclas1,1,1
  33              		.comm	teclas2,1,1
  34              		.comm	flujo_LCD1,1,1
  35              		.comm	flujo_LCD2,1,1
  36              		.comm	Buffer_LCD1,30,4
  37              		.comm	Buffer_LCD2,30,4
  38              		.comm	count_protector,1,1
  39              		.comm	count_protector2,1,1
  40              		.comm	password_lcd,9,4
  41              		.comm	imagen_grado,2,2
  42              		.comm	prox_caso,8,4
  43              		.comm	bloqueo_LCD,3,4
  44              		.comm	id_estacion,5,4
  45              		.comm	id_venta,8,4
  46              		.comm	trama_totales,200,4
  47              		.comm	ppux10,1,1
  48              		.comm	nombre_pro1,17,4
  49              		.comm	nombre_pro2,17,4
  50              		.comm	nombre_pro3,17,4
  51              		.comm	version,4,4
  52              		.comm	lado1,93,4
  53              		.comm	lado2,93,4
  54              		.comm	nombre,33,4
  55              		.comm	nit,15,4
  56              		.comm	telefono,20,4
  57              		.comm	direccion,33,4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 2


  58              		.comm	lema1,32,4
  59              		.comm	lema2,32,4
  60              		.comm	id_logo,2,4
  61              		.comm	km,2,4
  62              		.comm	fecha,3,4
  63              		.comm	hora,2,4
  64              		.comm	rventa1,118,4
  65              		.comm	rventa2,118,4
  66              		.comm	ok_RF,1,1
  67              		.comm	ok_datosRF,1,1
  68              		.comm	rf_mod,200,4
  69              		.comm	buffer_i2c,64,4
  70              		.comm	crc_total,1,1
  71              		.comm	print1,2,4
  72              		.comm	print2,2,4
  73              		.comm	tipo_venta,1,1
  74              		.comm	rx_timeout,1,1
  75              		.global	msn_tc
  76              		.data
  77              		.align	2
  78              		.type	msn_tc, %object
  79              		.size	msn_tc, 17
  80              	msn_tc:
  81 0000 544F5441 		.ascii	"TOTALES CORRIENTE"
  81      4C455320 
  81      434F5252 
  81      49454E54 
  81      45
  82              		.global	msn_te
  83 0011 000000   		.align	2
  84              		.type	msn_te, %object
  85              		.size	msn_te, 13
  86              	msn_te:
  87 0014 544F5441 		.ascii	"TOTALES EXTRA"
  87      4C455320 
  87      45585452 
  87      41
  88              		.global	msn_td
  89 0021 000000   		.align	2
  90              		.type	msn_td, %object
  91              		.size	msn_td, 14
  92              	msn_td:
  93 0024 544F5441 		.ascii	"TOTALES DIESEL"
  93      4C455320 
  93      44494553 
  93      454C
  94              		.global	msn_lecact
  95 0032 0000     		.align	2
  96              		.type	msn_lecact, %object
  97              		.size	msn_lecact, 15
  98              	msn_lecact:
  99 0034 4C656374 		.ascii	"Lectura Actual:"
  99      75726120 
  99      41637475 
  99      616C3A
 100              		.global	msn_lecaan
 101 0043 00       		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 3


 102              		.type	msn_lecaan, %object
 103              		.size	msn_lecaan, 17
 104              	msn_lecaan:
 105 0044 4C656374 		.ascii	"Lectura Anterior:"
 105      75726120 
 105      416E7465 
 105      72696F72 
 105      3A
 106              		.global	msn_tventas
 107 0055 000000   		.align	2
 108              		.type	msn_tventas, %object
 109              		.size	msn_tventas, 18
 110              	msn_tventas:
 111 0058 546F7461 		.ascii	"Total de Ventas: $"
 111      6C206465 
 111      2056656E 
 111      7461733A 
 111      2024
 112 006a 0000     		.section	.text.Rx_Surtidor,"ax",%progbits
 113              		.align	2
 114              		.global	Rx_Surtidor
 115              		.thumb
 116              		.thumb_func
 117              		.type	Rx_Surtidor, %function
 118              	Rx_Surtidor:
 119              	.LFB63:
 120              		.file 1 ".\\Protocolo.c"
   1:.\Protocolo.c **** /*
   2:.\Protocolo.c **** ***************************************************************************************************
   3:.\Protocolo.c **** *                                           GRP550/700 CODE
   4:.\Protocolo.c **** 
   5:.\Protocolo.c **** *
   6:.\Protocolo.c **** *                             (c) Copyright 2013; Sistemas Insepet LTDA
   7:.\Protocolo.c **** *
   8:.\Protocolo.c **** *               All rights reserved.  Protected by international copyright laws.
   9:.\Protocolo.c **** *               Knowledge of the source code may NOT be used to develop a similar product.
  10:.\Protocolo.c **** *               Please help us continue to provide the Embedded community with the finest
  11:.\Protocolo.c **** *               software available.  Your honesty is greatly appreciated.
  12:.\Protocolo.c **** ***************************************************************************************************
  13:.\Protocolo.c **** */
  14:.\Protocolo.c **** 
  15:.\Protocolo.c **** /*
  16:.\Protocolo.c **** ***************************************************************************************************
  17:.\Protocolo.c **** *
  18:.\Protocolo.c **** *                                             GRP550/700 CODE
  19:.\Protocolo.c **** *
  20:.\Protocolo.c **** *                                             CYPRESS PSoC5LP
  21:.\Protocolo.c **** *                                                with the
  22:.\Protocolo.c **** *                                            CY8C5969AXI-LP035
  23:.\Protocolo.c **** *
  24:.\Protocolo.c **** * Filename      : Protocolo.c
  25:.\Protocolo.c **** * Version       : V1.00
  26:.\Protocolo.c **** * Programmer(s) : 
  27:.\Protocolo.c ****                   
  28:.\Protocolo.c **** ***************************************************************************************************
  29:.\Protocolo.c **** */
  30:.\Protocolo.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 4


  31:.\Protocolo.c **** 
  32:.\Protocolo.c **** /*
  33:.\Protocolo.c **** ***************************************************************************************************
  34:.\Protocolo.c **** *                                             INCLUDE FILES
  35:.\Protocolo.c **** ***************************************************************************************************
  36:.\Protocolo.c **** */
  37:.\Protocolo.c **** #include <device.h>
  38:.\Protocolo.c **** #include "VariablesG.h"
  39:.\Protocolo.c **** #include "i2c.h"
  40:.\Protocolo.c **** #include "Print.h"
  41:.\Protocolo.c **** 
  42:.\Protocolo.c **** /*
  43:.\Protocolo.c **** ***************************************************************************************************
  44:.\Protocolo.c **** *                                            	MENSAJES
  45:.\Protocolo.c **** ***************************************************************************************************
  46:.\Protocolo.c **** */
  47:.\Protocolo.c **** uint8 rx_timeout;								//0 inicia espera  1 se cumplio el tiempo
  48:.\Protocolo.c **** uint8 msn_tc[17]="TOTALES CORRIENTE";
  49:.\Protocolo.c **** uint8 msn_te[13]="TOTALES EXTRA";
  50:.\Protocolo.c **** uint8 msn_td[14]="TOTALES DIESEL";
  51:.\Protocolo.c **** uint8 msn_lecact[15]="Lectura Actual:";
  52:.\Protocolo.c **** uint8 msn_lecaan[17]="Lectura Anterior:";
  53:.\Protocolo.c **** uint8 msn_tventas[18]="Total de Ventas: $";
  54:.\Protocolo.c **** 
  55:.\Protocolo.c **** /*
  56:.\Protocolo.c **** ***************************************************************************************************
  57:.\Protocolo.c **** *                                        CY_ISR(modo_mux)
  58:.\Protocolo.c **** *
  59:.\Protocolo.c **** * Description : 
  60:.\Protocolo.c **** *               
  61:.\Protocolo.c **** ***************************************************************************************************
  62:.\Protocolo.c **** */
  63:.\Protocolo.c **** CY_ISR(Rx_Surtidor){
 121              		.loc 1 63 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
  64:.\Protocolo.c ****     Timer_RxSurtidor_ReadStatusRegister();
 131              		.loc 1 64 0
 132 0004 FFF7FEFF 		bl	Timer_RxSurtidor_ReadStatusRegister
  65:.\Protocolo.c **** 	rx_timeout=1;	
 133              		.loc 1 65 0
 134 0008 014B     		ldr	r3, .L2
 135 000a 0122     		movs	r2, #1
 136 000c 1A70     		strb	r2, [r3]
  66:.\Protocolo.c **** }
 137              		.loc 1 66 0
 138 000e 80BD     		pop	{r7, pc}
 139              	.L3:
 140              		.align	2
 141              	.L2:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 5


 142 0010 00000000 		.word	rx_timeout
 143              		.cfi_endproc
 144              	.LFE63:
 145              		.size	Rx_Surtidor, .-Rx_Surtidor
 146              		.section	.text.get_estado,"ax",%progbits
 147              		.align	2
 148              		.global	get_estado
 149              		.thumb
 150              		.thumb_func
 151              		.type	get_estado, %function
 152              	get_estado:
 153              	.LFB64:
  67:.\Protocolo.c **** 
  68:.\Protocolo.c **** 
  69:.\Protocolo.c **** /*
  70:.\Protocolo.c **** ***************************************************************************************************
  71:.\Protocolo.c **** *                                         ver_estado( void )
  72:.\Protocolo.c **** *
  73:.\Protocolo.c **** * Description : 
  74:.\Protocolo.c **** *               
  75:.\Protocolo.c **** *
  76:.\Protocolo.c **** * Argument(s) : none
  77:.\Protocolo.c **** *
  78:.\Protocolo.c **** * Return(s)   : none
  79:.\Protocolo.c **** *
  80:.\Protocolo.c **** * Caller(s)   : 
  81:.\Protocolo.c **** *
  82:.\Protocolo.c **** * Note(s)     : none.
  83:.\Protocolo.c **** ***************************************************************************************************
  84:.\Protocolo.c **** */
  85:.\Protocolo.c **** 
  86:.\Protocolo.c **** uint8 get_estado(uint8 dir){
 154              		.loc 1 86 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 16
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 84B0     		sub	sp, sp, #16
 163              		.cfi_def_cfa_offset 24
 164 0004 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 166 0006 0346     		mov	r3, r0
 167 0008 FB71     		strb	r3, [r7, #7]
  87:.\Protocolo.c ****     uint8 estado;
  88:.\Protocolo.c ****     Surtidor_ClearRxBuffer();	
 168              		.loc 1 88 0
 169 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  89:.\Protocolo.c ****     Surtidor_PutChar(dir);
 170              		.loc 1 89 0
 171 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 172 0010 1846     		mov	r0, r3
 173 0012 FFF7FEFF 		bl	Surtidor_PutChar
  90:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 174              		.loc 1 90 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 6


 175 0016 1E48     		ldr	r0, .L9
 176 0018 FFF7FEFF 		bl	isr_1_StartEx
  91:.\Protocolo.c ****     Timer_RxSurtidor_Start();
 177              		.loc 1 91 0
 178 001c FFF7FEFF 		bl	Timer_RxSurtidor_Start
  92:.\Protocolo.c **** 	rx_timeout=0;
 179              		.loc 1 92 0
 180 0020 1C4B     		ldr	r3, .L9+4
 181 0022 0022     		movs	r2, #0
 182 0024 1A70     		strb	r2, [r3]
  93:.\Protocolo.c ****     CyDelay(10);
 183              		.loc 1 93 0
 184 0026 0A20     		movs	r0, #10
 185 0028 FFF7FEFF 		bl	CyDelay
  94:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 186              		.loc 1 94 0
 187 002c 0BE0     		b	.L5
 188              	.L7:
  95:.\Protocolo.c **** 		if(rx_timeout==1){
 189              		.loc 1 95 0
 190 002e 194B     		ldr	r3, .L9+4
 191 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 192 0032 012B     		cmp	r3, #1
 193 0034 07D1     		bne	.L5
  96:.\Protocolo.c **** 			isr_1_Stop();
 194              		.loc 1 96 0
 195 0036 FFF7FEFF 		bl	isr_1_Stop
  97:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 196              		.loc 1 97 0
 197 003a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  98:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 198              		.loc 1 98 0
 199 003e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  99:.\Protocolo.c **** 			return 0;
 200              		.loc 1 99 0
 201 0042 0023     		movs	r3, #0
 202 0044 20E0     		b	.L6
 203              	.L5:
  94:.\Protocolo.c **** 		if(rx_timeout==1){
 204              		.loc 1 94 0
 205 0046 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 206 004a 0346     		mov	r3, r0
 207 004c 002B     		cmp	r3, #0
 208 004e EED0     		beq	.L7
 100:.\Protocolo.c **** 		}
 101:.\Protocolo.c **** 	}
 102:.\Protocolo.c ****     estado=Surtidor_ReadRxData();
 209              		.loc 1 102 0
 210 0050 FFF7FEFF 		bl	Surtidor_ReadRxData
 211 0054 0346     		mov	r3, r0
 212 0056 FB73     		strb	r3, [r7, #15]
 103:.\Protocolo.c **** 	if((estado&0x0F)==dir){
 213              		.loc 1 103 0
 214 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 215 005a 03F00F02 		and	r2, r3, #15
 216 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 217 0060 9A42     		cmp	r2, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 7


 218 0062 0AD1     		bne	.L8
 104:.\Protocolo.c **** 		estado=(estado&0xF0)>>4;
 219              		.loc 1 104 0
 220 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 221 0066 1B09     		lsrs	r3, r3, #4
 222 0068 FB73     		strb	r3, [r7, #15]
 105:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 223              		.loc 1 105 0
 224 006a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 106:.\Protocolo.c **** 		isr_1_Stop();
 225              		.loc 1 106 0
 226 006e FFF7FEFF 		bl	isr_1_Stop
 107:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 227              		.loc 1 107 0
 228 0072 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 108:.\Protocolo.c **** 	    return estado;
 229              		.loc 1 108 0
 230 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 231 0078 06E0     		b	.L6
 232              	.L8:
 109:.\Protocolo.c **** 	}
 110:.\Protocolo.c **** 	else{
 111:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 233              		.loc 1 111 0
 234 007a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 112:.\Protocolo.c **** 		isr_1_Stop();
 235              		.loc 1 112 0
 236 007e FFF7FEFF 		bl	isr_1_Stop
 113:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 237              		.loc 1 113 0
 238 0082 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 114:.\Protocolo.c **** 	    return 0;	
 239              		.loc 1 114 0
 240 0086 0023     		movs	r3, #0
 241              	.L6:
 115:.\Protocolo.c **** 	}
 116:.\Protocolo.c **** }
 242              		.loc 1 116 0
 243 0088 1846     		mov	r0, r3
 244 008a 1037     		adds	r7, r7, #16
 245              		.cfi_def_cfa_offset 8
 246 008c BD46     		mov	sp, r7
 247              		.cfi_def_cfa_register 13
 248              		@ sp needed
 249 008e 80BD     		pop	{r7, pc}
 250              	.L10:
 251              		.align	2
 252              	.L9:
 253 0090 00000000 		.word	Rx_Surtidor
 254 0094 00000000 		.word	rx_timeout
 255              		.cfi_endproc
 256              	.LFE64:
 257              		.size	get_estado, .-get_estado
 258              		.section	.text.ver_pos,"ax",%progbits
 259              		.align	2
 260              		.global	ver_pos
 261              		.thumb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 8


 262              		.thumb_func
 263              		.type	ver_pos, %function
 264              	ver_pos:
 265              	.LFB65:
 117:.\Protocolo.c **** 
 118:.\Protocolo.c **** /*
 119:.\Protocolo.c **** ***************************************************************************************************
 120:.\Protocolo.c **** *                                         ver_pos( void )
 121:.\Protocolo.c **** *
 122:.\Protocolo.c **** * Description : 
 123:.\Protocolo.c **** *               
 124:.\Protocolo.c **** *
 125:.\Protocolo.c **** * Argument(s) : none
 126:.\Protocolo.c **** *
 127:.\Protocolo.c **** * Return(s)   : none
 128:.\Protocolo.c **** *
 129:.\Protocolo.c **** * Caller(s)   : 
 130:.\Protocolo.c **** *
 131:.\Protocolo.c **** * Note(s)     : none.
 132:.\Protocolo.c **** ***************************************************************************************************
 133:.\Protocolo.c **** */
 134:.\Protocolo.c **** uint8 ver_pos (void){
 266              		.loc 1 134 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 8
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270 0000 80B5     		push	{r7, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274 0002 82B0     		sub	sp, sp, #8
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              		.cfi_def_cfa_register 7
 135:.\Protocolo.c **** uint8 x;
 136:.\Protocolo.c **** lado1.dir=0xff;
 278              		.loc 1 136 0
 279 0006 244B     		ldr	r3, .L19
 280 0008 FF22     		movs	r2, #255
 281 000a 1A70     		strb	r2, [r3]
 137:.\Protocolo.c **** lado2.dir=0xff;
 282              		.loc 1 137 0
 283 000c 234B     		ldr	r3, .L19+4
 284 000e FF22     		movs	r2, #255
 285 0010 1A70     		strb	r2, [r3]
 138:.\Protocolo.c **** 	CyDelay(5);
 286              		.loc 1 138 0
 287 0012 0520     		movs	r0, #5
 288 0014 FFF7FEFF 		bl	CyDelay
 139:.\Protocolo.c ****     if(get_estado(0)!=0){
 289              		.loc 1 139 0
 290 0018 0020     		movs	r0, #0
 291 001a FFF7FEFF 		bl	get_estado
 292 001e 0346     		mov	r3, r0
 293 0020 002B     		cmp	r3, #0
 294 0022 02D0     		beq	.L12
 140:.\Protocolo.c **** 		lado2.dir=0;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 9


 295              		.loc 1 140 0
 296 0024 1D4B     		ldr	r3, .L19+4
 297 0026 0022     		movs	r2, #0
 298 0028 1A70     		strb	r2, [r3]
 299              	.L12:
 141:.\Protocolo.c **** 	}	
 142:.\Protocolo.c ****     for(x=1;x<=15;x++){
 300              		.loc 1 142 0
 301 002a 0123     		movs	r3, #1
 302 002c FB71     		strb	r3, [r7, #7]
 303 002e 1FE0     		b	.L13
 304              	.L17:
 143:.\Protocolo.c **** 		CyDelay(5);
 305              		.loc 1 143 0
 306 0030 0520     		movs	r0, #5
 307 0032 FFF7FEFF 		bl	CyDelay
 144:.\Protocolo.c ****         if(get_estado(x)!=0){
 308              		.loc 1 144 0
 309 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 310 0038 1846     		mov	r0, r3
 311 003a FFF7FEFF 		bl	get_estado
 312 003e 0346     		mov	r3, r0
 313 0040 002B     		cmp	r3, #0
 314 0042 12D0     		beq	.L14
 145:.\Protocolo.c **** 			if(lado1.dir==0xFF){
 315              		.loc 1 145 0
 316 0044 144B     		ldr	r3, .L19
 317 0046 1B78     		ldrb	r3, [r3]
 318 0048 DBB2     		uxtb	r3, r3
 319 004a FF2B     		cmp	r3, #255
 320 004c 03D1     		bne	.L15
 146:.\Protocolo.c **** 				lado1.dir=x;
 321              		.loc 1 146 0
 322 004e 124A     		ldr	r2, .L19
 323 0050 FB79     		ldrb	r3, [r7, #7]
 324 0052 1370     		strb	r3, [r2]
 325 0054 09E0     		b	.L14
 326              	.L15:
 147:.\Protocolo.c **** 			}
 148:.\Protocolo.c **** 			else if(lado2.dir==0xFF){
 327              		.loc 1 148 0
 328 0056 114B     		ldr	r3, .L19+4
 329 0058 1B78     		ldrb	r3, [r3]
 330 005a DBB2     		uxtb	r3, r3
 331 005c FF2B     		cmp	r3, #255
 332 005e 04D1     		bne	.L14
 149:.\Protocolo.c **** 				lado2.dir=x;
 333              		.loc 1 149 0
 334 0060 0E4A     		ldr	r2, .L19+4
 335 0062 FB79     		ldrb	r3, [r7, #7]
 336 0064 1370     		strb	r3, [r2]
 150:.\Protocolo.c **** 				return 1;
 337              		.loc 1 150 0
 338 0066 0123     		movs	r3, #1
 339 0068 12E0     		b	.L16
 340              	.L14:
 142:.\Protocolo.c **** 		CyDelay(5);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 10


 341              		.loc 1 142 0 discriminator 2
 342 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 343 006c 0133     		adds	r3, r3, #1
 344 006e FB71     		strb	r3, [r7, #7]
 345              	.L13:
 142:.\Protocolo.c **** 		CyDelay(5);
 346              		.loc 1 142 0 is_stmt 0 discriminator 1
 347 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 348 0072 0F2B     		cmp	r3, #15
 349 0074 DCD9     		bls	.L17
 151:.\Protocolo.c **** 			}
 152:.\Protocolo.c **** 		}
 153:.\Protocolo.c **** 	}
 154:.\Protocolo.c **** 	if((lado1.dir!=0xFF)&&(lado2.dir!=0xFF)){
 350              		.loc 1 154 0 is_stmt 1
 351 0076 084B     		ldr	r3, .L19
 352 0078 1B78     		ldrb	r3, [r3]
 353 007a DBB2     		uxtb	r3, r3
 354 007c FF2B     		cmp	r3, #255
 355 007e 06D0     		beq	.L18
 356              		.loc 1 154 0 is_stmt 0 discriminator 1
 357 0080 064B     		ldr	r3, .L19+4
 358 0082 1B78     		ldrb	r3, [r3]
 359 0084 DBB2     		uxtb	r3, r3
 360 0086 FF2B     		cmp	r3, #255
 361 0088 01D0     		beq	.L18
 155:.\Protocolo.c **** 		return 1;
 362              		.loc 1 155 0 is_stmt 1
 363 008a 0123     		movs	r3, #1
 364 008c 00E0     		b	.L16
 365              	.L18:
 156:.\Protocolo.c **** 	}
 157:.\Protocolo.c **** 	else{
 158:.\Protocolo.c **** 		return 0;
 366              		.loc 1 158 0
 367 008e 0023     		movs	r3, #0
 368              	.L16:
 159:.\Protocolo.c **** 	}
 160:.\Protocolo.c **** }
 369              		.loc 1 160 0
 370 0090 1846     		mov	r0, r3
 371 0092 0837     		adds	r7, r7, #8
 372              		.cfi_def_cfa_offset 8
 373 0094 BD46     		mov	sp, r7
 374              		.cfi_def_cfa_register 13
 375              		@ sp needed
 376 0096 80BD     		pop	{r7, pc}
 377              	.L20:
 378              		.align	2
 379              	.L19:
 380 0098 00000000 		.word	lado1
 381 009c 00000000 		.word	lado2
 382              		.cfi_endproc
 383              	.LFE65:
 384              		.size	ver_pos, .-ver_pos
 385              		.section	.text.ver_error,"ax",%progbits
 386              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 11


 387              		.global	ver_error
 388              		.thumb
 389              		.thumb_func
 390              		.type	ver_error, %function
 391              	ver_error:
 392              	.LFB66:
 161:.\Protocolo.c **** 
 162:.\Protocolo.c **** /*
 163:.\Protocolo.c **** ***************************************************************************************************
 164:.\Protocolo.c **** *                                         void ver_error(uint8 val)
 165:.\Protocolo.c **** *
 166:.\Protocolo.c **** * Description : 
 167:.\Protocolo.c **** *               
 168:.\Protocolo.c **** *
 169:.\Protocolo.c **** * Argument(s) : none
 170:.\Protocolo.c **** *
 171:.\Protocolo.c **** * Return(s)   : none
 172:.\Protocolo.c **** *
 173:.\Protocolo.c **** * Caller(s)   : 
 174:.\Protocolo.c **** *
 175:.\Protocolo.c **** * Note(s)     : none.
 176:.\Protocolo.c **** ***************************************************************************************************
 177:.\Protocolo.c **** */
 178:.\Protocolo.c **** void ver_error(uint8 val){
 393              		.loc 1 178 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 16
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397 0000 80B5     		push	{r7, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 84B0     		sub	sp, sp, #16
 402              		.cfi_def_cfa_offset 24
 403 0004 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
 405 0006 0346     		mov	r3, r0
 406 0008 FB71     		strb	r3, [r7, #7]
 179:.\Protocolo.c ****     uint8 estado;
 180:.\Protocolo.c ****     Surtidor_PutChar(val);
 407              		.loc 1 180 0
 408 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 409 000c 1846     		mov	r0, r3
 410 000e FFF7FEFF 		bl	Surtidor_PutChar
 181:.\Protocolo.c ****     CyDelay(200);
 411              		.loc 1 181 0
 412 0012 C820     		movs	r0, #200
 413 0014 FFF7FEFF 		bl	CyDelay
 182:.\Protocolo.c ****     if(Surtidor_GetRxBufferSize()>=1){
 414              		.loc 1 182 0
 415 0018 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 416 001c 0346     		mov	r3, r0
 417 001e 002B     		cmp	r3, #0
 418 0020 06D0     		beq	.L21
 183:.\Protocolo.c ****        estado=(Surtidor_ReadRxData()&0xF0)>>4;
 419              		.loc 1 183 0
 420 0022 FFF7FEFF 		bl	Surtidor_ReadRxData
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 12


 421 0026 0346     		mov	r3, r0
 422 0028 1B09     		lsrs	r3, r3, #4
 423 002a FB73     		strb	r3, [r7, #15]
 184:.\Protocolo.c ****        Surtidor_ClearRxBuffer();
 424              		.loc 1 184 0
 425 002c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 426              	.L21:
 185:.\Protocolo.c ****        if(estado==0){
 186:.\Protocolo.c **** 
 187:.\Protocolo.c ****        }
 188:.\Protocolo.c ****     }    
 189:.\Protocolo.c **** }
 427              		.loc 1 189 0
 428 0030 1037     		adds	r7, r7, #16
 429              		.cfi_def_cfa_offset 8
 430 0032 BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 0034 80BD     		pop	{r7, pc}
 434              		.cfi_endproc
 435              	.LFE66:
 436              		.size	ver_error, .-ver_error
 437 0036 00BF     		.section	.rodata
 438              		.align	2
 439              	.LC0:
 440 0000 FF       		.byte	-1
 441 0001 E9       		.byte	-23
 442 0002 FE       		.byte	-2
 443 0003 E0       		.byte	-32
 444 0004 E1       		.byte	-31
 445 0005 E0       		.byte	-32
 446 0006 FB       		.byte	-5
 447 0007 EE       		.byte	-18
 448 0008 F0       		.byte	-16
 449 0009 000000   		.section	.text.estado_ex,"ax",%progbits
 450              		.align	2
 451              		.global	estado_ex
 452              		.thumb
 453              		.thumb_func
 454              		.type	estado_ex, %function
 455              	estado_ex:
 456              	.LFB67:
 190:.\Protocolo.c **** 
 191:.\Protocolo.c **** /*
 192:.\Protocolo.c **** ***************************************************************************************************
 193:.\Protocolo.c **** *                                         estado_ex(uint8 val)
 194:.\Protocolo.c **** *
 195:.\Protocolo.c **** * Description : 
 196:.\Protocolo.c **** *               
 197:.\Protocolo.c **** *
 198:.\Protocolo.c **** * Argument(s) : none
 199:.\Protocolo.c **** *
 200:.\Protocolo.c **** * Return(s)   : none
 201:.\Protocolo.c **** *
 202:.\Protocolo.c **** * Caller(s)   : 
 203:.\Protocolo.c **** *
 204:.\Protocolo.c **** * Note(s)     : none.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 13


 205:.\Protocolo.c **** ***************************************************************************************************
 206:.\Protocolo.c **** */
 207:.\Protocolo.c **** uint8 estado_ex(uint8 val){
 457              		.loc 1 207 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 40
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461 0000 90B5     		push	{r4, r7, lr}
 462              		.cfi_def_cfa_offset 12
 463              		.cfi_offset 4, -12
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 8BB0     		sub	sp, sp, #44
 467              		.cfi_def_cfa_offset 56
 468 0004 00AF     		add	r7, sp, #0
 469              		.cfi_def_cfa_register 7
 470 0006 0346     		mov	r3, r0
 471 0008 FB71     		strb	r3, [r7, #7]
 208:.\Protocolo.c ****     uint8 rx_extend[19],x,comand_exten[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0};
 472              		.loc 1 208 0
 473 000a 594A     		ldr	r2, .L41
 474 000c 07F10803 		add	r3, r7, #8
 475 0010 1068     		ldr	r0, [r2]	@ unaligned
 476 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
 477 0014 03C3     		stmia	r3!, {r0, r1}
 478 0016 127A     		ldrb	r2, [r2, #8]
 479 0018 1A70     		strb	r2, [r3]
 209:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 480              		.loc 1 209 0
 481 001a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 210:.\Protocolo.c ****     Surtidor_PutChar(0x20|val);
 482              		.loc 1 210 0
 483 001e FB79     		ldrb	r3, [r7, #7]
 484 0020 43F02003 		orr	r3, r3, #32
 485 0024 DBB2     		uxtb	r3, r3
 486 0026 1846     		mov	r0, r3
 487 0028 FFF7FEFF 		bl	Surtidor_PutChar
 211:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 488              		.loc 1 211 0
 489 002c 5148     		ldr	r0, .L41+4
 490 002e FFF7FEFF 		bl	isr_1_StartEx
 212:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 491              		.loc 1 212 0
 492 0032 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 213:.\Protocolo.c ****     rx_timeout=0;
 493              		.loc 1 213 0
 494 0036 504B     		ldr	r3, .L41+8
 495 0038 0022     		movs	r2, #0
 496 003a 1A70     		strb	r2, [r3]
 214:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 497              		.loc 1 214 0
 498 003c 0BE0     		b	.L24
 499              	.L26:
 215:.\Protocolo.c **** 		if(rx_timeout==1){
 500              		.loc 1 215 0
 501 003e 4E4B     		ldr	r3, .L41+8
 502 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 14


 503 0042 012B     		cmp	r3, #1
 504 0044 07D1     		bne	.L24
 216:.\Protocolo.c **** 			isr_1_Stop();
 505              		.loc 1 216 0
 506 0046 FFF7FEFF 		bl	isr_1_Stop
 217:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 507              		.loc 1 217 0
 508 004a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 218:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 509              		.loc 1 218 0
 510 004e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 219:.\Protocolo.c **** 			return 0;
 511              		.loc 1 219 0
 512 0052 0023     		movs	r3, #0
 513 0054 88E0     		b	.L39
 514              	.L24:
 214:.\Protocolo.c **** 		if(rx_timeout==1){
 515              		.loc 1 214 0
 516 0056 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 517 005a 0346     		mov	r3, r0
 518 005c 002B     		cmp	r3, #0
 519 005e EED0     		beq	.L26
 220:.\Protocolo.c **** 		}
 221:.\Protocolo.c **** 	}
 222:.\Protocolo.c **** 	isr_1_Stop();
 520              		.loc 1 222 0
 521 0060 FFF7FEFF 		bl	isr_1_Stop
 223:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 522              		.loc 1 223 0
 523 0064 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 224:.\Protocolo.c ****     if(Surtidor_ReadRxData()==(0xD0|val)){
 524              		.loc 1 224 0
 525 0068 FFF7FEFF 		bl	Surtidor_ReadRxData
 526 006c 0346     		mov	r3, r0
 527 006e 1A46     		mov	r2, r3
 528 0070 FB79     		ldrb	r3, [r7, #7]
 529 0072 63F02F03 		orn	r3, r3, #47
 530 0076 DBB2     		uxtb	r3, r3
 531 0078 9A42     		cmp	r2, r3
 532 007a 74D1     		bne	.L27
 225:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 533              		.loc 1 225 0
 534 007c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 226:.\Protocolo.c **** 		CyDelay(5);
 535              		.loc 1 226 0
 536 0080 0520     		movs	r0, #5
 537 0082 FFF7FEFF 		bl	CyDelay
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 538              		.loc 1 227 0
 539 0086 0023     		movs	r3, #0
 540 0088 87F82730 		strb	r3, [r7, #39]
 541 008c 0EE0     		b	.L28
 542              	.L29:
 228:.\Protocolo.c ****            Surtidor_PutChar(comand_exten[x]); 
 543              		.loc 1 228 0 discriminator 3
 544 008e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 545 0092 07F12802 		add	r2, r7, #40
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 15


 546 0096 1344     		add	r3, r3, r2
 547 0098 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 548 009c 1846     		mov	r0, r3
 549 009e FFF7FEFF 		bl	Surtidor_PutChar
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 550              		.loc 1 227 0 discriminator 3
 551 00a2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 552 00a6 0133     		adds	r3, r3, #1
 553 00a8 87F82730 		strb	r3, [r7, #39]
 554              	.L28:
 227:.\Protocolo.c ****         for(x=0;x<=8;x++){
 555              		.loc 1 227 0 is_stmt 0 discriminator 1
 556 00ac 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 557 00b0 082B     		cmp	r3, #8
 558 00b2 ECD9     		bls	.L29
 229:.\Protocolo.c ****         }
 230:.\Protocolo.c **** 		isr_1_StartEx(Rx_Surtidor);
 559              		.loc 1 230 0 is_stmt 1
 560 00b4 2F48     		ldr	r0, .L41+4
 561 00b6 FFF7FEFF 		bl	isr_1_StartEx
 231:.\Protocolo.c **** 	    Timer_RxSurtidor_Start();	
 562              		.loc 1 231 0
 563 00ba FFF7FEFF 		bl	Timer_RxSurtidor_Start
 232:.\Protocolo.c **** 	    rx_timeout=0;
 564              		.loc 1 232 0
 565 00be 2E4B     		ldr	r3, .L41+8
 566 00c0 0022     		movs	r2, #0
 567 00c2 1A70     		strb	r2, [r3]
 233:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 568              		.loc 1 233 0
 569 00c4 0BE0     		b	.L30
 570              	.L31:
 234:.\Protocolo.c **** 			if(rx_timeout==1){
 571              		.loc 1 234 0
 572 00c6 2C4B     		ldr	r3, .L41+8
 573 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 574 00ca 012B     		cmp	r3, #1
 575 00cc 07D1     		bne	.L30
 235:.\Protocolo.c **** 				isr_1_Stop();
 576              		.loc 1 235 0
 577 00ce FFF7FEFF 		bl	isr_1_Stop
 236:.\Protocolo.c **** 				Timer_RxSurtidor_Stop();
 578              		.loc 1 236 0
 579 00d2 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 237:.\Protocolo.c **** 	    		Surtidor_ClearRxBuffer();			
 580              		.loc 1 237 0
 581 00d6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 238:.\Protocolo.c **** 				return 0;
 582              		.loc 1 238 0
 583 00da 0023     		movs	r3, #0
 584 00dc 44E0     		b	.L39
 585              	.L30:
 233:.\Protocolo.c **** 			if(rx_timeout==1){
 586              		.loc 1 233 0
 587 00de FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 588 00e2 0346     		mov	r3, r0
 589 00e4 132B     		cmp	r3, #19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 16


 590 00e6 EED1     		bne	.L31
 239:.\Protocolo.c **** 			}
 240:.\Protocolo.c **** 		}       
 241:.\Protocolo.c **** 		isr_1_Stop();
 591              		.loc 1 241 0
 592 00e8 FFF7FEFF 		bl	isr_1_Stop
 242:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();		
 593              		.loc 1 242 0
 594 00ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 595              		.loc 1 243 0
 596 00f0 0023     		movs	r3, #0
 597 00f2 87F82730 		strb	r3, [r7, #39]
 598 00f6 0FE0     		b	.L32
 599              	.L33:
 244:.\Protocolo.c ****            rx_extend[x]=Surtidor_ReadRxData(); 
 600              		.loc 1 244 0 discriminator 3
 601 00f8 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 602 00fc FFF7FEFF 		bl	Surtidor_ReadRxData
 603 0100 0346     		mov	r3, r0
 604 0102 1A46     		mov	r2, r3
 605 0104 07F12803 		add	r3, r7, #40
 606 0108 2344     		add	r3, r3, r4
 607 010a 03F8142C 		strb	r2, [r3, #-20]
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 608              		.loc 1 243 0 discriminator 3
 609 010e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 610 0112 0133     		adds	r3, r3, #1
 611 0114 87F82730 		strb	r3, [r7, #39]
 612              	.L32:
 243:.\Protocolo.c ****         for(x=0;x<=18;x++){
 613              		.loc 1 243 0 is_stmt 0 discriminator 1
 614 0118 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 615 011c 122B     		cmp	r3, #18
 616 011e EBD9     		bls	.L33
 245:.\Protocolo.c ****         }
 246:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 617              		.loc 1 246 0 is_stmt 1
 618 0120 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 247:.\Protocolo.c ****         if((rx_extend[0]==0xBA)&&(rx_extend[17]==0x8D)&&(rx_extend[18]==0x8A)&&(rx_extend[12]==0xB1
 619              		.loc 1 247 0
 620 0124 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 621 0126 BA2B     		cmp	r3, #186
 622 0128 1BD1     		bne	.L34
 623              		.loc 1 247 0 is_stmt 0 discriminator 1
 624 012a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 625 012e 8D2B     		cmp	r3, #141
 626 0130 17D1     		bne	.L34
 627              		.loc 1 247 0 discriminator 2
 628 0132 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 629 0136 8A2B     		cmp	r3, #138
 630 0138 13D1     		bne	.L34
 631              		.loc 1 247 0 discriminator 3
 632 013a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 633 013e B12B     		cmp	r3, #177
 634 0140 0FD1     		bne	.L34
 248:.\Protocolo.c ****             switch(rx_extend[14]){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 17


 635              		.loc 1 248 0 is_stmt 1
 636 0142 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 637 0146 B22B     		cmp	r3, #178
 638 0148 05D0     		beq	.L36
 639 014a B32B     		cmp	r3, #179
 640 014c 05D0     		beq	.L37
 641 014e B12B     		cmp	r3, #177
 642 0150 05D1     		bne	.L40
 249:.\Protocolo.c ****                 case 0xB1:
 250:.\Protocolo.c ****                     return 1;
 643              		.loc 1 250 0
 644 0152 0123     		movs	r3, #1
 645 0154 08E0     		b	.L39
 646              	.L36:
 251:.\Protocolo.c ****                 break;
 252:.\Protocolo.c ****                 case 0xB2:
 253:.\Protocolo.c ****                     return 2;
 647              		.loc 1 253 0
 648 0156 0223     		movs	r3, #2
 649 0158 06E0     		b	.L39
 650              	.L37:
 254:.\Protocolo.c ****                 break;
 255:.\Protocolo.c ****                 case 0xB3:
 256:.\Protocolo.c ****                     return 3;
 651              		.loc 1 256 0
 652 015a 0323     		movs	r3, #3
 653 015c 04E0     		b	.L39
 654              	.L40:
 257:.\Protocolo.c ****                 break;
 258:.\Protocolo.c ****                 default:
 259:.\Protocolo.c ****                 	return 0;
 655              		.loc 1 259 0
 656 015e 0023     		movs	r3, #0
 657 0160 02E0     		b	.L39
 658              	.L34:
 260:.\Protocolo.c **** 				break;
 261:.\Protocolo.c ****             }
 262:.\Protocolo.c ****         }
 263:.\Protocolo.c ****         else{
 264:.\Protocolo.c ****             return 0;
 659              		.loc 1 264 0
 660 0162 0023     		movs	r3, #0
 661 0164 00E0     		b	.L39
 662              	.L27:
 265:.\Protocolo.c ****         }
 266:.\Protocolo.c ****     }
 267:.\Protocolo.c ****     else{
 268:.\Protocolo.c ****         return 0;
 663              		.loc 1 268 0
 664 0166 0023     		movs	r3, #0
 665              	.L39:
 269:.\Protocolo.c ****     }
 270:.\Protocolo.c **** }
 666              		.loc 1 270 0
 667 0168 1846     		mov	r0, r3
 668 016a 2C37     		adds	r7, r7, #44
 669              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 18


 670 016c BD46     		mov	sp, r7
 671              		.cfi_def_cfa_register 13
 672              		@ sp needed
 673 016e 90BD     		pop	{r4, r7, pc}
 674              	.L42:
 675              		.align	2
 676              	.L41:
 677 0170 00000000 		.word	.LC0
 678 0174 00000000 		.word	Rx_Surtidor
 679 0178 00000000 		.word	rx_timeout
 680              		.cfi_endproc
 681              	.LFE67:
 682              		.size	estado_ex, .-estado_ex
 683              		.section	.text.detener,"ax",%progbits
 684              		.align	2
 685              		.global	detener
 686              		.thumb
 687              		.thumb_func
 688              		.type	detener, %function
 689              	detener:
 690              	.LFB68:
 271:.\Protocolo.c **** 
 272:.\Protocolo.c **** /*
 273:.\Protocolo.c **** ***************************************************************************************************
 274:.\Protocolo.c **** *                                         void detener(uint8 val)
 275:.\Protocolo.c **** *
 276:.\Protocolo.c **** * Description : 
 277:.\Protocolo.c **** *               
 278:.\Protocolo.c **** *
 279:.\Protocolo.c **** * Argument(s) : none
 280:.\Protocolo.c **** *
 281:.\Protocolo.c **** * Return(s)   : none
 282:.\Protocolo.c **** *
 283:.\Protocolo.c **** * Caller(s)   : 
 284:.\Protocolo.c **** *
 285:.\Protocolo.c **** * Note(s)     : none.
 286:.\Protocolo.c **** ***************************************************************************************************
 287:.\Protocolo.c **** */
 288:.\Protocolo.c **** void detener(uint8 val){
 691              		.loc 1 288 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 8
 694              		@ frame_needed = 1, uses_anonymous_args = 0
 695 0000 80B5     		push	{r7, lr}
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 7, -8
 698              		.cfi_offset 14, -4
 699 0002 82B0     		sub	sp, sp, #8
 700              		.cfi_def_cfa_offset 16
 701 0004 00AF     		add	r7, sp, #0
 702              		.cfi_def_cfa_register 7
 703 0006 0346     		mov	r3, r0
 704 0008 FB71     		strb	r3, [r7, #7]
 289:.\Protocolo.c ****     Surtidor_PutChar(0x30|val);
 705              		.loc 1 289 0
 706 000a FB79     		ldrb	r3, [r7, #7]
 707 000c 43F03003 		orr	r3, r3, #48
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 19


 708 0010 DBB2     		uxtb	r3, r3
 709 0012 1846     		mov	r0, r3
 710 0014 FFF7FEFF 		bl	Surtidor_PutChar
 290:.\Protocolo.c ****     CyDelay(200);
 711              		.loc 1 290 0
 712 0018 C820     		movs	r0, #200
 713 001a FFF7FEFF 		bl	CyDelay
 291:.\Protocolo.c **** }
 714              		.loc 1 291 0
 715 001e 0837     		adds	r7, r7, #8
 716              		.cfi_def_cfa_offset 8
 717 0020 BD46     		mov	sp, r7
 718              		.cfi_def_cfa_register 13
 719              		@ sp needed
 720 0022 80BD     		pop	{r7, pc}
 721              		.cfi_endproc
 722              	.LFE68:
 723              		.size	detener, .-detener
 724              		.section	.text.venta,"ax",%progbits
 725              		.align	2
 726              		.global	venta
 727              		.thumb
 728              		.thumb_func
 729              		.type	venta, %function
 730              	venta:
 731              	.LFB69:
 292:.\Protocolo.c **** 
 293:.\Protocolo.c **** /*
 294:.\Protocolo.c **** ***************************************************************************************************
 295:.\Protocolo.c **** *                                         void venta(uint8 val)
 296:.\Protocolo.c **** *
 297:.\Protocolo.c **** * Description : 
 298:.\Protocolo.c **** *               
 299:.\Protocolo.c **** *
 300:.\Protocolo.c **** * Argument(s) : none
 301:.\Protocolo.c **** *
 302:.\Protocolo.c **** * Return(s)   : none
 303:.\Protocolo.c **** *
 304:.\Protocolo.c **** * Caller(s)   : 
 305:.\Protocolo.c **** *
 306:.\Protocolo.c **** * Note(s)     : none.
 307:.\Protocolo.c **** ***************************************************************************************************
 308:.\Protocolo.c **** */
 309:.\Protocolo.c **** uint8 venta(uint8 dir){
 732              		.loc 1 309 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 16
 735              		@ frame_needed = 1, uses_anonymous_args = 0
 736 0000 80B5     		push	{r7, lr}
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 7, -8
 739              		.cfi_offset 14, -4
 740 0002 84B0     		sub	sp, sp, #16
 741              		.cfi_def_cfa_offset 24
 742 0004 00AF     		add	r7, sp, #0
 743              		.cfi_def_cfa_register 7
 744 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 20


 745 0008 FB71     		strb	r3, [r7, #7]
 310:.\Protocolo.c **** 	uint8 x;
 311:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 746              		.loc 1 311 0
 747 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 312:.\Protocolo.c **** 	Surtidor_PutChar(0x40|dir);
 748              		.loc 1 312 0
 749 000e FB79     		ldrb	r3, [r7, #7]
 750 0010 43F04003 		orr	r3, r3, #64
 751 0014 DBB2     		uxtb	r3, r3
 752 0016 1846     		mov	r0, r3
 753 0018 FFF7FEFF 		bl	Surtidor_PutChar
 313:.\Protocolo.c ****     CyDelay(300);
 754              		.loc 1 313 0
 755 001c 4FF49670 		mov	r0, #300
 756 0020 FFF7FEFF 		bl	CyDelay
 314:.\Protocolo.c **** 	if((version[1]!=7)&&(Surtidor_GetRxBufferSize()==33)){
 757              		.loc 1 314 0
 758 0024 AB4B     		ldr	r3, .L78
 759 0026 5B78     		ldrb	r3, [r3, #1]
 760 0028 DBB2     		uxtb	r3, r3
 761 002a 072B     		cmp	r3, #7
 762 002c 00F0BC80 		beq	.L45
 763              		.loc 1 314 0 is_stmt 0 discriminator 1
 764 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 765 0034 0346     		mov	r3, r0
 766 0036 212B     		cmp	r3, #33
 767 0038 40F0B680 		bne	.L45
 315:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[32]==0xF0)){
 768              		.loc 1 315 0 is_stmt 1
 769 003c A64B     		ldr	r3, .L78+4
 770 003e 1B78     		ldrb	r3, [r3]
 771 0040 DBB2     		uxtb	r3, r3
 772 0042 FF2B     		cmp	r3, #255
 773 0044 40F0AE80 		bne	.L46
 774              		.loc 1 315 0 is_stmt 0 discriminator 1
 775 0048 A34B     		ldr	r3, .L78+4
 776 004a 9B78     		ldrb	r3, [r3, #2]
 777 004c DBB2     		uxtb	r3, r3
 778 004e F82B     		cmp	r3, #248
 779 0050 40F0A880 		bne	.L46
 780              		.loc 1 315 0 discriminator 2
 781 0054 A04B     		ldr	r3, .L78+4
 782 0056 93F82030 		ldrb	r3, [r3, #32]
 783 005a DBB2     		uxtb	r3, r3
 784 005c F02B     		cmp	r3, #240
 785 005e 40F0A180 		bne	.L46
 316:.\Protocolo.c **** 			if(dir==lado1.dir){
 786              		.loc 1 316 0 is_stmt 1
 787 0062 9E4B     		ldr	r3, .L78+8
 788 0064 1B78     		ldrb	r3, [r3]
 789 0066 DBB2     		uxtb	r3, r3
 790 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 791 006a 9A42     		cmp	r2, r3
 792 006c 4CD1     		bne	.L47
 317:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 793              		.loc 1 317 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 21


 794 006e 9A4B     		ldr	r3, .L78+4
 795 0070 5B7A     		ldrb	r3, [r3, #9]
 796 0072 DBB2     		uxtb	r3, r3
 797 0074 03F00F03 		and	r3, r3, #15
 798 0078 DBB2     		uxtb	r3, r3
 799 007a 0133     		adds	r3, r3, #1
 800 007c DAB2     		uxtb	r2, r3
 801 007e 984B     		ldr	r3, .L78+12
 802 0080 5A76     		strb	r2, [r3, #25]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 803              		.loc 1 318 0
 804 0082 0023     		movs	r3, #0
 805 0084 FB73     		strb	r3, [r7, #15]
 806 0086 0FE0     		b	.L48
 807              	.L49:
 319:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 808              		.loc 1 319 0 discriminator 3
 809 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 810 008a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 811 008c 0C32     		adds	r2, r2, #12
 812 008e 9249     		ldr	r1, .L78+4
 813 0090 8A5C     		ldrb	r2, [r1, r2]
 814 0092 D2B2     		uxtb	r2, r2
 815 0094 02F00F02 		and	r2, r2, #15
 816 0098 D1B2     		uxtb	r1, r2
 817 009a 914A     		ldr	r2, .L78+12
 818 009c 1344     		add	r3, r3, r2
 819 009e 0A46     		mov	r2, r1
 820 00a0 9A70     		strb	r2, [r3, #2]
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 821              		.loc 1 318 0 discriminator 3
 822 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 823 00a4 0133     		adds	r3, r3, #1
 824 00a6 FB73     		strb	r3, [r7, #15]
 825              	.L48:
 318:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 826              		.loc 1 318 0 is_stmt 0 discriminator 1
 827 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 828 00aa 032B     		cmp	r3, #3
 829 00ac ECD9     		bls	.L49
 320:.\Protocolo.c **** 				}
 321:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 830              		.loc 1 321 0 is_stmt 1
 831 00ae 0023     		movs	r3, #0
 832 00b0 FB73     		strb	r3, [r7, #15]
 833 00b2 0FE0     		b	.L50
 834              	.L51:
 322:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 835              		.loc 1 322 0 discriminator 3
 836 00b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 837 00b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 838 00b8 1132     		adds	r2, r2, #17
 839 00ba 8749     		ldr	r1, .L78+4
 840 00bc 8A5C     		ldrb	r2, [r1, r2]
 841 00be D2B2     		uxtb	r2, r2
 842 00c0 02F00F02 		and	r2, r2, #15
 843 00c4 D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 22


 844 00c6 864A     		ldr	r2, .L78+12
 845 00c8 1344     		add	r3, r3, r2
 846 00ca 0A46     		mov	r2, r1
 847 00cc 1A74     		strb	r2, [r3, #16]
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 848              		.loc 1 321 0 discriminator 3
 849 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 850 00d0 0133     		adds	r3, r3, #1
 851 00d2 FB73     		strb	r3, [r7, #15]
 852              	.L50:
 321:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 853              		.loc 1 321 0 is_stmt 0 discriminator 1
 854 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 855 00d6 052B     		cmp	r3, #5
 856 00d8 ECD9     		bls	.L51
 323:.\Protocolo.c **** 				}			
 324:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 857              		.loc 1 324 0 is_stmt 1
 858 00da 0023     		movs	r3, #0
 859 00dc FB73     		strb	r3, [r7, #15]
 860 00de 0FE0     		b	.L52
 861              	.L53:
 325:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 862              		.loc 1 325 0 discriminator 3
 863 00e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 864 00e2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 865 00e4 1832     		adds	r2, r2, #24
 866 00e6 7C49     		ldr	r1, .L78+4
 867 00e8 8A5C     		ldrb	r2, [r1, r2]
 868 00ea D2B2     		uxtb	r2, r2
 869 00ec 02F00F02 		and	r2, r2, #15
 870 00f0 D1B2     		uxtb	r1, r2
 871 00f2 7B4A     		ldr	r2, .L78+12
 872 00f4 1344     		add	r3, r3, r2
 873 00f6 0A46     		mov	r2, r1
 874 00f8 DA71     		strb	r2, [r3, #7]
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 875              		.loc 1 324 0 discriminator 3
 876 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 877 00fc 0133     		adds	r3, r3, #1
 878 00fe FB73     		strb	r3, [r7, #15]
 879              	.L52:
 324:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 880              		.loc 1 324 0 is_stmt 0 discriminator 1
 881 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 882 0102 052B     		cmp	r3, #5
 883 0104 ECD9     		bls	.L53
 884 0106 4BE0     		b	.L54
 885              	.L47:
 326:.\Protocolo.c **** 				}
 327:.\Protocolo.c **** 			}
 328:.\Protocolo.c **** 			else{
 329:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 886              		.loc 1 329 0 is_stmt 1
 887 0108 734B     		ldr	r3, .L78+4
 888 010a 5B7A     		ldrb	r3, [r3, #9]
 889 010c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 23


 890 010e 03F00F03 		and	r3, r3, #15
 891 0112 DBB2     		uxtb	r3, r3
 892 0114 0133     		adds	r3, r3, #1
 893 0116 DAB2     		uxtb	r2, r3
 894 0118 724B     		ldr	r3, .L78+16
 895 011a 5A76     		strb	r2, [r3, #25]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 896              		.loc 1 330 0
 897 011c 0023     		movs	r3, #0
 898 011e FB73     		strb	r3, [r7, #15]
 899 0120 0FE0     		b	.L55
 900              	.L56:
 331:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 901              		.loc 1 331 0 discriminator 3
 902 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 903 0124 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 904 0126 0C32     		adds	r2, r2, #12
 905 0128 6B49     		ldr	r1, .L78+4
 906 012a 8A5C     		ldrb	r2, [r1, r2]
 907 012c D2B2     		uxtb	r2, r2
 908 012e 02F00F02 		and	r2, r2, #15
 909 0132 D1B2     		uxtb	r1, r2
 910 0134 6B4A     		ldr	r2, .L78+16
 911 0136 1344     		add	r3, r3, r2
 912 0138 0A46     		mov	r2, r1
 913 013a 9A70     		strb	r2, [r3, #2]
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 914              		.loc 1 330 0 discriminator 3
 915 013c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 916 013e 0133     		adds	r3, r3, #1
 917 0140 FB73     		strb	r3, [r7, #15]
 918              	.L55:
 330:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 919              		.loc 1 330 0 is_stmt 0 discriminator 1
 920 0142 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 921 0144 032B     		cmp	r3, #3
 922 0146 ECD9     		bls	.L56
 332:.\Protocolo.c **** 				}
 333:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 923              		.loc 1 333 0 is_stmt 1
 924 0148 0023     		movs	r3, #0
 925 014a FB73     		strb	r3, [r7, #15]
 926 014c 0FE0     		b	.L57
 927              	.L58:
 334:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 928              		.loc 1 334 0 discriminator 3
 929 014e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 930 0150 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 931 0152 1132     		adds	r2, r2, #17
 932 0154 6049     		ldr	r1, .L78+4
 933 0156 8A5C     		ldrb	r2, [r1, r2]
 934 0158 D2B2     		uxtb	r2, r2
 935 015a 02F00F02 		and	r2, r2, #15
 936 015e D1B2     		uxtb	r1, r2
 937 0160 604A     		ldr	r2, .L78+16
 938 0162 1344     		add	r3, r3, r2
 939 0164 0A46     		mov	r2, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 24


 940 0166 1A74     		strb	r2, [r3, #16]
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 941              		.loc 1 333 0 discriminator 3
 942 0168 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 943 016a 0133     		adds	r3, r3, #1
 944 016c FB73     		strb	r3, [r7, #15]
 945              	.L57:
 333:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 946              		.loc 1 333 0 is_stmt 0 discriminator 1
 947 016e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 948 0170 052B     		cmp	r3, #5
 949 0172 ECD9     		bls	.L58
 335:.\Protocolo.c **** 				}			
 336:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 950              		.loc 1 336 0 is_stmt 1
 951 0174 0023     		movs	r3, #0
 952 0176 FB73     		strb	r3, [r7, #15]
 953 0178 0FE0     		b	.L59
 954              	.L60:
 337:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 955              		.loc 1 337 0 discriminator 3
 956 017a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 957 017c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 958 017e 1832     		adds	r2, r2, #24
 959 0180 5549     		ldr	r1, .L78+4
 960 0182 8A5C     		ldrb	r2, [r1, r2]
 961 0184 D2B2     		uxtb	r2, r2
 962 0186 02F00F02 		and	r2, r2, #15
 963 018a D1B2     		uxtb	r1, r2
 964 018c 554A     		ldr	r2, .L78+16
 965 018e 1344     		add	r3, r3, r2
 966 0190 0A46     		mov	r2, r1
 967 0192 DA71     		strb	r2, [r3, #7]
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 968              		.loc 1 336 0 discriminator 3
 969 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 970 0196 0133     		adds	r3, r3, #1
 971 0198 FB73     		strb	r3, [r7, #15]
 972              	.L59:
 336:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 973              		.loc 1 336 0 is_stmt 0 discriminator 1
 974 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 975 019c 052B     		cmp	r3, #5
 976 019e ECD9     		bls	.L60
 977              	.L54:
 338:.\Protocolo.c **** 				}			
 339:.\Protocolo.c **** 			}
 340:.\Protocolo.c **** 			return 1;
 978              		.loc 1 340 0 is_stmt 1
 979 01a0 0123     		movs	r3, #1
 980 01a2 CFE0     		b	.L61
 981              	.L46:
 341:.\Protocolo.c **** 		}
 342:.\Protocolo.c **** 		else{
 343:.\Protocolo.c **** 			return 0;
 982              		.loc 1 343 0
 983 01a4 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 25


 984 01a6 CDE0     		b	.L61
 985              	.L45:
 344:.\Protocolo.c **** 		}
 345:.\Protocolo.c **** 	}
 346:.\Protocolo.c **** 	else if((version[1]==7)&&(Surtidor_GetRxBufferSize()==39)){
 986              		.loc 1 346 0
 987 01a8 4A4B     		ldr	r3, .L78
 988 01aa 5B78     		ldrb	r3, [r3, #1]
 989 01ac DBB2     		uxtb	r3, r3
 990 01ae 072B     		cmp	r3, #7
 991 01b0 40F0C780 		bne	.L62
 992              		.loc 1 346 0 is_stmt 0 discriminator 1
 993 01b4 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 994 01b8 0346     		mov	r3, r0
 995 01ba 272B     		cmp	r3, #39
 996 01bc 40F0C180 		bne	.L62
 347:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[38]==0xF0)){
 997              		.loc 1 347 0 is_stmt 1
 998 01c0 454B     		ldr	r3, .L78+4
 999 01c2 1B78     		ldrb	r3, [r3]
 1000 01c4 DBB2     		uxtb	r3, r3
 1001 01c6 FF2B     		cmp	r3, #255
 1002 01c8 40F0B980 		bne	.L63
 1003              		.loc 1 347 0 is_stmt 0 discriminator 1
 1004 01cc 424B     		ldr	r3, .L78+4
 1005 01ce 9B78     		ldrb	r3, [r3, #2]
 1006 01d0 DBB2     		uxtb	r3, r3
 1007 01d2 F82B     		cmp	r3, #248
 1008 01d4 40F0B380 		bne	.L63
 1009              		.loc 1 347 0 discriminator 2
 1010 01d8 3F4B     		ldr	r3, .L78+4
 1011 01da 93F82630 		ldrb	r3, [r3, #38]
 1012 01de DBB2     		uxtb	r3, r3
 1013 01e0 F02B     		cmp	r3, #240
 1014 01e2 40F0AC80 		bne	.L63
 348:.\Protocolo.c **** 			if(dir==lado1.dir){
 1015              		.loc 1 348 0 is_stmt 1
 1016 01e6 3D4B     		ldr	r3, .L78+8
 1017 01e8 1B78     		ldrb	r3, [r3]
 1018 01ea DBB2     		uxtb	r3, r3
 1019 01ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1020 01ee 9A42     		cmp	r2, r3
 1021 01f0 4CD1     		bne	.L64
 349:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1022              		.loc 1 349 0
 1023 01f2 394B     		ldr	r3, .L78+4
 1024 01f4 5B7A     		ldrb	r3, [r3, #9]
 1025 01f6 DBB2     		uxtb	r3, r3
 1026 01f8 03F00F03 		and	r3, r3, #15
 1027 01fc DBB2     		uxtb	r3, r3
 1028 01fe 0133     		adds	r3, r3, #1
 1029 0200 DAB2     		uxtb	r2, r3
 1030 0202 374B     		ldr	r3, .L78+12
 1031 0204 5A76     		strb	r2, [r3, #25]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1032              		.loc 1 350 0
 1033 0206 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 26


 1034 0208 FB73     		strb	r3, [r7, #15]
 1035 020a 0FE0     		b	.L65
 1036              	.L66:
 351:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1037              		.loc 1 351 0 discriminator 3
 1038 020c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1039 020e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1040 0210 0C32     		adds	r2, r2, #12
 1041 0212 3149     		ldr	r1, .L78+4
 1042 0214 8A5C     		ldrb	r2, [r1, r2]
 1043 0216 D2B2     		uxtb	r2, r2
 1044 0218 02F00F02 		and	r2, r2, #15
 1045 021c D1B2     		uxtb	r1, r2
 1046 021e 304A     		ldr	r2, .L78+12
 1047 0220 1344     		add	r3, r3, r2
 1048 0222 0A46     		mov	r2, r1
 1049 0224 9A70     		strb	r2, [r3, #2]
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1050              		.loc 1 350 0 discriminator 3
 1051 0226 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1052 0228 0133     		adds	r3, r3, #1
 1053 022a FB73     		strb	r3, [r7, #15]
 1054              	.L65:
 350:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1055              		.loc 1 350 0 is_stmt 0 discriminator 1
 1056 022c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1057 022e 052B     		cmp	r3, #5
 1058 0230 ECD9     		bls	.L66
 352:.\Protocolo.c **** 				}
 353:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1059              		.loc 1 353 0 is_stmt 1
 1060 0232 0023     		movs	r3, #0
 1061 0234 FB73     		strb	r3, [r7, #15]
 1062 0236 0FE0     		b	.L67
 1063              	.L68:
 354:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1064              		.loc 1 354 0 discriminator 3
 1065 0238 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1066 023a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1067 023c 1332     		adds	r2, r2, #19
 1068 023e 2649     		ldr	r1, .L78+4
 1069 0240 8A5C     		ldrb	r2, [r1, r2]
 1070 0242 D2B2     		uxtb	r2, r2
 1071 0244 02F00F02 		and	r2, r2, #15
 1072 0248 D1B2     		uxtb	r1, r2
 1073 024a 254A     		ldr	r2, .L78+12
 1074 024c 1344     		add	r3, r3, r2
 1075 024e 0A46     		mov	r2, r1
 1076 0250 1A74     		strb	r2, [r3, #16]
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1077              		.loc 1 353 0 discriminator 3
 1078 0252 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1079 0254 0133     		adds	r3, r3, #1
 1080 0256 FB73     		strb	r3, [r7, #15]
 1081              	.L67:
 353:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1082              		.loc 1 353 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 27


 1083 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1084 025a 072B     		cmp	r3, #7
 1085 025c ECD9     		bls	.L68
 355:.\Protocolo.c **** 				}			
 356:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1086              		.loc 1 356 0 is_stmt 1
 1087 025e 0023     		movs	r3, #0
 1088 0260 FB73     		strb	r3, [r7, #15]
 1089 0262 0FE0     		b	.L69
 1090              	.L70:
 357:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1091              		.loc 1 357 0 discriminator 3
 1092 0264 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1093 0266 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1094 0268 1C32     		adds	r2, r2, #28
 1095 026a 1B49     		ldr	r1, .L78+4
 1096 026c 8A5C     		ldrb	r2, [r1, r2]
 1097 026e D2B2     		uxtb	r2, r2
 1098 0270 02F00F02 		and	r2, r2, #15
 1099 0274 D1B2     		uxtb	r1, r2
 1100 0276 1A4A     		ldr	r2, .L78+12
 1101 0278 1344     		add	r3, r3, r2
 1102 027a 0A46     		mov	r2, r1
 1103 027c DA71     		strb	r2, [r3, #7]
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1104              		.loc 1 356 0 discriminator 3
 1105 027e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1106 0280 0133     		adds	r3, r3, #1
 1107 0282 FB73     		strb	r3, [r7, #15]
 1108              	.L69:
 356:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1109              		.loc 1 356 0 is_stmt 0 discriminator 1
 1110 0284 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1111 0286 072B     		cmp	r3, #7
 1112 0288 ECD9     		bls	.L70
 1113 028a 56E0     		b	.L71
 1114              	.L64:
 358:.\Protocolo.c **** 				}
 359:.\Protocolo.c **** 			}
 360:.\Protocolo.c **** 			else{
 361:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1115              		.loc 1 361 0 is_stmt 1
 1116 028c 124B     		ldr	r3, .L78+4
 1117 028e 5B7A     		ldrb	r3, [r3, #9]
 1118 0290 DBB2     		uxtb	r3, r3
 1119 0292 03F00F03 		and	r3, r3, #15
 1120 0296 DBB2     		uxtb	r3, r3
 1121 0298 0133     		adds	r3, r3, #1
 1122 029a DAB2     		uxtb	r2, r3
 1123 029c 114B     		ldr	r3, .L78+16
 1124 029e 5A76     		strb	r2, [r3, #25]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1125              		.loc 1 362 0
 1126 02a0 0023     		movs	r3, #0
 1127 02a2 FB73     		strb	r3, [r7, #15]
 1128 02a4 0FE0     		b	.L72
 1129              	.L73:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 28


 363:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1130              		.loc 1 363 0 discriminator 3
 1131 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1132 02a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1133 02aa 0C32     		adds	r2, r2, #12
 1134 02ac 0A49     		ldr	r1, .L78+4
 1135 02ae 8A5C     		ldrb	r2, [r1, r2]
 1136 02b0 D2B2     		uxtb	r2, r2
 1137 02b2 02F00F02 		and	r2, r2, #15
 1138 02b6 D1B2     		uxtb	r1, r2
 1139 02b8 0A4A     		ldr	r2, .L78+16
 1140 02ba 1344     		add	r3, r3, r2
 1141 02bc 0A46     		mov	r2, r1
 1142 02be 9A70     		strb	r2, [r3, #2]
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1143              		.loc 1 362 0 discriminator 3
 1144 02c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1145 02c2 0133     		adds	r3, r3, #1
 1146 02c4 FB73     		strb	r3, [r7, #15]
 1147              	.L72:
 362:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1148              		.loc 1 362 0 is_stmt 0 discriminator 1
 1149 02c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1150 02c8 052B     		cmp	r3, #5
 1151 02ca ECD9     		bls	.L73
 364:.\Protocolo.c **** 				}
 365:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1152              		.loc 1 365 0 is_stmt 1
 1153 02cc 0023     		movs	r3, #0
 1154 02ce FB73     		strb	r3, [r7, #15]
 1155 02d0 1AE0     		b	.L74
 1156              	.L79:
 1157 02d2 00BF     		.align	2
 1158              	.L78:
 1159 02d4 00000000 		.word	version
 1160 02d8 00000000 		.word	Surtidor_rxBuffer
 1161 02dc 00000000 		.word	lado1
 1162 02e0 00000000 		.word	rventa1
 1163 02e4 00000000 		.word	rventa2
 1164              	.L75:
 366:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1165              		.loc 1 366 0 discriminator 3
 1166 02e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1167 02ea FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1168 02ec 1332     		adds	r2, r2, #19
 1169 02ee 1749     		ldr	r1, .L80
 1170 02f0 8A5C     		ldrb	r2, [r1, r2]
 1171 02f2 D2B2     		uxtb	r2, r2
 1172 02f4 02F00F02 		and	r2, r2, #15
 1173 02f8 D1B2     		uxtb	r1, r2
 1174 02fa 154A     		ldr	r2, .L80+4
 1175 02fc 1344     		add	r3, r3, r2
 1176 02fe 0A46     		mov	r2, r1
 1177 0300 1A74     		strb	r2, [r3, #16]
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1178              		.loc 1 365 0 discriminator 3
 1179 0302 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 29


 1180 0304 0133     		adds	r3, r3, #1
 1181 0306 FB73     		strb	r3, [r7, #15]
 1182              	.L74:
 365:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1183              		.loc 1 365 0 is_stmt 0 discriminator 1
 1184 0308 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1185 030a 072B     		cmp	r3, #7
 1186 030c ECD9     		bls	.L75
 367:.\Protocolo.c **** 				}			
 368:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1187              		.loc 1 368 0 is_stmt 1
 1188 030e 0023     		movs	r3, #0
 1189 0310 FB73     		strb	r3, [r7, #15]
 1190 0312 0FE0     		b	.L76
 1191              	.L77:
 369:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1192              		.loc 1 369 0 discriminator 3
 1193 0314 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1194 0316 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1195 0318 1C32     		adds	r2, r2, #28
 1196 031a 0C49     		ldr	r1, .L80
 1197 031c 8A5C     		ldrb	r2, [r1, r2]
 1198 031e D2B2     		uxtb	r2, r2
 1199 0320 02F00F02 		and	r2, r2, #15
 1200 0324 D1B2     		uxtb	r1, r2
 1201 0326 0A4A     		ldr	r2, .L80+4
 1202 0328 1344     		add	r3, r3, r2
 1203 032a 0A46     		mov	r2, r1
 1204 032c DA71     		strb	r2, [r3, #7]
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1205              		.loc 1 368 0 discriminator 3
 1206 032e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1207 0330 0133     		adds	r3, r3, #1
 1208 0332 FB73     		strb	r3, [r7, #15]
 1209              	.L76:
 368:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1210              		.loc 1 368 0 is_stmt 0 discriminator 1
 1211 0334 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1212 0336 072B     		cmp	r3, #7
 1213 0338 ECD9     		bls	.L77
 1214              	.L71:
 370:.\Protocolo.c **** 				}			
 371:.\Protocolo.c **** 			}
 372:.\Protocolo.c **** 			return 1;
 1215              		.loc 1 372 0 is_stmt 1
 1216 033a 0123     		movs	r3, #1
 1217 033c 02E0     		b	.L61
 1218              	.L63:
 373:.\Protocolo.c **** 		}
 374:.\Protocolo.c **** 		else{
 375:.\Protocolo.c **** 			return 0;
 1219              		.loc 1 375 0
 1220 033e 0023     		movs	r3, #0
 1221 0340 00E0     		b	.L61
 1222              	.L62:
 376:.\Protocolo.c **** 		}
 377:.\Protocolo.c **** 	}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 30


 378:.\Protocolo.c **** 	return 0;
 1223              		.loc 1 378 0
 1224 0342 0023     		movs	r3, #0
 1225              	.L61:
 379:.\Protocolo.c **** }
 1226              		.loc 1 379 0
 1227 0344 1846     		mov	r0, r3
 1228 0346 1037     		adds	r7, r7, #16
 1229              		.cfi_def_cfa_offset 8
 1230 0348 BD46     		mov	sp, r7
 1231              		.cfi_def_cfa_register 13
 1232              		@ sp needed
 1233 034a 80BD     		pop	{r7, pc}
 1234              	.L81:
 1235              		.align	2
 1236              	.L80:
 1237 034c 00000000 		.word	Surtidor_rxBuffer
 1238 0350 00000000 		.word	rventa2
 1239              		.cfi_endproc
 1240              	.LFE69:
 1241              		.size	venta, .-venta
 1242              		.section	.text.programar,"ax",%progbits
 1243              		.align	2
 1244              		.global	programar
 1245              		.thumb
 1246              		.thumb_func
 1247              		.type	programar, %function
 1248              	programar:
 1249              	.LFB70:
 380:.\Protocolo.c **** 
 381:.\Protocolo.c **** /*
 382:.\Protocolo.c **** ***************************************************************************************************
 383:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 384:.\Protocolo.c **** *
 385:.\Protocolo.c **** * Description : 
 386:.\Protocolo.c **** *               
 387:.\Protocolo.c **** *
 388:.\Protocolo.c **** * Argument(s) : none
 389:.\Protocolo.c **** *
 390:.\Protocolo.c **** * Return(s)   : none
 391:.\Protocolo.c **** *
 392:.\Protocolo.c **** * Caller(s)   : 
 393:.\Protocolo.c **** *
 394:.\Protocolo.c **** * Note(s)     : none.
 395:.\Protocolo.c **** ***************************************************************************************************
 396:.\Protocolo.c **** */
 397:.\Protocolo.c **** uint8 programar(uint8 dir, uint8 grado, uint8 *valor, uint8 preset){
 1250              		.loc 1 397 0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 32
 1253              		@ frame_needed = 1, uses_anonymous_args = 0
 1254 0000 80B5     		push	{r7, lr}
 1255              		.cfi_def_cfa_offset 8
 1256              		.cfi_offset 7, -8
 1257              		.cfi_offset 14, -4
 1258 0002 88B0     		sub	sp, sp, #32
 1259              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 31


 1260 0004 00AF     		add	r7, sp, #0
 1261              		.cfi_def_cfa_register 7
 1262 0006 3A60     		str	r2, [r7]
 1263 0008 1A46     		mov	r2, r3
 1264 000a 0346     		mov	r3, r0
 1265 000c FB71     		strb	r3, [r7, #7]
 1266 000e 0B46     		mov	r3, r1
 1267 0010 BB71     		strb	r3, [r7, #6]
 1268 0012 1346     		mov	r3, r2
 1269 0014 7B71     		strb	r3, [r7, #5]
 398:.\Protocolo.c **** 	uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,temp,i,decimal;
 1270              		.loc 1 398 0
 1271 0016 07F10803 		add	r3, r7, #8
 1272 001a 0022     		movs	r2, #0
 1273 001c 1A60     		str	r2, [r3]
 1274 001e 0433     		adds	r3, r3, #4
 1275 0020 0022     		movs	r2, #0
 1276 0022 1A60     		str	r2, [r3]
 1277 0024 0433     		adds	r3, r3, #4
 1278 0026 0022     		movs	r2, #0
 1279 0028 1A60     		str	r2, [r3]
 1280 002a 0433     		adds	r3, r3, #4
 1281 002c 0022     		movs	r2, #0
 1282 002e 1A60     		str	r2, [r3]
 1283 0030 0433     		adds	r3, r3, #4
 1284 0032 0022     		movs	r2, #0
 1285 0034 1A80     		strh	r2, [r3]	@ movhi
 1286 0036 0233     		adds	r3, r3, #2
 399:.\Protocolo.c **** 	temp=4;
 1287              		.loc 1 399 0
 1288 0038 0423     		movs	r3, #4
 1289 003a BB77     		strb	r3, [r7, #30]
 400:.\Protocolo.c **** 	if(preset==3){
 1290              		.loc 1 400 0
 1291 003c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1292 003e 032B     		cmp	r3, #3
 1293 0040 01D1     		bne	.L83
 401:.\Protocolo.c **** 		preset=2;
 1294              		.loc 1 401 0
 1295 0042 0223     		movs	r3, #2
 1296 0044 7B71     		strb	r3, [r7, #5]
 1297              	.L83:
 402:.\Protocolo.c **** 	}
 403:.\Protocolo.c **** 	if(((version[1]==5)||(version[1]==6))&&(preset==1)){
 1298              		.loc 1 403 0
 1299 0046 B34B     		ldr	r3, .L126
 1300 0048 5B78     		ldrb	r3, [r3, #1]
 1301 004a DBB2     		uxtb	r3, r3
 1302 004c 052B     		cmp	r3, #5
 1303 004e 04D0     		beq	.L84
 1304              		.loc 1 403 0 is_stmt 0 discriminator 2
 1305 0050 B04B     		ldr	r3, .L126
 1306 0052 5B78     		ldrb	r3, [r3, #1]
 1307 0054 DBB2     		uxtb	r3, r3
 1308 0056 062B     		cmp	r3, #6
 1309 0058 04D1     		bne	.L85
 1310              	.L84:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 32


 1311              		.loc 1 403 0 discriminator 3
 1312 005a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1313 005c 012B     		cmp	r3, #1
 1314 005e 01D1     		bne	.L85
 404:.\Protocolo.c **** 		temp=3;
 1315              		.loc 1 404 0 is_stmt 1
 1316 0060 0323     		movs	r3, #3
 1317 0062 BB77     		strb	r3, [r7, #30]
 1318              	.L85:
 405:.\Protocolo.c **** 	}
 406:.\Protocolo.c **** 	if((version[1]==5)&&(preset==2)){
 1319              		.loc 1 406 0
 1320 0064 AB4B     		ldr	r3, .L126
 1321 0066 5B78     		ldrb	r3, [r3, #1]
 1322 0068 DBB2     		uxtb	r3, r3
 1323 006a 052B     		cmp	r3, #5
 1324 006c 04D1     		bne	.L86
 1325              		.loc 1 406 0 is_stmt 0 discriminator 1
 1326 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1327 0070 022B     		cmp	r3, #2
 1328 0072 01D1     		bne	.L86
 407:.\Protocolo.c **** 		temp=5;
 1329              		.loc 1 407 0 is_stmt 1
 1330 0074 0523     		movs	r3, #5
 1331 0076 BB77     		strb	r3, [r7, #30]
 1332              	.L86:
 408:.\Protocolo.c **** 	}
 409:.\Protocolo.c **** 	if((version[1]==7)&&(preset==1)){
 1333              		.loc 1 409 0
 1334 0078 A64B     		ldr	r3, .L126
 1335 007a 5B78     		ldrb	r3, [r3, #1]
 1336 007c DBB2     		uxtb	r3, r3
 1337 007e 072B     		cmp	r3, #7
 1338 0080 04D1     		bne	.L87
 1339              		.loc 1 409 0 is_stmt 0 discriminator 1
 1340 0082 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1341 0084 012B     		cmp	r3, #1
 1342 0086 01D1     		bne	.L87
 410:.\Protocolo.c **** 		temp=0;
 1343              		.loc 1 410 0 is_stmt 1
 1344 0088 0023     		movs	r3, #0
 1345 008a BB77     		strb	r3, [r7, #30]
 1346              	.L87:
 411:.\Protocolo.c **** 	}
 412:.\Protocolo.c **** 	if((version[1]==7)&&(preset==2)){
 1347              		.loc 1 412 0
 1348 008c A14B     		ldr	r3, .L126
 1349 008e 5B78     		ldrb	r3, [r3, #1]
 1350 0090 DBB2     		uxtb	r3, r3
 1351 0092 072B     		cmp	r3, #7
 1352 0094 04D1     		bne	.L88
 1353              		.loc 1 412 0 is_stmt 0 discriminator 1
 1354 0096 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1355 0098 022B     		cmp	r3, #2
 1356 009a 01D1     		bne	.L88
 413:.\Protocolo.c **** 		temp=2;
 1357              		.loc 1 413 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 33


 1358 009c 0223     		movs	r3, #2
 1359 009e BB77     		strb	r3, [r7, #30]
 1360              	.L88:
 414:.\Protocolo.c **** 	}	
 415:.\Protocolo.c **** 	decimal=0;
 1361              		.loc 1 415 0
 1362 00a0 0023     		movs	r3, #0
 1363 00a2 3B77     		strb	r3, [r7, #28]
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1364              		.loc 1 416 0
 1365 00a4 0123     		movs	r3, #1
 1366 00a6 7B77     		strb	r3, [r7, #29]
 1367 00a8 0AE0     		b	.L89
 1368              	.L91:
 417:.\Protocolo.c **** 		if(valor[i]==','){
 1369              		.loc 1 417 0
 1370 00aa 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1371 00ac 3A68     		ldr	r2, [r7]
 1372 00ae 1344     		add	r3, r3, r2
 1373 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1374 00b2 2C2B     		cmp	r3, #44
 1375 00b4 01D1     		bne	.L90
 418:.\Protocolo.c **** 			decimal=i;	
 1376              		.loc 1 418 0
 1377 00b6 7B7F     		ldrb	r3, [r7, #29]
 1378 00b8 3B77     		strb	r3, [r7, #28]
 1379              	.L90:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1380              		.loc 1 416 0 discriminator 2
 1381 00ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1382 00bc 0133     		adds	r3, r3, #1
 1383 00be 7B77     		strb	r3, [r7, #29]
 1384              	.L89:
 416:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1385              		.loc 1 416 0 is_stmt 0 discriminator 1
 1386 00c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1387 00c2 072B     		cmp	r3, #7
 1388 00c4 F1D9     		bls	.L91
 419:.\Protocolo.c **** 		}
 420:.\Protocolo.c **** 	}
 421:.\Protocolo.c **** 	if(decimal>4){
 1389              		.loc 1 421 0 is_stmt 1
 1390 00c6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1391 00c8 042B     		cmp	r3, #4
 1392 00ca 01D9     		bls	.L92
 422:.\Protocolo.c **** 		return 0;
 1393              		.loc 1 422 0
 1394 00cc 0023     		movs	r3, #0
 1395 00ce CFE3     		b	.L125
 1396              	.L92:
 423:.\Protocolo.c **** 	}
 424:.\Protocolo.c **** 	if(version[1]!=7){		
 1397              		.loc 1 424 0
 1398 00d0 904B     		ldr	r3, .L126
 1399 00d2 5B78     		ldrb	r3, [r3, #1]
 1400 00d4 DBB2     		uxtb	r3, r3
 1401 00d6 072B     		cmp	r3, #7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 34


 1402 00d8 00F00582 		beq	.L94
 425:.\Protocolo.c **** 		buffer[0]=0xFF;
 1403              		.loc 1 425 0
 1404 00dc FF23     		movs	r3, #255
 1405 00de 3B72     		strb	r3, [r7, #8]
 426:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1406              		.loc 1 426 0
 1407 00e0 BB7F     		ldrb	r3, [r7, #30]
 1408 00e2 63F01F03 		orn	r3, r3, #31
 1409 00e6 DBB2     		uxtb	r3, r3
 1410 00e8 7B72     		strb	r3, [r7, #9]
 427:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1411              		.loc 1 427 0
 1412 00ea 7B79     		ldrb	r3, [r7, #5]
 1413 00ec 63F00F03 		orn	r3, r3, #15
 1414 00f0 DBB2     		uxtb	r3, r3
 1415 00f2 BB72     		strb	r3, [r7, #10]
 428:.\Protocolo.c **** 		buffer[3]=0xF4;
 1416              		.loc 1 428 0
 1417 00f4 F423     		movs	r3, #244
 1418 00f6 FB72     		strb	r3, [r7, #11]
 429:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1419              		.loc 1 429 0
 1420 00f8 F823     		movs	r3, #248
 1421 00fa 3B73     		strb	r3, [r7, #12]
 430:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1422              		.loc 1 430 0
 1423 00fc 3B68     		ldr	r3, [r7]
 1424 00fe 0133     		adds	r3, r3, #1
 1425 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1426 0102 63F01F03 		orn	r3, r3, #31
 1427 0106 DBB2     		uxtb	r3, r3
 1428 0108 7B73     		strb	r3, [r7, #13]
 431:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1429              		.loc 1 431 0
 1430 010a 3B68     		ldr	r3, [r7]
 1431 010c 0233     		adds	r3, r3, #2
 1432 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1433 0110 63F01F03 		orn	r3, r3, #31
 1434 0114 DBB2     		uxtb	r3, r3
 1435 0116 BB73     		strb	r3, [r7, #14]
 432:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1436              		.loc 1 432 0
 1437 0118 3B68     		ldr	r3, [r7]
 1438 011a 0333     		adds	r3, r3, #3
 1439 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1440 011e 63F01F03 		orn	r3, r3, #31
 1441 0122 DBB2     		uxtb	r3, r3
 1442 0124 FB73     		strb	r3, [r7, #15]
 433:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1443              		.loc 1 433 0
 1444 0126 3B68     		ldr	r3, [r7]
 1445 0128 0433     		adds	r3, r3, #4
 1446 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 012c 63F01F03 		orn	r3, r3, #31
 1448 0130 DBB2     		uxtb	r3, r3
 1449 0132 3B74     		strb	r3, [r7, #16]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 35


 434:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1450              		.loc 1 434 0
 1451 0134 3B68     		ldr	r3, [r7]
 1452 0136 0533     		adds	r3, r3, #5
 1453 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1454 013a 63F01F03 		orn	r3, r3, #31
 1455 013e DBB2     		uxtb	r3, r3
 1456 0140 7B74     		strb	r3, [r7, #17]
 435:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);
 1457              		.loc 1 435 0
 1458 0142 3B68     		ldr	r3, [r7]
 1459 0144 0633     		adds	r3, r3, #6
 1460 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1461 0148 63F01F03 		orn	r3, r3, #31
 1462 014c DBB2     		uxtb	r3, r3
 1463 014e BB74     		strb	r3, [r7, #18]
 436:.\Protocolo.c **** 		if(version[2]==2){
 1464              		.loc 1 436 0
 1465 0150 704B     		ldr	r3, .L126
 1466 0152 9B78     		ldrb	r3, [r3, #2]
 1467 0154 DBB2     		uxtb	r3, r3
 1468 0156 022B     		cmp	r3, #2
 1469 0158 40F0A580 		bne	.L95
 437:.\Protocolo.c **** 			if(decimal==4){
 1470              		.loc 1 437 0
 1471 015c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1472 015e 042B     		cmp	r3, #4
 1473 0160 29D1     		bne	.L96
 438:.\Protocolo.c **** 				buffer[5]=(valor[2]|0xE0);
 1474              		.loc 1 438 0
 1475 0162 3B68     		ldr	r3, [r7]
 1476 0164 0233     		adds	r3, r3, #2
 1477 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1478 0168 63F01F03 		orn	r3, r3, #31
 1479 016c DBB2     		uxtb	r3, r3
 1480 016e 7B73     		strb	r3, [r7, #13]
 439:.\Protocolo.c **** 				buffer[6]=(valor[3]|0xE0);
 1481              		.loc 1 439 0
 1482 0170 3B68     		ldr	r3, [r7]
 1483 0172 0333     		adds	r3, r3, #3
 1484 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1485 0176 63F01F03 		orn	r3, r3, #31
 1486 017a DBB2     		uxtb	r3, r3
 1487 017c BB73     		strb	r3, [r7, #14]
 440:.\Protocolo.c **** 				buffer[7]=(valor[5]|0xE0);
 1488              		.loc 1 440 0
 1489 017e 3B68     		ldr	r3, [r7]
 1490 0180 0533     		adds	r3, r3, #5
 1491 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1492 0184 63F01F03 		orn	r3, r3, #31
 1493 0188 DBB2     		uxtb	r3, r3
 1494 018a FB73     		strb	r3, [r7, #15]
 441:.\Protocolo.c **** 				buffer[8]=(valor[6]|0xE0);
 1495              		.loc 1 441 0
 1496 018c 3B68     		ldr	r3, [r7]
 1497 018e 0633     		adds	r3, r3, #6
 1498 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 36


 1499 0192 63F01F03 		orn	r3, r3, #31
 1500 0196 DBB2     		uxtb	r3, r3
 1501 0198 3B74     		strb	r3, [r7, #16]
 442:.\Protocolo.c **** 				buffer[9]=(valor[7]|0xE0);
 1502              		.loc 1 442 0
 1503 019a 3B68     		ldr	r3, [r7]
 1504 019c 0733     		adds	r3, r3, #7
 1505 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1506 01a0 63F01F03 		orn	r3, r3, #31
 1507 01a4 DBB2     		uxtb	r3, r3
 1508 01a6 7B74     		strb	r3, [r7, #17]
 443:.\Protocolo.c **** 				buffer[10]=(valor[8]|0xE0);
 1509              		.loc 1 443 0
 1510 01a8 3B68     		ldr	r3, [r7]
 1511 01aa 0833     		adds	r3, r3, #8
 1512 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 01ae 63F01F03 		orn	r3, r3, #31
 1514 01b2 DBB2     		uxtb	r3, r3
 1515 01b4 BB74     		strb	r3, [r7, #18]
 1516              	.L96:
 444:.\Protocolo.c **** 			}
 445:.\Protocolo.c **** 			if(decimal==3){
 1517              		.loc 1 445 0
 1518 01b6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1519 01b8 032B     		cmp	r3, #3
 1520 01ba 29D1     		bne	.L97
 446:.\Protocolo.c **** 				buffer[5]=(valor[1]|0xE0);
 1521              		.loc 1 446 0
 1522 01bc 3B68     		ldr	r3, [r7]
 1523 01be 0133     		adds	r3, r3, #1
 1524 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1525 01c2 63F01F03 		orn	r3, r3, #31
 1526 01c6 DBB2     		uxtb	r3, r3
 1527 01c8 7B73     		strb	r3, [r7, #13]
 447:.\Protocolo.c **** 				buffer[6]=(valor[2]|0xE0);
 1528              		.loc 1 447 0
 1529 01ca 3B68     		ldr	r3, [r7]
 1530 01cc 0233     		adds	r3, r3, #2
 1531 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1532 01d0 63F01F03 		orn	r3, r3, #31
 1533 01d4 DBB2     		uxtb	r3, r3
 1534 01d6 BB73     		strb	r3, [r7, #14]
 448:.\Protocolo.c **** 				buffer[7]=(valor[4]|0xE0);
 1535              		.loc 1 448 0
 1536 01d8 3B68     		ldr	r3, [r7]
 1537 01da 0433     		adds	r3, r3, #4
 1538 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1539 01de 63F01F03 		orn	r3, r3, #31
 1540 01e2 DBB2     		uxtb	r3, r3
 1541 01e4 FB73     		strb	r3, [r7, #15]
 449:.\Protocolo.c **** 				buffer[8]=(valor[5]|0xE0);
 1542              		.loc 1 449 0
 1543 01e6 3B68     		ldr	r3, [r7]
 1544 01e8 0533     		adds	r3, r3, #5
 1545 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1546 01ec 63F01F03 		orn	r3, r3, #31
 1547 01f0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 37


 1548 01f2 3B74     		strb	r3, [r7, #16]
 450:.\Protocolo.c **** 				buffer[9]=(valor[6]|0xE0);
 1549              		.loc 1 450 0
 1550 01f4 3B68     		ldr	r3, [r7]
 1551 01f6 0633     		adds	r3, r3, #6
 1552 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1553 01fa 63F01F03 		orn	r3, r3, #31
 1554 01fe DBB2     		uxtb	r3, r3
 1555 0200 7B74     		strb	r3, [r7, #17]
 451:.\Protocolo.c **** 				buffer[10]=(valor[7]|0xE0);
 1556              		.loc 1 451 0
 1557 0202 3B68     		ldr	r3, [r7]
 1558 0204 0733     		adds	r3, r3, #7
 1559 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1560 0208 63F01F03 		orn	r3, r3, #31
 1561 020c DBB2     		uxtb	r3, r3
 1562 020e BB74     		strb	r3, [r7, #18]
 1563              	.L97:
 452:.\Protocolo.c **** 			}
 453:.\Protocolo.c **** 			if(decimal==2){
 1564              		.loc 1 453 0
 1565 0210 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1566 0212 022B     		cmp	r3, #2
 1567 0214 24D1     		bne	.L98
 454:.\Protocolo.c **** 				buffer[5]=0xE0;
 1568              		.loc 1 454 0
 1569 0216 E023     		movs	r3, #224
 1570 0218 7B73     		strb	r3, [r7, #13]
 455:.\Protocolo.c **** 				buffer[6]=(valor[1]|0xE0);
 1571              		.loc 1 455 0
 1572 021a 3B68     		ldr	r3, [r7]
 1573 021c 0133     		adds	r3, r3, #1
 1574 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1575 0220 63F01F03 		orn	r3, r3, #31
 1576 0224 DBB2     		uxtb	r3, r3
 1577 0226 BB73     		strb	r3, [r7, #14]
 456:.\Protocolo.c **** 				buffer[7]=(valor[3]|0xE0);
 1578              		.loc 1 456 0
 1579 0228 3B68     		ldr	r3, [r7]
 1580 022a 0333     		adds	r3, r3, #3
 1581 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1582 022e 63F01F03 		orn	r3, r3, #31
 1583 0232 DBB2     		uxtb	r3, r3
 1584 0234 FB73     		strb	r3, [r7, #15]
 457:.\Protocolo.c **** 				buffer[8]=(valor[4]|0xE0);
 1585              		.loc 1 457 0
 1586 0236 3B68     		ldr	r3, [r7]
 1587 0238 0433     		adds	r3, r3, #4
 1588 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1589 023c 63F01F03 		orn	r3, r3, #31
 1590 0240 DBB2     		uxtb	r3, r3
 1591 0242 3B74     		strb	r3, [r7, #16]
 458:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);	
 1592              		.loc 1 458 0
 1593 0244 3B68     		ldr	r3, [r7]
 1594 0246 0533     		adds	r3, r3, #5
 1595 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 38


 1596 024a 63F01F03 		orn	r3, r3, #31
 1597 024e DBB2     		uxtb	r3, r3
 1598 0250 7B74     		strb	r3, [r7, #17]
 459:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1599              		.loc 1 459 0
 1600 0252 3B68     		ldr	r3, [r7]
 1601 0254 0633     		adds	r3, r3, #6
 1602 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1603 0258 63F01F03 		orn	r3, r3, #31
 1604 025c DBB2     		uxtb	r3, r3
 1605 025e BB74     		strb	r3, [r7, #18]
 1606              	.L98:
 460:.\Protocolo.c **** 			}
 461:.\Protocolo.c **** 			if(decimal==0){
 1607              		.loc 1 461 0
 1608 0260 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1609 0262 002B     		cmp	r3, #0
 1610 0264 1FD1     		bne	.L95
 462:.\Protocolo.c **** 				buffer[5]=0xE0;
 1611              		.loc 1 462 0
 1612 0266 E023     		movs	r3, #224
 1613 0268 7B73     		strb	r3, [r7, #13]
 463:.\Protocolo.c **** 				buffer[6]=0xE0;
 1614              		.loc 1 463 0
 1615 026a E023     		movs	r3, #224
 1616 026c BB73     		strb	r3, [r7, #14]
 464:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1617              		.loc 1 464 0
 1618 026e 3B68     		ldr	r3, [r7]
 1619 0270 0133     		adds	r3, r3, #1
 1620 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1621 0274 63F01F03 		orn	r3, r3, #31
 1622 0278 DBB2     		uxtb	r3, r3
 1623 027a FB73     		strb	r3, [r7, #15]
 465:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1624              		.loc 1 465 0
 1625 027c 3B68     		ldr	r3, [r7]
 1626 027e 0233     		adds	r3, r3, #2
 1627 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1628 0282 63F01F03 		orn	r3, r3, #31
 1629 0286 DBB2     		uxtb	r3, r3
 1630 0288 3B74     		strb	r3, [r7, #16]
 466:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1631              		.loc 1 466 0
 1632 028a 3B68     		ldr	r3, [r7]
 1633 028c 0333     		adds	r3, r3, #3
 1634 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1635 0290 63F01F03 		orn	r3, r3, #31
 1636 0294 DBB2     		uxtb	r3, r3
 1637 0296 7B74     		strb	r3, [r7, #17]
 467:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1638              		.loc 1 467 0
 1639 0298 3B68     		ldr	r3, [r7]
 1640 029a 0433     		adds	r3, r3, #4
 1641 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1642 029e 63F01F03 		orn	r3, r3, #31
 1643 02a2 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 39


 1644 02a4 BB74     		strb	r3, [r7, #18]
 1645              	.L95:
 468:.\Protocolo.c **** 			}			
 469:.\Protocolo.c **** 		}
 470:.\Protocolo.c **** 		buffer[11]=0xFB;
 1646              		.loc 1 470 0
 1647 02a6 FB23     		movs	r3, #251
 1648 02a8 FB74     		strb	r3, [r7, #19]
 471:.\Protocolo.c **** 		buffer[12]=0;
 1649              		.loc 1 471 0
 1650 02aa 0023     		movs	r3, #0
 1651 02ac 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1652              		.loc 1 472 0
 1653 02ae 0023     		movs	r3, #0
 1654 02b0 7B77     		strb	r3, [r7, #29]
 1655 02b2 0FE0     		b	.L99
 1656              	.L100:
 473:.\Protocolo.c **** 			buffer[12]+=(buffer[i]&0x0F);	
 1657              		.loc 1 473 0 discriminator 3
 1658 02b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1659 02b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1660 02b8 07F12001 		add	r1, r7, #32
 1661 02bc 0B44     		add	r3, r3, r1
 1662 02be 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1663 02c2 03F00F03 		and	r3, r3, #15
 1664 02c6 DBB2     		uxtb	r3, r3
 1665 02c8 1344     		add	r3, r3, r2
 1666 02ca DBB2     		uxtb	r3, r3
 1667 02cc 3B75     		strb	r3, [r7, #20]
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1668              		.loc 1 472 0 discriminator 3
 1669 02ce 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1670 02d0 0133     		adds	r3, r3, #1
 1671 02d2 7B77     		strb	r3, [r7, #29]
 1672              	.L99:
 472:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 1673              		.loc 1 472 0 is_stmt 0 discriminator 1
 1674 02d4 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1675 02d6 0B2B     		cmp	r3, #11
 1676 02d8 ECD9     		bls	.L100
 474:.\Protocolo.c **** 		}
 475:.\Protocolo.c **** 		buffer[12]=(((~buffer[12])+1)&0x0F)|0xE0;
 1677              		.loc 1 475 0 is_stmt 1
 1678 02da 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1679 02dc 5B42     		negs	r3, r3
 1680 02de DBB2     		uxtb	r3, r3
 1681 02e0 DBB2     		uxtb	r3, r3
 1682 02e2 03F00F03 		and	r3, r3, #15
 1683 02e6 DBB2     		uxtb	r3, r3
 1684 02e8 63F01F03 		orn	r3, r3, #31
 1685 02ec DBB2     		uxtb	r3, r3
 1686 02ee DBB2     		uxtb	r3, r3
 1687 02f0 3B75     		strb	r3, [r7, #20]
 476:.\Protocolo.c **** 		buffer[13]=0xF0;
 1688              		.loc 1 476 0
 1689 02f2 F023     		movs	r3, #240
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 40


 1690 02f4 7B75     		strb	r3, [r7, #21]
 477:.\Protocolo.c **** 		size=13;
 1691              		.loc 1 477 0
 1692 02f6 0D23     		movs	r3, #13
 1693 02f8 FB77     		strb	r3, [r7, #31]
 478:.\Protocolo.c **** 		if(version[1]==5){
 1694              		.loc 1 478 0
 1695 02fa 064B     		ldr	r3, .L126
 1696 02fc 5B78     		ldrb	r3, [r3, #1]
 1697 02fe DBB2     		uxtb	r3, r3
 1698 0300 052B     		cmp	r3, #5
 1699 0302 2CD1     		bne	.L101
 479:.\Protocolo.c **** 			buffer[10]=0xFB;
 1700              		.loc 1 479 0
 1701 0304 FB23     		movs	r3, #251
 1702 0306 BB74     		strb	r3, [r7, #18]
 480:.\Protocolo.c **** 			buffer[11]=0;
 1703              		.loc 1 480 0
 1704 0308 0023     		movs	r3, #0
 1705 030a FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1706              		.loc 1 481 0
 1707 030c 0023     		movs	r3, #0
 1708 030e 7B77     		strb	r3, [r7, #29]
 1709 0310 12E0     		b	.L102
 1710              	.L127:
 1711 0312 00BF     		.align	2
 1712              	.L126:
 1713 0314 00000000 		.word	version
 1714              	.L103:
 482:.\Protocolo.c **** 				buffer[11]+=(buffer[i]&0x0F);	
 1715              		.loc 1 482 0 discriminator 3
 1716 0318 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 1717 031a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1718 031c 07F12001 		add	r1, r7, #32
 1719 0320 0B44     		add	r3, r3, r1
 1720 0322 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1721 0326 03F00F03 		and	r3, r3, #15
 1722 032a DBB2     		uxtb	r3, r3
 1723 032c 1344     		add	r3, r3, r2
 1724 032e DBB2     		uxtb	r3, r3
 1725 0330 FB74     		strb	r3, [r7, #19]
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1726              		.loc 1 481 0 discriminator 3
 1727 0332 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1728 0334 0133     		adds	r3, r3, #1
 1729 0336 7B77     		strb	r3, [r7, #29]
 1730              	.L102:
 481:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 1731              		.loc 1 481 0 is_stmt 0 discriminator 1
 1732 0338 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1733 033a 0A2B     		cmp	r3, #10
 1734 033c ECD9     		bls	.L103
 483:.\Protocolo.c **** 			}
 484:.\Protocolo.c **** 			buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 1735              		.loc 1 484 0 is_stmt 1
 1736 033e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 41


 1737 0340 5B42     		negs	r3, r3
 1738 0342 DBB2     		uxtb	r3, r3
 1739 0344 DBB2     		uxtb	r3, r3
 1740 0346 03F00F03 		and	r3, r3, #15
 1741 034a DBB2     		uxtb	r3, r3
 1742 034c 63F01F03 		orn	r3, r3, #31
 1743 0350 DBB2     		uxtb	r3, r3
 1744 0352 DBB2     		uxtb	r3, r3
 1745 0354 FB74     		strb	r3, [r7, #19]
 485:.\Protocolo.c **** 			buffer[12]=0xF0;
 1746              		.loc 1 485 0
 1747 0356 F023     		movs	r3, #240
 1748 0358 3B75     		strb	r3, [r7, #20]
 486:.\Protocolo.c **** 			size=12;		
 1749              		.loc 1 486 0
 1750 035a 0C23     		movs	r3, #12
 1751 035c FB77     		strb	r3, [r7, #31]
 1752              	.L101:
 487:.\Protocolo.c **** 		}
 488:.\Protocolo.c **** 		if(preset==1){
 1753              		.loc 1 488 0
 1754 035e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1755 0360 012B     		cmp	r3, #1
 1756 0362 40F0C080 		bne	.L94
 489:.\Protocolo.c **** 			buffer[4]=0xF6;
 1757              		.loc 1 489 0
 1758 0366 F623     		movs	r3, #246
 1759 0368 3B73     		strb	r3, [r7, #12]
 490:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 1760              		.loc 1 490 0
 1761 036a BB79     		ldrb	r3, [r7, #6]
 1762 036c 013B     		subs	r3, r3, #1
 1763 036e DBB2     		uxtb	r3, r3
 1764 0370 DBB2     		uxtb	r3, r3
 1765 0372 63F01F03 		orn	r3, r3, #31
 1766 0376 DBB2     		uxtb	r3, r3
 1767 0378 DBB2     		uxtb	r3, r3
 1768 037a 7B73     		strb	r3, [r7, #13]
 491:.\Protocolo.c **** 			buffer[6]=0xF8;
 1769              		.loc 1 491 0
 1770 037c F823     		movs	r3, #248
 1771 037e BB73     		strb	r3, [r7, #14]
 492:.\Protocolo.c **** 			if(decimal==4){
 1772              		.loc 1 492 0
 1773 0380 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1774 0382 042B     		cmp	r3, #4
 1775 0384 22D1     		bne	.L104
 493:.\Protocolo.c **** 				buffer[7]=(valor[2]|0xE0);
 1776              		.loc 1 493 0
 1777 0386 3B68     		ldr	r3, [r7]
 1778 0388 0233     		adds	r3, r3, #2
 1779 038a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1780 038c 63F01F03 		orn	r3, r3, #31
 1781 0390 DBB2     		uxtb	r3, r3
 1782 0392 FB73     		strb	r3, [r7, #15]
 494:.\Protocolo.c **** 				buffer[8]=(valor[3]|0xE0);
 1783              		.loc 1 494 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 42


 1784 0394 3B68     		ldr	r3, [r7]
 1785 0396 0333     		adds	r3, r3, #3
 1786 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1787 039a 63F01F03 		orn	r3, r3, #31
 1788 039e DBB2     		uxtb	r3, r3
 1789 03a0 3B74     		strb	r3, [r7, #16]
 495:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);
 1790              		.loc 1 495 0
 1791 03a2 3B68     		ldr	r3, [r7]
 1792 03a4 0533     		adds	r3, r3, #5
 1793 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1794 03a8 63F01F03 		orn	r3, r3, #31
 1795 03ac DBB2     		uxtb	r3, r3
 1796 03ae 7B74     		strb	r3, [r7, #17]
 496:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 1797              		.loc 1 496 0
 1798 03b0 3B68     		ldr	r3, [r7]
 1799 03b2 0633     		adds	r3, r3, #6
 1800 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 03b6 63F01F03 		orn	r3, r3, #31
 1802 03ba DBB2     		uxtb	r3, r3
 1803 03bc BB74     		strb	r3, [r7, #18]
 497:.\Protocolo.c **** 				buffer[11]=(valor[7]|0xE0);
 1804              		.loc 1 497 0
 1805 03be 3B68     		ldr	r3, [r7]
 1806 03c0 0733     		adds	r3, r3, #7
 1807 03c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1808 03c4 63F01F03 		orn	r3, r3, #31
 1809 03c8 DBB2     		uxtb	r3, r3
 1810 03ca FB74     		strb	r3, [r7, #19]
 1811              	.L104:
 498:.\Protocolo.c **** 			}
 499:.\Protocolo.c **** 			if(decimal==3){
 1812              		.loc 1 499 0
 1813 03cc 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1814 03ce 032B     		cmp	r3, #3
 1815 03d0 22D1     		bne	.L105
 500:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 1816              		.loc 1 500 0
 1817 03d2 3B68     		ldr	r3, [r7]
 1818 03d4 0133     		adds	r3, r3, #1
 1819 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1820 03d8 63F01F03 		orn	r3, r3, #31
 1821 03dc DBB2     		uxtb	r3, r3
 1822 03de FB73     		strb	r3, [r7, #15]
 501:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 1823              		.loc 1 501 0
 1824 03e0 3B68     		ldr	r3, [r7]
 1825 03e2 0233     		adds	r3, r3, #2
 1826 03e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1827 03e6 63F01F03 		orn	r3, r3, #31
 1828 03ea DBB2     		uxtb	r3, r3
 1829 03ec 3B74     		strb	r3, [r7, #16]
 502:.\Protocolo.c **** 				buffer[9]=(valor[4]|0xE0);
 1830              		.loc 1 502 0
 1831 03ee 3B68     		ldr	r3, [r7]
 1832 03f0 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 43


 1833 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1834 03f4 63F01F03 		orn	r3, r3, #31
 1835 03f8 DBB2     		uxtb	r3, r3
 1836 03fa 7B74     		strb	r3, [r7, #17]
 503:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 1837              		.loc 1 503 0
 1838 03fc 3B68     		ldr	r3, [r7]
 1839 03fe 0533     		adds	r3, r3, #5
 1840 0400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1841 0402 63F01F03 		orn	r3, r3, #31
 1842 0406 DBB2     		uxtb	r3, r3
 1843 0408 BB74     		strb	r3, [r7, #18]
 504:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);		
 1844              		.loc 1 504 0
 1845 040a 3B68     		ldr	r3, [r7]
 1846 040c 0633     		adds	r3, r3, #6
 1847 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1848 0410 63F01F03 		orn	r3, r3, #31
 1849 0414 DBB2     		uxtb	r3, r3
 1850 0416 FB74     		strb	r3, [r7, #19]
 1851              	.L105:
 505:.\Protocolo.c **** 			}
 506:.\Protocolo.c **** 			if(decimal==2){
 1852              		.loc 1 506 0
 1853 0418 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1854 041a 022B     		cmp	r3, #2
 1855 041c 1DD1     		bne	.L106
 507:.\Protocolo.c **** 				buffer[7]=0xE0;
 1856              		.loc 1 507 0
 1857 041e E023     		movs	r3, #224
 1858 0420 FB73     		strb	r3, [r7, #15]
 508:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 1859              		.loc 1 508 0
 1860 0422 3B68     		ldr	r3, [r7]
 1861 0424 0133     		adds	r3, r3, #1
 1862 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1863 0428 63F01F03 		orn	r3, r3, #31
 1864 042c DBB2     		uxtb	r3, r3
 1865 042e 3B74     		strb	r3, [r7, #16]
 509:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 1866              		.loc 1 509 0
 1867 0430 3B68     		ldr	r3, [r7]
 1868 0432 0333     		adds	r3, r3, #3
 1869 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1870 0436 63F01F03 		orn	r3, r3, #31
 1871 043a DBB2     		uxtb	r3, r3
 1872 043c 7B74     		strb	r3, [r7, #17]
 510:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 1873              		.loc 1 510 0
 1874 043e 3B68     		ldr	r3, [r7]
 1875 0440 0433     		adds	r3, r3, #4
 1876 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1877 0444 63F01F03 		orn	r3, r3, #31
 1878 0448 DBB2     		uxtb	r3, r3
 1879 044a BB74     		strb	r3, [r7, #18]
 511:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);		
 1880              		.loc 1 511 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 44


 1881 044c 3B68     		ldr	r3, [r7]
 1882 044e 0533     		adds	r3, r3, #5
 1883 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1884 0452 63F01F03 		orn	r3, r3, #31
 1885 0456 DBB2     		uxtb	r3, r3
 1886 0458 FB74     		strb	r3, [r7, #19]
 1887              	.L106:
 512:.\Protocolo.c **** 			}
 513:.\Protocolo.c **** 			if(decimal==0){
 1888              		.loc 1 513 0
 1889 045a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1890 045c 002B     		cmp	r3, #0
 1891 045e 18D1     		bne	.L107
 514:.\Protocolo.c **** 				buffer[7]=0xE0;
 1892              		.loc 1 514 0
 1893 0460 E023     		movs	r3, #224
 1894 0462 FB73     		strb	r3, [r7, #15]
 515:.\Protocolo.c **** 				buffer[8]=0xE0;
 1895              		.loc 1 515 0
 1896 0464 E023     		movs	r3, #224
 1897 0466 3B74     		strb	r3, [r7, #16]
 516:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 1898              		.loc 1 516 0
 1899 0468 3B68     		ldr	r3, [r7]
 1900 046a 0133     		adds	r3, r3, #1
 1901 046c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1902 046e 63F01F03 		orn	r3, r3, #31
 1903 0472 DBB2     		uxtb	r3, r3
 1904 0474 7B74     		strb	r3, [r7, #17]
 517:.\Protocolo.c **** 				buffer[10]=(valor[2]|0xE0);
 1905              		.loc 1 517 0
 1906 0476 3B68     		ldr	r3, [r7]
 1907 0478 0233     		adds	r3, r3, #2
 1908 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1909 047c 63F01F03 		orn	r3, r3, #31
 1910 0480 DBB2     		uxtb	r3, r3
 1911 0482 BB74     		strb	r3, [r7, #18]
 518:.\Protocolo.c **** 				buffer[11]=(valor[3]|0xE0);		
 1912              		.loc 1 518 0
 1913 0484 3B68     		ldr	r3, [r7]
 1914 0486 0333     		adds	r3, r3, #3
 1915 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1916 048a 63F01F03 		orn	r3, r3, #31
 1917 048e DBB2     		uxtb	r3, r3
 1918 0490 FB74     		strb	r3, [r7, #19]
 1919              	.L107:
 519:.\Protocolo.c **** 			}			
 520:.\Protocolo.c **** 			buffer[12]=0xFB;
 1920              		.loc 1 520 0
 1921 0492 FB23     		movs	r3, #251
 1922 0494 3B75     		strb	r3, [r7, #20]
 521:.\Protocolo.c **** 			buffer[13]=0;
 1923              		.loc 1 521 0
 1924 0496 0023     		movs	r3, #0
 1925 0498 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1926              		.loc 1 522 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 45


 1927 049a 0023     		movs	r3, #0
 1928 049c 7B77     		strb	r3, [r7, #29]
 1929 049e 0FE0     		b	.L108
 1930              	.L109:
 523:.\Protocolo.c **** 				buffer[13]+=(buffer[i]&0x0F);	
 1931              		.loc 1 523 0 discriminator 3
 1932 04a0 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1933 04a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1934 04a4 07F12001 		add	r1, r7, #32
 1935 04a8 0B44     		add	r3, r3, r1
 1936 04aa 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1937 04ae 03F00F03 		and	r3, r3, #15
 1938 04b2 DBB2     		uxtb	r3, r3
 1939 04b4 1344     		add	r3, r3, r2
 1940 04b6 DBB2     		uxtb	r3, r3
 1941 04b8 7B75     		strb	r3, [r7, #21]
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1942              		.loc 1 522 0 discriminator 3
 1943 04ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1944 04bc 0133     		adds	r3, r3, #1
 1945 04be 7B77     		strb	r3, [r7, #29]
 1946              	.L108:
 522:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 1947              		.loc 1 522 0 is_stmt 0 discriminator 1
 1948 04c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1949 04c2 0C2B     		cmp	r3, #12
 1950 04c4 ECD9     		bls	.L109
 524:.\Protocolo.c **** 			}
 525:.\Protocolo.c **** 			buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;			
 1951              		.loc 1 525 0 is_stmt 1
 1952 04c6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1953 04c8 5B42     		negs	r3, r3
 1954 04ca DBB2     		uxtb	r3, r3
 1955 04cc DBB2     		uxtb	r3, r3
 1956 04ce 03F00F03 		and	r3, r3, #15
 1957 04d2 DBB2     		uxtb	r3, r3
 1958 04d4 63F01F03 		orn	r3, r3, #31
 1959 04d8 DBB2     		uxtb	r3, r3
 1960 04da DBB2     		uxtb	r3, r3
 1961 04dc 7B75     		strb	r3, [r7, #21]
 526:.\Protocolo.c **** 			buffer[14]=0xF0;
 1962              		.loc 1 526 0
 1963 04de F023     		movs	r3, #240
 1964 04e0 BB75     		strb	r3, [r7, #22]
 527:.\Protocolo.c **** 			size=14;
 1965              		.loc 1 527 0
 1966 04e2 0E23     		movs	r3, #14
 1967 04e4 FB77     		strb	r3, [r7, #31]
 1968              	.L94:
 528:.\Protocolo.c **** 		}	
 529:.\Protocolo.c **** 	}	
 530:.\Protocolo.c **** 	if(version[1]==7){
 1969              		.loc 1 530 0
 1970 04e6 A24B     		ldr	r3, .L128
 1971 04e8 5B78     		ldrb	r3, [r3, #1]
 1972 04ea DBB2     		uxtb	r3, r3
 1973 04ec 072B     		cmp	r3, #7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 46


 1974 04ee 40F06481 		bne	.L110
 531:.\Protocolo.c **** 		buffer[0]=0xFF;
 1975              		.loc 1 531 0
 1976 04f2 FF23     		movs	r3, #255
 1977 04f4 3B72     		strb	r3, [r7, #8]
 532:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1978              		.loc 1 532 0
 1979 04f6 BB7F     		ldrb	r3, [r7, #30]
 1980 04f8 63F01F03 		orn	r3, r3, #31
 1981 04fc DBB2     		uxtb	r3, r3
 1982 04fe 7B72     		strb	r3, [r7, #9]
 533:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1983              		.loc 1 533 0
 1984 0500 7B79     		ldrb	r3, [r7, #5]
 1985 0502 63F00F03 		orn	r3, r3, #15
 1986 0506 DBB2     		uxtb	r3, r3
 1987 0508 BB72     		strb	r3, [r7, #10]
 534:.\Protocolo.c **** 		buffer[3]=0xF4;
 1988              		.loc 1 534 0
 1989 050a F423     		movs	r3, #244
 1990 050c FB72     		strb	r3, [r7, #11]
 535:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1991              		.loc 1 535 0
 1992 050e F823     		movs	r3, #248
 1993 0510 3B73     		strb	r3, [r7, #12]
 536:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1994              		.loc 1 536 0
 1995 0512 3B68     		ldr	r3, [r7]
 1996 0514 0133     		adds	r3, r3, #1
 1997 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1998 0518 63F01F03 		orn	r3, r3, #31
 1999 051c DBB2     		uxtb	r3, r3
 2000 051e 7B73     		strb	r3, [r7, #13]
 537:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 2001              		.loc 1 537 0
 2002 0520 3B68     		ldr	r3, [r7]
 2003 0522 0233     		adds	r3, r3, #2
 2004 0524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2005 0526 63F01F03 		orn	r3, r3, #31
 2006 052a DBB2     		uxtb	r3, r3
 2007 052c BB73     		strb	r3, [r7, #14]
 538:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 2008              		.loc 1 538 0
 2009 052e 3B68     		ldr	r3, [r7]
 2010 0530 0333     		adds	r3, r3, #3
 2011 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2012 0534 63F01F03 		orn	r3, r3, #31
 2013 0538 DBB2     		uxtb	r3, r3
 2014 053a FB73     		strb	r3, [r7, #15]
 539:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 2015              		.loc 1 539 0
 2016 053c 3B68     		ldr	r3, [r7]
 2017 053e 0433     		adds	r3, r3, #4
 2018 0540 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2019 0542 63F01F03 		orn	r3, r3, #31
 2020 0546 DBB2     		uxtb	r3, r3
 2021 0548 3B74     		strb	r3, [r7, #16]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 47


 540:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 2022              		.loc 1 540 0
 2023 054a 3B68     		ldr	r3, [r7]
 2024 054c 0533     		adds	r3, r3, #5
 2025 054e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2026 0550 63F01F03 		orn	r3, r3, #31
 2027 0554 DBB2     		uxtb	r3, r3
 2028 0556 7B74     		strb	r3, [r7, #17]
 541:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);	
 2029              		.loc 1 541 0
 2030 0558 3B68     		ldr	r3, [r7]
 2031 055a 0633     		adds	r3, r3, #6
 2032 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2033 055e 63F01F03 		orn	r3, r3, #31
 2034 0562 DBB2     		uxtb	r3, r3
 2035 0564 BB74     		strb	r3, [r7, #18]
 542:.\Protocolo.c **** 		buffer[11]=(valor[7]|0xE0);
 2036              		.loc 1 542 0
 2037 0566 3B68     		ldr	r3, [r7]
 2038 0568 0733     		adds	r3, r3, #7
 2039 056a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2040 056c 63F01F03 		orn	r3, r3, #31
 2041 0570 DBB2     		uxtb	r3, r3
 2042 0572 FB74     		strb	r3, [r7, #19]
 543:.\Protocolo.c **** 		buffer[12]=0xE0;
 2043              		.loc 1 543 0
 2044 0574 E023     		movs	r3, #224
 2045 0576 3B75     		strb	r3, [r7, #20]
 544:.\Protocolo.c **** 		buffer[13]=0xFB;
 2046              		.loc 1 544 0
 2047 0578 FB23     		movs	r3, #251
 2048 057a 7B75     		strb	r3, [r7, #21]
 545:.\Protocolo.c **** 		buffer[14]=0;
 2049              		.loc 1 545 0
 2050 057c 0023     		movs	r3, #0
 2051 057e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2052              		.loc 1 546 0
 2053 0580 0023     		movs	r3, #0
 2054 0582 7B77     		strb	r3, [r7, #29]
 2055 0584 0FE0     		b	.L111
 2056              	.L112:
 547:.\Protocolo.c **** 			buffer[14]+=(buffer[i]&0x0F);	
 2057              		.loc 1 547 0 discriminator 3
 2058 0586 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2059 0588 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2060 058a 07F12001 		add	r1, r7, #32
 2061 058e 0B44     		add	r3, r3, r1
 2062 0590 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2063 0594 03F00F03 		and	r3, r3, #15
 2064 0598 DBB2     		uxtb	r3, r3
 2065 059a 1344     		add	r3, r3, r2
 2066 059c DBB2     		uxtb	r3, r3
 2067 059e BB75     		strb	r3, [r7, #22]
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2068              		.loc 1 546 0 discriminator 3
 2069 05a0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 48


 2070 05a2 0133     		adds	r3, r3, #1
 2071 05a4 7B77     		strb	r3, [r7, #29]
 2072              	.L111:
 546:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2073              		.loc 1 546 0 is_stmt 0 discriminator 1
 2074 05a6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2075 05a8 0D2B     		cmp	r3, #13
 2076 05aa ECD9     		bls	.L112
 548:.\Protocolo.c **** 		}
 549:.\Protocolo.c **** 		buffer[14]=(((~buffer[14])+1)&0x0F)|0xE0;
 2077              		.loc 1 549 0 is_stmt 1
 2078 05ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2079 05ae 5B42     		negs	r3, r3
 2080 05b0 DBB2     		uxtb	r3, r3
 2081 05b2 DBB2     		uxtb	r3, r3
 2082 05b4 03F00F03 		and	r3, r3, #15
 2083 05b8 DBB2     		uxtb	r3, r3
 2084 05ba 63F01F03 		orn	r3, r3, #31
 2085 05be DBB2     		uxtb	r3, r3
 2086 05c0 DBB2     		uxtb	r3, r3
 2087 05c2 BB75     		strb	r3, [r7, #22]
 550:.\Protocolo.c **** 		buffer[15]=0xF0;
 2088              		.loc 1 550 0
 2089 05c4 F023     		movs	r3, #240
 2090 05c6 FB75     		strb	r3, [r7, #23]
 551:.\Protocolo.c **** 		size=15;
 2091              		.loc 1 551 0
 2092 05c8 0F23     		movs	r3, #15
 2093 05ca FB77     		strb	r3, [r7, #31]
 552:.\Protocolo.c **** 		if(preset==1){
 2094              		.loc 1 552 0
 2095 05cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2096 05ce 012B     		cmp	r3, #1
 2097 05d0 40F0F380 		bne	.L110
 553:.\Protocolo.c **** 			buffer[4]=0xF6;
 2098              		.loc 1 553 0
 2099 05d4 F623     		movs	r3, #246
 2100 05d6 3B73     		strb	r3, [r7, #12]
 554:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2101              		.loc 1 554 0
 2102 05d8 BB79     		ldrb	r3, [r7, #6]
 2103 05da 013B     		subs	r3, r3, #1
 2104 05dc DBB2     		uxtb	r3, r3
 2105 05de DBB2     		uxtb	r3, r3
 2106 05e0 63F01F03 		orn	r3, r3, #31
 2107 05e4 DBB2     		uxtb	r3, r3
 2108 05e6 DBB2     		uxtb	r3, r3
 2109 05e8 7B73     		strb	r3, [r7, #13]
 555:.\Protocolo.c **** 			buffer[6]=0xF8;
 2110              		.loc 1 555 0
 2111 05ea F823     		movs	r3, #248
 2112 05ec BB73     		strb	r3, [r7, #14]
 556:.\Protocolo.c **** 			if(decimal==4){
 2113              		.loc 1 556 0
 2114 05ee 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2115 05f0 042B     		cmp	r3, #4
 2116 05f2 2DD1     		bne	.L113
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 49


 557:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2117              		.loc 1 557 0
 2118 05f4 3B68     		ldr	r3, [r7]
 2119 05f6 0133     		adds	r3, r3, #1
 2120 05f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2121 05fa 63F01F03 		orn	r3, r3, #31
 2122 05fe DBB2     		uxtb	r3, r3
 2123 0600 FB73     		strb	r3, [r7, #15]
 558:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2124              		.loc 1 558 0
 2125 0602 3B68     		ldr	r3, [r7]
 2126 0604 0233     		adds	r3, r3, #2
 2127 0606 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2128 0608 63F01F03 		orn	r3, r3, #31
 2129 060c DBB2     		uxtb	r3, r3
 2130 060e 3B74     		strb	r3, [r7, #16]
 559:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2131              		.loc 1 559 0
 2132 0610 3B68     		ldr	r3, [r7]
 2133 0612 0333     		adds	r3, r3, #3
 2134 0614 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2135 0616 63F01F03 		orn	r3, r3, #31
 2136 061a DBB2     		uxtb	r3, r3
 2137 061c 7B74     		strb	r3, [r7, #17]
 560:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2138              		.loc 1 560 0
 2139 061e 3B68     		ldr	r3, [r7]
 2140 0620 0533     		adds	r3, r3, #5
 2141 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2142 0624 63F01F03 		orn	r3, r3, #31
 2143 0628 DBB2     		uxtb	r3, r3
 2144 062a BB74     		strb	r3, [r7, #18]
 561:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);
 2145              		.loc 1 561 0
 2146 062c 3B68     		ldr	r3, [r7]
 2147 062e 0633     		adds	r3, r3, #6
 2148 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2149 0632 63F01F03 		orn	r3, r3, #31
 2150 0636 DBB2     		uxtb	r3, r3
 2151 0638 FB74     		strb	r3, [r7, #19]
 562:.\Protocolo.c **** 				buffer[12]=(valor[7]|0xE0);	
 2152              		.loc 1 562 0
 2153 063a 3B68     		ldr	r3, [r7]
 2154 063c 0733     		adds	r3, r3, #7
 2155 063e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2156 0640 63F01F03 		orn	r3, r3, #31
 2157 0644 DBB2     		uxtb	r3, r3
 2158 0646 3B75     		strb	r3, [r7, #20]
 563:.\Protocolo.c **** 				buffer[13]=0xE0;	
 2159              		.loc 1 563 0
 2160 0648 E023     		movs	r3, #224
 2161 064a 7B75     		strb	r3, [r7, #21]
 564:.\Protocolo.c **** 				buffer[14]=0xE0;
 2162              		.loc 1 564 0
 2163 064c E023     		movs	r3, #224
 2164 064e BB75     		strb	r3, [r7, #22]
 2165              	.L113:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 50


 565:.\Protocolo.c **** 			}
 566:.\Protocolo.c **** 			if(decimal==3){
 2166              		.loc 1 566 0
 2167 0650 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2168 0652 032B     		cmp	r3, #3
 2169 0654 2DD1     		bne	.L114
 567:.\Protocolo.c **** 				buffer[7]=0xE0;
 2170              		.loc 1 567 0
 2171 0656 E023     		movs	r3, #224
 2172 0658 FB73     		strb	r3, [r7, #15]
 568:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2173              		.loc 1 568 0
 2174 065a 3B68     		ldr	r3, [r7]
 2175 065c 0133     		adds	r3, r3, #1
 2176 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2177 0660 63F01F03 		orn	r3, r3, #31
 2178 0664 DBB2     		uxtb	r3, r3
 2179 0666 3B74     		strb	r3, [r7, #16]
 569:.\Protocolo.c **** 				buffer[9]=(valor[2]|0xE0);
 2180              		.loc 1 569 0
 2181 0668 3B68     		ldr	r3, [r7]
 2182 066a 0233     		adds	r3, r3, #2
 2183 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2184 066e 63F01F03 		orn	r3, r3, #31
 2185 0672 DBB2     		uxtb	r3, r3
 2186 0674 7B74     		strb	r3, [r7, #17]
 570:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2187              		.loc 1 570 0
 2188 0676 3B68     		ldr	r3, [r7]
 2189 0678 0433     		adds	r3, r3, #4
 2190 067a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2191 067c 63F01F03 		orn	r3, r3, #31
 2192 0680 DBB2     		uxtb	r3, r3
 2193 0682 BB74     		strb	r3, [r7, #18]
 571:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);
 2194              		.loc 1 571 0
 2195 0684 3B68     		ldr	r3, [r7]
 2196 0686 0533     		adds	r3, r3, #5
 2197 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2198 068a 63F01F03 		orn	r3, r3, #31
 2199 068e DBB2     		uxtb	r3, r3
 2200 0690 FB74     		strb	r3, [r7, #19]
 572:.\Protocolo.c **** 				buffer[12]=(valor[6]|0xE0);
 2201              		.loc 1 572 0
 2202 0692 3B68     		ldr	r3, [r7]
 2203 0694 0633     		adds	r3, r3, #6
 2204 0696 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2205 0698 63F01F03 		orn	r3, r3, #31
 2206 069c DBB2     		uxtb	r3, r3
 2207 069e 3B75     		strb	r3, [r7, #20]
 573:.\Protocolo.c **** 				buffer[13]=(valor[7]|0xE0);	
 2208              		.loc 1 573 0
 2209 06a0 3B68     		ldr	r3, [r7]
 2210 06a2 0733     		adds	r3, r3, #7
 2211 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2212 06a6 63F01F03 		orn	r3, r3, #31
 2213 06aa DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 51


 2214 06ac 7B75     		strb	r3, [r7, #21]
 574:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2215              		.loc 1 574 0
 2216 06ae E023     		movs	r3, #224
 2217 06b0 BB75     		strb	r3, [r7, #22]
 2218              	.L114:
 575:.\Protocolo.c **** 			}
 576:.\Protocolo.c **** 			if(decimal==2){
 2219              		.loc 1 576 0
 2220 06b2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2221 06b4 022B     		cmp	r3, #2
 2222 06b6 2DD1     		bne	.L115
 577:.\Protocolo.c **** 				buffer[7]=0xE0;
 2223              		.loc 1 577 0
 2224 06b8 E023     		movs	r3, #224
 2225 06ba FB73     		strb	r3, [r7, #15]
 578:.\Protocolo.c **** 				buffer[8]=0xE0;
 2226              		.loc 1 578 0
 2227 06bc E023     		movs	r3, #224
 2228 06be 3B74     		strb	r3, [r7, #16]
 579:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2229              		.loc 1 579 0
 2230 06c0 3B68     		ldr	r3, [r7]
 2231 06c2 0133     		adds	r3, r3, #1
 2232 06c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2233 06c6 63F01F03 		orn	r3, r3, #31
 2234 06ca DBB2     		uxtb	r3, r3
 2235 06cc 7B74     		strb	r3, [r7, #17]
 580:.\Protocolo.c **** 				buffer[10]=(valor[3]|0xE0);
 2236              		.loc 1 580 0
 2237 06ce 3B68     		ldr	r3, [r7]
 2238 06d0 0333     		adds	r3, r3, #3
 2239 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2240 06d4 63F01F03 		orn	r3, r3, #31
 2241 06d8 DBB2     		uxtb	r3, r3
 2242 06da BB74     		strb	r3, [r7, #18]
 581:.\Protocolo.c **** 				buffer[11]=(valor[4]|0xE0);
 2243              		.loc 1 581 0
 2244 06dc 3B68     		ldr	r3, [r7]
 2245 06de 0433     		adds	r3, r3, #4
 2246 06e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2247 06e2 63F01F03 		orn	r3, r3, #31
 2248 06e6 DBB2     		uxtb	r3, r3
 2249 06e8 FB74     		strb	r3, [r7, #19]
 582:.\Protocolo.c **** 				buffer[12]=(valor[5]|0xE0);
 2250              		.loc 1 582 0
 2251 06ea 3B68     		ldr	r3, [r7]
 2252 06ec 0533     		adds	r3, r3, #5
 2253 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2254 06f0 63F01F03 		orn	r3, r3, #31
 2255 06f4 DBB2     		uxtb	r3, r3
 2256 06f6 3B75     		strb	r3, [r7, #20]
 583:.\Protocolo.c **** 				buffer[13]=(valor[6]|0xE0);	
 2257              		.loc 1 583 0
 2258 06f8 3B68     		ldr	r3, [r7]
 2259 06fa 0633     		adds	r3, r3, #6
 2260 06fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 52


 2261 06fe 63F01F03 		orn	r3, r3, #31
 2262 0702 DBB2     		uxtb	r3, r3
 2263 0704 7B75     		strb	r3, [r7, #21]
 584:.\Protocolo.c **** 				buffer[14]=(valor[7]|0xE0);	
 2264              		.loc 1 584 0
 2265 0706 3B68     		ldr	r3, [r7]
 2266 0708 0733     		adds	r3, r3, #7
 2267 070a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2268 070c 63F01F03 		orn	r3, r3, #31
 2269 0710 DBB2     		uxtb	r3, r3
 2270 0712 BB75     		strb	r3, [r7, #22]
 2271              	.L115:
 585:.\Protocolo.c **** 			}
 586:.\Protocolo.c **** 			if(decimal==0){
 2272              		.loc 1 586 0
 2273 0714 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2274 0716 002B     		cmp	r3, #0
 2275 0718 23D1     		bne	.L116
 587:.\Protocolo.c **** 				buffer[7]=0xE0;
 2276              		.loc 1 587 0
 2277 071a E023     		movs	r3, #224
 2278 071c FB73     		strb	r3, [r7, #15]
 588:.\Protocolo.c **** 				buffer[8]=0xE0;
 2279              		.loc 1 588 0
 2280 071e E023     		movs	r3, #224
 2281 0720 3B74     		strb	r3, [r7, #16]
 589:.\Protocolo.c **** 				buffer[9]=0xE0;
 2282              		.loc 1 589 0
 2283 0722 E023     		movs	r3, #224
 2284 0724 7B74     		strb	r3, [r7, #17]
 590:.\Protocolo.c **** 				buffer[10]=(valor[1]|0xE0);
 2285              		.loc 1 590 0
 2286 0726 3B68     		ldr	r3, [r7]
 2287 0728 0133     		adds	r3, r3, #1
 2288 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2289 072c 63F01F03 		orn	r3, r3, #31
 2290 0730 DBB2     		uxtb	r3, r3
 2291 0732 BB74     		strb	r3, [r7, #18]
 591:.\Protocolo.c **** 				buffer[11]=(valor[2]|0xE0);
 2292              		.loc 1 591 0
 2293 0734 3B68     		ldr	r3, [r7]
 2294 0736 0233     		adds	r3, r3, #2
 2295 0738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2296 073a 63F01F03 		orn	r3, r3, #31
 2297 073e DBB2     		uxtb	r3, r3
 2298 0740 FB74     		strb	r3, [r7, #19]
 592:.\Protocolo.c **** 				buffer[12]=(valor[3]|0xE0);
 2299              		.loc 1 592 0
 2300 0742 3B68     		ldr	r3, [r7]
 2301 0744 0333     		adds	r3, r3, #3
 2302 0746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2303 0748 63F01F03 		orn	r3, r3, #31
 2304 074c DBB2     		uxtb	r3, r3
 2305 074e 3B75     		strb	r3, [r7, #20]
 593:.\Protocolo.c **** 				buffer[13]=(valor[4]|0xE0);	
 2306              		.loc 1 593 0
 2307 0750 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 53


 2308 0752 0433     		adds	r3, r3, #4
 2309 0754 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2310 0756 63F01F03 		orn	r3, r3, #31
 2311 075a DBB2     		uxtb	r3, r3
 2312 075c 7B75     		strb	r3, [r7, #21]
 594:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2313              		.loc 1 594 0
 2314 075e E023     		movs	r3, #224
 2315 0760 BB75     		strb	r3, [r7, #22]
 2316              	.L116:
 595:.\Protocolo.c **** 			}			
 596:.\Protocolo.c **** 			buffer[15]=0xFB;
 2317              		.loc 1 596 0
 2318 0762 FB23     		movs	r3, #251
 2319 0764 FB75     		strb	r3, [r7, #23]
 597:.\Protocolo.c **** 			buffer[16]=0;
 2320              		.loc 1 597 0
 2321 0766 0023     		movs	r3, #0
 2322 0768 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2323              		.loc 1 598 0
 2324 076a 0023     		movs	r3, #0
 2325 076c 7B77     		strb	r3, [r7, #29]
 2326 076e 11E0     		b	.L117
 2327              	.L129:
 2328              		.align	2
 2329              	.L128:
 2330 0770 00000000 		.word	version
 2331              	.L118:
 599:.\Protocolo.c **** 				buffer[16]+=(buffer[i]&0x0F);	
 2332              		.loc 1 599 0 discriminator 3
 2333 0774 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 2334 0776 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2335 0778 07F12001 		add	r1, r7, #32
 2336 077c 0B44     		add	r3, r3, r1
 2337 077e 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2338 0782 03F00F03 		and	r3, r3, #15
 2339 0786 DBB2     		uxtb	r3, r3
 2340 0788 1344     		add	r3, r3, r2
 2341 078a DBB2     		uxtb	r3, r3
 2342 078c 3B76     		strb	r3, [r7, #24]
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2343              		.loc 1 598 0 discriminator 3
 2344 078e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2345 0790 0133     		adds	r3, r3, #1
 2346 0792 7B77     		strb	r3, [r7, #29]
 2347              	.L117:
 598:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2348              		.loc 1 598 0 is_stmt 0 discriminator 1
 2349 0794 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2350 0796 0F2B     		cmp	r3, #15
 2351 0798 ECD9     		bls	.L118
 600:.\Protocolo.c **** 			}
 601:.\Protocolo.c **** 			buffer[16]=(((~buffer[16])+1)&0x0F)|0xE0;			
 2352              		.loc 1 601 0 is_stmt 1
 2353 079a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 2354 079c 5B42     		negs	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 54


 2355 079e DBB2     		uxtb	r3, r3
 2356 07a0 DBB2     		uxtb	r3, r3
 2357 07a2 03F00F03 		and	r3, r3, #15
 2358 07a6 DBB2     		uxtb	r3, r3
 2359 07a8 63F01F03 		orn	r3, r3, #31
 2360 07ac DBB2     		uxtb	r3, r3
 2361 07ae DBB2     		uxtb	r3, r3
 2362 07b0 3B76     		strb	r3, [r7, #24]
 602:.\Protocolo.c **** 			buffer[17]=0xF0;
 2363              		.loc 1 602 0
 2364 07b2 F023     		movs	r3, #240
 2365 07b4 7B76     		strb	r3, [r7, #25]
 603:.\Protocolo.c **** 			size=17;
 2366              		.loc 1 603 0
 2367 07b6 1123     		movs	r3, #17
 2368 07b8 FB77     		strb	r3, [r7, #31]
 2369              	.L110:
 604:.\Protocolo.c **** 		}		
 605:.\Protocolo.c **** 	}
 606:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2370              		.loc 1 606 0
 2371 07ba FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 607:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2372              		.loc 1 607 0
 2373 07be FB79     		ldrb	r3, [r7, #7]
 2374 07c0 43F02003 		orr	r3, r3, #32
 2375 07c4 DBB2     		uxtb	r3, r3
 2376 07c6 1846     		mov	r0, r3
 2377 07c8 FFF7FEFF 		bl	Surtidor_PutChar
 608:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2378              		.loc 1 608 0
 2379 07cc 2A48     		ldr	r0, .L130
 2380 07ce FFF7FEFF 		bl	isr_1_StartEx
 609:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2381              		.loc 1 609 0
 2382 07d2 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 610:.\Protocolo.c ****     rx_timeout=0;
 2383              		.loc 1 610 0
 2384 07d6 294B     		ldr	r3, .L130+4
 2385 07d8 0022     		movs	r2, #0
 2386 07da 1A70     		strb	r2, [r3]
 611:.\Protocolo.c ****     CyDelay(10);
 2387              		.loc 1 611 0
 2388 07dc 0A20     		movs	r0, #10
 2389 07de FFF7FEFF 		bl	CyDelay
 612:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2390              		.loc 1 612 0
 2391 07e2 0BE0     		b	.L119
 2392              	.L120:
 613:.\Protocolo.c **** 		if(rx_timeout==1){
 2393              		.loc 1 613 0
 2394 07e4 254B     		ldr	r3, .L130+4
 2395 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2396 07e8 012B     		cmp	r3, #1
 2397 07ea 07D1     		bne	.L119
 614:.\Protocolo.c **** 			isr_1_Stop();
 2398              		.loc 1 614 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 55


 2399 07ec FFF7FEFF 		bl	isr_1_Stop
 615:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2400              		.loc 1 615 0
 2401 07f0 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 616:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2402              		.loc 1 616 0
 2403 07f4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 617:.\Protocolo.c **** 			return 0;
 2404              		.loc 1 617 0
 2405 07f8 0023     		movs	r3, #0
 2406 07fa 39E0     		b	.L125
 2407              	.L119:
 612:.\Protocolo.c **** 		if(rx_timeout==1){
 2408              		.loc 1 612 0
 2409 07fc FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2410 0800 0346     		mov	r3, r0
 2411 0802 002B     		cmp	r3, #0
 2412 0804 EED0     		beq	.L120
 618:.\Protocolo.c **** 		}
 619:.\Protocolo.c **** 	}
 620:.\Protocolo.c **** 	isr_1_Stop();
 2413              		.loc 1 620 0
 2414 0806 FFF7FEFF 		bl	isr_1_Stop
 621:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 2415              		.loc 1 621 0
 2416 080a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 622:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2417              		.loc 1 622 0
 2418 080e FFF7FEFF 		bl	Surtidor_ReadRxData
 2419 0812 0346     		mov	r3, r0
 2420 0814 1A46     		mov	r2, r3
 2421 0816 FB79     		ldrb	r3, [r7, #7]
 2422 0818 63F02F03 		orn	r3, r3, #47
 2423 081c DBB2     		uxtb	r3, r3
 2424 081e 9A42     		cmp	r2, r3
 2425 0820 25D1     		bne	.L121
 623:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2426              		.loc 1 623 0
 2427 0822 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 624:.\Protocolo.c **** 		CyDelay(10);
 2428              		.loc 1 624 0
 2429 0826 0A20     		movs	r0, #10
 2430 0828 FFF7FEFF 		bl	CyDelay
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2431              		.loc 1 625 0
 2432 082c 0023     		movs	r3, #0
 2433 082e 7B77     		strb	r3, [r7, #29]
 2434 0830 0BE0     		b	.L122
 2435              	.L123:
 626:.\Protocolo.c ****            	Surtidor_PutChar(buffer[i]);
 2436              		.loc 1 626 0 discriminator 3
 2437 0832 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2438 0834 07F12002 		add	r2, r7, #32
 2439 0838 1344     		add	r3, r3, r2
 2440 083a 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2441 083e 1846     		mov	r0, r3
 2442 0840 FFF7FEFF 		bl	Surtidor_PutChar
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 56


 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2443              		.loc 1 625 0 discriminator 3
 2444 0844 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2445 0846 0133     		adds	r3, r3, #1
 2446 0848 7B77     		strb	r3, [r7, #29]
 2447              	.L122:
 625:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2448              		.loc 1 625 0 is_stmt 0 discriminator 1
 2449 084a 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2450 084c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2451 084e 9A42     		cmp	r2, r3
 2452 0850 EFD9     		bls	.L123
 627:.\Protocolo.c ****         }
 628:.\Protocolo.c **** 		CyDelay(50);		
 2453              		.loc 1 628 0 is_stmt 1
 2454 0852 3220     		movs	r0, #50
 2455 0854 FFF7FEFF 		bl	CyDelay
 629:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2456              		.loc 1 629 0
 2457 0858 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2458 085a 1846     		mov	r0, r3
 2459 085c FFF7FEFF 		bl	get_estado
 2460 0860 0346     		mov	r3, r0
 2461 0862 002B     		cmp	r3, #0
 2462 0864 01D1     		bne	.L124
 630:.\Protocolo.c **** 			return 0;
 2463              		.loc 1 630 0
 2464 0866 0023     		movs	r3, #0
 2465 0868 02E0     		b	.L125
 2466              	.L124:
 631:.\Protocolo.c **** 		}
 632:.\Protocolo.c **** 		else{
 633:.\Protocolo.c **** 			return 1;
 2467              		.loc 1 633 0
 2468 086a 0123     		movs	r3, #1
 2469 086c 00E0     		b	.L125
 2470              	.L121:
 634:.\Protocolo.c **** 		}
 635:.\Protocolo.c **** 	}
 636:.\Protocolo.c **** 	else{
 637:.\Protocolo.c **** 		return 0;
 2471              		.loc 1 637 0
 2472 086e 0023     		movs	r3, #0
 2473              	.L125:
 638:.\Protocolo.c **** 	}
 639:.\Protocolo.c **** }
 2474              		.loc 1 639 0 discriminator 1
 2475 0870 1846     		mov	r0, r3
 2476 0872 2037     		adds	r7, r7, #32
 2477              		.cfi_def_cfa_offset 8
 2478 0874 BD46     		mov	sp, r7
 2479              		.cfi_def_cfa_register 13
 2480              		@ sp needed
 2481 0876 80BD     		pop	{r7, pc}
 2482              	.L131:
 2483              		.align	2
 2484              	.L130:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 57


 2485 0878 00000000 		.word	Rx_Surtidor
 2486 087c 00000000 		.word	rx_timeout
 2487              		.cfi_endproc
 2488              	.LFE70:
 2489              		.size	programar, .-programar
 2490              		.section	.text.cambiar_precio,"ax",%progbits
 2491              		.align	2
 2492              		.global	cambiar_precio
 2493              		.thumb
 2494              		.thumb_func
 2495              		.type	cambiar_precio, %function
 2496              	cambiar_precio:
 2497              	.LFB71:
 640:.\Protocolo.c **** 
 641:.\Protocolo.c **** /*
 642:.\Protocolo.c **** ***************************************************************************************************
 643:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 644:.\Protocolo.c **** *
 645:.\Protocolo.c **** * Description : 
 646:.\Protocolo.c **** *               
 647:.\Protocolo.c **** *
 648:.\Protocolo.c **** * Argument(s) : none
 649:.\Protocolo.c **** *
 650:.\Protocolo.c **** * Return(s)   : none
 651:.\Protocolo.c **** *
 652:.\Protocolo.c **** * Caller(s)   : 
 653:.\Protocolo.c **** *
 654:.\Protocolo.c **** * Note(s)     : none.
 655:.\Protocolo.c **** ***************************************************************************************************
 656:.\Protocolo.c **** */
 657:.\Protocolo.c **** uint8 cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man){
 2498              		.loc 1 657 0
 2499              		.cfi_startproc
 2500              		@ args = 0, pretend = 0, frame = 32
 2501              		@ frame_needed = 1, uses_anonymous_args = 0
 2502 0000 80B5     		push	{r7, lr}
 2503              		.cfi_def_cfa_offset 8
 2504              		.cfi_offset 7, -8
 2505              		.cfi_offset 14, -4
 2506 0002 88B0     		sub	sp, sp, #32
 2507              		.cfi_def_cfa_offset 40
 2508 0004 00AF     		add	r7, sp, #0
 2509              		.cfi_def_cfa_register 7
 2510 0006 0346     		mov	r3, r0
 2511 0008 3960     		str	r1, [r7]
 2512 000a FB71     		strb	r3, [r7, #7]
 2513 000c 1346     		mov	r3, r2
 2514 000e BB71     		strb	r3, [r7, #6]
 658:.\Protocolo.c **** 	uint8 buffer[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,x;
 2515              		.loc 1 658 0
 2516 0010 0023     		movs	r3, #0
 2517 0012 3B73     		strb	r3, [r7, #12]
 2518 0014 0023     		movs	r3, #0
 2519 0016 7B73     		strb	r3, [r7, #13]
 2520 0018 0023     		movs	r3, #0
 2521 001a BB73     		strb	r3, [r7, #14]
 2522 001c 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 58


 2523 001e FB73     		strb	r3, [r7, #15]
 2524 0020 0023     		movs	r3, #0
 2525 0022 3B74     		strb	r3, [r7, #16]
 2526 0024 0023     		movs	r3, #0
 2527 0026 7B74     		strb	r3, [r7, #17]
 2528 0028 0023     		movs	r3, #0
 2529 002a BB74     		strb	r3, [r7, #18]
 2530 002c 0023     		movs	r3, #0
 2531 002e FB74     		strb	r3, [r7, #19]
 2532 0030 0023     		movs	r3, #0
 2533 0032 3B75     		strb	r3, [r7, #20]
 2534 0034 0023     		movs	r3, #0
 2535 0036 7B75     		strb	r3, [r7, #21]
 2536 0038 0023     		movs	r3, #0
 2537 003a BB75     		strb	r3, [r7, #22]
 2538 003c 0023     		movs	r3, #0
 2539 003e FB75     		strb	r3, [r7, #23]
 2540 0040 0023     		movs	r3, #0
 2541 0042 3B76     		strb	r3, [r7, #24]
 2542 0044 0023     		movs	r3, #0
 2543 0046 7B76     		strb	r3, [r7, #25]
 2544 0048 0023     		movs	r3, #0
 2545 004a BB76     		strb	r3, [r7, #26]
 659:.\Protocolo.c **** 	if(version[1]!=7){
 2546              		.loc 1 659 0
 2547 004c 884B     		ldr	r3, .L151
 2548 004e 5B78     		ldrb	r3, [r3, #1]
 2549 0050 DBB2     		uxtb	r3, r3
 2550 0052 072B     		cmp	r3, #7
 2551 0054 56D0     		beq	.L133
 660:.\Protocolo.c **** 		buffer[0]=0xFF;
 2552              		.loc 1 660 0
 2553 0056 FF23     		movs	r3, #255
 2554 0058 3B73     		strb	r3, [r7, #12]
 661:.\Protocolo.c **** 		buffer[1]=0xE5;
 2555              		.loc 1 661 0
 2556 005a E523     		movs	r3, #229
 2557 005c 7B73     		strb	r3, [r7, #13]
 662:.\Protocolo.c **** 		buffer[2]=0xF4;
 2558              		.loc 1 662 0
 2559 005e F423     		movs	r3, #244
 2560 0060 BB73     		strb	r3, [r7, #14]
 663:.\Protocolo.c **** 		buffer[3]=0xF6;
 2561              		.loc 1 663 0
 2562 0062 F623     		movs	r3, #246
 2563 0064 FB73     		strb	r3, [r7, #15]
 664:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2564              		.loc 1 664 0
 2565 0066 BB79     		ldrb	r3, [r7, #6]
 2566 0068 013B     		subs	r3, r3, #1
 2567 006a DBB2     		uxtb	r3, r3
 2568 006c DBB2     		uxtb	r3, r3
 2569 006e 63F01F03 		orn	r3, r3, #31
 2570 0072 DBB2     		uxtb	r3, r3
 2571 0074 DBB2     		uxtb	r3, r3
 2572 0076 3B74     		strb	r3, [r7, #16]
 665:.\Protocolo.c **** 		buffer[5]=0xF7;	
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 59


 2573              		.loc 1 665 0
 2574 0078 F723     		movs	r3, #247
 2575 007a 7B74     		strb	r3, [r7, #17]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2576              		.loc 1 666 0
 2577 007c 0623     		movs	r3, #6
 2578 007e BB77     		strb	r3, [r7, #30]
 2579 0080 15E0     		b	.L134
 2580              	.L135:
 667:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 2581              		.loc 1 667 0 discriminator 3
 2582 0082 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2583 0084 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2584 0086 063A     		subs	r2, r2, #6
 2585 0088 3968     		ldr	r1, [r7]
 2586 008a 0A44     		add	r2, r2, r1
 2587 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2588 008e D2B2     		uxtb	r2, r2
 2589 0090 02F00F02 		and	r2, r2, #15
 2590 0094 D2B2     		uxtb	r2, r2
 2591 0096 62F01F02 		orn	r2, r2, #31
 2592 009a D2B2     		uxtb	r2, r2
 2593 009c D2B2     		uxtb	r2, r2
 2594 009e 07F12001 		add	r1, r7, #32
 2595 00a2 0B44     		add	r3, r3, r1
 2596 00a4 03F8142C 		strb	r2, [r3, #-20]
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2597              		.loc 1 666 0 discriminator 3
 2598 00a8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2599 00aa 0133     		adds	r3, r3, #1
 2600 00ac BB77     		strb	r3, [r7, #30]
 2601              	.L134:
 666:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 2602              		.loc 1 666 0 is_stmt 0 discriminator 1
 2603 00ae BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2604 00b0 092B     		cmp	r3, #9
 2605 00b2 E6D9     		bls	.L135
 668:.\Protocolo.c **** 		}
 669:.\Protocolo.c **** 		buffer[10]=0xFB;
 2606              		.loc 1 669 0 is_stmt 1
 2607 00b4 FB23     		movs	r3, #251
 2608 00b6 BB75     		strb	r3, [r7, #22]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2609              		.loc 1 670 0
 2610 00b8 0023     		movs	r3, #0
 2611 00ba BB77     		strb	r3, [r7, #30]
 2612 00bc 0FE0     		b	.L136
 2613              	.L137:
 671:.\Protocolo.c **** 			buffer[11]+=(buffer[x]&0x0F);	
 2614              		.loc 1 671 0 discriminator 3
 2615 00be FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 2616 00c0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2617 00c2 07F12001 		add	r1, r7, #32
 2618 00c6 0B44     		add	r3, r3, r1
 2619 00c8 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2620 00cc 03F00F03 		and	r3, r3, #15
 2621 00d0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 60


 2622 00d2 1344     		add	r3, r3, r2
 2623 00d4 DBB2     		uxtb	r3, r3
 2624 00d6 FB75     		strb	r3, [r7, #23]
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2625              		.loc 1 670 0 discriminator 3
 2626 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2627 00da 0133     		adds	r3, r3, #1
 2628 00dc BB77     		strb	r3, [r7, #30]
 2629              	.L136:
 670:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 2630              		.loc 1 670 0 is_stmt 0 discriminator 1
 2631 00de BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2632 00e0 0A2B     		cmp	r3, #10
 2633 00e2 ECD9     		bls	.L137
 672:.\Protocolo.c **** 		}
 673:.\Protocolo.c **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 2634              		.loc 1 673 0 is_stmt 1
 2635 00e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2636 00e6 5B42     		negs	r3, r3
 2637 00e8 DBB2     		uxtb	r3, r3
 2638 00ea DBB2     		uxtb	r3, r3
 2639 00ec 03F00F03 		and	r3, r3, #15
 2640 00f0 DBB2     		uxtb	r3, r3
 2641 00f2 63F01F03 		orn	r3, r3, #31
 2642 00f6 DBB2     		uxtb	r3, r3
 2643 00f8 DBB2     		uxtb	r3, r3
 2644 00fa FB75     		strb	r3, [r7, #23]
 674:.\Protocolo.c **** 		buffer[12]=0xF0;
 2645              		.loc 1 674 0
 2646 00fc F023     		movs	r3, #240
 2647 00fe 3B76     		strb	r3, [r7, #24]
 675:.\Protocolo.c **** 		size=12;
 2648              		.loc 1 675 0
 2649 0100 0C23     		movs	r3, #12
 2650 0102 FB77     		strb	r3, [r7, #31]
 2651              	.L133:
 676:.\Protocolo.c **** 	}
 677:.\Protocolo.c **** 	if(version[1]==7){
 2652              		.loc 1 677 0
 2653 0104 5A4B     		ldr	r3, .L151
 2654 0106 5B78     		ldrb	r3, [r3, #1]
 2655 0108 DBB2     		uxtb	r3, r3
 2656 010a 072B     		cmp	r3, #7
 2657 010c 53D1     		bne	.L138
 678:.\Protocolo.c **** 		buffer[0]=0xFF;
 2658              		.loc 1 678 0
 2659 010e FF23     		movs	r3, #255
 2660 0110 3B73     		strb	r3, [r7, #12]
 679:.\Protocolo.c **** 		buffer[1]=0xE3;
 2661              		.loc 1 679 0
 2662 0112 E323     		movs	r3, #227
 2663 0114 7B73     		strb	r3, [r7, #13]
 680:.\Protocolo.c **** 		buffer[2]=0xF4;
 2664              		.loc 1 680 0
 2665 0116 F423     		movs	r3, #244
 2666 0118 BB73     		strb	r3, [r7, #14]
 681:.\Protocolo.c **** 		buffer[3]=0xF6;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 61


 2667              		.loc 1 681 0
 2668 011a F623     		movs	r3, #246
 2669 011c FB73     		strb	r3, [r7, #15]
 682:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 2670              		.loc 1 682 0
 2671 011e BB79     		ldrb	r3, [r7, #6]
 2672 0120 013B     		subs	r3, r3, #1
 2673 0122 DBB2     		uxtb	r3, r3
 2674 0124 DBB2     		uxtb	r3, r3
 2675 0126 63F01F03 		orn	r3, r3, #31
 2676 012a DBB2     		uxtb	r3, r3
 2677 012c DBB2     		uxtb	r3, r3
 2678 012e 3B74     		strb	r3, [r7, #16]
 683:.\Protocolo.c **** 		buffer[5]=0xF7;		
 2679              		.loc 1 683 0
 2680 0130 F723     		movs	r3, #247
 2681 0132 7B74     		strb	r3, [r7, #17]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2682              		.loc 1 684 0
 2683 0134 0623     		movs	r3, #6
 2684 0136 BB77     		strb	r3, [r7, #30]
 2685 0138 10E0     		b	.L139
 2686              	.L140:
 685:.\Protocolo.c **** 			buffer[x]=(0xE0|precio[x-6]);
 2687              		.loc 1 685 0 discriminator 3
 2688 013a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2689 013c BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2690 013e 063A     		subs	r2, r2, #6
 2691 0140 3968     		ldr	r1, [r7]
 2692 0142 0A44     		add	r2, r2, r1
 2693 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2694 0146 62F01F02 		orn	r2, r2, #31
 2695 014a D2B2     		uxtb	r2, r2
 2696 014c 07F12001 		add	r1, r7, #32
 2697 0150 0B44     		add	r3, r3, r1
 2698 0152 03F8142C 		strb	r2, [r3, #-20]
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2699              		.loc 1 684 0 discriminator 3
 2700 0156 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2701 0158 0133     		adds	r3, r3, #1
 2702 015a BB77     		strb	r3, [r7, #30]
 2703              	.L139:
 684:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 2704              		.loc 1 684 0 is_stmt 0 discriminator 1
 2705 015c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2706 015e 0A2B     		cmp	r3, #10
 2707 0160 EBD9     		bls	.L140
 686:.\Protocolo.c **** 		}
 687:.\Protocolo.c **** 		buffer[11]=0xE0;
 2708              		.loc 1 687 0 is_stmt 1
 2709 0162 E023     		movs	r3, #224
 2710 0164 FB75     		strb	r3, [r7, #23]
 688:.\Protocolo.c **** 		buffer[12]=0xFB;
 2711              		.loc 1 688 0
 2712 0166 FB23     		movs	r3, #251
 2713 0168 3B76     		strb	r3, [r7, #24]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 62


 2714              		.loc 1 689 0
 2715 016a 0023     		movs	r3, #0
 2716 016c BB77     		strb	r3, [r7, #30]
 2717 016e 0FE0     		b	.L141
 2718              	.L142:
 690:.\Protocolo.c **** 			buffer[13]+=(buffer[x]&0x0F);	
 2719              		.loc 1 690 0 discriminator 3
 2720 0170 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 2721 0172 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2722 0174 07F12001 		add	r1, r7, #32
 2723 0178 0B44     		add	r3, r3, r1
 2724 017a 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2725 017e 03F00F03 		and	r3, r3, #15
 2726 0182 DBB2     		uxtb	r3, r3
 2727 0184 1344     		add	r3, r3, r2
 2728 0186 DBB2     		uxtb	r3, r3
 2729 0188 7B76     		strb	r3, [r7, #25]
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2730              		.loc 1 689 0 discriminator 3
 2731 018a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2732 018c 0133     		adds	r3, r3, #1
 2733 018e BB77     		strb	r3, [r7, #30]
 2734              	.L141:
 689:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 2735              		.loc 1 689 0 is_stmt 0 discriminator 1
 2736 0190 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2737 0192 0C2B     		cmp	r3, #12
 2738 0194 ECD9     		bls	.L142
 691:.\Protocolo.c **** 		}
 692:.\Protocolo.c **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 2739              		.loc 1 692 0 is_stmt 1
 2740 0196 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2741 0198 5B42     		negs	r3, r3
 2742 019a DBB2     		uxtb	r3, r3
 2743 019c DBB2     		uxtb	r3, r3
 2744 019e 03F00F03 		and	r3, r3, #15
 2745 01a2 DBB2     		uxtb	r3, r3
 2746 01a4 63F01F03 		orn	r3, r3, #31
 2747 01a8 DBB2     		uxtb	r3, r3
 2748 01aa DBB2     		uxtb	r3, r3
 2749 01ac 7B76     		strb	r3, [r7, #25]
 693:.\Protocolo.c **** 		buffer[14]=0xF0;
 2750              		.loc 1 693 0
 2751 01ae F023     		movs	r3, #240
 2752 01b0 BB76     		strb	r3, [r7, #26]
 694:.\Protocolo.c **** 		size=14;
 2753              		.loc 1 694 0
 2754 01b2 0E23     		movs	r3, #14
 2755 01b4 FB77     		strb	r3, [r7, #31]
 2756              	.L138:
 695:.\Protocolo.c **** 	}
 696:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2757              		.loc 1 696 0
 2758 01b6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 697:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2759              		.loc 1 697 0
 2760 01ba FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 63


 2761 01bc 43F02003 		orr	r3, r3, #32
 2762 01c0 DBB2     		uxtb	r3, r3
 2763 01c2 1846     		mov	r0, r3
 2764 01c4 FFF7FEFF 		bl	Surtidor_PutChar
 698:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2765              		.loc 1 698 0
 2766 01c8 2A48     		ldr	r0, .L151+4
 2767 01ca FFF7FEFF 		bl	isr_1_StartEx
 699:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2768              		.loc 1 699 0
 2769 01ce FFF7FEFF 		bl	Timer_RxSurtidor_Start
 700:.\Protocolo.c ****     rx_timeout=0;
 2770              		.loc 1 700 0
 2771 01d2 294B     		ldr	r3, .L151+8
 2772 01d4 0022     		movs	r2, #0
 2773 01d6 1A70     		strb	r2, [r3]
 701:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2774              		.loc 1 701 0
 2775 01d8 0BE0     		b	.L143
 2776              	.L145:
 702:.\Protocolo.c **** 		if(rx_timeout==1){
 2777              		.loc 1 702 0
 2778 01da 274B     		ldr	r3, .L151+8
 2779 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2780 01de 012B     		cmp	r3, #1
 2781 01e0 07D1     		bne	.L143
 703:.\Protocolo.c **** 			isr_1_Stop();
 2782              		.loc 1 703 0
 2783 01e2 FFF7FEFF 		bl	isr_1_Stop
 704:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2784              		.loc 1 704 0
 2785 01e6 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 705:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2786              		.loc 1 705 0
 2787 01ea FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 706:.\Protocolo.c **** 			return 0;
 2788              		.loc 1 706 0
 2789 01ee 0023     		movs	r3, #0
 2790 01f0 39E0     		b	.L150
 2791              	.L143:
 701:.\Protocolo.c **** 		if(rx_timeout==1){
 2792              		.loc 1 701 0
 2793 01f2 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2794 01f6 0346     		mov	r3, r0
 2795 01f8 002B     		cmp	r3, #0
 2796 01fa EED0     		beq	.L145
 707:.\Protocolo.c **** 		}
 708:.\Protocolo.c **** 	}
 709:.\Protocolo.c **** 	isr_1_Stop();
 2797              		.loc 1 709 0
 2798 01fc FFF7FEFF 		bl	isr_1_Stop
 710:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();
 2799              		.loc 1 710 0
 2800 0200 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 711:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2801              		.loc 1 711 0
 2802 0204 FFF7FEFF 		bl	Surtidor_ReadRxData
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 64


 2803 0208 0346     		mov	r3, r0
 2804 020a 1A46     		mov	r2, r3
 2805 020c FB79     		ldrb	r3, [r7, #7]
 2806 020e 63F02F03 		orn	r3, r3, #47
 2807 0212 DBB2     		uxtb	r3, r3
 2808 0214 9A42     		cmp	r2, r3
 2809 0216 25D1     		bne	.L146
 712:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2810              		.loc 1 712 0
 2811 0218 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 713:.\Protocolo.c **** 		CyDelay(10);
 2812              		.loc 1 713 0
 2813 021c 0A20     		movs	r0, #10
 2814 021e FFF7FEFF 		bl	CyDelay
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2815              		.loc 1 714 0
 2816 0222 0023     		movs	r3, #0
 2817 0224 BB77     		strb	r3, [r7, #30]
 2818 0226 0BE0     		b	.L147
 2819              	.L148:
 715:.\Protocolo.c ****            	Surtidor_PutChar(buffer[x]);
 2820              		.loc 1 715 0 discriminator 3
 2821 0228 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2822 022a 07F12002 		add	r2, r7, #32
 2823 022e 1344     		add	r3, r3, r2
 2824 0230 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 2825 0234 1846     		mov	r0, r3
 2826 0236 FFF7FEFF 		bl	Surtidor_PutChar
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2827              		.loc 1 714 0 discriminator 3
 2828 023a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2829 023c 0133     		adds	r3, r3, #1
 2830 023e BB77     		strb	r3, [r7, #30]
 2831              	.L147:
 714:.\Protocolo.c ****         for(x=0;x<=size;x++){
 2832              		.loc 1 714 0 is_stmt 0 discriminator 1
 2833 0240 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 2834 0242 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2835 0244 9A42     		cmp	r2, r3
 2836 0246 EFD9     		bls	.L148
 716:.\Protocolo.c ****         }
 717:.\Protocolo.c **** 		CyDelay(50);		
 2837              		.loc 1 717 0 is_stmt 1
 2838 0248 3220     		movs	r0, #50
 2839 024a FFF7FEFF 		bl	CyDelay
 718:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2840              		.loc 1 718 0
 2841 024e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2842 0250 1846     		mov	r0, r3
 2843 0252 FFF7FEFF 		bl	get_estado
 2844 0256 0346     		mov	r3, r0
 2845 0258 002B     		cmp	r3, #0
 2846 025a 01D1     		bne	.L149
 719:.\Protocolo.c **** 			return 0;
 2847              		.loc 1 719 0
 2848 025c 0023     		movs	r3, #0
 2849 025e 02E0     		b	.L150
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 65


 2850              	.L149:
 720:.\Protocolo.c **** 		}
 721:.\Protocolo.c **** 		else{
 722:.\Protocolo.c **** 			return 1;
 2851              		.loc 1 722 0
 2852 0260 0123     		movs	r3, #1
 2853 0262 00E0     		b	.L150
 2854              	.L146:
 723:.\Protocolo.c **** 		}
 724:.\Protocolo.c **** 	}
 725:.\Protocolo.c **** 	else{
 726:.\Protocolo.c **** 		return 0;
 2855              		.loc 1 726 0
 2856 0264 0023     		movs	r3, #0
 2857              	.L150:
 727:.\Protocolo.c **** 	}
 728:.\Protocolo.c **** }
 2858              		.loc 1 728 0 discriminator 1
 2859 0266 1846     		mov	r0, r3
 2860 0268 2037     		adds	r7, r7, #32
 2861              		.cfi_def_cfa_offset 8
 2862 026a BD46     		mov	sp, r7
 2863              		.cfi_def_cfa_register 13
 2864              		@ sp needed
 2865 026c 80BD     		pop	{r7, pc}
 2866              	.L152:
 2867 026e 00BF     		.align	2
 2868              	.L151:
 2869 0270 00000000 		.word	version
 2870 0274 00000000 		.word	Rx_Surtidor
 2871 0278 00000000 		.word	rx_timeout
 2872              		.cfi_endproc
 2873              	.LFE71:
 2874              		.size	cambiar_precio, .-cambiar_precio
 2875              		.section	.text.totales,"ax",%progbits
 2876              		.align	2
 2877              		.global	totales
 2878              		.thumb
 2879              		.thumb_func
 2880              		.type	totales, %function
 2881              	totales:
 2882              	.LFB72:
 729:.\Protocolo.c **** 
 730:.\Protocolo.c **** /*
 731:.\Protocolo.c **** ***************************************************************************************************
 732:.\Protocolo.c **** *                                         uint8 totales(uint8 dir)
 733:.\Protocolo.c **** *
 734:.\Protocolo.c **** * Description : 
 735:.\Protocolo.c **** *               
 736:.\Protocolo.c **** *
 737:.\Protocolo.c **** * Argument(s) : none
 738:.\Protocolo.c **** *
 739:.\Protocolo.c **** * Return(s)   : none
 740:.\Protocolo.c **** *
 741:.\Protocolo.c **** * Caller(s)   : 
 742:.\Protocolo.c **** *
 743:.\Protocolo.c **** * Note(s)     : none.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 66


 744:.\Protocolo.c **** ***************************************************************************************************
 745:.\Protocolo.c **** */
 746:.\Protocolo.c **** uint8 totales(uint8 dir, uint8 nmangueras){
 2883              		.loc 1 746 0
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 16
 2886              		@ frame_needed = 1, uses_anonymous_args = 0
 2887 0000 80B5     		push	{r7, lr}
 2888              		.cfi_def_cfa_offset 8
 2889              		.cfi_offset 7, -8
 2890              		.cfi_offset 14, -4
 2891 0002 84B0     		sub	sp, sp, #16
 2892              		.cfi_def_cfa_offset 24
 2893 0004 00AF     		add	r7, sp, #0
 2894              		.cfi_def_cfa_register 7
 2895 0006 0346     		mov	r3, r0
 2896 0008 0A46     		mov	r2, r1
 2897 000a FB71     		strb	r3, [r7, #7]
 2898 000c 1346     		mov	r3, r2
 2899 000e BB71     		strb	r3, [r7, #6]
 747:.\Protocolo.c **** 	uint8 x,y;
 748:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2900              		.loc 1 748 0
 2901 0010 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 749:.\Protocolo.c ****     Surtidor_PutChar(0x50|dir);
 2902              		.loc 1 749 0
 2903 0014 FB79     		ldrb	r3, [r7, #7]
 2904 0016 43F05003 		orr	r3, r3, #80
 2905 001a DBB2     		uxtb	r3, r3
 2906 001c 1846     		mov	r0, r3
 2907 001e FFF7FEFF 		bl	Surtidor_PutChar
 750:.\Protocolo.c ****     rx_timeout=0;
 2908              		.loc 1 750 0
 2909 0022 B04B     		ldr	r3, .L355
 2910 0024 0022     		movs	r2, #0
 2911 0026 1A70     		strb	r2, [r3]
 751:.\Protocolo.c **** 	CyDelay(300);
 2912              		.loc 1 751 0
 2913 0028 4FF49670 		mov	r0, #300
 2914 002c FFF7FEFF 		bl	CyDelay
 752:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 2915              		.loc 1 752 0
 2916 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2917 0034 0346     		mov	r3, r0
 2918 0036 002B     		cmp	r3, #0
 2919 0038 01F02280 		beq	.L154
 753:.\Protocolo.c **** 		if(dir==lado1.dir){
 2920              		.loc 1 753 0
 2921 003c AA4B     		ldr	r3, .L355+4
 2922 003e 1B78     		ldrb	r3, [r3]
 2923 0040 DBB2     		uxtb	r3, r3
 2924 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2925 0044 9A42     		cmp	r2, r3
 2926 0046 40F01F84 		bne	.L155
 754:.\Protocolo.c **** 			if(version[1]!=7){
 2927              		.loc 1 754 0
 2928 004a A84B     		ldr	r3, .L355+8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 67


 2929 004c 5B78     		ldrb	r3, [r3, #1]
 2930 004e DBB2     		uxtb	r3, r3
 2931 0050 072B     		cmp	r3, #7
 2932 0052 00F00C82 		beq	.L156
 755:.\Protocolo.c **** 				CyDelay(900);
 2933              		.loc 1 755 0
 2934 0056 4FF46170 		mov	r0, #900
 2935 005a FFF7FEFF 		bl	CyDelay
 756:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 2936              		.loc 1 756 0
 2937 005e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2938 0062 0346     		mov	r3, r0
 2939 0064 FB73     		strb	r3, [r7, #15]
 757:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 2940              		.loc 1 757 0
 2941 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2942 0068 222B     		cmp	r3, #34
 2943 006a 06D0     		beq	.L157
 2944              		.loc 1 757 0 is_stmt 0 discriminator 1
 2945 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2946 006e 402B     		cmp	r3, #64
 2947 0070 03D0     		beq	.L157
 2948              		.loc 1 757 0 discriminator 2
 2949 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2950 0074 5E2B     		cmp	r3, #94
 2951 0076 40F0F581 		bne	.L158
 2952              	.L157:
 758:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9))  
 2953              		.loc 1 758 0 is_stmt 1
 2954 007a 9D4B     		ldr	r3, .L355+12
 2955 007c 1B78     		ldrb	r3, [r3]
 2956 007e DBB2     		uxtb	r3, r3
 2957 0080 FF2B     		cmp	r3, #255
 2958 0082 40F0EA81 		bne	.L159
 2959              		.loc 1 758 0 is_stmt 0 discriminator 1
 2960 0086 9A4B     		ldr	r3, .L355+12
 2961 0088 5B78     		ldrb	r3, [r3, #1]
 2962 008a DBB2     		uxtb	r3, r3
 2963 008c F62B     		cmp	r3, #246
 2964 008e 40F0E481 		bne	.L159
 2965              		.loc 1 758 0 discriminator 2
 2966 0092 974B     		ldr	r3, .L355+12
 2967 0094 DB78     		ldrb	r3, [r3, #3]
 2968 0096 DBB2     		uxtb	r3, r3
 2969 0098 F92B     		cmp	r3, #249
 2970 009a 40F0DE81 		bne	.L159
 759:.\Protocolo.c ****                     {                     
 760:.\Protocolo.c ****                     	for(y=0;y<=2;y++){// MOD: inicializa valores en cero
 2971              		.loc 1 760 0 is_stmt 1
 2972 009e 0023     		movs	r3, #0
 2973 00a0 BB73     		strb	r3, [r7, #14]
 2974 00a2 16E0     		b	.L160
 2975              	.L163:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2976              		.loc 1 761 0
 2977 00a4 0023     		movs	r3, #0
 2978 00a6 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 68


 2979 00a8 0DE0     		b	.L161
 2980              	.L162:
 762:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 2981              		.loc 1 762 0 discriminator 3
 2982 00aa BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2983 00ac F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 2984 00ae 8E48     		ldr	r0, .L355+4
 2985 00b0 1346     		mov	r3, r2
 2986 00b2 5B00     		lsls	r3, r3, #1
 2987 00b4 1344     		add	r3, r3, r2
 2988 00b6 DB00     		lsls	r3, r3, #3
 2989 00b8 0B44     		add	r3, r3, r1
 2990 00ba 0344     		add	r3, r3, r0
 2991 00bc 0022     		movs	r2, #0
 2992 00be 9A70     		strb	r2, [r3, #2]
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2993              		.loc 1 761 0 discriminator 3
 2994 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2995 00c2 0133     		adds	r3, r3, #1
 2996 00c4 FB73     		strb	r3, [r7, #15]
 2997              	.L161:
 761:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 2998              		.loc 1 761 0 is_stmt 0 discriminator 1
 2999 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3000 00c8 172B     		cmp	r3, #23
 3001 00ca EED9     		bls	.L162
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3002              		.loc 1 760 0 is_stmt 1 discriminator 2
 3003 00cc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3004 00ce 0133     		adds	r3, r3, #1
 3005 00d0 BB73     		strb	r3, [r7, #14]
 3006              	.L160:
 760:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3007              		.loc 1 760 0 is_stmt 0 discriminator 1
 3008 00d2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3009 00d4 022B     		cmp	r3, #2
 3010 00d6 E5D9     		bls	.L163
 763:.\Protocolo.c ****                     		}
 764:.\Protocolo.c ****                     	}                        
 765:.\Protocolo.c **** 						for(x=0;x<=7;x++){///producto 1 6xto digito
 3011              		.loc 1 765 0 is_stmt 1
 3012 00d8 0023     		movs	r3, #0
 3013 00da FB73     		strb	r3, [r7, #15]
 3014 00dc 21E0     		b	.L164
 3015              	.L168:
 766:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3016              		.loc 1 766 0
 3017 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3018 00e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3019 00e2 0432     		adds	r2, r2, #4
 3020 00e4 8249     		ldr	r1, .L355+12
 3021 00e6 8A5C     		ldrb	r2, [r1, r2]
 3022 00e8 D1B2     		uxtb	r1, r2
 3023 00ea 7F4A     		ldr	r2, .L355+4
 3024 00ec 1344     		add	r3, r3, r2
 3025 00ee 0A46     		mov	r2, r1
 3026 00f0 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 69


 767:.\Protocolo.c ****                             ///////////''modificacion actual''//// Se añade esta verificacion para
 768:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3027              		.loc 1 768 0
 3028 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3029 00f4 7C4A     		ldr	r2, .L355+4
 3030 00f6 1344     		add	r3, r3, r2
 3031 00f8 9B78     		ldrb	r3, [r3, #2]
 3032 00fa DBB2     		uxtb	r3, r3
 3033 00fc 002B     		cmp	r3, #0
 3034 00fe 08D0     		beq	.L165
 3035              		.loc 1 768 0 is_stmt 0 discriminator 1
 3036 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3037 0102 794A     		ldr	r2, .L355+4
 3038 0104 1344     		add	r3, r3, r2
 3039 0106 9B78     		ldrb	r3, [r3, #2]
 3040 0108 DBB2     		uxtb	r3, r3
 3041 010a 03F0F003 		and	r3, r3, #240
 3042 010e E02B     		cmp	r3, #224
 3043 0110 04D0     		beq	.L166
 3044              	.L165:
 769:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3045              		.loc 1 769 0 is_stmt 1
 3046 0112 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 770:.\Protocolo.c **** 								return 0;
 3047              		.loc 1 770 0
 3048 0116 0023     		movs	r3, #0
 3049 0118 00F0B3BF 		b	.L167
 3050              	.L166:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3051              		.loc 1 765 0 discriminator 2
 3052 011c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3053 011e 0133     		adds	r3, r3, #1
 3054 0120 FB73     		strb	r3, [r7, #15]
 3055              	.L164:
 765:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3056              		.loc 1 765 0 is_stmt 0 discriminator 1
 3057 0122 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3058 0124 072B     		cmp	r3, #7
 3059 0126 DAD9     		bls	.L168
 771:.\Protocolo.c **** 							}
 772:.\Protocolo.c ****                             ///////////''modificacion actual''////
 773:.\Protocolo.c **** 						}
 774:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3060              		.loc 1 774 0 is_stmt 1
 3061 0128 0023     		movs	r3, #0
 3062 012a FB73     		strb	r3, [r7, #15]
 3063 012c 24E0     		b	.L169
 3064              	.L172:
 775:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3065              		.loc 1 775 0
 3066 012e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3067 0130 0C33     		adds	r3, r3, #12
 3068 0132 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3069 0134 0D32     		adds	r2, r2, #13
 3070 0136 6E49     		ldr	r1, .L355+12
 3071 0138 8A5C     		ldrb	r2, [r1, r2]
 3072 013a D1B2     		uxtb	r1, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 70


 3073 013c 6A4A     		ldr	r2, .L355+4
 3074 013e 1344     		add	r3, r3, r2
 3075 0140 0A46     		mov	r2, r1
 3076 0142 9A70     		strb	r2, [r3, #2]
 776:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3077              		.loc 1 776 0
 3078 0144 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3079 0146 0C33     		adds	r3, r3, #12
 3080 0148 674A     		ldr	r2, .L355+4
 3081 014a 1344     		add	r3, r3, r2
 3082 014c 9B78     		ldrb	r3, [r3, #2]
 3083 014e DBB2     		uxtb	r3, r3
 3084 0150 002B     		cmp	r3, #0
 3085 0152 09D0     		beq	.L170
 3086              		.loc 1 776 0 is_stmt 0 discriminator 1
 3087 0154 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3088 0156 0C33     		adds	r3, r3, #12
 3089 0158 634A     		ldr	r2, .L355+4
 3090 015a 1344     		add	r3, r3, r2
 3091 015c 9B78     		ldrb	r3, [r3, #2]
 3092 015e DBB2     		uxtb	r3, r3
 3093 0160 03F0F003 		and	r3, r3, #240
 3094 0164 E02B     		cmp	r3, #224
 3095 0166 04D0     		beq	.L171
 3096              	.L170:
 777:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3097              		.loc 1 777 0 is_stmt 1
 3098 0168 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 778:.\Protocolo.c **** 								return 0;
 3099              		.loc 1 778 0
 3100 016c 0023     		movs	r3, #0
 3101 016e 00F088BF 		b	.L167
 3102              	.L171:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3103              		.loc 1 774 0 discriminator 2
 3104 0172 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3105 0174 0133     		adds	r3, r3, #1
 3106 0176 FB73     		strb	r3, [r7, #15]
 3107              	.L169:
 774:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3108              		.loc 1 774 0 is_stmt 0 discriminator 1
 3109 0178 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3110 017a 072B     		cmp	r3, #7
 3111 017c D7D9     		bls	.L172
 779:.\Protocolo.c **** 							}							
 780:.\Protocolo.c **** 						}
 781:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3112              		.loc 1 781 0 is_stmt 1
 3113 017e 0023     		movs	r3, #0
 3114 0180 FB73     		strb	r3, [r7, #15]
 3115 0182 0DE0     		b	.L173
 3116              	.L174:
 782:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3117              		.loc 1 782 0 discriminator 3
 3118 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3119 0186 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3120 0188 1632     		adds	r2, r2, #22
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 71


 3121 018a 5949     		ldr	r1, .L355+12
 3122 018c 8A5C     		ldrb	r2, [r1, r2]
 3123 018e D1B2     		uxtb	r1, r2
 3124 0190 554A     		ldr	r2, .L355+4
 3125 0192 1344     		add	r3, r3, r2
 3126 0194 0A46     		mov	r2, r1
 3127 0196 83F84A20 		strb	r2, [r3, #74]
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3128              		.loc 1 781 0 discriminator 3
 3129 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3130 019c 0133     		adds	r3, r3, #1
 3131 019e FB73     		strb	r3, [r7, #15]
 3132              	.L173:
 781:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];							
 3133              		.loc 1 781 0 is_stmt 0 discriminator 1
 3134 01a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3135 01a2 032B     		cmp	r3, #3
 3136 01a4 EED9     		bls	.L174
 783:.\Protocolo.c **** 						}					
 784:.\Protocolo.c **** 						if(nmangueras==2){
 3137              		.loc 1 784 0 is_stmt 1
 3138 01a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3139 01a8 022B     		cmp	r3, #2
 3140 01aa 6BD1     		bne	.L175
 785:.\Protocolo.c **** 							for(x=0;x<=7;x++){ ///producto 2
 3141              		.loc 1 785 0
 3142 01ac 0023     		movs	r3, #0
 3143 01ae FB73     		strb	r3, [r7, #15]
 3144 01b0 21E0     		b	.L176
 3145              	.L179:
 786:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3146              		.loc 1 786 0
 3147 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3148 01b4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3149 01b6 2232     		adds	r2, r2, #34
 3150 01b8 4D49     		ldr	r1, .L355+12
 3151 01ba 8A5C     		ldrb	r2, [r1, r2]
 3152 01bc D1B2     		uxtb	r1, r2
 3153 01be 4A4A     		ldr	r2, .L355+4
 3154 01c0 1344     		add	r3, r3, r2
 3155 01c2 0A46     		mov	r2, r1
 3156 01c4 9A76     		strb	r2, [r3, #26]
 787:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3157              		.loc 1 787 0
 3158 01c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3159 01c8 474A     		ldr	r2, .L355+4
 3160 01ca 1344     		add	r3, r3, r2
 3161 01cc 9B7E     		ldrb	r3, [r3, #26]
 3162 01ce DBB2     		uxtb	r3, r3
 3163 01d0 002B     		cmp	r3, #0
 3164 01d2 08D0     		beq	.L177
 3165              		.loc 1 787 0 is_stmt 0 discriminator 1
 3166 01d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3167 01d6 444A     		ldr	r2, .L355+4
 3168 01d8 1344     		add	r3, r3, r2
 3169 01da 9B7E     		ldrb	r3, [r3, #26]
 3170 01dc DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 72


 3171 01de 03F0F003 		and	r3, r3, #240
 3172 01e2 E02B     		cmp	r3, #224
 3173 01e4 04D0     		beq	.L178
 3174              	.L177:
 788:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3175              		.loc 1 788 0 is_stmt 1
 3176 01e6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 789:.\Protocolo.c **** 									return 0;
 3177              		.loc 1 789 0
 3178 01ea 0023     		movs	r3, #0
 3179 01ec 00F049BF 		b	.L167
 3180              	.L178:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3181              		.loc 1 785 0 discriminator 2
 3182 01f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3183 01f2 0133     		adds	r3, r3, #1
 3184 01f4 FB73     		strb	r3, [r7, #15]
 3185              	.L176:
 785:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3186              		.loc 1 785 0 is_stmt 0 discriminator 1
 3187 01f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3188 01f8 072B     		cmp	r3, #7
 3189 01fa DAD9     		bls	.L179
 790:.\Protocolo.c **** 								}								
 791:.\Protocolo.c **** 							}
 792:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3190              		.loc 1 792 0 is_stmt 1
 3191 01fc 0023     		movs	r3, #0
 3192 01fe FB73     		strb	r3, [r7, #15]
 3193 0200 24E0     		b	.L180
 3194              	.L183:
 793:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3195              		.loc 1 793 0
 3196 0202 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3197 0204 0C33     		adds	r3, r3, #12
 3198 0206 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3199 0208 2B32     		adds	r2, r2, #43
 3200 020a 3949     		ldr	r1, .L355+12
 3201 020c 8A5C     		ldrb	r2, [r1, r2]
 3202 020e D1B2     		uxtb	r1, r2
 3203 0210 354A     		ldr	r2, .L355+4
 3204 0212 1344     		add	r3, r3, r2
 3205 0214 0A46     		mov	r2, r1
 3206 0216 9A76     		strb	r2, [r3, #26]
 794:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3207              		.loc 1 794 0
 3208 0218 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3209 021a 0C33     		adds	r3, r3, #12
 3210 021c 324A     		ldr	r2, .L355+4
 3211 021e 1344     		add	r3, r3, r2
 3212 0220 9B7E     		ldrb	r3, [r3, #26]
 3213 0222 DBB2     		uxtb	r3, r3
 3214 0224 002B     		cmp	r3, #0
 3215 0226 09D0     		beq	.L181
 3216              		.loc 1 794 0 is_stmt 0 discriminator 1
 3217 0228 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3218 022a 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 73


 3219 022c 2E4A     		ldr	r2, .L355+4
 3220 022e 1344     		add	r3, r3, r2
 3221 0230 9B7E     		ldrb	r3, [r3, #26]
 3222 0232 DBB2     		uxtb	r3, r3
 3223 0234 03F0F003 		and	r3, r3, #240
 3224 0238 E02B     		cmp	r3, #224
 3225 023a 04D0     		beq	.L182
 3226              	.L181:
 795:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3227              		.loc 1 795 0 is_stmt 1
 3228 023c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 796:.\Protocolo.c **** 									return 0;
 3229              		.loc 1 796 0
 3230 0240 0023     		movs	r3, #0
 3231 0242 00F01EBF 		b	.L167
 3232              	.L182:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3233              		.loc 1 792 0 discriminator 2
 3234 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3235 0248 0133     		adds	r3, r3, #1
 3236 024a FB73     		strb	r3, [r7, #15]
 3237              	.L180:
 792:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3238              		.loc 1 792 0 is_stmt 0 discriminator 1
 3239 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3240 024e 072B     		cmp	r3, #7
 3241 0250 D7D9     		bls	.L183
 797:.\Protocolo.c **** 								}								
 798:.\Protocolo.c **** 							}
 799:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3242              		.loc 1 799 0 is_stmt 1
 3243 0252 0023     		movs	r3, #0
 3244 0254 FB73     		strb	r3, [r7, #15]
 3245 0256 0DE0     		b	.L184
 3246              	.L185:
 800:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3247              		.loc 1 800 0 discriminator 3
 3248 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3249 025a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3250 025c 3432     		adds	r2, r2, #52
 3251 025e 2449     		ldr	r1, .L355+12
 3252 0260 8A5C     		ldrb	r2, [r1, r2]
 3253 0262 D1B2     		uxtb	r1, r2
 3254 0264 204A     		ldr	r2, .L355+4
 3255 0266 1344     		add	r3, r3, r2
 3256 0268 0A46     		mov	r2, r1
 3257 026a 83F84F20 		strb	r2, [r3, #79]
 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3258              		.loc 1 799 0 discriminator 3
 3259 026e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3260 0270 0133     		adds	r3, r3, #1
 3261 0272 FB73     		strb	r3, [r7, #15]
 3262              	.L184:
 799:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3263              		.loc 1 799 0 is_stmt 0 discriminator 1
 3264 0274 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3265 0276 032B     		cmp	r3, #3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 74


 3266 0278 EED9     		bls	.L185
 801:.\Protocolo.c **** 							}	
 802:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3267              		.loc 1 802 0 is_stmt 1
 3268 027a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 803:.\Protocolo.c ****     						return 2;                            
 3269              		.loc 1 803 0
 3270 027e 0223     		movs	r3, #2
 3271 0280 00F0FFBE 		b	.L167
 3272              	.L175:
 804:.\Protocolo.c **** 						}
 805:.\Protocolo.c **** 						if(nmangueras==3){
 3273              		.loc 1 805 0
 3274 0284 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3275 0286 032B     		cmp	r3, #3
 3276 0288 40F0E280 		bne	.L186
 806:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 2
 3277              		.loc 1 806 0
 3278 028c 0023     		movs	r3, #0
 3279 028e FB73     		strb	r3, [r7, #15]
 3280 0290 21E0     		b	.L187
 3281              	.L190:
 807:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3282              		.loc 1 807 0
 3283 0292 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3284 0294 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3285 0296 2232     		adds	r2, r2, #34
 3286 0298 1549     		ldr	r1, .L355+12
 3287 029a 8A5C     		ldrb	r2, [r1, r2]
 3288 029c D1B2     		uxtb	r1, r2
 3289 029e 124A     		ldr	r2, .L355+4
 3290 02a0 1344     		add	r3, r3, r2
 3291 02a2 0A46     		mov	r2, r1
 3292 02a4 9A76     		strb	r2, [r3, #26]
 808:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3293              		.loc 1 808 0
 3294 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3295 02a8 0F4A     		ldr	r2, .L355+4
 3296 02aa 1344     		add	r3, r3, r2
 3297 02ac 9B7E     		ldrb	r3, [r3, #26]
 3298 02ae DBB2     		uxtb	r3, r3
 3299 02b0 002B     		cmp	r3, #0
 3300 02b2 08D0     		beq	.L188
 3301              		.loc 1 808 0 is_stmt 0 discriminator 1
 3302 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3303 02b6 0C4A     		ldr	r2, .L355+4
 3304 02b8 1344     		add	r3, r3, r2
 3305 02ba 9B7E     		ldrb	r3, [r3, #26]
 3306 02bc DBB2     		uxtb	r3, r3
 3307 02be 03F0F003 		and	r3, r3, #240
 3308 02c2 E02B     		cmp	r3, #224
 3309 02c4 04D0     		beq	.L189
 3310              	.L188:
 809:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3311              		.loc 1 809 0 is_stmt 1
 3312 02c6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 810:.\Protocolo.c **** 									return 0;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 75


 3313              		.loc 1 810 0
 3314 02ca 0023     		movs	r3, #0
 3315 02cc 00F0D9BE 		b	.L167
 3316              	.L189:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3317              		.loc 1 806 0 discriminator 2
 3318 02d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3319 02d2 0133     		adds	r3, r3, #1
 3320 02d4 FB73     		strb	r3, [r7, #15]
 3321              	.L187:
 806:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3322              		.loc 1 806 0 is_stmt 0 discriminator 1
 3323 02d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3324 02d8 072B     		cmp	r3, #7
 3325 02da DAD9     		bls	.L190
 811:.\Protocolo.c **** 								}								
 812:.\Protocolo.c **** 							}
 813:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3326              		.loc 1 813 0 is_stmt 1
 3327 02dc 0023     		movs	r3, #0
 3328 02de FB73     		strb	r3, [r7, #15]
 3329 02e0 2DE0     		b	.L191
 3330              	.L356:
 3331 02e2 00BF     		.align	2
 3332              	.L355:
 3333 02e4 00000000 		.word	rx_timeout
 3334 02e8 00000000 		.word	lado1
 3335 02ec 00000000 		.word	version
 3336 02f0 00000000 		.word	Surtidor_rxBuffer
 3337              	.L194:
 814:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3338              		.loc 1 814 0
 3339 02f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3340 02f6 0C33     		adds	r3, r3, #12
 3341 02f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3342 02fa 2B32     		adds	r2, r2, #43
 3343 02fc B349     		ldr	r1, .L357
 3344 02fe 8A5C     		ldrb	r2, [r1, r2]
 3345 0300 D1B2     		uxtb	r1, r2
 3346 0302 B34A     		ldr	r2, .L357+4
 3347 0304 1344     		add	r3, r3, r2
 3348 0306 0A46     		mov	r2, r1
 3349 0308 9A76     		strb	r2, [r3, #26]
 815:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3350              		.loc 1 815 0
 3351 030a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3352 030c 0C33     		adds	r3, r3, #12
 3353 030e B04A     		ldr	r2, .L357+4
 3354 0310 1344     		add	r3, r3, r2
 3355 0312 9B7E     		ldrb	r3, [r3, #26]
 3356 0314 DBB2     		uxtb	r3, r3
 3357 0316 002B     		cmp	r3, #0
 3358 0318 09D0     		beq	.L192
 3359              		.loc 1 815 0 is_stmt 0 discriminator 1
 3360 031a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3361 031c 0C33     		adds	r3, r3, #12
 3362 031e AC4A     		ldr	r2, .L357+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 76


 3363 0320 1344     		add	r3, r3, r2
 3364 0322 9B7E     		ldrb	r3, [r3, #26]
 3365 0324 DBB2     		uxtb	r3, r3
 3366 0326 03F0F003 		and	r3, r3, #240
 3367 032a E02B     		cmp	r3, #224
 3368 032c 04D0     		beq	.L193
 3369              	.L192:
 816:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3370              		.loc 1 816 0 is_stmt 1
 3371 032e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 817:.\Protocolo.c **** 									return 0;
 3372              		.loc 1 817 0
 3373 0332 0023     		movs	r3, #0
 3374 0334 00F0A5BE 		b	.L167
 3375              	.L193:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3376              		.loc 1 813 0 discriminator 2
 3377 0338 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3378 033a 0133     		adds	r3, r3, #1
 3379 033c FB73     		strb	r3, [r7, #15]
 3380              	.L191:
 813:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3381              		.loc 1 813 0 is_stmt 0 discriminator 1
 3382 033e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3383 0340 072B     		cmp	r3, #7
 3384 0342 D7D9     		bls	.L194
 818:.\Protocolo.c **** 								}								
 819:.\Protocolo.c **** 							}
 820:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3385              		.loc 1 820 0 is_stmt 1
 3386 0344 0023     		movs	r3, #0
 3387 0346 FB73     		strb	r3, [r7, #15]
 3388 0348 0DE0     		b	.L195
 3389              	.L196:
 821:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3390              		.loc 1 821 0 discriminator 3
 3391 034a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3392 034c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3393 034e 3432     		adds	r2, r2, #52
 3394 0350 9E49     		ldr	r1, .L357
 3395 0352 8A5C     		ldrb	r2, [r1, r2]
 3396 0354 D1B2     		uxtb	r1, r2
 3397 0356 9E4A     		ldr	r2, .L357+4
 3398 0358 1344     		add	r3, r3, r2
 3399 035a 0A46     		mov	r2, r1
 3400 035c 83F84F20 		strb	r2, [r3, #79]
 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3401              		.loc 1 820 0 discriminator 3
 3402 0360 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3403 0362 0133     		adds	r3, r3, #1
 3404 0364 FB73     		strb	r3, [r7, #15]
 3405              	.L195:
 820:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3406              		.loc 1 820 0 is_stmt 0 discriminator 1
 3407 0366 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3408 0368 032B     		cmp	r3, #3
 3409 036a EED9     		bls	.L196
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 77


 822:.\Protocolo.c **** 							}					
 823:.\Protocolo.c **** 							for(x=0;x<=7;x++){///producto 3
 3410              		.loc 1 823 0 is_stmt 1
 3411 036c 0023     		movs	r3, #0
 3412 036e FB73     		strb	r3, [r7, #15]
 3413 0370 24E0     		b	.L197
 3414              	.L200:
 824:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3415              		.loc 1 824 0
 3416 0372 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3417 0374 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3418 0376 4032     		adds	r2, r2, #64
 3419 0378 9449     		ldr	r1, .L357
 3420 037a 8A5C     		ldrb	r2, [r1, r2]
 3421 037c D1B2     		uxtb	r1, r2
 3422 037e 944A     		ldr	r2, .L357+4
 3423 0380 1344     		add	r3, r3, r2
 3424 0382 0A46     		mov	r2, r1
 3425 0384 83F83220 		strb	r2, [r3, #50]
 825:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 3426              		.loc 1 825 0
 3427 0388 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3428 038a 914A     		ldr	r2, .L357+4
 3429 038c 1344     		add	r3, r3, r2
 3430 038e 93F83230 		ldrb	r3, [r3, #50]
 3431 0392 DBB2     		uxtb	r3, r3
 3432 0394 002B     		cmp	r3, #0
 3433 0396 09D0     		beq	.L198
 3434              		.loc 1 825 0 is_stmt 0 discriminator 1
 3435 0398 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3436 039a 8D4A     		ldr	r2, .L357+4
 3437 039c 1344     		add	r3, r3, r2
 3438 039e 93F83230 		ldrb	r3, [r3, #50]
 3439 03a2 DBB2     		uxtb	r3, r3
 3440 03a4 03F0F003 		and	r3, r3, #240
 3441 03a8 E02B     		cmp	r3, #224
 3442 03aa 04D0     		beq	.L199
 3443              	.L198:
 826:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3444              		.loc 1 826 0 is_stmt 1
 3445 03ac FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 827:.\Protocolo.c **** 									return 0;
 3446              		.loc 1 827 0
 3447 03b0 0023     		movs	r3, #0
 3448 03b2 00F066BE 		b	.L167
 3449              	.L199:
 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3450              		.loc 1 823 0 discriminator 2
 3451 03b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3452 03b8 0133     		adds	r3, r3, #1
 3453 03ba FB73     		strb	r3, [r7, #15]
 3454              	.L197:
 823:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3455              		.loc 1 823 0 is_stmt 0 discriminator 1
 3456 03bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3457 03be 072B     		cmp	r3, #7
 3458 03c0 D7D9     		bls	.L200
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 78


 828:.\Protocolo.c **** 								}								
 829:.\Protocolo.c **** 							}
 830:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3459              		.loc 1 830 0 is_stmt 1
 3460 03c2 0023     		movs	r3, #0
 3461 03c4 FB73     		strb	r3, [r7, #15]
 3462 03c6 27E0     		b	.L201
 3463              	.L204:
 831:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3464              		.loc 1 831 0
 3465 03c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3466 03ca 0C33     		adds	r3, r3, #12
 3467 03cc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3468 03ce 4932     		adds	r2, r2, #73
 3469 03d0 7E49     		ldr	r1, .L357
 3470 03d2 8A5C     		ldrb	r2, [r1, r2]
 3471 03d4 D1B2     		uxtb	r1, r2
 3472 03d6 7E4A     		ldr	r2, .L357+4
 3473 03d8 1344     		add	r3, r3, r2
 3474 03da 0A46     		mov	r2, r1
 3475 03dc 83F83220 		strb	r2, [r3, #50]
 832:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 3476              		.loc 1 832 0
 3477 03e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3478 03e2 0C33     		adds	r3, r3, #12
 3479 03e4 7A4A     		ldr	r2, .L357+4
 3480 03e6 1344     		add	r3, r3, r2
 3481 03e8 93F83230 		ldrb	r3, [r3, #50]
 3482 03ec DBB2     		uxtb	r3, r3
 3483 03ee 002B     		cmp	r3, #0
 3484 03f0 0AD0     		beq	.L202
 3485              		.loc 1 832 0 is_stmt 0 discriminator 1
 3486 03f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3487 03f4 0C33     		adds	r3, r3, #12
 3488 03f6 764A     		ldr	r2, .L357+4
 3489 03f8 1344     		add	r3, r3, r2
 3490 03fa 93F83230 		ldrb	r3, [r3, #50]
 3491 03fe DBB2     		uxtb	r3, r3
 3492 0400 03F0F003 		and	r3, r3, #240
 3493 0404 E02B     		cmp	r3, #224
 3494 0406 04D0     		beq	.L203
 3495              	.L202:
 833:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3496              		.loc 1 833 0 is_stmt 1
 3497 0408 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 834:.\Protocolo.c **** 									return 0;
 3498              		.loc 1 834 0
 3499 040c 0023     		movs	r3, #0
 3500 040e 00F038BE 		b	.L167
 3501              	.L203:
 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3502              		.loc 1 830 0 discriminator 2
 3503 0412 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3504 0414 0133     		adds	r3, r3, #1
 3505 0416 FB73     		strb	r3, [r7, #15]
 3506              	.L201:
 830:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 79


 3507              		.loc 1 830 0 is_stmt 0 discriminator 1
 3508 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3509 041a 072B     		cmp	r3, #7
 3510 041c D4D9     		bls	.L204
 835:.\Protocolo.c **** 								}								
 836:.\Protocolo.c **** 							}
 837:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3511              		.loc 1 837 0 is_stmt 1
 3512 041e 0023     		movs	r3, #0
 3513 0420 FB73     		strb	r3, [r7, #15]
 3514 0422 0DE0     		b	.L205
 3515              	.L206:
 838:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3516              		.loc 1 838 0 discriminator 3
 3517 0424 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3518 0426 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3519 0428 5232     		adds	r2, r2, #82
 3520 042a 6849     		ldr	r1, .L357
 3521 042c 8A5C     		ldrb	r2, [r1, r2]
 3522 042e D1B2     		uxtb	r1, r2
 3523 0430 674A     		ldr	r2, .L357+4
 3524 0432 1344     		add	r3, r3, r2
 3525 0434 0A46     		mov	r2, r1
 3526 0436 83F85420 		strb	r2, [r3, #84]
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3527              		.loc 1 837 0 discriminator 3
 3528 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3529 043c 0133     		adds	r3, r3, #1
 3530 043e FB73     		strb	r3, [r7, #15]
 3531              	.L205:
 837:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3532              		.loc 1 837 0 is_stmt 0 discriminator 1
 3533 0440 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3534 0442 032B     		cmp	r3, #3
 3535 0444 EED9     		bls	.L206
 839:.\Protocolo.c **** 							}
 840:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3536              		.loc 1 840 0 is_stmt 1
 3537 0446 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 841:.\Protocolo.c ****     						return 3;                            
 3538              		.loc 1 841 0
 3539 044a 0323     		movs	r3, #3
 3540 044c 00F019BE 		b	.L167
 3541              	.L186:
 842:.\Protocolo.c **** 						}
 843:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3542              		.loc 1 843 0
 3543 0450 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 844:.\Protocolo.c **** 						return 1;
 3544              		.loc 1 844 0
 3545 0454 0123     		movs	r3, #1
 3546 0456 00F014BE 		b	.L167
 3547              	.L159:
 845:.\Protocolo.c **** 					}
 846:.\Protocolo.c **** 					else{
 847:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3548              		.loc 1 847 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 80


 3549 045a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 848:.\Protocolo.c **** 						return 0;
 3550              		.loc 1 848 0
 3551 045e 0023     		movs	r3, #0
 3552 0460 00F00FBE 		b	.L167
 3553              	.L158:
 849:.\Protocolo.c **** 					}					
 850:.\Protocolo.c **** 				}
 851:.\Protocolo.c **** 				else{
 852:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 3554              		.loc 1 852 0
 3555 0464 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 853:.\Protocolo.c **** 					return 0;		
 3556              		.loc 1 853 0
 3557 0468 0023     		movs	r3, #0
 3558 046a 00F00ABE 		b	.L167
 3559              	.L156:
 854:.\Protocolo.c **** 				}
 855:.\Protocolo.c **** 			}
 856:.\Protocolo.c **** 			else{
 857:.\Protocolo.c **** 				CyDelay(900);
 3560              		.loc 1 857 0
 3561 046e 4FF46170 		mov	r0, #900
 3562 0472 FFF7FEFF 		bl	CyDelay
 858:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3563              		.loc 1 858 0
 3564 0476 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3565 047a 0346     		mov	r3, r0
 3566 047c FB73     		strb	r3, [r7, #15]
 859:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 3567              		.loc 1 859 0
 3568 047e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3569 0480 2E2B     		cmp	r3, #46
 3570 0482 06D0     		beq	.L207
 3571              		.loc 1 859 0 is_stmt 0 discriminator 1
 3572 0484 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3573 0486 582B     		cmp	r3, #88
 3574 0488 03D0     		beq	.L207
 3575              		.loc 1 859 0 discriminator 2
 3576 048a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3577 048c 822B     		cmp	r3, #130
 3578 048e 40F0F181 		bne	.L208
 3579              	.L207:
 860:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3580              		.loc 1 860 0 is_stmt 1
 3581 0492 4E4B     		ldr	r3, .L357
 3582 0494 1B78     		ldrb	r3, [r3]
 3583 0496 DBB2     		uxtb	r3, r3
 3584 0498 FF2B     		cmp	r3, #255
 3585 049a 40F0E681 		bne	.L209
 3586              		.loc 1 860 0 is_stmt 0 discriminator 1
 3587 049e 4B4B     		ldr	r3, .L357
 3588 04a0 5B78     		ldrb	r3, [r3, #1]
 3589 04a2 DBB2     		uxtb	r3, r3
 3590 04a4 F62B     		cmp	r3, #246
 3591 04a6 40F0E081 		bne	.L209
 3592              		.loc 1 860 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 81


 3593 04aa 484B     		ldr	r3, .L357
 3594 04ac DB78     		ldrb	r3, [r3, #3]
 3595 04ae DBB2     		uxtb	r3, r3
 3596 04b0 F92B     		cmp	r3, #249
 3597 04b2 40F0DA81 		bne	.L209
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3598              		.loc 1 861 0 is_stmt 1
 3599 04b6 0023     		movs	r3, #0
 3600 04b8 BB73     		strb	r3, [r7, #14]
 3601 04ba 16E0     		b	.L210
 3602              	.L213:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3603              		.loc 1 862 0
 3604 04bc 0023     		movs	r3, #0
 3605 04be FB73     		strb	r3, [r7, #15]
 3606 04c0 0DE0     		b	.L211
 3607              	.L212:
 863:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3608              		.loc 1 863 0 discriminator 3
 3609 04c2 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3610 04c4 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 3611 04c6 4248     		ldr	r0, .L357+4
 3612 04c8 1346     		mov	r3, r2
 3613 04ca 5B00     		lsls	r3, r3, #1
 3614 04cc 1344     		add	r3, r3, r2
 3615 04ce DB00     		lsls	r3, r3, #3
 3616 04d0 0B44     		add	r3, r3, r1
 3617 04d2 0344     		add	r3, r3, r0
 3618 04d4 0022     		movs	r2, #0
 3619 04d6 9A70     		strb	r2, [r3, #2]
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3620              		.loc 1 862 0 discriminator 3
 3621 04d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3622 04da 0133     		adds	r3, r3, #1
 3623 04dc FB73     		strb	r3, [r7, #15]
 3624              	.L211:
 862:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3625              		.loc 1 862 0 is_stmt 0 discriminator 1
 3626 04de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3627 04e0 172B     		cmp	r3, #23
 3628 04e2 EED9     		bls	.L212
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3629              		.loc 1 861 0 is_stmt 1 discriminator 2
 3630 04e4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3631 04e6 0133     		adds	r3, r3, #1
 3632 04e8 BB73     		strb	r3, [r7, #14]
 3633              	.L210:
 861:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3634              		.loc 1 861 0 is_stmt 0 discriminator 1
 3635 04ea BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3636 04ec 022B     		cmp	r3, #2
 3637 04ee E5D9     		bls	.L213
 864:.\Protocolo.c ****                     		}
 865:.\Protocolo.c ****                     	}                        
 866:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3638              		.loc 1 866 0 is_stmt 1
 3639 04f0 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 82


 3640 04f2 FB73     		strb	r3, [r7, #15]
 3641 04f4 21E0     		b	.L214
 3642              	.L217:
 867:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3643              		.loc 1 867 0
 3644 04f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3645 04f8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3646 04fa 0432     		adds	r2, r2, #4
 3647 04fc 3349     		ldr	r1, .L357
 3648 04fe 8A5C     		ldrb	r2, [r1, r2]
 3649 0500 D1B2     		uxtb	r1, r2
 3650 0502 334A     		ldr	r2, .L357+4
 3651 0504 1344     		add	r3, r3, r2
 3652 0506 0A46     		mov	r2, r1
 3653 0508 9A70     		strb	r2, [r3, #2]
 868:.\Protocolo.c **** 							if(lado1.totales[0][x]==0||(lado1.totales[0][x]&0xF0)!=0xE0){
 3654              		.loc 1 868 0
 3655 050a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3656 050c 304A     		ldr	r2, .L357+4
 3657 050e 1344     		add	r3, r3, r2
 3658 0510 9B78     		ldrb	r3, [r3, #2]
 3659 0512 DBB2     		uxtb	r3, r3
 3660 0514 002B     		cmp	r3, #0
 3661 0516 08D0     		beq	.L215
 3662              		.loc 1 868 0 is_stmt 0 discriminator 1
 3663 0518 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3664 051a 2D4A     		ldr	r2, .L357+4
 3665 051c 1344     		add	r3, r3, r2
 3666 051e 9B78     		ldrb	r3, [r3, #2]
 3667 0520 DBB2     		uxtb	r3, r3
 3668 0522 03F0F003 		and	r3, r3, #240
 3669 0526 E02B     		cmp	r3, #224
 3670 0528 04D0     		beq	.L216
 3671              	.L215:
 869:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3672              		.loc 1 869 0 is_stmt 1
 3673 052a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 870:.\Protocolo.c **** 								return 0;
 3674              		.loc 1 870 0
 3675 052e 0023     		movs	r3, #0
 3676 0530 00F0A7BD 		b	.L167
 3677              	.L216:
 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3678              		.loc 1 866 0 discriminator 2
 3679 0534 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3680 0536 0133     		adds	r3, r3, #1
 3681 0538 FB73     		strb	r3, [r7, #15]
 3682              	.L214:
 866:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3683              		.loc 1 866 0 is_stmt 0 discriminator 1
 3684 053a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3685 053c 0B2B     		cmp	r3, #11
 3686 053e DAD9     		bls	.L217
 871:.\Protocolo.c **** 							}							
 872:.\Protocolo.c **** 						}
 873:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3687              		.loc 1 873 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 83


 3688 0540 0023     		movs	r3, #0
 3689 0542 FB73     		strb	r3, [r7, #15]
 3690 0544 24E0     		b	.L218
 3691              	.L221:
 874:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3692              		.loc 1 874 0
 3693 0546 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3694 0548 0C33     		adds	r3, r3, #12
 3695 054a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3696 054c 1132     		adds	r2, r2, #17
 3697 054e 1F49     		ldr	r1, .L357
 3698 0550 8A5C     		ldrb	r2, [r1, r2]
 3699 0552 D1B2     		uxtb	r1, r2
 3700 0554 1E4A     		ldr	r2, .L357+4
 3701 0556 1344     		add	r3, r3, r2
 3702 0558 0A46     		mov	r2, r1
 3703 055a 9A70     		strb	r2, [r3, #2]
 875:.\Protocolo.c **** 							if(lado1.totales[0][x+12]==0||(lado1.totales[0][x+12]&0xF0)!=0xE0){
 3704              		.loc 1 875 0
 3705 055c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3706 055e 0C33     		adds	r3, r3, #12
 3707 0560 1B4A     		ldr	r2, .L357+4
 3708 0562 1344     		add	r3, r3, r2
 3709 0564 9B78     		ldrb	r3, [r3, #2]
 3710 0566 DBB2     		uxtb	r3, r3
 3711 0568 002B     		cmp	r3, #0
 3712 056a 09D0     		beq	.L219
 3713              		.loc 1 875 0 is_stmt 0 discriminator 1
 3714 056c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3715 056e 0C33     		adds	r3, r3, #12
 3716 0570 174A     		ldr	r2, .L357+4
 3717 0572 1344     		add	r3, r3, r2
 3718 0574 9B78     		ldrb	r3, [r3, #2]
 3719 0576 DBB2     		uxtb	r3, r3
 3720 0578 03F0F003 		and	r3, r3, #240
 3721 057c E02B     		cmp	r3, #224
 3722 057e 04D0     		beq	.L220
 3723              	.L219:
 876:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 3724              		.loc 1 876 0 is_stmt 1
 3725 0580 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 877:.\Protocolo.c **** 								return 0;
 3726              		.loc 1 877 0
 3727 0584 0023     		movs	r3, #0
 3728 0586 00F07CBD 		b	.L167
 3729              	.L220:
 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3730              		.loc 1 873 0 discriminator 2
 3731 058a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3732 058c 0133     		adds	r3, r3, #1
 3733 058e FB73     		strb	r3, [r7, #15]
 3734              	.L218:
 873:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3735              		.loc 1 873 0 is_stmt 0 discriminator 1
 3736 0590 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3737 0592 0B2B     		cmp	r3, #11
 3738 0594 D7D9     		bls	.L221
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 84


 878:.\Protocolo.c **** 							}							
 879:.\Protocolo.c **** 						}
 880:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3739              		.loc 1 880 0 is_stmt 1
 3740 0596 0023     		movs	r3, #0
 3741 0598 FB73     		strb	r3, [r7, #15]
 3742 059a 0DE0     		b	.L222
 3743              	.L223:
 881:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3744              		.loc 1 881 0 discriminator 3
 3745 059c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3746 059e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3747 05a0 1E32     		adds	r2, r2, #30
 3748 05a2 0A49     		ldr	r1, .L357
 3749 05a4 8A5C     		ldrb	r2, [r1, r2]
 3750 05a6 D1B2     		uxtb	r1, r2
 3751 05a8 094A     		ldr	r2, .L357+4
 3752 05aa 1344     		add	r3, r3, r2
 3753 05ac 0A46     		mov	r2, r1
 3754 05ae 83F84A20 		strb	r2, [r3, #74]
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3755              		.loc 1 880 0 discriminator 3
 3756 05b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3757 05b4 0133     		adds	r3, r3, #1
 3758 05b6 FB73     		strb	r3, [r7, #15]
 3759              	.L222:
 880:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3760              		.loc 1 880 0 is_stmt 0 discriminator 1
 3761 05b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3762 05ba 042B     		cmp	r3, #4
 3763 05bc EED9     		bls	.L223
 882:.\Protocolo.c **** 						}				
 883:.\Protocolo.c **** 						if(nmangueras==2){
 3764              		.loc 1 883 0 is_stmt 1
 3765 05be BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3766 05c0 022B     		cmp	r3, #2
 3767 05c2 70D1     		bne	.L224
 884:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3768              		.loc 1 884 0
 3769 05c4 0023     		movs	r3, #0
 3770 05c6 FB73     		strb	r3, [r7, #15]
 3771 05c8 26E0     		b	.L225
 3772              	.L358:
 3773 05ca 00BF     		.align	2
 3774              	.L357:
 3775 05cc 00000000 		.word	Surtidor_rxBuffer
 3776 05d0 00000000 		.word	lado1
 3777              	.L228:
 885:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3778              		.loc 1 885 0
 3779 05d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3780 05d6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3781 05d8 2E32     		adds	r2, r2, #46
 3782 05da A949     		ldr	r1, .L359
 3783 05dc 8A5C     		ldrb	r2, [r1, r2]
 3784 05de D1B2     		uxtb	r1, r2
 3785 05e0 A84A     		ldr	r2, .L359+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 85


 3786 05e2 1344     		add	r3, r3, r2
 3787 05e4 0A46     		mov	r2, r1
 3788 05e6 9A76     		strb	r2, [r3, #26]
 886:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3789              		.loc 1 886 0
 3790 05e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3791 05ea A64A     		ldr	r2, .L359+4
 3792 05ec 1344     		add	r3, r3, r2
 3793 05ee 9B7E     		ldrb	r3, [r3, #26]
 3794 05f0 DBB2     		uxtb	r3, r3
 3795 05f2 002B     		cmp	r3, #0
 3796 05f4 08D0     		beq	.L226
 3797              		.loc 1 886 0 is_stmt 0 discriminator 1
 3798 05f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3799 05f8 A24A     		ldr	r2, .L359+4
 3800 05fa 1344     		add	r3, r3, r2
 3801 05fc 9B7E     		ldrb	r3, [r3, #26]
 3802 05fe DBB2     		uxtb	r3, r3
 3803 0600 03F0F003 		and	r3, r3, #240
 3804 0604 E02B     		cmp	r3, #224
 3805 0606 04D0     		beq	.L227
 3806              	.L226:
 887:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3807              		.loc 1 887 0 is_stmt 1
 3808 0608 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 888:.\Protocolo.c **** 									return 0;
 3809              		.loc 1 888 0
 3810 060c 0023     		movs	r3, #0
 3811 060e 00F038BD 		b	.L167
 3812              	.L227:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3813              		.loc 1 884 0 discriminator 2
 3814 0612 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3815 0614 0133     		adds	r3, r3, #1
 3816 0616 FB73     		strb	r3, [r7, #15]
 3817              	.L225:
 884:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3818              		.loc 1 884 0 is_stmt 0 discriminator 1
 3819 0618 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3820 061a 0B2B     		cmp	r3, #11
 3821 061c DAD9     		bls	.L228
 889:.\Protocolo.c **** 								}								
 890:.\Protocolo.c **** 							}
 891:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3822              		.loc 1 891 0 is_stmt 1
 3823 061e 0023     		movs	r3, #0
 3824 0620 FB73     		strb	r3, [r7, #15]
 3825 0622 24E0     		b	.L229
 3826              	.L232:
 892:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3827              		.loc 1 892 0
 3828 0624 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3829 0626 0C33     		adds	r3, r3, #12
 3830 0628 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3831 062a 3B32     		adds	r2, r2, #59
 3832 062c 9449     		ldr	r1, .L359
 3833 062e 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 86


 3834 0630 D1B2     		uxtb	r1, r2
 3835 0632 944A     		ldr	r2, .L359+4
 3836 0634 1344     		add	r3, r3, r2
 3837 0636 0A46     		mov	r2, r1
 3838 0638 9A76     		strb	r2, [r3, #26]
 893:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3839              		.loc 1 893 0
 3840 063a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3841 063c 0C33     		adds	r3, r3, #12
 3842 063e 914A     		ldr	r2, .L359+4
 3843 0640 1344     		add	r3, r3, r2
 3844 0642 9B7E     		ldrb	r3, [r3, #26]
 3845 0644 DBB2     		uxtb	r3, r3
 3846 0646 002B     		cmp	r3, #0
 3847 0648 09D0     		beq	.L230
 3848              		.loc 1 893 0 is_stmt 0 discriminator 1
 3849 064a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3850 064c 0C33     		adds	r3, r3, #12
 3851 064e 8D4A     		ldr	r2, .L359+4
 3852 0650 1344     		add	r3, r3, r2
 3853 0652 9B7E     		ldrb	r3, [r3, #26]
 3854 0654 DBB2     		uxtb	r3, r3
 3855 0656 03F0F003 		and	r3, r3, #240
 3856 065a E02B     		cmp	r3, #224
 3857 065c 04D0     		beq	.L231
 3858              	.L230:
 894:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3859              		.loc 1 894 0 is_stmt 1
 3860 065e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 895:.\Protocolo.c **** 									return 0;
 3861              		.loc 1 895 0
 3862 0662 0023     		movs	r3, #0
 3863 0664 00F00DBD 		b	.L167
 3864              	.L231:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3865              		.loc 1 891 0 discriminator 2
 3866 0668 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3867 066a 0133     		adds	r3, r3, #1
 3868 066c FB73     		strb	r3, [r7, #15]
 3869              	.L229:
 891:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3870              		.loc 1 891 0 is_stmt 0 discriminator 1
 3871 066e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3872 0670 0B2B     		cmp	r3, #11
 3873 0672 D7D9     		bls	.L232
 896:.\Protocolo.c **** 								}								
 897:.\Protocolo.c **** 							}
 898:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 3874              		.loc 1 898 0 is_stmt 1
 3875 0674 0023     		movs	r3, #0
 3876 0676 FB73     		strb	r3, [r7, #15]
 3877 0678 0DE0     		b	.L233
 3878              	.L234:
 899:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3879              		.loc 1 899 0 discriminator 3
 3880 067a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3881 067c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 87


 3882 067e 4832     		adds	r2, r2, #72
 3883 0680 7F49     		ldr	r1, .L359
 3884 0682 8A5C     		ldrb	r2, [r1, r2]
 3885 0684 D1B2     		uxtb	r1, r2
 3886 0686 7F4A     		ldr	r2, .L359+4
 3887 0688 1344     		add	r3, r3, r2
 3888 068a 0A46     		mov	r2, r1
 3889 068c 83F84F20 		strb	r2, [r3, #79]
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3890              		.loc 1 898 0 discriminator 3
 3891 0690 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3892 0692 0133     		adds	r3, r3, #1
 3893 0694 FB73     		strb	r3, [r7, #15]
 3894              	.L233:
 898:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 3895              		.loc 1 898 0 is_stmt 0 discriminator 1
 3896 0696 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3897 0698 042B     		cmp	r3, #4
 3898 069a EED9     		bls	.L234
 900:.\Protocolo.c **** 							}
 901:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3899              		.loc 1 901 0 is_stmt 1
 3900 069c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 902:.\Protocolo.c ****     						return 2;                            
 3901              		.loc 1 902 0
 3902 06a0 0223     		movs	r3, #2
 3903 06a2 00F0EEBC 		b	.L167
 3904              	.L224:
 903:.\Protocolo.c **** 						}
 904:.\Protocolo.c **** 						if(nmangueras==3){
 3905              		.loc 1 904 0
 3906 06a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3907 06a8 032B     		cmp	r3, #3
 3908 06aa 40F0D980 		bne	.L235
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3909              		.loc 1 905 0
 3910 06ae 0023     		movs	r3, #0
 3911 06b0 FB73     		strb	r3, [r7, #15]
 3912 06b2 21E0     		b	.L236
 3913              	.L239:
 906:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3914              		.loc 1 906 0
 3915 06b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3916 06b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3917 06b8 2E32     		adds	r2, r2, #46
 3918 06ba 7149     		ldr	r1, .L359
 3919 06bc 8A5C     		ldrb	r2, [r1, r2]
 3920 06be D1B2     		uxtb	r1, r2
 3921 06c0 704A     		ldr	r2, .L359+4
 3922 06c2 1344     		add	r3, r3, r2
 3923 06c4 0A46     		mov	r2, r1
 3924 06c6 9A76     		strb	r2, [r3, #26]
 907:.\Protocolo.c **** 								if(lado1.totales[1][x]==0||(lado1.totales[1][x]&0xF0)!=0xE0){
 3925              		.loc 1 907 0
 3926 06c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3927 06ca 6E4A     		ldr	r2, .L359+4
 3928 06cc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 88


 3929 06ce 9B7E     		ldrb	r3, [r3, #26]
 3930 06d0 DBB2     		uxtb	r3, r3
 3931 06d2 002B     		cmp	r3, #0
 3932 06d4 08D0     		beq	.L237
 3933              		.loc 1 907 0 is_stmt 0 discriminator 1
 3934 06d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3935 06d8 6A4A     		ldr	r2, .L359+4
 3936 06da 1344     		add	r3, r3, r2
 3937 06dc 9B7E     		ldrb	r3, [r3, #26]
 3938 06de DBB2     		uxtb	r3, r3
 3939 06e0 03F0F003 		and	r3, r3, #240
 3940 06e4 E02B     		cmp	r3, #224
 3941 06e6 04D0     		beq	.L238
 3942              	.L237:
 908:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3943              		.loc 1 908 0 is_stmt 1
 3944 06e8 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 909:.\Protocolo.c **** 									return 0;
 3945              		.loc 1 909 0
 3946 06ec 0023     		movs	r3, #0
 3947 06ee 00F0C8BC 		b	.L167
 3948              	.L238:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3949              		.loc 1 905 0 discriminator 2
 3950 06f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3951 06f4 0133     		adds	r3, r3, #1
 3952 06f6 FB73     		strb	r3, [r7, #15]
 3953              	.L236:
 905:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3954              		.loc 1 905 0 is_stmt 0 discriminator 1
 3955 06f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3956 06fa 0B2B     		cmp	r3, #11
 3957 06fc DAD9     		bls	.L239
 910:.\Protocolo.c **** 								}								
 911:.\Protocolo.c **** 							}
 912:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3958              		.loc 1 912 0 is_stmt 1
 3959 06fe 0023     		movs	r3, #0
 3960 0700 FB73     		strb	r3, [r7, #15]
 3961 0702 24E0     		b	.L240
 3962              	.L243:
 913:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 3963              		.loc 1 913 0
 3964 0704 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3965 0706 0C33     		adds	r3, r3, #12
 3966 0708 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3967 070a 3B32     		adds	r2, r2, #59
 3968 070c 5C49     		ldr	r1, .L359
 3969 070e 8A5C     		ldrb	r2, [r1, r2]
 3970 0710 D1B2     		uxtb	r1, r2
 3971 0712 5C4A     		ldr	r2, .L359+4
 3972 0714 1344     		add	r3, r3, r2
 3973 0716 0A46     		mov	r2, r1
 3974 0718 9A76     		strb	r2, [r3, #26]
 914:.\Protocolo.c **** 								if(lado1.totales[1][x+12]==0||(lado1.totales[1][x+12]&0xF0)!=0xE0){
 3975              		.loc 1 914 0
 3976 071a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 89


 3977 071c 0C33     		adds	r3, r3, #12
 3978 071e 594A     		ldr	r2, .L359+4
 3979 0720 1344     		add	r3, r3, r2
 3980 0722 9B7E     		ldrb	r3, [r3, #26]
 3981 0724 DBB2     		uxtb	r3, r3
 3982 0726 002B     		cmp	r3, #0
 3983 0728 09D0     		beq	.L241
 3984              		.loc 1 914 0 is_stmt 0 discriminator 1
 3985 072a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3986 072c 0C33     		adds	r3, r3, #12
 3987 072e 554A     		ldr	r2, .L359+4
 3988 0730 1344     		add	r3, r3, r2
 3989 0732 9B7E     		ldrb	r3, [r3, #26]
 3990 0734 DBB2     		uxtb	r3, r3
 3991 0736 03F0F003 		and	r3, r3, #240
 3992 073a E02B     		cmp	r3, #224
 3993 073c 04D0     		beq	.L242
 3994              	.L241:
 915:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 3995              		.loc 1 915 0 is_stmt 1
 3996 073e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 916:.\Protocolo.c **** 									return 0;
 3997              		.loc 1 916 0
 3998 0742 0023     		movs	r3, #0
 3999 0744 00F09DBC 		b	.L167
 4000              	.L242:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4001              		.loc 1 912 0 discriminator 2
 4002 0748 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4003 074a 0133     		adds	r3, r3, #1
 4004 074c FB73     		strb	r3, [r7, #15]
 4005              	.L240:
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4006              		.loc 1 912 0 is_stmt 0 discriminator 1
 4007 074e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4008 0750 0B2B     		cmp	r3, #11
 4009 0752 D7D9     		bls	.L243
 917:.\Protocolo.c **** 								}								
 918:.\Protocolo.c **** 							}
 919:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4010              		.loc 1 919 0 is_stmt 1
 4011 0754 0023     		movs	r3, #0
 4012 0756 FB73     		strb	r3, [r7, #15]
 4013 0758 0DE0     		b	.L244
 4014              	.L245:
 920:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4015              		.loc 1 920 0 discriminator 3
 4016 075a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4017 075c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4018 075e 4832     		adds	r2, r2, #72
 4019 0760 4749     		ldr	r1, .L359
 4020 0762 8A5C     		ldrb	r2, [r1, r2]
 4021 0764 D1B2     		uxtb	r1, r2
 4022 0766 474A     		ldr	r2, .L359+4
 4023 0768 1344     		add	r3, r3, r2
 4024 076a 0A46     		mov	r2, r1
 4025 076c 83F84F20 		strb	r2, [r3, #79]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 90


 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4026              		.loc 1 919 0 discriminator 3
 4027 0770 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4028 0772 0133     		adds	r3, r3, #1
 4029 0774 FB73     		strb	r3, [r7, #15]
 4030              	.L244:
 919:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4031              		.loc 1 919 0 is_stmt 0 discriminator 1
 4032 0776 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4033 0778 042B     		cmp	r3, #4
 4034 077a EED9     		bls	.L245
 921:.\Protocolo.c **** 							}					
 922:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4035              		.loc 1 922 0 is_stmt 1
 4036 077c 0023     		movs	r3, #0
 4037 077e FB73     		strb	r3, [r7, #15]
 4038 0780 24E0     		b	.L246
 4039              	.L249:
 923:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4040              		.loc 1 923 0
 4041 0782 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4042 0784 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4043 0786 5832     		adds	r2, r2, #88
 4044 0788 3D49     		ldr	r1, .L359
 4045 078a 8A5C     		ldrb	r2, [r1, r2]
 4046 078c D1B2     		uxtb	r1, r2
 4047 078e 3D4A     		ldr	r2, .L359+4
 4048 0790 1344     		add	r3, r3, r2
 4049 0792 0A46     		mov	r2, r1
 4050 0794 83F83220 		strb	r2, [r3, #50]
 924:.\Protocolo.c **** 								if(lado1.totales[2][x]==0||(lado1.totales[2][x]&0xF0)!=0xE0){
 4051              		.loc 1 924 0
 4052 0798 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4053 079a 3A4A     		ldr	r2, .L359+4
 4054 079c 1344     		add	r3, r3, r2
 4055 079e 93F83230 		ldrb	r3, [r3, #50]
 4056 07a2 DBB2     		uxtb	r3, r3
 4057 07a4 002B     		cmp	r3, #0
 4058 07a6 09D0     		beq	.L247
 4059              		.loc 1 924 0 is_stmt 0 discriminator 1
 4060 07a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4061 07aa 364A     		ldr	r2, .L359+4
 4062 07ac 1344     		add	r3, r3, r2
 4063 07ae 93F83230 		ldrb	r3, [r3, #50]
 4064 07b2 DBB2     		uxtb	r3, r3
 4065 07b4 03F0F003 		and	r3, r3, #240
 4066 07b8 E02B     		cmp	r3, #224
 4067 07ba 04D0     		beq	.L248
 4068              	.L247:
 925:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4069              		.loc 1 925 0 is_stmt 1
 4070 07bc FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 926:.\Protocolo.c **** 									return 0;
 4071              		.loc 1 926 0
 4072 07c0 0023     		movs	r3, #0
 4073 07c2 00F05EBC 		b	.L167
 4074              	.L248:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 91


 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4075              		.loc 1 922 0 discriminator 2
 4076 07c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4077 07c8 0133     		adds	r3, r3, #1
 4078 07ca FB73     		strb	r3, [r7, #15]
 4079              	.L246:
 922:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4080              		.loc 1 922 0 is_stmt 0 discriminator 1
 4081 07cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4082 07ce 0B2B     		cmp	r3, #11
 4083 07d0 D7D9     		bls	.L249
 927:.\Protocolo.c **** 								}								
 928:.\Protocolo.c **** 							}
 929:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4084              		.loc 1 929 0 is_stmt 1
 4085 07d2 0023     		movs	r3, #0
 4086 07d4 FB73     		strb	r3, [r7, #15]
 4087 07d6 27E0     		b	.L250
 4088              	.L253:
 930:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4089              		.loc 1 930 0
 4090 07d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4091 07da 0C33     		adds	r3, r3, #12
 4092 07dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4093 07de 6532     		adds	r2, r2, #101
 4094 07e0 2749     		ldr	r1, .L359
 4095 07e2 8A5C     		ldrb	r2, [r1, r2]
 4096 07e4 D1B2     		uxtb	r1, r2
 4097 07e6 274A     		ldr	r2, .L359+4
 4098 07e8 1344     		add	r3, r3, r2
 4099 07ea 0A46     		mov	r2, r1
 4100 07ec 83F83220 		strb	r2, [r3, #50]
 931:.\Protocolo.c **** 								if(lado1.totales[2][x+12]==0||(lado1.totales[2][x+12]&0xF0)!=0xE0){
 4101              		.loc 1 931 0
 4102 07f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4103 07f2 0C33     		adds	r3, r3, #12
 4104 07f4 234A     		ldr	r2, .L359+4
 4105 07f6 1344     		add	r3, r3, r2
 4106 07f8 93F83230 		ldrb	r3, [r3, #50]
 4107 07fc DBB2     		uxtb	r3, r3
 4108 07fe 002B     		cmp	r3, #0
 4109 0800 0AD0     		beq	.L251
 4110              		.loc 1 931 0 is_stmt 0 discriminator 1
 4111 0802 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4112 0804 0C33     		adds	r3, r3, #12
 4113 0806 1F4A     		ldr	r2, .L359+4
 4114 0808 1344     		add	r3, r3, r2
 4115 080a 93F83230 		ldrb	r3, [r3, #50]
 4116 080e DBB2     		uxtb	r3, r3
 4117 0810 03F0F003 		and	r3, r3, #240
 4118 0814 E02B     		cmp	r3, #224
 4119 0816 04D0     		beq	.L252
 4120              	.L251:
 932:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4121              		.loc 1 932 0 is_stmt 1
 4122 0818 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 933:.\Protocolo.c **** 									return 0;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 92


 4123              		.loc 1 933 0
 4124 081c 0023     		movs	r3, #0
 4125 081e 00F030BC 		b	.L167
 4126              	.L252:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4127              		.loc 1 929 0 discriminator 2
 4128 0822 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4129 0824 0133     		adds	r3, r3, #1
 4130 0826 FB73     		strb	r3, [r7, #15]
 4131              	.L250:
 929:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4132              		.loc 1 929 0 is_stmt 0 discriminator 1
 4133 0828 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4134 082a 0B2B     		cmp	r3, #11
 4135 082c D4D9     		bls	.L253
 934:.\Protocolo.c **** 								}								
 935:.\Protocolo.c **** 							}
 936:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4136              		.loc 1 936 0 is_stmt 1
 4137 082e 0023     		movs	r3, #0
 4138 0830 FB73     		strb	r3, [r7, #15]
 4139 0832 0DE0     		b	.L254
 4140              	.L255:
 937:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4141              		.loc 1 937 0 discriminator 3
 4142 0834 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4143 0836 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4144 0838 7232     		adds	r2, r2, #114
 4145 083a 1149     		ldr	r1, .L359
 4146 083c 8A5C     		ldrb	r2, [r1, r2]
 4147 083e D1B2     		uxtb	r1, r2
 4148 0840 104A     		ldr	r2, .L359+4
 4149 0842 1344     		add	r3, r3, r2
 4150 0844 0A46     		mov	r2, r1
 4151 0846 83F85420 		strb	r2, [r3, #84]
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4152              		.loc 1 936 0 discriminator 3
 4153 084a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4154 084c 0133     		adds	r3, r3, #1
 4155 084e FB73     		strb	r3, [r7, #15]
 4156              	.L254:
 936:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4157              		.loc 1 936 0 is_stmt 0 discriminator 1
 4158 0850 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4159 0852 042B     		cmp	r3, #4
 4160 0854 EED9     		bls	.L255
 938:.\Protocolo.c **** 							}
 939:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4161              		.loc 1 939 0 is_stmt 1
 4162 0856 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 940:.\Protocolo.c ****     						return 3;                            
 4163              		.loc 1 940 0
 4164 085a 0323     		movs	r3, #3
 4165 085c 00F011BC 		b	.L167
 4166              	.L235:
 941:.\Protocolo.c **** 						}
 942:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 93


 4167              		.loc 1 942 0
 4168 0860 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 943:.\Protocolo.c **** 						return 1;			
 4169              		.loc 1 943 0
 4170 0864 0123     		movs	r3, #1
 4171 0866 00F00CBC 		b	.L167
 4172              	.L209:
 944:.\Protocolo.c **** 					}
 945:.\Protocolo.c **** 					else{
 946:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4173              		.loc 1 946 0
 4174 086a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 947:.\Protocolo.c **** 						return 0;					
 4175              		.loc 1 947 0
 4176 086e 0023     		movs	r3, #0
 4177 0870 00F007BC 		b	.L167
 4178              	.L208:
 948:.\Protocolo.c **** 					}
 949:.\Protocolo.c **** 				}
 950:.\Protocolo.c **** 				else{
 951:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4179              		.loc 1 951 0
 4180 0874 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 952:.\Protocolo.c **** 					return 0;		
 4181              		.loc 1 952 0
 4182 0878 0023     		movs	r3, #0
 4183 087a 00F002BC 		b	.L167
 4184              	.L360:
 4185 087e 00BF     		.align	2
 4186              	.L359:
 4187 0880 00000000 		.word	Surtidor_rxBuffer
 4188 0884 00000000 		.word	lado1
 4189              	.L155:
 953:.\Protocolo.c **** 				}	
 954:.\Protocolo.c **** 			}
 955:.\Protocolo.c **** 		}
 956:.\Protocolo.c **** 		else{
 957:.\Protocolo.c **** 			if(version[1]!=7){
 4190              		.loc 1 957 0
 4191 0888 A24B     		ldr	r3, .L361
 4192 088a 5B78     		ldrb	r3, [r3, #1]
 4193 088c DBB2     		uxtb	r3, r3
 4194 088e 072B     		cmp	r3, #7
 4195 0890 00F0FC81 		beq	.L256
 958:.\Protocolo.c **** 				CyDelay(900);
 4196              		.loc 1 958 0
 4197 0894 4FF46170 		mov	r0, #900
 4198 0898 FFF7FEFF 		bl	CyDelay
 959:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4199              		.loc 1 959 0
 4200 089c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4201 08a0 0346     		mov	r3, r0
 4202 08a2 FB73     		strb	r3, [r7, #15]
 960:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){				
 4203              		.loc 1 960 0
 4204 08a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4205 08a6 222B     		cmp	r3, #34
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 94


 4206 08a8 06D0     		beq	.L257
 4207              		.loc 1 960 0 is_stmt 0 discriminator 1
 4208 08aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4209 08ac 402B     		cmp	r3, #64
 4210 08ae 03D0     		beq	.L257
 4211              		.loc 1 960 0 discriminator 2
 4212 08b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4213 08b2 5E2B     		cmp	r3, #94
 4214 08b4 40F0E681 		bne	.L258
 4215              	.L257:
 961:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4216              		.loc 1 961 0 is_stmt 1
 4217 08b8 974B     		ldr	r3, .L361+4
 4218 08ba 1B78     		ldrb	r3, [r3]
 4219 08bc DBB2     		uxtb	r3, r3
 4220 08be FF2B     		cmp	r3, #255
 4221 08c0 40F0DC81 		bne	.L259
 4222              		.loc 1 961 0 is_stmt 0 discriminator 1
 4223 08c4 944B     		ldr	r3, .L361+4
 4224 08c6 5B78     		ldrb	r3, [r3, #1]
 4225 08c8 DBB2     		uxtb	r3, r3
 4226 08ca F62B     		cmp	r3, #246
 4227 08cc 40F0D681 		bne	.L259
 4228              		.loc 1 961 0 discriminator 2
 4229 08d0 914B     		ldr	r3, .L361+4
 4230 08d2 DB78     		ldrb	r3, [r3, #3]
 4231 08d4 DBB2     		uxtb	r3, r3
 4232 08d6 F92B     		cmp	r3, #249
 4233 08d8 40F0D081 		bne	.L259
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4234              		.loc 1 962 0 is_stmt 1
 4235 08dc 0023     		movs	r3, #0
 4236 08de BB73     		strb	r3, [r7, #14]
 4237 08e0 16E0     		b	.L260
 4238              	.L263:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4239              		.loc 1 963 0
 4240 08e2 0023     		movs	r3, #0
 4241 08e4 FB73     		strb	r3, [r7, #15]
 4242 08e6 0DE0     		b	.L261
 4243              	.L262:
 964:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4244              		.loc 1 964 0 discriminator 3
 4245 08e8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4246 08ea F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4247 08ec 8B48     		ldr	r0, .L361+8
 4248 08ee 1346     		mov	r3, r2
 4249 08f0 5B00     		lsls	r3, r3, #1
 4250 08f2 1344     		add	r3, r3, r2
 4251 08f4 DB00     		lsls	r3, r3, #3
 4252 08f6 0B44     		add	r3, r3, r1
 4253 08f8 0344     		add	r3, r3, r0
 4254 08fa 0022     		movs	r2, #0
 4255 08fc 9A70     		strb	r2, [r3, #2]
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4256              		.loc 1 963 0 discriminator 3
 4257 08fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 95


 4258 0900 0133     		adds	r3, r3, #1
 4259 0902 FB73     		strb	r3, [r7, #15]
 4260              	.L261:
 963:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4261              		.loc 1 963 0 is_stmt 0 discriminator 1
 4262 0904 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4263 0906 172B     		cmp	r3, #23
 4264 0908 EED9     		bls	.L262
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4265              		.loc 1 962 0 is_stmt 1 discriminator 2
 4266 090a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4267 090c 0133     		adds	r3, r3, #1
 4268 090e BB73     		strb	r3, [r7, #14]
 4269              	.L260:
 962:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4270              		.loc 1 962 0 is_stmt 0 discriminator 1
 4271 0910 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4272 0912 022B     		cmp	r3, #2
 4273 0914 E5D9     		bls	.L263
 965:.\Protocolo.c ****                     		}
 966:.\Protocolo.c ****                     	}                        
 967:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4274              		.loc 1 967 0 is_stmt 1
 4275 0916 0023     		movs	r3, #0
 4276 0918 FB73     		strb	r3, [r7, #15]
 4277 091a 20E0     		b	.L264
 4278              	.L267:
 968:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4279              		.loc 1 968 0
 4280 091c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4281 091e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4282 0920 0432     		adds	r2, r2, #4
 4283 0922 7D49     		ldr	r1, .L361+4
 4284 0924 8A5C     		ldrb	r2, [r1, r2]
 4285 0926 D1B2     		uxtb	r1, r2
 4286 0928 7C4A     		ldr	r2, .L361+8
 4287 092a 1344     		add	r3, r3, r2
 4288 092c 0A46     		mov	r2, r1
 4289 092e 9A70     		strb	r2, [r3, #2]
 969:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4290              		.loc 1 969 0
 4291 0930 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4292 0932 7A4A     		ldr	r2, .L361+8
 4293 0934 1344     		add	r3, r3, r2
 4294 0936 9B78     		ldrb	r3, [r3, #2]
 4295 0938 DBB2     		uxtb	r3, r3
 4296 093a 002B     		cmp	r3, #0
 4297 093c 08D0     		beq	.L265
 4298              		.loc 1 969 0 is_stmt 0 discriminator 1
 4299 093e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4300 0940 764A     		ldr	r2, .L361+8
 4301 0942 1344     		add	r3, r3, r2
 4302 0944 9B78     		ldrb	r3, [r3, #2]
 4303 0946 DBB2     		uxtb	r3, r3
 4304 0948 03F0F003 		and	r3, r3, #240
 4305 094c E02B     		cmp	r3, #224
 4306 094e 03D0     		beq	.L266
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 96


 4307              	.L265:
 970:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4308              		.loc 1 970 0 is_stmt 1
 4309 0950 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 971:.\Protocolo.c **** 								return 0;
 4310              		.loc 1 971 0
 4311 0954 0023     		movs	r3, #0
 4312 0956 94E3     		b	.L167
 4313              	.L266:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4314              		.loc 1 967 0 discriminator 2
 4315 0958 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4316 095a 0133     		adds	r3, r3, #1
 4317 095c FB73     		strb	r3, [r7, #15]
 4318              	.L264:
 967:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4319              		.loc 1 967 0 is_stmt 0 discriminator 1
 4320 095e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4321 0960 072B     		cmp	r3, #7
 4322 0962 DBD9     		bls	.L267
 972:.\Protocolo.c **** 							}							
 973:.\Protocolo.c **** 						}
 974:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4323              		.loc 1 974 0 is_stmt 1
 4324 0964 0023     		movs	r3, #0
 4325 0966 FB73     		strb	r3, [r7, #15]
 4326 0968 23E0     		b	.L268
 4327              	.L271:
 975:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4328              		.loc 1 975 0
 4329 096a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4330 096c 0C33     		adds	r3, r3, #12
 4331 096e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4332 0970 0D32     		adds	r2, r2, #13
 4333 0972 6949     		ldr	r1, .L361+4
 4334 0974 8A5C     		ldrb	r2, [r1, r2]
 4335 0976 D1B2     		uxtb	r1, r2
 4336 0978 684A     		ldr	r2, .L361+8
 4337 097a 1344     		add	r3, r3, r2
 4338 097c 0A46     		mov	r2, r1
 4339 097e 9A70     		strb	r2, [r3, #2]
 976:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4340              		.loc 1 976 0
 4341 0980 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4342 0982 0C33     		adds	r3, r3, #12
 4343 0984 654A     		ldr	r2, .L361+8
 4344 0986 1344     		add	r3, r3, r2
 4345 0988 9B78     		ldrb	r3, [r3, #2]
 4346 098a DBB2     		uxtb	r3, r3
 4347 098c 002B     		cmp	r3, #0
 4348 098e 09D0     		beq	.L269
 4349              		.loc 1 976 0 is_stmt 0 discriminator 1
 4350 0990 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4351 0992 0C33     		adds	r3, r3, #12
 4352 0994 614A     		ldr	r2, .L361+8
 4353 0996 1344     		add	r3, r3, r2
 4354 0998 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 97


 4355 099a DBB2     		uxtb	r3, r3
 4356 099c 03F0F003 		and	r3, r3, #240
 4357 09a0 E02B     		cmp	r3, #224
 4358 09a2 03D0     		beq	.L270
 4359              	.L269:
 977:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4360              		.loc 1 977 0 is_stmt 1
 4361 09a4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 978:.\Protocolo.c **** 								return 0;
 4362              		.loc 1 978 0
 4363 09a8 0023     		movs	r3, #0
 4364 09aa 6AE3     		b	.L167
 4365              	.L270:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4366              		.loc 1 974 0 discriminator 2
 4367 09ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4368 09ae 0133     		adds	r3, r3, #1
 4369 09b0 FB73     		strb	r3, [r7, #15]
 4370              	.L268:
 974:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4371              		.loc 1 974 0 is_stmt 0 discriminator 1
 4372 09b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4373 09b4 072B     		cmp	r3, #7
 4374 09b6 D8D9     		bls	.L271
 979:.\Protocolo.c **** 							}							
 980:.\Protocolo.c **** 						}
 981:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 4375              		.loc 1 981 0 is_stmt 1
 4376 09b8 0023     		movs	r3, #0
 4377 09ba FB73     		strb	r3, [r7, #15]
 4378 09bc 0DE0     		b	.L272
 4379              	.L273:
 982:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4380              		.loc 1 982 0 discriminator 3
 4381 09be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4382 09c0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4383 09c2 1632     		adds	r2, r2, #22
 4384 09c4 5449     		ldr	r1, .L361+4
 4385 09c6 8A5C     		ldrb	r2, [r1, r2]
 4386 09c8 D1B2     		uxtb	r1, r2
 4387 09ca 544A     		ldr	r2, .L361+8
 4388 09cc 1344     		add	r3, r3, r2
 4389 09ce 0A46     		mov	r2, r1
 4390 09d0 83F84A20 		strb	r2, [r3, #74]
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4391              		.loc 1 981 0 discriminator 3
 4392 09d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4393 09d6 0133     		adds	r3, r3, #1
 4394 09d8 FB73     		strb	r3, [r7, #15]
 4395              	.L272:
 981:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4396              		.loc 1 981 0 is_stmt 0 discriminator 1
 4397 09da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4398 09dc 032B     		cmp	r3, #3
 4399 09de EED9     		bls	.L273
 983:.\Protocolo.c **** 						}				
 984:.\Protocolo.c **** 						if(nmangueras==2){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 98


 4400              		.loc 1 984 0 is_stmt 1
 4401 09e0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4402 09e2 022B     		cmp	r3, #2
 4403 09e4 68D1     		bne	.L274
 985:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4404              		.loc 1 985 0
 4405 09e6 0023     		movs	r3, #0
 4406 09e8 FB73     		strb	r3, [r7, #15]
 4407 09ea 20E0     		b	.L275
 4408              	.L278:
 986:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4409              		.loc 1 986 0
 4410 09ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4411 09ee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4412 09f0 2232     		adds	r2, r2, #34
 4413 09f2 4949     		ldr	r1, .L361+4
 4414 09f4 8A5C     		ldrb	r2, [r1, r2]
 4415 09f6 D1B2     		uxtb	r1, r2
 4416 09f8 484A     		ldr	r2, .L361+8
 4417 09fa 1344     		add	r3, r3, r2
 4418 09fc 0A46     		mov	r2, r1
 4419 09fe 9A76     		strb	r2, [r3, #26]
 987:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4420              		.loc 1 987 0
 4421 0a00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4422 0a02 464A     		ldr	r2, .L361+8
 4423 0a04 1344     		add	r3, r3, r2
 4424 0a06 9B7E     		ldrb	r3, [r3, #26]
 4425 0a08 DBB2     		uxtb	r3, r3
 4426 0a0a 002B     		cmp	r3, #0
 4427 0a0c 08D0     		beq	.L276
 4428              		.loc 1 987 0 is_stmt 0 discriminator 1
 4429 0a0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4430 0a10 424A     		ldr	r2, .L361+8
 4431 0a12 1344     		add	r3, r3, r2
 4432 0a14 9B7E     		ldrb	r3, [r3, #26]
 4433 0a16 DBB2     		uxtb	r3, r3
 4434 0a18 03F0F003 		and	r3, r3, #240
 4435 0a1c E02B     		cmp	r3, #224
 4436 0a1e 03D0     		beq	.L277
 4437              	.L276:
 988:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4438              		.loc 1 988 0 is_stmt 1
 4439 0a20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 989:.\Protocolo.c **** 									return 0;
 4440              		.loc 1 989 0
 4441 0a24 0023     		movs	r3, #0
 4442 0a26 2CE3     		b	.L167
 4443              	.L277:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4444              		.loc 1 985 0 discriminator 2
 4445 0a28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4446 0a2a 0133     		adds	r3, r3, #1
 4447 0a2c FB73     		strb	r3, [r7, #15]
 4448              	.L275:
 985:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4449              		.loc 1 985 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 99


 4450 0a2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4451 0a30 072B     		cmp	r3, #7
 4452 0a32 DBD9     		bls	.L278
 990:.\Protocolo.c **** 								}								
 991:.\Protocolo.c **** 							}
 992:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4453              		.loc 1 992 0 is_stmt 1
 4454 0a34 0023     		movs	r3, #0
 4455 0a36 FB73     		strb	r3, [r7, #15]
 4456 0a38 23E0     		b	.L279
 4457              	.L282:
 993:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4458              		.loc 1 993 0
 4459 0a3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4460 0a3c 0C33     		adds	r3, r3, #12
 4461 0a3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4462 0a40 2B32     		adds	r2, r2, #43
 4463 0a42 3549     		ldr	r1, .L361+4
 4464 0a44 8A5C     		ldrb	r2, [r1, r2]
 4465 0a46 D1B2     		uxtb	r1, r2
 4466 0a48 344A     		ldr	r2, .L361+8
 4467 0a4a 1344     		add	r3, r3, r2
 4468 0a4c 0A46     		mov	r2, r1
 4469 0a4e 9A76     		strb	r2, [r3, #26]
 994:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4470              		.loc 1 994 0
 4471 0a50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4472 0a52 0C33     		adds	r3, r3, #12
 4473 0a54 314A     		ldr	r2, .L361+8
 4474 0a56 1344     		add	r3, r3, r2
 4475 0a58 9B7E     		ldrb	r3, [r3, #26]
 4476 0a5a DBB2     		uxtb	r3, r3
 4477 0a5c 002B     		cmp	r3, #0
 4478 0a5e 09D0     		beq	.L280
 4479              		.loc 1 994 0 is_stmt 0 discriminator 1
 4480 0a60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4481 0a62 0C33     		adds	r3, r3, #12
 4482 0a64 2D4A     		ldr	r2, .L361+8
 4483 0a66 1344     		add	r3, r3, r2
 4484 0a68 9B7E     		ldrb	r3, [r3, #26]
 4485 0a6a DBB2     		uxtb	r3, r3
 4486 0a6c 03F0F003 		and	r3, r3, #240
 4487 0a70 E02B     		cmp	r3, #224
 4488 0a72 03D0     		beq	.L281
 4489              	.L280:
 995:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4490              		.loc 1 995 0 is_stmt 1
 4491 0a74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 996:.\Protocolo.c **** 									return 0;
 4492              		.loc 1 996 0
 4493 0a78 0023     		movs	r3, #0
 4494 0a7a 02E3     		b	.L167
 4495              	.L281:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4496              		.loc 1 992 0 discriminator 2
 4497 0a7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4498 0a7e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 100


 4499 0a80 FB73     		strb	r3, [r7, #15]
 4500              	.L279:
 992:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4501              		.loc 1 992 0 is_stmt 0 discriminator 1
 4502 0a82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4503 0a84 072B     		cmp	r3, #7
 4504 0a86 D8D9     		bls	.L282
 997:.\Protocolo.c **** 								}								
 998:.\Protocolo.c **** 							}
 999:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4505              		.loc 1 999 0 is_stmt 1
 4506 0a88 0023     		movs	r3, #0
 4507 0a8a FB73     		strb	r3, [r7, #15]
 4508 0a8c 0DE0     		b	.L283
 4509              	.L284:
1000:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4510              		.loc 1 1000 0 discriminator 3
 4511 0a8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4512 0a90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4513 0a92 3432     		adds	r2, r2, #52
 4514 0a94 2049     		ldr	r1, .L361+4
 4515 0a96 8A5C     		ldrb	r2, [r1, r2]
 4516 0a98 D1B2     		uxtb	r1, r2
 4517 0a9a 204A     		ldr	r2, .L361+8
 4518 0a9c 1344     		add	r3, r3, r2
 4519 0a9e 0A46     		mov	r2, r1
 4520 0aa0 83F84F20 		strb	r2, [r3, #79]
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4521              		.loc 1 999 0 discriminator 3
 4522 0aa4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4523 0aa6 0133     		adds	r3, r3, #1
 4524 0aa8 FB73     		strb	r3, [r7, #15]
 4525              	.L283:
 999:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4526              		.loc 1 999 0 is_stmt 0 discriminator 1
 4527 0aaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4528 0aac 032B     		cmp	r3, #3
 4529 0aae EED9     		bls	.L284
1001:.\Protocolo.c **** 							}
1002:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4530              		.loc 1 1002 0 is_stmt 1
 4531 0ab0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1003:.\Protocolo.c ****     						return 2;                            
 4532              		.loc 1 1003 0
 4533 0ab4 0223     		movs	r3, #2
 4534 0ab6 E4E2     		b	.L167
 4535              	.L274:
1004:.\Protocolo.c **** 						}
1005:.\Protocolo.c **** 						if(nmangueras==3){
 4536              		.loc 1 1005 0
 4537 0ab8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4538 0aba 032B     		cmp	r3, #3
 4539 0abc 40F0DA80 		bne	.L285
1006:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4540              		.loc 1 1006 0
 4541 0ac0 0023     		movs	r3, #0
 4542 0ac2 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 101


 4543 0ac4 20E0     		b	.L286
 4544              	.L289:
1007:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4545              		.loc 1 1007 0
 4546 0ac6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4547 0ac8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4548 0aca 2232     		adds	r2, r2, #34
 4549 0acc 1249     		ldr	r1, .L361+4
 4550 0ace 8A5C     		ldrb	r2, [r1, r2]
 4551 0ad0 D1B2     		uxtb	r1, r2
 4552 0ad2 124A     		ldr	r2, .L361+8
 4553 0ad4 1344     		add	r3, r3, r2
 4554 0ad6 0A46     		mov	r2, r1
 4555 0ad8 9A76     		strb	r2, [r3, #26]
1008:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 4556              		.loc 1 1008 0
 4557 0ada FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4558 0adc 0F4A     		ldr	r2, .L361+8
 4559 0ade 1344     		add	r3, r3, r2
 4560 0ae0 9B7E     		ldrb	r3, [r3, #26]
 4561 0ae2 DBB2     		uxtb	r3, r3
 4562 0ae4 002B     		cmp	r3, #0
 4563 0ae6 08D0     		beq	.L287
 4564              		.loc 1 1008 0 is_stmt 0 discriminator 1
 4565 0ae8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4566 0aea 0C4A     		ldr	r2, .L361+8
 4567 0aec 1344     		add	r3, r3, r2
 4568 0aee 9B7E     		ldrb	r3, [r3, #26]
 4569 0af0 DBB2     		uxtb	r3, r3
 4570 0af2 03F0F003 		and	r3, r3, #240
 4571 0af6 E02B     		cmp	r3, #224
 4572 0af8 03D0     		beq	.L288
 4573              	.L287:
1009:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4574              		.loc 1 1009 0 is_stmt 1
 4575 0afa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1010:.\Protocolo.c **** 									return 0;
 4576              		.loc 1 1010 0
 4577 0afe 0023     		movs	r3, #0
 4578 0b00 BFE2     		b	.L167
 4579              	.L288:
1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4580              		.loc 1 1006 0 discriminator 2
 4581 0b02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4582 0b04 0133     		adds	r3, r3, #1
 4583 0b06 FB73     		strb	r3, [r7, #15]
 4584              	.L286:
1006:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4585              		.loc 1 1006 0 is_stmt 0 discriminator 1
 4586 0b08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4587 0b0a 072B     		cmp	r3, #7
 4588 0b0c DBD9     		bls	.L289
1011:.\Protocolo.c **** 								}								
1012:.\Protocolo.c **** 							}
1013:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4589              		.loc 1 1013 0 is_stmt 1
 4590 0b0e 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 102


 4591 0b10 FB73     		strb	r3, [r7, #15]
 4592 0b12 29E0     		b	.L290
 4593              	.L362:
 4594              		.align	2
 4595              	.L361:
 4596 0b14 00000000 		.word	version
 4597 0b18 00000000 		.word	Surtidor_rxBuffer
 4598 0b1c 00000000 		.word	lado2
 4599              	.L293:
1014:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4600              		.loc 1 1014 0
 4601 0b20 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4602 0b22 0C33     		adds	r3, r3, #12
 4603 0b24 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4604 0b26 2B32     		adds	r2, r2, #43
 4605 0b28 AE49     		ldr	r1, .L363
 4606 0b2a 8A5C     		ldrb	r2, [r1, r2]
 4607 0b2c D1B2     		uxtb	r1, r2
 4608 0b2e AE4A     		ldr	r2, .L363+4
 4609 0b30 1344     		add	r3, r3, r2
 4610 0b32 0A46     		mov	r2, r1
 4611 0b34 9A76     		strb	r2, [r3, #26]
1015:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 4612              		.loc 1 1015 0
 4613 0b36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4614 0b38 0C33     		adds	r3, r3, #12
 4615 0b3a AB4A     		ldr	r2, .L363+4
 4616 0b3c 1344     		add	r3, r3, r2
 4617 0b3e 9B7E     		ldrb	r3, [r3, #26]
 4618 0b40 DBB2     		uxtb	r3, r3
 4619 0b42 002B     		cmp	r3, #0
 4620 0b44 09D0     		beq	.L291
 4621              		.loc 1 1015 0 is_stmt 0 discriminator 1
 4622 0b46 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4623 0b48 0C33     		adds	r3, r3, #12
 4624 0b4a A74A     		ldr	r2, .L363+4
 4625 0b4c 1344     		add	r3, r3, r2
 4626 0b4e 9B7E     		ldrb	r3, [r3, #26]
 4627 0b50 DBB2     		uxtb	r3, r3
 4628 0b52 03F0F003 		and	r3, r3, #240
 4629 0b56 E02B     		cmp	r3, #224
 4630 0b58 03D0     		beq	.L292
 4631              	.L291:
1016:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4632              		.loc 1 1016 0 is_stmt 1
 4633 0b5a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1017:.\Protocolo.c **** 									return 0;
 4634              		.loc 1 1017 0
 4635 0b5e 0023     		movs	r3, #0
 4636 0b60 8FE2     		b	.L167
 4637              	.L292:
1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4638              		.loc 1 1013 0 discriminator 2
 4639 0b62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4640 0b64 0133     		adds	r3, r3, #1
 4641 0b66 FB73     		strb	r3, [r7, #15]
 4642              	.L290:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 103


1013:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4643              		.loc 1 1013 0 is_stmt 0 discriminator 1
 4644 0b68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4645 0b6a 072B     		cmp	r3, #7
 4646 0b6c D8D9     		bls	.L293
1018:.\Protocolo.c **** 								}								
1019:.\Protocolo.c **** 							}
1020:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4647              		.loc 1 1020 0 is_stmt 1
 4648 0b6e 0023     		movs	r3, #0
 4649 0b70 FB73     		strb	r3, [r7, #15]
 4650 0b72 0DE0     		b	.L294
 4651              	.L295:
1021:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4652              		.loc 1 1021 0 discriminator 3
 4653 0b74 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4654 0b76 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4655 0b78 3432     		adds	r2, r2, #52
 4656 0b7a 9A49     		ldr	r1, .L363
 4657 0b7c 8A5C     		ldrb	r2, [r1, r2]
 4658 0b7e D1B2     		uxtb	r1, r2
 4659 0b80 994A     		ldr	r2, .L363+4
 4660 0b82 1344     		add	r3, r3, r2
 4661 0b84 0A46     		mov	r2, r1
 4662 0b86 83F84F20 		strb	r2, [r3, #79]
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4663              		.loc 1 1020 0 discriminator 3
 4664 0b8a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4665 0b8c 0133     		adds	r3, r3, #1
 4666 0b8e FB73     		strb	r3, [r7, #15]
 4667              	.L294:
1020:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4668              		.loc 1 1020 0 is_stmt 0 discriminator 1
 4669 0b90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4670 0b92 032B     		cmp	r3, #3
 4671 0b94 EED9     		bls	.L295
1022:.\Protocolo.c **** 							}						
1023:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4672              		.loc 1 1023 0 is_stmt 1
 4673 0b96 0023     		movs	r3, #0
 4674 0b98 FB73     		strb	r3, [r7, #15]
 4675 0b9a 23E0     		b	.L296
 4676              	.L299:
1024:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4677              		.loc 1 1024 0
 4678 0b9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4679 0b9e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4680 0ba0 4032     		adds	r2, r2, #64
 4681 0ba2 9049     		ldr	r1, .L363
 4682 0ba4 8A5C     		ldrb	r2, [r1, r2]
 4683 0ba6 D1B2     		uxtb	r1, r2
 4684 0ba8 8F4A     		ldr	r2, .L363+4
 4685 0baa 1344     		add	r3, r3, r2
 4686 0bac 0A46     		mov	r2, r1
 4687 0bae 83F83220 		strb	r2, [r3, #50]
1025:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 4688              		.loc 1 1025 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 104


 4689 0bb2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4690 0bb4 8C4A     		ldr	r2, .L363+4
 4691 0bb6 1344     		add	r3, r3, r2
 4692 0bb8 93F83230 		ldrb	r3, [r3, #50]
 4693 0bbc DBB2     		uxtb	r3, r3
 4694 0bbe 002B     		cmp	r3, #0
 4695 0bc0 09D0     		beq	.L297
 4696              		.loc 1 1025 0 is_stmt 0 discriminator 1
 4697 0bc2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4698 0bc4 884A     		ldr	r2, .L363+4
 4699 0bc6 1344     		add	r3, r3, r2
 4700 0bc8 93F83230 		ldrb	r3, [r3, #50]
 4701 0bcc DBB2     		uxtb	r3, r3
 4702 0bce 03F0F003 		and	r3, r3, #240
 4703 0bd2 E02B     		cmp	r3, #224
 4704 0bd4 03D0     		beq	.L298
 4705              	.L297:
1026:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4706              		.loc 1 1026 0 is_stmt 1
 4707 0bd6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1027:.\Protocolo.c **** 									return 0;
 4708              		.loc 1 1027 0
 4709 0bda 0023     		movs	r3, #0
 4710 0bdc 51E2     		b	.L167
 4711              	.L298:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4712              		.loc 1 1023 0 discriminator 2
 4713 0bde FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4714 0be0 0133     		adds	r3, r3, #1
 4715 0be2 FB73     		strb	r3, [r7, #15]
 4716              	.L296:
1023:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4717              		.loc 1 1023 0 is_stmt 0 discriminator 1
 4718 0be4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4719 0be6 072B     		cmp	r3, #7
 4720 0be8 D8D9     		bls	.L299
1028:.\Protocolo.c **** 								}								
1029:.\Protocolo.c **** 							}
1030:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4721              		.loc 1 1030 0 is_stmt 1
 4722 0bea 0023     		movs	r3, #0
 4723 0bec FB73     		strb	r3, [r7, #15]
 4724 0bee 26E0     		b	.L300
 4725              	.L303:
1031:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4726              		.loc 1 1031 0
 4727 0bf0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4728 0bf2 0C33     		adds	r3, r3, #12
 4729 0bf4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4730 0bf6 4932     		adds	r2, r2, #73
 4731 0bf8 7A49     		ldr	r1, .L363
 4732 0bfa 8A5C     		ldrb	r2, [r1, r2]
 4733 0bfc D1B2     		uxtb	r1, r2
 4734 0bfe 7A4A     		ldr	r2, .L363+4
 4735 0c00 1344     		add	r3, r3, r2
 4736 0c02 0A46     		mov	r2, r1
 4737 0c04 83F83220 		strb	r2, [r3, #50]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 105


1032:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 4738              		.loc 1 1032 0
 4739 0c08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4740 0c0a 0C33     		adds	r3, r3, #12
 4741 0c0c 764A     		ldr	r2, .L363+4
 4742 0c0e 1344     		add	r3, r3, r2
 4743 0c10 93F83230 		ldrb	r3, [r3, #50]
 4744 0c14 DBB2     		uxtb	r3, r3
 4745 0c16 002B     		cmp	r3, #0
 4746 0c18 0AD0     		beq	.L301
 4747              		.loc 1 1032 0 is_stmt 0 discriminator 1
 4748 0c1a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4749 0c1c 0C33     		adds	r3, r3, #12
 4750 0c1e 724A     		ldr	r2, .L363+4
 4751 0c20 1344     		add	r3, r3, r2
 4752 0c22 93F83230 		ldrb	r3, [r3, #50]
 4753 0c26 DBB2     		uxtb	r3, r3
 4754 0c28 03F0F003 		and	r3, r3, #240
 4755 0c2c E02B     		cmp	r3, #224
 4756 0c2e 03D0     		beq	.L302
 4757              	.L301:
1033:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 4758              		.loc 1 1033 0 is_stmt 1
 4759 0c30 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1034:.\Protocolo.c **** 									return 0;
 4760              		.loc 1 1034 0
 4761 0c34 0023     		movs	r3, #0
 4762 0c36 24E2     		b	.L167
 4763              	.L302:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4764              		.loc 1 1030 0 discriminator 2
 4765 0c38 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4766 0c3a 0133     		adds	r3, r3, #1
 4767 0c3c FB73     		strb	r3, [r7, #15]
 4768              	.L300:
1030:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4769              		.loc 1 1030 0 is_stmt 0 discriminator 1
 4770 0c3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4771 0c40 072B     		cmp	r3, #7
 4772 0c42 D5D9     		bls	.L303
1035:.\Protocolo.c **** 								}								
1036:.\Protocolo.c **** 							}
1037:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4773              		.loc 1 1037 0 is_stmt 1
 4774 0c44 0023     		movs	r3, #0
 4775 0c46 FB73     		strb	r3, [r7, #15]
 4776 0c48 0DE0     		b	.L304
 4777              	.L305:
1038:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4778              		.loc 1 1038 0 discriminator 3
 4779 0c4a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4780 0c4c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4781 0c4e 5232     		adds	r2, r2, #82
 4782 0c50 6449     		ldr	r1, .L363
 4783 0c52 8A5C     		ldrb	r2, [r1, r2]
 4784 0c54 D1B2     		uxtb	r1, r2
 4785 0c56 644A     		ldr	r2, .L363+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 106


 4786 0c58 1344     		add	r3, r3, r2
 4787 0c5a 0A46     		mov	r2, r1
 4788 0c5c 83F85420 		strb	r2, [r3, #84]
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4789              		.loc 1 1037 0 discriminator 3
 4790 0c60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4791 0c62 0133     		adds	r3, r3, #1
 4792 0c64 FB73     		strb	r3, [r7, #15]
 4793              	.L304:
1037:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4794              		.loc 1 1037 0 is_stmt 0 discriminator 1
 4795 0c66 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4796 0c68 032B     		cmp	r3, #3
 4797 0c6a EED9     		bls	.L305
1039:.\Protocolo.c **** 							}
1040:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4798              		.loc 1 1040 0 is_stmt 1
 4799 0c6c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1041:.\Protocolo.c ****     						return 3;                            
 4800              		.loc 1 1041 0
 4801 0c70 0323     		movs	r3, #3
 4802 0c72 06E2     		b	.L167
 4803              	.L285:
1042:.\Protocolo.c **** 						}
1043:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4804              		.loc 1 1043 0
 4805 0c74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1044:.\Protocolo.c **** 						return 1;			
 4806              		.loc 1 1044 0
 4807 0c78 0123     		movs	r3, #1
 4808 0c7a 02E2     		b	.L167
 4809              	.L259:
1045:.\Protocolo.c **** 					}
1046:.\Protocolo.c **** 					else{
1047:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4810              		.loc 1 1047 0
 4811 0c7c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1048:.\Protocolo.c **** 						return 0;		
 4812              		.loc 1 1048 0
 4813 0c80 0023     		movs	r3, #0
 4814 0c82 FEE1     		b	.L167
 4815              	.L258:
1049:.\Protocolo.c **** 					}
1050:.\Protocolo.c **** 				}
1051:.\Protocolo.c **** 				else{
1052:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4816              		.loc 1 1052 0
 4817 0c84 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1053:.\Protocolo.c **** 					return 0;		
 4818              		.loc 1 1053 0
 4819 0c88 0023     		movs	r3, #0
 4820 0c8a FAE1     		b	.L167
 4821              	.L256:
1054:.\Protocolo.c **** 				}				
1055:.\Protocolo.c **** 			}
1056:.\Protocolo.c **** 			else{
1057:.\Protocolo.c **** 				CyDelay(900);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 107


 4822              		.loc 1 1057 0
 4823 0c8c 4FF46170 		mov	r0, #900
 4824 0c90 FFF7FEFF 		bl	CyDelay
1058:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4825              		.loc 1 1058 0
 4826 0c94 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4827 0c98 0346     		mov	r3, r0
 4828 0c9a FB73     		strb	r3, [r7, #15]
1059:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){					
 4829              		.loc 1 1059 0
 4830 0c9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4831 0c9e 2E2B     		cmp	r3, #46
 4832 0ca0 06D0     		beq	.L306
 4833              		.loc 1 1059 0 is_stmt 0 discriminator 1
 4834 0ca2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4835 0ca4 582B     		cmp	r3, #88
 4836 0ca6 03D0     		beq	.L306
 4837              		.loc 1 1059 0 discriminator 2
 4838 0ca8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4839 0caa 822B     		cmp	r3, #130
 4840 0cac 40F0E481 		bne	.L307
 4841              	.L306:
1060:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4842              		.loc 1 1060 0 is_stmt 1
 4843 0cb0 4C4B     		ldr	r3, .L363
 4844 0cb2 1B78     		ldrb	r3, [r3]
 4845 0cb4 DBB2     		uxtb	r3, r3
 4846 0cb6 FF2B     		cmp	r3, #255
 4847 0cb8 40F0DA81 		bne	.L308
 4848              		.loc 1 1060 0 is_stmt 0 discriminator 1
 4849 0cbc 494B     		ldr	r3, .L363
 4850 0cbe 5B78     		ldrb	r3, [r3, #1]
 4851 0cc0 DBB2     		uxtb	r3, r3
 4852 0cc2 F62B     		cmp	r3, #246
 4853 0cc4 40F0D481 		bne	.L308
 4854              		.loc 1 1060 0 discriminator 2
 4855 0cc8 464B     		ldr	r3, .L363
 4856 0cca DB78     		ldrb	r3, [r3, #3]
 4857 0ccc DBB2     		uxtb	r3, r3
 4858 0cce F92B     		cmp	r3, #249
 4859 0cd0 40F0CE81 		bne	.L308
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4860              		.loc 1 1061 0 is_stmt 1
 4861 0cd4 0023     		movs	r3, #0
 4862 0cd6 BB73     		strb	r3, [r7, #14]
 4863 0cd8 16E0     		b	.L309
 4864              	.L312:
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4865              		.loc 1 1062 0
 4866 0cda 0023     		movs	r3, #0
 4867 0cdc FB73     		strb	r3, [r7, #15]
 4868 0cde 0DE0     		b	.L310
 4869              	.L311:
1063:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4870              		.loc 1 1063 0 discriminator 3
 4871 0ce0 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4872 0ce2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 108


 4873 0ce4 4048     		ldr	r0, .L363+4
 4874 0ce6 1346     		mov	r3, r2
 4875 0ce8 5B00     		lsls	r3, r3, #1
 4876 0cea 1344     		add	r3, r3, r2
 4877 0cec DB00     		lsls	r3, r3, #3
 4878 0cee 0B44     		add	r3, r3, r1
 4879 0cf0 0344     		add	r3, r3, r0
 4880 0cf2 0022     		movs	r2, #0
 4881 0cf4 9A70     		strb	r2, [r3, #2]
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4882              		.loc 1 1062 0 discriminator 3
 4883 0cf6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4884 0cf8 0133     		adds	r3, r3, #1
 4885 0cfa FB73     		strb	r3, [r7, #15]
 4886              	.L310:
1062:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4887              		.loc 1 1062 0 is_stmt 0 discriminator 1
 4888 0cfc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4889 0cfe 172B     		cmp	r3, #23
 4890 0d00 EED9     		bls	.L311
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4891              		.loc 1 1061 0 is_stmt 1 discriminator 2
 4892 0d02 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4893 0d04 0133     		adds	r3, r3, #1
 4894 0d06 BB73     		strb	r3, [r7, #14]
 4895              	.L309:
1061:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4896              		.loc 1 1061 0 is_stmt 0 discriminator 1
 4897 0d08 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4898 0d0a 022B     		cmp	r3, #2
 4899 0d0c E5D9     		bls	.L312
1064:.\Protocolo.c ****                     		}
1065:.\Protocolo.c ****                     	}                         
1066:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4900              		.loc 1 1066 0 is_stmt 1
 4901 0d0e 0023     		movs	r3, #0
 4902 0d10 FB73     		strb	r3, [r7, #15]
 4903 0d12 20E0     		b	.L313
 4904              	.L316:
1067:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4905              		.loc 1 1067 0
 4906 0d14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4907 0d16 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4908 0d18 0432     		adds	r2, r2, #4
 4909 0d1a 3249     		ldr	r1, .L363
 4910 0d1c 8A5C     		ldrb	r2, [r1, r2]
 4911 0d1e D1B2     		uxtb	r1, r2
 4912 0d20 314A     		ldr	r2, .L363+4
 4913 0d22 1344     		add	r3, r3, r2
 4914 0d24 0A46     		mov	r2, r1
 4915 0d26 9A70     		strb	r2, [r3, #2]
1068:.\Protocolo.c **** 							if(lado2.totales[0][x]==0||(lado2.totales[0][x]&0xF0)!=0xE0){
 4916              		.loc 1 1068 0
 4917 0d28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4918 0d2a 2F4A     		ldr	r2, .L363+4
 4919 0d2c 1344     		add	r3, r3, r2
 4920 0d2e 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 109


 4921 0d30 DBB2     		uxtb	r3, r3
 4922 0d32 002B     		cmp	r3, #0
 4923 0d34 08D0     		beq	.L314
 4924              		.loc 1 1068 0 is_stmt 0 discriminator 1
 4925 0d36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4926 0d38 2B4A     		ldr	r2, .L363+4
 4927 0d3a 1344     		add	r3, r3, r2
 4928 0d3c 9B78     		ldrb	r3, [r3, #2]
 4929 0d3e DBB2     		uxtb	r3, r3
 4930 0d40 03F0F003 		and	r3, r3, #240
 4931 0d44 E02B     		cmp	r3, #224
 4932 0d46 03D0     		beq	.L315
 4933              	.L314:
1069:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4934              		.loc 1 1069 0 is_stmt 1
 4935 0d48 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1070:.\Protocolo.c **** 								return 0;
 4936              		.loc 1 1070 0
 4937 0d4c 0023     		movs	r3, #0
 4938 0d4e 98E1     		b	.L167
 4939              	.L315:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4940              		.loc 1 1066 0 discriminator 2
 4941 0d50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4942 0d52 0133     		adds	r3, r3, #1
 4943 0d54 FB73     		strb	r3, [r7, #15]
 4944              	.L313:
1066:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4945              		.loc 1 1066 0 is_stmt 0 discriminator 1
 4946 0d56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4947 0d58 0B2B     		cmp	r3, #11
 4948 0d5a DBD9     		bls	.L316
1071:.\Protocolo.c **** 							}							
1072:.\Protocolo.c **** 						}
1073:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4949              		.loc 1 1073 0 is_stmt 1
 4950 0d5c 0023     		movs	r3, #0
 4951 0d5e FB73     		strb	r3, [r7, #15]
 4952 0d60 23E0     		b	.L317
 4953              	.L320:
1074:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4954              		.loc 1 1074 0
 4955 0d62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4956 0d64 0C33     		adds	r3, r3, #12
 4957 0d66 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4958 0d68 1132     		adds	r2, r2, #17
 4959 0d6a 1E49     		ldr	r1, .L363
 4960 0d6c 8A5C     		ldrb	r2, [r1, r2]
 4961 0d6e D1B2     		uxtb	r1, r2
 4962 0d70 1D4A     		ldr	r2, .L363+4
 4963 0d72 1344     		add	r3, r3, r2
 4964 0d74 0A46     		mov	r2, r1
 4965 0d76 9A70     		strb	r2, [r3, #2]
1075:.\Protocolo.c **** 							if(lado2.totales[0][x+12]==0||(lado2.totales[0][x+12]&0xF0)!=0xE0){
 4966              		.loc 1 1075 0
 4967 0d78 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4968 0d7a 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 110


 4969 0d7c 1A4A     		ldr	r2, .L363+4
 4970 0d7e 1344     		add	r3, r3, r2
 4971 0d80 9B78     		ldrb	r3, [r3, #2]
 4972 0d82 DBB2     		uxtb	r3, r3
 4973 0d84 002B     		cmp	r3, #0
 4974 0d86 09D0     		beq	.L318
 4975              		.loc 1 1075 0 is_stmt 0 discriminator 1
 4976 0d88 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4977 0d8a 0C33     		adds	r3, r3, #12
 4978 0d8c 164A     		ldr	r2, .L363+4
 4979 0d8e 1344     		add	r3, r3, r2
 4980 0d90 9B78     		ldrb	r3, [r3, #2]
 4981 0d92 DBB2     		uxtb	r3, r3
 4982 0d94 03F0F003 		and	r3, r3, #240
 4983 0d98 E02B     		cmp	r3, #224
 4984 0d9a 03D0     		beq	.L319
 4985              	.L318:
1076:.\Protocolo.c **** 								Surtidor_ClearRxBuffer();
 4986              		.loc 1 1076 0 is_stmt 1
 4987 0d9c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1077:.\Protocolo.c **** 								return 0;
 4988              		.loc 1 1077 0
 4989 0da0 0023     		movs	r3, #0
 4990 0da2 6EE1     		b	.L167
 4991              	.L319:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4992              		.loc 1 1073 0 discriminator 2
 4993 0da4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4994 0da6 0133     		adds	r3, r3, #1
 4995 0da8 FB73     		strb	r3, [r7, #15]
 4996              	.L317:
1073:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4997              		.loc 1 1073 0 is_stmt 0 discriminator 1
 4998 0daa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4999 0dac 0B2B     		cmp	r3, #11
 5000 0dae D8D9     		bls	.L320
1078:.\Protocolo.c **** 							}							
1079:.\Protocolo.c **** 						}
1080:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 5001              		.loc 1 1080 0 is_stmt 1
 5002 0db0 0023     		movs	r3, #0
 5003 0db2 FB73     		strb	r3, [r7, #15]
 5004 0db4 0DE0     		b	.L321
 5005              	.L322:
1081:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5006              		.loc 1 1081 0 discriminator 3
 5007 0db6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5008 0db8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5009 0dba 1E32     		adds	r2, r2, #30
 5010 0dbc 0949     		ldr	r1, .L363
 5011 0dbe 8A5C     		ldrb	r2, [r1, r2]
 5012 0dc0 D1B2     		uxtb	r1, r2
 5013 0dc2 094A     		ldr	r2, .L363+4
 5014 0dc4 1344     		add	r3, r3, r2
 5015 0dc6 0A46     		mov	r2, r1
 5016 0dc8 83F84A20 		strb	r2, [r3, #74]
1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 111


 5017              		.loc 1 1080 0 discriminator 3
 5018 0dcc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5019 0dce 0133     		adds	r3, r3, #1
 5020 0dd0 FB73     		strb	r3, [r7, #15]
 5021              	.L321:
1080:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5022              		.loc 1 1080 0 is_stmt 0 discriminator 1
 5023 0dd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5024 0dd4 042B     		cmp	r3, #4
 5025 0dd6 EED9     		bls	.L322
1082:.\Protocolo.c **** 						}				
1083:.\Protocolo.c **** 						if(nmangueras==2){
 5026              		.loc 1 1083 0 is_stmt 1
 5027 0dd8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5028 0dda 022B     		cmp	r3, #2
 5029 0ddc 6CD1     		bne	.L323
1084:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5030              		.loc 1 1084 0
 5031 0dde 0023     		movs	r3, #0
 5032 0de0 FB73     		strb	r3, [r7, #15]
 5033 0de2 24E0     		b	.L324
 5034              	.L364:
 5035              		.align	2
 5036              	.L363:
 5037 0de4 00000000 		.word	Surtidor_rxBuffer
 5038 0de8 00000000 		.word	lado2
 5039              	.L327:
1085:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5040              		.loc 1 1085 0
 5041 0dec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5042 0dee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5043 0df0 2E32     		adds	r2, r2, #46
 5044 0df2 A649     		ldr	r1, .L365
 5045 0df4 8A5C     		ldrb	r2, [r1, r2]
 5046 0df6 D1B2     		uxtb	r1, r2
 5047 0df8 A54A     		ldr	r2, .L365+4
 5048 0dfa 1344     		add	r3, r3, r2
 5049 0dfc 0A46     		mov	r2, r1
 5050 0dfe 9A76     		strb	r2, [r3, #26]
1086:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5051              		.loc 1 1086 0
 5052 0e00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5053 0e02 A34A     		ldr	r2, .L365+4
 5054 0e04 1344     		add	r3, r3, r2
 5055 0e06 9B7E     		ldrb	r3, [r3, #26]
 5056 0e08 DBB2     		uxtb	r3, r3
 5057 0e0a 002B     		cmp	r3, #0
 5058 0e0c 08D0     		beq	.L325
 5059              		.loc 1 1086 0 is_stmt 0 discriminator 1
 5060 0e0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5061 0e10 9F4A     		ldr	r2, .L365+4
 5062 0e12 1344     		add	r3, r3, r2
 5063 0e14 9B7E     		ldrb	r3, [r3, #26]
 5064 0e16 DBB2     		uxtb	r3, r3
 5065 0e18 03F0F003 		and	r3, r3, #240
 5066 0e1c E02B     		cmp	r3, #224
 5067 0e1e 03D0     		beq	.L326
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 112


 5068              	.L325:
1087:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5069              		.loc 1 1087 0 is_stmt 1
 5070 0e20 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1088:.\Protocolo.c **** 									return 0;
 5071              		.loc 1 1088 0
 5072 0e24 0023     		movs	r3, #0
 5073 0e26 2CE1     		b	.L167
 5074              	.L326:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5075              		.loc 1 1084 0 discriminator 2
 5076 0e28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5077 0e2a 0133     		adds	r3, r3, #1
 5078 0e2c FB73     		strb	r3, [r7, #15]
 5079              	.L324:
1084:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5080              		.loc 1 1084 0 is_stmt 0 discriminator 1
 5081 0e2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5082 0e30 0B2B     		cmp	r3, #11
 5083 0e32 DBD9     		bls	.L327
1089:.\Protocolo.c **** 								}								
1090:.\Protocolo.c **** 							}
1091:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5084              		.loc 1 1091 0 is_stmt 1
 5085 0e34 0023     		movs	r3, #0
 5086 0e36 FB73     		strb	r3, [r7, #15]
 5087 0e38 23E0     		b	.L328
 5088              	.L331:
1092:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5089              		.loc 1 1092 0
 5090 0e3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5091 0e3c 0C33     		adds	r3, r3, #12
 5092 0e3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5093 0e40 3B32     		adds	r2, r2, #59
 5094 0e42 9249     		ldr	r1, .L365
 5095 0e44 8A5C     		ldrb	r2, [r1, r2]
 5096 0e46 D1B2     		uxtb	r1, r2
 5097 0e48 914A     		ldr	r2, .L365+4
 5098 0e4a 1344     		add	r3, r3, r2
 5099 0e4c 0A46     		mov	r2, r1
 5100 0e4e 9A76     		strb	r2, [r3, #26]
1093:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5101              		.loc 1 1093 0
 5102 0e50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5103 0e52 0C33     		adds	r3, r3, #12
 5104 0e54 8E4A     		ldr	r2, .L365+4
 5105 0e56 1344     		add	r3, r3, r2
 5106 0e58 9B7E     		ldrb	r3, [r3, #26]
 5107 0e5a DBB2     		uxtb	r3, r3
 5108 0e5c 002B     		cmp	r3, #0
 5109 0e5e 09D0     		beq	.L329
 5110              		.loc 1 1093 0 is_stmt 0 discriminator 1
 5111 0e60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5112 0e62 0C33     		adds	r3, r3, #12
 5113 0e64 8A4A     		ldr	r2, .L365+4
 5114 0e66 1344     		add	r3, r3, r2
 5115 0e68 9B7E     		ldrb	r3, [r3, #26]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 113


 5116 0e6a DBB2     		uxtb	r3, r3
 5117 0e6c 03F0F003 		and	r3, r3, #240
 5118 0e70 E02B     		cmp	r3, #224
 5119 0e72 03D0     		beq	.L330
 5120              	.L329:
1094:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5121              		.loc 1 1094 0 is_stmt 1
 5122 0e74 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1095:.\Protocolo.c **** 									return 0;
 5123              		.loc 1 1095 0
 5124 0e78 0023     		movs	r3, #0
 5125 0e7a 02E1     		b	.L167
 5126              	.L330:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5127              		.loc 1 1091 0 discriminator 2
 5128 0e7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5129 0e7e 0133     		adds	r3, r3, #1
 5130 0e80 FB73     		strb	r3, [r7, #15]
 5131              	.L328:
1091:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5132              		.loc 1 1091 0 is_stmt 0 discriminator 1
 5133 0e82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5134 0e84 0B2B     		cmp	r3, #11
 5135 0e86 D8D9     		bls	.L331
1096:.\Protocolo.c **** 								}								
1097:.\Protocolo.c **** 							}
1098:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5136              		.loc 1 1098 0 is_stmt 1
 5137 0e88 0023     		movs	r3, #0
 5138 0e8a FB73     		strb	r3, [r7, #15]
 5139 0e8c 0DE0     		b	.L332
 5140              	.L333:
1099:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5141              		.loc 1 1099 0 discriminator 3
 5142 0e8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5143 0e90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5144 0e92 4832     		adds	r2, r2, #72
 5145 0e94 7D49     		ldr	r1, .L365
 5146 0e96 8A5C     		ldrb	r2, [r1, r2]
 5147 0e98 D1B2     		uxtb	r1, r2
 5148 0e9a 7D4A     		ldr	r2, .L365+4
 5149 0e9c 1344     		add	r3, r3, r2
 5150 0e9e 0A46     		mov	r2, r1
 5151 0ea0 83F84F20 		strb	r2, [r3, #79]
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5152              		.loc 1 1098 0 discriminator 3
 5153 0ea4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5154 0ea6 0133     		adds	r3, r3, #1
 5155 0ea8 FB73     		strb	r3, [r7, #15]
 5156              	.L332:
1098:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5157              		.loc 1 1098 0 is_stmt 0 discriminator 1
 5158 0eaa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5159 0eac 042B     		cmp	r3, #4
 5160 0eae EED9     		bls	.L333
1100:.\Protocolo.c **** 							}
1101:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 114


 5161              		.loc 1 1101 0 is_stmt 1
 5162 0eb0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1102:.\Protocolo.c ****     						return 2;                            
 5163              		.loc 1 1102 0
 5164 0eb4 0223     		movs	r3, #2
 5165 0eb6 E4E0     		b	.L167
 5166              	.L323:
1103:.\Protocolo.c **** 						}
1104:.\Protocolo.c **** 						if(nmangueras==3){
 5167              		.loc 1 1104 0
 5168 0eb8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5169 0eba 032B     		cmp	r3, #3
 5170 0ebc 40F0D480 		bne	.L334
1105:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5171              		.loc 1 1105 0
 5172 0ec0 0023     		movs	r3, #0
 5173 0ec2 FB73     		strb	r3, [r7, #15]
 5174 0ec4 20E0     		b	.L335
 5175              	.L338:
1106:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5176              		.loc 1 1106 0
 5177 0ec6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5178 0ec8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5179 0eca 2E32     		adds	r2, r2, #46
 5180 0ecc 6F49     		ldr	r1, .L365
 5181 0ece 8A5C     		ldrb	r2, [r1, r2]
 5182 0ed0 D1B2     		uxtb	r1, r2
 5183 0ed2 6F4A     		ldr	r2, .L365+4
 5184 0ed4 1344     		add	r3, r3, r2
 5185 0ed6 0A46     		mov	r2, r1
 5186 0ed8 9A76     		strb	r2, [r3, #26]
1107:.\Protocolo.c **** 								if(lado2.totales[1][x]==0||(lado2.totales[1][x]&0xF0)!=0xE0){
 5187              		.loc 1 1107 0
 5188 0eda FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5189 0edc 6C4A     		ldr	r2, .L365+4
 5190 0ede 1344     		add	r3, r3, r2
 5191 0ee0 9B7E     		ldrb	r3, [r3, #26]
 5192 0ee2 DBB2     		uxtb	r3, r3
 5193 0ee4 002B     		cmp	r3, #0
 5194 0ee6 08D0     		beq	.L336
 5195              		.loc 1 1107 0 is_stmt 0 discriminator 1
 5196 0ee8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5197 0eea 694A     		ldr	r2, .L365+4
 5198 0eec 1344     		add	r3, r3, r2
 5199 0eee 9B7E     		ldrb	r3, [r3, #26]
 5200 0ef0 DBB2     		uxtb	r3, r3
 5201 0ef2 03F0F003 		and	r3, r3, #240
 5202 0ef6 E02B     		cmp	r3, #224
 5203 0ef8 03D0     		beq	.L337
 5204              	.L336:
1108:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5205              		.loc 1 1108 0 is_stmt 1
 5206 0efa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1109:.\Protocolo.c **** 									return 0;
 5207              		.loc 1 1109 0
 5208 0efe 0023     		movs	r3, #0
 5209 0f00 BFE0     		b	.L167
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 115


 5210              	.L337:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5211              		.loc 1 1105 0 discriminator 2
 5212 0f02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5213 0f04 0133     		adds	r3, r3, #1
 5214 0f06 FB73     		strb	r3, [r7, #15]
 5215              	.L335:
1105:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5216              		.loc 1 1105 0 is_stmt 0 discriminator 1
 5217 0f08 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5218 0f0a 0B2B     		cmp	r3, #11
 5219 0f0c DBD9     		bls	.L338
1110:.\Protocolo.c **** 								}								
1111:.\Protocolo.c **** 							}
1112:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5220              		.loc 1 1112 0 is_stmt 1
 5221 0f0e 0023     		movs	r3, #0
 5222 0f10 FB73     		strb	r3, [r7, #15]
 5223 0f12 23E0     		b	.L339
 5224              	.L342:
1113:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5225              		.loc 1 1113 0
 5226 0f14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5227 0f16 0C33     		adds	r3, r3, #12
 5228 0f18 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5229 0f1a 3B32     		adds	r2, r2, #59
 5230 0f1c 5B49     		ldr	r1, .L365
 5231 0f1e 8A5C     		ldrb	r2, [r1, r2]
 5232 0f20 D1B2     		uxtb	r1, r2
 5233 0f22 5B4A     		ldr	r2, .L365+4
 5234 0f24 1344     		add	r3, r3, r2
 5235 0f26 0A46     		mov	r2, r1
 5236 0f28 9A76     		strb	r2, [r3, #26]
1114:.\Protocolo.c **** 								if(lado2.totales[1][x+12]==0||(lado2.totales[1][x+12]&0xF0)!=0xE0){
 5237              		.loc 1 1114 0
 5238 0f2a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5239 0f2c 0C33     		adds	r3, r3, #12
 5240 0f2e 584A     		ldr	r2, .L365+4
 5241 0f30 1344     		add	r3, r3, r2
 5242 0f32 9B7E     		ldrb	r3, [r3, #26]
 5243 0f34 DBB2     		uxtb	r3, r3
 5244 0f36 002B     		cmp	r3, #0
 5245 0f38 09D0     		beq	.L340
 5246              		.loc 1 1114 0 is_stmt 0 discriminator 1
 5247 0f3a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5248 0f3c 0C33     		adds	r3, r3, #12
 5249 0f3e 544A     		ldr	r2, .L365+4
 5250 0f40 1344     		add	r3, r3, r2
 5251 0f42 9B7E     		ldrb	r3, [r3, #26]
 5252 0f44 DBB2     		uxtb	r3, r3
 5253 0f46 03F0F003 		and	r3, r3, #240
 5254 0f4a E02B     		cmp	r3, #224
 5255 0f4c 03D0     		beq	.L341
 5256              	.L340:
1115:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5257              		.loc 1 1115 0 is_stmt 1
 5258 0f4e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 116


1116:.\Protocolo.c **** 									return 0;
 5259              		.loc 1 1116 0
 5260 0f52 0023     		movs	r3, #0
 5261 0f54 95E0     		b	.L167
 5262              	.L341:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5263              		.loc 1 1112 0 discriminator 2
 5264 0f56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5265 0f58 0133     		adds	r3, r3, #1
 5266 0f5a FB73     		strb	r3, [r7, #15]
 5267              	.L339:
1112:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5268              		.loc 1 1112 0 is_stmt 0 discriminator 1
 5269 0f5c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5270 0f5e 0B2B     		cmp	r3, #11
 5271 0f60 D8D9     		bls	.L342
1117:.\Protocolo.c **** 								}								
1118:.\Protocolo.c **** 							}
1119:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5272              		.loc 1 1119 0 is_stmt 1
 5273 0f62 0023     		movs	r3, #0
 5274 0f64 FB73     		strb	r3, [r7, #15]
 5275 0f66 0DE0     		b	.L343
 5276              	.L344:
1120:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5277              		.loc 1 1120 0 discriminator 3
 5278 0f68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5279 0f6a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5280 0f6c 4832     		adds	r2, r2, #72
 5281 0f6e 4749     		ldr	r1, .L365
 5282 0f70 8A5C     		ldrb	r2, [r1, r2]
 5283 0f72 D1B2     		uxtb	r1, r2
 5284 0f74 464A     		ldr	r2, .L365+4
 5285 0f76 1344     		add	r3, r3, r2
 5286 0f78 0A46     		mov	r2, r1
 5287 0f7a 83F84F20 		strb	r2, [r3, #79]
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5288              		.loc 1 1119 0 discriminator 3
 5289 0f7e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5290 0f80 0133     		adds	r3, r3, #1
 5291 0f82 FB73     		strb	r3, [r7, #15]
 5292              	.L343:
1119:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5293              		.loc 1 1119 0 is_stmt 0 discriminator 1
 5294 0f84 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5295 0f86 042B     		cmp	r3, #4
 5296 0f88 EED9     		bls	.L344
1121:.\Protocolo.c **** 							}					
1122:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5297              		.loc 1 1122 0 is_stmt 1
 5298 0f8a 0023     		movs	r3, #0
 5299 0f8c FB73     		strb	r3, [r7, #15]
 5300 0f8e 23E0     		b	.L345
 5301              	.L348:
1123:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5302              		.loc 1 1123 0
 5303 0f90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 117


 5304 0f92 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5305 0f94 5832     		adds	r2, r2, #88
 5306 0f96 3D49     		ldr	r1, .L365
 5307 0f98 8A5C     		ldrb	r2, [r1, r2]
 5308 0f9a D1B2     		uxtb	r1, r2
 5309 0f9c 3C4A     		ldr	r2, .L365+4
 5310 0f9e 1344     		add	r3, r3, r2
 5311 0fa0 0A46     		mov	r2, r1
 5312 0fa2 83F83220 		strb	r2, [r3, #50]
1124:.\Protocolo.c **** 								if(lado2.totales[2][x]==0||(lado2.totales[2][x]&0xF0)!=0xE0){
 5313              		.loc 1 1124 0
 5314 0fa6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5315 0fa8 394A     		ldr	r2, .L365+4
 5316 0faa 1344     		add	r3, r3, r2
 5317 0fac 93F83230 		ldrb	r3, [r3, #50]
 5318 0fb0 DBB2     		uxtb	r3, r3
 5319 0fb2 002B     		cmp	r3, #0
 5320 0fb4 09D0     		beq	.L346
 5321              		.loc 1 1124 0 is_stmt 0 discriminator 1
 5322 0fb6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5323 0fb8 354A     		ldr	r2, .L365+4
 5324 0fba 1344     		add	r3, r3, r2
 5325 0fbc 93F83230 		ldrb	r3, [r3, #50]
 5326 0fc0 DBB2     		uxtb	r3, r3
 5327 0fc2 03F0F003 		and	r3, r3, #240
 5328 0fc6 E02B     		cmp	r3, #224
 5329 0fc8 03D0     		beq	.L347
 5330              	.L346:
1125:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5331              		.loc 1 1125 0 is_stmt 1
 5332 0fca FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1126:.\Protocolo.c **** 									return 0;
 5333              		.loc 1 1126 0
 5334 0fce 0023     		movs	r3, #0
 5335 0fd0 57E0     		b	.L167
 5336              	.L347:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5337              		.loc 1 1122 0 discriminator 2
 5338 0fd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5339 0fd4 0133     		adds	r3, r3, #1
 5340 0fd6 FB73     		strb	r3, [r7, #15]
 5341              	.L345:
1122:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5342              		.loc 1 1122 0 is_stmt 0 discriminator 1
 5343 0fd8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5344 0fda 0B2B     		cmp	r3, #11
 5345 0fdc D8D9     		bls	.L348
1127:.\Protocolo.c **** 								}								
1128:.\Protocolo.c **** 							}
1129:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5346              		.loc 1 1129 0 is_stmt 1
 5347 0fde 0023     		movs	r3, #0
 5348 0fe0 FB73     		strb	r3, [r7, #15]
 5349 0fe2 26E0     		b	.L349
 5350              	.L352:
1130:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5351              		.loc 1 1130 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 118


 5352 0fe4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5353 0fe6 0C33     		adds	r3, r3, #12
 5354 0fe8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5355 0fea 6532     		adds	r2, r2, #101
 5356 0fec 2749     		ldr	r1, .L365
 5357 0fee 8A5C     		ldrb	r2, [r1, r2]
 5358 0ff0 D1B2     		uxtb	r1, r2
 5359 0ff2 274A     		ldr	r2, .L365+4
 5360 0ff4 1344     		add	r3, r3, r2
 5361 0ff6 0A46     		mov	r2, r1
 5362 0ff8 83F83220 		strb	r2, [r3, #50]
1131:.\Protocolo.c **** 								if(lado2.totales[2][x+12]==0||(lado2.totales[2][x+12]&0xF0)!=0xE0){
 5363              		.loc 1 1131 0
 5364 0ffc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5365 0ffe 0C33     		adds	r3, r3, #12
 5366 1000 234A     		ldr	r2, .L365+4
 5367 1002 1344     		add	r3, r3, r2
 5368 1004 93F83230 		ldrb	r3, [r3, #50]
 5369 1008 DBB2     		uxtb	r3, r3
 5370 100a 002B     		cmp	r3, #0
 5371 100c 0AD0     		beq	.L350
 5372              		.loc 1 1131 0 is_stmt 0 discriminator 1
 5373 100e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5374 1010 0C33     		adds	r3, r3, #12
 5375 1012 1F4A     		ldr	r2, .L365+4
 5376 1014 1344     		add	r3, r3, r2
 5377 1016 93F83230 		ldrb	r3, [r3, #50]
 5378 101a DBB2     		uxtb	r3, r3
 5379 101c 03F0F003 		and	r3, r3, #240
 5380 1020 E02B     		cmp	r3, #224
 5381 1022 03D0     		beq	.L351
 5382              	.L350:
1132:.\Protocolo.c **** 									Surtidor_ClearRxBuffer();
 5383              		.loc 1 1132 0 is_stmt 1
 5384 1024 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1133:.\Protocolo.c **** 									return 0;
 5385              		.loc 1 1133 0
 5386 1028 0023     		movs	r3, #0
 5387 102a 2AE0     		b	.L167
 5388              	.L351:
1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5389              		.loc 1 1129 0 discriminator 2
 5390 102c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5391 102e 0133     		adds	r3, r3, #1
 5392 1030 FB73     		strb	r3, [r7, #15]
 5393              	.L349:
1129:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5394              		.loc 1 1129 0 is_stmt 0 discriminator 1
 5395 1032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5396 1034 0B2B     		cmp	r3, #11
 5397 1036 D5D9     		bls	.L352
1134:.\Protocolo.c **** 								}								
1135:.\Protocolo.c **** 							}
1136:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5398              		.loc 1 1136 0 is_stmt 1
 5399 1038 0023     		movs	r3, #0
 5400 103a FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 119


 5401 103c 0DE0     		b	.L353
 5402              	.L354:
1137:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5403              		.loc 1 1137 0 discriminator 3
 5404 103e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5405 1040 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5406 1042 7232     		adds	r2, r2, #114
 5407 1044 1149     		ldr	r1, .L365
 5408 1046 8A5C     		ldrb	r2, [r1, r2]
 5409 1048 D1B2     		uxtb	r1, r2
 5410 104a 114A     		ldr	r2, .L365+4
 5411 104c 1344     		add	r3, r3, r2
 5412 104e 0A46     		mov	r2, r1
 5413 1050 83F85420 		strb	r2, [r3, #84]
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5414              		.loc 1 1136 0 discriminator 3
 5415 1054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5416 1056 0133     		adds	r3, r3, #1
 5417 1058 FB73     		strb	r3, [r7, #15]
 5418              	.L353:
1136:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5419              		.loc 1 1136 0 is_stmt 0 discriminator 1
 5420 105a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5421 105c 042B     		cmp	r3, #4
 5422 105e EED9     		bls	.L354
1138:.\Protocolo.c **** 							}
1139:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5423              		.loc 1 1139 0 is_stmt 1
 5424 1060 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1140:.\Protocolo.c ****     						return 3;                            
 5425              		.loc 1 1140 0
 5426 1064 0323     		movs	r3, #3
 5427 1066 0CE0     		b	.L167
 5428              	.L334:
1141:.\Protocolo.c **** 						}
1142:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5429              		.loc 1 1142 0
 5430 1068 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1143:.\Protocolo.c **** 						return 1;			
 5431              		.loc 1 1143 0
 5432 106c 0123     		movs	r3, #1
 5433 106e 08E0     		b	.L167
 5434              	.L308:
1144:.\Protocolo.c **** 					}
1145:.\Protocolo.c **** 					else{
1146:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5435              		.loc 1 1146 0
 5436 1070 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1147:.\Protocolo.c **** 						return 0;		
 5437              		.loc 1 1147 0
 5438 1074 0023     		movs	r3, #0
 5439 1076 04E0     		b	.L167
 5440              	.L307:
1148:.\Protocolo.c **** 					}
1149:.\Protocolo.c **** 				}
1150:.\Protocolo.c **** 				else{
1151:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 120


 5441              		.loc 1 1151 0
 5442 1078 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1152:.\Protocolo.c **** 					return 0;		
 5443              		.loc 1 1152 0
 5444 107c 0023     		movs	r3, #0
 5445 107e 00E0     		b	.L167
 5446              	.L154:
1153:.\Protocolo.c **** 				}				
1154:.\Protocolo.c **** 			}		
1155:.\Protocolo.c **** 		}
1156:.\Protocolo.c **** 	}
1157:.\Protocolo.c **** 	else{
1158:.\Protocolo.c **** 		return 0;
 5447              		.loc 1 1158 0
 5448 1080 0023     		movs	r3, #0
 5449              	.L167:
1159:.\Protocolo.c **** 	}
1160:.\Protocolo.c **** }
 5450              		.loc 1 1160 0
 5451 1082 1846     		mov	r0, r3
 5452 1084 1037     		adds	r7, r7, #16
 5453              		.cfi_def_cfa_offset 8
 5454 1086 BD46     		mov	sp, r7
 5455              		.cfi_def_cfa_register 13
 5456              		@ sp needed
 5457 1088 80BD     		pop	{r7, pc}
 5458              	.L366:
 5459 108a 00BF     		.align	2
 5460              	.L365:
 5461 108c 00000000 		.word	Surtidor_rxBuffer
 5462 1090 00000000 		.word	lado2
 5463              		.cfi_endproc
 5464              	.LFE72:
 5465              		.size	totales, .-totales
 5466              		.text
 5467              	.Letext0:
 5468              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5469              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5470              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5471              		.file 5 ".\\VariablesG.h"
 5472              		.file 6 "Generated_Source\\PSoC5/Surtidor.h"
 5473              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 5474              		.section	.debug_info,"",%progbits
 5475              	.Ldebug_info0:
 5476 0000 210B0000 		.4byte	0xb21
 5477 0004 0400     		.2byte	0x4
 5478 0006 00000000 		.4byte	.Ldebug_abbrev0
 5479 000a 04       		.byte	0x4
 5480 000b 01       		.uleb128 0x1
 5481 000c A8020000 		.4byte	.LASF118
 5482 0010 01       		.byte	0x1
 5483 0011 31010000 		.4byte	.LASF119
 5484 0015 30040000 		.4byte	.LASF120
 5485 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5486 001d 00000000 		.4byte	0
 5487 0021 00000000 		.4byte	.Ldebug_line0
 5488 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 121


 5489 0026 01       		.byte	0x1
 5490 0027 06       		.byte	0x6
 5491 0028 B8040000 		.4byte	.LASF0
 5492 002c 02       		.uleb128 0x2
 5493 002d 01       		.byte	0x1
 5494 002e 08       		.byte	0x8
 5495 002f 78040000 		.4byte	.LASF1
 5496 0033 02       		.uleb128 0x2
 5497 0034 02       		.byte	0x2
 5498 0035 05       		.byte	0x5
 5499 0036 AD030000 		.4byte	.LASF2
 5500 003a 02       		.uleb128 0x2
 5501 003b 02       		.byte	0x2
 5502 003c 07       		.byte	0x7
 5503 003d DA040000 		.4byte	.LASF3
 5504 0041 03       		.uleb128 0x3
 5505 0042 6C000000 		.4byte	.LASF9
 5506 0046 02       		.byte	0x2
 5507 0047 3F       		.byte	0x3f
 5508 0048 4C000000 		.4byte	0x4c
 5509 004c 02       		.uleb128 0x2
 5510 004d 04       		.byte	0x4
 5511 004e 05       		.byte	0x5
 5512 004f B7030000 		.4byte	.LASF4
 5513 0053 02       		.uleb128 0x2
 5514 0054 04       		.byte	0x4
 5515 0055 07       		.byte	0x7
 5516 0056 1E040000 		.4byte	.LASF5
 5517 005a 02       		.uleb128 0x2
 5518 005b 08       		.byte	0x8
 5519 005c 05       		.byte	0x5
 5520 005d 7B020000 		.4byte	.LASF6
 5521 0061 02       		.uleb128 0x2
 5522 0062 08       		.byte	0x8
 5523 0063 07       		.byte	0x7
 5524 0064 1A010000 		.4byte	.LASF7
 5525 0068 04       		.uleb128 0x4
 5526 0069 04       		.byte	0x4
 5527 006a 05       		.byte	0x5
 5528 006b 696E7400 		.ascii	"int\000"
 5529 006f 02       		.uleb128 0x2
 5530 0070 04       		.byte	0x4
 5531 0071 07       		.byte	0x7
 5532 0072 57000000 		.4byte	.LASF8
 5533 0076 03       		.uleb128 0x3
 5534 0077 65040000 		.4byte	.LASF10
 5535 007b 03       		.byte	0x3
 5536 007c 2C       		.byte	0x2c
 5537 007d 41000000 		.4byte	0x41
 5538 0081 03       		.uleb128 0x3
 5539 0082 ED040000 		.4byte	.LASF11
 5540 0086 04       		.byte	0x4
 5541 0087 B4       		.byte	0xb4
 5542 0088 2C000000 		.4byte	0x2c
 5543 008c 03       		.uleb128 0x3
 5544 008d 12020000 		.4byte	.LASF12
 5545 0091 04       		.byte	0x4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 122


 5546 0092 B5       		.byte	0xb5
 5547 0093 3A000000 		.4byte	0x3a
 5548 0097 02       		.uleb128 0x2
 5549 0098 04       		.byte	0x4
 5550 0099 04       		.byte	0x4
 5551 009a DC000000 		.4byte	.LASF13
 5552 009e 02       		.uleb128 0x2
 5553 009f 08       		.byte	0x8
 5554 00a0 04       		.byte	0x4
 5555 00a1 F3040000 		.4byte	.LASF14
 5556 00a5 02       		.uleb128 0x2
 5557 00a6 01       		.byte	0x1
 5558 00a7 08       		.byte	0x8
 5559 00a8 F7010000 		.4byte	.LASF15
 5560 00ac 05       		.uleb128 0x5
 5561 00ad 81000000 		.4byte	0x81
 5562 00b1 05       		.uleb128 0x5
 5563 00b2 8C000000 		.4byte	0x8c
 5564 00b6 02       		.uleb128 0x2
 5565 00b7 04       		.byte	0x4
 5566 00b8 07       		.byte	0x7
 5567 00b9 15040000 		.4byte	.LASF16
 5568 00bd 06       		.uleb128 0x6
 5569 00be 81000000 		.4byte	0x81
 5570 00c2 CD000000 		.4byte	0xcd
 5571 00c6 07       		.uleb128 0x7
 5572 00c7 B6000000 		.4byte	0xb6
 5573 00cb 03       		.byte	0x3
 5574 00cc 00       		.byte	0
 5575 00cd 08       		.uleb128 0x8
 5576 00ce CD030000 		.4byte	.LASF21
 5577 00d2 5D       		.byte	0x5d
 5578 00d3 05       		.byte	0x5
 5579 00d4 57       		.byte	0x57
 5580 00d5 22010000 		.4byte	0x122
 5581 00d9 09       		.uleb128 0x9
 5582 00da 64697200 		.ascii	"dir\000"
 5583 00de 05       		.byte	0x5
 5584 00df 58       		.byte	0x58
 5585 00e0 AC000000 		.4byte	0xac
 5586 00e4 00       		.byte	0
 5587 00e5 0A       		.uleb128 0xa
 5588 00e6 6C030000 		.4byte	.LASF17
 5589 00ea 05       		.byte	0x5
 5590 00eb 59       		.byte	0x59
 5591 00ec AC000000 		.4byte	0xac
 5592 00f0 01       		.byte	0x1
 5593 00f1 0A       		.uleb128 0xa
 5594 00f2 3E020000 		.4byte	.LASF18
 5595 00f6 05       		.byte	0x5
 5596 00f7 5A       		.byte	0x5a
 5597 00f8 38010000 		.4byte	0x138
 5598 00fc 02       		.byte	0x2
 5599 00fd 09       		.uleb128 0x9
 5600 00fe 70707500 		.ascii	"ppu\000"
 5601 0102 05       		.byte	0x5
 5602 0103 5B       		.byte	0x5b
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 123


 5603 0104 53010000 		.4byte	0x153
 5604 0108 4A       		.byte	0x4a
 5605 0109 0A       		.uleb128 0xa
 5606 010a 19050000 		.4byte	.LASF19
 5607 010e 05       		.byte	0x5
 5608 010f 5C       		.byte	0x5c
 5609 0110 6E010000 		.4byte	0x16e
 5610 0114 59       		.byte	0x59
 5611 0115 0A       		.uleb128 0xa
 5612 0116 08020000 		.4byte	.LASF20
 5613 011a 05       		.byte	0x5
 5614 011b 5D       		.byte	0x5d
 5615 011c AC000000 		.4byte	0xac
 5616 0120 5C       		.byte	0x5c
 5617 0121 00       		.byte	0
 5618 0122 06       		.uleb128 0x6
 5619 0123 81000000 		.4byte	0x81
 5620 0127 38010000 		.4byte	0x138
 5621 012b 07       		.uleb128 0x7
 5622 012c B6000000 		.4byte	0xb6
 5623 0130 02       		.byte	0x2
 5624 0131 07       		.uleb128 0x7
 5625 0132 B6000000 		.4byte	0xb6
 5626 0136 17       		.byte	0x17
 5627 0137 00       		.byte	0
 5628 0138 05       		.uleb128 0x5
 5629 0139 22010000 		.4byte	0x122
 5630 013d 06       		.uleb128 0x6
 5631 013e 81000000 		.4byte	0x81
 5632 0142 53010000 		.4byte	0x153
 5633 0146 07       		.uleb128 0x7
 5634 0147 B6000000 		.4byte	0xb6
 5635 014b 02       		.byte	0x2
 5636 014c 07       		.uleb128 0x7
 5637 014d B6000000 		.4byte	0xb6
 5638 0151 04       		.byte	0x4
 5639 0152 00       		.byte	0
 5640 0153 05       		.uleb128 0x5
 5641 0154 3D010000 		.4byte	0x13d
 5642 0158 06       		.uleb128 0x6
 5643 0159 81000000 		.4byte	0x81
 5644 015d 6E010000 		.4byte	0x16e
 5645 0161 07       		.uleb128 0x7
 5646 0162 B6000000 		.4byte	0xb6
 5647 0166 02       		.byte	0x2
 5648 0167 07       		.uleb128 0x7
 5649 0168 B6000000 		.4byte	0xb6
 5650 016c 00       		.byte	0
 5651 016d 00       		.byte	0
 5652 016e 05       		.uleb128 0x5
 5653 016f 58010000 		.4byte	0x158
 5654 0173 08       		.uleb128 0x8
 5655 0174 52030000 		.4byte	.LASF22
 5656 0178 76       		.byte	0x76
 5657 0179 05       		.byte	0x5
 5658 017a 6E       		.byte	0x6e
 5659 017b 62020000 		.4byte	0x262
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 124


 5660 017f 0A       		.uleb128 0xa
 5661 0180 A8000000 		.4byte	.LASF23
 5662 0184 05       		.byte	0x5
 5663 0185 6F       		.byte	0x6f
 5664 0186 81000000 		.4byte	0x81
 5665 018a 00       		.byte	0
 5666 018b 0A       		.uleb128 0xa
 5667 018c 19050000 		.4byte	.LASF19
 5668 0190 05       		.byte	0x5
 5669 0191 70       		.byte	0x70
 5670 0192 81000000 		.4byte	0x81
 5671 0196 01       		.byte	0x1
 5672 0197 09       		.uleb128 0x9
 5673 0198 70707500 		.ascii	"ppu\000"
 5674 019c 05       		.byte	0x5
 5675 019d 71       		.byte	0x71
 5676 019e 62020000 		.4byte	0x262
 5677 01a2 02       		.byte	0x2
 5678 01a3 0A       		.uleb128 0xa
 5679 01a4 59030000 		.4byte	.LASF24
 5680 01a8 05       		.byte	0x5
 5681 01a9 72       		.byte	0x72
 5682 01aa 72020000 		.4byte	0x272
 5683 01ae 07       		.byte	0x7
 5684 01af 0A       		.uleb128 0xa
 5685 01b0 8C010000 		.4byte	.LASF25
 5686 01b4 05       		.byte	0x5
 5687 01b5 73       		.byte	0x73
 5688 01b6 72020000 		.4byte	0x272
 5689 01ba 10       		.byte	0x10
 5690 01bb 0A       		.uleb128 0xa
 5691 01bc 89020000 		.4byte	.LASF26
 5692 01c0 05       		.byte	0x5
 5693 01c1 74       		.byte	0x74
 5694 01c2 81000000 		.4byte	0x81
 5695 01c6 19       		.byte	0x19
 5696 01c7 0A       		.uleb128 0xa
 5697 01c8 10050000 		.4byte	.LASF27
 5698 01cc 05       		.byte	0x5
 5699 01cd 75       		.byte	0x75
 5700 01ce 81000000 		.4byte	0x81
 5701 01d2 1A       		.byte	0x1a
 5702 01d3 0A       		.uleb128 0xa
 5703 01d4 D5000000 		.4byte	.LASF28
 5704 01d8 05       		.byte	0x5
 5705 01d9 76       		.byte	0x76
 5706 01da 82020000 		.4byte	0x282
 5707 01de 1B       		.byte	0x1b
 5708 01df 09       		.uleb128 0x9
 5709 01e0 696400   		.ascii	"id\000"
 5710 01e3 05       		.byte	0x5
 5711 01e4 77       		.byte	0x77
 5712 01e5 92020000 		.4byte	0x292
 5713 01e9 23       		.byte	0x23
 5714 01ea 0A       		.uleb128 0xa
 5715 01eb 32020000 		.4byte	.LASF29
 5716 01ef 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 125


 5717 01f0 78       		.byte	0x78
 5718 01f1 92020000 		.4byte	0x292
 5719 01f5 33       		.byte	0x33
 5720 01f6 09       		.uleb128 0x9
 5721 01f7 6B6D00   		.ascii	"km\000"
 5722 01fa 05       		.byte	0x5
 5723 01fb 79       		.byte	0x79
 5724 01fc A2020000 		.4byte	0x2a2
 5725 0200 43       		.byte	0x43
 5726 0201 0A       		.uleb128 0xa
 5727 0202 7E010000 		.4byte	.LASF30
 5728 0206 05       		.byte	0x5
 5729 0207 7A       		.byte	0x7a
 5730 0208 72020000 		.4byte	0x272
 5731 020c 4E       		.byte	0x4e
 5732 020d 0A       		.uleb128 0xa
 5733 020e 11010000 		.4byte	.LASF31
 5734 0212 05       		.byte	0x5
 5735 0213 7B       		.byte	0x7b
 5736 0214 81000000 		.4byte	0x81
 5737 0218 57       		.byte	0x57
 5738 0219 0A       		.uleb128 0xa
 5739 021a 27020000 		.4byte	.LASF32
 5740 021e 05       		.byte	0x5
 5741 021f 7C       		.byte	0x7c
 5742 0220 81000000 		.4byte	0x81
 5743 0224 58       		.byte	0x58
 5744 0225 0A       		.uleb128 0xa
 5745 0226 A1020000 		.4byte	.LASF33
 5746 022a 05       		.byte	0x5
 5747 022b 7D       		.byte	0x7d
 5748 022c A2020000 		.4byte	0x2a2
 5749 0230 59       		.byte	0x59
 5750 0231 0A       		.uleb128 0xa
 5751 0232 00000000 		.4byte	.LASF34
 5752 0236 05       		.byte	0x5
 5753 0237 7E       		.byte	0x7e
 5754 0238 A2020000 		.4byte	0x2a2
 5755 023c 64       		.byte	0x64
 5756 023d 0A       		.uleb128 0xa
 5757 023e 38020000 		.4byte	.LASF35
 5758 0242 05       		.byte	0x5
 5759 0243 7F       		.byte	0x7f
 5760 0244 81000000 		.4byte	0x81
 5761 0248 6F       		.byte	0x6f
 5762 0249 0A       		.uleb128 0xa
 5763 024a 6D040000 		.4byte	.LASF36
 5764 024e 05       		.byte	0x5
 5765 024f 80       		.byte	0x80
 5766 0250 81000000 		.4byte	0x81
 5767 0254 70       		.byte	0x70
 5768 0255 0A       		.uleb128 0xa
 5769 0256 73030000 		.4byte	.LASF37
 5770 025a 05       		.byte	0x5
 5771 025b 81       		.byte	0x81
 5772 025c 62020000 		.4byte	0x262
 5773 0260 71       		.byte	0x71
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 126


 5774 0261 00       		.byte	0
 5775 0262 06       		.uleb128 0x6
 5776 0263 81000000 		.4byte	0x81
 5777 0267 72020000 		.4byte	0x272
 5778 026b 07       		.uleb128 0x7
 5779 026c B6000000 		.4byte	0xb6
 5780 0270 04       		.byte	0x4
 5781 0271 00       		.byte	0
 5782 0272 06       		.uleb128 0x6
 5783 0273 81000000 		.4byte	0x81
 5784 0277 82020000 		.4byte	0x282
 5785 027b 07       		.uleb128 0x7
 5786 027c B6000000 		.4byte	0xb6
 5787 0280 08       		.byte	0x8
 5788 0281 00       		.byte	0
 5789 0282 06       		.uleb128 0x6
 5790 0283 81000000 		.4byte	0x81
 5791 0287 92020000 		.4byte	0x292
 5792 028b 07       		.uleb128 0x7
 5793 028c B6000000 		.4byte	0xb6
 5794 0290 07       		.byte	0x7
 5795 0291 00       		.byte	0
 5796 0292 06       		.uleb128 0x6
 5797 0293 81000000 		.4byte	0x81
 5798 0297 A2020000 		.4byte	0x2a2
 5799 029b 07       		.uleb128 0x7
 5800 029c B6000000 		.4byte	0xb6
 5801 02a0 0F       		.byte	0xf
 5802 02a1 00       		.byte	0
 5803 02a2 06       		.uleb128 0x6
 5804 02a3 81000000 		.4byte	0x81
 5805 02a7 B2020000 		.4byte	0x2b2
 5806 02ab 07       		.uleb128 0x7
 5807 02ac B6000000 		.4byte	0xb6
 5808 02b0 0A       		.byte	0xa
 5809 02b1 00       		.byte	0
 5810 02b2 0B       		.uleb128 0xb
 5811 02b3 1F050000 		.4byte	.LASF121
 5812 02b7 01       		.byte	0x1
 5813 02b8 3F       		.byte	0x3f
 5814 02b9 00000000 		.4byte	.LFB63
 5815 02bd 14000000 		.4byte	.LFE63-.LFB63
 5816 02c1 01       		.uleb128 0x1
 5817 02c2 9C       		.byte	0x9c
 5818 02c3 0C       		.uleb128 0xc
 5819 02c4 86040000 		.4byte	.LASF38
 5820 02c8 01       		.byte	0x1
 5821 02c9 56       		.byte	0x56
 5822 02ca 81000000 		.4byte	0x81
 5823 02ce 00000000 		.4byte	.LFB64
 5824 02d2 98000000 		.4byte	.LFE64-.LFB64
 5825 02d6 01       		.uleb128 0x1
 5826 02d7 9C       		.byte	0x9c
 5827 02d8 F9020000 		.4byte	0x2f9
 5828 02dc 0D       		.uleb128 0xd
 5829 02dd 64697200 		.ascii	"dir\000"
 5830 02e1 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 127


 5831 02e2 56       		.byte	0x56
 5832 02e3 81000000 		.4byte	0x81
 5833 02e7 02       		.uleb128 0x2
 5834 02e8 91       		.byte	0x91
 5835 02e9 6F       		.sleb128 -17
 5836 02ea 0E       		.uleb128 0xe
 5837 02eb 6C030000 		.4byte	.LASF17
 5838 02ef 01       		.byte	0x1
 5839 02f0 57       		.byte	0x57
 5840 02f1 81000000 		.4byte	0x81
 5841 02f5 02       		.uleb128 0x2
 5842 02f6 91       		.byte	0x91
 5843 02f7 77       		.sleb128 -9
 5844 02f8 00       		.byte	0
 5845 02f9 0C       		.uleb128 0xc
 5846 02fa 84010000 		.4byte	.LASF39
 5847 02fe 01       		.byte	0x1
 5848 02ff 86       		.byte	0x86
 5849 0300 81000000 		.4byte	0x81
 5850 0304 00000000 		.4byte	.LFB65
 5851 0308 A0000000 		.4byte	.LFE65-.LFB65
 5852 030c 01       		.uleb128 0x1
 5853 030d 9C       		.byte	0x9c
 5854 030e 1F030000 		.4byte	0x31f
 5855 0312 0F       		.uleb128 0xf
 5856 0313 7800     		.ascii	"x\000"
 5857 0315 01       		.byte	0x1
 5858 0316 87       		.byte	0x87
 5859 0317 81000000 		.4byte	0x81
 5860 031b 02       		.uleb128 0x2
 5861 031c 91       		.byte	0x91
 5862 031d 77       		.sleb128 -9
 5863 031e 00       		.byte	0
 5864 031f 10       		.uleb128 0x10
 5865 0320 97040000 		.4byte	.LASF43
 5866 0324 01       		.byte	0x1
 5867 0325 B2       		.byte	0xb2
 5868 0326 00000000 		.4byte	.LFB66
 5869 032a 36000000 		.4byte	.LFE66-.LFB66
 5870 032e 01       		.uleb128 0x1
 5871 032f 9C       		.byte	0x9c
 5872 0330 51030000 		.4byte	0x351
 5873 0334 0D       		.uleb128 0xd
 5874 0335 76616C00 		.ascii	"val\000"
 5875 0339 01       		.byte	0x1
 5876 033a B2       		.byte	0xb2
 5877 033b 81000000 		.4byte	0x81
 5878 033f 02       		.uleb128 0x2
 5879 0340 91       		.byte	0x91
 5880 0341 6F       		.sleb128 -17
 5881 0342 0E       		.uleb128 0xe
 5882 0343 6C030000 		.4byte	.LASF17
 5883 0347 01       		.byte	0x1
 5884 0348 B3       		.byte	0xb3
 5885 0349 81000000 		.4byte	0x81
 5886 034d 02       		.uleb128 0x2
 5887 034e 91       		.byte	0x91
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 128


 5888 034f 77       		.sleb128 -9
 5889 0350 00       		.byte	0
 5890 0351 0C       		.uleb128 0xc
 5891 0352 01040000 		.4byte	.LASF40
 5892 0356 01       		.byte	0x1
 5893 0357 CF       		.byte	0xcf
 5894 0358 81000000 		.4byte	0x81
 5895 035c 00000000 		.4byte	.LFB67
 5896 0360 7C010000 		.4byte	.LFE67-.LFB67
 5897 0364 01       		.uleb128 0x1
 5898 0365 9C       		.byte	0x9c
 5899 0366 A1030000 		.4byte	0x3a1
 5900 036a 0D       		.uleb128 0xd
 5901 036b 76616C00 		.ascii	"val\000"
 5902 036f 01       		.byte	0x1
 5903 0370 CF       		.byte	0xcf
 5904 0371 81000000 		.4byte	0x81
 5905 0375 02       		.uleb128 0x2
 5906 0376 91       		.byte	0x91
 5907 0377 4F       		.sleb128 -49
 5908 0378 0E       		.uleb128 0xe
 5909 0379 FA040000 		.4byte	.LASF41
 5910 037d 01       		.byte	0x1
 5911 037e D0       		.byte	0xd0
 5912 037f A1030000 		.4byte	0x3a1
 5913 0383 02       		.uleb128 0x2
 5914 0384 91       		.byte	0x91
 5915 0385 5C       		.sleb128 -36
 5916 0386 0F       		.uleb128 0xf
 5917 0387 7800     		.ascii	"x\000"
 5918 0389 01       		.byte	0x1
 5919 038a D0       		.byte	0xd0
 5920 038b 81000000 		.4byte	0x81
 5921 038f 02       		.uleb128 0x2
 5922 0390 91       		.byte	0x91
 5923 0391 6F       		.sleb128 -17
 5924 0392 0E       		.uleb128 0xe
 5925 0393 DE010000 		.4byte	.LASF42
 5926 0397 01       		.byte	0x1
 5927 0398 D0       		.byte	0xd0
 5928 0399 72020000 		.4byte	0x272
 5929 039d 02       		.uleb128 0x2
 5930 039e 91       		.byte	0x91
 5931 039f 50       		.sleb128 -48
 5932 03a0 00       		.byte	0
 5933 03a1 06       		.uleb128 0x6
 5934 03a2 81000000 		.4byte	0x81
 5935 03a6 B1030000 		.4byte	0x3b1
 5936 03aa 07       		.uleb128 0x7
 5937 03ab B6000000 		.4byte	0xb6
 5938 03af 12       		.byte	0x12
 5939 03b0 00       		.byte	0
 5940 03b1 11       		.uleb128 0x11
 5941 03b2 D6010000 		.4byte	.LASF44
 5942 03b6 01       		.byte	0x1
 5943 03b7 2001     		.2byte	0x120
 5944 03b9 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 129


 5945 03bd 24000000 		.4byte	.LFE68-.LFB68
 5946 03c1 01       		.uleb128 0x1
 5947 03c2 9C       		.byte	0x9c
 5948 03c3 D7030000 		.4byte	0x3d7
 5949 03c7 12       		.uleb128 0x12
 5950 03c8 76616C00 		.ascii	"val\000"
 5951 03cc 01       		.byte	0x1
 5952 03cd 2001     		.2byte	0x120
 5953 03cf 81000000 		.4byte	0x81
 5954 03d3 02       		.uleb128 0x2
 5955 03d4 91       		.byte	0x91
 5956 03d5 77       		.sleb128 -9
 5957 03d6 00       		.byte	0
 5958 03d7 13       		.uleb128 0x13
 5959 03d8 94010000 		.4byte	.LASF45
 5960 03dc 01       		.byte	0x1
 5961 03dd 3501     		.2byte	0x135
 5962 03df 81000000 		.4byte	0x81
 5963 03e3 00000000 		.4byte	.LFB69
 5964 03e7 54030000 		.4byte	.LFE69-.LFB69
 5965 03eb 01       		.uleb128 0x1
 5966 03ec 9C       		.byte	0x9c
 5967 03ed 0E040000 		.4byte	0x40e
 5968 03f1 12       		.uleb128 0x12
 5969 03f2 64697200 		.ascii	"dir\000"
 5970 03f6 01       		.byte	0x1
 5971 03f7 3501     		.2byte	0x135
 5972 03f9 81000000 		.4byte	0x81
 5973 03fd 02       		.uleb128 0x2
 5974 03fe 91       		.byte	0x91
 5975 03ff 6F       		.sleb128 -17
 5976 0400 14       		.uleb128 0x14
 5977 0401 7800     		.ascii	"x\000"
 5978 0403 01       		.byte	0x1
 5979 0404 3601     		.2byte	0x136
 5980 0406 81000000 		.4byte	0x81
 5981 040a 02       		.uleb128 0x2
 5982 040b 91       		.byte	0x91
 5983 040c 77       		.sleb128 -9
 5984 040d 00       		.byte	0
 5985 040e 13       		.uleb128 0x13
 5986 040f 0B040000 		.4byte	.LASF46
 5987 0413 01       		.byte	0x1
 5988 0414 8D01     		.2byte	0x18d
 5989 0416 81000000 		.4byte	0x81
 5990 041a 00000000 		.4byte	.LFB70
 5991 041e 80080000 		.4byte	.LFE70-.LFB70
 5992 0422 01       		.uleb128 0x1
 5993 0423 9C       		.byte	0x9c
 5994 0424 AE040000 		.4byte	0x4ae
 5995 0428 12       		.uleb128 0x12
 5996 0429 64697200 		.ascii	"dir\000"
 5997 042d 01       		.byte	0x1
 5998 042e 8D01     		.2byte	0x18d
 5999 0430 81000000 		.4byte	0x81
 6000 0434 02       		.uleb128 0x2
 6001 0435 91       		.byte	0x91
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 130


 6002 0436 5F       		.sleb128 -33
 6003 0437 15       		.uleb128 0x15
 6004 0438 19050000 		.4byte	.LASF19
 6005 043c 01       		.byte	0x1
 6006 043d 8D01     		.2byte	0x18d
 6007 043f 81000000 		.4byte	0x81
 6008 0443 02       		.uleb128 0x2
 6009 0444 91       		.byte	0x91
 6010 0445 5E       		.sleb128 -34
 6011 0446 15       		.uleb128 0x15
 6012 0447 C4040000 		.4byte	.LASF47
 6013 044b 01       		.byte	0x1
 6014 044c 8D01     		.2byte	0x18d
 6015 044e AE040000 		.4byte	0x4ae
 6016 0452 02       		.uleb128 0x2
 6017 0453 91       		.byte	0x91
 6018 0454 58       		.sleb128 -40
 6019 0455 15       		.uleb128 0x15
 6020 0456 D5000000 		.4byte	.LASF28
 6021 045a 01       		.byte	0x1
 6022 045b 8D01     		.2byte	0x18d
 6023 045d 81000000 		.4byte	0x81
 6024 0461 02       		.uleb128 0x2
 6025 0462 91       		.byte	0x91
 6026 0463 5D       		.sleb128 -35
 6027 0464 16       		.uleb128 0x16
 6028 0465 50000000 		.4byte	.LASF48
 6029 0469 01       		.byte	0x1
 6030 046a 8E01     		.2byte	0x18e
 6031 046c B4040000 		.4byte	0x4b4
 6032 0470 02       		.uleb128 0x2
 6033 0471 91       		.byte	0x91
 6034 0472 60       		.sleb128 -32
 6035 0473 16       		.uleb128 0x16
 6036 0474 4D030000 		.4byte	.LASF49
 6037 0478 01       		.byte	0x1
 6038 0479 8E01     		.2byte	0x18e
 6039 047b 81000000 		.4byte	0x81
 6040 047f 02       		.uleb128 0x2
 6041 0480 91       		.byte	0x91
 6042 0481 77       		.sleb128 -9
 6043 0482 16       		.uleb128 0x16
 6044 0483 E4030000 		.4byte	.LASF50
 6045 0487 01       		.byte	0x1
 6046 0488 8E01     		.2byte	0x18e
 6047 048a 81000000 		.4byte	0x81
 6048 048e 02       		.uleb128 0x2
 6049 048f 91       		.byte	0x91
 6050 0490 76       		.sleb128 -10
 6051 0491 14       		.uleb128 0x14
 6052 0492 6900     		.ascii	"i\000"
 6053 0494 01       		.byte	0x1
 6054 0495 8E01     		.2byte	0x18e
 6055 0497 81000000 		.4byte	0x81
 6056 049b 02       		.uleb128 0x2
 6057 049c 91       		.byte	0x91
 6058 049d 75       		.sleb128 -11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 131


 6059 049e 16       		.uleb128 0x16
 6060 049f 8B000000 		.4byte	.LASF51
 6061 04a3 01       		.byte	0x1
 6062 04a4 8E01     		.2byte	0x18e
 6063 04a6 81000000 		.4byte	0x81
 6064 04aa 02       		.uleb128 0x2
 6065 04ab 91       		.byte	0x91
 6066 04ac 74       		.sleb128 -12
 6067 04ad 00       		.byte	0
 6068 04ae 17       		.uleb128 0x17
 6069 04af 04       		.byte	0x4
 6070 04b0 81000000 		.4byte	0x81
 6071 04b4 06       		.uleb128 0x6
 6072 04b5 81000000 		.4byte	0x81
 6073 04b9 C4040000 		.4byte	0x4c4
 6074 04bd 07       		.uleb128 0x7
 6075 04be B6000000 		.4byte	0xb6
 6076 04c2 11       		.byte	0x11
 6077 04c3 00       		.byte	0
 6078 04c4 13       		.uleb128 0x13
 6079 04c5 92020000 		.4byte	.LASF52
 6080 04c9 01       		.byte	0x1
 6081 04ca 9102     		.2byte	0x291
 6082 04cc 81000000 		.4byte	0x81
 6083 04d0 00000000 		.4byte	.LFB71
 6084 04d4 7C020000 		.4byte	.LFE71-.LFB71
 6085 04d8 01       		.uleb128 0x1
 6086 04d9 9C       		.byte	0x9c
 6087 04da 37050000 		.4byte	0x537
 6088 04de 12       		.uleb128 0x12
 6089 04df 64697200 		.ascii	"dir\000"
 6090 04e3 01       		.byte	0x1
 6091 04e4 9102     		.2byte	0x291
 6092 04e6 81000000 		.4byte	0x81
 6093 04ea 02       		.uleb128 0x2
 6094 04eb 91       		.byte	0x91
 6095 04ec 5F       		.sleb128 -33
 6096 04ed 15       		.uleb128 0x15
 6097 04ee 76000000 		.4byte	.LASF53
 6098 04f2 01       		.byte	0x1
 6099 04f3 9102     		.2byte	0x291
 6100 04f5 AE040000 		.4byte	0x4ae
 6101 04f9 02       		.uleb128 0x2
 6102 04fa 91       		.byte	0x91
 6103 04fb 58       		.sleb128 -40
 6104 04fc 15       		.uleb128 0x15
 6105 04fd 83000000 		.4byte	.LASF54
 6106 0501 01       		.byte	0x1
 6107 0502 9102     		.2byte	0x291
 6108 0504 81000000 		.4byte	0x81
 6109 0508 02       		.uleb128 0x2
 6110 0509 91       		.byte	0x91
 6111 050a 5E       		.sleb128 -34
 6112 050b 16       		.uleb128 0x16
 6113 050c 50000000 		.4byte	.LASF48
 6114 0510 01       		.byte	0x1
 6115 0511 9202     		.2byte	0x292
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 132


 6116 0513 37050000 		.4byte	0x537
 6117 0517 02       		.uleb128 0x2
 6118 0518 91       		.byte	0x91
 6119 0519 64       		.sleb128 -28
 6120 051a 16       		.uleb128 0x16
 6121 051b 4D030000 		.4byte	.LASF49
 6122 051f 01       		.byte	0x1
 6123 0520 9202     		.2byte	0x292
 6124 0522 81000000 		.4byte	0x81
 6125 0526 02       		.uleb128 0x2
 6126 0527 91       		.byte	0x91
 6127 0528 77       		.sleb128 -9
 6128 0529 14       		.uleb128 0x14
 6129 052a 7800     		.ascii	"x\000"
 6130 052c 01       		.byte	0x1
 6131 052d 9202     		.2byte	0x292
 6132 052f 81000000 		.4byte	0x81
 6133 0533 02       		.uleb128 0x2
 6134 0534 91       		.byte	0x91
 6135 0535 76       		.sleb128 -10
 6136 0536 00       		.byte	0
 6137 0537 06       		.uleb128 0x6
 6138 0538 81000000 		.4byte	0x81
 6139 053c 47050000 		.4byte	0x547
 6140 0540 07       		.uleb128 0x7
 6141 0541 B6000000 		.4byte	0xb6
 6142 0545 0E       		.byte	0xe
 6143 0546 00       		.byte	0
 6144 0547 13       		.uleb128 0x13
 6145 0548 3E020000 		.4byte	.LASF18
 6146 054c 01       		.byte	0x1
 6147 054d EA02     		.2byte	0x2ea
 6148 054f 81000000 		.4byte	0x81
 6149 0553 00000000 		.4byte	.LFB72
 6150 0557 94100000 		.4byte	.LFE72-.LFB72
 6151 055b 01       		.uleb128 0x1
 6152 055c 9C       		.byte	0x9c
 6153 055d 9A050000 		.4byte	0x59a
 6154 0561 12       		.uleb128 0x12
 6155 0562 64697200 		.ascii	"dir\000"
 6156 0566 01       		.byte	0x1
 6157 0567 EA02     		.2byte	0x2ea
 6158 0569 81000000 		.4byte	0x81
 6159 056d 02       		.uleb128 0x2
 6160 056e 91       		.byte	0x91
 6161 056f 6F       		.sleb128 -17
 6162 0570 15       		.uleb128 0x15
 6163 0571 9A030000 		.4byte	.LASF55
 6164 0575 01       		.byte	0x1
 6165 0576 EA02     		.2byte	0x2ea
 6166 0578 81000000 		.4byte	0x81
 6167 057c 02       		.uleb128 0x2
 6168 057d 91       		.byte	0x91
 6169 057e 6E       		.sleb128 -18
 6170 057f 14       		.uleb128 0x14
 6171 0580 7800     		.ascii	"x\000"
 6172 0582 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 133


 6173 0583 EB02     		.2byte	0x2eb
 6174 0585 81000000 		.4byte	0x81
 6175 0589 02       		.uleb128 0x2
 6176 058a 91       		.byte	0x91
 6177 058b 77       		.sleb128 -9
 6178 058c 14       		.uleb128 0x14
 6179 058d 7900     		.ascii	"y\000"
 6180 058f 01       		.byte	0x1
 6181 0590 EB02     		.2byte	0x2eb
 6182 0592 81000000 		.4byte	0x81
 6183 0596 02       		.uleb128 0x2
 6184 0597 91       		.byte	0x91
 6185 0598 76       		.sleb128 -10
 6186 0599 00       		.byte	0
 6187 059a 06       		.uleb128 0x6
 6188 059b 81000000 		.4byte	0x81
 6189 059f AA050000 		.4byte	0x5aa
 6190 05a3 07       		.uleb128 0x7
 6191 05a4 B6000000 		.4byte	0xb6
 6192 05a8 FF       		.byte	0xff
 6193 05a9 00       		.byte	0
 6194 05aa 18       		.uleb128 0x18
 6195 05ab 6C010000 		.4byte	.LASF56
 6196 05af 06       		.byte	0x6
 6197 05b0 3E01     		.2byte	0x13e
 6198 05b2 B6050000 		.4byte	0x5b6
 6199 05b6 05       		.uleb128 0x5
 6200 05b7 9A050000 		.4byte	0x59a
 6201 05bb 18       		.uleb128 0x18
 6202 05bc C0030000 		.4byte	.LASF57
 6203 05c0 07       		.byte	0x7
 6204 05c1 2A06     		.2byte	0x62a
 6205 05c3 C7050000 		.4byte	0x5c7
 6206 05c7 05       		.uleb128 0x5
 6207 05c8 76000000 		.4byte	0x76
 6208 05cc 19       		.uleb128 0x19
 6209 05cd 53020000 		.4byte	.LASF58
 6210 05d1 05       		.byte	0x5
 6211 05d2 42       		.byte	0x42
 6212 05d3 AC000000 		.4byte	0xac
 6213 05d7 05       		.uleb128 0x5
 6214 05d8 03       		.byte	0x3
 6215 05d9 00000000 		.4byte	count_teclas1
 6216 05dd 19       		.uleb128 0x19
 6217 05de D6030000 		.4byte	.LASF59
 6218 05e2 05       		.byte	0x5
 6219 05e3 42       		.byte	0x42
 6220 05e4 AC000000 		.4byte	0xac
 6221 05e8 05       		.uleb128 0x5
 6222 05e9 03       		.byte	0x3
 6223 05ea 00000000 		.4byte	comas1
 6224 05ee 19       		.uleb128 0x19
 6225 05ef DD030000 		.4byte	.LASF60
 6226 05f3 05       		.byte	0x5
 6227 05f4 42       		.byte	0x42
 6228 05f5 AC000000 		.4byte	0xac
 6229 05f9 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 134


 6230 05fa 03       		.byte	0x3
 6231 05fb 00000000 		.4byte	comas2
 6232 05ff 19       		.uleb128 0x19
 6233 0600 3E000000 		.4byte	.LASF61
 6234 0604 05       		.byte	0x5
 6235 0605 42       		.byte	0x42
 6236 0606 AC000000 		.4byte	0xac
 6237 060a 05       		.uleb128 0x5
 6238 060b 03       		.byte	0x3
 6239 060c 00000000 		.4byte	id_coma1
 6240 0610 19       		.uleb128 0x19
 6241 0611 A3010000 		.4byte	.LASF62
 6242 0615 05       		.byte	0x5
 6243 0616 42       		.byte	0x42
 6244 0617 AC000000 		.4byte	0xac
 6245 061b 05       		.uleb128 0x5
 6246 061c 03       		.byte	0x3
 6247 061d 00000000 		.4byte	id_teclado1
 6248 0621 19       		.uleb128 0x19
 6249 0622 61020000 		.4byte	.LASF63
 6250 0626 05       		.byte	0x5
 6251 0627 42       		.byte	0x42
 6252 0628 AC000000 		.4byte	0xac
 6253 062c 05       		.uleb128 0x5
 6254 062d 03       		.byte	0x3
 6255 062e 00000000 		.4byte	count_teclas2
 6256 0632 19       		.uleb128 0x19
 6257 0633 47000000 		.4byte	.LASF64
 6258 0637 05       		.byte	0x5
 6259 0638 42       		.byte	0x42
 6260 0639 AC000000 		.4byte	0xac
 6261 063d 05       		.uleb128 0x5
 6262 063e 03       		.byte	0x3
 6263 063f 00000000 		.4byte	id_coma2
 6264 0643 19       		.uleb128 0x19
 6265 0644 AF010000 		.4byte	.LASF65
 6266 0648 05       		.byte	0x5
 6267 0649 42       		.byte	0x42
 6268 064a AC000000 		.4byte	0xac
 6269 064e 05       		.uleb128 0x5
 6270 064f 03       		.byte	0x3
 6271 0650 00000000 		.4byte	id_teclado2
 6272 0654 19       		.uleb128 0x19
 6273 0655 6F020000 		.4byte	.LASF66
 6274 0659 05       		.byte	0x5
 6275 065a 43       		.byte	0x43
 6276 065b B1000000 		.4byte	0xb1
 6277 065f 05       		.uleb128 0x5
 6278 0660 03       		.byte	0x3
 6279 0661 00000000 		.4byte	posx1
 6280 0665 19       		.uleb128 0x19
 6281 0666 41030000 		.4byte	.LASF67
 6282 066a 05       		.byte	0x5
 6283 066b 43       		.byte	0x43
 6284 066c B1000000 		.4byte	0xb1
 6285 0670 05       		.uleb128 0x5
 6286 0671 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 135


 6287 0672 00000000 		.4byte	posy1
 6288 0676 19       		.uleb128 0x19
 6289 0677 2B050000 		.4byte	.LASF68
 6290 067b 05       		.byte	0x5
 6291 067c 43       		.byte	0x43
 6292 067d B1000000 		.4byte	0xb1
 6293 0681 05       		.uleb128 0x5
 6294 0682 03       		.byte	0x3
 6295 0683 00000000 		.4byte	sizeletra1
 6296 0687 19       		.uleb128 0x19
 6297 0688 75020000 		.4byte	.LASF69
 6298 068c 05       		.byte	0x5
 6299 068d 43       		.byte	0x43
 6300 068e B1000000 		.4byte	0xb1
 6301 0692 05       		.uleb128 0x5
 6302 0693 03       		.byte	0x3
 6303 0694 00000000 		.4byte	posx2
 6304 0698 19       		.uleb128 0x19
 6305 0699 47030000 		.4byte	.LASF70
 6306 069d 05       		.byte	0x5
 6307 069e 43       		.byte	0x43
 6308 069f B1000000 		.4byte	0xb1
 6309 06a3 05       		.uleb128 0x5
 6310 06a4 03       		.byte	0x3
 6311 06a5 00000000 		.4byte	posy2
 6312 06a9 19       		.uleb128 0x19
 6313 06aa 36050000 		.4byte	.LASF71
 6314 06ae 05       		.byte	0x5
 6315 06af 43       		.byte	0x43
 6316 06b0 B1000000 		.4byte	0xb1
 6317 06b4 05       		.uleb128 0x5
 6318 06b5 03       		.byte	0x3
 6319 06b6 00000000 		.4byte	sizeletra2
 6320 06ba 19       		.uleb128 0x19
 6321 06bb 98000000 		.4byte	.LASF72
 6322 06bf 05       		.byte	0x5
 6323 06c0 44       		.byte	0x44
 6324 06c1 AC000000 		.4byte	0xac
 6325 06c5 05       		.uleb128 0x5
 6326 06c6 03       		.byte	0x3
 6327 06c7 00000000 		.4byte	teclas1
 6328 06cb 19       		.uleb128 0x19
 6329 06cc A0000000 		.4byte	.LASF73
 6330 06d0 05       		.byte	0x5
 6331 06d1 44       		.byte	0x44
 6332 06d2 AC000000 		.4byte	0xac
 6333 06d6 05       		.uleb128 0x5
 6334 06d7 03       		.byte	0x3
 6335 06d8 00000000 		.4byte	teclas2
 6336 06dc 19       		.uleb128 0x19
 6337 06dd 09000000 		.4byte	.LASF74
 6338 06e1 05       		.byte	0x5
 6339 06e2 45       		.byte	0x45
 6340 06e3 AC000000 		.4byte	0xac
 6341 06e7 05       		.uleb128 0x5
 6342 06e8 03       		.byte	0x3
 6343 06e9 00000000 		.4byte	flujo_LCD1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 136


 6344 06ed 19       		.uleb128 0x19
 6345 06ee 14000000 		.4byte	.LASF75
 6346 06f2 05       		.byte	0x5
 6347 06f3 45       		.byte	0x45
 6348 06f4 AC000000 		.4byte	0xac
 6349 06f8 05       		.uleb128 0x5
 6350 06f9 03       		.byte	0x3
 6351 06fa 00000000 		.4byte	flujo_LCD2
 6352 06fe 06       		.uleb128 0x6
 6353 06ff 81000000 		.4byte	0x81
 6354 0703 0E070000 		.4byte	0x70e
 6355 0707 07       		.uleb128 0x7
 6356 0708 B6000000 		.4byte	0xb6
 6357 070c 1D       		.byte	0x1d
 6358 070d 00       		.byte	0
 6359 070e 19       		.uleb128 0x19
 6360 070f 60030000 		.4byte	.LASF76
 6361 0713 05       		.byte	0x5
 6362 0714 46       		.byte	0x46
 6363 0715 1F070000 		.4byte	0x71f
 6364 0719 05       		.uleb128 0x5
 6365 071a 03       		.byte	0x3
 6366 071b 00000000 		.4byte	Buffer_LCD1
 6367 071f 05       		.uleb128 0x5
 6368 0720 FE060000 		.4byte	0x6fe
 6369 0724 19       		.uleb128 0x19
 6370 0725 EB010000 		.4byte	.LASF77
 6371 0729 05       		.byte	0x5
 6372 072a 47       		.byte	0x47
 6373 072b 35070000 		.4byte	0x735
 6374 072f 05       		.uleb128 0x5
 6375 0730 03       		.byte	0x3
 6376 0731 00000000 		.4byte	Buffer_LCD2
 6377 0735 05       		.uleb128 0x5
 6378 0736 FE060000 		.4byte	0x6fe
 6379 073a 19       		.uleb128 0x19
 6380 073b CA040000 		.4byte	.LASF78
 6381 073f 05       		.byte	0x5
 6382 0740 48       		.byte	0x48
 6383 0741 AC000000 		.4byte	0xac
 6384 0745 05       		.uleb128 0x5
 6385 0746 03       		.byte	0x3
 6386 0747 00000000 		.4byte	count_protector
 6387 074b 19       		.uleb128 0x19
 6388 074c 1F000000 		.4byte	.LASF79
 6389 0750 05       		.byte	0x5
 6390 0751 48       		.byte	0x48
 6391 0752 AC000000 		.4byte	0xac
 6392 0756 05       		.uleb128 0x5
 6393 0757 03       		.byte	0x3
 6394 0758 00000000 		.4byte	count_protector2
 6395 075c 19       		.uleb128 0x19
 6396 075d 46020000 		.4byte	.LASF80
 6397 0761 05       		.byte	0x5
 6398 0762 49       		.byte	0x49
 6399 0763 6D070000 		.4byte	0x76d
 6400 0767 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 137


 6401 0768 03       		.byte	0x3
 6402 0769 00000000 		.4byte	password_lcd
 6403 076d 05       		.uleb128 0x5
 6404 076e 72020000 		.4byte	0x272
 6405 0772 19       		.uleb128 0x19
 6406 0773 04010000 		.4byte	.LASF81
 6407 0777 05       		.byte	0x5
 6408 0778 4A       		.byte	0x4a
 6409 0779 B1000000 		.4byte	0xb1
 6410 077d 05       		.uleb128 0x5
 6411 077e 03       		.byte	0x3
 6412 077f 00000000 		.4byte	imagen_grado
 6413 0783 06       		.uleb128 0x6
 6414 0784 8C000000 		.4byte	0x8c
 6415 0788 99070000 		.4byte	0x799
 6416 078c 07       		.uleb128 0x7
 6417 078d B6000000 		.4byte	0xb6
 6418 0791 01       		.byte	0x1
 6419 0792 07       		.uleb128 0x7
 6420 0793 B6000000 		.4byte	0xb6
 6421 0797 01       		.byte	0x1
 6422 0798 00       		.byte	0
 6423 0799 19       		.uleb128 0x19
 6424 079a CB000000 		.4byte	.LASF82
 6425 079e 05       		.byte	0x5
 6426 079f 4B       		.byte	0x4b
 6427 07a0 AA070000 		.4byte	0x7aa
 6428 07a4 05       		.uleb128 0x5
 6429 07a5 03       		.byte	0x3
 6430 07a6 00000000 		.4byte	prox_caso
 6431 07aa 05       		.uleb128 0x5
 6432 07ab 83070000 		.4byte	0x783
 6433 07af 06       		.uleb128 0x6
 6434 07b0 81000000 		.4byte	0x81
 6435 07b4 BF070000 		.4byte	0x7bf
 6436 07b8 07       		.uleb128 0x7
 6437 07b9 B6000000 		.4byte	0xb6
 6438 07bd 02       		.byte	0x2
 6439 07be 00       		.byte	0
 6440 07bf 19       		.uleb128 0x19
 6441 07c0 FC010000 		.4byte	.LASF83
 6442 07c4 05       		.byte	0x5
 6443 07c5 4C       		.byte	0x4c
 6444 07c6 D0070000 		.4byte	0x7d0
 6445 07ca 05       		.uleb128 0x5
 6446 07cb 03       		.byte	0x3
 6447 07cc 00000000 		.4byte	bloqueo_LCD
 6448 07d0 05       		.uleb128 0x5
 6449 07d1 AF070000 		.4byte	0x7af
 6450 07d5 19       		.uleb128 0x19
 6451 07d6 04050000 		.4byte	.LASF84
 6452 07da 05       		.byte	0x5
 6453 07db 4D       		.byte	0x4d
 6454 07dc E6070000 		.4byte	0x7e6
 6455 07e0 05       		.uleb128 0x5
 6456 07e1 03       		.byte	0x3
 6457 07e2 00000000 		.4byte	id_estacion
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 138


 6458 07e6 05       		.uleb128 0x5
 6459 07e7 62020000 		.4byte	0x262
 6460 07eb 19       		.uleb128 0x19
 6461 07ec BB010000 		.4byte	.LASF85
 6462 07f0 05       		.byte	0x5
 6463 07f1 4E       		.byte	0x4e
 6464 07f2 FC070000 		.4byte	0x7fc
 6465 07f6 05       		.uleb128 0x5
 6466 07f7 03       		.byte	0x3
 6467 07f8 00000000 		.4byte	id_venta
 6468 07fc 05       		.uleb128 0x5
 6469 07fd 82020000 		.4byte	0x282
 6470 0801 06       		.uleb128 0x6
 6471 0802 81000000 		.4byte	0x81
 6472 0806 11080000 		.4byte	0x811
 6473 080a 07       		.uleb128 0x7
 6474 080b B6000000 		.4byte	0xb6
 6475 080f C7       		.byte	0xc7
 6476 0810 00       		.byte	0
 6477 0811 19       		.uleb128 0x19
 6478 0812 30000000 		.4byte	.LASF86
 6479 0816 05       		.byte	0x5
 6480 0817 4F       		.byte	0x4f
 6481 0818 22080000 		.4byte	0x822
 6482 081c 05       		.uleb128 0x5
 6483 081d 03       		.byte	0x3
 6484 081e 00000000 		.4byte	trama_totales
 6485 0822 05       		.uleb128 0x5
 6486 0823 01080000 		.4byte	0x801
 6487 0827 19       		.uleb128 0x19
 6488 0828 82030000 		.4byte	.LASF87
 6489 082c 05       		.byte	0x5
 6490 082d 53       		.byte	0x53
 6491 082e AC000000 		.4byte	0xac
 6492 0832 05       		.uleb128 0x5
 6493 0833 03       		.byte	0x3
 6494 0834 00000000 		.4byte	ppux10
 6495 0838 06       		.uleb128 0x6
 6496 0839 81000000 		.4byte	0x81
 6497 083d 48080000 		.4byte	0x848
 6498 0841 07       		.uleb128 0x7
 6499 0842 B6000000 		.4byte	0xb6
 6500 0846 10       		.byte	0x10
 6501 0847 00       		.byte	0
 6502 0848 19       		.uleb128 0x19
 6503 0849 E9030000 		.4byte	.LASF88
 6504 084d 05       		.byte	0x5
 6505 084e 54       		.byte	0x54
 6506 084f 59080000 		.4byte	0x859
 6507 0853 05       		.uleb128 0x5
 6508 0854 03       		.byte	0x3
 6509 0855 00000000 		.4byte	nombre_pro1
 6510 0859 05       		.uleb128 0x5
 6511 085a 38080000 		.4byte	0x838
 6512 085e 19       		.uleb128 0x19
 6513 085f AC040000 		.4byte	.LASF89
 6514 0863 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 139


 6515 0864 54       		.byte	0x54
 6516 0865 6F080000 		.4byte	0x86f
 6517 0869 05       		.uleb128 0x5
 6518 086a 03       		.byte	0x3
 6519 086b 00000000 		.4byte	nombre_pro2
 6520 086f 05       		.uleb128 0x5
 6521 0870 38080000 		.4byte	0x838
 6522 0874 19       		.uleb128 0x19
 6523 0875 F5030000 		.4byte	.LASF90
 6524 0879 05       		.byte	0x5
 6525 087a 54       		.byte	0x54
 6526 087b 85080000 		.4byte	0x885
 6527 087f 05       		.uleb128 0x5
 6528 0880 03       		.byte	0x3
 6529 0881 00000000 		.4byte	nombre_pro3
 6530 0885 05       		.uleb128 0x5
 6531 0886 38080000 		.4byte	0x838
 6532 088a 19       		.uleb128 0x19
 6533 088b 64000000 		.4byte	.LASF91
 6534 088f 05       		.byte	0x5
 6535 0890 55       		.byte	0x55
 6536 0891 9B080000 		.4byte	0x89b
 6537 0895 05       		.uleb128 0x5
 6538 0896 03       		.byte	0x3
 6539 0897 00000000 		.4byte	version
 6540 089b 05       		.uleb128 0x5
 6541 089c BD000000 		.4byte	0xbd
 6542 08a0 19       		.uleb128 0x19
 6543 08a1 3F010000 		.4byte	.LASF92
 6544 08a5 05       		.byte	0x5
 6545 08a6 5F       		.byte	0x5f
 6546 08a7 CD000000 		.4byte	0xcd
 6547 08ab 05       		.uleb128 0x5
 6548 08ac 03       		.byte	0x3
 6549 08ad 00000000 		.4byte	lado1
 6550 08b1 19       		.uleb128 0x19
 6551 08b2 45010000 		.4byte	.LASF93
 6552 08b6 05       		.byte	0x5
 6553 08b7 60       		.byte	0x60
 6554 08b8 CD000000 		.4byte	0xcd
 6555 08bc 05       		.uleb128 0x5
 6556 08bd 03       		.byte	0x3
 6557 08be 00000000 		.4byte	lado2
 6558 08c2 06       		.uleb128 0x6
 6559 08c3 81000000 		.4byte	0x81
 6560 08c7 D2080000 		.4byte	0x8d2
 6561 08cb 07       		.uleb128 0x7
 6562 08cc B6000000 		.4byte	0xb6
 6563 08d0 20       		.byte	0x20
 6564 08d1 00       		.byte	0
 6565 08d2 19       		.uleb128 0x19
 6566 08d3 89030000 		.4byte	.LASF94
 6567 08d7 05       		.byte	0x5
 6568 08d8 64       		.byte	0x64
 6569 08d9 E3080000 		.4byte	0x8e3
 6570 08dd 05       		.uleb128 0x5
 6571 08de 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 140


 6572 08df 00000000 		.4byte	nombre
 6573 08e3 05       		.uleb128 0x5
 6574 08e4 C2080000 		.4byte	0x8c2
 6575 08e8 1A       		.uleb128 0x1a
 6576 08e9 6E697400 		.ascii	"nit\000"
 6577 08ed 05       		.byte	0x5
 6578 08ee 65       		.byte	0x65
 6579 08ef F9080000 		.4byte	0x8f9
 6580 08f3 05       		.uleb128 0x5
 6581 08f4 03       		.byte	0x3
 6582 08f5 00000000 		.4byte	nit
 6583 08f9 05       		.uleb128 0x5
 6584 08fa 37050000 		.4byte	0x537
 6585 08fe 06       		.uleb128 0x6
 6586 08ff 81000000 		.4byte	0x81
 6587 0903 0E090000 		.4byte	0x90e
 6588 0907 07       		.uleb128 0x7
 6589 0908 B6000000 		.4byte	0xb6
 6590 090c 13       		.byte	0x13
 6591 090d 00       		.byte	0
 6592 090e 19       		.uleb128 0x19
 6593 090f 9A010000 		.4byte	.LASF95
 6594 0913 05       		.byte	0x5
 6595 0914 66       		.byte	0x66
 6596 0915 1F090000 		.4byte	0x91f
 6597 0919 05       		.uleb128 0x5
 6598 091a 03       		.byte	0x3
 6599 091b 00000000 		.4byte	telefono
 6600 091f 05       		.uleb128 0x5
 6601 0920 FE080000 		.4byte	0x8fe
 6602 0924 19       		.uleb128 0x19
 6603 0925 C1000000 		.4byte	.LASF96
 6604 0929 05       		.byte	0x5
 6605 092a 67       		.byte	0x67
 6606 092b 35090000 		.4byte	0x935
 6607 092f 05       		.uleb128 0x5
 6608 0930 03       		.byte	0x3
 6609 0931 00000000 		.4byte	direccion
 6610 0935 05       		.uleb128 0x5
 6611 0936 C2080000 		.4byte	0x8c2
 6612 093a 06       		.uleb128 0x6
 6613 093b 81000000 		.4byte	0x81
 6614 093f 4A090000 		.4byte	0x94a
 6615 0943 07       		.uleb128 0x7
 6616 0944 B6000000 		.4byte	0xb6
 6617 0948 1F       		.byte	0x1f
 6618 0949 00       		.byte	0
 6619 094a 19       		.uleb128 0x19
 6620 094b F8000000 		.4byte	.LASF97
 6621 094f 05       		.byte	0x5
 6622 0950 68       		.byte	0x68
 6623 0951 5B090000 		.4byte	0x95b
 6624 0955 05       		.uleb128 0x5
 6625 0956 03       		.byte	0x3
 6626 0957 00000000 		.4byte	lema1
 6627 095b 05       		.uleb128 0x5
 6628 095c 3A090000 		.4byte	0x93a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 141


 6629 0960 19       		.uleb128 0x19
 6630 0961 FE000000 		.4byte	.LASF98
 6631 0965 05       		.byte	0x5
 6632 0966 69       		.byte	0x69
 6633 0967 71090000 		.4byte	0x971
 6634 096b 05       		.uleb128 0x5
 6635 096c 03       		.byte	0x3
 6636 096d 00000000 		.4byte	lema2
 6637 0971 05       		.uleb128 0x5
 6638 0972 3A090000 		.4byte	0x93a
 6639 0976 06       		.uleb128 0x6
 6640 0977 81000000 		.4byte	0x81
 6641 097b 86090000 		.4byte	0x986
 6642 097f 07       		.uleb128 0x7
 6643 0980 B6000000 		.4byte	0xb6
 6644 0984 01       		.byte	0x1
 6645 0985 00       		.byte	0
 6646 0986 19       		.uleb128 0x19
 6647 0987 A5030000 		.4byte	.LASF99
 6648 098b 05       		.byte	0x5
 6649 098c 6A       		.byte	0x6a
 6650 098d 97090000 		.4byte	0x997
 6651 0991 05       		.uleb128 0x5
 6652 0992 03       		.byte	0x3
 6653 0993 00000000 		.4byte	id_logo
 6654 0997 05       		.uleb128 0x5
 6655 0998 76090000 		.4byte	0x976
 6656 099c 1A       		.uleb128 0x1a
 6657 099d 6B6D00   		.ascii	"km\000"
 6658 09a0 05       		.byte	0x5
 6659 09a1 6B       		.byte	0x6b
 6660 09a2 AC090000 		.4byte	0x9ac
 6661 09a6 05       		.uleb128 0x5
 6662 09a7 03       		.byte	0x3
 6663 09a8 00000000 		.4byte	km
 6664 09ac 05       		.uleb128 0x5
 6665 09ad 76090000 		.4byte	0x976
 6666 09b1 19       		.uleb128 0x19
 6667 09b2 91040000 		.4byte	.LASF100
 6668 09b6 05       		.byte	0x5
 6669 09b7 6C       		.byte	0x6c
 6670 09b8 AF070000 		.4byte	0x7af
 6671 09bc 05       		.uleb128 0x5
 6672 09bd 03       		.byte	0x3
 6673 09be 00000000 		.4byte	fecha
 6674 09c2 19       		.uleb128 0x19
 6675 09c3 93000000 		.4byte	.LASF101
 6676 09c7 05       		.byte	0x5
 6677 09c8 6D       		.byte	0x6d
 6678 09c9 76090000 		.4byte	0x976
 6679 09cd 05       		.uleb128 0x5
 6680 09ce 03       		.byte	0x3
 6681 09cf 00000000 		.4byte	hora
 6682 09d3 19       		.uleb128 0x19
 6683 09d4 B1000000 		.4byte	.LASF102
 6684 09d8 05       		.byte	0x5
 6685 09d9 83       		.byte	0x83
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 142


 6686 09da 73010000 		.4byte	0x173
 6687 09de 05       		.uleb128 0x5
 6688 09df 03       		.byte	0x3
 6689 09e0 00000000 		.4byte	rventa1
 6690 09e4 19       		.uleb128 0x19
 6691 09e5 B9000000 		.4byte	.LASF103
 6692 09e9 05       		.byte	0x5
 6693 09ea 84       		.byte	0x84
 6694 09eb 73010000 		.4byte	0x173
 6695 09ef 05       		.uleb128 0x5
 6696 09f0 03       		.byte	0x3
 6697 09f1 00000000 		.4byte	rventa2
 6698 09f5 19       		.uleb128 0x19
 6699 09f6 7D000000 		.4byte	.LASF104
 6700 09fa 05       		.byte	0x5
 6701 09fb 89       		.byte	0x89
 6702 09fc 81000000 		.4byte	0x81
 6703 0a00 05       		.uleb128 0x5
 6704 0a01 03       		.byte	0x3
 6705 0a02 00000000 		.4byte	ok_RF
 6706 0a06 19       		.uleb128 0x19
 6707 0a07 A1040000 		.4byte	.LASF105
 6708 0a0b 05       		.byte	0x5
 6709 0a0c 8A       		.byte	0x8a
 6710 0a0d 81000000 		.4byte	0x81
 6711 0a11 05       		.uleb128 0x5
 6712 0a12 03       		.byte	0x3
 6713 0a13 00000000 		.4byte	ok_datosRF
 6714 0a17 19       		.uleb128 0x19
 6715 0a18 CF010000 		.4byte	.LASF106
 6716 0a1c 05       		.byte	0x5
 6717 0a1d 8B       		.byte	0x8b
 6718 0a1e 01080000 		.4byte	0x801
 6719 0a22 05       		.uleb128 0x5
 6720 0a23 03       		.byte	0x3
 6721 0a24 00000000 		.4byte	rf_mod
 6722 0a28 06       		.uleb128 0x6
 6723 0a29 81000000 		.4byte	0x81
 6724 0a2d 380A0000 		.4byte	0xa38
 6725 0a31 07       		.uleb128 0x7
 6726 0a32 B6000000 		.4byte	0xb6
 6727 0a36 3F       		.byte	0x3f
 6728 0a37 00       		.byte	0
 6729 0a38 19       		.uleb128 0x19
 6730 0a39 ED000000 		.4byte	.LASF107
 6731 0a3d 05       		.byte	0x5
 6732 0a3e 90       		.byte	0x90
 6733 0a3f 280A0000 		.4byte	0xa28
 6734 0a43 05       		.uleb128 0x5
 6735 0a44 03       		.byte	0x3
 6736 0a45 00000000 		.4byte	buffer_i2c
 6737 0a49 19       		.uleb128 0x19
 6738 0a4a 90030000 		.4byte	.LASF108
 6739 0a4e 05       		.byte	0x5
 6740 0a4f 95       		.byte	0x95
 6741 0a50 81000000 		.4byte	0x81
 6742 0a54 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 143


 6743 0a55 03       		.byte	0x3
 6744 0a56 00000000 		.4byte	crc_total
 6745 0a5a 19       		.uleb128 0x19
 6746 0a5b 19020000 		.4byte	.LASF109
 6747 0a5f 05       		.byte	0x5
 6748 0a60 99       		.byte	0x99
 6749 0a61 76090000 		.4byte	0x976
 6750 0a65 05       		.uleb128 0x5
 6751 0a66 03       		.byte	0x3
 6752 0a67 00000000 		.4byte	print1
 6753 0a6b 19       		.uleb128 0x19
 6754 0a6c 20020000 		.4byte	.LASF110
 6755 0a70 05       		.byte	0x5
 6756 0a71 9A       		.byte	0x9a
 6757 0a72 76090000 		.4byte	0x976
 6758 0a76 05       		.uleb128 0x5
 6759 0a77 03       		.byte	0x3
 6760 0a78 00000000 		.4byte	print2
 6761 0a7c 19       		.uleb128 0x19
 6762 0a7d 27020000 		.4byte	.LASF32
 6763 0a81 05       		.byte	0x5
 6764 0a82 9F       		.byte	0x9f
 6765 0a83 81000000 		.4byte	0x81
 6766 0a87 05       		.uleb128 0x5
 6767 0a88 03       		.byte	0x3
 6768 0a89 00000000 		.4byte	tipo_venta
 6769 0a8d 19       		.uleb128 0x19
 6770 0a8e 36030000 		.4byte	.LASF111
 6771 0a92 01       		.byte	0x1
 6772 0a93 2F       		.byte	0x2f
 6773 0a94 81000000 		.4byte	0x81
 6774 0a98 05       		.uleb128 0x5
 6775 0a99 03       		.byte	0x3
 6776 0a9a 00000000 		.4byte	rx_timeout
 6777 0a9e 19       		.uleb128 0x19
 6778 0a9f 57010000 		.4byte	.LASF112
 6779 0aa3 01       		.byte	0x1
 6780 0aa4 30       		.byte	0x30
 6781 0aa5 38080000 		.4byte	0x838
 6782 0aa9 05       		.uleb128 0x5
 6783 0aaa 03       		.byte	0x3
 6784 0aab 00000000 		.4byte	msn_tc
 6785 0aaf 06       		.uleb128 0x6
 6786 0ab0 81000000 		.4byte	0x81
 6787 0ab4 BF0A0000 		.4byte	0xabf
 6788 0ab8 07       		.uleb128 0x7
 6789 0ab9 B6000000 		.4byte	0xb6
 6790 0abd 0C       		.byte	0xc
 6791 0abe 00       		.byte	0
 6792 0abf 19       		.uleb128 0x19
 6793 0ac0 65010000 		.4byte	.LASF113
 6794 0ac4 01       		.byte	0x1
 6795 0ac5 31       		.byte	0x31
 6796 0ac6 AF0A0000 		.4byte	0xaaf
 6797 0aca 05       		.uleb128 0x5
 6798 0acb 03       		.byte	0x3
 6799 0acc 00000000 		.4byte	msn_te
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 144


 6800 0ad0 06       		.uleb128 0x6
 6801 0ad1 81000000 		.4byte	0x81
 6802 0ad5 E00A0000 		.4byte	0xae0
 6803 0ad9 07       		.uleb128 0x7
 6804 0ada B6000000 		.4byte	0xb6
 6805 0ade 0D       		.byte	0xd
 6806 0adf 00       		.byte	0
 6807 0ae0 19       		.uleb128 0x19
 6808 0ae1 5E010000 		.4byte	.LASF114
 6809 0ae5 01       		.byte	0x1
 6810 0ae6 32       		.byte	0x32
 6811 0ae7 D00A0000 		.4byte	0xad0
 6812 0aeb 05       		.uleb128 0x5
 6813 0aec 03       		.byte	0x3
 6814 0aed 00000000 		.4byte	msn_td
 6815 0af1 19       		.uleb128 0x19
 6816 0af2 C4010000 		.4byte	.LASF115
 6817 0af6 01       		.byte	0x1
 6818 0af7 33       		.byte	0x33
 6819 0af8 37050000 		.4byte	0x537
 6820 0afc 05       		.uleb128 0x5
 6821 0afd 03       		.byte	0x3
 6822 0afe 00000000 		.4byte	msn_lecact
 6823 0b02 19       		.uleb128 0x19
 6824 0b03 E2000000 		.4byte	.LASF116
 6825 0b07 01       		.byte	0x1
 6826 0b08 34       		.byte	0x34
 6827 0b09 38080000 		.4byte	0x838
 6828 0b0d 05       		.uleb128 0x5
 6829 0b0e 03       		.byte	0x3
 6830 0b0f 00000000 		.4byte	msn_lecaan
 6831 0b13 19       		.uleb128 0x19
 6832 0b14 4B010000 		.4byte	.LASF117
 6833 0b18 01       		.byte	0x1
 6834 0b19 35       		.byte	0x35
 6835 0b1a B4040000 		.4byte	0x4b4
 6836 0b1e 05       		.uleb128 0x5
 6837 0b1f 03       		.byte	0x3
 6838 0b20 00000000 		.4byte	msn_tventas
 6839 0b24 00       		.byte	0
 6840              		.section	.debug_abbrev,"",%progbits
 6841              	.Ldebug_abbrev0:
 6842 0000 01       		.uleb128 0x1
 6843 0001 11       		.uleb128 0x11
 6844 0002 01       		.byte	0x1
 6845 0003 25       		.uleb128 0x25
 6846 0004 0E       		.uleb128 0xe
 6847 0005 13       		.uleb128 0x13
 6848 0006 0B       		.uleb128 0xb
 6849 0007 03       		.uleb128 0x3
 6850 0008 0E       		.uleb128 0xe
 6851 0009 1B       		.uleb128 0x1b
 6852 000a 0E       		.uleb128 0xe
 6853 000b 55       		.uleb128 0x55
 6854 000c 17       		.uleb128 0x17
 6855 000d 11       		.uleb128 0x11
 6856 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 145


 6857 000f 10       		.uleb128 0x10
 6858 0010 17       		.uleb128 0x17
 6859 0011 00       		.byte	0
 6860 0012 00       		.byte	0
 6861 0013 02       		.uleb128 0x2
 6862 0014 24       		.uleb128 0x24
 6863 0015 00       		.byte	0
 6864 0016 0B       		.uleb128 0xb
 6865 0017 0B       		.uleb128 0xb
 6866 0018 3E       		.uleb128 0x3e
 6867 0019 0B       		.uleb128 0xb
 6868 001a 03       		.uleb128 0x3
 6869 001b 0E       		.uleb128 0xe
 6870 001c 00       		.byte	0
 6871 001d 00       		.byte	0
 6872 001e 03       		.uleb128 0x3
 6873 001f 16       		.uleb128 0x16
 6874 0020 00       		.byte	0
 6875 0021 03       		.uleb128 0x3
 6876 0022 0E       		.uleb128 0xe
 6877 0023 3A       		.uleb128 0x3a
 6878 0024 0B       		.uleb128 0xb
 6879 0025 3B       		.uleb128 0x3b
 6880 0026 0B       		.uleb128 0xb
 6881 0027 49       		.uleb128 0x49
 6882 0028 13       		.uleb128 0x13
 6883 0029 00       		.byte	0
 6884 002a 00       		.byte	0
 6885 002b 04       		.uleb128 0x4
 6886 002c 24       		.uleb128 0x24
 6887 002d 00       		.byte	0
 6888 002e 0B       		.uleb128 0xb
 6889 002f 0B       		.uleb128 0xb
 6890 0030 3E       		.uleb128 0x3e
 6891 0031 0B       		.uleb128 0xb
 6892 0032 03       		.uleb128 0x3
 6893 0033 08       		.uleb128 0x8
 6894 0034 00       		.byte	0
 6895 0035 00       		.byte	0
 6896 0036 05       		.uleb128 0x5
 6897 0037 35       		.uleb128 0x35
 6898 0038 00       		.byte	0
 6899 0039 49       		.uleb128 0x49
 6900 003a 13       		.uleb128 0x13
 6901 003b 00       		.byte	0
 6902 003c 00       		.byte	0
 6903 003d 06       		.uleb128 0x6
 6904 003e 01       		.uleb128 0x1
 6905 003f 01       		.byte	0x1
 6906 0040 49       		.uleb128 0x49
 6907 0041 13       		.uleb128 0x13
 6908 0042 01       		.uleb128 0x1
 6909 0043 13       		.uleb128 0x13
 6910 0044 00       		.byte	0
 6911 0045 00       		.byte	0
 6912 0046 07       		.uleb128 0x7
 6913 0047 21       		.uleb128 0x21
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 146


 6914 0048 00       		.byte	0
 6915 0049 49       		.uleb128 0x49
 6916 004a 13       		.uleb128 0x13
 6917 004b 2F       		.uleb128 0x2f
 6918 004c 0B       		.uleb128 0xb
 6919 004d 00       		.byte	0
 6920 004e 00       		.byte	0
 6921 004f 08       		.uleb128 0x8
 6922 0050 13       		.uleb128 0x13
 6923 0051 01       		.byte	0x1
 6924 0052 03       		.uleb128 0x3
 6925 0053 0E       		.uleb128 0xe
 6926 0054 0B       		.uleb128 0xb
 6927 0055 0B       		.uleb128 0xb
 6928 0056 3A       		.uleb128 0x3a
 6929 0057 0B       		.uleb128 0xb
 6930 0058 3B       		.uleb128 0x3b
 6931 0059 0B       		.uleb128 0xb
 6932 005a 01       		.uleb128 0x1
 6933 005b 13       		.uleb128 0x13
 6934 005c 00       		.byte	0
 6935 005d 00       		.byte	0
 6936 005e 09       		.uleb128 0x9
 6937 005f 0D       		.uleb128 0xd
 6938 0060 00       		.byte	0
 6939 0061 03       		.uleb128 0x3
 6940 0062 08       		.uleb128 0x8
 6941 0063 3A       		.uleb128 0x3a
 6942 0064 0B       		.uleb128 0xb
 6943 0065 3B       		.uleb128 0x3b
 6944 0066 0B       		.uleb128 0xb
 6945 0067 49       		.uleb128 0x49
 6946 0068 13       		.uleb128 0x13
 6947 0069 38       		.uleb128 0x38
 6948 006a 0B       		.uleb128 0xb
 6949 006b 00       		.byte	0
 6950 006c 00       		.byte	0
 6951 006d 0A       		.uleb128 0xa
 6952 006e 0D       		.uleb128 0xd
 6953 006f 00       		.byte	0
 6954 0070 03       		.uleb128 0x3
 6955 0071 0E       		.uleb128 0xe
 6956 0072 3A       		.uleb128 0x3a
 6957 0073 0B       		.uleb128 0xb
 6958 0074 3B       		.uleb128 0x3b
 6959 0075 0B       		.uleb128 0xb
 6960 0076 49       		.uleb128 0x49
 6961 0077 13       		.uleb128 0x13
 6962 0078 38       		.uleb128 0x38
 6963 0079 0B       		.uleb128 0xb
 6964 007a 00       		.byte	0
 6965 007b 00       		.byte	0
 6966 007c 0B       		.uleb128 0xb
 6967 007d 2E       		.uleb128 0x2e
 6968 007e 00       		.byte	0
 6969 007f 3F       		.uleb128 0x3f
 6970 0080 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 147


 6971 0081 03       		.uleb128 0x3
 6972 0082 0E       		.uleb128 0xe
 6973 0083 3A       		.uleb128 0x3a
 6974 0084 0B       		.uleb128 0xb
 6975 0085 3B       		.uleb128 0x3b
 6976 0086 0B       		.uleb128 0xb
 6977 0087 27       		.uleb128 0x27
 6978 0088 19       		.uleb128 0x19
 6979 0089 11       		.uleb128 0x11
 6980 008a 01       		.uleb128 0x1
 6981 008b 12       		.uleb128 0x12
 6982 008c 06       		.uleb128 0x6
 6983 008d 40       		.uleb128 0x40
 6984 008e 18       		.uleb128 0x18
 6985 008f 9642     		.uleb128 0x2116
 6986 0091 19       		.uleb128 0x19
 6987 0092 00       		.byte	0
 6988 0093 00       		.byte	0
 6989 0094 0C       		.uleb128 0xc
 6990 0095 2E       		.uleb128 0x2e
 6991 0096 01       		.byte	0x1
 6992 0097 3F       		.uleb128 0x3f
 6993 0098 19       		.uleb128 0x19
 6994 0099 03       		.uleb128 0x3
 6995 009a 0E       		.uleb128 0xe
 6996 009b 3A       		.uleb128 0x3a
 6997 009c 0B       		.uleb128 0xb
 6998 009d 3B       		.uleb128 0x3b
 6999 009e 0B       		.uleb128 0xb
 7000 009f 27       		.uleb128 0x27
 7001 00a0 19       		.uleb128 0x19
 7002 00a1 49       		.uleb128 0x49
 7003 00a2 13       		.uleb128 0x13
 7004 00a3 11       		.uleb128 0x11
 7005 00a4 01       		.uleb128 0x1
 7006 00a5 12       		.uleb128 0x12
 7007 00a6 06       		.uleb128 0x6
 7008 00a7 40       		.uleb128 0x40
 7009 00a8 18       		.uleb128 0x18
 7010 00a9 9642     		.uleb128 0x2116
 7011 00ab 19       		.uleb128 0x19
 7012 00ac 01       		.uleb128 0x1
 7013 00ad 13       		.uleb128 0x13
 7014 00ae 00       		.byte	0
 7015 00af 00       		.byte	0
 7016 00b0 0D       		.uleb128 0xd
 7017 00b1 05       		.uleb128 0x5
 7018 00b2 00       		.byte	0
 7019 00b3 03       		.uleb128 0x3
 7020 00b4 08       		.uleb128 0x8
 7021 00b5 3A       		.uleb128 0x3a
 7022 00b6 0B       		.uleb128 0xb
 7023 00b7 3B       		.uleb128 0x3b
 7024 00b8 0B       		.uleb128 0xb
 7025 00b9 49       		.uleb128 0x49
 7026 00ba 13       		.uleb128 0x13
 7027 00bb 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 148


 7028 00bc 18       		.uleb128 0x18
 7029 00bd 00       		.byte	0
 7030 00be 00       		.byte	0
 7031 00bf 0E       		.uleb128 0xe
 7032 00c0 34       		.uleb128 0x34
 7033 00c1 00       		.byte	0
 7034 00c2 03       		.uleb128 0x3
 7035 00c3 0E       		.uleb128 0xe
 7036 00c4 3A       		.uleb128 0x3a
 7037 00c5 0B       		.uleb128 0xb
 7038 00c6 3B       		.uleb128 0x3b
 7039 00c7 0B       		.uleb128 0xb
 7040 00c8 49       		.uleb128 0x49
 7041 00c9 13       		.uleb128 0x13
 7042 00ca 02       		.uleb128 0x2
 7043 00cb 18       		.uleb128 0x18
 7044 00cc 00       		.byte	0
 7045 00cd 00       		.byte	0
 7046 00ce 0F       		.uleb128 0xf
 7047 00cf 34       		.uleb128 0x34
 7048 00d0 00       		.byte	0
 7049 00d1 03       		.uleb128 0x3
 7050 00d2 08       		.uleb128 0x8
 7051 00d3 3A       		.uleb128 0x3a
 7052 00d4 0B       		.uleb128 0xb
 7053 00d5 3B       		.uleb128 0x3b
 7054 00d6 0B       		.uleb128 0xb
 7055 00d7 49       		.uleb128 0x49
 7056 00d8 13       		.uleb128 0x13
 7057 00d9 02       		.uleb128 0x2
 7058 00da 18       		.uleb128 0x18
 7059 00db 00       		.byte	0
 7060 00dc 00       		.byte	0
 7061 00dd 10       		.uleb128 0x10
 7062 00de 2E       		.uleb128 0x2e
 7063 00df 01       		.byte	0x1
 7064 00e0 3F       		.uleb128 0x3f
 7065 00e1 19       		.uleb128 0x19
 7066 00e2 03       		.uleb128 0x3
 7067 00e3 0E       		.uleb128 0xe
 7068 00e4 3A       		.uleb128 0x3a
 7069 00e5 0B       		.uleb128 0xb
 7070 00e6 3B       		.uleb128 0x3b
 7071 00e7 0B       		.uleb128 0xb
 7072 00e8 27       		.uleb128 0x27
 7073 00e9 19       		.uleb128 0x19
 7074 00ea 11       		.uleb128 0x11
 7075 00eb 01       		.uleb128 0x1
 7076 00ec 12       		.uleb128 0x12
 7077 00ed 06       		.uleb128 0x6
 7078 00ee 40       		.uleb128 0x40
 7079 00ef 18       		.uleb128 0x18
 7080 00f0 9642     		.uleb128 0x2116
 7081 00f2 19       		.uleb128 0x19
 7082 00f3 01       		.uleb128 0x1
 7083 00f4 13       		.uleb128 0x13
 7084 00f5 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 149


 7085 00f6 00       		.byte	0
 7086 00f7 11       		.uleb128 0x11
 7087 00f8 2E       		.uleb128 0x2e
 7088 00f9 01       		.byte	0x1
 7089 00fa 3F       		.uleb128 0x3f
 7090 00fb 19       		.uleb128 0x19
 7091 00fc 03       		.uleb128 0x3
 7092 00fd 0E       		.uleb128 0xe
 7093 00fe 3A       		.uleb128 0x3a
 7094 00ff 0B       		.uleb128 0xb
 7095 0100 3B       		.uleb128 0x3b
 7096 0101 05       		.uleb128 0x5
 7097 0102 27       		.uleb128 0x27
 7098 0103 19       		.uleb128 0x19
 7099 0104 11       		.uleb128 0x11
 7100 0105 01       		.uleb128 0x1
 7101 0106 12       		.uleb128 0x12
 7102 0107 06       		.uleb128 0x6
 7103 0108 40       		.uleb128 0x40
 7104 0109 18       		.uleb128 0x18
 7105 010a 9642     		.uleb128 0x2116
 7106 010c 19       		.uleb128 0x19
 7107 010d 01       		.uleb128 0x1
 7108 010e 13       		.uleb128 0x13
 7109 010f 00       		.byte	0
 7110 0110 00       		.byte	0
 7111 0111 12       		.uleb128 0x12
 7112 0112 05       		.uleb128 0x5
 7113 0113 00       		.byte	0
 7114 0114 03       		.uleb128 0x3
 7115 0115 08       		.uleb128 0x8
 7116 0116 3A       		.uleb128 0x3a
 7117 0117 0B       		.uleb128 0xb
 7118 0118 3B       		.uleb128 0x3b
 7119 0119 05       		.uleb128 0x5
 7120 011a 49       		.uleb128 0x49
 7121 011b 13       		.uleb128 0x13
 7122 011c 02       		.uleb128 0x2
 7123 011d 18       		.uleb128 0x18
 7124 011e 00       		.byte	0
 7125 011f 00       		.byte	0
 7126 0120 13       		.uleb128 0x13
 7127 0121 2E       		.uleb128 0x2e
 7128 0122 01       		.byte	0x1
 7129 0123 3F       		.uleb128 0x3f
 7130 0124 19       		.uleb128 0x19
 7131 0125 03       		.uleb128 0x3
 7132 0126 0E       		.uleb128 0xe
 7133 0127 3A       		.uleb128 0x3a
 7134 0128 0B       		.uleb128 0xb
 7135 0129 3B       		.uleb128 0x3b
 7136 012a 05       		.uleb128 0x5
 7137 012b 27       		.uleb128 0x27
 7138 012c 19       		.uleb128 0x19
 7139 012d 49       		.uleb128 0x49
 7140 012e 13       		.uleb128 0x13
 7141 012f 11       		.uleb128 0x11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 150


 7142 0130 01       		.uleb128 0x1
 7143 0131 12       		.uleb128 0x12
 7144 0132 06       		.uleb128 0x6
 7145 0133 40       		.uleb128 0x40
 7146 0134 18       		.uleb128 0x18
 7147 0135 9642     		.uleb128 0x2116
 7148 0137 19       		.uleb128 0x19
 7149 0138 01       		.uleb128 0x1
 7150 0139 13       		.uleb128 0x13
 7151 013a 00       		.byte	0
 7152 013b 00       		.byte	0
 7153 013c 14       		.uleb128 0x14
 7154 013d 34       		.uleb128 0x34
 7155 013e 00       		.byte	0
 7156 013f 03       		.uleb128 0x3
 7157 0140 08       		.uleb128 0x8
 7158 0141 3A       		.uleb128 0x3a
 7159 0142 0B       		.uleb128 0xb
 7160 0143 3B       		.uleb128 0x3b
 7161 0144 05       		.uleb128 0x5
 7162 0145 49       		.uleb128 0x49
 7163 0146 13       		.uleb128 0x13
 7164 0147 02       		.uleb128 0x2
 7165 0148 18       		.uleb128 0x18
 7166 0149 00       		.byte	0
 7167 014a 00       		.byte	0
 7168 014b 15       		.uleb128 0x15
 7169 014c 05       		.uleb128 0x5
 7170 014d 00       		.byte	0
 7171 014e 03       		.uleb128 0x3
 7172 014f 0E       		.uleb128 0xe
 7173 0150 3A       		.uleb128 0x3a
 7174 0151 0B       		.uleb128 0xb
 7175 0152 3B       		.uleb128 0x3b
 7176 0153 05       		.uleb128 0x5
 7177 0154 49       		.uleb128 0x49
 7178 0155 13       		.uleb128 0x13
 7179 0156 02       		.uleb128 0x2
 7180 0157 18       		.uleb128 0x18
 7181 0158 00       		.byte	0
 7182 0159 00       		.byte	0
 7183 015a 16       		.uleb128 0x16
 7184 015b 34       		.uleb128 0x34
 7185 015c 00       		.byte	0
 7186 015d 03       		.uleb128 0x3
 7187 015e 0E       		.uleb128 0xe
 7188 015f 3A       		.uleb128 0x3a
 7189 0160 0B       		.uleb128 0xb
 7190 0161 3B       		.uleb128 0x3b
 7191 0162 05       		.uleb128 0x5
 7192 0163 49       		.uleb128 0x49
 7193 0164 13       		.uleb128 0x13
 7194 0165 02       		.uleb128 0x2
 7195 0166 18       		.uleb128 0x18
 7196 0167 00       		.byte	0
 7197 0168 00       		.byte	0
 7198 0169 17       		.uleb128 0x17
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 151


 7199 016a 0F       		.uleb128 0xf
 7200 016b 00       		.byte	0
 7201 016c 0B       		.uleb128 0xb
 7202 016d 0B       		.uleb128 0xb
 7203 016e 49       		.uleb128 0x49
 7204 016f 13       		.uleb128 0x13
 7205 0170 00       		.byte	0
 7206 0171 00       		.byte	0
 7207 0172 18       		.uleb128 0x18
 7208 0173 34       		.uleb128 0x34
 7209 0174 00       		.byte	0
 7210 0175 03       		.uleb128 0x3
 7211 0176 0E       		.uleb128 0xe
 7212 0177 3A       		.uleb128 0x3a
 7213 0178 0B       		.uleb128 0xb
 7214 0179 3B       		.uleb128 0x3b
 7215 017a 05       		.uleb128 0x5
 7216 017b 49       		.uleb128 0x49
 7217 017c 13       		.uleb128 0x13
 7218 017d 3F       		.uleb128 0x3f
 7219 017e 19       		.uleb128 0x19
 7220 017f 3C       		.uleb128 0x3c
 7221 0180 19       		.uleb128 0x19
 7222 0181 00       		.byte	0
 7223 0182 00       		.byte	0
 7224 0183 19       		.uleb128 0x19
 7225 0184 34       		.uleb128 0x34
 7226 0185 00       		.byte	0
 7227 0186 03       		.uleb128 0x3
 7228 0187 0E       		.uleb128 0xe
 7229 0188 3A       		.uleb128 0x3a
 7230 0189 0B       		.uleb128 0xb
 7231 018a 3B       		.uleb128 0x3b
 7232 018b 0B       		.uleb128 0xb
 7233 018c 49       		.uleb128 0x49
 7234 018d 13       		.uleb128 0x13
 7235 018e 3F       		.uleb128 0x3f
 7236 018f 19       		.uleb128 0x19
 7237 0190 02       		.uleb128 0x2
 7238 0191 18       		.uleb128 0x18
 7239 0192 00       		.byte	0
 7240 0193 00       		.byte	0
 7241 0194 1A       		.uleb128 0x1a
 7242 0195 34       		.uleb128 0x34
 7243 0196 00       		.byte	0
 7244 0197 03       		.uleb128 0x3
 7245 0198 08       		.uleb128 0x8
 7246 0199 3A       		.uleb128 0x3a
 7247 019a 0B       		.uleb128 0xb
 7248 019b 3B       		.uleb128 0x3b
 7249 019c 0B       		.uleb128 0xb
 7250 019d 49       		.uleb128 0x49
 7251 019e 13       		.uleb128 0x13
 7252 019f 3F       		.uleb128 0x3f
 7253 01a0 19       		.uleb128 0x19
 7254 01a1 02       		.uleb128 0x2
 7255 01a2 18       		.uleb128 0x18
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 152


 7256 01a3 00       		.byte	0
 7257 01a4 00       		.byte	0
 7258 01a5 00       		.byte	0
 7259              		.section	.debug_aranges,"",%progbits
 7260 0000 64000000 		.4byte	0x64
 7261 0004 0200     		.2byte	0x2
 7262 0006 00000000 		.4byte	.Ldebug_info0
 7263 000a 04       		.byte	0x4
 7264 000b 00       		.byte	0
 7265 000c 0000     		.2byte	0
 7266 000e 0000     		.2byte	0
 7267 0010 00000000 		.4byte	.LFB63
 7268 0014 14000000 		.4byte	.LFE63-.LFB63
 7269 0018 00000000 		.4byte	.LFB64
 7270 001c 98000000 		.4byte	.LFE64-.LFB64
 7271 0020 00000000 		.4byte	.LFB65
 7272 0024 A0000000 		.4byte	.LFE65-.LFB65
 7273 0028 00000000 		.4byte	.LFB66
 7274 002c 36000000 		.4byte	.LFE66-.LFB66
 7275 0030 00000000 		.4byte	.LFB67
 7276 0034 7C010000 		.4byte	.LFE67-.LFB67
 7277 0038 00000000 		.4byte	.LFB68
 7278 003c 24000000 		.4byte	.LFE68-.LFB68
 7279 0040 00000000 		.4byte	.LFB69
 7280 0044 54030000 		.4byte	.LFE69-.LFB69
 7281 0048 00000000 		.4byte	.LFB70
 7282 004c 80080000 		.4byte	.LFE70-.LFB70
 7283 0050 00000000 		.4byte	.LFB71
 7284 0054 7C020000 		.4byte	.LFE71-.LFB71
 7285 0058 00000000 		.4byte	.LFB72
 7286 005c 94100000 		.4byte	.LFE72-.LFB72
 7287 0060 00000000 		.4byte	0
 7288 0064 00000000 		.4byte	0
 7289              		.section	.debug_ranges,"",%progbits
 7290              	.Ldebug_ranges0:
 7291 0000 00000000 		.4byte	.LFB63
 7292 0004 14000000 		.4byte	.LFE63
 7293 0008 00000000 		.4byte	.LFB64
 7294 000c 98000000 		.4byte	.LFE64
 7295 0010 00000000 		.4byte	.LFB65
 7296 0014 A0000000 		.4byte	.LFE65
 7297 0018 00000000 		.4byte	.LFB66
 7298 001c 36000000 		.4byte	.LFE66
 7299 0020 00000000 		.4byte	.LFB67
 7300 0024 7C010000 		.4byte	.LFE67
 7301 0028 00000000 		.4byte	.LFB68
 7302 002c 24000000 		.4byte	.LFE68
 7303 0030 00000000 		.4byte	.LFB69
 7304 0034 54030000 		.4byte	.LFE69
 7305 0038 00000000 		.4byte	.LFB70
 7306 003c 80080000 		.4byte	.LFE70
 7307 0040 00000000 		.4byte	.LFB71
 7308 0044 7C020000 		.4byte	.LFE71
 7309 0048 00000000 		.4byte	.LFB72
 7310 004c 94100000 		.4byte	.LFE72
 7311 0050 00000000 		.4byte	0
 7312 0054 00000000 		.4byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 153


 7313              		.section	.debug_line,"",%progbits
 7314              	.Ldebug_line0:
 7315 0000 020B0000 		.section	.debug_str,"MS",%progbits,1
 7315      02006E01 
 7315      00000201 
 7315      FB0E0D00 
 7315      01010101 
 7316              	.LASF34:
 7317 0000 70617373 		.ascii	"password\000"
 7317      776F7264 
 7317      00
 7318              	.LASF74:
 7319 0009 666C756A 		.ascii	"flujo_LCD1\000"
 7319      6F5F4C43 
 7319      443100
 7320              	.LASF75:
 7321 0014 666C756A 		.ascii	"flujo_LCD2\000"
 7321      6F5F4C43 
 7321      443200
 7322              	.LASF79:
 7323 001f 636F756E 		.ascii	"count_protector2\000"
 7323      745F7072 
 7323      6F746563 
 7323      746F7232 
 7323      00
 7324              	.LASF86:
 7325 0030 7472616D 		.ascii	"trama_totales\000"
 7325      615F746F 
 7325      74616C65 
 7325      7300
 7326              	.LASF61:
 7327 003e 69645F63 		.ascii	"id_coma1\000"
 7327      6F6D6131 
 7327      00
 7328              	.LASF64:
 7329 0047 69645F63 		.ascii	"id_coma2\000"
 7329      6F6D6132 
 7329      00
 7330              	.LASF48:
 7331 0050 62756666 		.ascii	"buffer\000"
 7331      657200
 7332              	.LASF8:
 7333 0057 756E7369 		.ascii	"unsigned int\000"
 7333      676E6564 
 7333      20696E74 
 7333      00
 7334              	.LASF91:
 7335 0064 76657273 		.ascii	"version\000"
 7335      696F6E00 
 7336              	.LASF9:
 7337 006c 5F5F696E 		.ascii	"__int32_t\000"
 7337      7433325F 
 7337      7400
 7338              	.LASF53:
 7339 0076 70726563 		.ascii	"precio\000"
 7339      696F00
 7340              	.LASF104:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 154


 7341 007d 6F6B5F52 		.ascii	"ok_RF\000"
 7341      4600
 7342              	.LASF54:
 7343 0083 6E756D5F 		.ascii	"num_man\000"
 7343      6D616E00 
 7344              	.LASF51:
 7345 008b 64656369 		.ascii	"decimal\000"
 7345      6D616C00 
 7346              	.LASF101:
 7347 0093 686F7261 		.ascii	"hora\000"
 7347      00
 7348              	.LASF72:
 7349 0098 7465636C 		.ascii	"teclas1\000"
 7349      61733100 
 7350              	.LASF73:
 7351 00a0 7465636C 		.ascii	"teclas2\000"
 7351      61733200 
 7352              	.LASF23:
 7353 00a8 706F7369 		.ascii	"posicion\000"
 7353      63696F6E 
 7353      00
 7354              	.LASF102:
 7355 00b1 7276656E 		.ascii	"rventa1\000"
 7355      74613100 
 7356              	.LASF103:
 7357 00b9 7276656E 		.ascii	"rventa2\000"
 7357      74613200 
 7358              	.LASF96:
 7359 00c1 64697265 		.ascii	"direccion\000"
 7359      6363696F 
 7359      6E00
 7360              	.LASF82:
 7361 00cb 70726F78 		.ascii	"prox_caso\000"
 7361      5F636173 
 7361      6F00
 7362              	.LASF28:
 7363 00d5 70726573 		.ascii	"preset\000"
 7363      657400
 7364              	.LASF13:
 7365 00dc 666C6F61 		.ascii	"float\000"
 7365      7400
 7366              	.LASF116:
 7367 00e2 6D736E5F 		.ascii	"msn_lecaan\000"
 7367      6C656361 
 7367      616E00
 7368              	.LASF107:
 7369 00ed 62756666 		.ascii	"buffer_i2c\000"
 7369      65725F69 
 7369      326300
 7370              	.LASF97:
 7371 00f8 6C656D61 		.ascii	"lema1\000"
 7371      3100
 7372              	.LASF98:
 7373 00fe 6C656D61 		.ascii	"lema2\000"
 7373      3200
 7374              	.LASF81:
 7375 0104 696D6167 		.ascii	"imagen_grado\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 155


 7375      656E5F67 
 7375      7261646F 
 7375      00
 7376              	.LASF31:
 7377 0111 696D7072 		.ascii	"imprimir\000"
 7377      696D6972 
 7377      00
 7378              	.LASF7:
 7379 011a 6C6F6E67 		.ascii	"long long unsigned int\000"
 7379      206C6F6E 
 7379      6720756E 
 7379      7369676E 
 7379      65642069 
 7380              	.LASF119:
 7381 0131 2E5C5072 		.ascii	".\\Protocolo.c\000"
 7381      6F746F63 
 7381      6F6C6F2E 
 7381      6300
 7382              	.LASF92:
 7383 013f 6C61646F 		.ascii	"lado1\000"
 7383      3100
 7384              	.LASF93:
 7385 0145 6C61646F 		.ascii	"lado2\000"
 7385      3200
 7386              	.LASF117:
 7387 014b 6D736E5F 		.ascii	"msn_tventas\000"
 7387      7476656E 
 7387      74617300 
 7388              	.LASF112:
 7389 0157 6D736E5F 		.ascii	"msn_tc\000"
 7389      746300
 7390              	.LASF114:
 7391 015e 6D736E5F 		.ascii	"msn_td\000"
 7391      746400
 7392              	.LASF113:
 7393 0165 6D736E5F 		.ascii	"msn_te\000"
 7393      746500
 7394              	.LASF56:
 7395 016c 53757274 		.ascii	"Surtidor_rxBuffer\000"
 7395      69646F72 
 7395      5F727842 
 7395      75666665 
 7395      7200
 7396              	.LASF30:
 7397 017e 706C6163 		.ascii	"placa\000"
 7397      6100
 7398              	.LASF39:
 7399 0184 7665725F 		.ascii	"ver_pos\000"
 7399      706F7300 
 7400              	.LASF25:
 7401 018c 766F6C75 		.ascii	"volumen\000"
 7401      6D656E00 
 7402              	.LASF45:
 7403 0194 76656E74 		.ascii	"venta\000"
 7403      6100
 7404              	.LASF95:
 7405 019a 74656C65 		.ascii	"telefono\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 156


 7405      666F6E6F 
 7405      00
 7406              	.LASF62:
 7407 01a3 69645F74 		.ascii	"id_teclado1\000"
 7407      65636C61 
 7407      646F3100 
 7408              	.LASF65:
 7409 01af 69645F74 		.ascii	"id_teclado2\000"
 7409      65636C61 
 7409      646F3200 
 7410              	.LASF85:
 7411 01bb 69645F76 		.ascii	"id_venta\000"
 7411      656E7461 
 7411      00
 7412              	.LASF115:
 7413 01c4 6D736E5F 		.ascii	"msn_lecact\000"
 7413      6C656361 
 7413      637400
 7414              	.LASF106:
 7415 01cf 72665F6D 		.ascii	"rf_mod\000"
 7415      6F6400
 7416              	.LASF44:
 7417 01d6 64657465 		.ascii	"detener\000"
 7417      6E657200 
 7418              	.LASF42:
 7419 01de 636F6D61 		.ascii	"comand_exten\000"
 7419      6E645F65 
 7419      7874656E 
 7419      00
 7420              	.LASF77:
 7421 01eb 42756666 		.ascii	"Buffer_LCD2\000"
 7421      65725F4C 
 7421      43443200 
 7422              	.LASF15:
 7423 01f7 63686172 		.ascii	"char\000"
 7423      00
 7424              	.LASF83:
 7425 01fc 626C6F71 		.ascii	"bloqueo_LCD\000"
 7425      75656F5F 
 7425      4C434400 
 7426              	.LASF20:
 7427 0208 6D616E67 		.ascii	"mangueras\000"
 7427      75657261 
 7427      7300
 7428              	.LASF12:
 7429 0212 75696E74 		.ascii	"uint16\000"
 7429      313600
 7430              	.LASF109:
 7431 0219 7072696E 		.ascii	"print1\000"
 7431      743100
 7432              	.LASF110:
 7433 0220 7072696E 		.ascii	"print2\000"
 7433      743200
 7434              	.LASF32:
 7435 0227 7469706F 		.ascii	"tipo_venta\000"
 7435      5F76656E 
 7435      746100
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 157


 7436              	.LASF29:
 7437 0232 69645F65 		.ascii	"id_ef\000"
 7437      6600
 7438              	.LASF35:
 7439 0238 7475726E 		.ascii	"turno\000"
 7439      6F00
 7440              	.LASF18:
 7441 023e 746F7461 		.ascii	"totales\000"
 7441      6C657300 
 7442              	.LASF80:
 7443 0246 70617373 		.ascii	"password_lcd\000"
 7443      776F7264 
 7443      5F6C6364 
 7443      00
 7444              	.LASF58:
 7445 0253 636F756E 		.ascii	"count_teclas1\000"
 7445      745F7465 
 7445      636C6173 
 7445      3100
 7446              	.LASF63:
 7447 0261 636F756E 		.ascii	"count_teclas2\000"
 7447      745F7465 
 7447      636C6173 
 7447      3200
 7448              	.LASF66:
 7449 026f 706F7378 		.ascii	"posx1\000"
 7449      3100
 7450              	.LASF69:
 7451 0275 706F7378 		.ascii	"posx2\000"
 7451      3200
 7452              	.LASF6:
 7453 027b 6C6F6E67 		.ascii	"long long int\000"
 7453      206C6F6E 
 7453      6720696E 
 7453      7400
 7454              	.LASF26:
 7455 0289 70726F64 		.ascii	"producto\000"
 7455      7563746F 
 7455      00
 7456              	.LASF52:
 7457 0292 63616D62 		.ascii	"cambiar_precio\000"
 7457      6961725F 
 7457      70726563 
 7457      696F00
 7458              	.LASF33:
 7459 02a1 63656475 		.ascii	"cedula\000"
 7459      6C6100
 7460              	.LASF118:
 7461 02a8 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 7461      4320342E 
 7461      392E3320 
 7461      32303135 
 7461      30333033 
 7462 02db 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 7462      20726576 
 7462      6973696F 
 7462      6E203232 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 158


 7462      31323230 
 7463 030e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7463      66756E63 
 7463      74696F6E 
 7463      2D736563 
 7463      74696F6E 
 7464              	.LASF111:
 7465 0336 72785F74 		.ascii	"rx_timeout\000"
 7465      696D656F 
 7465      757400
 7466              	.LASF67:
 7467 0341 706F7379 		.ascii	"posy1\000"
 7467      3100
 7468              	.LASF70:
 7469 0347 706F7379 		.ascii	"posy2\000"
 7469      3200
 7470              	.LASF49:
 7471 034d 73697A65 		.ascii	"size\000"
 7471      00
 7472              	.LASF22:
 7473 0352 72656369 		.ascii	"recibo\000"
 7473      626F00
 7474              	.LASF24:
 7475 0359 64696E65 		.ascii	"dinero\000"
 7475      726F00
 7476              	.LASF76:
 7477 0360 42756666 		.ascii	"Buffer_LCD1\000"
 7477      65725F4C 
 7477      43443100 
 7478              	.LASF17:
 7479 036c 65737461 		.ascii	"estado\000"
 7479      646F00
 7480              	.LASF37:
 7481 0373 70617373 		.ascii	"password_local\000"
 7481      776F7264 
 7481      5F6C6F63 
 7481      616C00
 7482              	.LASF87:
 7483 0382 70707578 		.ascii	"ppux10\000"
 7483      313000
 7484              	.LASF94:
 7485 0389 6E6F6D62 		.ascii	"nombre\000"
 7485      726500
 7486              	.LASF108:
 7487 0390 6372635F 		.ascii	"crc_total\000"
 7487      746F7461 
 7487      6C00
 7488              	.LASF55:
 7489 039a 6E6D616E 		.ascii	"nmangueras\000"
 7489      67756572 
 7489      617300
 7490              	.LASF99:
 7491 03a5 69645F6C 		.ascii	"id_logo\000"
 7491      6F676F00 
 7492              	.LASF2:
 7493 03ad 73686F72 		.ascii	"short int\000"
 7493      7420696E 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 159


 7493      7400
 7494              	.LASF4:
 7495 03b7 6C6F6E67 		.ascii	"long int\000"
 7495      20696E74 
 7495      00
 7496              	.LASF57:
 7497 03c0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7497      52784275 
 7497      66666572 
 7497      00
 7498              	.LASF21:
 7499 03cd 73757274 		.ascii	"surtidor\000"
 7499      69646F72 
 7499      00
 7500              	.LASF59:
 7501 03d6 636F6D61 		.ascii	"comas1\000"
 7501      733100
 7502              	.LASF60:
 7503 03dd 636F6D61 		.ascii	"comas2\000"
 7503      733200
 7504              	.LASF50:
 7505 03e4 74656D70 		.ascii	"temp\000"
 7505      00
 7506              	.LASF88:
 7507 03e9 6E6F6D62 		.ascii	"nombre_pro1\000"
 7507      72655F70 
 7507      726F3100 
 7508              	.LASF90:
 7509 03f5 6E6F6D62 		.ascii	"nombre_pro3\000"
 7509      72655F70 
 7509      726F3300 
 7510              	.LASF40:
 7511 0401 65737461 		.ascii	"estado_ex\000"
 7511      646F5F65 
 7511      7800
 7512              	.LASF46:
 7513 040b 70726F67 		.ascii	"programar\000"
 7513      72616D61 
 7513      7200
 7514              	.LASF16:
 7515 0415 73697A65 		.ascii	"sizetype\000"
 7515      74797065 
 7515      00
 7516              	.LASF5:
 7517 041e 6C6F6E67 		.ascii	"long unsigned int\000"
 7517      20756E73 
 7517      69676E65 
 7517      6420696E 
 7517      7400
 7518              	.LASF120:
 7519 0430 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Desktop\\Prueba_GRPFleet\\BBB"
 7519      73657273 
 7519      5C526563 
 7519      65706369 
 7519      6F6E5C44 
 7520 045e 2E637964 		.ascii	".cydsn\000"
 7520      736E00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 160


 7521              	.LASF10:
 7522 0465 696E7433 		.ascii	"int32_t\000"
 7522      325F7400 
 7523              	.LASF36:
 7524 046d 6175746F 		.ascii	"autorizado\000"
 7524      72697A61 
 7524      646F00
 7525              	.LASF1:
 7526 0478 756E7369 		.ascii	"unsigned char\000"
 7526      676E6564 
 7526      20636861 
 7526      7200
 7527              	.LASF38:
 7528 0486 6765745F 		.ascii	"get_estado\000"
 7528      65737461 
 7528      646F00
 7529              	.LASF100:
 7530 0491 66656368 		.ascii	"fecha\000"
 7530      6100
 7531              	.LASF43:
 7532 0497 7665725F 		.ascii	"ver_error\000"
 7532      6572726F 
 7532      7200
 7533              	.LASF105:
 7534 04a1 6F6B5F64 		.ascii	"ok_datosRF\000"
 7534      61746F73 
 7534      524600
 7535              	.LASF89:
 7536 04ac 6E6F6D62 		.ascii	"nombre_pro2\000"
 7536      72655F70 
 7536      726F3200 
 7537              	.LASF0:
 7538 04b8 7369676E 		.ascii	"signed char\000"
 7538      65642063 
 7538      68617200 
 7539              	.LASF47:
 7540 04c4 76616C6F 		.ascii	"valor\000"
 7540      7200
 7541              	.LASF78:
 7542 04ca 636F756E 		.ascii	"count_protector\000"
 7542      745F7072 
 7542      6F746563 
 7542      746F7200 
 7543              	.LASF3:
 7544 04da 73686F72 		.ascii	"short unsigned int\000"
 7544      7420756E 
 7544      7369676E 
 7544      65642069 
 7544      6E7400
 7545              	.LASF11:
 7546 04ed 75696E74 		.ascii	"uint8\000"
 7546      3800
 7547              	.LASF14:
 7548 04f3 646F7562 		.ascii	"double\000"
 7548      6C6500
 7549              	.LASF41:
 7550 04fa 72785F65 		.ascii	"rx_extend\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccaEkSUt.s 			page 161


 7550      7874656E 
 7550      6400
 7551              	.LASF84:
 7552 0504 69645F65 		.ascii	"id_estacion\000"
 7552      73746163 
 7552      696F6E00 
 7553              	.LASF27:
 7554 0510 6D616E67 		.ascii	"manguera\000"
 7554      75657261 
 7554      00
 7555              	.LASF19:
 7556 0519 67726164 		.ascii	"grado\000"
 7556      6F00
 7557              	.LASF121:
 7558 051f 52785F53 		.ascii	"Rx_Surtidor\000"
 7558      75727469 
 7558      646F7200 
 7559              	.LASF68:
 7560 052b 73697A65 		.ascii	"sizeletra1\000"
 7560      6C657472 
 7560      613100
 7561              	.LASF71:
 7562 0536 73697A65 		.ascii	"sizeletra2\000"
 7562      6C657472 
 7562      613200
 7563              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
