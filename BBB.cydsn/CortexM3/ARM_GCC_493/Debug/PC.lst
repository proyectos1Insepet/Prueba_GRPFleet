ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PC.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	PC_initVar
  19              		.bss
  20              		.type	PC_initVar, %object
  21              		.size	PC_initVar, 1
  22              	PC_initVar:
  23 0000 00       		.space	1
  24              		.global	PC_errorStatus
  25              		.type	PC_errorStatus, %object
  26              		.size	PC_errorStatus, 1
  27              	PC_errorStatus:
  28 0001 00       		.space	1
  29              		.comm	PC_rxBuffer,1500,4
  30              		.global	PC_rxBufferRead
  31              		.align	1
  32              		.type	PC_rxBufferRead, %object
  33              		.size	PC_rxBufferRead, 2
  34              	PC_rxBufferRead:
  35 0002 0000     		.space	2
  36              		.global	PC_rxBufferWrite
  37              		.align	1
  38              		.type	PC_rxBufferWrite, %object
  39              		.size	PC_rxBufferWrite, 2
  40              	PC_rxBufferWrite:
  41 0004 0000     		.space	2
  42              		.global	PC_rxBufferLoopDetect
  43              		.type	PC_rxBufferLoopDetect, %object
  44              		.size	PC_rxBufferLoopDetect, 1
  45              	PC_rxBufferLoopDetect:
  46 0006 00       		.space	1
  47              		.global	PC_rxBufferOverflow
  48              		.type	PC_rxBufferOverflow, %object
  49              		.size	PC_rxBufferOverflow, 1
  50              	PC_rxBufferOverflow:
  51 0007 00       		.space	1
  52              		.section	.text.PC_Start,"ax",%progbits
  53              		.align	2
  54              		.global	PC_Start
  55              		.thumb
  56              		.thumb_func
  57              		.type	PC_Start, %function
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 2


  58              	PC_Start:
  59              	.LFB0:
  60              		.file 1 ".\\Generated_Source\\PSoC5\\PC.c"
   1:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PC.c **** * File Name: PC.c
   3:.\Generated_Source\PSoC5/PC.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/PC.c **** *
   5:.\Generated_Source\PSoC5/PC.c **** * Description:
   6:.\Generated_Source\PSoC5/PC.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/PC.c **** *
   8:.\Generated_Source\PSoC5/PC.c **** * Note:
   9:.\Generated_Source\PSoC5/PC.c **** *
  10:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/PC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/PC.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/PC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/PC.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/PC.c **** 
  17:.\Generated_Source\PSoC5/PC.c **** #include "PC.h"
  18:.\Generated_Source\PSoC5/PC.c **** #if (PC_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/PC.c ****     #include "PC_IntClock.h"
  20:.\Generated_Source\PSoC5/PC.c **** #endif /* End PC_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/PC.c **** 
  22:.\Generated_Source\PSoC5/PC.c **** 
  23:.\Generated_Source\PSoC5/PC.c **** /***************************************
  24:.\Generated_Source\PSoC5/PC.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/PC.c **** ***************************************/
  26:.\Generated_Source\PSoC5/PC.c **** 
  27:.\Generated_Source\PSoC5/PC.c **** uint8 PC_initVar = 0u;
  28:.\Generated_Source\PSoC5/PC.c **** 
  29:.\Generated_Source\PSoC5/PC.c **** #if (PC_TX_INTERRUPT_ENABLED && PC_TX_ENABLED)
  30:.\Generated_Source\PSoC5/PC.c ****     volatile uint8 PC_txBuffer[PC_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/PC.c ****     volatile uint8 PC_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/PC.c **** #endif /* (PC_TX_INTERRUPT_ENABLED && PC_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/PC.c **** 
  35:.\Generated_Source\PSoC5/PC.c **** #if (PC_RX_INTERRUPT_ENABLED && (PC_RX_ENABLED || PC_HD_ENABLED))
  36:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/PC.c ****     volatile uint8 PC_rxBuffer[PC_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/PC.c ****     volatile uint16 PC_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/PC.c ****     volatile uint16 PC_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/PC.c ****     volatile uint8 PC_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/PC.c ****     volatile uint8 PC_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/PC.c ****         volatile uint8 PC_rxAddressMode = PC_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/PC.c ****         volatile uint8 PC_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/PC.c **** #endif /* (PC_RX_INTERRUPT_ENABLED && (PC_RX_ENABLED || PC_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/PC.c **** 
  48:.\Generated_Source\PSoC5/PC.c **** 
  49:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_Start
  51:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/PC.c **** *
  53:.\Generated_Source\PSoC5/PC.c **** * Summary:
  54:.\Generated_Source\PSoC5/PC.c **** *  This is the preferred method to begin component operation.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 3


  55:.\Generated_Source\PSoC5/PC.c **** *  PC_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/PC.c **** *  PC_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/PC.c **** *  PC_Enable() function.
  58:.\Generated_Source\PSoC5/PC.c **** *
  59:.\Generated_Source\PSoC5/PC.c **** * Parameters:
  60:.\Generated_Source\PSoC5/PC.c **** *  None.
  61:.\Generated_Source\PSoC5/PC.c **** *
  62:.\Generated_Source\PSoC5/PC.c **** * Return:
  63:.\Generated_Source\PSoC5/PC.c **** *  None.
  64:.\Generated_Source\PSoC5/PC.c **** *
  65:.\Generated_Source\PSoC5/PC.c **** * Global variables:
  66:.\Generated_Source\PSoC5/PC.c **** *  The PC_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/PC.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/PC.c **** *  and set to one (1u) the first time PC_Start() is called. This
  69:.\Generated_Source\PSoC5/PC.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/PC.c **** *  subsequent calls to the PC_Start() routine.
  71:.\Generated_Source\PSoC5/PC.c **** *
  72:.\Generated_Source\PSoC5/PC.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/PC.c **** *  No.
  74:.\Generated_Source\PSoC5/PC.c **** *
  75:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/PC.c **** void PC_Start(void) 
  77:.\Generated_Source\PSoC5/PC.c **** {
  61              		.loc 1 77 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC5/PC.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/PC.c ****     if(PC_initVar == 0u)
  71              		.loc 1 79 0
  72 0004 054B     		ldr	r3, .L3
  73 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  74 0008 002B     		cmp	r3, #0
  75 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC5/PC.c ****     {
  81:.\Generated_Source\PSoC5/PC.c ****         PC_Init();
  76              		.loc 1 81 0
  77 000c FFF7FEFF 		bl	PC_Init
  82:.\Generated_Source\PSoC5/PC.c ****         PC_initVar = 1u;
  78              		.loc 1 82 0
  79 0010 024B     		ldr	r3, .L3
  80 0012 0122     		movs	r2, #1
  81 0014 1A70     		strb	r2, [r3]
  82              	.L2:
  83:.\Generated_Source\PSoC5/PC.c ****     }
  84:.\Generated_Source\PSoC5/PC.c **** 
  85:.\Generated_Source\PSoC5/PC.c ****     PC_Enable();
  83              		.loc 1 85 0
  84 0016 FFF7FEFF 		bl	PC_Enable
  86:.\Generated_Source\PSoC5/PC.c **** }
  85              		.loc 1 86 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 4


  86 001a 80BD     		pop	{r7, pc}
  87              	.L4:
  88              		.align	2
  89              	.L3:
  90 001c 00000000 		.word	PC_initVar
  91              		.cfi_endproc
  92              	.LFE0:
  93              		.size	PC_Start, .-PC_Start
  94              		.section	.text.PC_Init,"ax",%progbits
  95              		.align	2
  96              		.global	PC_Init
  97              		.thumb
  98              		.thumb_func
  99              		.type	PC_Init, %function
 100              	PC_Init:
 101              	.LFB1:
  87:.\Generated_Source\PSoC5/PC.c **** 
  88:.\Generated_Source\PSoC5/PC.c **** 
  89:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_Init
  91:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/PC.c **** *
  93:.\Generated_Source\PSoC5/PC.c **** * Summary:
  94:.\Generated_Source\PSoC5/PC.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/PC.c **** *  dialog settings. It is not necessary to call PC_Init() because
  96:.\Generated_Source\PSoC5/PC.c **** *  the PC_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/PC.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/PC.c **** *
  99:.\Generated_Source\PSoC5/PC.c **** * Parameters:
 100:.\Generated_Source\PSoC5/PC.c **** *  None.
 101:.\Generated_Source\PSoC5/PC.c **** *
 102:.\Generated_Source\PSoC5/PC.c **** * Return:
 103:.\Generated_Source\PSoC5/PC.c **** *  None.
 104:.\Generated_Source\PSoC5/PC.c **** *
 105:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/PC.c **** void PC_Init(void) 
 107:.\Generated_Source\PSoC5/PC.c **** {
 102              		.loc 1 107 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/PC.c ****     #if(PC_RX_ENABLED || PC_HD_ENABLED)
 109:.\Generated_Source\PSoC5/PC.c **** 
 110:.\Generated_Source\PSoC5/PC.c ****         #if (PC_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/PC.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/PC.c ****             (void) CyIntSetVector(PC_RX_VECT_NUM, &PC_RXISR);
 112              		.loc 1 112 0
 113 0004 0220     		movs	r0, #2
 114 0006 0D49     		ldr	r1, .L6
 115 0008 FFF7FEFF 		bl	CyIntSetVector
 113:.\Generated_Source\PSoC5/PC.c ****             CyIntSetPriority(PC_RX_VECT_NUM, PC_RX_PRIOR_NUM);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 5


 116              		.loc 1 113 0
 117 000c 0220     		movs	r0, #2
 118 000e 0021     		movs	r1, #0
 119 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:.\Generated_Source\PSoC5/PC.c ****             PC_errorStatus = 0u;
 120              		.loc 1 114 0
 121 0014 0A4B     		ldr	r3, .L6+4
 122 0016 0022     		movs	r2, #0
 123 0018 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/PC.c **** 
 117:.\Generated_Source\PSoC5/PC.c ****         #if (PC_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/PC.c ****             PC_SetRxAddressMode(PC_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/PC.c ****             PC_SetRxAddress1(PC_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/PC.c ****             PC_SetRxAddress2(PC_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/PC.c **** 
 123:.\Generated_Source\PSoC5/PC.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/PC.c ****         PC_RXBITCTR_PERIOD_REG = PC_RXBITCTR_INIT;
 124              		.loc 1 124 0
 125 001a 0A4B     		ldr	r3, .L6+8
 126 001c 7222     		movs	r2, #114
 127 001e 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/PC.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/PC.c ****         PC_RXSTATUS_MASK_REG  = PC_INIT_RX_INTERRUPTS_MASK;
 128              		.loc 1 126 0
 129 0020 094B     		ldr	r3, .L6+12
 130 0022 2022     		movs	r2, #32
 131 0024 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/PC.c ****     #endif /* End PC_RX_ENABLED || PC_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/PC.c **** 
 129:.\Generated_Source\PSoC5/PC.c ****     #if(PC_TX_ENABLED)
 130:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/PC.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/PC.c ****             (void) CyIntSetVector(PC_TX_VECT_NUM, &PC_TXISR);
 133:.\Generated_Source\PSoC5/PC.c ****             CyIntSetPriority(PC_TX_VECT_NUM, PC_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/PC.c **** 
 136:.\Generated_Source\PSoC5/PC.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/PC.c ****             PC_TXBITCLKGEN_CTR_REG = PC_BIT_CENTER;
 132              		.loc 1 138 0
 133 0026 094B     		ldr	r3, .L6+16
 134 0028 0622     		movs	r2, #6
 135 002a 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/PC.c ****             PC_TXBITCLKTX_COMPLETE_REG = ((PC_NUMBER_OF_DATA_BITS +
 136              		.loc 1 139 0
 137 002c 084B     		ldr	r3, .L6+20
 138 002e 4722     		movs	r2, #71
 139 0030 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC5/PC.c ****                         PC_NUMBER_OF_START_BIT) * PC_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/PC.c ****         #else
 142:.\Generated_Source\PSoC5/PC.c ****             PC_TXBITCTR_PERIOD_REG = ((PC_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/PC.c ****                         PC_NUMBER_OF_START_BIT) * PC_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/PC.c **** 
 146:.\Generated_Source\PSoC5/PC.c ****         /* Configure the Initial TX interrupt mask */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 6


 147:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/PC.c ****             PC_TXSTATUS_MASK_REG = PC_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/PC.c ****         #else
 150:.\Generated_Source\PSoC5/PC.c ****             PC_TXSTATUS_MASK_REG = PC_INIT_TX_INTERRUPTS_MASK;
 140              		.loc 1 150 0
 141 0032 084B     		ldr	r3, .L6+24
 142 0034 0022     		movs	r2, #0
 143 0036 1A70     		strb	r2, [r3]
 151:.\Generated_Source\PSoC5/PC.c ****         #endif /*End PC_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/PC.c **** 
 153:.\Generated_Source\PSoC5/PC.c ****     #endif /* End PC_TX_ENABLED */
 154:.\Generated_Source\PSoC5/PC.c **** 
 155:.\Generated_Source\PSoC5/PC.c ****     #if(PC_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/PC.c ****         PC_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/PC.c ****             (PC_ReadControlRegister() & (uint8)~PC_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/PC.c ****             (uint8)(PC_PARITY_TYPE << PC_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/PC.c ****     #endif /* End PC_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/PC.c **** }
 144              		.loc 1 160 0
 145 0038 80BD     		pop	{r7, pc}
 146              	.L7:
 147 003a 00BF     		.align	2
 148              	.L6:
 149 003c 00000000 		.word	PC_RXISR
 150 0040 00000000 		.word	PC_errorStatus
 151 0044 8B640040 		.word	1073767563
 152 0048 8B650040 		.word	1073767819
 153 004c 24640040 		.word	1073767460
 154 0050 34640040 		.word	1073767476
 155 0054 85640040 		.word	1073767557
 156              		.cfi_endproc
 157              	.LFE1:
 158              		.size	PC_Init, .-PC_Init
 159              		.section	.text.PC_Enable,"ax",%progbits
 160              		.align	2
 161              		.global	PC_Enable
 162              		.thumb
 163              		.thumb_func
 164              		.type	PC_Enable, %function
 165              	PC_Enable:
 166              	.LFB2:
 161:.\Generated_Source\PSoC5/PC.c **** 
 162:.\Generated_Source\PSoC5/PC.c **** 
 163:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_Enable
 165:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/PC.c **** *
 167:.\Generated_Source\PSoC5/PC.c **** * Summary:
 168:.\Generated_Source\PSoC5/PC.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/PC.c **** *  to call PC_Enable() because the PC_Start() API
 170:.\Generated_Source\PSoC5/PC.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/PC.c **** *  operation.
 172:.\Generated_Source\PSoC5/PC.c **** 
 173:.\Generated_Source\PSoC5/PC.c **** * Parameters:
 174:.\Generated_Source\PSoC5/PC.c **** *  None.
 175:.\Generated_Source\PSoC5/PC.c **** *
 176:.\Generated_Source\PSoC5/PC.c **** * Return:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 7


 177:.\Generated_Source\PSoC5/PC.c **** *  None.
 178:.\Generated_Source\PSoC5/PC.c **** *
 179:.\Generated_Source\PSoC5/PC.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/PC.c **** *  PC_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/PC.c **** *
 182:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/PC.c **** void PC_Enable(void) 
 184:.\Generated_Source\PSoC5/PC.c **** {
 167              		.loc 1 184 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171 0000 80B5     		push	{r7, lr}
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 175 0002 82B0     		sub	sp, sp, #8
 176              		.cfi_def_cfa_offset 16
 177 0004 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/PC.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/PC.c ****     enableInterrupts = CyEnterCriticalSection();
 179              		.loc 1 186 0
 180 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 181 000a 0346     		mov	r3, r0
 182 000c FB71     		strb	r3, [r7, #7]
 187:.\Generated_Source\PSoC5/PC.c **** 
 188:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_ENABLED || PC_HD_ENABLED)
 189:.\Generated_Source\PSoC5/PC.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/PC.c ****         PC_RXBITCTR_CONTROL_REG |= PC_CNTR_ENABLE;
 183              		.loc 1 190 0
 184 000e 124A     		ldr	r2, .L9
 185 0010 114B     		ldr	r3, .L9
 186 0012 1B78     		ldrb	r3, [r3]
 187 0014 DBB2     		uxtb	r3, r3
 188 0016 43F02003 		orr	r3, r3, #32
 189 001a DBB2     		uxtb	r3, r3
 190 001c 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC5/PC.c **** 
 192:.\Generated_Source\PSoC5/PC.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/PC.c ****         PC_RXSTATUS_ACTL_REG  |= PC_INT_ENABLE;
 191              		.loc 1 193 0
 192 001e 0F4A     		ldr	r2, .L9+4
 193 0020 0E4B     		ldr	r3, .L9+4
 194 0022 1B78     		ldrb	r3, [r3]
 195 0024 DBB2     		uxtb	r3, r3
 196 0026 43F01003 		orr	r3, r3, #16
 197 002a DBB2     		uxtb	r3, r3
 198 002c 1370     		strb	r3, [r2]
 194:.\Generated_Source\PSoC5/PC.c **** 
 195:.\Generated_Source\PSoC5/PC.c ****         #if (PC_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/PC.c ****             PC_EnableRxInt();
 199              		.loc 1 196 0
 200 002e 0C4B     		ldr	r3, .L9+8
 201 0030 0422     		movs	r2, #4
 202 0032 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC5/PC.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 8


 198:.\Generated_Source\PSoC5/PC.c ****             #if (PC_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/PC.c ****                 PC_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/PC.c ****             #endif /* (PC_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_ENABLED || PC_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/PC.c **** 
 204:.\Generated_Source\PSoC5/PC.c ****     #if(PC_TX_ENABLED)
 205:.\Generated_Source\PSoC5/PC.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/PC.c ****         #if(!PC_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/PC.c ****             PC_TXBITCTR_CONTROL_REG |= PC_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/PC.c **** 
 210:.\Generated_Source\PSoC5/PC.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/PC.c ****         PC_TXSTATUS_ACTL_REG |= PC_INT_ENABLE;
 203              		.loc 1 211 0
 204 0034 0B4A     		ldr	r2, .L9+12
 205 0036 0B4B     		ldr	r3, .L9+12
 206 0038 1B78     		ldrb	r3, [r3]
 207 003a DBB2     		uxtb	r3, r3
 208 003c 43F01003 		orr	r3, r3, #16
 209 0040 DBB2     		uxtb	r3, r3
 210 0042 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/PC.c ****             PC_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/PC.c ****             PC_EnableTxInt();
 215:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/PC.c ****      #endif /* (PC_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/PC.c **** 
 218:.\Generated_Source\PSoC5/PC.c ****     #if (PC_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/PC.c ****         PC_IntClock_Start();  /* Enable the clock */
 211              		.loc 1 219 0
 212 0044 FFF7FEFF 		bl	PC_IntClock_Start
 220:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/PC.c **** 
 222:.\Generated_Source\PSoC5/PC.c ****     CyExitCriticalSection(enableInterrupts);
 213              		.loc 1 222 0
 214 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 215 004a 1846     		mov	r0, r3
 216 004c FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/PC.c **** }
 217              		.loc 1 223 0
 218 0050 0837     		adds	r7, r7, #8
 219              		.cfi_def_cfa_offset 8
 220 0052 BD46     		mov	sp, r7
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
 223 0054 80BD     		pop	{r7, pc}
 224              	.L10:
 225 0056 00BF     		.align	2
 226              	.L9:
 227 0058 9B640040 		.word	1073767579
 228 005c 9B650040 		.word	1073767835
 229 0060 00E100E0 		.word	-536813312
 230 0064 95640040 		.word	1073767573
 231              		.cfi_endproc
 232              	.LFE2:
 233              		.size	PC_Enable, .-PC_Enable
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 9


 234              		.section	.text.PC_Stop,"ax",%progbits
 235              		.align	2
 236              		.global	PC_Stop
 237              		.thumb
 238              		.thumb_func
 239              		.type	PC_Stop, %function
 240              	PC_Stop:
 241              	.LFB3:
 224:.\Generated_Source\PSoC5/PC.c **** 
 225:.\Generated_Source\PSoC5/PC.c **** 
 226:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_Stop
 228:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/PC.c **** *
 230:.\Generated_Source\PSoC5/PC.c **** * Summary:
 231:.\Generated_Source\PSoC5/PC.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/PC.c **** *
 233:.\Generated_Source\PSoC5/PC.c **** * Parameters:
 234:.\Generated_Source\PSoC5/PC.c **** *  None.
 235:.\Generated_Source\PSoC5/PC.c **** *
 236:.\Generated_Source\PSoC5/PC.c **** * Return:
 237:.\Generated_Source\PSoC5/PC.c **** *  None.
 238:.\Generated_Source\PSoC5/PC.c **** *
 239:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/PC.c **** void PC_Stop(void) 
 241:.\Generated_Source\PSoC5/PC.c **** {
 242              		.loc 1 241 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0002 82B0     		sub	sp, sp, #8
 251              		.cfi_def_cfa_offset 16
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC5/PC.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/PC.c ****     enableInterrupts = CyEnterCriticalSection();
 254              		.loc 1 243 0
 255 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 256 000a 0346     		mov	r3, r0
 257 000c FB71     		strb	r3, [r7, #7]
 244:.\Generated_Source\PSoC5/PC.c **** 
 245:.\Generated_Source\PSoC5/PC.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_ENABLED || PC_HD_ENABLED)
 247:.\Generated_Source\PSoC5/PC.c ****         PC_RXBITCTR_CONTROL_REG &= (uint8) ~PC_CNTR_ENABLE;
 258              		.loc 1 247 0
 259 000e 124A     		ldr	r2, .L12
 260 0010 114B     		ldr	r3, .L12
 261 0012 1B78     		ldrb	r3, [r3]
 262 0014 DBB2     		uxtb	r3, r3
 263 0016 23F02003 		bic	r3, r3, #32
 264 001a DBB2     		uxtb	r3, r3
 265 001c 1370     		strb	r3, [r2]
 248:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_ENABLED || PC_HD_ENABLED) */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 10


 249:.\Generated_Source\PSoC5/PC.c **** 
 250:.\Generated_Source\PSoC5/PC.c ****     #if (PC_TX_ENABLED)
 251:.\Generated_Source\PSoC5/PC.c ****         #if(!PC_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/PC.c ****             PC_TXBITCTR_CONTROL_REG &= (uint8) ~PC_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/PC.c ****         #endif /* (!PC_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/PC.c **** 
 256:.\Generated_Source\PSoC5/PC.c ****     #if (PC_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/PC.c ****         PC_IntClock_Stop();   /* Disable the clock */
 266              		.loc 1 257 0
 267 001e FFF7FEFF 		bl	PC_IntClock_Stop
 258:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/PC.c **** 
 260:.\Generated_Source\PSoC5/PC.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_ENABLED || PC_HD_ENABLED)
 262:.\Generated_Source\PSoC5/PC.c ****         PC_RXSTATUS_ACTL_REG  &= (uint8) ~PC_INT_ENABLE;
 268              		.loc 1 262 0
 269 0022 0E4A     		ldr	r2, .L12+4
 270 0024 0D4B     		ldr	r3, .L12+4
 271 0026 1B78     		ldrb	r3, [r3]
 272 0028 DBB2     		uxtb	r3, r3
 273 002a 23F01003 		bic	r3, r3, #16
 274 002e DBB2     		uxtb	r3, r3
 275 0030 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/PC.c **** 
 264:.\Generated_Source\PSoC5/PC.c ****         #if (PC_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/PC.c ****             PC_DisableRxInt();
 276              		.loc 1 265 0
 277 0032 0B4B     		ldr	r3, .L12+8
 278 0034 0422     		movs	r2, #4
 279 0036 1A60     		str	r2, [r3]
 266:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_ENABLED || PC_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/PC.c **** 
 269:.\Generated_Source\PSoC5/PC.c ****     #if (PC_TX_ENABLED)
 270:.\Generated_Source\PSoC5/PC.c ****         PC_TXSTATUS_ACTL_REG &= (uint8) ~PC_INT_ENABLE;
 280              		.loc 1 270 0
 281 0038 0A4A     		ldr	r2, .L12+12
 282 003a 0A4B     		ldr	r3, .L12+12
 283 003c 1B78     		ldrb	r3, [r3]
 284 003e DBB2     		uxtb	r3, r3
 285 0040 23F01003 		bic	r3, r3, #16
 286 0044 DBB2     		uxtb	r3, r3
 287 0046 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC5/PC.c **** 
 272:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/PC.c ****             PC_DisableTxInt();
 274:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/PC.c **** 
 277:.\Generated_Source\PSoC5/PC.c ****     CyExitCriticalSection(enableInterrupts);
 288              		.loc 1 277 0
 289 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 290 004a 1846     		mov	r0, r3
 291 004c FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC5/PC.c **** }
 292              		.loc 1 278 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 11


 293 0050 0837     		adds	r7, r7, #8
 294              		.cfi_def_cfa_offset 8
 295 0052 BD46     		mov	sp, r7
 296              		.cfi_def_cfa_register 13
 297              		@ sp needed
 298 0054 80BD     		pop	{r7, pc}
 299              	.L13:
 300 0056 00BF     		.align	2
 301              	.L12:
 302 0058 9B640040 		.word	1073767579
 303 005c 9B650040 		.word	1073767835
 304 0060 80E100E0 		.word	-536813184
 305 0064 95640040 		.word	1073767573
 306              		.cfi_endproc
 307              	.LFE3:
 308              		.size	PC_Stop, .-PC_Stop
 309              		.section	.text.PC_ReadControlRegister,"ax",%progbits
 310              		.align	2
 311              		.global	PC_ReadControlRegister
 312              		.thumb
 313              		.thumb_func
 314              		.type	PC_ReadControlRegister, %function
 315              	PC_ReadControlRegister:
 316              	.LFB4:
 279:.\Generated_Source\PSoC5/PC.c **** 
 280:.\Generated_Source\PSoC5/PC.c **** 
 281:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_ReadControlRegister
 283:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/PC.c **** *
 285:.\Generated_Source\PSoC5/PC.c **** * Summary:
 286:.\Generated_Source\PSoC5/PC.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/PC.c **** *
 288:.\Generated_Source\PSoC5/PC.c **** * Parameters:
 289:.\Generated_Source\PSoC5/PC.c **** *  None.
 290:.\Generated_Source\PSoC5/PC.c **** *
 291:.\Generated_Source\PSoC5/PC.c **** * Return:
 292:.\Generated_Source\PSoC5/PC.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/PC.c **** *
 294:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/PC.c **** uint8 PC_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/PC.c **** {
 317              		.loc 1 296 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322 0000 80B4     		push	{r7}
 323              		.cfi_def_cfa_offset 4
 324              		.cfi_offset 7, -4
 325 0002 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC5/PC.c ****     #if (PC_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/PC.c ****         return(0u);
 327              		.loc 1 298 0
 328 0004 0023     		movs	r3, #0
 299:.\Generated_Source\PSoC5/PC.c ****     #else
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 12


 300:.\Generated_Source\PSoC5/PC.c ****         return(PC_CONTROL_REG);
 301:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/PC.c **** }
 329              		.loc 1 302 0
 330 0006 1846     		mov	r0, r3
 331 0008 BD46     		mov	sp, r7
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 000a 5DF8047B 		ldr	r7, [sp], #4
 335              		.cfi_restore 7
 336              		.cfi_def_cfa_offset 0
 337 000e 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE4:
 340              		.size	PC_ReadControlRegister, .-PC_ReadControlRegister
 341              		.section	.text.PC_WriteControlRegister,"ax",%progbits
 342              		.align	2
 343              		.global	PC_WriteControlRegister
 344              		.thumb
 345              		.thumb_func
 346              		.type	PC_WriteControlRegister, %function
 347              	PC_WriteControlRegister:
 348              	.LFB5:
 303:.\Generated_Source\PSoC5/PC.c **** 
 304:.\Generated_Source\PSoC5/PC.c **** 
 305:.\Generated_Source\PSoC5/PC.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/PC.c **** * Function Name: PC_WriteControlRegister
 307:.\Generated_Source\PSoC5/PC.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/PC.c **** *
 309:.\Generated_Source\PSoC5/PC.c **** * Summary:
 310:.\Generated_Source\PSoC5/PC.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/PC.c **** *
 312:.\Generated_Source\PSoC5/PC.c **** * Parameters:
 313:.\Generated_Source\PSoC5/PC.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/PC.c **** *
 315:.\Generated_Source\PSoC5/PC.c **** * Return:
 316:.\Generated_Source\PSoC5/PC.c **** *  None.
 317:.\Generated_Source\PSoC5/PC.c **** *
 318:.\Generated_Source\PSoC5/PC.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/PC.c **** void  PC_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/PC.c **** {
 349              		.loc 1 320 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354 0000 80B4     		push	{r7}
 355              		.cfi_def_cfa_offset 4
 356              		.cfi_offset 7, -4
 357 0002 83B0     		sub	sp, sp, #12
 358              		.cfi_def_cfa_offset 16
 359 0004 00AF     		add	r7, sp, #0
 360              		.cfi_def_cfa_register 7
 361 0006 0346     		mov	r3, r0
 362 0008 FB71     		strb	r3, [r7, #7]
 321:.\Generated_Source\PSoC5/PC.c ****     #if (PC_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/PC.c ****         if(0u != control)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 13


 323:.\Generated_Source\PSoC5/PC.c ****         {
 324:.\Generated_Source\PSoC5/PC.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/PC.c ****         }
 326:.\Generated_Source\PSoC5/PC.c ****     #else
 327:.\Generated_Source\PSoC5/PC.c ****        PC_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/PC.c **** }
 363              		.loc 1 329 0
 364 000a 0C37     		adds	r7, r7, #12
 365              		.cfi_def_cfa_offset 4
 366 000c BD46     		mov	sp, r7
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 000e 5DF8047B 		ldr	r7, [sp], #4
 370              		.cfi_restore 7
 371              		.cfi_def_cfa_offset 0
 372 0012 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE5:
 375              		.size	PC_WriteControlRegister, .-PC_WriteControlRegister
 376              		.section	.text.PC_SetRxInterruptMode,"ax",%progbits
 377              		.align	2
 378              		.global	PC_SetRxInterruptMode
 379              		.thumb
 380              		.thumb_func
 381              		.type	PC_SetRxInterruptMode, %function
 382              	PC_SetRxInterruptMode:
 383              	.LFB6:
 330:.\Generated_Source\PSoC5/PC.c **** 
 331:.\Generated_Source\PSoC5/PC.c **** 
 332:.\Generated_Source\PSoC5/PC.c **** #if(PC_RX_ENABLED || PC_HD_ENABLED)
 333:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/PC.c ****     *
 337:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 338:.\Generated_Source\PSoC5/PC.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/PC.c ****     *
 340:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/PC.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/PC.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/PC.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/PC.c ****     *      PC_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/PC.c ****     *
 352:.\Generated_Source\PSoC5/PC.c ****     * Return:
 353:.\Generated_Source\PSoC5/PC.c ****     *  None.
 354:.\Generated_Source\PSoC5/PC.c ****     *
 355:.\Generated_Source\PSoC5/PC.c ****     * Theory:
 356:.\Generated_Source\PSoC5/PC.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/PC.c ****     *
 358:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 14


 359:.\Generated_Source\PSoC5/PC.c ****     void PC_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/PC.c ****     {
 384              		.loc 1 360 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 7, -4
 392 0002 83B0     		sub	sp, sp, #12
 393              		.cfi_def_cfa_offset 16
 394 0004 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 396 0006 0346     		mov	r3, r0
 397 0008 FB71     		strb	r3, [r7, #7]
 361:.\Generated_Source\PSoC5/PC.c ****         PC_RXSTATUS_MASK_REG  = intSrc;
 398              		.loc 1 361 0
 399 000a 044A     		ldr	r2, .L18
 400 000c FB79     		ldrb	r3, [r7, #7]
 401 000e 1370     		strb	r3, [r2]
 362:.\Generated_Source\PSoC5/PC.c ****     }
 402              		.loc 1 362 0
 403 0010 0C37     		adds	r7, r7, #12
 404              		.cfi_def_cfa_offset 4
 405 0012 BD46     		mov	sp, r7
 406              		.cfi_def_cfa_register 13
 407              		@ sp needed
 408 0014 5DF8047B 		ldr	r7, [sp], #4
 409              		.cfi_restore 7
 410              		.cfi_def_cfa_offset 0
 411 0018 7047     		bx	lr
 412              	.L19:
 413 001a 00BF     		.align	2
 414              	.L18:
 415 001c 8B650040 		.word	1073767819
 416              		.cfi_endproc
 417              	.LFE6:
 418              		.size	PC_SetRxInterruptMode, .-PC_SetRxInterruptMode
 419              		.section	.text.PC_ReadRxData,"ax",%progbits
 420              		.align	2
 421              		.global	PC_ReadRxData
 422              		.thumb
 423              		.thumb_func
 424              		.type	PC_ReadRxData, %function
 425              	PC_ReadRxData:
 426              	.LFB7:
 363:.\Generated_Source\PSoC5/PC.c **** 
 364:.\Generated_Source\PSoC5/PC.c **** 
 365:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_ReadRxData
 367:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/PC.c ****     *
 369:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 370:.\Generated_Source\PSoC5/PC.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/PC.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/PC.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 15


 373:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/PC.c ****     *  None.
 375:.\Generated_Source\PSoC5/PC.c ****     *
 376:.\Generated_Source\PSoC5/PC.c ****     * Return:
 377:.\Generated_Source\PSoC5/PC.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/PC.c ****     *
 379:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/PC.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/PC.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/PC.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/PC.c ****     *
 388:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/PC.c ****     *  No.
 390:.\Generated_Source\PSoC5/PC.c ****     *
 391:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/PC.c ****     {
 427              		.loc 1 393 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 8
 430              		@ frame_needed = 1, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 432 0000 80B4     		push	{r7}
 433              		.cfi_def_cfa_offset 4
 434              		.cfi_offset 7, -4
 435 0002 83B0     		sub	sp, sp, #12
 436              		.cfi_def_cfa_offset 16
 437 0004 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC5/PC.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/PC.c **** 
 396:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/PC.c **** 
 398:.\Generated_Source\PSoC5/PC.c ****         uint16 locRxBufferRead;
 399:.\Generated_Source\PSoC5/PC.c ****         uint16 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/PC.c **** 
 401:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/PC.c ****         PC_DisableRxInt();
 439              		.loc 1 402 0
 440 0006 1D4B     		ldr	r3, .L27
 441 0008 0422     		movs	r2, #4
 442 000a 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC5/PC.c **** 
 404:.\Generated_Source\PSoC5/PC.c ****         locRxBufferRead  = PC_rxBufferRead;
 443              		.loc 1 404 0
 444 000c 1C4B     		ldr	r3, .L27+4
 445 000e 1B88     		ldrh	r3, [r3]	@ movhi
 446 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 405:.\Generated_Source\PSoC5/PC.c ****         locRxBufferWrite = PC_rxBufferWrite;
 447              		.loc 1 405 0
 448 0012 1C4B     		ldr	r3, .L27+8
 449 0014 1B88     		ldrh	r3, [r3]	@ movhi
 450 0016 7B80     		strh	r3, [r7, #2]	@ movhi
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 16


 406:.\Generated_Source\PSoC5/PC.c **** 
 407:.\Generated_Source\PSoC5/PC.c ****         if( (PC_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 451              		.loc 1 407 0
 452 0018 1B4B     		ldr	r3, .L27+12
 453 001a 1B78     		ldrb	r3, [r3]
 454 001c DBB2     		uxtb	r3, r3
 455 001e 002B     		cmp	r3, #0
 456 0020 03D1     		bne	.L21
 457              		.loc 1 407 0 is_stmt 0 discriminator 1
 458 0022 BA88     		ldrh	r2, [r7, #4]
 459 0024 7B88     		ldrh	r3, [r7, #2]
 460 0026 9A42     		cmp	r2, r3
 461 0028 1AD0     		beq	.L22
 462              	.L21:
 408:.\Generated_Source\PSoC5/PC.c ****         {
 409:.\Generated_Source\PSoC5/PC.c ****             rxData = PC_rxBuffer[locRxBufferRead];
 463              		.loc 1 409 0 is_stmt 1
 464 002a BB88     		ldrh	r3, [r7, #4]
 465 002c 174A     		ldr	r2, .L27+16
 466 002e D35C     		ldrb	r3, [r2, r3]
 467 0030 FB71     		strb	r3, [r7, #7]
 410:.\Generated_Source\PSoC5/PC.c ****             locRxBufferRead++;
 468              		.loc 1 410 0
 469 0032 BB88     		ldrh	r3, [r7, #4]
 470 0034 0133     		adds	r3, r3, #1
 471 0036 BB80     		strh	r3, [r7, #4]	@ movhi
 411:.\Generated_Source\PSoC5/PC.c **** 
 412:.\Generated_Source\PSoC5/PC.c ****             if(locRxBufferRead >= PC_RX_BUFFER_SIZE)
 472              		.loc 1 412 0
 473 0038 BB88     		ldrh	r3, [r7, #4]
 474 003a 40F2DB52 		movw	r2, #1499
 475 003e 9342     		cmp	r3, r2
 476 0040 01D9     		bls	.L23
 413:.\Generated_Source\PSoC5/PC.c ****             {
 414:.\Generated_Source\PSoC5/PC.c ****                 locRxBufferRead = 0u;
 477              		.loc 1 414 0
 478 0042 0023     		movs	r3, #0
 479 0044 BB80     		strh	r3, [r7, #4]	@ movhi
 480              	.L23:
 415:.\Generated_Source\PSoC5/PC.c ****             }
 416:.\Generated_Source\PSoC5/PC.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/PC.c ****             PC_rxBufferRead = locRxBufferRead;
 481              		.loc 1 417 0
 482 0046 0E4A     		ldr	r2, .L27+4
 483 0048 BB88     		ldrh	r3, [r7, #4]	@ movhi
 484 004a 1380     		strh	r3, [r2]	@ movhi
 418:.\Generated_Source\PSoC5/PC.c **** 
 419:.\Generated_Source\PSoC5/PC.c ****             if(PC_rxBufferLoopDetect != 0u)
 485              		.loc 1 419 0
 486 004c 0E4B     		ldr	r3, .L27+12
 487 004e 1B78     		ldrb	r3, [r3]
 488 0050 DBB2     		uxtb	r3, r3
 489 0052 002B     		cmp	r3, #0
 490 0054 03D0     		beq	.L24
 420:.\Generated_Source\PSoC5/PC.c ****             {
 421:.\Generated_Source\PSoC5/PC.c ****                 PC_rxBufferLoopDetect = 0u;
 491              		.loc 1 421 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 17


 492 0056 0C4B     		ldr	r3, .L27+12
 493 0058 0022     		movs	r2, #0
 494 005a 1A70     		strb	r2, [r3]
 419:.\Generated_Source\PSoC5/PC.c ****             {
 495              		.loc 1 419 0
 496 005c 03E0     		b	.L25
 497              	.L24:
 498 005e 02E0     		b	.L25
 499              	.L22:
 422:.\Generated_Source\PSoC5/PC.c ****                 #if ((PC_RX_INTERRUPT_ENABLED) && (PC_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/PC.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/PC.c ****                     #if( PC_HD_ENABLED )
 425:.\Generated_Source\PSoC5/PC.c ****                         if((PC_CONTROL_REG & PC_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/PC.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/PC.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/PC.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/PC.c ****                             */
 430:.\Generated_Source\PSoC5/PC.c ****                             PC_RXSTATUS_MASK_REG  |= PC_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/PC.c ****                         }
 432:.\Generated_Source\PSoC5/PC.c ****                     #else
 433:.\Generated_Source\PSoC5/PC.c ****                         PC_RXSTATUS_MASK_REG  |= PC_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/PC.c ****                     #endif /* end PC_HD_ENABLED */
 435:.\Generated_Source\PSoC5/PC.c ****                 #endif /* ((PC_RX_INTERRUPT_ENABLED) && (PC_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/PC.c ****             }
 437:.\Generated_Source\PSoC5/PC.c ****         }
 438:.\Generated_Source\PSoC5/PC.c ****         else
 439:.\Generated_Source\PSoC5/PC.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/PC.c ****             rxData = PC_RXDATA_REG;
 500              		.loc 1 440 0
 501 0060 0B4B     		ldr	r3, .L27+20
 502 0062 1B78     		ldrb	r3, [r3]
 503 0064 FB71     		strb	r3, [r7, #7]
 504              	.L25:
 441:.\Generated_Source\PSoC5/PC.c ****         }
 442:.\Generated_Source\PSoC5/PC.c **** 
 443:.\Generated_Source\PSoC5/PC.c ****         PC_EnableRxInt();
 505              		.loc 1 443 0
 506 0066 0B4B     		ldr	r3, .L27+24
 507 0068 0422     		movs	r2, #4
 508 006a 1A60     		str	r2, [r3]
 444:.\Generated_Source\PSoC5/PC.c **** 
 445:.\Generated_Source\PSoC5/PC.c ****     #else
 446:.\Generated_Source\PSoC5/PC.c **** 
 447:.\Generated_Source\PSoC5/PC.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/PC.c ****         rxData = PC_RXDATA_REG;
 449:.\Generated_Source\PSoC5/PC.c **** 
 450:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/PC.c **** 
 452:.\Generated_Source\PSoC5/PC.c ****         return(rxData);
 509              		.loc 1 452 0
 510 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:.\Generated_Source\PSoC5/PC.c ****     }
 511              		.loc 1 453 0
 512 006e 1846     		mov	r0, r3
 513 0070 0C37     		adds	r7, r7, #12
 514              		.cfi_def_cfa_offset 4
 515 0072 BD46     		mov	sp, r7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 18


 516              		.cfi_def_cfa_register 13
 517              		@ sp needed
 518 0074 5DF8047B 		ldr	r7, [sp], #4
 519              		.cfi_restore 7
 520              		.cfi_def_cfa_offset 0
 521 0078 7047     		bx	lr
 522              	.L28:
 523 007a 00BF     		.align	2
 524              	.L27:
 525 007c 80E100E0 		.word	-536813184
 526 0080 00000000 		.word	PC_rxBufferRead
 527 0084 00000000 		.word	PC_rxBufferWrite
 528 0088 00000000 		.word	PC_rxBufferLoopDetect
 529 008c 00000000 		.word	PC_rxBuffer
 530 0090 48640040 		.word	1073767496
 531 0094 00E100E0 		.word	-536813312
 532              		.cfi_endproc
 533              	.LFE7:
 534              		.size	PC_ReadRxData, .-PC_ReadRxData
 535              		.section	.text.PC_ReadRxStatus,"ax",%progbits
 536              		.align	2
 537              		.global	PC_ReadRxStatus
 538              		.thumb
 539              		.thumb_func
 540              		.type	PC_ReadRxStatus, %function
 541              	PC_ReadRxStatus:
 542              	.LFB8:
 454:.\Generated_Source\PSoC5/PC.c **** 
 455:.\Generated_Source\PSoC5/PC.c **** 
 456:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_ReadRxStatus
 458:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/PC.c ****     *
 460:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 461:.\Generated_Source\PSoC5/PC.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/PC.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/PC.c ****     *
 464:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/PC.c ****     *  None.
 466:.\Generated_Source\PSoC5/PC.c ****     *
 467:.\Generated_Source\PSoC5/PC.c ****     * Return:
 468:.\Generated_Source\PSoC5/PC.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/PC.c ****     *
 470:.\Generated_Source\PSoC5/PC.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/PC.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/PC.c ****     *  PC_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/PC.c ****     *  PC_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/PC.c ****     *  register read.
 475:.\Generated_Source\PSoC5/PC.c ****     *
 476:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/PC.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/PC.c ****     *   PC_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/PC.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/PC.c ****     *   PC_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/PC.c ****     *   bits.
 483:.\Generated_Source\PSoC5/PC.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 19


 484:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/PC.c ****     {
 543              		.loc 1 486 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 8
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548 0000 80B4     		push	{r7}
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 83B0     		sub	sp, sp, #12
 552              		.cfi_def_cfa_offset 16
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 487:.\Generated_Source\PSoC5/PC.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/PC.c **** 
 489:.\Generated_Source\PSoC5/PC.c ****         status = PC_RXSTATUS_REG & PC_RX_HW_MASK;
 555              		.loc 1 489 0
 556 0006 0C4B     		ldr	r3, .L32
 557 0008 1B78     		ldrb	r3, [r3]
 558 000a DBB2     		uxtb	r3, r3
 559 000c 03F07F03 		and	r3, r3, #127
 560 0010 FB71     		strb	r3, [r7, #7]
 490:.\Generated_Source\PSoC5/PC.c **** 
 491:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/PC.c ****         if(PC_rxBufferOverflow != 0u)
 561              		.loc 1 492 0
 562 0012 0A4B     		ldr	r3, .L32+4
 563 0014 1B78     		ldrb	r3, [r3]
 564 0016 DBB2     		uxtb	r3, r3
 565 0018 002B     		cmp	r3, #0
 566 001a 06D0     		beq	.L30
 493:.\Generated_Source\PSoC5/PC.c ****         {
 494:.\Generated_Source\PSoC5/PC.c ****             status |= PC_RX_STS_SOFT_BUFF_OVER;
 567              		.loc 1 494 0
 568 001c FB79     		ldrb	r3, [r7, #7]
 569 001e 63F07F03 		orn	r3, r3, #127
 570 0022 FB71     		strb	r3, [r7, #7]
 495:.\Generated_Source\PSoC5/PC.c ****             PC_rxBufferOverflow = 0u;
 571              		.loc 1 495 0
 572 0024 054B     		ldr	r3, .L32+4
 573 0026 0022     		movs	r2, #0
 574 0028 1A70     		strb	r2, [r3]
 575              	.L30:
 496:.\Generated_Source\PSoC5/PC.c ****         }
 497:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/PC.c **** 
 499:.\Generated_Source\PSoC5/PC.c ****         return(status);
 576              		.loc 1 499 0
 577 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:.\Generated_Source\PSoC5/PC.c ****     }
 578              		.loc 1 500 0
 579 002c 1846     		mov	r0, r3
 580 002e 0C37     		adds	r7, r7, #12
 581              		.cfi_def_cfa_offset 4
 582 0030 BD46     		mov	sp, r7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 20


 583              		.cfi_def_cfa_register 13
 584              		@ sp needed
 585 0032 5DF8047B 		ldr	r7, [sp], #4
 586              		.cfi_restore 7
 587              		.cfi_def_cfa_offset 0
 588 0036 7047     		bx	lr
 589              	.L33:
 590              		.align	2
 591              	.L32:
 592 0038 6B650040 		.word	1073767787
 593 003c 00000000 		.word	PC_rxBufferOverflow
 594              		.cfi_endproc
 595              	.LFE8:
 596              		.size	PC_ReadRxStatus, .-PC_ReadRxStatus
 597              		.section	.text.PC_GetChar,"ax",%progbits
 598              		.align	2
 599              		.global	PC_GetChar
 600              		.thumb
 601              		.thumb_func
 602              		.type	PC_GetChar, %function
 603              	PC_GetChar:
 604              	.LFB9:
 501:.\Generated_Source\PSoC5/PC.c **** 
 502:.\Generated_Source\PSoC5/PC.c **** 
 503:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_GetChar
 505:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/PC.c ****     *
 507:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 508:.\Generated_Source\PSoC5/PC.c ****     *  Returns the last received byte of data. PC_GetChar() is
 509:.\Generated_Source\PSoC5/PC.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/PC.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/PC.c ****     *
 512:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/PC.c ****     *  None.
 514:.\Generated_Source\PSoC5/PC.c ****     *
 515:.\Generated_Source\PSoC5/PC.c ****     * Return:
 516:.\Generated_Source\PSoC5/PC.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/PC.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/PC.c ****     *
 519:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/PC.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/PC.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/PC.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/PC.c ****     *
 528:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/PC.c ****     *  No.
 530:.\Generated_Source\PSoC5/PC.c ****     *
 531:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_GetChar(void) 
 533:.\Generated_Source\PSoC5/PC.c ****     {
 605              		.loc 1 533 0
 606              		.cfi_startproc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 21


 607              		@ args = 0, pretend = 0, frame = 8
 608              		@ frame_needed = 1, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610 0000 80B4     		push	{r7}
 611              		.cfi_def_cfa_offset 4
 612              		.cfi_offset 7, -4
 613 0002 83B0     		sub	sp, sp, #12
 614              		.cfi_def_cfa_offset 16
 615 0004 00AF     		add	r7, sp, #0
 616              		.cfi_def_cfa_register 7
 534:.\Generated_Source\PSoC5/PC.c ****         uint8 rxData = 0u;
 617              		.loc 1 534 0
 618 0006 0023     		movs	r3, #0
 619 0008 FB71     		strb	r3, [r7, #7]
 535:.\Generated_Source\PSoC5/PC.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/PC.c **** 
 537:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/PC.c ****         uint16 locRxBufferRead;
 539:.\Generated_Source\PSoC5/PC.c ****         uint16 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/PC.c **** 
 541:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/PC.c ****         PC_DisableRxInt();
 620              		.loc 1 542 0
 621 000a 244B     		ldr	r3, .L41
 622 000c 0422     		movs	r2, #4
 623 000e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC5/PC.c **** 
 544:.\Generated_Source\PSoC5/PC.c ****         locRxBufferRead  = PC_rxBufferRead;
 624              		.loc 1 544 0
 625 0010 234B     		ldr	r3, .L41+4
 626 0012 1B88     		ldrh	r3, [r3]	@ movhi
 627 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 545:.\Generated_Source\PSoC5/PC.c ****         locRxBufferWrite = PC_rxBufferWrite;
 628              		.loc 1 545 0
 629 0016 234B     		ldr	r3, .L41+8
 630 0018 1B88     		ldrh	r3, [r3]	@ movhi
 631 001a 7B80     		strh	r3, [r7, #2]	@ movhi
 546:.\Generated_Source\PSoC5/PC.c **** 
 547:.\Generated_Source\PSoC5/PC.c ****         if( (PC_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 632              		.loc 1 547 0
 633 001c 224B     		ldr	r3, .L41+12
 634 001e 1B78     		ldrb	r3, [r3]
 635 0020 DBB2     		uxtb	r3, r3
 636 0022 002B     		cmp	r3, #0
 637 0024 03D1     		bne	.L35
 638              		.loc 1 547 0 is_stmt 0 discriminator 1
 639 0026 BA88     		ldrh	r2, [r7, #4]
 640 0028 7B88     		ldrh	r3, [r7, #2]
 641 002a 9A42     		cmp	r2, r3
 642 002c 1AD0     		beq	.L36
 643              	.L35:
 548:.\Generated_Source\PSoC5/PC.c ****         {
 549:.\Generated_Source\PSoC5/PC.c ****             rxData = PC_rxBuffer[locRxBufferRead];
 644              		.loc 1 549 0 is_stmt 1
 645 002e BB88     		ldrh	r3, [r7, #4]
 646 0030 1E4A     		ldr	r2, .L41+16
 647 0032 D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 22


 648 0034 FB71     		strb	r3, [r7, #7]
 550:.\Generated_Source\PSoC5/PC.c ****             locRxBufferRead++;
 649              		.loc 1 550 0
 650 0036 BB88     		ldrh	r3, [r7, #4]
 651 0038 0133     		adds	r3, r3, #1
 652 003a BB80     		strh	r3, [r7, #4]	@ movhi
 551:.\Generated_Source\PSoC5/PC.c ****             if(locRxBufferRead >= PC_RX_BUFFER_SIZE)
 653              		.loc 1 551 0
 654 003c BB88     		ldrh	r3, [r7, #4]
 655 003e 40F2DB52 		movw	r2, #1499
 656 0042 9342     		cmp	r3, r2
 657 0044 01D9     		bls	.L37
 552:.\Generated_Source\PSoC5/PC.c ****             {
 553:.\Generated_Source\PSoC5/PC.c ****                 locRxBufferRead = 0u;
 658              		.loc 1 553 0
 659 0046 0023     		movs	r3, #0
 660 0048 BB80     		strh	r3, [r7, #4]	@ movhi
 661              	.L37:
 554:.\Generated_Source\PSoC5/PC.c ****             }
 555:.\Generated_Source\PSoC5/PC.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/PC.c ****             PC_rxBufferRead = locRxBufferRead;
 662              		.loc 1 556 0
 663 004a 154A     		ldr	r2, .L41+4
 664 004c BB88     		ldrh	r3, [r7, #4]	@ movhi
 665 004e 1380     		strh	r3, [r2]	@ movhi
 557:.\Generated_Source\PSoC5/PC.c **** 
 558:.\Generated_Source\PSoC5/PC.c ****             if(PC_rxBufferLoopDetect != 0u)
 666              		.loc 1 558 0
 667 0050 154B     		ldr	r3, .L41+12
 668 0052 1B78     		ldrb	r3, [r3]
 669 0054 DBB2     		uxtb	r3, r3
 670 0056 002B     		cmp	r3, #0
 671 0058 03D0     		beq	.L38
 559:.\Generated_Source\PSoC5/PC.c ****             {
 560:.\Generated_Source\PSoC5/PC.c ****                 PC_rxBufferLoopDetect = 0u;
 672              		.loc 1 560 0
 673 005a 134B     		ldr	r3, .L41+12
 674 005c 0022     		movs	r2, #0
 675 005e 1A70     		strb	r2, [r3]
 558:.\Generated_Source\PSoC5/PC.c ****             {
 676              		.loc 1 558 0
 677 0060 12E0     		b	.L39
 678              	.L38:
 679 0062 11E0     		b	.L39
 680              	.L36:
 561:.\Generated_Source\PSoC5/PC.c ****                 #if( (PC_RX_INTERRUPT_ENABLED) && (PC_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/PC.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/PC.c ****                     #if( PC_HD_ENABLED )
 564:.\Generated_Source\PSoC5/PC.c ****                         if((PC_CONTROL_REG & PC_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/PC.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/PC.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/PC.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/PC.c ****                             */
 569:.\Generated_Source\PSoC5/PC.c ****                             PC_RXSTATUS_MASK_REG |= PC_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/PC.c ****                         }
 571:.\Generated_Source\PSoC5/PC.c ****                     #else
 572:.\Generated_Source\PSoC5/PC.c ****                         PC_RXSTATUS_MASK_REG |= PC_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 23


 573:.\Generated_Source\PSoC5/PC.c ****                     #endif /* end PC_HD_ENABLED */
 574:.\Generated_Source\PSoC5/PC.c ****                 #endif /* PC_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/PC.c ****             }
 576:.\Generated_Source\PSoC5/PC.c **** 
 577:.\Generated_Source\PSoC5/PC.c ****         }
 578:.\Generated_Source\PSoC5/PC.c ****         else
 579:.\Generated_Source\PSoC5/PC.c ****         {   rxStatus = PC_RXSTATUS_REG;
 681              		.loc 1 579 0
 682 0064 124B     		ldr	r3, .L41+20
 683 0066 1B78     		ldrb	r3, [r3]
 684 0068 7B70     		strb	r3, [r7, #1]
 580:.\Generated_Source\PSoC5/PC.c ****             if((rxStatus & PC_RX_STS_FIFO_NOTEMPTY) != 0u)
 685              		.loc 1 580 0
 686 006a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 687 006c 03F02003 		and	r3, r3, #32
 688 0070 002B     		cmp	r3, #0
 689 0072 09D0     		beq	.L39
 581:.\Generated_Source\PSoC5/PC.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/PC.c ****                 rxData = PC_RXDATA_REG;
 690              		.loc 1 582 0
 691 0074 0F4B     		ldr	r3, .L41+24
 692 0076 1B78     		ldrb	r3, [r3]
 693 0078 FB71     		strb	r3, [r7, #7]
 583:.\Generated_Source\PSoC5/PC.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/PC.c ****                 if((rxStatus & (PC_RX_STS_BREAK | PC_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/PC.c ****                                 PC_RX_STS_STOP_ERROR | PC_RX_STS_OVERRUN)) != 0u)
 694              		.loc 1 585 0
 695 007a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 696 007c 03F01E03 		and	r3, r3, #30
 584:.\Generated_Source\PSoC5/PC.c ****                                 PC_RX_STS_STOP_ERROR | PC_RX_STS_OVERRUN)) != 0u)
 697              		.loc 1 584 0
 698 0080 002B     		cmp	r3, #0
 699 0082 01D0     		beq	.L39
 586:.\Generated_Source\PSoC5/PC.c ****                 {
 587:.\Generated_Source\PSoC5/PC.c ****                     rxData = 0u;
 700              		.loc 1 587 0
 701 0084 0023     		movs	r3, #0
 702 0086 FB71     		strb	r3, [r7, #7]
 703              	.L39:
 588:.\Generated_Source\PSoC5/PC.c ****                 }
 589:.\Generated_Source\PSoC5/PC.c ****             }
 590:.\Generated_Source\PSoC5/PC.c ****         }
 591:.\Generated_Source\PSoC5/PC.c **** 
 592:.\Generated_Source\PSoC5/PC.c ****         PC_EnableRxInt();
 704              		.loc 1 592 0
 705 0088 0B4B     		ldr	r3, .L41+28
 706 008a 0422     		movs	r2, #4
 707 008c 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC5/PC.c **** 
 594:.\Generated_Source\PSoC5/PC.c ****     #else
 595:.\Generated_Source\PSoC5/PC.c **** 
 596:.\Generated_Source\PSoC5/PC.c ****         rxStatus =PC_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/PC.c ****         if((rxStatus & PC_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/PC.c ****         {
 599:.\Generated_Source\PSoC5/PC.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/PC.c ****             rxData = PC_RXDATA_REG;
 601:.\Generated_Source\PSoC5/PC.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 24


 602:.\Generated_Source\PSoC5/PC.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/PC.c ****             if((rxStatus & (PC_RX_STS_BREAK | PC_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/PC.c ****                             PC_RX_STS_STOP_ERROR | PC_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/PC.c ****             {
 606:.\Generated_Source\PSoC5/PC.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/PC.c ****             }
 608:.\Generated_Source\PSoC5/PC.c ****         }
 609:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/PC.c **** 
 611:.\Generated_Source\PSoC5/PC.c ****         return(rxData);
 708              		.loc 1 611 0
 709 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:.\Generated_Source\PSoC5/PC.c ****     }
 710              		.loc 1 612 0
 711 0090 1846     		mov	r0, r3
 712 0092 0C37     		adds	r7, r7, #12
 713              		.cfi_def_cfa_offset 4
 714 0094 BD46     		mov	sp, r7
 715              		.cfi_def_cfa_register 13
 716              		@ sp needed
 717 0096 5DF8047B 		ldr	r7, [sp], #4
 718              		.cfi_restore 7
 719              		.cfi_def_cfa_offset 0
 720 009a 7047     		bx	lr
 721              	.L42:
 722              		.align	2
 723              	.L41:
 724 009c 80E100E0 		.word	-536813184
 725 00a0 00000000 		.word	PC_rxBufferRead
 726 00a4 00000000 		.word	PC_rxBufferWrite
 727 00a8 00000000 		.word	PC_rxBufferLoopDetect
 728 00ac 00000000 		.word	PC_rxBuffer
 729 00b0 6B650040 		.word	1073767787
 730 00b4 48640040 		.word	1073767496
 731 00b8 00E100E0 		.word	-536813312
 732              		.cfi_endproc
 733              	.LFE9:
 734              		.size	PC_GetChar, .-PC_GetChar
 735              		.section	.text.PC_GetByte,"ax",%progbits
 736              		.align	2
 737              		.global	PC_GetByte
 738              		.thumb
 739              		.thumb_func
 740              		.type	PC_GetByte, %function
 741              	PC_GetByte:
 742              	.LFB10:
 613:.\Generated_Source\PSoC5/PC.c **** 
 614:.\Generated_Source\PSoC5/PC.c **** 
 615:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_GetByte
 617:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/PC.c ****     *
 619:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 620:.\Generated_Source\PSoC5/PC.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/PC.c ****     *  condition.
 622:.\Generated_Source\PSoC5/PC.c ****     *
 623:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 25


 624:.\Generated_Source\PSoC5/PC.c ****     *  None.
 625:.\Generated_Source\PSoC5/PC.c ****     *
 626:.\Generated_Source\PSoC5/PC.c ****     * Return:
 627:.\Generated_Source\PSoC5/PC.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/PC.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/PC.c ****     *
 630:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/PC.c ****     *  No.
 632:.\Generated_Source\PSoC5/PC.c ****     *
 633:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/PC.c ****     uint16 PC_GetByte(void) 
 635:.\Generated_Source\PSoC5/PC.c ****     {
 743              		.loc 1 635 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 8
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747 0000 90B5     		push	{r4, r7, lr}
 748              		.cfi_def_cfa_offset 12
 749              		.cfi_offset 4, -12
 750              		.cfi_offset 7, -8
 751              		.cfi_offset 14, -4
 752 0002 83B0     		sub	sp, sp, #12
 753              		.cfi_def_cfa_offset 24
 754 0004 00AF     		add	r7, sp, #0
 755              		.cfi_def_cfa_register 7
 636:.\Generated_Source\PSoC5/PC.c ****         
 637:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/PC.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/PC.c ****         PC_DisableRxInt();
 756              		.loc 1 640 0
 757 0006 0C4B     		ldr	r3, .L45
 758 0008 0422     		movs	r2, #4
 759 000a 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC5/PC.c ****         locErrorStatus = (uint16)PC_errorStatus;
 760              		.loc 1 641 0
 761 000c 0B4B     		ldr	r3, .L45+4
 762 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 763 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:.\Generated_Source\PSoC5/PC.c ****         PC_errorStatus = 0u;
 764              		.loc 1 642 0
 765 0012 0A4B     		ldr	r3, .L45+4
 766 0014 0022     		movs	r2, #0
 767 0016 1A70     		strb	r2, [r3]
 643:.\Generated_Source\PSoC5/PC.c ****         PC_EnableRxInt();
 768              		.loc 1 643 0
 769 0018 094B     		ldr	r3, .L45+8
 770 001a 0422     		movs	r2, #4
 771 001c 1A60     		str	r2, [r3]
 644:.\Generated_Source\PSoC5/PC.c ****         return ( (uint16)(locErrorStatus << 8u) | PC_ReadRxData() );
 772              		.loc 1 644 0
 773 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 774 0020 1B02     		lsls	r3, r3, #8
 775 0022 9CB2     		uxth	r4, r3
 776 0024 FFF7FEFF 		bl	PC_ReadRxData
 777 0028 0346     		mov	r3, r0
 778 002a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 26


 779 002c 2343     		orrs	r3, r3, r4
 780 002e 9BB2     		uxth	r3, r3
 645:.\Generated_Source\PSoC5/PC.c ****     #else
 646:.\Generated_Source\PSoC5/PC.c ****         return ( ((uint16)PC_ReadRxStatus() << 8u) | PC_ReadRxData() );
 647:.\Generated_Source\PSoC5/PC.c ****     #endif /* PC_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/PC.c ****         
 649:.\Generated_Source\PSoC5/PC.c ****     }
 781              		.loc 1 649 0
 782 0030 1846     		mov	r0, r3
 783 0032 0C37     		adds	r7, r7, #12
 784              		.cfi_def_cfa_offset 12
 785 0034 BD46     		mov	sp, r7
 786              		.cfi_def_cfa_register 13
 787              		@ sp needed
 788 0036 90BD     		pop	{r4, r7, pc}
 789              	.L46:
 790              		.align	2
 791              	.L45:
 792 0038 80E100E0 		.word	-536813184
 793 003c 00000000 		.word	PC_errorStatus
 794 0040 00E100E0 		.word	-536813312
 795              		.cfi_endproc
 796              	.LFE10:
 797              		.size	PC_GetByte, .-PC_GetByte
 798              		.section	.text.PC_GetRxBufferSize,"ax",%progbits
 799              		.align	2
 800              		.global	PC_GetRxBufferSize
 801              		.thumb
 802              		.thumb_func
 803              		.type	PC_GetRxBufferSize, %function
 804              	PC_GetRxBufferSize:
 805              	.LFB11:
 650:.\Generated_Source\PSoC5/PC.c **** 
 651:.\Generated_Source\PSoC5/PC.c **** 
 652:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_GetRxBufferSize
 654:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/PC.c ****     *
 656:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 657:.\Generated_Source\PSoC5/PC.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/PC.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/PC.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/PC.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/PC.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/PC.c ****     *    account.
 663:.\Generated_Source\PSoC5/PC.c ****     *
 664:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/PC.c ****     *  None.
 666:.\Generated_Source\PSoC5/PC.c ****     *
 667:.\Generated_Source\PSoC5/PC.c ****     * Return:
 668:.\Generated_Source\PSoC5/PC.c ****     *  uint16: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/PC.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/PC.c ****     *
 671:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferLoopDetect - checked to decide left bytes amount.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 27


 675:.\Generated_Source\PSoC5/PC.c ****     *
 676:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/PC.c ****     *  No.
 678:.\Generated_Source\PSoC5/PC.c ****     *
 679:.\Generated_Source\PSoC5/PC.c ****     * Theory:
 680:.\Generated_Source\PSoC5/PC.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/PC.c ****     *
 682:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/PC.c ****     uint16 PC_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/PC.c ****                                                             
 685:.\Generated_Source\PSoC5/PC.c ****     {
 806              		.loc 1 685 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 8
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811 0000 80B4     		push	{r7}
 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
 814 0002 83B0     		sub	sp, sp, #12
 815              		.cfi_def_cfa_offset 16
 816 0004 00AF     		add	r7, sp, #0
 817              		.cfi_def_cfa_register 7
 686:.\Generated_Source\PSoC5/PC.c ****         uint16 size;
 687:.\Generated_Source\PSoC5/PC.c **** 
 688:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/PC.c **** 
 690:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/PC.c ****         PC_DisableRxInt();
 818              		.loc 1 691 0
 819 0006 1E4B     		ldr	r3, .L54
 820 0008 0422     		movs	r2, #4
 821 000a 1A60     		str	r2, [r3]
 692:.\Generated_Source\PSoC5/PC.c **** 
 693:.\Generated_Source\PSoC5/PC.c ****         if(PC_rxBufferRead == PC_rxBufferWrite)
 822              		.loc 1 693 0
 823 000c 1D4B     		ldr	r3, .L54+4
 824 000e 1B88     		ldrh	r3, [r3]	@ movhi
 825 0010 9AB2     		uxth	r2, r3
 826 0012 1D4B     		ldr	r3, .L54+8
 827 0014 1B88     		ldrh	r3, [r3]	@ movhi
 828 0016 9BB2     		uxth	r3, r3
 829 0018 9A42     		cmp	r2, r3
 830 001a 0BD1     		bne	.L48
 694:.\Generated_Source\PSoC5/PC.c ****         {
 695:.\Generated_Source\PSoC5/PC.c ****             if(PC_rxBufferLoopDetect != 0u)
 831              		.loc 1 695 0
 832 001c 1B4B     		ldr	r3, .L54+12
 833 001e 1B78     		ldrb	r3, [r3]
 834 0020 DBB2     		uxtb	r3, r3
 835 0022 002B     		cmp	r3, #0
 836 0024 03D0     		beq	.L49
 696:.\Generated_Source\PSoC5/PC.c ****             {
 697:.\Generated_Source\PSoC5/PC.c ****                 size = PC_RX_BUFFER_SIZE;
 837              		.loc 1 697 0
 838 0026 40F2DC53 		movw	r3, #1500
 839 002a FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 28


 840 002c 1EE0     		b	.L51
 841              	.L49:
 698:.\Generated_Source\PSoC5/PC.c ****             }
 699:.\Generated_Source\PSoC5/PC.c ****             else
 700:.\Generated_Source\PSoC5/PC.c ****             {
 701:.\Generated_Source\PSoC5/PC.c ****                 size = 0u;
 842              		.loc 1 701 0
 843 002e 0023     		movs	r3, #0
 844 0030 FB80     		strh	r3, [r7, #6]	@ movhi
 845 0032 1BE0     		b	.L51
 846              	.L48:
 702:.\Generated_Source\PSoC5/PC.c ****             }
 703:.\Generated_Source\PSoC5/PC.c ****         }
 704:.\Generated_Source\PSoC5/PC.c ****         else if(PC_rxBufferRead < PC_rxBufferWrite)
 847              		.loc 1 704 0
 848 0034 134B     		ldr	r3, .L54+4
 849 0036 1B88     		ldrh	r3, [r3]	@ movhi
 850 0038 9AB2     		uxth	r2, r3
 851 003a 134B     		ldr	r3, .L54+8
 852 003c 1B88     		ldrh	r3, [r3]	@ movhi
 853 003e 9BB2     		uxth	r3, r3
 854 0040 9A42     		cmp	r2, r3
 855 0042 08D2     		bcs	.L52
 705:.\Generated_Source\PSoC5/PC.c ****         {
 706:.\Generated_Source\PSoC5/PC.c ****             size = (PC_rxBufferWrite - PC_rxBufferRead);
 856              		.loc 1 706 0
 857 0044 104B     		ldr	r3, .L54+8
 858 0046 1B88     		ldrh	r3, [r3]	@ movhi
 859 0048 9AB2     		uxth	r2, r3
 860 004a 0E4B     		ldr	r3, .L54+4
 861 004c 1B88     		ldrh	r3, [r3]	@ movhi
 862 004e 9BB2     		uxth	r3, r3
 863 0050 D31A     		subs	r3, r2, r3
 864 0052 FB80     		strh	r3, [r7, #6]	@ movhi
 865 0054 0AE0     		b	.L51
 866              	.L52:
 707:.\Generated_Source\PSoC5/PC.c ****         }
 708:.\Generated_Source\PSoC5/PC.c ****         else
 709:.\Generated_Source\PSoC5/PC.c ****         {
 710:.\Generated_Source\PSoC5/PC.c ****             size = (PC_RX_BUFFER_SIZE - PC_rxBufferRead) + PC_rxBufferWrite;
 867              		.loc 1 710 0
 868 0056 0C4B     		ldr	r3, .L54+8
 869 0058 1B88     		ldrh	r3, [r3]	@ movhi
 870 005a 9AB2     		uxth	r2, r3
 871 005c 094B     		ldr	r3, .L54+4
 872 005e 1B88     		ldrh	r3, [r3]	@ movhi
 873 0060 9BB2     		uxth	r3, r3
 874 0062 D31A     		subs	r3, r2, r3
 875 0064 9BB2     		uxth	r3, r3
 876 0066 03F2DC53 		addw	r3, r3, #1500
 877 006a FB80     		strh	r3, [r7, #6]	@ movhi
 878              	.L51:
 711:.\Generated_Source\PSoC5/PC.c ****         }
 712:.\Generated_Source\PSoC5/PC.c **** 
 713:.\Generated_Source\PSoC5/PC.c ****         PC_EnableRxInt();
 879              		.loc 1 713 0
 880 006c 084B     		ldr	r3, .L54+16
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 29


 881 006e 0422     		movs	r2, #4
 882 0070 1A60     		str	r2, [r3]
 714:.\Generated_Source\PSoC5/PC.c **** 
 715:.\Generated_Source\PSoC5/PC.c ****     #else
 716:.\Generated_Source\PSoC5/PC.c **** 
 717:.\Generated_Source\PSoC5/PC.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/PC.c ****         size = ((PC_RXSTATUS_REG & PC_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC5/PC.c **** 
 720:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/PC.c **** 
 722:.\Generated_Source\PSoC5/PC.c ****         return(size);
 883              		.loc 1 722 0
 884 0072 FB88     		ldrh	r3, [r7, #6]
 723:.\Generated_Source\PSoC5/PC.c ****     }
 885              		.loc 1 723 0
 886 0074 1846     		mov	r0, r3
 887 0076 0C37     		adds	r7, r7, #12
 888              		.cfi_def_cfa_offset 4
 889 0078 BD46     		mov	sp, r7
 890              		.cfi_def_cfa_register 13
 891              		@ sp needed
 892 007a 5DF8047B 		ldr	r7, [sp], #4
 893              		.cfi_restore 7
 894              		.cfi_def_cfa_offset 0
 895 007e 7047     		bx	lr
 896              	.L55:
 897              		.align	2
 898              	.L54:
 899 0080 80E100E0 		.word	-536813184
 900 0084 00000000 		.word	PC_rxBufferRead
 901 0088 00000000 		.word	PC_rxBufferWrite
 902 008c 00000000 		.word	PC_rxBufferLoopDetect
 903 0090 00E100E0 		.word	-536813312
 904              		.cfi_endproc
 905              	.LFE11:
 906              		.size	PC_GetRxBufferSize, .-PC_GetRxBufferSize
 907              		.section	.text.PC_ClearRxBuffer,"ax",%progbits
 908              		.align	2
 909              		.global	PC_ClearRxBuffer
 910              		.thumb
 911              		.thumb_func
 912              		.type	PC_ClearRxBuffer, %function
 913              	PC_ClearRxBuffer:
 914              	.LFB12:
 724:.\Generated_Source\PSoC5/PC.c **** 
 725:.\Generated_Source\PSoC5/PC.c **** 
 726:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_ClearRxBuffer
 728:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/PC.c ****     *
 730:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 731:.\Generated_Source\PSoC5/PC.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/PC.c ****     *
 733:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/PC.c ****     *  None.
 735:.\Generated_Source\PSoC5/PC.c ****     *
 736:.\Generated_Source\PSoC5/PC.c ****     * Return:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 30


 737:.\Generated_Source\PSoC5/PC.c ****     *  None.
 738:.\Generated_Source\PSoC5/PC.c ****     *
 739:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/PC.c ****     *
 745:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/PC.c ****     *  No.
 747:.\Generated_Source\PSoC5/PC.c ****     *
 748:.\Generated_Source\PSoC5/PC.c ****     * Theory:
 749:.\Generated_Source\PSoC5/PC.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/PC.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/PC.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/PC.c ****     *
 753:.\Generated_Source\PSoC5/PC.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/PC.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/PC.c ****     *
 756:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/PC.c ****     void PC_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/PC.c ****     {
 915              		.loc 1 758 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 8
 918              		@ frame_needed = 1, uses_anonymous_args = 0
 919 0000 80B5     		push	{r7, lr}
 920              		.cfi_def_cfa_offset 8
 921              		.cfi_offset 7, -8
 922              		.cfi_offset 14, -4
 923 0002 82B0     		sub	sp, sp, #8
 924              		.cfi_def_cfa_offset 16
 925 0004 00AF     		add	r7, sp, #0
 926              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC5/PC.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/PC.c **** 
 761:.\Generated_Source\PSoC5/PC.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/PC.c ****         enableInterrupts = CyEnterCriticalSection();
 927              		.loc 1 762 0
 928 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 929 000a 0346     		mov	r3, r0
 930 000c FB71     		strb	r3, [r7, #7]
 763:.\Generated_Source\PSoC5/PC.c ****         PC_RXDATA_AUX_CTL_REG |= (uint8)  PC_RX_FIFO_CLR;
 931              		.loc 1 763 0
 932 000e 144A     		ldr	r2, .L57
 933 0010 134B     		ldr	r3, .L57
 934 0012 1B78     		ldrb	r3, [r3]
 935 0014 DBB2     		uxtb	r3, r3
 936 0016 43F00103 		orr	r3, r3, #1
 937 001a DBB2     		uxtb	r3, r3
 938 001c 1370     		strb	r3, [r2]
 764:.\Generated_Source\PSoC5/PC.c ****         PC_RXDATA_AUX_CTL_REG &= (uint8) ~PC_RX_FIFO_CLR;
 939              		.loc 1 764 0
 940 001e 104A     		ldr	r2, .L57
 941 0020 0F4B     		ldr	r3, .L57
 942 0022 1B78     		ldrb	r3, [r3]
 943 0024 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 31


 944 0026 23F00103 		bic	r3, r3, #1
 945 002a DBB2     		uxtb	r3, r3
 946 002c 1370     		strb	r3, [r2]
 765:.\Generated_Source\PSoC5/PC.c ****         CyExitCriticalSection(enableInterrupts);
 947              		.loc 1 765 0
 948 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 949 0030 1846     		mov	r0, r3
 950 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC5/PC.c **** 
 767:.\Generated_Source\PSoC5/PC.c ****     #if (PC_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/PC.c **** 
 769:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/PC.c ****         PC_DisableRxInt();
 951              		.loc 1 770 0
 952 0036 0B4B     		ldr	r3, .L57+4
 953 0038 0422     		movs	r2, #4
 954 003a 1A60     		str	r2, [r3]
 771:.\Generated_Source\PSoC5/PC.c **** 
 772:.\Generated_Source\PSoC5/PC.c ****         PC_rxBufferRead = 0u;
 955              		.loc 1 772 0
 956 003c 0A4B     		ldr	r3, .L57+8
 957 003e 0022     		movs	r2, #0
 958 0040 1A80     		strh	r2, [r3]	@ movhi
 773:.\Generated_Source\PSoC5/PC.c ****         PC_rxBufferWrite = 0u;
 959              		.loc 1 773 0
 960 0042 0A4B     		ldr	r3, .L57+12
 961 0044 0022     		movs	r2, #0
 962 0046 1A80     		strh	r2, [r3]	@ movhi
 774:.\Generated_Source\PSoC5/PC.c ****         PC_rxBufferLoopDetect = 0u;
 963              		.loc 1 774 0
 964 0048 094B     		ldr	r3, .L57+16
 965 004a 0022     		movs	r2, #0
 966 004c 1A70     		strb	r2, [r3]
 775:.\Generated_Source\PSoC5/PC.c ****         PC_rxBufferOverflow = 0u;
 967              		.loc 1 775 0
 968 004e 094B     		ldr	r3, .L57+20
 969 0050 0022     		movs	r2, #0
 970 0052 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC5/PC.c **** 
 777:.\Generated_Source\PSoC5/PC.c ****         PC_EnableRxInt();
 971              		.loc 1 777 0
 972 0054 084B     		ldr	r3, .L57+24
 973 0056 0422     		movs	r2, #4
 974 0058 1A60     		str	r2, [r3]
 778:.\Generated_Source\PSoC5/PC.c **** 
 779:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/PC.c **** 
 781:.\Generated_Source\PSoC5/PC.c ****     }
 975              		.loc 1 781 0
 976 005a 0837     		adds	r7, r7, #8
 977              		.cfi_def_cfa_offset 8
 978 005c BD46     		mov	sp, r7
 979              		.cfi_def_cfa_register 13
 980              		@ sp needed
 981 005e 80BD     		pop	{r7, pc}
 982              	.L58:
 983              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 32


 984              	.L57:
 985 0060 98640040 		.word	1073767576
 986 0064 80E100E0 		.word	-536813184
 987 0068 00000000 		.word	PC_rxBufferRead
 988 006c 00000000 		.word	PC_rxBufferWrite
 989 0070 00000000 		.word	PC_rxBufferLoopDetect
 990 0074 00000000 		.word	PC_rxBufferOverflow
 991 0078 00E100E0 		.word	-536813312
 992              		.cfi_endproc
 993              	.LFE12:
 994              		.size	PC_ClearRxBuffer, .-PC_ClearRxBuffer
 995              		.section	.text.PC_SetRxAddressMode,"ax",%progbits
 996              		.align	2
 997              		.global	PC_SetRxAddressMode
 998              		.thumb
 999              		.thumb_func
 1000              		.type	PC_SetRxAddressMode, %function
 1001              	PC_SetRxAddressMode:
 1002              	.LFB13:
 782:.\Generated_Source\PSoC5/PC.c **** 
 783:.\Generated_Source\PSoC5/PC.c **** 
 784:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetRxAddressMode
 786:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/PC.c ****     *
 788:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 789:.\Generated_Source\PSoC5/PC.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/PC.c ****     *  UART.
 791:.\Generated_Source\PSoC5/PC.c ****     *
 792:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/PC.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/PC.c ****     *  PC__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/PC.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/PC.c ****     *  PC__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/PC.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/PC.c ****     *  PC__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/PC.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/PC.c ****     *  PC__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/PC.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/PC.c ****     *  PC__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/PC.c ****     *
 804:.\Generated_Source\PSoC5/PC.c ****     * Return:
 805:.\Generated_Source\PSoC5/PC.c ****     *  None.
 806:.\Generated_Source\PSoC5/PC.c ****     *
 807:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/PC.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/PC.c ****     *  PC_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/PC.c ****     *
 812:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/PC.c ****     void PC_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/PC.c ****                                                         
 815:.\Generated_Source\PSoC5/PC.c ****     {
 1003              		.loc 1 815 0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 8
 1006              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 33


 1007              		@ link register save eliminated.
 1008 0000 80B4     		push	{r7}
 1009              		.cfi_def_cfa_offset 4
 1010              		.cfi_offset 7, -4
 1011 0002 83B0     		sub	sp, sp, #12
 1012              		.cfi_def_cfa_offset 16
 1013 0004 00AF     		add	r7, sp, #0
 1014              		.cfi_def_cfa_register 7
 1015 0006 0346     		mov	r3, r0
 1016 0008 FB71     		strb	r3, [r7, #7]
 816:.\Generated_Source\PSoC5/PC.c ****         #if(PC_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/PC.c ****             #if(PC_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/PC.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/PC.c ****                 {
 820:.\Generated_Source\PSoC5/PC.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/PC.c ****                 }
 822:.\Generated_Source\PSoC5/PC.c ****             #else /* PC_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/PC.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/PC.c ****                 tmpCtrl = PC_CONTROL_REG & (uint8)~PC_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/PC.c ****                 tmpCtrl |= (uint8)(addressMode << PC_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/PC.c ****                 PC_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/PC.c **** 
 828:.\Generated_Source\PSoC5/PC.c ****                 #if(PC_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/PC.c ****                    (PC_RXBUFFERSIZE > PC_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/PC.c ****                     PC_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/PC.c ****                     PC_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/PC.c ****                 #endif /* End PC_RXBUFFERSIZE > PC_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/PC.c ****             #endif /* End PC_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/PC.c ****         #else /* PC_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/PC.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/PC.c ****             {
 837:.\Generated_Source\PSoC5/PC.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/PC.c ****             }
 839:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/PC.c ****     }
 1017              		.loc 1 840 0
 1018 000a 0C37     		adds	r7, r7, #12
 1019              		.cfi_def_cfa_offset 4
 1020 000c BD46     		mov	sp, r7
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed
 1023 000e 5DF8047B 		ldr	r7, [sp], #4
 1024              		.cfi_restore 7
 1025              		.cfi_def_cfa_offset 0
 1026 0012 7047     		bx	lr
 1027              		.cfi_endproc
 1028              	.LFE13:
 1029              		.size	PC_SetRxAddressMode, .-PC_SetRxAddressMode
 1030              		.section	.text.PC_SetRxAddress1,"ax",%progbits
 1031              		.align	2
 1032              		.global	PC_SetRxAddress1
 1033              		.thumb
 1034              		.thumb_func
 1035              		.type	PC_SetRxAddress1, %function
 1036              	PC_SetRxAddress1:
 1037              	.LFB14:
 841:.\Generated_Source\PSoC5/PC.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 34


 842:.\Generated_Source\PSoC5/PC.c **** 
 843:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetRxAddress1
 845:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/PC.c ****     *
 847:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 848:.\Generated_Source\PSoC5/PC.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/PC.c ****     *
 850:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/PC.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/PC.c ****     *
 853:.\Generated_Source\PSoC5/PC.c ****     * Return:
 854:.\Generated_Source\PSoC5/PC.c ****     *  None.
 855:.\Generated_Source\PSoC5/PC.c ****     *
 856:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/PC.c ****     void PC_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/PC.c ****     {
 1038              		.loc 1 858 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 8
 1041              		@ frame_needed = 1, uses_anonymous_args = 0
 1042              		@ link register save eliminated.
 1043 0000 80B4     		push	{r7}
 1044              		.cfi_def_cfa_offset 4
 1045              		.cfi_offset 7, -4
 1046 0002 83B0     		sub	sp, sp, #12
 1047              		.cfi_def_cfa_offset 16
 1048 0004 00AF     		add	r7, sp, #0
 1049              		.cfi_def_cfa_register 7
 1050 0006 0346     		mov	r3, r0
 1051 0008 FB71     		strb	r3, [r7, #7]
 859:.\Generated_Source\PSoC5/PC.c ****         PC_RXADDRESS1_REG = address;
 1052              		.loc 1 859 0
 1053 000a 044A     		ldr	r2, .L61
 1054 000c FB79     		ldrb	r3, [r7, #7]
 1055 000e 1370     		strb	r3, [r2]
 860:.\Generated_Source\PSoC5/PC.c ****     }
 1056              		.loc 1 860 0
 1057 0010 0C37     		adds	r7, r7, #12
 1058              		.cfi_def_cfa_offset 4
 1059 0012 BD46     		mov	sp, r7
 1060              		.cfi_def_cfa_register 13
 1061              		@ sp needed
 1062 0014 5DF8047B 		ldr	r7, [sp], #4
 1063              		.cfi_restore 7
 1064              		.cfi_def_cfa_offset 0
 1065 0018 7047     		bx	lr
 1066              	.L62:
 1067 001a 00BF     		.align	2
 1068              	.L61:
 1069 001c 28640040 		.word	1073767464
 1070              		.cfi_endproc
 1071              	.LFE14:
 1072              		.size	PC_SetRxAddress1, .-PC_SetRxAddress1
 1073              		.section	.text.PC_SetRxAddress2,"ax",%progbits
 1074              		.align	2
 1075              		.global	PC_SetRxAddress2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 35


 1076              		.thumb
 1077              		.thumb_func
 1078              		.type	PC_SetRxAddress2, %function
 1079              	PC_SetRxAddress2:
 1080              	.LFB15:
 861:.\Generated_Source\PSoC5/PC.c **** 
 862:.\Generated_Source\PSoC5/PC.c **** 
 863:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetRxAddress2
 865:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/PC.c ****     *
 867:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 868:.\Generated_Source\PSoC5/PC.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/PC.c ****     *
 870:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/PC.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/PC.c ****     *
 873:.\Generated_Source\PSoC5/PC.c ****     * Return:
 874:.\Generated_Source\PSoC5/PC.c ****     *  None.
 875:.\Generated_Source\PSoC5/PC.c ****     *
 876:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/PC.c ****     void PC_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/PC.c ****     {
 1081              		.loc 1 878 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 8
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086 0000 80B4     		push	{r7}
 1087              		.cfi_def_cfa_offset 4
 1088              		.cfi_offset 7, -4
 1089 0002 83B0     		sub	sp, sp, #12
 1090              		.cfi_def_cfa_offset 16
 1091 0004 00AF     		add	r7, sp, #0
 1092              		.cfi_def_cfa_register 7
 1093 0006 0346     		mov	r3, r0
 1094 0008 FB71     		strb	r3, [r7, #7]
 879:.\Generated_Source\PSoC5/PC.c ****         PC_RXADDRESS2_REG = address;
 1095              		.loc 1 879 0
 1096 000a 044A     		ldr	r2, .L64
 1097 000c FB79     		ldrb	r3, [r7, #7]
 1098 000e 1370     		strb	r3, [r2]
 880:.\Generated_Source\PSoC5/PC.c ****     }
 1099              		.loc 1 880 0
 1100 0010 0C37     		adds	r7, r7, #12
 1101              		.cfi_def_cfa_offset 4
 1102 0012 BD46     		mov	sp, r7
 1103              		.cfi_def_cfa_register 13
 1104              		@ sp needed
 1105 0014 5DF8047B 		ldr	r7, [sp], #4
 1106              		.cfi_restore 7
 1107              		.cfi_def_cfa_offset 0
 1108 0018 7047     		bx	lr
 1109              	.L65:
 1110 001a 00BF     		.align	2
 1111              	.L64:
 1112 001c 38640040 		.word	1073767480
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 36


 1113              		.cfi_endproc
 1114              	.LFE15:
 1115              		.size	PC_SetRxAddress2, .-PC_SetRxAddress2
 1116              		.section	.text.PC_SetTxInterruptMode,"ax",%progbits
 1117              		.align	2
 1118              		.global	PC_SetTxInterruptMode
 1119              		.thumb
 1120              		.thumb_func
 1121              		.type	PC_SetTxInterruptMode, %function
 1122              	PC_SetTxInterruptMode:
 1123              	.LFB16:
 881:.\Generated_Source\PSoC5/PC.c **** 
 882:.\Generated_Source\PSoC5/PC.c **** #endif  /* PC_RX_ENABLED || PC_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/PC.c **** 
 884:.\Generated_Source\PSoC5/PC.c **** 
 885:.\Generated_Source\PSoC5/PC.c **** #if( (PC_TX_ENABLED) || (PC_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/PC.c ****     *
 890:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 891:.\Generated_Source\PSoC5/PC.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/PC.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/PC.c ****     *
 894:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/PC.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/PC.c ****     *   PC_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/PC.c ****     *   PC_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/PC.c ****     *   PC_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/PC.c ****     *   PC_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/PC.c ****     *
 901:.\Generated_Source\PSoC5/PC.c ****     * Return:
 902:.\Generated_Source\PSoC5/PC.c ****     *  None.
 903:.\Generated_Source\PSoC5/PC.c ****     *
 904:.\Generated_Source\PSoC5/PC.c ****     * Theory:
 905:.\Generated_Source\PSoC5/PC.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/PC.c ****     *
 907:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/PC.c ****     void PC_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/PC.c ****     {
 1124              		.loc 1 909 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 8
 1127              		@ frame_needed = 1, uses_anonymous_args = 0
 1128              		@ link register save eliminated.
 1129 0000 80B4     		push	{r7}
 1130              		.cfi_def_cfa_offset 4
 1131              		.cfi_offset 7, -4
 1132 0002 83B0     		sub	sp, sp, #12
 1133              		.cfi_def_cfa_offset 16
 1134 0004 00AF     		add	r7, sp, #0
 1135              		.cfi_def_cfa_register 7
 1136 0006 0346     		mov	r3, r0
 1137 0008 FB71     		strb	r3, [r7, #7]
 910:.\Generated_Source\PSoC5/PC.c ****         PC_TXSTATUS_MASK_REG = intSrc;
 1138              		.loc 1 910 0
 1139 000a 044A     		ldr	r2, .L67
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 37


 1140 000c FB79     		ldrb	r3, [r7, #7]
 1141 000e 1370     		strb	r3, [r2]
 911:.\Generated_Source\PSoC5/PC.c ****     }
 1142              		.loc 1 911 0
 1143 0010 0C37     		adds	r7, r7, #12
 1144              		.cfi_def_cfa_offset 4
 1145 0012 BD46     		mov	sp, r7
 1146              		.cfi_def_cfa_register 13
 1147              		@ sp needed
 1148 0014 5DF8047B 		ldr	r7, [sp], #4
 1149              		.cfi_restore 7
 1150              		.cfi_def_cfa_offset 0
 1151 0018 7047     		bx	lr
 1152              	.L68:
 1153 001a 00BF     		.align	2
 1154              	.L67:
 1155 001c 85640040 		.word	1073767557
 1156              		.cfi_endproc
 1157              	.LFE16:
 1158              		.size	PC_SetTxInterruptMode, .-PC_SetTxInterruptMode
 1159              		.section	.text.PC_WriteTxData,"ax",%progbits
 1160              		.align	2
 1161              		.global	PC_WriteTxData
 1162              		.thumb
 1163              		.thumb_func
 1164              		.type	PC_WriteTxData, %function
 1165              	PC_WriteTxData:
 1166              	.LFB17:
 912:.\Generated_Source\PSoC5/PC.c **** 
 913:.\Generated_Source\PSoC5/PC.c **** 
 914:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_WriteTxData
 916:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/PC.c ****     *
 918:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 919:.\Generated_Source\PSoC5/PC.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/PC.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/PC.c ****     *  separately.
 922:.\Generated_Source\PSoC5/PC.c ****     *
 923:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/PC.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/PC.c ****     *
 926:.\Generated_Source\PSoC5/PC.c ****     * Return:
 927:.\Generated_Source\PSoC5/PC.c ****     * None.
 928:.\Generated_Source\PSoC5/PC.c ****     *
 929:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/PC.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/PC.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/PC.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/PC.c ****     *
 938:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/PC.c ****     *  No.
 940:.\Generated_Source\PSoC5/PC.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 38


 941:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/PC.c ****     void PC_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/PC.c ****     {
 1167              		.loc 1 943 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 8
 1170              		@ frame_needed = 1, uses_anonymous_args = 0
 1171              		@ link register save eliminated.
 1172 0000 80B4     		push	{r7}
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 7, -4
 1175 0002 83B0     		sub	sp, sp, #12
 1176              		.cfi_def_cfa_offset 16
 1177 0004 00AF     		add	r7, sp, #0
 1178              		.cfi_def_cfa_register 7
 1179 0006 0346     		mov	r3, r0
 1180 0008 FB71     		strb	r3, [r7, #7]
 944:.\Generated_Source\PSoC5/PC.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/PC.c ****         if(PC_initVar != 0u)
 1181              		.loc 1 945 0
 1182 000a 064B     		ldr	r3, .L71
 1183 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 000e 002B     		cmp	r3, #0
 1185 0010 02D0     		beq	.L69
 946:.\Generated_Source\PSoC5/PC.c ****         {
 947:.\Generated_Source\PSoC5/PC.c ****         #if (PC_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/PC.c **** 
 949:.\Generated_Source\PSoC5/PC.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/PC.c ****             PC_DisableTxInt();
 951:.\Generated_Source\PSoC5/PC.c **** 
 952:.\Generated_Source\PSoC5/PC.c ****             if( (PC_txBufferRead == PC_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/PC.c ****                 ((PC_TXSTATUS_REG & PC_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/PC.c ****             {
 955:.\Generated_Source\PSoC5/PC.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/PC.c ****                 PC_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/PC.c ****             }
 958:.\Generated_Source\PSoC5/PC.c ****             else
 959:.\Generated_Source\PSoC5/PC.c ****             {
 960:.\Generated_Source\PSoC5/PC.c ****                 if(PC_txBufferWrite >= PC_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/PC.c ****                 {
 962:.\Generated_Source\PSoC5/PC.c ****                     PC_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/PC.c ****                 }
 964:.\Generated_Source\PSoC5/PC.c **** 
 965:.\Generated_Source\PSoC5/PC.c ****                 PC_txBuffer[PC_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/PC.c **** 
 967:.\Generated_Source\PSoC5/PC.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/PC.c ****                 PC_txBufferWrite++;
 969:.\Generated_Source\PSoC5/PC.c ****             }
 970:.\Generated_Source\PSoC5/PC.c **** 
 971:.\Generated_Source\PSoC5/PC.c ****             PC_EnableTxInt();
 972:.\Generated_Source\PSoC5/PC.c **** 
 973:.\Generated_Source\PSoC5/PC.c ****         #else
 974:.\Generated_Source\PSoC5/PC.c **** 
 975:.\Generated_Source\PSoC5/PC.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/PC.c ****             PC_TXDATA_REG = txDataByte;
 1186              		.loc 1 976 0
 1187 0012 054A     		ldr	r2, .L71+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 39


 1188 0014 FB79     		ldrb	r3, [r7, #7]
 1189 0016 1370     		strb	r3, [r2]
 1190              	.L69:
 977:.\Generated_Source\PSoC5/PC.c **** 
 978:.\Generated_Source\PSoC5/PC.c ****         #endif /*(PC_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/PC.c ****         }
 980:.\Generated_Source\PSoC5/PC.c ****     }
 1191              		.loc 1 980 0
 1192 0018 0C37     		adds	r7, r7, #12
 1193              		.cfi_def_cfa_offset 4
 1194 001a BD46     		mov	sp, r7
 1195              		.cfi_def_cfa_register 13
 1196              		@ sp needed
 1197 001c 5DF8047B 		ldr	r7, [sp], #4
 1198              		.cfi_restore 7
 1199              		.cfi_def_cfa_offset 0
 1200 0020 7047     		bx	lr
 1201              	.L72:
 1202 0022 00BF     		.align	2
 1203              	.L71:
 1204 0024 00000000 		.word	PC_initVar
 1205 0028 45640040 		.word	1073767493
 1206              		.cfi_endproc
 1207              	.LFE17:
 1208              		.size	PC_WriteTxData, .-PC_WriteTxData
 1209              		.section	.text.PC_ReadTxStatus,"ax",%progbits
 1210              		.align	2
 1211              		.global	PC_ReadTxStatus
 1212              		.thumb
 1213              		.thumb_func
 1214              		.type	PC_ReadTxStatus, %function
 1215              	PC_ReadTxStatus:
 1216              	.LFB18:
 981:.\Generated_Source\PSoC5/PC.c **** 
 982:.\Generated_Source\PSoC5/PC.c **** 
 983:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_ReadTxStatus
 985:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/PC.c ****     *
 987:.\Generated_Source\PSoC5/PC.c ****     * Summary:
 988:.\Generated_Source\PSoC5/PC.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/PC.c ****     *
 990:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/PC.c ****     *  None.
 992:.\Generated_Source\PSoC5/PC.c ****     *
 993:.\Generated_Source\PSoC5/PC.c ****     * Return:
 994:.\Generated_Source\PSoC5/PC.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/PC.c ****     *
 996:.\Generated_Source\PSoC5/PC.c ****     * Theory:
 997:.\Generated_Source\PSoC5/PC.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/PC.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/PC.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/PC.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/PC.c ****     *
1002:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/PC.c ****     {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 40


 1217              		.loc 1 1004 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 1, uses_anonymous_args = 0
 1221              		@ link register save eliminated.
 1222 0000 80B4     		push	{r7}
 1223              		.cfi_def_cfa_offset 4
 1224              		.cfi_offset 7, -4
 1225 0002 00AF     		add	r7, sp, #0
 1226              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC5/PC.c ****         return(PC_TXSTATUS_REG);
 1227              		.loc 1 1005 0
 1228 0004 034B     		ldr	r3, .L75
 1229 0006 1B78     		ldrb	r3, [r3]
 1230 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC5/PC.c ****     }
 1231              		.loc 1 1006 0
 1232 000a 1846     		mov	r0, r3
 1233 000c BD46     		mov	sp, r7
 1234              		.cfi_def_cfa_register 13
 1235              		@ sp needed
 1236 000e 5DF8047B 		ldr	r7, [sp], #4
 1237              		.cfi_restore 7
 1238              		.cfi_def_cfa_offset 0
 1239 0012 7047     		bx	lr
 1240              	.L76:
 1241              		.align	2
 1242              	.L75:
 1243 0014 65640040 		.word	1073767525
 1244              		.cfi_endproc
 1245              	.LFE18:
 1246              		.size	PC_ReadTxStatus, .-PC_ReadTxStatus
 1247              		.section	.text.PC_PutChar,"ax",%progbits
 1248              		.align	2
 1249              		.global	PC_PutChar
 1250              		.thumb
 1251              		.thumb_func
 1252              		.type	PC_PutChar, %function
 1253              	PC_PutChar:
 1254              	.LFB19:
1007:.\Generated_Source\PSoC5/PC.c **** 
1008:.\Generated_Source\PSoC5/PC.c **** 
1009:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_PutChar
1011:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/PC.c ****     *
1013:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1014:.\Generated_Source\PSoC5/PC.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/PC.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/PC.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/PC.c ****     *
1018:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/PC.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/PC.c ****     *
1021:.\Generated_Source\PSoC5/PC.c ****     * Return:
1022:.\Generated_Source\PSoC5/PC.c ****     *  None.
1023:.\Generated_Source\PSoC5/PC.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 41


1024:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/PC.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/PC.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/PC.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/PC.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/PC.c ****     *
1034:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/PC.c ****     *  No.
1036:.\Generated_Source\PSoC5/PC.c ****     *
1037:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1038:.\Generated_Source\PSoC5/PC.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/PC.c ****     *
1040:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/PC.c ****     void PC_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/PC.c ****     {
 1255              		.loc 1 1042 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 8
 1258              		@ frame_needed = 1, uses_anonymous_args = 0
 1259              		@ link register save eliminated.
 1260 0000 80B4     		push	{r7}
 1261              		.cfi_def_cfa_offset 4
 1262              		.cfi_offset 7, -4
 1263 0002 83B0     		sub	sp, sp, #12
 1264              		.cfi_def_cfa_offset 16
 1265 0004 00AF     		add	r7, sp, #0
 1266              		.cfi_def_cfa_register 7
 1267 0006 0346     		mov	r3, r0
 1268 0008 FB71     		strb	r3, [r7, #7]
1043:.\Generated_Source\PSoC5/PC.c ****     #if (PC_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/PC.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/PC.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/PC.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/PC.c ****         */
1048:.\Generated_Source\PSoC5/PC.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/PC.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/PC.c **** 
1051:.\Generated_Source\PSoC5/PC.c ****         do
1052:.\Generated_Source\PSoC5/PC.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/PC.c **** 
1054:.\Generated_Source\PSoC5/PC.c ****         #if ((PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/PC.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/PC.c ****             PC_DisableTxInt();
1057:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/PC.c **** 
1059:.\Generated_Source\PSoC5/PC.c ****             locTxBufferWrite = PC_txBufferWrite;
1060:.\Generated_Source\PSoC5/PC.c ****             locTxBufferRead  = PC_txBufferRead;
1061:.\Generated_Source\PSoC5/PC.c **** 
1062:.\Generated_Source\PSoC5/PC.c ****         #if ((PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/PC.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/PC.c ****             PC_EnableTxInt();
1065:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/PC.c ****         }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 42


1067:.\Generated_Source\PSoC5/PC.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/PC.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/PC.c ****                                 (uint8)(PC_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/PC.c **** 
1071:.\Generated_Source\PSoC5/PC.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/PC.c ****             ((PC_TXSTATUS_REG & PC_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/PC.c ****         {
1074:.\Generated_Source\PSoC5/PC.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/PC.c ****             PC_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/PC.c ****         }
1077:.\Generated_Source\PSoC5/PC.c ****         else
1078:.\Generated_Source\PSoC5/PC.c ****         {
1079:.\Generated_Source\PSoC5/PC.c ****             if(locTxBufferWrite >= PC_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/PC.c ****             {
1081:.\Generated_Source\PSoC5/PC.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/PC.c ****             }
1083:.\Generated_Source\PSoC5/PC.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/PC.c ****             PC_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/PC.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/PC.c **** 
1087:.\Generated_Source\PSoC5/PC.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/PC.c ****         #if ((PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/PC.c ****             PC_DisableTxInt();
1090:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/PC.c **** 
1092:.\Generated_Source\PSoC5/PC.c ****             PC_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/PC.c **** 
1094:.\Generated_Source\PSoC5/PC.c ****         #if ((PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/PC.c ****             PC_EnableTxInt();
1096:.\Generated_Source\PSoC5/PC.c ****         #endif /* (PC_TX_BUFFER_SIZE > PC_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/PC.c **** 
1098:.\Generated_Source\PSoC5/PC.c ****             if(0u != (PC_TXSTATUS_REG & PC_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/PC.c ****             {
1100:.\Generated_Source\PSoC5/PC.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/PC.c ****                 PC_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/PC.c ****             }
1103:.\Generated_Source\PSoC5/PC.c ****         }
1104:.\Generated_Source\PSoC5/PC.c **** 
1105:.\Generated_Source\PSoC5/PC.c ****     #else
1106:.\Generated_Source\PSoC5/PC.c **** 
1107:.\Generated_Source\PSoC5/PC.c ****         while((PC_TXSTATUS_REG & PC_TX_STS_FIFO_FULL) != 0u)
 1269              		.loc 1 1107 0
 1270 000a 00BF     		nop
 1271              	.L78:
 1272              		.loc 1 1107 0 is_stmt 0 discriminator 1
 1273 000c 074B     		ldr	r3, .L79
 1274 000e 1B78     		ldrb	r3, [r3]
 1275 0010 DBB2     		uxtb	r3, r3
 1276 0012 03F00403 		and	r3, r3, #4
 1277 0016 002B     		cmp	r3, #0
 1278 0018 F8D1     		bne	.L78
1108:.\Generated_Source\PSoC5/PC.c ****         {
1109:.\Generated_Source\PSoC5/PC.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/PC.c ****         }
1111:.\Generated_Source\PSoC5/PC.c **** 
1112:.\Generated_Source\PSoC5/PC.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/PC.c ****         PC_TXDATA_REG = txDataByte;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 43


 1279              		.loc 1 1113 0 is_stmt 1
 1280 001a 054A     		ldr	r2, .L79+4
 1281 001c FB79     		ldrb	r3, [r7, #7]
 1282 001e 1370     		strb	r3, [r2]
1114:.\Generated_Source\PSoC5/PC.c **** 
1115:.\Generated_Source\PSoC5/PC.c ****     #endif /* PC_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/PC.c ****     }
 1283              		.loc 1 1116 0
 1284 0020 0C37     		adds	r7, r7, #12
 1285              		.cfi_def_cfa_offset 4
 1286 0022 BD46     		mov	sp, r7
 1287              		.cfi_def_cfa_register 13
 1288              		@ sp needed
 1289 0024 5DF8047B 		ldr	r7, [sp], #4
 1290              		.cfi_restore 7
 1291              		.cfi_def_cfa_offset 0
 1292 0028 7047     		bx	lr
 1293              	.L80:
 1294 002a 00BF     		.align	2
 1295              	.L79:
 1296 002c 65640040 		.word	1073767525
 1297 0030 45640040 		.word	1073767493
 1298              		.cfi_endproc
 1299              	.LFE19:
 1300              		.size	PC_PutChar, .-PC_PutChar
 1301              		.section	.text.PC_PutString,"ax",%progbits
 1302              		.align	2
 1303              		.global	PC_PutString
 1304              		.thumb
 1305              		.thumb_func
 1306              		.type	PC_PutString, %function
 1307              	PC_PutString:
 1308              	.LFB20:
1117:.\Generated_Source\PSoC5/PC.c **** 
1118:.\Generated_Source\PSoC5/PC.c **** 
1119:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_PutString
1121:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/PC.c ****     *
1123:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1124:.\Generated_Source\PSoC5/PC.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/PC.c ****     *
1126:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/PC.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/PC.c ****     *
1129:.\Generated_Source\PSoC5/PC.c ****     * Return:
1130:.\Generated_Source\PSoC5/PC.c ****     *  None.
1131:.\Generated_Source\PSoC5/PC.c ****     *
1132:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/PC.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/PC.c ****     *
1136:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/PC.c ****     *  No.
1138:.\Generated_Source\PSoC5/PC.c ****     *
1139:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1140:.\Generated_Source\PSoC5/PC.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 44


1141:.\Generated_Source\PSoC5/PC.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/PC.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/PC.c ****     *
1144:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/PC.c ****     void PC_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/PC.c ****     {
 1309              		.loc 1 1146 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 16
 1312              		@ frame_needed = 1, uses_anonymous_args = 0
 1313 0000 80B5     		push	{r7, lr}
 1314              		.cfi_def_cfa_offset 8
 1315              		.cfi_offset 7, -8
 1316              		.cfi_offset 14, -4
 1317 0002 84B0     		sub	sp, sp, #16
 1318              		.cfi_def_cfa_offset 24
 1319 0004 00AF     		add	r7, sp, #0
 1320              		.cfi_def_cfa_register 7
 1321 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC5/PC.c ****         uint16 bufIndex = 0u;
 1322              		.loc 1 1147 0
 1323 0008 0023     		movs	r3, #0
 1324 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:.\Generated_Source\PSoC5/PC.c **** 
1149:.\Generated_Source\PSoC5/PC.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/PC.c ****         if(PC_initVar != 0u)
 1325              		.loc 1 1150 0
 1326 000c 0B4B     		ldr	r3, .L85
 1327 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1328 0010 002B     		cmp	r3, #0
 1329 0012 10D0     		beq	.L81
1151:.\Generated_Source\PSoC5/PC.c ****         {
1152:.\Generated_Source\PSoC5/PC.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/PC.c ****             while(string[bufIndex] != (char8) 0)
 1330              		.loc 1 1153 0
 1331 0014 09E0     		b	.L83
 1332              	.L84:
1154:.\Generated_Source\PSoC5/PC.c ****             {
1155:.\Generated_Source\PSoC5/PC.c ****                 PC_PutChar((uint8)string[bufIndex]);
 1333              		.loc 1 1155 0
 1334 0016 FB89     		ldrh	r3, [r7, #14]
 1335 0018 7A68     		ldr	r2, [r7, #4]
 1336 001a 1344     		add	r3, r3, r2
 1337 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1338 001e 1846     		mov	r0, r3
 1339 0020 FFF7FEFF 		bl	PC_PutChar
1156:.\Generated_Source\PSoC5/PC.c ****                 bufIndex++;
 1340              		.loc 1 1156 0
 1341 0024 FB89     		ldrh	r3, [r7, #14]
 1342 0026 0133     		adds	r3, r3, #1
 1343 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1344              	.L83:
1153:.\Generated_Source\PSoC5/PC.c ****             {
 1345              		.loc 1 1153 0
 1346 002a FB89     		ldrh	r3, [r7, #14]
 1347 002c 7A68     		ldr	r2, [r7, #4]
 1348 002e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 45


 1349 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1350 0032 002B     		cmp	r3, #0
 1351 0034 EFD1     		bne	.L84
 1352              	.L81:
1157:.\Generated_Source\PSoC5/PC.c ****             }
1158:.\Generated_Source\PSoC5/PC.c ****         }
1159:.\Generated_Source\PSoC5/PC.c ****     }
 1353              		.loc 1 1159 0
 1354 0036 1037     		adds	r7, r7, #16
 1355              		.cfi_def_cfa_offset 8
 1356 0038 BD46     		mov	sp, r7
 1357              		.cfi_def_cfa_register 13
 1358              		@ sp needed
 1359 003a 80BD     		pop	{r7, pc}
 1360              	.L86:
 1361              		.align	2
 1362              	.L85:
 1363 003c 00000000 		.word	PC_initVar
 1364              		.cfi_endproc
 1365              	.LFE20:
 1366              		.size	PC_PutString, .-PC_PutString
 1367              		.section	.text.PC_PutArray,"ax",%progbits
 1368              		.align	2
 1369              		.global	PC_PutArray
 1370              		.thumb
 1371              		.thumb_func
 1372              		.type	PC_PutArray, %function
 1373              	PC_PutArray:
 1374              	.LFB21:
1160:.\Generated_Source\PSoC5/PC.c **** 
1161:.\Generated_Source\PSoC5/PC.c **** 
1162:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_PutArray
1164:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/PC.c ****     *
1166:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1167:.\Generated_Source\PSoC5/PC.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/PC.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/PC.c ****     *
1170:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/PC.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/PC.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/PC.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/PC.c ****     *
1175:.\Generated_Source\PSoC5/PC.c ****     * Return:
1176:.\Generated_Source\PSoC5/PC.c ****     *  None.
1177:.\Generated_Source\PSoC5/PC.c ****     *
1178:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/PC.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/PC.c ****     *
1182:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/PC.c ****     *  No.
1184:.\Generated_Source\PSoC5/PC.c ****     *
1185:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1186:.\Generated_Source\PSoC5/PC.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/PC.c ****     *  function blocks until the last character of the string is loaded into the
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 46


1188:.\Generated_Source\PSoC5/PC.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/PC.c ****     *
1190:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/PC.c ****     void PC_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/PC.c ****                                                                     
1193:.\Generated_Source\PSoC5/PC.c ****     {
 1375              		.loc 1 1193 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 16
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379 0000 80B5     		push	{r7, lr}
 1380              		.cfi_def_cfa_offset 8
 1381              		.cfi_offset 7, -8
 1382              		.cfi_offset 14, -4
 1383 0002 84B0     		sub	sp, sp, #16
 1384              		.cfi_def_cfa_offset 24
 1385 0004 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 1387 0006 7860     		str	r0, [r7, #4]
 1388 0008 0B46     		mov	r3, r1
 1389 000a FB70     		strb	r3, [r7, #3]
1194:.\Generated_Source\PSoC5/PC.c ****         uint8 bufIndex = 0u;
 1390              		.loc 1 1194 0
 1391 000c 0023     		movs	r3, #0
 1392 000e FB73     		strb	r3, [r7, #15]
1195:.\Generated_Source\PSoC5/PC.c **** 
1196:.\Generated_Source\PSoC5/PC.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/PC.c ****         if(PC_initVar != 0u)
 1393              		.loc 1 1197 0
 1394 0010 0A4B     		ldr	r3, .L91
 1395 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1396 0014 002B     		cmp	r3, #0
 1397 0016 0ED0     		beq	.L87
1198:.\Generated_Source\PSoC5/PC.c ****         {
1199:.\Generated_Source\PSoC5/PC.c ****             while(bufIndex < byteCount)
 1398              		.loc 1 1199 0
 1399 0018 09E0     		b	.L89
 1400              	.L90:
1200:.\Generated_Source\PSoC5/PC.c ****             {
1201:.\Generated_Source\PSoC5/PC.c ****                 PC_PutChar(string[bufIndex]);
 1401              		.loc 1 1201 0
 1402 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1403 001c 7A68     		ldr	r2, [r7, #4]
 1404 001e 1344     		add	r3, r3, r2
 1405 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1406 0022 1846     		mov	r0, r3
 1407 0024 FFF7FEFF 		bl	PC_PutChar
1202:.\Generated_Source\PSoC5/PC.c ****                 bufIndex++;
 1408              		.loc 1 1202 0
 1409 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1410 002a 0133     		adds	r3, r3, #1
 1411 002c FB73     		strb	r3, [r7, #15]
 1412              	.L89:
1199:.\Generated_Source\PSoC5/PC.c ****             {
 1413              		.loc 1 1199 0
 1414 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1415 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 47


 1416 0032 9A42     		cmp	r2, r3
 1417 0034 F1D3     		bcc	.L90
 1418              	.L87:
1203:.\Generated_Source\PSoC5/PC.c ****             }
1204:.\Generated_Source\PSoC5/PC.c ****         }
1205:.\Generated_Source\PSoC5/PC.c ****     }
 1419              		.loc 1 1205 0
 1420 0036 1037     		adds	r7, r7, #16
 1421              		.cfi_def_cfa_offset 8
 1422 0038 BD46     		mov	sp, r7
 1423              		.cfi_def_cfa_register 13
 1424              		@ sp needed
 1425 003a 80BD     		pop	{r7, pc}
 1426              	.L92:
 1427              		.align	2
 1428              	.L91:
 1429 003c 00000000 		.word	PC_initVar
 1430              		.cfi_endproc
 1431              	.LFE21:
 1432              		.size	PC_PutArray, .-PC_PutArray
 1433              		.section	.text.PC_PutCRLF,"ax",%progbits
 1434              		.align	2
 1435              		.global	PC_PutCRLF
 1436              		.thumb
 1437              		.thumb_func
 1438              		.type	PC_PutCRLF, %function
 1439              	PC_PutCRLF:
 1440              	.LFB22:
1206:.\Generated_Source\PSoC5/PC.c **** 
1207:.\Generated_Source\PSoC5/PC.c **** 
1208:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_PutCRLF
1210:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/PC.c ****     *
1212:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1213:.\Generated_Source\PSoC5/PC.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/PC.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/PC.c ****     *
1216:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/PC.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/PC.c ****     *
1219:.\Generated_Source\PSoC5/PC.c ****     * Return:
1220:.\Generated_Source\PSoC5/PC.c ****     *  None.
1221:.\Generated_Source\PSoC5/PC.c ****     *
1222:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/PC.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/PC.c ****     *
1226:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/PC.c ****     *  No.
1228:.\Generated_Source\PSoC5/PC.c ****     *
1229:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/PC.c ****     void PC_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/PC.c ****     {
 1441              		.loc 1 1231 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 48


 1444              		@ frame_needed = 1, uses_anonymous_args = 0
 1445 0000 80B5     		push	{r7, lr}
 1446              		.cfi_def_cfa_offset 8
 1447              		.cfi_offset 7, -8
 1448              		.cfi_offset 14, -4
 1449 0002 82B0     		sub	sp, sp, #8
 1450              		.cfi_def_cfa_offset 16
 1451 0004 00AF     		add	r7, sp, #0
 1452              		.cfi_def_cfa_register 7
 1453 0006 0346     		mov	r3, r0
 1454 0008 FB71     		strb	r3, [r7, #7]
1232:.\Generated_Source\PSoC5/PC.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/PC.c ****         if(PC_initVar != 0u)
 1455              		.loc 1 1233 0
 1456 000a 084B     		ldr	r3, .L95
 1457 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 000e 002B     		cmp	r3, #0
 1459 0010 09D0     		beq	.L93
1234:.\Generated_Source\PSoC5/PC.c ****         {
1235:.\Generated_Source\PSoC5/PC.c ****             PC_PutChar(txDataByte);
 1460              		.loc 1 1235 0
 1461 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1462 0014 1846     		mov	r0, r3
 1463 0016 FFF7FEFF 		bl	PC_PutChar
1236:.\Generated_Source\PSoC5/PC.c ****             PC_PutChar(0x0Du);
 1464              		.loc 1 1236 0
 1465 001a 0D20     		movs	r0, #13
 1466 001c FFF7FEFF 		bl	PC_PutChar
1237:.\Generated_Source\PSoC5/PC.c ****             PC_PutChar(0x0Au);
 1467              		.loc 1 1237 0
 1468 0020 0A20     		movs	r0, #10
 1469 0022 FFF7FEFF 		bl	PC_PutChar
 1470              	.L93:
1238:.\Generated_Source\PSoC5/PC.c ****         }
1239:.\Generated_Source\PSoC5/PC.c ****     }
 1471              		.loc 1 1239 0
 1472 0026 0837     		adds	r7, r7, #8
 1473              		.cfi_def_cfa_offset 8
 1474 0028 BD46     		mov	sp, r7
 1475              		.cfi_def_cfa_register 13
 1476              		@ sp needed
 1477 002a 80BD     		pop	{r7, pc}
 1478              	.L96:
 1479              		.align	2
 1480              	.L95:
 1481 002c 00000000 		.word	PC_initVar
 1482              		.cfi_endproc
 1483              	.LFE22:
 1484              		.size	PC_PutCRLF, .-PC_PutCRLF
 1485              		.section	.text.PC_GetTxBufferSize,"ax",%progbits
 1486              		.align	2
 1487              		.global	PC_GetTxBufferSize
 1488              		.thumb
 1489              		.thumb_func
 1490              		.type	PC_GetTxBufferSize, %function
 1491              	PC_GetTxBufferSize:
 1492              	.LFB23:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 49


1240:.\Generated_Source\PSoC5/PC.c **** 
1241:.\Generated_Source\PSoC5/PC.c **** 
1242:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_GetTxBufferSize
1244:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/PC.c ****     *
1246:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1247:.\Generated_Source\PSoC5/PC.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/PC.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/PC.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/PC.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/PC.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/PC.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/PC.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/PC.c ****     *
1255:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/PC.c ****     *  None.
1257:.\Generated_Source\PSoC5/PC.c ****     *
1258:.\Generated_Source\PSoC5/PC.c ****     * Return:
1259:.\Generated_Source\PSoC5/PC.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/PC.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/PC.c ****     *
1262:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/PC.c ****     *
1266:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/PC.c ****     *  No.
1268:.\Generated_Source\PSoC5/PC.c ****     *
1269:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1270:.\Generated_Source\PSoC5/PC.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/PC.c ****     *
1272:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/PC.c ****     uint8 PC_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/PC.c ****                                                             
1275:.\Generated_Source\PSoC5/PC.c ****     {
 1493              		.loc 1 1275 0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 8
 1496              		@ frame_needed = 1, uses_anonymous_args = 0
 1497              		@ link register save eliminated.
 1498 0000 80B4     		push	{r7}
 1499              		.cfi_def_cfa_offset 4
 1500              		.cfi_offset 7, -4
 1501 0002 83B0     		sub	sp, sp, #12
 1502              		.cfi_def_cfa_offset 16
 1503 0004 00AF     		add	r7, sp, #0
 1504              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC5/PC.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/PC.c **** 
1278:.\Generated_Source\PSoC5/PC.c ****     #if (PC_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/PC.c **** 
1280:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/PC.c ****         PC_DisableTxInt();
1282:.\Generated_Source\PSoC5/PC.c **** 
1283:.\Generated_Source\PSoC5/PC.c ****         if(PC_txBufferRead == PC_txBufferWrite)
1284:.\Generated_Source\PSoC5/PC.c ****         {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 50


1285:.\Generated_Source\PSoC5/PC.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/PC.c ****         }
1287:.\Generated_Source\PSoC5/PC.c ****         else if(PC_txBufferRead < PC_txBufferWrite)
1288:.\Generated_Source\PSoC5/PC.c ****         {
1289:.\Generated_Source\PSoC5/PC.c ****             size = (PC_txBufferWrite - PC_txBufferRead);
1290:.\Generated_Source\PSoC5/PC.c ****         }
1291:.\Generated_Source\PSoC5/PC.c ****         else
1292:.\Generated_Source\PSoC5/PC.c ****         {
1293:.\Generated_Source\PSoC5/PC.c ****             size = (PC_TX_BUFFER_SIZE - PC_txBufferRead) +
1294:.\Generated_Source\PSoC5/PC.c ****                     PC_txBufferWrite;
1295:.\Generated_Source\PSoC5/PC.c ****         }
1296:.\Generated_Source\PSoC5/PC.c **** 
1297:.\Generated_Source\PSoC5/PC.c ****         PC_EnableTxInt();
1298:.\Generated_Source\PSoC5/PC.c **** 
1299:.\Generated_Source\PSoC5/PC.c ****     #else
1300:.\Generated_Source\PSoC5/PC.c **** 
1301:.\Generated_Source\PSoC5/PC.c ****         size = PC_TXSTATUS_REG;
 1505              		.loc 1 1301 0
 1506 0006 0E4B     		ldr	r3, .L102
 1507 0008 1B78     		ldrb	r3, [r3]
 1508 000a FB71     		strb	r3, [r7, #7]
1302:.\Generated_Source\PSoC5/PC.c **** 
1303:.\Generated_Source\PSoC5/PC.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/PC.c ****         if((size & PC_TX_STS_FIFO_FULL) != 0u)
 1509              		.loc 1 1304 0
 1510 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1511 000e 03F00403 		and	r3, r3, #4
 1512 0012 002B     		cmp	r3, #0
 1513 0014 02D0     		beq	.L98
1305:.\Generated_Source\PSoC5/PC.c ****         {
1306:.\Generated_Source\PSoC5/PC.c ****             size = PC_FIFO_LENGTH;
 1514              		.loc 1 1306 0
 1515 0016 0423     		movs	r3, #4
 1516 0018 FB71     		strb	r3, [r7, #7]
 1517 001a 09E0     		b	.L99
 1518              	.L98:
1307:.\Generated_Source\PSoC5/PC.c ****         }
1308:.\Generated_Source\PSoC5/PC.c ****         else if((size & PC_TX_STS_FIFO_EMPTY) != 0u)
 1519              		.loc 1 1308 0
 1520 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1521 001e 03F00203 		and	r3, r3, #2
 1522 0022 002B     		cmp	r3, #0
 1523 0024 02D0     		beq	.L100
1309:.\Generated_Source\PSoC5/PC.c ****         {
1310:.\Generated_Source\PSoC5/PC.c ****             size = 0u;
 1524              		.loc 1 1310 0
 1525 0026 0023     		movs	r3, #0
 1526 0028 FB71     		strb	r3, [r7, #7]
 1527 002a 01E0     		b	.L99
 1528              	.L100:
1311:.\Generated_Source\PSoC5/PC.c ****         }
1312:.\Generated_Source\PSoC5/PC.c ****         else
1313:.\Generated_Source\PSoC5/PC.c ****         {
1314:.\Generated_Source\PSoC5/PC.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/PC.c ****             size = 1u;
 1529              		.loc 1 1315 0
 1530 002c 0123     		movs	r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 51


 1531 002e FB71     		strb	r3, [r7, #7]
 1532              	.L99:
1316:.\Generated_Source\PSoC5/PC.c ****         }
1317:.\Generated_Source\PSoC5/PC.c **** 
1318:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/PC.c **** 
1320:.\Generated_Source\PSoC5/PC.c ****     return(size);
 1533              		.loc 1 1320 0
 1534 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:.\Generated_Source\PSoC5/PC.c ****     }
 1535              		.loc 1 1321 0
 1536 0032 1846     		mov	r0, r3
 1537 0034 0C37     		adds	r7, r7, #12
 1538              		.cfi_def_cfa_offset 4
 1539 0036 BD46     		mov	sp, r7
 1540              		.cfi_def_cfa_register 13
 1541              		@ sp needed
 1542 0038 5DF8047B 		ldr	r7, [sp], #4
 1543              		.cfi_restore 7
 1544              		.cfi_def_cfa_offset 0
 1545 003c 7047     		bx	lr
 1546              	.L103:
 1547 003e 00BF     		.align	2
 1548              	.L102:
 1549 0040 65640040 		.word	1073767525
 1550              		.cfi_endproc
 1551              	.LFE23:
 1552              		.size	PC_GetTxBufferSize, .-PC_GetTxBufferSize
 1553              		.section	.text.PC_ClearTxBuffer,"ax",%progbits
 1554              		.align	2
 1555              		.global	PC_ClearTxBuffer
 1556              		.thumb
 1557              		.thumb_func
 1558              		.type	PC_ClearTxBuffer, %function
 1559              	PC_ClearTxBuffer:
 1560              	.LFB24:
1322:.\Generated_Source\PSoC5/PC.c **** 
1323:.\Generated_Source\PSoC5/PC.c **** 
1324:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_ClearTxBuffer
1326:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/PC.c ****     *
1328:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1329:.\Generated_Source\PSoC5/PC.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/PC.c ****     *
1331:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/PC.c ****     *  None.
1333:.\Generated_Source\PSoC5/PC.c ****     *
1334:.\Generated_Source\PSoC5/PC.c ****     * Return:
1335:.\Generated_Source\PSoC5/PC.c ****     *  None.
1336:.\Generated_Source\PSoC5/PC.c ****     *
1337:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/PC.c ****     *  PC_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/PC.c ****     *
1341:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/PC.c ****     *  No.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 52


1343:.\Generated_Source\PSoC5/PC.c ****     *
1344:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1345:.\Generated_Source\PSoC5/PC.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/PC.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/PC.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/PC.c ****     *
1349:.\Generated_Source\PSoC5/PC.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/PC.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/PC.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/PC.c ****     *
1353:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/PC.c ****     void PC_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/PC.c ****     {
 1561              		.loc 1 1355 0
 1562              		.cfi_startproc
 1563              		@ args = 0, pretend = 0, frame = 8
 1564              		@ frame_needed = 1, uses_anonymous_args = 0
 1565 0000 80B5     		push	{r7, lr}
 1566              		.cfi_def_cfa_offset 8
 1567              		.cfi_offset 7, -8
 1568              		.cfi_offset 14, -4
 1569 0002 82B0     		sub	sp, sp, #8
 1570              		.cfi_def_cfa_offset 16
 1571 0004 00AF     		add	r7, sp, #0
 1572              		.cfi_def_cfa_register 7
1356:.\Generated_Source\PSoC5/PC.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/PC.c **** 
1358:.\Generated_Source\PSoC5/PC.c ****         enableInterrupts = CyEnterCriticalSection();
 1573              		.loc 1 1358 0
 1574 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1575 000a 0346     		mov	r3, r0
 1576 000c FB71     		strb	r3, [r7, #7]
1359:.\Generated_Source\PSoC5/PC.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/PC.c ****         PC_TXDATA_AUX_CTL_REG |= (uint8)  PC_TX_FIFO_CLR;
 1577              		.loc 1 1360 0
 1578 000e 0B4A     		ldr	r2, .L105
 1579 0010 0A4B     		ldr	r3, .L105
 1580 0012 1B78     		ldrb	r3, [r3]
 1581 0014 DBB2     		uxtb	r3, r3
 1582 0016 43F00103 		orr	r3, r3, #1
 1583 001a DBB2     		uxtb	r3, r3
 1584 001c 1370     		strb	r3, [r2]
1361:.\Generated_Source\PSoC5/PC.c ****         PC_TXDATA_AUX_CTL_REG &= (uint8) ~PC_TX_FIFO_CLR;
 1585              		.loc 1 1361 0
 1586 001e 074A     		ldr	r2, .L105
 1587 0020 064B     		ldr	r3, .L105
 1588 0022 1B78     		ldrb	r3, [r3]
 1589 0024 DBB2     		uxtb	r3, r3
 1590 0026 23F00103 		bic	r3, r3, #1
 1591 002a DBB2     		uxtb	r3, r3
 1592 002c 1370     		strb	r3, [r2]
1362:.\Generated_Source\PSoC5/PC.c ****         CyExitCriticalSection(enableInterrupts);
 1593              		.loc 1 1362 0
 1594 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1595 0030 1846     		mov	r0, r3
 1596 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC5/PC.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 53


1364:.\Generated_Source\PSoC5/PC.c ****     #if (PC_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/PC.c **** 
1366:.\Generated_Source\PSoC5/PC.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/PC.c ****         PC_DisableTxInt();
1368:.\Generated_Source\PSoC5/PC.c **** 
1369:.\Generated_Source\PSoC5/PC.c ****         PC_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/PC.c ****         PC_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/PC.c **** 
1372:.\Generated_Source\PSoC5/PC.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/PC.c ****         PC_EnableTxInt();
1374:.\Generated_Source\PSoC5/PC.c **** 
1375:.\Generated_Source\PSoC5/PC.c ****     #endif /* (PC_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/PC.c ****     }
 1597              		.loc 1 1376 0
 1598 0036 0837     		adds	r7, r7, #8
 1599              		.cfi_def_cfa_offset 8
 1600 0038 BD46     		mov	sp, r7
 1601              		.cfi_def_cfa_register 13
 1602              		@ sp needed
 1603 003a 80BD     		pop	{r7, pc}
 1604              	.L106:
 1605              		.align	2
 1606              	.L105:
 1607 003c 95640040 		.word	1073767573
 1608              		.cfi_endproc
 1609              	.LFE24:
 1610              		.size	PC_ClearTxBuffer, .-PC_ClearTxBuffer
 1611              		.section	.text.PC_SendBreak,"ax",%progbits
 1612              		.align	2
 1613              		.global	PC_SendBreak
 1614              		.thumb
 1615              		.thumb_func
 1616              		.type	PC_SendBreak, %function
 1617              	PC_SendBreak:
 1618              	.LFB25:
1377:.\Generated_Source\PSoC5/PC.c **** 
1378:.\Generated_Source\PSoC5/PC.c **** 
1379:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SendBreak
1381:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/PC.c ****     *
1383:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1384:.\Generated_Source\PSoC5/PC.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/PC.c ****     *
1386:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/PC.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/PC.c ****     *   PC_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/PC.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/PC.c ****     *   PC_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/PC.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/PC.c ****     *   PC_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/PC.c ****     *       then return.
1394:.\Generated_Source\PSoC5/PC.c ****     *   PC_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/PC.c ****     *      PC_SEND_BREAK and PC_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/PC.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/PC.c ****     *
1398:.\Generated_Source\PSoC5/PC.c ****     * Return:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 54


1399:.\Generated_Source\PSoC5/PC.c ****     *  None.
1400:.\Generated_Source\PSoC5/PC.c ****     *
1401:.\Generated_Source\PSoC5/PC.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/PC.c ****     *  PC_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/PC.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/PC.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/PC.c ****     *
1406:.\Generated_Source\PSoC5/PC.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/PC.c ****     *  No.
1408:.\Generated_Source\PSoC5/PC.c ****     *
1409:.\Generated_Source\PSoC5/PC.c ****     * Theory:
1410:.\Generated_Source\PSoC5/PC.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/PC.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/PC.c ****     *  operation.
1413:.\Generated_Source\PSoC5/PC.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/PC.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/PC.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/PC.c ****     *     complete.
1417:.\Generated_Source\PSoC5/PC.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/PC.c ****     *     operation
1419:.\Generated_Source\PSoC5/PC.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/PC.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/PC.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/PC.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/PC.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/PC.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/PC.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/PC.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/PC.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/PC.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/PC.c ****     *     When interrupt appear with PC_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/PC.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/PC.c ****     *
1432:.\Generated_Source\PSoC5/PC.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/PC.c ****     *  The PC_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/PC.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/PC.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/PC.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/PC.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/PC.c ****     *
1439:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/PC.c ****     void PC_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/PC.c ****     {
 1619              		.loc 1 1441 0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 16
 1622              		@ frame_needed = 1, uses_anonymous_args = 0
 1623              		@ link register save eliminated.
 1624 0000 80B4     		push	{r7}
 1625              		.cfi_def_cfa_offset 4
 1626              		.cfi_offset 7, -4
 1627 0002 85B0     		sub	sp, sp, #20
 1628              		.cfi_def_cfa_offset 24
 1629 0004 00AF     		add	r7, sp, #0
 1630              		.cfi_def_cfa_register 7
 1631 0006 0346     		mov	r3, r0
 1632 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 55


1442:.\Generated_Source\PSoC5/PC.c **** 
1443:.\Generated_Source\PSoC5/PC.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/PC.c ****         if(PC_initVar != 0u)
 1633              		.loc 1 1444 0
 1634 000a 1F4B     		ldr	r3, .L115
 1635 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1636 000e 002B     		cmp	r3, #0
 1637 0010 35D0     		beq	.L107
 1638              	.LBB2:
1445:.\Generated_Source\PSoC5/PC.c ****         {
1446:.\Generated_Source\PSoC5/PC.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/PC.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/PC.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/PC.c **** 
1450:.\Generated_Source\PSoC5/PC.c ****         #if(PC_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/PC.c **** 
1452:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/PC.c ****             {
1455:.\Generated_Source\PSoC5/PC.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/PC.c ****                 PC_WriteControlRegister(PC_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/PC.c ****                                                       PC_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/PC.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/PC.c ****                 PC_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/PC.c **** 
1461:.\Generated_Source\PSoC5/PC.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/PC.c ****                 {
1463:.\Generated_Source\PSoC5/PC.c ****                     tmpStat = PC_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/PC.c ****                 }
1465:.\Generated_Source\PSoC5/PC.c ****                 while((tmpStat & PC_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/PC.c ****             }
1467:.\Generated_Source\PSoC5/PC.c **** 
1468:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/PC.c ****             {
1471:.\Generated_Source\PSoC5/PC.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/PC.c ****                 {
1473:.\Generated_Source\PSoC5/PC.c ****                     tmpStat = PC_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/PC.c ****                 }
1475:.\Generated_Source\PSoC5/PC.c ****                 while(((uint8)~tmpStat & PC_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/PC.c ****             }
1477:.\Generated_Source\PSoC5/PC.c **** 
1478:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_REINIT) ||
1480:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/PC.c ****             {
1482:.\Generated_Source\PSoC5/PC.c ****                 PC_WriteControlRegister(PC_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/PC.c ****                                               (uint8)~PC_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/PC.c ****             }
1485:.\Generated_Source\PSoC5/PC.c **** 
1486:.\Generated_Source\PSoC5/PC.c ****         #else /* PC_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/PC.c **** 
1488:.\Generated_Source\PSoC5/PC.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/PC.c **** 
1490:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_SEND_BREAK) ||
 1639              		.loc 1 1490 0
 1640 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 56


 1641 0014 002B     		cmp	r3, #0
 1642 0016 02D0     		beq	.L109
 1643              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1644 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1645 001a 032B     		cmp	r3, #3
 1646 001c 12D1     		bne	.L110
 1647              	.L109:
1491:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/PC.c ****             {
1493:.\Generated_Source\PSoC5/PC.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/PC.c ****                 #if( (PC_PARITY_TYPE != PC__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/PC.c ****                                     (PC_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/PC.c ****                     PC_WriteControlRegister(PC_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/PC.c ****                                                           PC_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/PC.c ****                 #endif /* End PC_PARITY_TYPE != PC__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/PC.c **** 
1500:.\Generated_Source\PSoC5/PC.c ****                 #if(PC_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/PC.c ****                     txPeriod = PC_TXBITCLKTX_COMPLETE_REG;
 1648              		.loc 1 1501 0 is_stmt 1
 1649 001e 1B4B     		ldr	r3, .L115+4
 1650 0020 1B78     		ldrb	r3, [r3]
 1651 0022 DAB2     		uxtb	r2, r3
 1652 0024 1A4B     		ldr	r3, .L115+8
 1653 0026 1A70     		strb	r2, [r3]
1502:.\Generated_Source\PSoC5/PC.c ****                     PC_TXBITCLKTX_COMPLETE_REG = PC_TXBITCTR_BREAKBITS;
 1654              		.loc 1 1502 0
 1655 0028 184B     		ldr	r3, .L115+4
 1656 002a 6722     		movs	r2, #103
 1657 002c 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/PC.c ****                 #else
1504:.\Generated_Source\PSoC5/PC.c ****                     txPeriod = PC_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/PC.c ****                     PC_TXBITCTR_PERIOD_REG = PC_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/PC.c ****                 #endif /* End PC_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/PC.c **** 
1508:.\Generated_Source\PSoC5/PC.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/PC.c ****                 PC_TXDATA_REG = 0u;
 1658              		.loc 1 1509 0
 1659 002e 194B     		ldr	r3, .L115+12
 1660 0030 0022     		movs	r2, #0
 1661 0032 1A70     		strb	r2, [r3]
 1662              	.L111:
1510:.\Generated_Source\PSoC5/PC.c **** 
1511:.\Generated_Source\PSoC5/PC.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/PC.c ****                 {
1513:.\Generated_Source\PSoC5/PC.c ****                     tmpStat = PC_TXSTATUS_REG;
 1663              		.loc 1 1513 0 discriminator 1
 1664 0034 184B     		ldr	r3, .L115+16
 1665 0036 1B78     		ldrb	r3, [r3]
 1666 0038 FB73     		strb	r3, [r7, #15]
1514:.\Generated_Source\PSoC5/PC.c ****                 }
1515:.\Generated_Source\PSoC5/PC.c ****                 while((tmpStat & PC_TX_STS_FIFO_EMPTY) != 0u);
 1667              		.loc 1 1515 0 discriminator 1
 1668 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1669 003c 03F00203 		and	r3, r3, #2
 1670 0040 002B     		cmp	r3, #0
 1671 0042 F7D1     		bne	.L111
 1672              	.L110:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 57


1516:.\Generated_Source\PSoC5/PC.c ****             }
1517:.\Generated_Source\PSoC5/PC.c **** 
1518:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_WAIT_FOR_COMPLETE_REINIT) ||
 1673              		.loc 1 1518 0
 1674 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1675 0046 012B     		cmp	r3, #1
 1676 0048 02D0     		beq	.L112
 1677              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1678 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1679 004c 032B     		cmp	r3, #3
 1680 004e 09D1     		bne	.L113
 1681              	.L112:
1519:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/PC.c ****             {
1521:.\Generated_Source\PSoC5/PC.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/PC.c ****                 {
1523:.\Generated_Source\PSoC5/PC.c ****                     tmpStat = PC_TXSTATUS_REG;
 1682              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1683 0050 114B     		ldr	r3, .L115+16
 1684 0052 1B78     		ldrb	r3, [r3]
 1685 0054 FB73     		strb	r3, [r7, #15]
1524:.\Generated_Source\PSoC5/PC.c ****                 }
1525:.\Generated_Source\PSoC5/PC.c ****                 while(((uint8)~tmpStat & PC_TX_STS_COMPLETE) != 0u);
 1686              		.loc 1 1525 0 discriminator 1
 1687 0056 FB7B     		ldrb	r3, [r7, #15]
 1688 0058 DB43     		mvns	r3, r3
 1689 005a DBB2     		uxtb	r3, r3
 1690 005c 03F00103 		and	r3, r3, #1
 1691 0060 002B     		cmp	r3, #0
 1692 0062 F5D1     		bne	.L112
 1693              	.L113:
1526:.\Generated_Source\PSoC5/PC.c ****             }
1527:.\Generated_Source\PSoC5/PC.c **** 
1528:.\Generated_Source\PSoC5/PC.c ****             if( (retMode == PC_WAIT_FOR_COMPLETE_REINIT) ||
 1694              		.loc 1 1528 0
 1695 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1696 0066 012B     		cmp	r3, #1
 1697 0068 05D0     		beq	.L114
 1698              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1699 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1700 006c 022B     		cmp	r3, #2
 1701 006e 02D0     		beq	.L114
1529:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_REINIT) ||
 1702              		.loc 1 1529 0 is_stmt 1
 1703 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1704 0072 032B     		cmp	r3, #3
 1705 0074 03D1     		bne	.L107
 1706              	.L114:
1530:.\Generated_Source\PSoC5/PC.c ****                 (retMode == PC_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/PC.c ****             {
1532:.\Generated_Source\PSoC5/PC.c **** 
1533:.\Generated_Source\PSoC5/PC.c ****             #if(PC_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/PC.c ****                 PC_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1707              		.loc 1 1534 0
 1708 0076 054B     		ldr	r3, .L115+4
 1709 0078 054A     		ldr	r2, .L115+8
 1710 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 58


 1711 007c 1A70     		strb	r2, [r3]
 1712              	.L107:
 1713              	.LBE2:
1535:.\Generated_Source\PSoC5/PC.c ****             #else
1536:.\Generated_Source\PSoC5/PC.c ****                 PC_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/PC.c ****             #endif /* End PC_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/PC.c **** 
1539:.\Generated_Source\PSoC5/PC.c ****             #if( (PC_PARITY_TYPE != PC__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/PC.c ****                  (PC_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/PC.c ****                 PC_WriteControlRegister(PC_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/PC.c ****                                                       (uint8) ~PC_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/PC.c ****             #endif /* End PC_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/PC.c ****             }
1545:.\Generated_Source\PSoC5/PC.c ****         #endif    /* End PC_HD_ENABLED */
1546:.\Generated_Source\PSoC5/PC.c ****         }
1547:.\Generated_Source\PSoC5/PC.c ****     }
 1714              		.loc 1 1547 0
 1715 007e 1437     		adds	r7, r7, #20
 1716              		.cfi_def_cfa_offset 4
 1717 0080 BD46     		mov	sp, r7
 1718              		.cfi_def_cfa_register 13
 1719              		@ sp needed
 1720 0082 5DF8047B 		ldr	r7, [sp], #4
 1721              		.cfi_restore 7
 1722              		.cfi_def_cfa_offset 0
 1723 0086 7047     		bx	lr
 1724              	.L116:
 1725              		.align	2
 1726              	.L115:
 1727 0088 00000000 		.word	PC_initVar
 1728 008c 34640040 		.word	1073767476
 1729 0090 08000000 		.word	txPeriod.5008
 1730 0094 45640040 		.word	1073767493
 1731 0098 65640040 		.word	1073767525
 1732              		.cfi_endproc
 1733              	.LFE25:
 1734              		.size	PC_SendBreak, .-PC_SendBreak
 1735              		.section	.text.PC_SetTxAddressMode,"ax",%progbits
 1736              		.align	2
 1737              		.global	PC_SetTxAddressMode
 1738              		.thumb
 1739              		.thumb_func
 1740              		.type	PC_SetTxAddressMode, %function
 1741              	PC_SetTxAddressMode:
 1742              	.LFB26:
1548:.\Generated_Source\PSoC5/PC.c **** 
1549:.\Generated_Source\PSoC5/PC.c **** 
1550:.\Generated_Source\PSoC5/PC.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/PC.c ****     * Function Name: PC_SetTxAddressMode
1552:.\Generated_Source\PSoC5/PC.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/PC.c ****     *
1554:.\Generated_Source\PSoC5/PC.c ****     * Summary:
1555:.\Generated_Source\PSoC5/PC.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/PC.c ****     *
1557:.\Generated_Source\PSoC5/PC.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/PC.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/PC.c ****     *       PC_SET_SPACE - Configure the transmitter to send the next
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 59


1560:.\Generated_Source\PSoC5/PC.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/PC.c ****     *       PC_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/PC.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/PC.c ****     *
1564:.\Generated_Source\PSoC5/PC.c ****     * Return:
1565:.\Generated_Source\PSoC5/PC.c ****     *  None.
1566:.\Generated_Source\PSoC5/PC.c ****     *
1567:.\Generated_Source\PSoC5/PC.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/PC.c ****     *  This function sets and clears PC_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/PC.c ****     *  register.
1570:.\Generated_Source\PSoC5/PC.c ****     *
1571:.\Generated_Source\PSoC5/PC.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/PC.c ****     void PC_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/PC.c ****     {
 1743              		.loc 1 1573 0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 8
 1746              		@ frame_needed = 1, uses_anonymous_args = 0
 1747              		@ link register save eliminated.
 1748 0000 80B4     		push	{r7}
 1749              		.cfi_def_cfa_offset 4
 1750              		.cfi_offset 7, -4
 1751 0002 83B0     		sub	sp, sp, #12
 1752              		.cfi_def_cfa_offset 16
 1753 0004 00AF     		add	r7, sp, #0
 1754              		.cfi_def_cfa_register 7
 1755 0006 0346     		mov	r3, r0
 1756 0008 FB71     		strb	r3, [r7, #7]
1574:.\Generated_Source\PSoC5/PC.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC5/PC.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC5/PC.c ****         {
1577:.\Generated_Source\PSoC5/PC.c ****         #if( PC_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC5/PC.c ****             PC_WriteControlRegister(PC_ReadControlRegister() |
1579:.\Generated_Source\PSoC5/PC.c ****                                                   PC_CTRL_MARK);
1580:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC5/PC.c ****         }
1582:.\Generated_Source\PSoC5/PC.c ****         else
1583:.\Generated_Source\PSoC5/PC.c ****         {
1584:.\Generated_Source\PSoC5/PC.c ****         #if( PC_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC5/PC.c ****             PC_WriteControlRegister(PC_ReadControlRegister() &
1586:.\Generated_Source\PSoC5/PC.c ****                                                   (uint8) ~PC_CTRL_MARK);
1587:.\Generated_Source\PSoC5/PC.c ****         #endif /* End PC_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC5/PC.c ****         }
1589:.\Generated_Source\PSoC5/PC.c ****     }
 1757              		.loc 1 1589 0
 1758 000a 0C37     		adds	r7, r7, #12
 1759              		.cfi_def_cfa_offset 4
 1760 000c BD46     		mov	sp, r7
 1761              		.cfi_def_cfa_register 13
 1762              		@ sp needed
 1763 000e 5DF8047B 		ldr	r7, [sp], #4
 1764              		.cfi_restore 7
 1765              		.cfi_def_cfa_offset 0
 1766 0012 7047     		bx	lr
 1767              		.cfi_endproc
 1768              	.LFE26:
 1769              		.size	PC_SetTxAddressMode, .-PC_SetTxAddressMode
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 60


 1770              		.bss
 1771              	txPeriod.5008:
 1772 0008 00       		.space	1
 1773 0009 00       		.text
 1774              	.Letext0:
 1775              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1776              		.section	.debug_info,"",%progbits
 1777              	.Ldebug_info0:
 1778 0000 E9050000 		.4byte	0x5e9
 1779 0004 0400     		.2byte	0x4
 1780 0006 00000000 		.4byte	.Ldebug_abbrev0
 1781 000a 04       		.byte	0x4
 1782 000b 01       		.uleb128 0x1
 1783 000c 2F020000 		.4byte	.LASF72
 1784 0010 01       		.byte	0x1
 1785 0011 F5010000 		.4byte	.LASF73
 1786 0015 32030000 		.4byte	.LASF74
 1787 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1788 001d 00000000 		.4byte	0
 1789 0021 00000000 		.4byte	.Ldebug_line0
 1790 0025 02       		.uleb128 0x2
 1791 0026 01       		.byte	0x1
 1792 0027 06       		.byte	0x6
 1793 0028 78000000 		.4byte	.LASF0
 1794 002c 02       		.uleb128 0x2
 1795 002d 01       		.byte	0x1
 1796 002e 08       		.byte	0x8
 1797 002f DF020000 		.4byte	.LASF1
 1798 0033 02       		.uleb128 0x2
 1799 0034 02       		.byte	0x2
 1800 0035 05       		.byte	0x5
 1801 0036 14030000 		.4byte	.LASF2
 1802 003a 02       		.uleb128 0x2
 1803 003b 02       		.byte	0x2
 1804 003c 07       		.byte	0x7
 1805 003d 9B010000 		.4byte	.LASF3
 1806 0041 02       		.uleb128 0x2
 1807 0042 04       		.byte	0x4
 1808 0043 05       		.byte	0x5
 1809 0044 C3000000 		.4byte	.LASF4
 1810 0048 02       		.uleb128 0x2
 1811 0049 04       		.byte	0x4
 1812 004a 07       		.byte	0x7
 1813 004b 70010000 		.4byte	.LASF5
 1814 004f 02       		.uleb128 0x2
 1815 0050 08       		.byte	0x8
 1816 0051 05       		.byte	0x5
 1817 0052 6A000000 		.4byte	.LASF6
 1818 0056 02       		.uleb128 0x2
 1819 0057 08       		.byte	0x8
 1820 0058 07       		.byte	0x7
 1821 0059 48000000 		.4byte	.LASF7
 1822 005d 03       		.uleb128 0x3
 1823 005e 04       		.byte	0x4
 1824 005f 05       		.byte	0x5
 1825 0060 696E7400 		.ascii	"int\000"
 1826 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 61


 1827 0065 04       		.byte	0x4
 1828 0066 07       		.byte	0x7
 1829 0067 54010000 		.4byte	.LASF8
 1830 006b 04       		.uleb128 0x4
 1831 006c CC000000 		.4byte	.LASF9
 1832 0070 02       		.byte	0x2
 1833 0071 B4       		.byte	0xb4
 1834 0072 2C000000 		.4byte	0x2c
 1835 0076 04       		.uleb128 0x4
 1836 0077 00000000 		.4byte	.LASF10
 1837 007b 02       		.byte	0x2
 1838 007c B5       		.byte	0xb5
 1839 007d 3A000000 		.4byte	0x3a
 1840 0081 04       		.uleb128 0x4
 1841 0082 01010000 		.4byte	.LASF11
 1842 0086 02       		.byte	0x2
 1843 0087 B6       		.byte	0xb6
 1844 0088 48000000 		.4byte	0x48
 1845 008c 02       		.uleb128 0x2
 1846 008d 04       		.byte	0x4
 1847 008e 04       		.byte	0x4
 1848 008f D4020000 		.4byte	.LASF12
 1849 0093 02       		.uleb128 0x2
 1850 0094 08       		.byte	0x8
 1851 0095 04       		.byte	0x4
 1852 0096 D2000000 		.4byte	.LASF13
 1853 009a 04       		.uleb128 0x4
 1854 009b C6030000 		.4byte	.LASF14
 1855 009f 02       		.byte	0x2
 1856 00a0 C5       		.byte	0xc5
 1857 00a1 A5000000 		.4byte	0xa5
 1858 00a5 02       		.uleb128 0x2
 1859 00a6 01       		.byte	0x1
 1860 00a7 08       		.byte	0x8
 1861 00a8 99030000 		.4byte	.LASF15
 1862 00ac 05       		.uleb128 0x5
 1863 00ad DA020000 		.4byte	.LASF16
 1864 00b1 02       		.byte	0x2
 1865 00b2 5E01     		.2byte	0x15e
 1866 00b4 B8000000 		.4byte	0xb8
 1867 00b8 06       		.uleb128 0x6
 1868 00b9 6B000000 		.4byte	0x6b
 1869 00bd 06       		.uleb128 0x6
 1870 00be 76000000 		.4byte	0x76
 1871 00c2 05       		.uleb128 0x5
 1872 00c3 E7010000 		.4byte	.LASF17
 1873 00c7 02       		.byte	0x2
 1874 00c8 6001     		.2byte	0x160
 1875 00ca CE000000 		.4byte	0xce
 1876 00ce 06       		.uleb128 0x6
 1877 00cf 81000000 		.4byte	0x81
 1878 00d3 02       		.uleb128 0x2
 1879 00d4 04       		.byte	0x4
 1880 00d5 07       		.byte	0x7
 1881 00d6 13020000 		.4byte	.LASF18
 1882 00da 07       		.uleb128 0x7
 1883 00db 07000000 		.4byte	.LASF19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 62


 1884 00df 01       		.byte	0x1
 1885 00e0 4C       		.byte	0x4c
 1886 00e1 00000000 		.4byte	.LFB0
 1887 00e5 20000000 		.4byte	.LFE0-.LFB0
 1888 00e9 01       		.uleb128 0x1
 1889 00ea 9C       		.byte	0x9c
 1890 00eb 07       		.uleb128 0x7
 1891 00ec DD030000 		.4byte	.LASF20
 1892 00f0 01       		.byte	0x1
 1893 00f1 6A       		.byte	0x6a
 1894 00f2 00000000 		.4byte	.LFB1
 1895 00f6 58000000 		.4byte	.LFE1-.LFB1
 1896 00fa 01       		.uleb128 0x1
 1897 00fb 9C       		.byte	0x9c
 1898 00fc 08       		.uleb128 0x8
 1899 00fd 21040000 		.4byte	.LASF21
 1900 0101 01       		.byte	0x1
 1901 0102 B7       		.byte	0xb7
 1902 0103 00000000 		.4byte	.LFB2
 1903 0107 68000000 		.4byte	.LFE2-.LFB2
 1904 010b 01       		.uleb128 0x1
 1905 010c 9C       		.byte	0x9c
 1906 010d 20010000 		.4byte	0x120
 1907 0111 09       		.uleb128 0x9
 1908 0112 F5030000 		.4byte	.LASF23
 1909 0116 01       		.byte	0x1
 1910 0117 B9       		.byte	0xb9
 1911 0118 6B000000 		.4byte	0x6b
 1912 011c 02       		.uleb128 0x2
 1913 011d 91       		.byte	0x91
 1914 011e 77       		.sleb128 -9
 1915 011f 00       		.byte	0
 1916 0120 08       		.uleb128 0x8
 1917 0121 CE010000 		.4byte	.LASF22
 1918 0125 01       		.byte	0x1
 1919 0126 F0       		.byte	0xf0
 1920 0127 00000000 		.4byte	.LFB3
 1921 012b 68000000 		.4byte	.LFE3-.LFB3
 1922 012f 01       		.uleb128 0x1
 1923 0130 9C       		.byte	0x9c
 1924 0131 44010000 		.4byte	0x144
 1925 0135 09       		.uleb128 0x9
 1926 0136 F5030000 		.4byte	.LASF23
 1927 013a 01       		.byte	0x1
 1928 013b F2       		.byte	0xf2
 1929 013c 6B000000 		.4byte	0x6b
 1930 0140 02       		.uleb128 0x2
 1931 0141 91       		.byte	0x91
 1932 0142 77       		.sleb128 -9
 1933 0143 00       		.byte	0
 1934 0144 0A       		.uleb128 0xa
 1935 0145 84000000 		.4byte	.LASF49
 1936 0149 01       		.byte	0x1
 1937 014a 2701     		.2byte	0x127
 1938 014c 6B000000 		.4byte	0x6b
 1939 0150 00000000 		.4byte	.LFB4
 1940 0154 10000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 63


 1941 0158 01       		.uleb128 0x1
 1942 0159 9C       		.byte	0x9c
 1943 015a 0B       		.uleb128 0xb
 1944 015b AE030000 		.4byte	.LASF24
 1945 015f 01       		.byte	0x1
 1946 0160 3F01     		.2byte	0x13f
 1947 0162 00000000 		.4byte	.LFB5
 1948 0166 14000000 		.4byte	.LFE5-.LFB5
 1949 016a 01       		.uleb128 0x1
 1950 016b 9C       		.byte	0x9c
 1951 016c 80010000 		.4byte	0x180
 1952 0170 0C       		.uleb128 0xc
 1953 0171 19010000 		.4byte	.LASF26
 1954 0175 01       		.byte	0x1
 1955 0176 3F01     		.2byte	0x13f
 1956 0178 6B000000 		.4byte	0x6b
 1957 017c 02       		.uleb128 0x2
 1958 017d 91       		.byte	0x91
 1959 017e 77       		.sleb128 -9
 1960 017f 00       		.byte	0
 1961 0180 0B       		.uleb128 0xb
 1962 0181 FE020000 		.4byte	.LASF25
 1963 0185 01       		.byte	0x1
 1964 0186 6701     		.2byte	0x167
 1965 0188 00000000 		.4byte	.LFB6
 1966 018c 20000000 		.4byte	.LFE6-.LFB6
 1967 0190 01       		.uleb128 0x1
 1968 0191 9C       		.byte	0x9c
 1969 0192 A6010000 		.4byte	0x1a6
 1970 0196 0C       		.uleb128 0xc
 1971 0197 C7010000 		.4byte	.LASF27
 1972 019b 01       		.byte	0x1
 1973 019c 6701     		.2byte	0x167
 1974 019e 6B000000 		.4byte	0x6b
 1975 01a2 02       		.uleb128 0x2
 1976 01a3 91       		.byte	0x91
 1977 01a4 77       		.sleb128 -9
 1978 01a5 00       		.byte	0
 1979 01a6 0D       		.uleb128 0xd
 1980 01a7 C6020000 		.4byte	.LASF31
 1981 01ab 01       		.byte	0x1
 1982 01ac 8801     		.2byte	0x188
 1983 01ae 6B000000 		.4byte	0x6b
 1984 01b2 00000000 		.4byte	.LFB7
 1985 01b6 98000000 		.4byte	.LFE7-.LFB7
 1986 01ba 01       		.uleb128 0x1
 1987 01bb 9C       		.byte	0x9c
 1988 01bc EE010000 		.4byte	0x1ee
 1989 01c0 0E       		.uleb128 0xe
 1990 01c1 7F030000 		.4byte	.LASF28
 1991 01c5 01       		.byte	0x1
 1992 01c6 8A01     		.2byte	0x18a
 1993 01c8 6B000000 		.4byte	0x6b
 1994 01cc 02       		.uleb128 0x2
 1995 01cd 91       		.byte	0x91
 1996 01ce 77       		.sleb128 -9
 1997 01cf 0E       		.uleb128 0xe
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 64


 1998 01d0 E5030000 		.4byte	.LASF29
 1999 01d4 01       		.byte	0x1
 2000 01d5 8E01     		.2byte	0x18e
 2001 01d7 76000000 		.4byte	0x76
 2002 01db 02       		.uleb128 0x2
 2003 01dc 91       		.byte	0x91
 2004 01dd 74       		.sleb128 -12
 2005 01de 0E       		.uleb128 0xe
 2006 01df D6010000 		.4byte	.LASF30
 2007 01e3 01       		.byte	0x1
 2008 01e4 8F01     		.2byte	0x18f
 2009 01e6 76000000 		.4byte	0x76
 2010 01ea 02       		.uleb128 0x2
 2011 01eb 91       		.byte	0x91
 2012 01ec 72       		.sleb128 -14
 2013 01ed 00       		.byte	0
 2014 01ee 0D       		.uleb128 0xd
 2015 01ef AE010000 		.4byte	.LASF32
 2016 01f3 01       		.byte	0x1
 2017 01f4 E501     		.2byte	0x1e5
 2018 01f6 6B000000 		.4byte	0x6b
 2019 01fa 00000000 		.4byte	.LFB8
 2020 01fe 40000000 		.4byte	.LFE8-.LFB8
 2021 0202 01       		.uleb128 0x1
 2022 0203 9C       		.byte	0x9c
 2023 0204 18020000 		.4byte	0x218
 2024 0208 0E       		.uleb128 0xe
 2025 0209 06040000 		.4byte	.LASF33
 2026 020d 01       		.byte	0x1
 2027 020e E701     		.2byte	0x1e7
 2028 0210 6B000000 		.4byte	0x6b
 2029 0214 02       		.uleb128 0x2
 2030 0215 91       		.byte	0x91
 2031 0216 77       		.sleb128 -9
 2032 0217 00       		.byte	0
 2033 0218 0D       		.uleb128 0xd
 2034 0219 10000000 		.4byte	.LASF34
 2035 021d 01       		.byte	0x1
 2036 021e 1402     		.2byte	0x214
 2037 0220 6B000000 		.4byte	0x6b
 2038 0224 00000000 		.4byte	.LFB9
 2039 0228 BC000000 		.4byte	.LFE9-.LFB9
 2040 022c 01       		.uleb128 0x1
 2041 022d 9C       		.byte	0x9c
 2042 022e 6F020000 		.4byte	0x26f
 2043 0232 0E       		.uleb128 0xe
 2044 0233 7F030000 		.4byte	.LASF28
 2045 0237 01       		.byte	0x1
 2046 0238 1602     		.2byte	0x216
 2047 023a 6B000000 		.4byte	0x6b
 2048 023e 02       		.uleb128 0x2
 2049 023f 91       		.byte	0x91
 2050 0240 77       		.sleb128 -9
 2051 0241 0E       		.uleb128 0xe
 2052 0242 BD020000 		.4byte	.LASF35
 2053 0246 01       		.byte	0x1
 2054 0247 1702     		.2byte	0x217
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 65


 2055 0249 6B000000 		.4byte	0x6b
 2056 024d 02       		.uleb128 0x2
 2057 024e 91       		.byte	0x91
 2058 024f 71       		.sleb128 -15
 2059 0250 0E       		.uleb128 0xe
 2060 0251 E5030000 		.4byte	.LASF29
 2061 0255 01       		.byte	0x1
 2062 0256 1A02     		.2byte	0x21a
 2063 0258 76000000 		.4byte	0x76
 2064 025c 02       		.uleb128 0x2
 2065 025d 91       		.byte	0x91
 2066 025e 74       		.sleb128 -12
 2067 025f 0E       		.uleb128 0xe
 2068 0260 D6010000 		.4byte	.LASF30
 2069 0264 01       		.byte	0x1
 2070 0265 1B02     		.2byte	0x21b
 2071 0267 76000000 		.4byte	0x76
 2072 026b 02       		.uleb128 0x2
 2073 026c 91       		.byte	0x91
 2074 026d 72       		.sleb128 -14
 2075 026e 00       		.byte	0
 2076 026f 0F       		.uleb128 0xf
 2077 0270 24020000 		.4byte	.LASF36
 2078 0274 01       		.byte	0x1
 2079 0275 7A02     		.2byte	0x27a
 2080 0277 76000000 		.4byte	0x76
 2081 027b 00000000 		.4byte	.LFB10
 2082 027f 44000000 		.4byte	.LFE10-.LFB10
 2083 0283 01       		.uleb128 0x1
 2084 0284 9C       		.byte	0x9c
 2085 0285 99020000 		.4byte	0x299
 2086 0289 0E       		.uleb128 0xe
 2087 028a 61010000 		.4byte	.LASF37
 2088 028e 01       		.byte	0x1
 2089 028f 7E02     		.2byte	0x27e
 2090 0291 76000000 		.4byte	0x76
 2091 0295 02       		.uleb128 0x2
 2092 0296 91       		.byte	0x91
 2093 0297 6E       		.sleb128 -18
 2094 0298 00       		.byte	0
 2095 0299 0D       		.uleb128 0xd
 2096 029a 86030000 		.4byte	.LASF38
 2097 029e 01       		.byte	0x1
 2098 029f AB02     		.2byte	0x2ab
 2099 02a1 76000000 		.4byte	0x76
 2100 02a5 00000000 		.4byte	.LFB11
 2101 02a9 94000000 		.4byte	.LFE11-.LFB11
 2102 02ad 01       		.uleb128 0x1
 2103 02ae 9C       		.byte	0x9c
 2104 02af C3020000 		.4byte	0x2c3
 2105 02b3 0E       		.uleb128 0xe
 2106 02b4 96010000 		.4byte	.LASF39
 2107 02b8 01       		.byte	0x1
 2108 02b9 AE02     		.2byte	0x2ae
 2109 02bb 76000000 		.4byte	0x76
 2110 02bf 02       		.uleb128 0x2
 2111 02c0 91       		.byte	0x91
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 66


 2112 02c1 76       		.sleb128 -10
 2113 02c2 00       		.byte	0
 2114 02c3 10       		.uleb128 0x10
 2115 02c4 F0000000 		.4byte	.LASF40
 2116 02c8 01       		.byte	0x1
 2117 02c9 F502     		.2byte	0x2f5
 2118 02cb 00000000 		.4byte	.LFB12
 2119 02cf 7C000000 		.4byte	.LFE12-.LFB12
 2120 02d3 01       		.uleb128 0x1
 2121 02d4 9C       		.byte	0x9c
 2122 02d5 E9020000 		.4byte	0x2e9
 2123 02d9 0E       		.uleb128 0xe
 2124 02da F5030000 		.4byte	.LASF23
 2125 02de 01       		.byte	0x1
 2126 02df F702     		.2byte	0x2f7
 2127 02e1 6B000000 		.4byte	0x6b
 2128 02e5 02       		.uleb128 0x2
 2129 02e6 91       		.byte	0x91
 2130 02e7 77       		.sleb128 -9
 2131 02e8 00       		.byte	0
 2132 02e9 0B       		.uleb128 0xb
 2133 02ea 0D040000 		.4byte	.LASF41
 2134 02ee 01       		.byte	0x1
 2135 02ef 2D03     		.2byte	0x32d
 2136 02f1 00000000 		.4byte	.LFB13
 2137 02f5 14000000 		.4byte	.LFE13-.LFB13
 2138 02f9 01       		.uleb128 0x1
 2139 02fa 9C       		.byte	0x9c
 2140 02fb 0F030000 		.4byte	0x30f
 2141 02ff 0C       		.uleb128 0xc
 2142 0300 D9000000 		.4byte	.LASF42
 2143 0304 01       		.byte	0x1
 2144 0305 2D03     		.2byte	0x32d
 2145 0307 6B000000 		.4byte	0x6b
 2146 030b 02       		.uleb128 0x2
 2147 030c 91       		.byte	0x91
 2148 030d 77       		.sleb128 -9
 2149 030e 00       		.byte	0
 2150 030f 0B       		.uleb128 0xb
 2151 0310 CC030000 		.4byte	.LASF43
 2152 0314 01       		.byte	0x1
 2153 0315 5903     		.2byte	0x359
 2154 0317 00000000 		.4byte	.LFB14
 2155 031b 20000000 		.4byte	.LFE14-.LFB14
 2156 031f 01       		.uleb128 0x1
 2157 0320 9C       		.byte	0x9c
 2158 0321 35030000 		.4byte	0x335
 2159 0325 0C       		.uleb128 0xc
 2160 0326 1C020000 		.4byte	.LASF44
 2161 032a 01       		.byte	0x1
 2162 032b 5903     		.2byte	0x359
 2163 032d 6B000000 		.4byte	0x6b
 2164 0331 02       		.uleb128 0x2
 2165 0332 91       		.byte	0x91
 2166 0333 77       		.sleb128 -9
 2167 0334 00       		.byte	0
 2168 0335 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 67


 2169 0336 21010000 		.4byte	.LASF45
 2170 033a 01       		.byte	0x1
 2171 033b 6D03     		.2byte	0x36d
 2172 033d 00000000 		.4byte	.LFB15
 2173 0341 20000000 		.4byte	.LFE15-.LFB15
 2174 0345 01       		.uleb128 0x1
 2175 0346 9C       		.byte	0x9c
 2176 0347 5B030000 		.4byte	0x35b
 2177 034b 0C       		.uleb128 0xc
 2178 034c 1C020000 		.4byte	.LASF44
 2179 0350 01       		.byte	0x1
 2180 0351 6D03     		.2byte	0x36d
 2181 0353 6B000000 		.4byte	0x6b
 2182 0357 02       		.uleb128 0x2
 2183 0358 91       		.byte	0x91
 2184 0359 77       		.sleb128 -9
 2185 035a 00       		.byte	0
 2186 035b 0B       		.uleb128 0xb
 2187 035c 50040000 		.4byte	.LASF46
 2188 0360 01       		.byte	0x1
 2189 0361 8C03     		.2byte	0x38c
 2190 0363 00000000 		.4byte	.LFB16
 2191 0367 20000000 		.4byte	.LFE16-.LFB16
 2192 036b 01       		.uleb128 0x1
 2193 036c 9C       		.byte	0x9c
 2194 036d 81030000 		.4byte	0x381
 2195 0371 0C       		.uleb128 0xc
 2196 0372 C7010000 		.4byte	.LASF27
 2197 0376 01       		.byte	0x1
 2198 0377 8C03     		.2byte	0x38c
 2199 0379 6B000000 		.4byte	0x6b
 2200 037d 02       		.uleb128 0x2
 2201 037e 91       		.byte	0x91
 2202 037f 77       		.sleb128 -9
 2203 0380 00       		.byte	0
 2204 0381 0B       		.uleb128 0xb
 2205 0382 66040000 		.4byte	.LASF47
 2206 0386 01       		.byte	0x1
 2207 0387 AE03     		.2byte	0x3ae
 2208 0389 00000000 		.4byte	.LFB17
 2209 038d 2C000000 		.4byte	.LFE17-.LFB17
 2210 0391 01       		.uleb128 0x1
 2211 0392 9C       		.byte	0x9c
 2212 0393 A7030000 		.4byte	0x3a7
 2213 0397 0C       		.uleb128 0xc
 2214 0398 1B000000 		.4byte	.LASF48
 2215 039c 01       		.byte	0x1
 2216 039d AE03     		.2byte	0x3ae
 2217 039f 6B000000 		.4byte	0x6b
 2218 03a3 02       		.uleb128 0x2
 2219 03a4 91       		.byte	0x91
 2220 03a5 77       		.sleb128 -9
 2221 03a6 00       		.byte	0
 2222 03a7 0A       		.uleb128 0xa
 2223 03a8 9E030000 		.4byte	.LASF50
 2224 03ac 01       		.byte	0x1
 2225 03ad EB03     		.2byte	0x3eb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 68


 2226 03af 6B000000 		.4byte	0x6b
 2227 03b3 00000000 		.4byte	.LFB18
 2228 03b7 18000000 		.4byte	.LFE18-.LFB18
 2229 03bb 01       		.uleb128 0x1
 2230 03bc 9C       		.byte	0x9c
 2231 03bd 0B       		.uleb128 0xb
 2232 03be 5F000000 		.4byte	.LASF51
 2233 03c2 01       		.byte	0x1
 2234 03c3 1104     		.2byte	0x411
 2235 03c5 00000000 		.4byte	.LFB19
 2236 03c9 34000000 		.4byte	.LFE19-.LFB19
 2237 03cd 01       		.uleb128 0x1
 2238 03ce 9C       		.byte	0x9c
 2239 03cf E3030000 		.4byte	0x3e3
 2240 03d3 0C       		.uleb128 0xc
 2241 03d4 1B000000 		.4byte	.LASF48
 2242 03d8 01       		.byte	0x1
 2243 03d9 1104     		.2byte	0x411
 2244 03db 6B000000 		.4byte	0x6b
 2245 03df 02       		.uleb128 0x2
 2246 03e0 91       		.byte	0x91
 2247 03e1 77       		.sleb128 -9
 2248 03e2 00       		.byte	0
 2249 03e3 10       		.uleb128 0x10
 2250 03e4 32010000 		.4byte	.LASF52
 2251 03e8 01       		.byte	0x1
 2252 03e9 7904     		.2byte	0x479
 2253 03eb 00000000 		.4byte	.LFB20
 2254 03ef 40000000 		.4byte	.LFE20-.LFB20
 2255 03f3 01       		.uleb128 0x1
 2256 03f4 9C       		.byte	0x9c
 2257 03f5 18040000 		.4byte	0x418
 2258 03f9 0C       		.uleb128 0xc
 2259 03fa 26000000 		.4byte	.LASF53
 2260 03fe 01       		.byte	0x1
 2261 03ff 7904     		.2byte	0x479
 2262 0401 18040000 		.4byte	0x418
 2263 0405 02       		.uleb128 0x2
 2264 0406 91       		.byte	0x91
 2265 0407 6C       		.sleb128 -20
 2266 0408 0E       		.uleb128 0xe
 2267 0409 BE010000 		.4byte	.LASF54
 2268 040d 01       		.byte	0x1
 2269 040e 7B04     		.2byte	0x47b
 2270 0410 76000000 		.4byte	0x76
 2271 0414 02       		.uleb128 0x2
 2272 0415 91       		.byte	0x91
 2273 0416 76       		.sleb128 -10
 2274 0417 00       		.byte	0
 2275 0418 11       		.uleb128 0x11
 2276 0419 04       		.byte	0x4
 2277 041a 1E040000 		.4byte	0x41e
 2278 041e 12       		.uleb128 0x12
 2279 041f 9A000000 		.4byte	0x9a
 2280 0423 10       		.uleb128 0x10
 2281 0424 B7000000 		.4byte	.LASF55
 2282 0428 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 69


 2283 0429 A704     		.2byte	0x4a7
 2284 042b 00000000 		.4byte	.LFB21
 2285 042f 40000000 		.4byte	.LFE21-.LFB21
 2286 0433 01       		.uleb128 0x1
 2287 0434 9C       		.byte	0x9c
 2288 0435 67040000 		.4byte	0x467
 2289 0439 0C       		.uleb128 0xc
 2290 043a 26000000 		.4byte	.LASF53
 2291 043e 01       		.byte	0x1
 2292 043f A704     		.2byte	0x4a7
 2293 0441 67040000 		.4byte	0x467
 2294 0445 02       		.uleb128 0x2
 2295 0446 91       		.byte	0x91
 2296 0447 6C       		.sleb128 -20
 2297 0448 0C       		.uleb128 0xc
 2298 0449 69030000 		.4byte	.LASF56
 2299 044d 01       		.byte	0x1
 2300 044e A704     		.2byte	0x4a7
 2301 0450 6B000000 		.4byte	0x6b
 2302 0454 02       		.uleb128 0x2
 2303 0455 91       		.byte	0x91
 2304 0456 6B       		.sleb128 -21
 2305 0457 0E       		.uleb128 0xe
 2306 0458 BE010000 		.4byte	.LASF54
 2307 045c 01       		.byte	0x1
 2308 045d AA04     		.2byte	0x4aa
 2309 045f 6B000000 		.4byte	0x6b
 2310 0463 02       		.uleb128 0x2
 2311 0464 91       		.byte	0x91
 2312 0465 77       		.sleb128 -9
 2313 0466 00       		.byte	0
 2314 0467 11       		.uleb128 0x11
 2315 0468 04       		.byte	0x4
 2316 0469 6D040000 		.4byte	0x46d
 2317 046d 12       		.uleb128 0x12
 2318 046e 6B000000 		.4byte	0x6b
 2319 0472 10       		.uleb128 0x10
 2320 0473 E5000000 		.4byte	.LASF57
 2321 0477 01       		.byte	0x1
 2322 0478 CE04     		.2byte	0x4ce
 2323 047a 00000000 		.4byte	.LFB22
 2324 047e 30000000 		.4byte	.LFE22-.LFB22
 2325 0482 01       		.uleb128 0x1
 2326 0483 9C       		.byte	0x9c
 2327 0484 98040000 		.4byte	0x498
 2328 0488 0C       		.uleb128 0xc
 2329 0489 1B000000 		.4byte	.LASF48
 2330 048d 01       		.byte	0x1
 2331 048e CE04     		.2byte	0x4ce
 2332 0490 6B000000 		.4byte	0x6b
 2333 0494 02       		.uleb128 0x2
 2334 0495 91       		.byte	0x91
 2335 0496 77       		.sleb128 -9
 2336 0497 00       		.byte	0
 2337 0498 0D       		.uleb128 0xd
 2338 0499 A4000000 		.4byte	.LASF58
 2339 049d 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 70


 2340 049e F904     		.2byte	0x4f9
 2341 04a0 6B000000 		.4byte	0x6b
 2342 04a4 00000000 		.4byte	.LFB23
 2343 04a8 44000000 		.4byte	.LFE23-.LFB23
 2344 04ac 01       		.uleb128 0x1
 2345 04ad 9C       		.byte	0x9c
 2346 04ae C2040000 		.4byte	0x4c2
 2347 04b2 0E       		.uleb128 0xe
 2348 04b3 96010000 		.4byte	.LASF39
 2349 04b7 01       		.byte	0x1
 2350 04b8 FC04     		.2byte	0x4fc
 2351 04ba 6B000000 		.4byte	0x6b
 2352 04be 02       		.uleb128 0x2
 2353 04bf 91       		.byte	0x91
 2354 04c0 77       		.sleb128 -9
 2355 04c1 00       		.byte	0
 2356 04c2 10       		.uleb128 0x10
 2357 04c3 ED020000 		.4byte	.LASF59
 2358 04c7 01       		.byte	0x1
 2359 04c8 4A05     		.2byte	0x54a
 2360 04ca 00000000 		.4byte	.LFB24
 2361 04ce 40000000 		.4byte	.LFE24-.LFB24
 2362 04d2 01       		.uleb128 0x1
 2363 04d3 9C       		.byte	0x9c
 2364 04d4 E8040000 		.4byte	0x4e8
 2365 04d8 0E       		.uleb128 0xe
 2366 04d9 F5030000 		.4byte	.LASF23
 2367 04dd 01       		.byte	0x1
 2368 04de 4C05     		.2byte	0x54c
 2369 04e0 6B000000 		.4byte	0x6b
 2370 04e4 02       		.uleb128 0x2
 2371 04e5 91       		.byte	0x91
 2372 04e6 77       		.sleb128 -9
 2373 04e7 00       		.byte	0
 2374 04e8 0B       		.uleb128 0xb
 2375 04e9 3F010000 		.4byte	.LASF60
 2376 04ed 01       		.byte	0x1
 2377 04ee A005     		.2byte	0x5a0
 2378 04f0 00000000 		.4byte	.LFB25
 2379 04f4 9C000000 		.4byte	.LFE25-.LFB25
 2380 04f8 01       		.uleb128 0x1
 2381 04f9 9C       		.byte	0x9c
 2382 04fa 39050000 		.4byte	0x539
 2383 04fe 0C       		.uleb128 0xc
 2384 04ff 4C010000 		.4byte	.LASF61
 2385 0503 01       		.byte	0x1
 2386 0504 A005     		.2byte	0x5a0
 2387 0506 6B000000 		.4byte	0x6b
 2388 050a 02       		.uleb128 0x2
 2389 050b 91       		.byte	0x91
 2390 050c 6F       		.sleb128 -17
 2391 050d 13       		.uleb128 0x13
 2392 050e 12000000 		.4byte	.LBB2
 2393 0512 6C000000 		.4byte	.LBE2-.LBB2
 2394 0516 0E       		.uleb128 0xe
 2395 0517 ED010000 		.4byte	.LASF62
 2396 051b 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 71


 2397 051c A805     		.2byte	0x5a8
 2398 051e 6B000000 		.4byte	0x6b
 2399 0522 02       		.uleb128 0x2
 2400 0523 91       		.byte	0x91
 2401 0524 77       		.sleb128 -9
 2402 0525 0E       		.uleb128 0xe
 2403 0526 9B000000 		.4byte	.LASF63
 2404 052a 01       		.byte	0x1
 2405 052b D005     		.2byte	0x5d0
 2406 052d 6B000000 		.4byte	0x6b
 2407 0531 05       		.uleb128 0x5
 2408 0532 03       		.byte	0x3
 2409 0533 08000000 		.4byte	txPeriod.5008
 2410 0537 00       		.byte	0
 2411 0538 00       		.byte	0
 2412 0539 0B       		.uleb128 0xb
 2413 053a 1E030000 		.4byte	.LASF64
 2414 053e 01       		.byte	0x1
 2415 053f 2406     		.2byte	0x624
 2416 0541 00000000 		.4byte	.LFB26
 2417 0545 14000000 		.4byte	.LFE26-.LFB26
 2418 0549 01       		.uleb128 0x1
 2419 054a 9C       		.byte	0x9c
 2420 054b 5F050000 		.4byte	0x55f
 2421 054f 0C       		.uleb128 0xc
 2422 0550 D9000000 		.4byte	.LASF42
 2423 0554 01       		.byte	0x1
 2424 0555 2406     		.2byte	0x624
 2425 0557 6B000000 		.4byte	0x6b
 2426 055b 02       		.uleb128 0x2
 2427 055c 91       		.byte	0x91
 2428 055d 77       		.sleb128 -9
 2429 055e 00       		.byte	0
 2430 055f 14       		.uleb128 0x14
 2431 0560 3D000000 		.4byte	.LASF65
 2432 0564 01       		.byte	0x1
 2433 0565 1B       		.byte	0x1b
 2434 0566 6B000000 		.4byte	0x6b
 2435 056a 05       		.uleb128 0x5
 2436 056b 03       		.byte	0x3
 2437 056c 00000000 		.4byte	PC_initVar
 2438 0570 14       		.uleb128 0x14
 2439 0571 2B040000 		.4byte	.LASF66
 2440 0575 01       		.byte	0x1
 2441 0576 24       		.byte	0x24
 2442 0577 6B000000 		.4byte	0x6b
 2443 057b 05       		.uleb128 0x5
 2444 057c 03       		.byte	0x3
 2445 057d 00000000 		.4byte	PC_errorStatus
 2446 0581 15       		.uleb128 0x15
 2447 0582 6B000000 		.4byte	0x6b
 2448 0586 92050000 		.4byte	0x592
 2449 058a 16       		.uleb128 0x16
 2450 058b D3000000 		.4byte	0xd3
 2451 058f DB05     		.2byte	0x5db
 2452 0591 00       		.byte	0
 2453 0592 14       		.uleb128 0x14
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 72


 2454 0593 73030000 		.4byte	.LASF67
 2455 0597 01       		.byte	0x1
 2456 0598 25       		.byte	0x25
 2457 0599 A3050000 		.4byte	0x5a3
 2458 059d 05       		.uleb128 0x5
 2459 059e 03       		.byte	0x3
 2460 059f 00000000 		.4byte	PC_rxBuffer
 2461 05a3 06       		.uleb128 0x6
 2462 05a4 81050000 		.4byte	0x581
 2463 05a8 14       		.uleb128 0x14
 2464 05a9 2D000000 		.4byte	.LASF68
 2465 05ad 01       		.byte	0x1
 2466 05ae 26       		.byte	0x26
 2467 05af BD000000 		.4byte	0xbd
 2468 05b3 05       		.uleb128 0x5
 2469 05b4 03       		.byte	0x3
 2470 05b5 00000000 		.4byte	PC_rxBufferRead
 2471 05b9 14       		.uleb128 0x14
 2472 05ba 08010000 		.4byte	.LASF69
 2473 05be 01       		.byte	0x1
 2474 05bf 27       		.byte	0x27
 2475 05c0 BD000000 		.4byte	0xbd
 2476 05c4 05       		.uleb128 0x5
 2477 05c5 03       		.byte	0x3
 2478 05c6 00000000 		.4byte	PC_rxBufferWrite
 2479 05ca 14       		.uleb128 0x14
 2480 05cb 3A040000 		.4byte	.LASF70
 2481 05cf 01       		.byte	0x1
 2482 05d0 28       		.byte	0x28
 2483 05d1 B8000000 		.4byte	0xb8
 2484 05d5 05       		.uleb128 0x5
 2485 05d6 03       		.byte	0x3
 2486 05d7 00000000 		.4byte	PC_rxBufferLoopDetect
 2487 05db 14       		.uleb128 0x14
 2488 05dc 82010000 		.4byte	.LASF71
 2489 05e0 01       		.byte	0x1
 2490 05e1 29       		.byte	0x29
 2491 05e2 B8000000 		.4byte	0xb8
 2492 05e6 05       		.uleb128 0x5
 2493 05e7 03       		.byte	0x3
 2494 05e8 00000000 		.4byte	PC_rxBufferOverflow
 2495 05ec 00       		.byte	0
 2496              		.section	.debug_abbrev,"",%progbits
 2497              	.Ldebug_abbrev0:
 2498 0000 01       		.uleb128 0x1
 2499 0001 11       		.uleb128 0x11
 2500 0002 01       		.byte	0x1
 2501 0003 25       		.uleb128 0x25
 2502 0004 0E       		.uleb128 0xe
 2503 0005 13       		.uleb128 0x13
 2504 0006 0B       		.uleb128 0xb
 2505 0007 03       		.uleb128 0x3
 2506 0008 0E       		.uleb128 0xe
 2507 0009 1B       		.uleb128 0x1b
 2508 000a 0E       		.uleb128 0xe
 2509 000b 55       		.uleb128 0x55
 2510 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 73


 2511 000d 11       		.uleb128 0x11
 2512 000e 01       		.uleb128 0x1
 2513 000f 10       		.uleb128 0x10
 2514 0010 17       		.uleb128 0x17
 2515 0011 00       		.byte	0
 2516 0012 00       		.byte	0
 2517 0013 02       		.uleb128 0x2
 2518 0014 24       		.uleb128 0x24
 2519 0015 00       		.byte	0
 2520 0016 0B       		.uleb128 0xb
 2521 0017 0B       		.uleb128 0xb
 2522 0018 3E       		.uleb128 0x3e
 2523 0019 0B       		.uleb128 0xb
 2524 001a 03       		.uleb128 0x3
 2525 001b 0E       		.uleb128 0xe
 2526 001c 00       		.byte	0
 2527 001d 00       		.byte	0
 2528 001e 03       		.uleb128 0x3
 2529 001f 24       		.uleb128 0x24
 2530 0020 00       		.byte	0
 2531 0021 0B       		.uleb128 0xb
 2532 0022 0B       		.uleb128 0xb
 2533 0023 3E       		.uleb128 0x3e
 2534 0024 0B       		.uleb128 0xb
 2535 0025 03       		.uleb128 0x3
 2536 0026 08       		.uleb128 0x8
 2537 0027 00       		.byte	0
 2538 0028 00       		.byte	0
 2539 0029 04       		.uleb128 0x4
 2540 002a 16       		.uleb128 0x16
 2541 002b 00       		.byte	0
 2542 002c 03       		.uleb128 0x3
 2543 002d 0E       		.uleb128 0xe
 2544 002e 3A       		.uleb128 0x3a
 2545 002f 0B       		.uleb128 0xb
 2546 0030 3B       		.uleb128 0x3b
 2547 0031 0B       		.uleb128 0xb
 2548 0032 49       		.uleb128 0x49
 2549 0033 13       		.uleb128 0x13
 2550 0034 00       		.byte	0
 2551 0035 00       		.byte	0
 2552 0036 05       		.uleb128 0x5
 2553 0037 16       		.uleb128 0x16
 2554 0038 00       		.byte	0
 2555 0039 03       		.uleb128 0x3
 2556 003a 0E       		.uleb128 0xe
 2557 003b 3A       		.uleb128 0x3a
 2558 003c 0B       		.uleb128 0xb
 2559 003d 3B       		.uleb128 0x3b
 2560 003e 05       		.uleb128 0x5
 2561 003f 49       		.uleb128 0x49
 2562 0040 13       		.uleb128 0x13
 2563 0041 00       		.byte	0
 2564 0042 00       		.byte	0
 2565 0043 06       		.uleb128 0x6
 2566 0044 35       		.uleb128 0x35
 2567 0045 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 74


 2568 0046 49       		.uleb128 0x49
 2569 0047 13       		.uleb128 0x13
 2570 0048 00       		.byte	0
 2571 0049 00       		.byte	0
 2572 004a 07       		.uleb128 0x7
 2573 004b 2E       		.uleb128 0x2e
 2574 004c 00       		.byte	0
 2575 004d 3F       		.uleb128 0x3f
 2576 004e 19       		.uleb128 0x19
 2577 004f 03       		.uleb128 0x3
 2578 0050 0E       		.uleb128 0xe
 2579 0051 3A       		.uleb128 0x3a
 2580 0052 0B       		.uleb128 0xb
 2581 0053 3B       		.uleb128 0x3b
 2582 0054 0B       		.uleb128 0xb
 2583 0055 27       		.uleb128 0x27
 2584 0056 19       		.uleb128 0x19
 2585 0057 11       		.uleb128 0x11
 2586 0058 01       		.uleb128 0x1
 2587 0059 12       		.uleb128 0x12
 2588 005a 06       		.uleb128 0x6
 2589 005b 40       		.uleb128 0x40
 2590 005c 18       		.uleb128 0x18
 2591 005d 9642     		.uleb128 0x2116
 2592 005f 19       		.uleb128 0x19
 2593 0060 00       		.byte	0
 2594 0061 00       		.byte	0
 2595 0062 08       		.uleb128 0x8
 2596 0063 2E       		.uleb128 0x2e
 2597 0064 01       		.byte	0x1
 2598 0065 3F       		.uleb128 0x3f
 2599 0066 19       		.uleb128 0x19
 2600 0067 03       		.uleb128 0x3
 2601 0068 0E       		.uleb128 0xe
 2602 0069 3A       		.uleb128 0x3a
 2603 006a 0B       		.uleb128 0xb
 2604 006b 3B       		.uleb128 0x3b
 2605 006c 0B       		.uleb128 0xb
 2606 006d 27       		.uleb128 0x27
 2607 006e 19       		.uleb128 0x19
 2608 006f 11       		.uleb128 0x11
 2609 0070 01       		.uleb128 0x1
 2610 0071 12       		.uleb128 0x12
 2611 0072 06       		.uleb128 0x6
 2612 0073 40       		.uleb128 0x40
 2613 0074 18       		.uleb128 0x18
 2614 0075 9642     		.uleb128 0x2116
 2615 0077 19       		.uleb128 0x19
 2616 0078 01       		.uleb128 0x1
 2617 0079 13       		.uleb128 0x13
 2618 007a 00       		.byte	0
 2619 007b 00       		.byte	0
 2620 007c 09       		.uleb128 0x9
 2621 007d 34       		.uleb128 0x34
 2622 007e 00       		.byte	0
 2623 007f 03       		.uleb128 0x3
 2624 0080 0E       		.uleb128 0xe
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 75


 2625 0081 3A       		.uleb128 0x3a
 2626 0082 0B       		.uleb128 0xb
 2627 0083 3B       		.uleb128 0x3b
 2628 0084 0B       		.uleb128 0xb
 2629 0085 49       		.uleb128 0x49
 2630 0086 13       		.uleb128 0x13
 2631 0087 02       		.uleb128 0x2
 2632 0088 18       		.uleb128 0x18
 2633 0089 00       		.byte	0
 2634 008a 00       		.byte	0
 2635 008b 0A       		.uleb128 0xa
 2636 008c 2E       		.uleb128 0x2e
 2637 008d 00       		.byte	0
 2638 008e 3F       		.uleb128 0x3f
 2639 008f 19       		.uleb128 0x19
 2640 0090 03       		.uleb128 0x3
 2641 0091 0E       		.uleb128 0xe
 2642 0092 3A       		.uleb128 0x3a
 2643 0093 0B       		.uleb128 0xb
 2644 0094 3B       		.uleb128 0x3b
 2645 0095 05       		.uleb128 0x5
 2646 0096 27       		.uleb128 0x27
 2647 0097 19       		.uleb128 0x19
 2648 0098 49       		.uleb128 0x49
 2649 0099 13       		.uleb128 0x13
 2650 009a 11       		.uleb128 0x11
 2651 009b 01       		.uleb128 0x1
 2652 009c 12       		.uleb128 0x12
 2653 009d 06       		.uleb128 0x6
 2654 009e 40       		.uleb128 0x40
 2655 009f 18       		.uleb128 0x18
 2656 00a0 9742     		.uleb128 0x2117
 2657 00a2 19       		.uleb128 0x19
 2658 00a3 00       		.byte	0
 2659 00a4 00       		.byte	0
 2660 00a5 0B       		.uleb128 0xb
 2661 00a6 2E       		.uleb128 0x2e
 2662 00a7 01       		.byte	0x1
 2663 00a8 3F       		.uleb128 0x3f
 2664 00a9 19       		.uleb128 0x19
 2665 00aa 03       		.uleb128 0x3
 2666 00ab 0E       		.uleb128 0xe
 2667 00ac 3A       		.uleb128 0x3a
 2668 00ad 0B       		.uleb128 0xb
 2669 00ae 3B       		.uleb128 0x3b
 2670 00af 05       		.uleb128 0x5
 2671 00b0 27       		.uleb128 0x27
 2672 00b1 19       		.uleb128 0x19
 2673 00b2 11       		.uleb128 0x11
 2674 00b3 01       		.uleb128 0x1
 2675 00b4 12       		.uleb128 0x12
 2676 00b5 06       		.uleb128 0x6
 2677 00b6 40       		.uleb128 0x40
 2678 00b7 18       		.uleb128 0x18
 2679 00b8 9742     		.uleb128 0x2117
 2680 00ba 19       		.uleb128 0x19
 2681 00bb 01       		.uleb128 0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 76


 2682 00bc 13       		.uleb128 0x13
 2683 00bd 00       		.byte	0
 2684 00be 00       		.byte	0
 2685 00bf 0C       		.uleb128 0xc
 2686 00c0 05       		.uleb128 0x5
 2687 00c1 00       		.byte	0
 2688 00c2 03       		.uleb128 0x3
 2689 00c3 0E       		.uleb128 0xe
 2690 00c4 3A       		.uleb128 0x3a
 2691 00c5 0B       		.uleb128 0xb
 2692 00c6 3B       		.uleb128 0x3b
 2693 00c7 05       		.uleb128 0x5
 2694 00c8 49       		.uleb128 0x49
 2695 00c9 13       		.uleb128 0x13
 2696 00ca 02       		.uleb128 0x2
 2697 00cb 18       		.uleb128 0x18
 2698 00cc 00       		.byte	0
 2699 00cd 00       		.byte	0
 2700 00ce 0D       		.uleb128 0xd
 2701 00cf 2E       		.uleb128 0x2e
 2702 00d0 01       		.byte	0x1
 2703 00d1 3F       		.uleb128 0x3f
 2704 00d2 19       		.uleb128 0x19
 2705 00d3 03       		.uleb128 0x3
 2706 00d4 0E       		.uleb128 0xe
 2707 00d5 3A       		.uleb128 0x3a
 2708 00d6 0B       		.uleb128 0xb
 2709 00d7 3B       		.uleb128 0x3b
 2710 00d8 05       		.uleb128 0x5
 2711 00d9 27       		.uleb128 0x27
 2712 00da 19       		.uleb128 0x19
 2713 00db 49       		.uleb128 0x49
 2714 00dc 13       		.uleb128 0x13
 2715 00dd 11       		.uleb128 0x11
 2716 00de 01       		.uleb128 0x1
 2717 00df 12       		.uleb128 0x12
 2718 00e0 06       		.uleb128 0x6
 2719 00e1 40       		.uleb128 0x40
 2720 00e2 18       		.uleb128 0x18
 2721 00e3 9742     		.uleb128 0x2117
 2722 00e5 19       		.uleb128 0x19
 2723 00e6 01       		.uleb128 0x1
 2724 00e7 13       		.uleb128 0x13
 2725 00e8 00       		.byte	0
 2726 00e9 00       		.byte	0
 2727 00ea 0E       		.uleb128 0xe
 2728 00eb 34       		.uleb128 0x34
 2729 00ec 00       		.byte	0
 2730 00ed 03       		.uleb128 0x3
 2731 00ee 0E       		.uleb128 0xe
 2732 00ef 3A       		.uleb128 0x3a
 2733 00f0 0B       		.uleb128 0xb
 2734 00f1 3B       		.uleb128 0x3b
 2735 00f2 05       		.uleb128 0x5
 2736 00f3 49       		.uleb128 0x49
 2737 00f4 13       		.uleb128 0x13
 2738 00f5 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 77


 2739 00f6 18       		.uleb128 0x18
 2740 00f7 00       		.byte	0
 2741 00f8 00       		.byte	0
 2742 00f9 0F       		.uleb128 0xf
 2743 00fa 2E       		.uleb128 0x2e
 2744 00fb 01       		.byte	0x1
 2745 00fc 3F       		.uleb128 0x3f
 2746 00fd 19       		.uleb128 0x19
 2747 00fe 03       		.uleb128 0x3
 2748 00ff 0E       		.uleb128 0xe
 2749 0100 3A       		.uleb128 0x3a
 2750 0101 0B       		.uleb128 0xb
 2751 0102 3B       		.uleb128 0x3b
 2752 0103 05       		.uleb128 0x5
 2753 0104 27       		.uleb128 0x27
 2754 0105 19       		.uleb128 0x19
 2755 0106 49       		.uleb128 0x49
 2756 0107 13       		.uleb128 0x13
 2757 0108 11       		.uleb128 0x11
 2758 0109 01       		.uleb128 0x1
 2759 010a 12       		.uleb128 0x12
 2760 010b 06       		.uleb128 0x6
 2761 010c 40       		.uleb128 0x40
 2762 010d 18       		.uleb128 0x18
 2763 010e 9642     		.uleb128 0x2116
 2764 0110 19       		.uleb128 0x19
 2765 0111 01       		.uleb128 0x1
 2766 0112 13       		.uleb128 0x13
 2767 0113 00       		.byte	0
 2768 0114 00       		.byte	0
 2769 0115 10       		.uleb128 0x10
 2770 0116 2E       		.uleb128 0x2e
 2771 0117 01       		.byte	0x1
 2772 0118 3F       		.uleb128 0x3f
 2773 0119 19       		.uleb128 0x19
 2774 011a 03       		.uleb128 0x3
 2775 011b 0E       		.uleb128 0xe
 2776 011c 3A       		.uleb128 0x3a
 2777 011d 0B       		.uleb128 0xb
 2778 011e 3B       		.uleb128 0x3b
 2779 011f 05       		.uleb128 0x5
 2780 0120 27       		.uleb128 0x27
 2781 0121 19       		.uleb128 0x19
 2782 0122 11       		.uleb128 0x11
 2783 0123 01       		.uleb128 0x1
 2784 0124 12       		.uleb128 0x12
 2785 0125 06       		.uleb128 0x6
 2786 0126 40       		.uleb128 0x40
 2787 0127 18       		.uleb128 0x18
 2788 0128 9642     		.uleb128 0x2116
 2789 012a 19       		.uleb128 0x19
 2790 012b 01       		.uleb128 0x1
 2791 012c 13       		.uleb128 0x13
 2792 012d 00       		.byte	0
 2793 012e 00       		.byte	0
 2794 012f 11       		.uleb128 0x11
 2795 0130 0F       		.uleb128 0xf
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 78


 2796 0131 00       		.byte	0
 2797 0132 0B       		.uleb128 0xb
 2798 0133 0B       		.uleb128 0xb
 2799 0134 49       		.uleb128 0x49
 2800 0135 13       		.uleb128 0x13
 2801 0136 00       		.byte	0
 2802 0137 00       		.byte	0
 2803 0138 12       		.uleb128 0x12
 2804 0139 26       		.uleb128 0x26
 2805 013a 00       		.byte	0
 2806 013b 49       		.uleb128 0x49
 2807 013c 13       		.uleb128 0x13
 2808 013d 00       		.byte	0
 2809 013e 00       		.byte	0
 2810 013f 13       		.uleb128 0x13
 2811 0140 0B       		.uleb128 0xb
 2812 0141 01       		.byte	0x1
 2813 0142 11       		.uleb128 0x11
 2814 0143 01       		.uleb128 0x1
 2815 0144 12       		.uleb128 0x12
 2816 0145 06       		.uleb128 0x6
 2817 0146 00       		.byte	0
 2818 0147 00       		.byte	0
 2819 0148 14       		.uleb128 0x14
 2820 0149 34       		.uleb128 0x34
 2821 014a 00       		.byte	0
 2822 014b 03       		.uleb128 0x3
 2823 014c 0E       		.uleb128 0xe
 2824 014d 3A       		.uleb128 0x3a
 2825 014e 0B       		.uleb128 0xb
 2826 014f 3B       		.uleb128 0x3b
 2827 0150 0B       		.uleb128 0xb
 2828 0151 49       		.uleb128 0x49
 2829 0152 13       		.uleb128 0x13
 2830 0153 3F       		.uleb128 0x3f
 2831 0154 19       		.uleb128 0x19
 2832 0155 02       		.uleb128 0x2
 2833 0156 18       		.uleb128 0x18
 2834 0157 00       		.byte	0
 2835 0158 00       		.byte	0
 2836 0159 15       		.uleb128 0x15
 2837 015a 01       		.uleb128 0x1
 2838 015b 01       		.byte	0x1
 2839 015c 49       		.uleb128 0x49
 2840 015d 13       		.uleb128 0x13
 2841 015e 01       		.uleb128 0x1
 2842 015f 13       		.uleb128 0x13
 2843 0160 00       		.byte	0
 2844 0161 00       		.byte	0
 2845 0162 16       		.uleb128 0x16
 2846 0163 21       		.uleb128 0x21
 2847 0164 00       		.byte	0
 2848 0165 49       		.uleb128 0x49
 2849 0166 13       		.uleb128 0x13
 2850 0167 2F       		.uleb128 0x2f
 2851 0168 05       		.uleb128 0x5
 2852 0169 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 79


 2853 016a 00       		.byte	0
 2854 016b 00       		.byte	0
 2855              		.section	.debug_aranges,"",%progbits
 2856 0000 EC000000 		.4byte	0xec
 2857 0004 0200     		.2byte	0x2
 2858 0006 00000000 		.4byte	.Ldebug_info0
 2859 000a 04       		.byte	0x4
 2860 000b 00       		.byte	0
 2861 000c 0000     		.2byte	0
 2862 000e 0000     		.2byte	0
 2863 0010 00000000 		.4byte	.LFB0
 2864 0014 20000000 		.4byte	.LFE0-.LFB0
 2865 0018 00000000 		.4byte	.LFB1
 2866 001c 58000000 		.4byte	.LFE1-.LFB1
 2867 0020 00000000 		.4byte	.LFB2
 2868 0024 68000000 		.4byte	.LFE2-.LFB2
 2869 0028 00000000 		.4byte	.LFB3
 2870 002c 68000000 		.4byte	.LFE3-.LFB3
 2871 0030 00000000 		.4byte	.LFB4
 2872 0034 10000000 		.4byte	.LFE4-.LFB4
 2873 0038 00000000 		.4byte	.LFB5
 2874 003c 14000000 		.4byte	.LFE5-.LFB5
 2875 0040 00000000 		.4byte	.LFB6
 2876 0044 20000000 		.4byte	.LFE6-.LFB6
 2877 0048 00000000 		.4byte	.LFB7
 2878 004c 98000000 		.4byte	.LFE7-.LFB7
 2879 0050 00000000 		.4byte	.LFB8
 2880 0054 40000000 		.4byte	.LFE8-.LFB8
 2881 0058 00000000 		.4byte	.LFB9
 2882 005c BC000000 		.4byte	.LFE9-.LFB9
 2883 0060 00000000 		.4byte	.LFB10
 2884 0064 44000000 		.4byte	.LFE10-.LFB10
 2885 0068 00000000 		.4byte	.LFB11
 2886 006c 94000000 		.4byte	.LFE11-.LFB11
 2887 0070 00000000 		.4byte	.LFB12
 2888 0074 7C000000 		.4byte	.LFE12-.LFB12
 2889 0078 00000000 		.4byte	.LFB13
 2890 007c 14000000 		.4byte	.LFE13-.LFB13
 2891 0080 00000000 		.4byte	.LFB14
 2892 0084 20000000 		.4byte	.LFE14-.LFB14
 2893 0088 00000000 		.4byte	.LFB15
 2894 008c 20000000 		.4byte	.LFE15-.LFB15
 2895 0090 00000000 		.4byte	.LFB16
 2896 0094 20000000 		.4byte	.LFE16-.LFB16
 2897 0098 00000000 		.4byte	.LFB17
 2898 009c 2C000000 		.4byte	.LFE17-.LFB17
 2899 00a0 00000000 		.4byte	.LFB18
 2900 00a4 18000000 		.4byte	.LFE18-.LFB18
 2901 00a8 00000000 		.4byte	.LFB19
 2902 00ac 34000000 		.4byte	.LFE19-.LFB19
 2903 00b0 00000000 		.4byte	.LFB20
 2904 00b4 40000000 		.4byte	.LFE20-.LFB20
 2905 00b8 00000000 		.4byte	.LFB21
 2906 00bc 40000000 		.4byte	.LFE21-.LFB21
 2907 00c0 00000000 		.4byte	.LFB22
 2908 00c4 30000000 		.4byte	.LFE22-.LFB22
 2909 00c8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 80


 2910 00cc 44000000 		.4byte	.LFE23-.LFB23
 2911 00d0 00000000 		.4byte	.LFB24
 2912 00d4 40000000 		.4byte	.LFE24-.LFB24
 2913 00d8 00000000 		.4byte	.LFB25
 2914 00dc 9C000000 		.4byte	.LFE25-.LFB25
 2915 00e0 00000000 		.4byte	.LFB26
 2916 00e4 14000000 		.4byte	.LFE26-.LFB26
 2917 00e8 00000000 		.4byte	0
 2918 00ec 00000000 		.4byte	0
 2919              		.section	.debug_ranges,"",%progbits
 2920              	.Ldebug_ranges0:
 2921 0000 00000000 		.4byte	.LFB0
 2922 0004 20000000 		.4byte	.LFE0
 2923 0008 00000000 		.4byte	.LFB1
 2924 000c 58000000 		.4byte	.LFE1
 2925 0010 00000000 		.4byte	.LFB2
 2926 0014 68000000 		.4byte	.LFE2
 2927 0018 00000000 		.4byte	.LFB3
 2928 001c 68000000 		.4byte	.LFE3
 2929 0020 00000000 		.4byte	.LFB4
 2930 0024 10000000 		.4byte	.LFE4
 2931 0028 00000000 		.4byte	.LFB5
 2932 002c 14000000 		.4byte	.LFE5
 2933 0030 00000000 		.4byte	.LFB6
 2934 0034 20000000 		.4byte	.LFE6
 2935 0038 00000000 		.4byte	.LFB7
 2936 003c 98000000 		.4byte	.LFE7
 2937 0040 00000000 		.4byte	.LFB8
 2938 0044 40000000 		.4byte	.LFE8
 2939 0048 00000000 		.4byte	.LFB9
 2940 004c BC000000 		.4byte	.LFE9
 2941 0050 00000000 		.4byte	.LFB10
 2942 0054 44000000 		.4byte	.LFE10
 2943 0058 00000000 		.4byte	.LFB11
 2944 005c 94000000 		.4byte	.LFE11
 2945 0060 00000000 		.4byte	.LFB12
 2946 0064 7C000000 		.4byte	.LFE12
 2947 0068 00000000 		.4byte	.LFB13
 2948 006c 14000000 		.4byte	.LFE13
 2949 0070 00000000 		.4byte	.LFB14
 2950 0074 20000000 		.4byte	.LFE14
 2951 0078 00000000 		.4byte	.LFB15
 2952 007c 20000000 		.4byte	.LFE15
 2953 0080 00000000 		.4byte	.LFB16
 2954 0084 20000000 		.4byte	.LFE16
 2955 0088 00000000 		.4byte	.LFB17
 2956 008c 2C000000 		.4byte	.LFE17
 2957 0090 00000000 		.4byte	.LFB18
 2958 0094 18000000 		.4byte	.LFE18
 2959 0098 00000000 		.4byte	.LFB19
 2960 009c 34000000 		.4byte	.LFE19
 2961 00a0 00000000 		.4byte	.LFB20
 2962 00a4 40000000 		.4byte	.LFE20
 2963 00a8 00000000 		.4byte	.LFB21
 2964 00ac 40000000 		.4byte	.LFE21
 2965 00b0 00000000 		.4byte	.LFB22
 2966 00b4 30000000 		.4byte	.LFE22
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 81


 2967 00b8 00000000 		.4byte	.LFB23
 2968 00bc 44000000 		.4byte	.LFE23
 2969 00c0 00000000 		.4byte	.LFB24
 2970 00c4 40000000 		.4byte	.LFE24
 2971 00c8 00000000 		.4byte	.LFB25
 2972 00cc 9C000000 		.4byte	.LFE25
 2973 00d0 00000000 		.4byte	.LFB26
 2974 00d4 14000000 		.4byte	.LFE26
 2975 00d8 00000000 		.4byte	0
 2976 00dc 00000000 		.4byte	0
 2977              		.section	.debug_line,"",%progbits
 2978              	.Ldebug_line0:
 2979 0000 06030000 		.section	.debug_str,"MS",%progbits,1
 2979      02004100 
 2979      00000201 
 2979      FB0E0D00 
 2979      01010101 
 2980              	.LASF10:
 2981 0000 75696E74 		.ascii	"uint16\000"
 2981      313600
 2982              	.LASF19:
 2983 0007 50435F53 		.ascii	"PC_Start\000"
 2983      74617274 
 2983      00
 2984              	.LASF34:
 2985 0010 50435F47 		.ascii	"PC_GetChar\000"
 2985      65744368 
 2985      617200
 2986              	.LASF48:
 2987 001b 74784461 		.ascii	"txDataByte\000"
 2987      74614279 
 2987      746500
 2988              	.LASF53:
 2989 0026 73747269 		.ascii	"string\000"
 2989      6E6700
 2990              	.LASF68:
 2991 002d 50435F72 		.ascii	"PC_rxBufferRead\000"
 2991      78427566 
 2991      66657252 
 2991      65616400 
 2992              	.LASF65:
 2993 003d 50435F69 		.ascii	"PC_initVar\000"
 2993      6E697456 
 2993      617200
 2994              	.LASF7:
 2995 0048 6C6F6E67 		.ascii	"long long unsigned int\000"
 2995      206C6F6E 
 2995      6720756E 
 2995      7369676E 
 2995      65642069 
 2996              	.LASF51:
 2997 005f 50435F50 		.ascii	"PC_PutChar\000"
 2997      75744368 
 2997      617200
 2998              	.LASF6:
 2999 006a 6C6F6E67 		.ascii	"long long int\000"
 2999      206C6F6E 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 82


 2999      6720696E 
 2999      7400
 3000              	.LASF0:
 3001 0078 7369676E 		.ascii	"signed char\000"
 3001      65642063 
 3001      68617200 
 3002              	.LASF49:
 3003 0084 50435F52 		.ascii	"PC_ReadControlRegister\000"
 3003      65616443 
 3003      6F6E7472 
 3003      6F6C5265 
 3003      67697374 
 3004              	.LASF63:
 3005 009b 74785065 		.ascii	"txPeriod\000"
 3005      72696F64 
 3005      00
 3006              	.LASF58:
 3007 00a4 50435F47 		.ascii	"PC_GetTxBufferSize\000"
 3007      65745478 
 3007      42756666 
 3007      65725369 
 3007      7A6500
 3008              	.LASF55:
 3009 00b7 50435F50 		.ascii	"PC_PutArray\000"
 3009      75744172 
 3009      72617900 
 3010              	.LASF4:
 3011 00c3 6C6F6E67 		.ascii	"long int\000"
 3011      20696E74 
 3011      00
 3012              	.LASF9:
 3013 00cc 75696E74 		.ascii	"uint8\000"
 3013      3800
 3014              	.LASF13:
 3015 00d2 646F7562 		.ascii	"double\000"
 3015      6C6500
 3016              	.LASF42:
 3017 00d9 61646472 		.ascii	"addressMode\000"
 3017      6573734D 
 3017      6F646500 
 3018              	.LASF57:
 3019 00e5 50435F50 		.ascii	"PC_PutCRLF\000"
 3019      75744352 
 3019      4C4600
 3020              	.LASF40:
 3021 00f0 50435F43 		.ascii	"PC_ClearRxBuffer\000"
 3021      6C656172 
 3021      52784275 
 3021      66666572 
 3021      00
 3022              	.LASF11:
 3023 0101 75696E74 		.ascii	"uint32\000"
 3023      333200
 3024              	.LASF69:
 3025 0108 50435F72 		.ascii	"PC_rxBufferWrite\000"
 3025      78427566 
 3025      66657257 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 83


 3025      72697465 
 3025      00
 3026              	.LASF26:
 3027 0119 636F6E74 		.ascii	"control\000"
 3027      726F6C00 
 3028              	.LASF45:
 3029 0121 50435F53 		.ascii	"PC_SetRxAddress2\000"
 3029      65745278 
 3029      41646472 
 3029      65737332 
 3029      00
 3030              	.LASF52:
 3031 0132 50435F50 		.ascii	"PC_PutString\000"
 3031      75745374 
 3031      72696E67 
 3031      00
 3032              	.LASF60:
 3033 013f 50435F53 		.ascii	"PC_SendBreak\000"
 3033      656E6442 
 3033      7265616B 
 3033      00
 3034              	.LASF61:
 3035 014c 7265744D 		.ascii	"retMode\000"
 3035      6F646500 
 3036              	.LASF8:
 3037 0154 756E7369 		.ascii	"unsigned int\000"
 3037      676E6564 
 3037      20696E74 
 3037      00
 3038              	.LASF37:
 3039 0161 6C6F6345 		.ascii	"locErrorStatus\000"
 3039      72726F72 
 3039      53746174 
 3039      757300
 3040              	.LASF5:
 3041 0170 6C6F6E67 		.ascii	"long unsigned int\000"
 3041      20756E73 
 3041      69676E65 
 3041      6420696E 
 3041      7400
 3042              	.LASF71:
 3043 0182 50435F72 		.ascii	"PC_rxBufferOverflow\000"
 3043      78427566 
 3043      6665724F 
 3043      76657266 
 3043      6C6F7700 
 3044              	.LASF39:
 3045 0196 73697A65 		.ascii	"size\000"
 3045      00
 3046              	.LASF3:
 3047 019b 73686F72 		.ascii	"short unsigned int\000"
 3047      7420756E 
 3047      7369676E 
 3047      65642069 
 3047      6E7400
 3048              	.LASF32:
 3049 01ae 50435F52 		.ascii	"PC_ReadRxStatus\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 84


 3049      65616452 
 3049      78537461 
 3049      74757300 
 3050              	.LASF54:
 3051 01be 62756649 		.ascii	"bufIndex\000"
 3051      6E646578 
 3051      00
 3052              	.LASF27:
 3053 01c7 696E7453 		.ascii	"intSrc\000"
 3053      726300
 3054              	.LASF22:
 3055 01ce 50435F53 		.ascii	"PC_Stop\000"
 3055      746F7000 
 3056              	.LASF30:
 3057 01d6 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3057      78427566 
 3057      66657257 
 3057      72697465 
 3057      00
 3058              	.LASF17:
 3059 01e7 72656733 		.ascii	"reg32\000"
 3059      3200
 3060              	.LASF62:
 3061 01ed 746D7053 		.ascii	"tmpStat\000"
 3061      74617400 
 3062              	.LASF73:
 3063 01f5 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PC.c\000"
 3063      6E657261 
 3063      7465645F 
 3063      536F7572 
 3063      63655C50 
 3064              	.LASF18:
 3065 0213 73697A65 		.ascii	"sizetype\000"
 3065      74797065 
 3065      00
 3066              	.LASF44:
 3067 021c 61646472 		.ascii	"address\000"
 3067      65737300 
 3068              	.LASF36:
 3069 0224 50435F47 		.ascii	"PC_GetByte\000"
 3069      65744279 
 3069      746500
 3070              	.LASF72:
 3071 022f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3071      4320342E 
 3071      392E3320 
 3071      32303135 
 3071      30333033 
 3072 0262 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3072      20726576 
 3072      6973696F 
 3072      6E203232 
 3072      31323230 
 3073 0295 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3073      66756E63 
 3073      74696F6E 
 3073      2D736563 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 85


 3073      74696F6E 
 3074              	.LASF35:
 3075 02bd 72785374 		.ascii	"rxStatus\000"
 3075      61747573 
 3075      00
 3076              	.LASF31:
 3077 02c6 50435F52 		.ascii	"PC_ReadRxData\000"
 3077      65616452 
 3077      78446174 
 3077      6100
 3078              	.LASF12:
 3079 02d4 666C6F61 		.ascii	"float\000"
 3079      7400
 3080              	.LASF16:
 3081 02da 72656738 		.ascii	"reg8\000"
 3081      00
 3082              	.LASF1:
 3083 02df 756E7369 		.ascii	"unsigned char\000"
 3083      676E6564 
 3083      20636861 
 3083      7200
 3084              	.LASF59:
 3085 02ed 50435F43 		.ascii	"PC_ClearTxBuffer\000"
 3085      6C656172 
 3085      54784275 
 3085      66666572 
 3085      00
 3086              	.LASF25:
 3087 02fe 50435F53 		.ascii	"PC_SetRxInterruptMode\000"
 3087      65745278 
 3087      496E7465 
 3087      72727570 
 3087      744D6F64 
 3088              	.LASF2:
 3089 0314 73686F72 		.ascii	"short int\000"
 3089      7420696E 
 3089      7400
 3090              	.LASF64:
 3091 031e 50435F53 		.ascii	"PC_SetTxAddressMode\000"
 3091      65745478 
 3091      41646472 
 3091      6573734D 
 3091      6F646500 
 3092              	.LASF74:
 3093 0332 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Documents\\Prueba_GRPFleet\\B"
 3093      73657273 
 3093      5C526563 
 3093      65706369 
 3093      6F6E5C44 
 3094 0360 42422E63 		.ascii	"BB.cydsn\000"
 3094      7964736E 
 3094      00
 3095              	.LASF56:
 3096 0369 62797465 		.ascii	"byteCount\000"
 3096      436F756E 
 3096      7400
 3097              	.LASF67:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 86


 3098 0373 50435F72 		.ascii	"PC_rxBuffer\000"
 3098      78427566 
 3098      66657200 
 3099              	.LASF28:
 3100 037f 72784461 		.ascii	"rxData\000"
 3100      746100
 3101              	.LASF38:
 3102 0386 50435F47 		.ascii	"PC_GetRxBufferSize\000"
 3102      65745278 
 3102      42756666 
 3102      65725369 
 3102      7A6500
 3103              	.LASF15:
 3104 0399 63686172 		.ascii	"char\000"
 3104      00
 3105              	.LASF50:
 3106 039e 50435F52 		.ascii	"PC_ReadTxStatus\000"
 3106      65616454 
 3106      78537461 
 3106      74757300 
 3107              	.LASF24:
 3108 03ae 50435F57 		.ascii	"PC_WriteControlRegister\000"
 3108      72697465 
 3108      436F6E74 
 3108      726F6C52 
 3108      65676973 
 3109              	.LASF14:
 3110 03c6 63686172 		.ascii	"char8\000"
 3110      3800
 3111              	.LASF43:
 3112 03cc 50435F53 		.ascii	"PC_SetRxAddress1\000"
 3112      65745278 
 3112      41646472 
 3112      65737331 
 3112      00
 3113              	.LASF20:
 3114 03dd 50435F49 		.ascii	"PC_Init\000"
 3114      6E697400 
 3115              	.LASF29:
 3116 03e5 6C6F6352 		.ascii	"locRxBufferRead\000"
 3116      78427566 
 3116      66657252 
 3116      65616400 
 3117              	.LASF23:
 3118 03f5 656E6162 		.ascii	"enableInterrupts\000"
 3118      6C65496E 
 3118      74657272 
 3118      75707473 
 3118      00
 3119              	.LASF33:
 3120 0406 73746174 		.ascii	"status\000"
 3120      757300
 3121              	.LASF41:
 3122 040d 50435F53 		.ascii	"PC_SetRxAddressMode\000"
 3122      65745278 
 3122      41646472 
 3122      6573734D 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc0htriO.s 			page 87


 3122      6F646500 
 3123              	.LASF21:
 3124 0421 50435F45 		.ascii	"PC_Enable\000"
 3124      6E61626C 
 3124      6500
 3125              	.LASF66:
 3126 042b 50435F65 		.ascii	"PC_errorStatus\000"
 3126      72726F72 
 3126      53746174 
 3126      757300
 3127              	.LASF70:
 3128 043a 50435F72 		.ascii	"PC_rxBufferLoopDetect\000"
 3128      78427566 
 3128      6665724C 
 3128      6F6F7044 
 3128      65746563 
 3129              	.LASF46:
 3130 0450 50435F53 		.ascii	"PC_SetTxInterruptMode\000"
 3130      65745478 
 3130      496E7465 
 3130      72727570 
 3130      744D6F64 
 3131              	.LASF47:
 3132 0466 50435F57 		.ascii	"PC_WriteTxData\000"
 3132      72697465 
 3132      54784461 
 3132      746100
 3133              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
